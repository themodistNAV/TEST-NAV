OBJECT Table 9086964 nF. Matrix Context
{
  OBJECT-PROPERTIES
  {
    Date=30/10/16;
    Time=[ 6:11:31 PM];
    Version List=NF2016.17;
  }
  PROPERTIES
  {
    DataPerCompany=No;
    CaptionML=[ENU=nForcement Matrix Context;
               ENG=nForcement Matrix Context];
  }
  FIELDS
  {
    { 1   ;   ;ID                  ;Integer       ;CaptionML=[ENU=ID;
                                                              ENG=ID] }
    { 10  ;   ;Parent Table ID     ;Integer       ;CaptionML=[ENU=Parent Table ID;
                                                              ENG=Parent Table ID] }
    { 11  ;   ;Parent ID           ;Integer       ;OnValidate=VAR
                                                                lEmptyGuid@1000000000 : GUID;
                                                              BEGIN
                                                              END;

                                                   CaptionML=[ENU=Parent ID;
                                                              ENG=Parent ID] }
    { 20  ;   ;Row Table ID        ;Integer       ;CaptionML=[ENU=Row Table ID;
                                                              ENG=Row Table ID] }
    { 30  ;   ;Column Table ID     ;Integer       ;CaptionML=[ENU=Column Table ID;
                                                              ENG=Column Table ID] }
    { 40  ;   ;Column Set Size     ;Integer       ;CaptionML=[ENU=Column Set Size;
                                                              ENG=Column Set Size] }
    { 41  ;   ;Column Set Index    ;Integer       ;CaptionML=[ENU=Column Set Index;
                                                              ENG=Column Set Index] }
    { 42  ;   ;Column Maximum Set Index;Integer   ;CaptionML=[ENU=Column Maximum Set Index;
                                                              ENG=Column Maximum Set Index] }
    { 43  ;   ;Column Set Columns  ;Integer       ;CaptionML=[ENU=Column Set Columns;
                                                              ENG=Column Set Columns] }
    { 50  ;   ;Value Table ID      ;Integer       ;CaptionML=[ENU=Value Table ID;
                                                              ENG=Value Table ID] }
    { 60  ;   ;Show Type           ;Boolean       ;CaptionML=[ENU=Show Type;
                                                              ENG=Show Type] }
    { 70  ;   ;Previous Set Enabled;Boolean       ;CaptionML=[ENU=Previous Set Enabled;
                                                              ENG=Previous Set Enabled] }
    { 71  ;   ;Next Set Enabled    ;Boolean       ;CaptionML=[ENU=Next Set Enabled;
                                                              ENG=Next Set Enabled] }
    { 90  ;   ;Parent Table Name   ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObjWithCaption."Object Caption" WHERE (Object Type=CONST(Table),
                                                                                                                Object ID=FIELD(Parent Table ID)));
                                                   CaptionML=[ENU=Parent Table Name;
                                                              ENG=Parent Table Name];
                                                   Editable=No }
    { 91  ;   ;Row Table Name      ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObjWithCaption."Object Caption" WHERE (Object Type=CONST(Table),
                                                                                                                Object ID=FIELD(Row Table ID)));
                                                   CaptionML=[ENU=Row Table Name;
                                                              ENG=Row Table Name];
                                                   Editable=No }
    { 92  ;   ;Column Table Name   ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObjWithCaption."Object Caption" WHERE (Object Type=CONST(Table),
                                                                                                                Object ID=FIELD(Column Table ID)));
                                                   CaptionML=[ENU=Column Table Name;
                                                              ENG=Column Table Name];
                                                   Editable=No }
    { 93  ;   ;Value Table Name    ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObjWithCaption."Object Caption" WHERE (Object Type=CONST(Table),
                                                                                                                Object ID=FIELD(Value Table ID)));
                                                   CaptionML=[ENU=Value Table Name;
                                                              ENG=Value Table Name];
                                                   Editable=No }
    { 101 ;   ;Column 1 Caption    ;Text100       ;CaptionML=[ENU=Column 1 Caption;
                                                              ENG=Column 1 Caption] }
    { 102 ;   ;Column 2 Caption    ;Text100       ;CaptionML=[ENU=Column 2 Caption;
                                                              ENG=Column 2 Caption] }
    { 103 ;   ;Column 3 Caption    ;Text100       ;CaptionML=[ENU=Column 3 Caption;
                                                              ENG=Column 3 Caption] }
    { 104 ;   ;Column 4 Caption    ;Text100       ;CaptionML=[ENU=Column 4 Caption;
                                                              ENG=Column 4 Caption] }
    { 105 ;   ;Column 5 Caption    ;Text100       ;CaptionML=[ENU=Column 5 Caption;
                                                              ENG=Column 5 Caption] }
    { 106 ;   ;Column 6 Caption    ;Text100       ;CaptionML=[ENU=Column 6 Caption;
                                                              ENG=Column 6 Caption] }
    { 107 ;   ;Column 7 Caption    ;Text100       ;CaptionML=[ENU=Column 7 Caption;
                                                              ENG=Column 7 Caption] }
    { 108 ;   ;Column 8 Caption    ;Text100       ;CaptionML=[ENU=Column 8 Caption;
                                                              ENG=Column 8 Caption] }
    { 109 ;   ;Column 9 Caption    ;Text100       ;CaptionML=[ENU=Column 9 Caption;
                                                              ENG=Column 9 Caption] }
    { 110 ;   ;Column 10 Caption   ;Text100       ;CaptionML=[ENU=Column 10 Caption;
                                                              ENG=Column 10 Caption] }
    { 111 ;   ;Column 11 Caption   ;Text100       ;CaptionML=[ENU=Column 11 Caption;
                                                              ENG=Column 11 Caption] }
    { 112 ;   ;Column 12 Caption   ;Text100       ;CaptionML=[ENU=Column 12 Caption;
                                                              ENG=Column 12 Caption] }
    { 113 ;   ;Column 13 Caption   ;Text100       ;CaptionML=[ENU=Column 13 Caption;
                                                              ENG=Column 13 Caption] }
    { 114 ;   ;Column 14 Caption   ;Text100       ;CaptionML=[ENU=Column 14 Caption;
                                                              ENG=Column 14 Caption] }
    { 115 ;   ;Column 15 Caption   ;Text100       ;CaptionML=[ENU=Column 15 Caption;
                                                              ENG=Column 15 Caption] }
    { 116 ;   ;Column 16 Caption   ;Text100       ;CaptionML=[ENU=Column 16 Caption;
                                                              ENG=Column 16 Caption] }
    { 117 ;   ;Column 17 Caption   ;Text100       ;CaptionML=[ENU=Column 17 Caption;
                                                              ENG=Column 17 Caption] }
    { 118 ;   ;Column 18 Caption   ;Text100       ;CaptionML=[ENU=Column 18 Caption;
                                                              ENG=Column 18 Caption] }
    { 119 ;   ;Column 19 Caption   ;Text100       ;CaptionML=[ENU=Column 19 Caption;
                                                              ENG=Column 19 Caption] }
    { 120 ;   ;Column 20 Caption   ;Text100       ;CaptionML=[ENU=Column 20 Caption;
                                                              ENG=Column 20 Caption] }
    { 150 ;   ;Quick Filter Object Type;Option    ;CaptionML=[ENU=Quick Filter Object Type;
                                                              ENG=Quick Filter Object Type];
                                                   OptionCaptionML=[ENU=" ,Table,,Report,,Codeunit,XMLport,MenuSuite,Page,Query,System";
                                                                    ENG=" ,Table,,Report,,Codeunit,XMLport,MenuSuite,Page,Query,System"];
                                                   OptionString=[ ,Table,,Report,,Codeunit,XMLport,MenuSuite,Page,Query,System] }
    { 151 ;   ;Quick Filter Object ID;Integer     ;CaptionML=[ENU=Quick Filter Object ID;
                                                              ENG=Quick Filter Object ID] }
  }
  KEYS
  {
    {    ;ID                                      ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ColumnNfMatrixBuffer@1000000000 : TEMPORARY Record 9086965;
      ColumnIndexer@1000000001 : ARRAY [20] OF Integer;

    LOCAL PROCEDURE "--- Column Matrix Buffer ---"@1000000010();
    BEGIN
    END;

    PROCEDURE SetColumnNfMatrixBuffer@1000000000(VAR pColumnNfMatrixBuffer@1000000000 : Record 9086965);
    BEGIN
      ///<summary>Setting column matrix buffer</summary>
      ///<param name="pColumnNfMatrixBuffer">Source buffer</param>

      ColumnNfMatrixBuffer.COPY(pColumnNfMatrixBuffer, TRUE);
    END;

    PROCEDURE GetColumnNfMatrixBuffer@1000000001(VAR pColumnNfMatrixBuffer@1000000000 : Record 9086965);
    BEGIN
      ///<summary>Getting column matrix buffer</summary>
      ///<param name="pColumnNfMatrixBuffer">Destination buffer</param>

      pColumnNfMatrixBuffer.COPY(ColumnNfMatrixBuffer, TRUE);
    END;

    LOCAL PROCEDURE "--- Column Indexer ---"@1000000009();
    BEGIN
    END;

    PROCEDURE ClearColumnIndexer@1000000011();
    BEGIN
      ///<summary>Clearing column indexer</summary>

      CLEAR(ColumnIndexer);
    END;

    PROCEDURE ReadFromColumnIndexer@1000000014(pColumnIndex@1000000000 : Integer) : Integer;
    BEGIN
      ///<summary>Reading column ID from column indexer</summary>
      ///<param name="pColumnIndex">Column index</param>
      ///<returns>Column ID or zero if not found in the indexer</returns>

      EXIT(ColumnIndexer[pColumnIndex]);
    END;

    PROCEDURE WriteToColumnIndexer@1000000013(pColumnIndex@1000000000 : Integer;pColumnId@1000000001 : Integer);
    BEGIN
      ///<summary>Writing column ID into column indexer</summary>
      ///<param name="pColumnIndex">Column index</param>
      ///<param name="pColumnId">Column ID</param>

      ColumnIndexer[pColumnIndex] := pColumnId;
    END;

    LOCAL PROCEDURE "--- Column Captions ---"@1000000008();
    BEGIN
    END;

    PROCEDURE SetColumnCaption@1000000004(pIndex@1000000000 : Integer;pCaption@1000000001 : Text);
    VAR
      lRecordRef@1000000003 : RecordRef;
      lFieldRef@1000000002 : FieldRef;
    BEGIN
      ///<summary>Setting column caption (with given index)</summary>
      ///<param name="pIndex">The index</param>
      ///<param name="pCaption">The caption</param>

      lRecordRef.GETTABLE(Rec);
      lFieldRef := lRecordRef.FIELD(Rec.FIELDNO("Column 1 Caption") + pIndex - 1);
      lFieldRef.VALUE := COPYSTR(pCaption, 1, lFieldRef.LENGTH);
      lRecordRef.SETTABLE(Rec);
    END;

    PROCEDURE GetColumnCaption@1000000005(pIndex@1000000000 : Integer) : Text;
    VAR
      lRecordRef@1000000002 : RecordRef;
      lFieldRef@1000000001 : FieldRef;
    BEGIN
      ///<summary>Returning column caption (with given index)</summary>
      ///<param name="pIndex">The index</param>
      ///<returns>The caption</returns>

      lRecordRef.GETTABLE(Rec);
      lFieldRef := lRecordRef.FIELD(Rec.FIELDNO("Column 1 Caption") + pIndex - 1);
      EXIT(lFieldRef.VALUE);
    END;

    PROCEDURE ClearColumnCaptions@1000000002();
    VAR
      lCaptions@1000000000 : ARRAY [20] OF Text;
    BEGIN
      ///<summary>Clearing column captions</summary>

      SetColumnCaptions(lCaptions);
    END;

    PROCEDURE SetColumnCaptions@1000000006(pCaptions@1000000000 : ARRAY [20] OF Text);
    VAR
      lRecordRef@1000000002 : RecordRef;
      lFieldRef@1000000001 : FieldRef;
      lIndex@1000000003 : Integer;
    BEGIN
      ///<summary>Setting column captions (array)</summary>
      ///<param name="pCaptions">The source array</param>

      lRecordRef.GETTABLE(Rec);
      FOR lIndex := 1 TO 20 DO
      BEGIN
        lFieldRef := lRecordRef.FIELD(Rec.FIELDNO("Column 1 Caption") + lIndex - 1);
        lFieldRef.VALUE := COPYSTR(pCaptions[lIndex], 1, lFieldRef.LENGTH);
      END;
      lRecordRef.SETTABLE(Rec);
    END;

    PROCEDURE GetColumnCaptions@1000000007(VAR pCaptions@1000000000 : ARRAY [20] OF Text);
    VAR
      lRecordRef@1000000002 : RecordRef;
      lFieldRef@1000000001 : FieldRef;
      lIndex@1000000003 : Integer;
    BEGIN
      ///<summary>Returning column captions (array)</summary>
      ///<param name="pCaptions">The destination array</param>

      lRecordRef.GETTABLE(Rec);
      FOR lIndex := 1 TO 20 DO
      BEGIN
        lFieldRef := lRecordRef.FIELD(Rec.FIELDNO("Column 1 Caption") + lIndex - 1);
        pCaptions[lIndex] := lFieldRef.VALUE;
      END;
    END;

    BEGIN
    {
      ///<summary>Table used only as in-memory buffer as nForcement matrix context</summary>
      ///<remarks>The context keeps - in memory - all information necessary for the matrix to operate</remarks>
      ///<change version="NF2016.17" initials="JH" date="2016-05-03">Created</change>
    }
    END.
  }
}

