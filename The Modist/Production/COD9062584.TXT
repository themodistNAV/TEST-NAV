OBJECT Codeunit 9062584 Razor Template Engine Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=24/05/16;
    Time=11:46:01 AM;
    Version List=NH2016.16;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      RazorEngine@1000000000 : DotNet "'TheNavPeople.RazorTemplateEngine.9.0.0.0, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7648a032f3787148'.TheNavPeople.RazorTemplateEngine.XmlEngine";
      HasData@1000000001 : Boolean;
      TemplateCache@1000000002 : TEMPORARY Record 9062792;

    PROCEDURE Initialize@1000000002();
    BEGIN
      RazorEngine := RazorEngine.XmlEngine();
    END;

    PROCEDURE InitFromTemplCache@1000000001(TemplateCode@1000000000 : Code[50];ViewCode@1000000002 : Code[50];VAR NewEngineCreated@1000000003 : Boolean);
    VAR
      TemplateCache@1000000001 : Codeunit 9062733;
      CacheName@1000000004 : Text;
    BEGIN
      TemplateCache.Initialize();
      CacheName := TemplateCache.GetCacheKey(TemplateCode, ViewCode);
      NewEngineCreated := NOT(TemplateCache.Get(CacheName, RazorEngine));
      IF (NewEngineCreated) THEN BEGIN
        Initialize();
        TemplateCache.Add(CacheName, RazorEngine);
      END;
    END;

    PROCEDURE ClearCache@1000000003();
    BEGIN
      RazorEngine.ClearCache();
      TemplateCache.RESET();
      TemplateCache.DELETEALL();
    END;

    PROCEDURE SetXmlTextData@1000000004(XmlData@1000000000 : Text);
    BEGIN
      HasData := (XmlData <> '');
      IF (HasData) THEN
        RazorEngine.SetData(XmlData);
    END;

    PROCEDURE SetXmlPortData@1000000000(XmlPortNo@1000000000 : Integer;Record@1000000001 : Variant);
    VAR
      TempBlob@1000000002 : TEMPORARY Record 99008535;
      OutputStream@1000000006 : OutStream;
      InputStream@1000000005 : InStream;
      BigText@1000000004 : BigText;
      Text@1000000003 : Text;
    BEGIN
      TempBlob.Blob.CREATEOUTSTREAM(OutputStream);
      XMLPORT.EXPORT(XmlPortNo, OutputStream, Record);
      TempBlob.Blob.CREATEINSTREAM(InputStream);
      BigText.READ(InputStream);
      IF (BigText.LENGTH > 0) THEN
        BigText.GETSUBTEXT(Text, 1)
      ELSE
        Text := '';
      SetXmlTextData(Text);
    END;

    PROCEDURE SetDotNetData@1000000010(DotNetData@1000000000 : Variant);
    BEGIN
      RazorEngine.ModelData := DotNetData;
    END;

    PROCEDURE CompileTemplate@1000000005(TemplateCode@1000000000 : Code[50];AsName@1000000006 : Text);
    VAR
      RazorTemplate@1000000001 : Record 9062792;
      TempBlob@1000000002 : Record 99008535;
      InputStream@1000000003 : InStream;
      BigText@1000000004 : BigText;
      Text@1000000005 : Text;
    BEGIN
      IF (AsName = '') THEN
        AsName := TemplateCode;

      IF (NOT(TemplateCache.GET(TemplateCode))) THEN BEGIN
        RazorTemplate.GET(TemplateCode);
        IF (RazorTemplate.Type = RazorTemplate.Type::"Razor Html Template") THEN BEGIN
          Text := RazorTemplate.GetText();
          IF (Text <> '') THEN
            RazorEngine.CompileTemplate(Text, AsName);
        END;
        TemplateCache.Code := TemplateCode;
        TemplateCache.INSERT();
      END;
    END;

    PROCEDURE RunTemplate@1000000006(TemplateCode@1000000000 : Code[50];AsName@1000000001 : Text) : Text;
    BEGIN
      IF (AsName = '') THEN
        AsName := TemplateCode;

      IF (HasData) THEN BEGIN
        EXIT(RazorEngine.ParseTemplate(AsName));
      END;
      EXIT('');
    END;

    PROCEDURE GetError@1000000007() : Boolean;
    BEGIN
      EXIT(RazorEngine.Error);
    END;

    PROCEDURE GetErrorText@1000000008() : Text;
    BEGIN
      EXIT(RazorEngine.ErrorMessage);
    END;

    PROCEDURE ClearError@1000000009();
    BEGIN
      RazorEngine.ClearError();
    END;

    BEGIN
    {
      //DOC NA2016.11 AZ 16/11/2015 - Created
      //DOC NA2016.12 JH 27/12/2015 - Modified, new version
      //DOC NA2016.15 AZ 14/04/2016 - Razor Template Engine Cache Implementation
      //DOC NA2016.16 AZ 24/05/2016 - CfMD amendments
    }
    END.
  }
}

