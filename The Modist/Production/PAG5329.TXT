OBJECT Page 5329 CRM Redirect
{
  OBJECT-PROPERTIES
  {
    Date=22/12/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00.00.44365;
  }
  PROPERTIES
  {
    CaptionML=[ENU=CRM Redirect;
               ENG=CRM Redirect];
    SourceTable=Table5329;
    OnOpenPage=VAR
                 CRMIntegrationManagement@1000 : Codeunit 5330;
               BEGIN
                 IF NOT CRMIntegrationManagement.IsCRMIntegrationEnabled THEN
                   ERROR(CRMIntegrationNotEnabledErr);
               END;

    OnFindRecord=VAR
                   CRMIntegrationManagement@1015 : Codeunit 5330;
                   CRMInfo@1007 : Text;
                   CRMID@1009 : GUID;
                   CRMEntityTypeName@1000 : Text;
                 BEGIN
                   CRMInfo := ExtractCRMInfoFromFilters;
                   ExtractPartsFromCRMInfo(CRMInfo,CRMID,CRMEntityTypeName);

                   // Open the page of the coupled NAV record, or if it is not coupled, offer to create
                   IF NOT CRMIntegrationManagement.OpenCoupledNavRecordPage(CRMID,CRMEntityTypeName) THEN
                     // TODO: Give the user the option to couple to an existing NAV entity or create one from CRM
                     // For now just do nothing
                     ;

                   CurrPage.CLOSE;
                 END;

  }
  CONTROLS
  {
    { 1   ;    ;Container ;
                Name=Redirect;
                ContainerType=ContentArea }

  }
  CODE
  {
    VAR
      FilterRegexTok@1000 : TextConst '@@@={Locked};ENU=\A%1: @\*(.*)\*\z;ENG=\A%1: @\*(.*)\*\z';
      CRMInfoRegexTok@1001 : TextConst '@@@={Locked};ENU="CRMID:(\{[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\});CRMType:([a-z \/]*)\z";ENG="CRMID:(\{[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\});CRMType:([a-z \/]*)\z"';
      InvalidFilterErr@1002 : TextConst 'ENU=The URL contains an incorrectly formatted filter string and cannot be processed.;ENG=The URL contains an incorrectly formatted filter string and cannot be processed.';
      InvalidCRMIDErr@1003 : TextConst '@@@="%1 = Whatever was passed as CRM ID in the filter, but clearly not an actual CRM ID.";ENU=The CRM ID in the URL is not correctly formatted: %1.;ENG=The CRM ID in the URL is not correctly formatted: %1.';
      CRMIntegrationNotEnabledErr@1004 : TextConst 'ENU=Integration with Microsoft Dynamics CRM is not enabled.;ENG=Integration with Microsoft Dynamics CRM is not enabled.';

    PROCEDURE ExtractCRMInfoFromFilters@8() CRMInfo : Text;
    VAR
      RegexHelper@1004 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Text.RegularExpressions.Regex";
      MatchHelper@1003 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Text.RegularExpressions.Match";
      GroupCollectionHelper@1002 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Text.RegularExpressions.GroupCollection";
      GroupHelper@1001 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Text.RegularExpressions.Group";
      FilterText@1000 : Text;
    BEGIN
      FilterText := GETFILTERS;
      RegexHelper := RegexHelper.Regex(STRSUBSTNO(FilterRegexTok,FIELDCAPTION(Filter)));
      MatchHelper := RegexHelper.Match(FilterText);
      IF NOT MatchHelper.Success THEN
        ERROR(InvalidFilterErr);
      GroupCollectionHelper := MatchHelper.Groups;
      GroupHelper := GroupCollectionHelper.Item(1);
      CRMInfo := GroupHelper.Value;
    END;

    PROCEDURE ExtractPartsFromCRMInfo@11(CRMInfo@1007 : Text;VAR CRMID@1005 : GUID;VAR CRMEntityTypeName@1006 : Text);
    VAR
      RegexHelper@1004 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Text.RegularExpressions.Regex";
      RegexOptionsHelper@1003 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Text.RegularExpressions.RegexOptions";
      MatchHelper@1002 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Text.RegularExpressions.Match";
      GroupCollectionHelper@1001 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Text.RegularExpressions.GroupCollection";
      GroupHelper@1000 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Text.RegularExpressions.Group";
    BEGIN
      // Extract the CRM ID and CRM entity type name from the CRM info string
      RegexOptionsHelper := RegexOptionsHelper.IgnoreCase;
      RegexHelper := RegexHelper.Regex(CRMInfoRegexTok,RegexOptionsHelper);
      MatchHelper := RegexHelper.Match(CRMInfo);
      IF NOT MatchHelper.Success THEN
        ERROR(InvalidFilterErr);
      GroupCollectionHelper := MatchHelper.Groups;
      GroupHelper := GroupCollectionHelper.Item(1);
      IF NOT EVALUATE(CRMID,GroupHelper.Value) THEN
        ERROR(InvalidCRMIDErr);
      GroupHelper := GroupCollectionHelper.Item(2);
      CRMEntityTypeName := GroupHelper.Value;
    END;

    BEGIN
    END.
  }
}

