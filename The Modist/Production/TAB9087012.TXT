OBJECT Table 9087012 Style
{
  OBJECT-PROPERTIES
  {
    Date=04/02/18;
    Time=[ 1:03:31 PM];
    Modified=Yes;
    Version List=NS2016.16,M0021,M0038;
  }
  PROPERTIES
  {
    Permissions=;
    DataCaptionFields=No.,Description;
    OnInsert=BEGIN
               IF (Rec."No." = '') THEN
               BEGIN
                 nSembleSetup.VerifyAndGet();
                 NoSeriesManagement.InitSeries(nSembleSetup.GetStyleNos(), xRec."No. Series", 0D, Rec."No.", Rec."No. Series");
               END;
               DimensionManagement.UpdateDefaultDim(DATABASE::Style, Rec."No.", Rec."Global Dimension 1 Code", Rec."Global Dimension 2 Code");
               TnpToolkit.UpdateCreatedBy(Rec."Created By", Rec."Created Date Time");
             END;

    OnModify=BEGIN
               TnpToolkit.UpdateModifiedBy(Rec."Modified By", Rec."Modified Date Time");
             END;

    OnDelete=VAR
               lBuyingStagingLine@1000000001 : Record 9087017;
             BEGIN
               CheckOnDeletion();

               StyleColour.RESET();
               StyleColour.SETRANGE("Style No.", Rec."No.");
               StyleColour.DELETEALL(TRUE);

               DimensionManagement.DeleteDefaultDim(DATABASE::Style, Rec."No.");

               lBuyingStagingLine.RESET();
               lBuyingStagingLine.SETCURRENTKEY("Style No.");
               lBuyingStagingLine.SETRANGE("Style No.", Rec."No.");
               lBuyingStagingLine.MODIFYALL("Style No.", '');
             END;

    OnRename=BEGIN
               TnpToolkit.UpdateModifiedBy(Rec."Created By", Rec."Created Date Time");
             END;

    CaptionML=[ENU=Style;
               ENG=Style];
    LookupPageID=Page9087028;
    DrillDownPageID=Page9087028;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;OnValidate=BEGIN
                                                                IF (Rec."No." <> xRec."No.") THEN
                                                                BEGIN
                                                                  CheckStatusOpen();
                                                                  nSembleSetup.VerifyAndGet();
                                                                  NoSeriesManagement.TestManual(nSembleSetup."Style Nos.");
                                                                  Rec."No. Series" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              ENG=No.] }
    { 10  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              ENG=Description] }
    { 11  ;   ;Description 2       ;Text50        ;CaptionML=[ENU=Description 2;
                                                              ENG=Description 2] }
    { 20  ;   ;Base Unit of Measure;Code10        ;TableRelation="Unit of Measure";
                                                   OnValidate=VAR
                                                                lUnitOfMeasure@1000 : Record 204;
                                                              BEGIN
                                                                IF (Rec."Base Unit of Measure" <> xRec."Base Unit of Measure") THEN
                                                                  CheckStatusOpen();
                                                              END;

                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=Base Unit of Measure;
                                                              ENG=Base Unit of Measure] }
    { 30  ;   ;Gen. Prod. Posting Group;Code10    ;TableRelation="Gen. Product Posting Group";
                                                   OnValidate=VAR
                                                                lGenProductPostingGroup@1000000000 : Record 251;
                                                              BEGIN
                                                                IF (Rec."Gen. Prod. Posting Group" <> xRec."Gen. Prod. Posting Group") THEN
                                                                BEGIN
                                                                  CheckStatusOpen();
                                                                  IF (lGenProductPostingGroup.ValidateVatProdPostingGroup(lGenProductPostingGroup, Rec."Gen. Prod. Posting Group")) THEN
                                                                    Rec.VALIDATE("VAT Prod. Posting Group", lGenProductPostingGroup."Def. VAT Prod. Posting Group");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Gen. Prod. Posting Group;
                                                              ENG=Gen. Prod. Posting Group] }
    { 31  ;   ;VAT Prod. Posting Group;Code10     ;TableRelation="VAT Product Posting Group";
                                                   OnValidate=BEGIN
                                                                IF (Rec."VAT Prod. Posting Group" <> xRec."VAT Prod. Posting Group") THEN
                                                                  CheckStatusOpen();
                                                              END;

                                                   CaptionML=[ENU=VAT Prod. Posting Group;
                                                              ENG=VAT Prod. Posting Group] }
    { 32  ;   ;Inventory Posting Group;Code10     ;TableRelation="Inventory Posting Group";
                                                   OnValidate=BEGIN
                                                                IF (Rec."Inventory Posting Group" <> xRec."Inventory Posting Group") THEN
                                                                  CheckStatusOpen();
                                                              END;

                                                   CaptionML=[ENU=Inventory Posting Group;
                                                              ENG=Inventory Posting Group] }
    { 40  ;   ;Unit Price          ;Decimal       ;OnValidate=BEGIN
                                                                 IF (Rec."Unit Price" <> xRec."Unit Price") THEN
                                                                   CheckStatusOpen();
                                                              END;

                                                   CaptionML=[ENU=Unit Price;
                                                              ENG=Unit Price];
                                                   MinValue=0;
                                                   AutoFormatType=2 }
    { 41  ;   ;Unit Cost           ;Decimal       ;OnValidate=BEGIN
                                                                 IF (Rec."Unit Cost" <> xRec."Unit Cost") THEN
                                                                   CheckStatusOpen();
                                                              END;

                                                   CaptionML=[ENU=Unit Cost;
                                                              ENG=Unit Cost];
                                                   MinValue=0;
                                                   AutoFormatType=2 }
    { 50  ;   ;Vendor No.          ;Code20        ;TableRelation=Vendor;
                                                   OnValidate=VAR
                                                                lVendor@1000000000 : Record 23;
                                                              BEGIN
                                                                IF (Rec."Vendor No." <> xRec."Vendor No.") THEN
                                                                BEGIN
                                                                  CheckStatusOpen();
                                                                  UpdateColours(Rec.FIELDNO("Vendor No."));
                                                                  Rec.VALIDATE("Vendor Style No.", '');
                                                                END;
                                                                Rec.CALCFIELDS("Vendor Name");
                                                              END;

                                                   ValidateTableRelation=Yes;
                                                   TestTableRelation=Yes;
                                                   CaptionML=[ENU=Vendor No.;
                                                              ENG=Vendor No.] }
    { 51  ;   ;Vendor Name         ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Vendor.Name WHERE (No.=FIELD(Vendor No.)));
                                                   CaptionML=[ENU=Vendor Name;
                                                              ENG=Vendor Name];
                                                   Editable=No }
    { 52  ;   ;Vendor Style No.    ;Text50        ;OnValidate=BEGIN
                                                                IF (Rec."Vendor Style No." <> xRec."Vendor Style No.") THEN
                                                                  CheckStatusOpen();
                                                              END;

                                                   CaptionML=[ENU=Vendor Style No.;
                                                              ENG=Vendor Style No.];
                                                   Description=,Increased from 20 }
    { 60  ;   ;Gross Weight        ;Decimal       ;CaptionML=[ENU=Gross Weight;
                                                              ENG=Gross Weight];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 61  ;   ;Net Weight          ;Decimal       ;CaptionML=[ENU=Net Weight;
                                                              ENG=Net Weight];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 70  ;   ;Blocked             ;Boolean       ;CaptionML=[ENU=Blocked;
                                                              ENG=Blocked] }
    { 80  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              ENG=No. Series];
                                                   Editable=No }
    { 90  ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1, Rec."Global Dimension 1 Code");
                                                              END;

                                                   CaptionML=[ENU=Global Dimension 1 Code;
                                                              ENG=Global Dimension 1 Code];
                                                   CaptionClass='1,1,1' }
    { 91  ;   ;Global Dimension 2 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2, Rec."Global Dimension 2 Code");
                                                              END;

                                                   CaptionML=[ENU=Global Dimension 2 Code;
                                                              ENG=Global Dimension 2 Code];
                                                   CaptionClass='1,1,2' }
    { 100 ;   ;Manufacturer Code   ;Code10        ;TableRelation=Manufacturer;
                                                   CaptionML=[ENU=Manufacturer Code;
                                                              ENG=Manufacturer Code] }
    { 110 ;   ;Item Category Code  ;Code10        ;TableRelation="Item Category";
                                                   OnValidate=BEGIN
                                                                IF (Rec."Item Category Code" <> xRec."Item Category Code") THEN
                                                                  IF ( NOT (ProductGroup.GET(Rec."Item Category Code", Rec."Product Group Code"))) THEN
                                                                    Rec.VALIDATE("Product Group Code", '')
                                                                  ELSE
                                                                    Rec.VALIDATE("Product Group Code");
                                                              END;

                                                   CaptionML=[ENU=Item Category Code;
                                                              ENG=Item Category Code] }
    { 111 ;   ;Product Group Code  ;Code10        ;TableRelation="Product Group".Code WHERE (Item Category Code=FIELD(Item Category Code));
                                                   CaptionML=[ENU=Product Group Code;
                                                              ENG=Product Group Code] }
    { 120 ;   ;Division Code       ;Code20        ;TableRelation="Item Hierarchy"."Division Code" WHERE (Type=CONST(Division));
                                                   OnValidate=BEGIN
                                                                IF (Rec."Division Code" <> xRec."Division Code") THEN
                                                                  Rec.VALIDATE("Department Code", '');
                                                              END;

                                                   CaptionML=[ENU=Division Code;
                                                              ENG=Division Code] }
    { 121 ;   ;Department Code     ;Code20        ;TableRelation="Item Hierarchy"."Department Code" WHERE (Type=CONST(Department),
                                                                                                           Division Code=FIELD(Division Code));
                                                   OnValidate=BEGIN
                                                                IF (Rec."Department Code" <> xRec."Department Code") THEN
                                                                  Rec.VALIDATE("Group Code", '');
                                                              END;

                                                   CaptionML=[ENU=Department Code;
                                                              ENG=Department Code] }
    { 122 ;   ;Group Code          ;Code20        ;TableRelation="Item Hierarchy"."Group Code" WHERE (Type=CONST(Group),
                                                                                                      Division Code=FIELD(Division Code),
                                                                                                      Department Code=FIELD(Department Code));
                                                   OnValidate=BEGIN
                                                                IF (Rec."Group Code" <> xRec."Group Code") THEN
                                                                  Rec.VALIDATE("Category Code", '');
                                                              END;

                                                   CaptionML=[ENU=Group Code;
                                                              ENG=Group Code] }
    { 123 ;   ;Category Code       ;Code20        ;TableRelation="Item Hierarchy"."Category Code" WHERE (Type=CONST(Category),
                                                                                                         Division Code=FIELD(Division Code),
                                                                                                         Department Code=FIELD(Department Code),
                                                                                                         Group Code=FIELD(Group Code));
                                                   OnValidate=BEGIN
                                                                IF (Rec."Category Code" <> xRec."Category Code") THEN
                                                                  Rec.VALIDATE("Sub-Category Code", '');
                                                              END;

                                                   CaptionML=[ENU=Category Code;
                                                              ENG=Category Code] }
    { 124 ;   ;Sub-Category Code   ;Code20        ;TableRelation="Item Hierarchy"."Sub-Category Code" WHERE (Type=CONST(Sub-Category),
                                                                                                             Division Code=FIELD(Division Code),
                                                                                                             Department Code=FIELD(Department Code),
                                                                                                             Group Code=FIELD(Group Code),
                                                                                                             Category Code=FIELD(Category Code));
                                                   CaptionML=[ENU=Sub-Category Code;
                                                              ENG=Sub-Category Code] }
    { 130 ;   ;Size Group Code     ;Code20        ;TableRelation="Size Group";
                                                   OnValidate=BEGIN
                                                                IF (Rec."Size Group Code" <> xRec."Size Group Code") THEN
                                                                  StyleManagement.UpdateStyleColourSizes(Rec);
                                                                Rec.CALCFIELDS("Size Group Name");
                                                              END;

                                                   CaptionML=[ENU=Size Group Code;
                                                              ENG=Size Group Code] }
    { 131 ;   ;Size Group Name     ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Size Group".Name WHERE (Code=FIELD(Size Group Code)));
                                                   TableRelation="Size Group";
                                                   CaptionML=[ENU=Size Group Name;
                                                              ENG=Size Group Name];
                                                   Editable=No }
    { 140 ;   ;Brand Code          ;Code20        ;TableRelation=Brand;
                                                   OnValidate=VAR
                                                                lBrandVendor@1000000000 : Record 9087007;
                                                              BEGIN
                                                                IF (Rec."Brand Code" <> xRec."Brand Code") THEN
                                                                BEGIN
                                                                  CheckStatusOpen();
                                                                  IF (Rec."Brand Code" <> '') THEN
                                                                  BEGIN
                                                                    IF (Rec."Vendor No." = '') THEN
                                                                    BEGIN
                                                                      lBrandVendor.RESET();
                                                                      lBrandVendor.SETRANGE("Brand Code", Rec."Brand Code");
                                                                      lBrandVendor.SETRANGE(Default, TRUE);
                                                                      IF (lBrandVendor.FINDFIRST()) THEN
                                                                        Rec.VALIDATE("Vendor No.", lBrandVendor."Vendor No.");
                                                                    END;
                                                                    IF (Rec."Vendor No." = '') THEN
                                                                    BEGIN
                                                                      lBrandVendor.RESET();
                                                                      lBrandVendor.SETCURRENTKEY("Brand Code", Sequence);
                                                                      lBrandVendor.SETRANGE("Brand Code", Rec."Brand Code");
                                                                      IF (lBrandVendor.COUNT = 1) THEN
                                                                        IF (lBrandVendor.FINDFIRST()) THEN
                                                                          Rec.VALIDATE("Vendor No.", lBrandVendor."Vendor No.");
                                                                    END;
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Brand Code;
                                                              ENG=Brand Code] }
    { 150 ;   ;Season Code         ;Code20        ;TableRelation=Season;
                                                   OnValidate=BEGIN
                                                                IF (Rec."Season Code" <> xRec."Season Code") THEN
                                                                BEGIN
                                                                  CheckStatusOpen();
                                                                  Rec.VALIDATE("Sub-Season Code", '');
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Season Code;
                                                              ENG=Season Code] }
    { 151 ;   ;Sub-Season Code     ;Code20        ;TableRelation=Sub-Season.Code WHERE (Season Code=FIELD(Season Code));
                                                   CaptionML=[ENU=Sub-Season Code;
                                                              ENG=Sub-Season Code] }
    { 160 ;   ;Status              ;Option        ;CaptionML=[ENU=Status;
                                                              ENG=Status];
                                                   OptionCaptionML=[ENU=Open,Pending Approval,Released;
                                                                    ENG=Open,Pending Approval,Released];
                                                   OptionString=Open,Pending Approval,Released;
                                                   Editable=No }
    { 170 ;   ;Picture             ;BLOB          ;CaptionML=[ENU=Picture;
                                                              ENG=Picture];
                                                   SubType=Bitmap }
    { 180 ;   ;Buying Sheet No.    ;Code10        ;FieldClass=FlowFilter;
                                                   TableRelation="Buying Sheet Header";
                                                   CaptionML=[ENU=Buying Sheet No.;
                                                              ENG=Buying Sheet No.];
                                                   NotBlank=Yes }
    { 190 ;   ;Web Reference       ;Text100       ;CaptionML=[ENU=Web Reference;
                                                              ENG=Web Reference] }
    { 200 ;   ;Quality Inspection %;Decimal       ;CaptionML=[ENU=Quality Inspection %;
                                                              ENG=Quality Inspection %];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100;
                                                   BlankZero=Yes }
    { 1000;   ;Created By          ;Code50        ;OnLookup=BEGIN
                                                              TnpToolkit.UserLookup(Rec."Created By", FALSE);
                                                            END;

                                                   CaptionML=[ENU=Created By;
                                                              ENG=Created By] }
    { 1001;   ;Created Date Time   ;DateTime      ;CaptionML=[ENU=Created Date Time;
                                                              ENG=Created Date Time] }
    { 1002;   ;Modified By         ;Code50        ;OnLookup=BEGIN
                                                              TnpToolkit.UserLookup(Rec."Modified By", FALSE);
                                                            END;

                                                   CaptionML=[ENU=Modified By;
                                                              ENG=Modified By] }
    { 1003;   ;Modified Date Time  ;DateTime      ;CaptionML=[ENU=Modified Date Time;
                                                              ENG=Modified Date Time] }
    { 50710;  ;Country of Origin   ;Code10        ;TableRelation=Country/Region;
                                                   Description=M0021 DD 13/10/16 }
    { 50780;  ;Exclusive           ;Boolean       ;Description=M0038 DD 18/10/16 }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Vendor No.,Vendor Style No.              }
    {    ;Vendor Style No.,Vendor No.              }
    {    ;Description                             ;KeyGroups=SearchCol }
    {    ;Season Code,Brand Code                   }
    {    ;Division Code,Description,Group Code,Category Code,Sub-Category Code }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;No.,Description,Base Unit of Measure,Field6,Unit Price }
  }
  CODE
  {
    VAR
      Item@1000000006 : Record 27;
      nSembleSetup@1000000000 : Record 9087000;
      ProductGroup@1000000013 : Record 5723;
      StyleColour@1000000001 : Record 9087013;
      DimensionManagement@1000000003 : Codeunit 408;
      NoSeriesManagement@1000000002 : Codeunit 396;
      StyleManagement@1000000004 : Codeunit 9087006;
      TnpToolkit@1000000007 : Codeunit 9062230;

    PROCEDURE InitRecord@1000000004();
    BEGIN
      //DOC NS2015.1 - Initialising the record

      nSembleSetup.VerifyAndGet();
      Rec.VALIDATE("Base Unit of Measure", nSembleSetup."Style Unit of Measure");
      Rec.VALIDATE("Gen. Prod. Posting Group", nSembleSetup."Style Gen. Prod. Posting Group");
      Rec.VALIDATE("VAT Prod. Posting Group", nSembleSetup."Style VAT Prod. Posting Group");
      Rec.VALIDATE("Inventory Posting Group", nSembleSetup."Style Inventory Posting Group");
    END;

    LOCAL PROCEDURE CheckOnDeletion@1000000008();
    VAR
      lDeletionCheck@1000000000 : Codeunit 9062384;
    BEGIN
      //DOC NS2015.1 - Checking on deletion

      lDeletionCheck.AddTable(DATABASE::Item);
      lDeletionCheck.AddTable(DATABASE::"Item Variant");
      lDeletionCheck.AddTable(DATABASE::"Buying Staging Line");
      lDeletionCheck.AddTable(DATABASE::"Buying Sheet Summary Line");
      lDeletionCheck.AddTable(DATABASE::"Buying Sheet Line");
      lDeletionCheck.AddTable(DATABASE::"Sales Summary Line");
      lDeletionCheck.AddTable(DATABASE::"Sales Line");
      lDeletionCheck.AddTable(DATABASE::"Purchase Summary Line");
      lDeletionCheck.AddTable(DATABASE::"Purchase Line");
      lDeletionCheck.AddTable(DATABASE::"Transfer Summary Line");
      lDeletionCheck.AddTable(DATABASE::"Transfer Line");
      lDeletionCheck.AddTable(DATABASE::"Item Ledger Entry");
      lDeletionCheck.AddTable(DATABASE::"Value Entry");
      lDeletionCheck.AddTable(DATABASE::"Sales Shipment Line");
      lDeletionCheck.AddTable(DATABASE::"Sales Invoice Line");
      lDeletionCheck.AddTable(DATABASE::"Sales Cr.Memo Line");
      lDeletionCheck.AddTable(DATABASE::"Purch. Rcpt. Line");
      lDeletionCheck.AddTable(DATABASE::"Purch. Inv. Line");
      lDeletionCheck.AddTable(DATABASE::"Purch. Cr. Memo Line");
      lDeletionCheck.AddTable(DATABASE::"Return Shipment Line");
      lDeletionCheck.AddTable(DATABASE::"Return Receipt Line");
      lDeletionCheck.AddTable(DATABASE::"Buying Staging Arch. Line");
      lDeletionCheck.AddTable(DATABASE::"Buying Sheet Arch. Sum. Line");
      lDeletionCheck.AddTable(DATABASE::"Buying Sheet Arch. Line");

      lDeletionCheck.CheckMultipleTables(DATABASE::Style, Rec."No.", 'Style No.');
    END;

    PROCEDURE AssistEdit@2() : Boolean;
    VAR
      lResult@1000000000 : Boolean;
    BEGIN
      //DOC NS2015.1 - Performing assist edit (for "No." field)

      nSembleSetup.VerifyAndGet();
      nSembleSetup.TESTFIELD("Style Nos.");
      IF NoSeriesManagement.SelectSeries(nSembleSetup."Style Nos.", xRec."No. Series", Rec."No. Series") THEN
      BEGIN
        NoSeriesManagement.SetSeries("No.");
        lResult := TRUE;
      END;
      EXIT(lResult);
    END;

    PROCEDURE ValidateShortcutDimCode@8(pFieldId@1000 : Integer;VAR pShortcutDimensionCode@1001 : Code[20]);
    BEGIN
      //DOC NS2015.1 - Validating shortcut dimension code
      //  -> pFieldId: Field ID
      //  <> pShortcutDimensionCode: Dimension code

      DimensionManagement.ValidateDimValueCode(pFieldId, pShortcutDimensionCode);
      DimensionManagement.SaveDefaultDim(DATABASE::"Style Colour Size", Rec."No.", pFieldId, pShortcutDimensionCode);
    END;

    PROCEDURE CheckStatusOpen@1000000000();
    BEGIN
      //DOC NS2015.1 - Checking if the status is open

      Rec.TESTFIELD(Status, Rec.Status::Open);
    END;

    PROCEDURE UpdateColours@1000000005(pFieldId@1000000000 : Integer);
    BEGIN
      //DOC NS2015.1 - Update style colours
      //  -> pFieldId: Field to update

      StyleColour.RESET();
      StyleColour.SETRANGE("Style No.", Rec."No.");
      IF (StyleColour.FINDSET(TRUE)) THEN
      REPEAT
        CASE (pFieldId) OF
          Rec.FIELDNO("Vendor No."):
            StyleColour.VALIDATE("Vendor No.", Rec."Vendor No.");
        END;
        StyleColour.MODIFY(TRUE);
      UNTIL (StyleColour.NEXT() = 0);
    END;

    PROCEDURE Release@1000000001();
    BEGIN
      //DOC NS2015.1 - Releasing the style

      StyleManagement.Release(Rec);
    END;

    PROCEDURE Reopen@1000000002();
    BEGIN
      //DOC NS2015.1 - Reopening the style

      StyleManagement.Reopen(Rec);
    END;

    PROCEDURE ShowItems@1000000003();
    BEGIN
      //DOC NS2015.1 - Showing items

      Item.RESET();
      Item.SETCURRENTKEY("Style No.");
      Item.SETRANGE("Style No.", Rec."No.");
      PAGE.RUN(0, Item);
    END;

    PROCEDURE ShowVendor@1000000006();
    VAR
      lVendor@1000000000 : Record 23;
    BEGIN
      //DOC NS2015.1 - Showing a vendor

      Rec.TESTFIELD("Vendor No.");
      lVendor.GET(Rec."Vendor No.");
      PAGE.RUN(PAGE::"Vendor Card", lVendor);
    END;

    PROCEDURE ShowVendorColours@1000000007();
    VAR
      lVendor@1000000000 : Record 23;
    BEGIN
      //DOC NS2015.1 - Showing vendor colours

      Rec.TESTFIELD("Vendor No.");
      lVendor.GET(Rec."Vendor No.");
      lVendor.SETRECFILTER();
      PAGE.RUN(PAGE::"Vendor Colour List", lVendor);
    END;

    PROCEDURE ShowPicture@1000000009();
    VAR
      lPictureBuffer@1000000000 : Record 9062717;
    BEGIN
      //DOC NS2015.1 - Showing style picture

      lPictureBuffer.RESET();
      lPictureBuffer.SETRANGE("Parent Table ID", DATABASE::Style);
      lPictureBuffer.SETRANGE("Parent Primary Key 1", Rec."No.");
      lPictureBuffer.SETRANGE("Parent Field ID", Rec.FIELDNO(Picture));

      PAGE.RUN(PAGE::Picture, lPictureBuffer);
    END;

    PROCEDURE ShowSalesPrices@1000000010();
    VAR
      lStyleSalesPrice@1000000000 : Record 9087045;
    BEGIN
      lStyleSalesPrice.RESET();
      lStyleSalesPrice.SETCURRENTKEY("Style No.");
      lStyleSalesPrice.SETRANGE("Style No.", Rec."No.");
      PAGE.RUN(0, lStyleSalesPrice);
    END;

    BEGIN
    {
      //DOC NS2015.1  JH 08/01/2014 - Created
      //DOC NS2015.3  JH 30/07/2014 - Bugfixes, worksheet fields added
      //DOC NS2015.4  JH 11/02/2015 - Item hierarchy relations fixed
      //DOC NS2016.16 JH 05/09/2016 - nSemble 2016
      //DOC M0021 DD 13/10/16 - Designed 'Country of Origin' field.
    }
    END.
  }
}

