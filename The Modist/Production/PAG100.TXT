OBJECT Page 100 Accounting Periods
{
  OBJECT-PROPERTIES
  {
    Date=23/09/13;
    Time=12:00:00 PM;
    Version List=NAVW17.10,NAVGB7.10;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Accounting Periods;
               ENG=Accounting Periods];
    SourceTable=Table10560;
    PageType=List;
    OnOpenPage=BEGIN
                 SETRANGE("Period Start",0D,WORKDATE);
                 IF FIND('+') THEN;
                 SETRANGE("Period Start");
               END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 17      ;1   ;Action    ;
                      CaptionML=[ENU=&Inventory Period;
                                 ENG=&Inventory Period];
                      RunObject=Page 5828;
                      Promoted=Yes;
                      Image=ShowInventoryPeriods;
                      PromotedCategory=Process }
      { 1040004 ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 ENG=F&unctions];
                      Image=Action }
      { 1040024 ;2   ;Action    ;
                      CaptionML=[ENU=Create Fiscal Year;
                                 ENG=Create Fiscal Year];
                      RunObject=Report 93;
                      Promoted=Yes;
                      Image=CreateYear;
                      PromotedCategory=Process }
      { 1040015 ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Copy System Dates;
                                 ENG=Copy System Dates];
                      Promoted=Yes;
                      Image=Copy;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 COPYFILTER("Period Type",SystemDate."Period Type");
                                 REPORT.RUNMODAL(REPORT::"Copy System Dates",TRUE,TRUE,SystemDate);
                                 IF NOT FIND('=><') THEN;
                               END;
                                }
      { 1040016 ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Change &Dates;
                                 ENG=Change &Dates];
                      Image=ChangeDate;
                      OnAction=BEGIN
                                 AccountingPeriod.COPY(Rec);
                                 REPORT.RUNMODAL(REPORT::"Change Dates",TRUE,TRUE,AccountingPeriod);
                               END;
                                }
      { 1040017 ;2   ;Action    ;
                      CaptionML=[ENU=Co&rrect Gaps/Overlaps;
                                 ENG=Co&rrect Gaps/Overlaps];
                      Image=EditAdjustments;
                      OnAction=VAR
                                 PreviousBeginDate@1041006 : Date;
                               BEGIN
                                 IF NOT
                                    CONFIRM(
                                      Text1041000 +
                                      Text1041001,FALSE)
                                 THEN
                                   EXIT;

                                 IF NOT (GETRANGEMIN("Period Type") = GETRANGEMAX("Period Type")) THEN
                                   ERROR(Text1041002,FIELDCAPTION("Period Type"));

                                 AccountingPeriod.RESET;
                                 COPYFILTER("Period Type",AccountingPeriod."Period Type");
                                 WITH AccountingPeriod DO BEGIN
                                   IF FIND('+') THEN BEGIN
                                     REPEAT
                                       IF PreviousBeginDate <> 0D THEN BEGIN
                                         "Period End" := CLOSINGDATE(CALCDATE('<-1D>',NORMALDATE(PreviousBeginDate)));
                                         IF NOT Closed THEN
                                           MODIFY;
                                       END;
                                       PreviousBeginDate := "Period Start";
                                     UNTIL NEXT(-1) = 0;
                                     MESSAGE(Text1041003);
                                   END;
                                 END;
                               END;
                                }
      { 1040018 ;2   ;Separator  }
      { 1040019 ;2   ;Action    ;
                      CaptionML=[ENU=C&lose Year;
                                 ENG=C&lose Year];
                      RunObject=Codeunit 6;
                      Promoted=Yes;
                      Image=CloseYear;
                      PromotedCategory=Process }
      { 1900000006;0 ;ActionContainer;
                      ActionContainerType=Reports }
      { 1902174606;1 ;Action    ;
                      CaptionML=[ENU=Trial Balance by Period;
                                 ENG=Trial Balance by Period];
                      RunObject=Report 38;
                      Promoted=Yes;
                      Image=Report;
                      PromotedCategory=Report }
      { 1904082706;1 ;Action    ;
                      CaptionML=[ENU=Trial Balance;
                                 ENG=Trial Balance];
                      RunObject=Report 6;
                      Promoted=No;
                      Image=Report;
                      PromotedCategory=Report }
      { 1905089406;1 ;Action    ;
                      CaptionML=[ENU=Fiscal Year Balance;
                                 ENG=Fiscal Year Balance];
                      RunObject=Report 36;
                      Promoted=No;
                      Image=Report;
                      PromotedCategory=Report }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1040000;1;Group     ;
                GroupType=Repeater }

    { 1040005;2;Field     ;
                SourceExpr="Period Type" }

    { 1040007;2;Field     ;
                SourceExpr="Period Start" }

    { 1040009;2;Field     ;
                SourceExpr="Period End" }

    { 1040011;2;Field     ;
                SourceExpr="Period No." }

    { 1040013;2;Field     ;
                SourceExpr="Period Name" }

    { 1040020;2;Field     ;
                SourceExpr=Closed }

    { 1101100000;2;Field  ;
                SourceExpr="Average Cost Calc. Type" }

    { 1101100002;2;Field  ;
                SourceExpr="Average Cost Period" }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      Text1041000@1041000 : TextConst 'ENU=This function will correct gaps between and overlaps of periods.\\;ENG=This function will correct gaps between and overlaps of periods.\\';
      Text1041001@1041001 : TextConst 'ENU=Do you want to continue?;ENG=Do you want to continue?';
      Text1041002@1041002 : TextConst 'ENU=%1 must be filtered to just one %1.;ENG=%1 must be filtered to just one %1.';
      Text1041003@1041004 : TextConst 'ENU=Gaps/Overlaps corrected. You need to adjust the last record manually.;ENG=Gaps/Overlaps corrected. You need to adjust the last record manually.';
      SystemDate@1041005 : Record 2000000007;
      AccountingPeriod@1040001 : Record 10560;

    BEGIN
    END.
  }
}

