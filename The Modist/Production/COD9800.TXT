OBJECT Codeunit 9800 Log Table Permissions
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    EventSubscriberInstance=Manual;
    OnRun=BEGIN
          END;

  }
  CODE
  {

    PROCEDURE Init@9();
    VAR
      TablePermissionBuffer@1000 : Record 9800;
    BEGIN
      TablePermissionBuffer.SETRANGE("Session ID",SESSIONID);
      TablePermissionBuffer.DELETEALL;
    END;

    [EventSubscriber(Codeunit,1,OnAfterGetDatabaseTableTriggerSetup)]
    PROCEDURE GetDatabaseTableTriggerSetup@3(TableId@1000 : Integer;VAR OnDatabaseInsert@1001 : Boolean;VAR OnDatabaseModify@1002 : Boolean;VAR OnDatabaseDelete@1003 : Boolean;VAR OnDatabaseRename@1004 : Boolean);
    BEGIN
      OnDatabaseInsert := TRUE;
      OnDatabaseModify := TRUE;
      OnDatabaseDelete := TRUE;
      OnDatabaseRename := TRUE;
    END;

    [EventSubscriber(Codeunit,1,OnAfterOnDatabaseInsert)]
    PROCEDURE LogDatabaseInsert@4(RecRef@1000 : RecordRef);
    BEGIN
      LogTableUsage(RecRef.NUMBER,0);
    END;

    [EventSubscriber(Codeunit,1,OnAfterOnDatabaseModify)]
    PROCEDURE LogDatabaseModify@5(RecRef@1000 : RecordRef);
    BEGIN
      LogTableUsage(RecRef.NUMBER,1);
    END;

    [EventSubscriber(Codeunit,1,OnAfterOnDatabaseDelete)]
    PROCEDURE LogDatabaseDelete@6(RecRef@1000 : RecordRef);
    BEGIN
      LogTableUsage(RecRef.NUMBER,2);
    END;

    [EventSubscriber(Codeunit,1,OnAfterOnDatabaseRename)]
    PROCEDURE LogDatabaseRename@7(RecRef@1000 : RecordRef;xRecRef@1001 : RecordRef);
    BEGIN
      LogTableUsage(RecRef.NUMBER,1);
    END;

    LOCAL PROCEDURE LogTableUsage@2(TableID@1000 : Integer;Usage@1001 : 'Insert,Modify,Delete');
    VAR
      TablePermissionBuffer@1002 : Record 9800;
    BEGIN
      IF TableID = DATABASE::"Table Permission Buffer" THEN
        EXIT;
      IF NOT TablePermissionBuffer.GET(TableID,SESSIONID) THEN BEGIN
        TablePermissionBuffer."Table ID" := TableID;
        TablePermissionBuffer."Session ID" := SESSIONID;
        TablePermissionBuffer.INSERT;
      END;
      CASE Usage OF
        Usage::Insert:
          TablePermissionBuffer."Insert Permission" := TRUE;
        Usage::Modify:
          TablePermissionBuffer."Modify Permission" := TRUE;
        Usage::Delete:
          TablePermissionBuffer."Delete Permission" := TRUE;
      END;
      TablePermissionBuffer.MODIFY;
    END;

    BEGIN
    END.
  }
}

