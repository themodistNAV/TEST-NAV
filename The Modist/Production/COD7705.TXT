OBJECT Codeunit 7705 Miniform Logon
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    TableNo=7700;
    OnRun=VAR
            MiniformMgmt@1000 : Codeunit 7702;
          BEGIN
            MiniformMgmt.Initialize(
              MiniformHeader,Rec,DOMxmlin,ReturnedNode,
              RootNode,XMLDOMMgt,ADCSCommunication,ADCSUserId,
              CurrentCode,StackCode,WhseEmpId,LocationFilter);

            IF ADCSCommunication.GetNodeAttribute(ReturnedNode,'RunReturn') = '0' THEN BEGIN
              IF Code <> CurrentCode THEN
                PrepareData
              ELSE
                ProcessInput;
            END ELSE
              PrepareData;

            CLEAR(DOMxmlin);
          END;

  }
  CODE
  {
    VAR
      MiniformHeader@1015 : Record 7700;
      MiniformHeader2@1006 : Record 7700;
      ADCSUser@1009 : Record 7710;
      XMLDOMMgt@1007 : Codeunit 6224;
      ADCSCommunication@1003 : Codeunit 7701;
      ADCSMgt@1024 : Codeunit 7700;
      RecRef@1005 : RecordRef;
      DOMxmlin@1011 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
      ReturnedNode@1012 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      RootNode@1010 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      ADCSUserId@1004 : Text[250];
      Remark@1002 : Text[250];
      WhseEmpId@1018 : Text[250];
      LocationFilter@1000 : Text[250];
      Text001@1016 : TextConst 'ENU=Invalid User ID.;ENG=Invalid User ID.';
      Text002@1013 : TextConst 'ENU=Invalid Password.;ENG=Invalid Password.';
      Text003@1001 : TextConst 'ENU=No input Node found.;ENG=No input Node found.';
      Text004@1014 : TextConst 'ENU=Record not found.;ENG=Record not found.';
      CurrentCode@1008 : Text[250];
      StackCode@1017 : Text[250];
      ActiveInputField@1026 : Integer;

    LOCAL PROCEDURE ProcessInput@10();
    VAR
      FuncGroup@1001 : Record 7702;
      RecId@1004 : RecordID;
      TableNo@1002 : Integer;
      FldNo@1000 : Integer;
      TextValue@1007 : Text[250];
    BEGIN
      IF XMLDOMMgt.FindNode(RootNode,'Header/Input',ReturnedNode) THEN
        TextValue := ReturnedNode.InnerText
      ELSE
        ERROR(Text003);

      IF EVALUATE(TableNo,ADCSCommunication.GetNodeAttribute(ReturnedNode,'TableNo')) THEN BEGIN
        RecRef.OPEN(TableNo);
        EVALUATE(RecId,ADCSCommunication.GetNodeAttribute(ReturnedNode,'RecordID'));
        IF RecRef.GET(RecId) THEN BEGIN
          RecRef.SETTABLE(ADCSUser);
          ADCSCommunication.SetRecRef(RecRef);
        END ELSE
          ERROR(Text004);
      END;

      FuncGroup.KeyDef := ADCSCommunication.GetFunctionKey(MiniformHeader.Code,TextValue);

      CASE FuncGroup.KeyDef OF
        FuncGroup.KeyDef::Esc:
          PrepareData;
        FuncGroup.KeyDef::Input:
          BEGIN
            EVALUATE(FldNo,ADCSCommunication.GetNodeAttribute(ReturnedNode,'FieldID'));
            CASE FldNo OF
              ADCSUser.FIELDNO(Name):
                IF NOT GetUser(UPPERCASE(TextValue)) THEN
                  EXIT;
              ADCSUser.FIELDNO(Password):
                IF NOT CheckPassword(TextValue) THEN
                  EXIT;
              ELSE BEGIN
                ADCSCommunication.FieldSetvalue(RecRef,FldNo,TextValue);
                RecRef.SETTABLE(ADCSUser);
              END;
            END;

            ActiveInputField := ADCSCommunication.GetActiveInputNo(CurrentCode,FldNo);
            IF ADCSCommunication.LastEntryField(CurrentCode,FldNo) THEN BEGIN
              ADCSCommunication.GetNextMiniForm(MiniformHeader,MiniformHeader2);
              MiniformHeader2.SaveXMLin(DOMxmlin);
              CODEUNIT.RUN(MiniformHeader2."Handling Codeunit",MiniformHeader2);
            END ELSE
              ActiveInputField += 1;

            RecRef.GETTABLE(ADCSUser);
            ADCSCommunication.SetRecRef(RecRef);
          END;
      END;

      IF NOT (FuncGroup.KeyDef IN [FuncGroup.KeyDef::Esc]) AND
         NOT ADCSCommunication.LastEntryField(CurrentCode,FldNo)
      THEN
        SendForm(ActiveInputField);
    END;

    LOCAL PROCEDURE GetUser@21(TextValue@1000 : Text[250]) ReturnValue : Boolean;
    BEGIN
      IF ADCSUser.GET(TextValue) THEN BEGIN
        ADCSUserId := ADCSUser.Name;
        ADCSUser.Password := '';
        IF NOT ADCSCommunication.GetWhseEmployee(ADCSUserId,WhseEmpId,LocationFilter) THEN BEGIN
          ADCSMgt.SendError(Text001);
          ReturnValue := FALSE;
          EXIT;
        END;
      END ELSE BEGIN
        ADCSMgt.SendError(Text001);
        ReturnValue := FALSE;
        EXIT;
      END;
      ReturnValue := TRUE;
    END;

    LOCAL PROCEDURE CheckPassword@23(TextValue@1000 : Text[250]) ReturnValue : Boolean;
    BEGIN
      ADCSUser.GET(ADCSUserId);
      IF ADCSUser.Password <> ADCSUser.CalculatePassword(COPYSTR(TextValue,1,30)) THEN BEGIN
        ADCSMgt.SendError(Text002);
        ReturnValue := FALSE;
        EXIT;
      END;
      ReturnValue := TRUE;
    END;

    LOCAL PROCEDURE PrepareData@1();
    BEGIN
      ActiveInputField := 1;
      SendForm(ActiveInputField);
    END;

    LOCAL PROCEDURE SendForm@3(InputField@1000 : Integer);
    BEGIN
      ADCSCommunication.EncodeMiniForm(MiniformHeader,StackCode,DOMxmlin,InputField,Remark,ADCSUserId);
      ADCSCommunication.GetReturnXML(DOMxmlin);
      ADCSMgt.SendXMLReply(DOMxmlin);
    END;

    BEGIN
    END.
  }
}

