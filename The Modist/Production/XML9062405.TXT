OBJECT XMLport 9062405 Enhanced View - Map Data
{
  OBJECT-PROPERTIES
  {
    Date=10/05/16;
    Time=12:00:00 PM;
    Version List=NA2016.15;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Enhanced View - Map Data;
               ENG=Enhanced View - Map Data];
    Encoding=ISO-8859-2;
    XMLVersionNo=1.1;
    Format/Evaluate=XML Format/Evaluate;
    OnPreXMLport=BEGIN
                   EnhViewData.GetEnhViewState(EnhViewCalcMgt);
                   EnhViewCalcMgt.GetCellData(EnhView, Cell);
                   EnhViewCalcMgt.GetCellFields(CellField);

                   LocationOnlyRecords := TRUE;
                   EnhView_Zoom := '7';
                   EnhView_Coordinates := '';
                   EnhView_BingMapKey := GeolocationMgt.BingGetKey();
                   RecordLimit := 150;

                   EnhView_BingMapUrl := '';
                   IF (CURRENTCLIENTTYPE = CLIENTTYPE::Windows) THEN
                     EnhView_BingMapUrl := 'https://dev.virtualearth.net/REST/v1/Imagery/Metadata/';
                 END;

  }
  ELEMENTS
  {
    { [{E4C0F020-7258-419D-AF2E-AD24C667C7E0}];  ;EnhView             ;Element ;Table   ;
                                                  VariableName=EnhView;
                                                  SourceTable=Table9062804;
                                                  Temporary=Yes;
                                                  Export::OnAfterGetRecord=BEGIN
                                                                             EnhView_DataSource := BuildJSonData();
                                                                           END;
                                                                            }

    { [{8FEDA749-8256-4F00-B6DE-B02CD0E87911}];1 ;HideMenu            ;Element ;Field   ;
                                                  DataType=Boolean;
                                                  SourceField=EnhView::Hide Menu Bar }

    { [{038CC334-3A1A-43EA-AB7E-36C508C6C40F}];1 ;Code                ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=EnhView::Code }

    { [{4DBE827A-04D3-4D26-896B-65BC062D4F96}];1 ;Description         ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=EnhView::Description }

    { [{5FBDB97B-5D5D-4D3D-A450-2C5140B9EFE1}];1 ;CenterCoordinates   ;Element ;Text    ;
                                                  VariableName=EnhView_Coordinates }

    { [{87FE3E78-64B3-4F47-8E5D-D7D3DE477BFB}];1 ;Zoom                ;Element ;Text    ;
                                                  VariableName=EnhView_Zoom }

    { [{1FBD980D-3AA8-4F7B-A83C-473E37745318}];1 ;Data                ;Element ;Text    ;
                                                  VariableName=EnhView_DataSource }

    { [{C76465D0-DBD5-4A9B-B5D3-562210578DC1}];1 ;BingMapKey          ;Element ;Text    ;
                                                  VariableName=EnhView_BingMapKey }

    { [{71525E2F-4178-4D98-8F38-18F710F72DD1}];1 ;BingMapsUrl         ;Element ;Text    ;
                                                  VariableName=EnhView_BingMapUrl }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      CellField@1000000013 : TEMPORARY Record 9062807;
      Cell@1000000008 : TEMPORARY Record 9062806;
      CellStyle@1000000003 : Record 9062808;
      EnhViewData@1000000002 : Codeunit 9062678;
      EnhViewCalcMgt@1000000012 : Codeunit 9062674;
      GeolocationMgt@1000000005 : Codeunit 9062729;
      EnhFldMgt@1000000007 : Codeunit 9062298;
      LocationOnlyRecords@1000000009 : Boolean;
      RecRefOpen@1000000001 : Boolean;
      RecRef@1000000000 : RecordRef;
      VariantValue@1000000004 : Variant;
      LocationFieldId@1000000006 : Integer;
      RecordLimit@1000000010 : Integer;
      RecordIndex@1000000011 : Integer;

    LOCAL PROCEDURE OpenRecord@1000000001(RecordVar@1000000000 : RecordID);
    BEGIN
      IF (RecRefOpen) THEN
        RecRef.CLOSE();
      RecRef.OPEN(EnhView."Source Table No.");
      RecRef.GET(RecordVar);
      RecRefOpen := TRUE;
    END;

    LOCAL PROCEDURE BuildJSonData@1000000000() : Text;
    VAR
      EnhFieldValue@1000000009 : Record 9062328;
      JsonMgt@1000000000 : Codeunit 9062670;
      RecId@1000000001 : RecordID;
      FieldValue@1000000006 : Variant;
      CellHtmlStyle@1000000002 : Text;
      CellHtmlClass@1000000003 : Text;
      FormattedValue@1000000004 : Text;
      HasLocation@1000000010 : Boolean;
      LocationFieldId@1000000007 : Integer;
      LocationValue@1000000008 : Text;
    BEGIN
      LocationFieldId := 0;
      RecordIndex := 0;

      JsonMgt.StartJSonArray();
      Cell.RESET();
      Cell.SETRANGE("View Code", EnhView.Code);
      IF (Cell.FINDSET()) THEN BEGIN
        REPEAT
          RecordIndex += 1;

          //load record
          RecId := Cell."Related Record Id";
          OpenRecord(RecId);

          //get location position
          LocationValue := GeolocationMgt.GetRecRefCoordinates(RecRef, LocationFieldId, TRUE, FALSE);
          HasLocation := NOT(GeolocationMgt.EmptyCoordinates(LocationValue));

          //export data
          IF ((HasLocation) OR (NOT(LocationOnlyRecords))) THEN BEGIN

            JsonMgt.StartJSon();

            //add style fields
            CellHtmlStyle := '';
            CellHtmlClass := '';
            IF (Cell."Cell Style Id" <> 0) THEN BEGIN
              CellStyle.GET(Cell."View Code", CellStyle.Type::Cell, 0, Cell."Cell Style Id");
              CellHtmlStyle := CellStyle.GetHtmlStyle();
              CellHtmlClass := CellStyle."Css Class Name";
            END;
            JsonMgt.AddToJSon('EntryStyle', CellHtmlStyle);
            JsonMgt.AddToJSon('EntryClass', CellHtmlClass);
            JsonMgt.AddToJSon('EntryNo', Cell."Entry No.");

            //location position
            IF (HasLocation) THEN BEGIN
              JsonMgt.WritePropertyName('Coordinates');
              JsonMgt.WriteRawValue('[' + LocationValue + ']');
              IF (EnhView_Coordinates = '') THEN
                EnhView_Coordinates := LocationValue;
            END;

            //add details fields
            CellField.RESET();
            IF (CellField.FINDSET()) THEN BEGIN
              REPEAT
                CellField.GetRecRefFieldValue(RecRef, FieldValue);
                JsonMgt.AddToJSon(CellField.Name, FieldValue);
              UNTIL (CellField.NEXT() = 0);
            END;

            JsonMgt.EndJSon();
          END;
        UNTIL ((Cell.NEXT() = 0) OR ((RecordIndex > RecordLimit) AND (RecordLimit > 0)));
      END;

      JsonMgt.EndJSonArray();
      EXIT(JsonMgt.GetJSon());
    END;

    BEGIN
    {
      //DOC NA2016.14 AZ 16/03/2016 - Created
      //DOC NA2016.15 AZ 12/04/2016 - Midifications and bugfixes, Quick Reports support added
      //DOC NA2016.15 JH 10/05/2016 - CfMD amendments
    }
    END.
  }
}

