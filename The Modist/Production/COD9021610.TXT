OBJECT Codeunit 9021610 Internet Shop Management MQ
{
  OBJECT-PROPERTIES
  {
    Date=13/07/16;
    Time=[ 1:51:16 PM];
    Version List=EC2016.6;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      InternetSetup@1000000000 : Record 9021609;
      NoSeriesMgt@1000000001 : Codeunit 396;
      VersionCalls@1000000002 : Codeunit 9021662;
      NewLine@1000000003 : Text[2];
      chr13@1000000004 : Char;
      chr10@1000000005 : Char;
      Text000@1000000016 : TextConst 'ENU=": Rejected, Order no. ";ENG=": Rejected, Order no. "';
      Text001@1000000008 : TextConst 'DAN=Der opstod et problem under ordrebehandlingen.;DEU=Es ist ein Problem wÑhrend der Bearbeitung Ihrer Bestellung aufgetreten.;ENU=A problem occured during processing of your order.;ESP="Su pedido no pudo ser procesado.  ";FRA=Un probläme est survenu pendant le traitement de votre commande.;SVE=Ett problem uppstod vid bearbetaning av din order.;ENG=A problem occured during processing of your order.';
      Text002@1000000009 : TextConst 'DAN=Se venligst denne side:;DEU=Bitte sehen Sie diese Seite fÅr Details:;ENU=Please see this page for details:;ESP=Por favor vea esta P†gina para detalles:;FRA=Consulter cette page pour plus d''information :;SVE=Var god och lÑs denna sida fîr detaljer:;ENG=Please see this page for details:';
      Text003@1000000010 : TextConst 'DAN=Venlig hilsen,;DEU=Mit freundlichen GrÅssen,;ENU=Best regards,;ESP=Atentamente,;FRA=Cordialement,;SVE=Med vÑnlig hÑlsning;ENG=Best regards,';
      Text004@1000000017 : TextConst 'ENU=": Received, Order no. ";ENG=": Received, Order no. "';
      Text005@1000000027 : TextConst 'ENU=": Login information: ";ENG=": Login information: "';
      Text006@1000000013 : TextConst 'DAN=Vi har modtaget din ordre;DEU=Wir haben Ihre Bestellung empfangen;ENU=We have received your order;ESP=Hemos recibido su pedido;FRA=Nous avons reáu votre commande;SVE=Vi har mottagit din order;ENG=We have received your order';
      Text007@1000000014 : TextConst 'DAN=Mere information pÜ;DEU=Detailinformation verfÅgbar bei;ENU=Detailed information available at;ESP=Informaci¢n detallada disponible en;FRA=Information dÇtaillÇe sur;SVE=Detaljerad information finns pÜ;ENG=Detailed information available at';
      Text008@1000000015 : TextConst 'DAN=Mange tak;DEU=Vielen Dank;ENU=Thank You;ESP=Gracias;FRA=Merci;SVE=Tack sÜ mycket;ENG=Thank You';
      Text009@1000000025 : TextConst 'ENU="Your login information for ";ENG="Your login information for "';
      Text010@1000000024 : TextConst 'ENU=" is:";ENG=" is:"';
      Text011@1000000018 : TextConst 'DAN="Bruger ID : ";DEU="Anmeldung: ";ENU="Login    : ";ESP="Login    : ";FRA=Login    :;SVE="Inloggning    : ";ENG="Login    : "';
      Text012@1000000019 : TextConst 'DAN="Adgangskode : ";DEU="Passwort : ";ENU="Password : ";ESP="Password : ";FRA=Mot de passe :;SVE="Lîsenord : ";ENG="Password : "';
      Text013@1000000020 : TextConst 'DAN=Du bedes venligst Êndre adgangskoden ved nëste besõg i butikken.;DEU="Bitte Ñndern Sie bei der nÑchsten Anmeldung Ihr Passwort: ";ENU="Please change your password the next time you login at: ";ESP="Cambie su password la pr¢xima que acceda a: ";FRA=S''il vous plaåt. Changer votre mot de passe au prochain login sur;SVE="Var god och Ñndra ditt lîsenord nÑsta gÜng du loggar in pÜ: ";ENG="Please change your password the next time you login at: "';
      RandomizeCalled@1000000006 : Boolean;
      LabelRec@1000000021 : Record 9021618;
      Text014@1000000022 : TextConst 'ENU=" Web Shop";ENG=" Web Shop"';
      Text015@1190000005 : TextConst 'DEU=Kundennummer :;ENU="Customer Account No. ";FRA=Compte Client : No.;ENG="Customer Account No. "';
      Attach@1000000011 : ARRAY [10] OF Text[30];

    PROCEDURE ChooseCustomer@2();
    BEGIN
    END;

    PROCEDURE CustomerImpersonate@6(InternetCustomer@1000000000 : Record 9021642);
    BEGIN
      InternetCustomer.TESTFIELD(Login);
      Impersonate(InternetCustomer."No.",InternetCustomer."Label Code");
    END;

    PROCEDURE ImpersonateB2B@1160840001(InternetCustomerB2B@1160840000 : Record 9021643);
    BEGIN
      InternetCustomerB2B.TESTFIELD(Login);
      Impersonate(InternetCustomerB2B."No.",InternetCustomerB2B."Label Code");
    END;

    PROCEDURE Impersonate@1160840000(UserGuid@1160840000 : Text[40];LabelCode@1000000000 : Code[10]);
    VAR
      URL@1160840001 : Text[250];
    BEGIN
      LabelRec.GET(LabelCode);

      //DOC EC2013.3.30 -
      //IF (NOT mqGlobals2.ValidateEnvironment(LabelCode)) THEN
      //  //this error will never be called as the ValidateEnvironment method always errors if it doesn't return TRUE
      //  ERROR('Error in Validate Environment');
      //DOC EC2013.3.30 +

      InternetSetup.GET();
      URL := LabelRec."Remote Shop URL" + '/admin/impersonate.' + InternetSetup.ASPExtension() + '?UserGuid=%1';
      HYPERLINK(STRSUBSTNO(URL,URLEncode(UserGuid)));
    END;

    PROCEDURE CustomerChangePassword@7(InternetCustomer@1000000000 : Record 9021642);
    VAR
      URL@1000000001 : Text[250];
    BEGIN
      LabelRec.GET(InternetCustomer."Label Code");

      InternetSetup.GET();

      //DOC EC2013.3.30 -
      //IF (NOT mqGlobals2.ValidateEnvironment(LabelRec.Code)) THEN
      //  //this error will never be called as the ValidateEnvironment method always errors if it doesn't return TRUE
      //  ERROR('Error in Validate Environment');
      //DOC EC2013.3.30 +

      InternetCustomer.TESTFIELD(Login);
      URL := LabelRec."Remote Shop URL" + '/admin/password.' + InternetSetup.ASPExtension() + '?UserGuid=%1';
      HYPERLINK(STRSUBSTNO(URL,URLEncode(InternetCustomer."No.")));
    END;

    PROCEDURE FormatURL@1(VAR URL@1000000000 : Text[80]);
    BEGIN
      IF URL <> '' THEN BEGIN
        URL := LOWERCASE(URL);

        WHILE COPYSTR(URL, STRLEN(URL),1) = '/' DO BEGIN
          URL := COPYSTR(URL, 1, STRLEN(URL) - 1);
        END;
      END;
    END;

    PROCEDURE URLEncode@1000000000(URL@1000000000 : Text[250]) : Text[250];
    BEGIN
      // This fuction replaces { and } with the corrospondning HTML codes'
      URL := Replace(URL, '{', '%7B');
      URL := Replace(URL, '}', '%7D');
      EXIT(URL);
    END;

    PROCEDURE InternetOrderRejected@3("E-mail"@1000000000 : Text[80];"Internet Order No."@1000000001 : Text[38];LabelCode@1000000004 : Code[10]);
    VAR
      Subject@1000000002 : Text[250];
      Body@1000000003 : Text[1000];
    BEGIN
      LabelRec.GET(LabelCode);
      InternetSetup.GET;
      chr13 := 13;
      chr10 := 10;
      NewLine := FORMAT(chr13) + FORMAT(chr10);

      Subject := LabelRec."Trading Name" + Text014 + Text000 + "Internet Order No." ;

      Body := Text001 + NewLine +
              NewLine +
              Text002 + NewLine +
              LabelRec."Remote Shop URL" + '/history_detail.' + InternetSetup.ASPExtension()
                + '?HeaderGuid=' + URLEncode("Internet Order No.") +
              NewLine +
              NewLine +
              Text003  + NewLine +
              LabelRec."Trading Name";

      IF "E-mail" <> '' THEN
        //DOC EC2015.5.03 Mail.NewMessage("E-mail",'',Subject,Body,'',TRUE);
        VersionCalls.MailNewMessage("E-mail",'','',Subject,Body,'',TRUE); //DOC EC2015.5.03
    END;

    PROCEDURE InternetOrderConverted@4("E-mail"@1000000000 : Text[80];"Internet Order No."@1000000001 : Text[38];LabelCode@1000000004 : Code[10]);
    VAR
      Subject@1000000002 : Text[250];
      Body@1000000003 : Text[1000];
    BEGIN
      LabelRec.GET(LabelCode);
      InternetSetup.GET;
      chr13 := 13;
      chr10 := 10;
      NewLine := FORMAT(chr13) + FORMAT(chr10);

      Subject := LabelRec."Trading Name" + Text014 + Text004 + "Internet Order No.";

      Body := Text006 + NewLine +
              NewLine +
              Text007  + NewLine +
              LabelRec."Remote Shop URL" +
              '/history_detail.' + InternetSetup.ASPExtension() + '?HeaderGuid=' + URLEncode("Internet Order No.") +
              NewLine +
              NewLine +
              Text008  + NewLine +
              LabelRec."Trading Name";

      IF "E-mail" <> '' THEN
        //DOC EC2015.5.03 Mail.NewMessage("E-mail",'',Subject,Body,'',TRUE);
        VersionCalls.MailNewMessage("E-mail",'','',Subject,Body,'',TRUE); //DOC EC2015.5.03
    END;

    PROCEDURE InternetNewLoginInfo@14("E-mail"@1000000000 : Text[80];Login@1000000001 : Text[80];Password@1000000002 : Text[20];LabelCode@1000000005 : Code[10];CustomerNo@1190000005 : Code[20]);
    VAR
      Subject@1000000003 : Text[250];
      Body@1000000004 : Text[1000];
      OpenText@1190000006 : Text[250];
    BEGIN
      LabelRec.GET(LabelCode);
      InternetSetup.GET;
      chr13 := 13;
      chr10 := 10;
      NewLine := FORMAT(chr13) + FORMAT(chr10);

      //DOC EC2013.3.20 -
      IF LabelCode IN ['DERM','DERMUK2015'] THEN //DOC EC2015.5.02
        Subject := LabelRec."Trading Name" + Text014 + Text005
      ELSE
      //DOC EC2013.3.20 +
      Subject := LabelRec."Trading Name" + Text014 + Text005 + Login;
      IF CustomerNo = '' THEN
        OpenText := ''
      ELSE
        OpenText := Text015 + CustomerNo + NewLine;
      Body := OpenText + Text009 + LabelRec."Trading Name" + Text010 + NewLine +
              NewLine +
              Text011 + Login + NewLine +
              Text012 + Password + NewLine +
              NewLine +
              Text013 + NewLine +
              LabelRec."Remote Shop URL" +
              NewLine +
              NewLine +
              Text008  + NewLine +
              LabelRec."Trading Name";


      IF "E-mail" <> '' THEN
        //DOC EC2015.5.03 Mail.NewMessage("E-mail",'',Subject,Body,'',TRUE);
        VersionCalls.MailNewMessage("E-mail",'','',Subject,Body,'',TRUE);  //DOC EC2015.5.03
    END;

    LOCAL PROCEDURE GenerateRandom@16(Length@1000000000 : Integer) : Text[250];
    BEGIN
      EXIT(GenerateRandomGeneral(Length,'ABCDEFGHIJKLMNOPQRSTUVWXYZ'));
    END;

    PROCEDURE GenerateRandomAlphaNum@8(Length@1000000000 : Integer) : Text[250];
    VAR
      Result@1000000001 : Text[250];
      InStr@1000000002 : Text[250];
      i@1000000003 : Integer;
    BEGIN
      EXIT(GenerateRandomGeneral(Length,'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'));
    END;

    LOCAL PROCEDURE GenerateRandomGeneral@21(Length@1000000000 : Integer;InStr@1000000001 : Text[250]) : Text[250];
    VAR
      Result@1000000002 : Text[250];
      i@1000000003 : Integer;
      MaxRand@1000000004 : Integer;
      r@1000000005 : Decimal;
      r2@1000000006 : Integer;
    BEGIN
      MaxRand := 1073741824;

      IF Length < 250 THEN BEGIN
        Result := '';
        FOR i := 1 TO Length DO BEGIN
          r := RANDOM(MaxRand);
          r2 := ROUND ((r / MaxRand) * STRLEN(InStr), 1) + 1;
          Result := Result + FORMAT(InStr[r2]);
        END;
        EXIT(Result);
      END;
    END;

    PROCEDURE Randomize@5();
    BEGIN
      IF NOT RandomizeCalled THEN BEGIN
        RANDOMIZE();
        RandomizeCalled := TRUE;
      END;
    END;

    PROCEDURE Encrypt@17(s@1000000000 : Text[125]) : Text[250];
    VAR
      i@1000000001 : Integer;
      r@1000000002 : Text[250];
      ch@1000000003 : Char;
    BEGIN
      FOR i := 1 TO STRLEN(s) DO
      BEGIN
        ch := s[i];
        ch := intXOR(ch,111);
        r := r + toHex(ch);
      END;

      EXIT(r);
    END;

    PROCEDURE Decrypt@18(s@1000000000 : Text[125]) : Text[250];
    VAR
      i@1000000001 : Integer;
      r@1000000002 : Text[250];
      str@1000000003 : Text[10];
      ch@1000000004 : Char;
    BEGIN
      FOR i := 1 TO STRLEN(s)/2 DO
      BEGIN
        str := COPYSTR(s, (i-1)*2+1, 2);
        ch := fromHex(str);
        ch := intXOR(ch,111);
        r := r + FORMAT(ch);
      END;

      EXIT(r);
    END;

    LOCAL PROCEDURE intXOR@13(a@1000000000 : Integer;b@1000000001 : Integer) : Integer;
    VAR
      c@1000000002 : Integer;
      n@1000000003 : Integer;
    BEGIN
      c := 0;
      n := 0;

      WHILE (a>0) OR (b>0) DO
      BEGIN
        c := c + BoolNum(BoolVal(a MOD 2) XOR BoolVal(b MOD 2)) * POWER(2,n);
        a := a DIV 2;
        b := b DIV 2;
        n := n + 1;
      END;

      EXIT (c);
    END;

    LOCAL PROCEDURE BoolVal@12(int@1000000000 : Integer) : Boolean;
    BEGIN
      IF int <> 0 THEN
        EXIT (TRUE)
      ELSE
        EXIT (FALSE);
    END;

    LOCAL PROCEDURE BoolNum@11(bool@1000000000 : Boolean) : Integer;
    BEGIN
      IF bool THEN
        EXIT(1)
      ELSE
        EXIT(0);
    END;

    LOCAL PROCEDURE toHex@10(Char@1000000000 : Char) : Text[2];
    VAR
      Ascii@1000000001 : Integer;
      a@1000000002 : Integer;
      b@1000000003 : Integer;
      Hex@1000000004 : Text[3];
    BEGIN
      Ascii := Char;

      REPEAT
        a := Ascii DIV 16;
        b := Ascii MOD 16;
        Ascii := a;
        Hex := COPYSTR('0123456789ABCDEF',b + 1,1) + Hex;
      UNTIL Ascii = 0;

      IF STRLEN(Hex) < 2 THEN
        Hex := '0' + Hex;

      EXIT(Hex);
    END;

    LOCAL PROCEDURE fromHex@20(hex@1000000000 : Text[2]) : Char;
    VAR
      Ascii@1000000001 : Integer;
      a@1000000002 : Integer;
      b@1000000003 : Integer;
    BEGIN
      a := STRPOS('0123456789ABCDEF',COPYSTR(hex,1,1)) - 1;
      b := STRPOS('0123456789ABCDEF',COPYSTR(hex,2,1)) - 1;
      EXIT(a*16 + b)
    END;

    PROCEDURE Replace@1000000001(expression@1000000000 : Text[250];find@1000000001 : Text[250];replacewith@1000000002 : Text[250]) : Text[250];
    VAR
      pos@1000000004 : Integer;
      pos2@1000000003 : Integer;
    BEGIN
      pos := STRPOS(expression, find);
      WHILE pos > 0 DO BEGIN
        expression := COPYSTR(expression, 1, pos - 1) + replacewith + COPYSTR(expression, pos + STRLEN(find));
        pos2 := STRPOS(COPYSTR(expression, pos + STRLEN(replacewith)), find);
        IF pos2 > 0 THEN
          pos := pos + STRLEN(replacewith) + pos2 - 1
        ELSE
          pos := 0;
      END;
      EXIT(expression);
    END;

    BEGIN
    {
      //DOC EC2013.3.20 MQ 01/01/2013 - Changed Subject for DERM; Changed for FINBRANDS
      //DOC EC2013.3.20 MQ 18/10/2012 - GW121018 language upgrade
      //DOC EC2013.3.30 MA 04/12/2012 - MA121204 Added calls to ValidateEnvironment in Impersonate and CustomerChangePassword Functions
      //DOC EC2013.3.30 MQ 06/12/2012 - GW121206 Remove GenerateGUID function, now use CREATEGUID instead.
      //DOC EC2013.3.80 MQ 20/08/2013 - GW130820 Remove GenerateShopperID as not used anywhere.
      //DOC EC2013.4.00 MQ 06/11/2013 - GW131106 Problem with mqGlobals2.ValidateEnvironment - now in MQ Global Functions 2 but commented out.
      //DOC EC2015.5.02 MQ 16/04/2015 - GW150416 Add support for DERMUK2015 x1
      //DOC EC2015.5.03 MQ 08/06/2015 - GW150608 Mail.NewMessage now via Version Calls because 2015 has extra BcName.
      //DOC EC2016.6    JH 05/10/2016 - ECom 2016
    }
    END.
  }
}

