OBJECT Page 9063100 E-Mail
{
  OBJECT-PROPERTIES
  {
    Date=24/05/16;
    Time=11:48:18 AM;
    Version List=NH2016.16;
  }
  PROPERTIES
  {
    Editable=Yes;
    CaptionML=[ENU=E-Mail;
               ENG=E-Mail];
    DeleteAllowed=No;
    LinksAllowed=No;
    SourceTable=Table9062281;
    DataCaptionExpr=PageCaption;
    PageType=StandardDialog;
    SourceTableTemporary=Yes;
    ShowFilter=No;
    OnInit=BEGIN
             //CurrPage.LOOKUPMODE(TRUE);
             PageResult := ACTION::Cancel;
             SendOnClose := TRUE;
           END;

    OnOpenPage=VAR
                 i@1000000000 : Integer;
               BEGIN
                 //UpdatePageCaption(TRUE);
               END;

    OnAfterGetRecord=VAR
                       i@1000000000 : Integer;
                     BEGIN
                       UpdateGlobals();
                     END;

    OnNewRecord=VAR
                  CRMLogEntry@1000000001 : Record 9062392;
                BEGIN
                  EMailManagement.CreateEMail;
                  EMailManagement.GetEMail(Rec);

                  // CLEAR(TempBlob);
                  // BLOBToolkit.TextToBlob(CRMLogView,TempBlob);
                  //
                  // Rec."CRM Log Filters" := TempBlob.Blob;
                  // CRMLogEntry.SETVIEW(CRMLogView);
                  //
                  // CRMLogEntry.SETFILTER("Entry No.",GETFILTER("CRM Log Entry No."));
                  // IF CRMLogEntry.FINDFIRST THEN
                  //  IF CRMLogEntry.GETFILTER("Related Contact") <> '' THEN
                  //   VALIDATE("Contact No.",CRMLogEntry.GETFILTER("Related Contact"));
                  IF GETFILTER("Contact No.") <> '' THEN
                    VALIDATE(Rec."Contact No.",GETFILTER(Rec."Contact No."));
                END;

    OnQueryClosePage=VAR
                       lResult@9062229 : Boolean;
                     BEGIN
                       IF (Closing) THEN
                         OKSelected := (RequestedAction = ACTION::LookupOK) OR (RequestedAction = ACTION::OK)
                       ELSE
                         OKSelected := (CloseAction = ACTION::LookupOK) OR (CloseAction = ACTION::OK);

                       IF (CloseAction = ACTION::LookupOK) OR (CloseAction = ACTION::OK) THEN BEGIN
                         IF (NOT(Closing)) THEN BEGIN
                           RequestedAction := CloseAction;
                           HtmlSessionMgt.GetValueAndClose();
                           EXIT(FALSE);
                         END;
                       END;
                       EXIT(TRUE);
                     END;

    OnAfterGetCurrRecord=BEGIN
                           UpdateGlobals();
                         END;

  }
  CONTROLS
  {
    { 9062229; ;Container ;
                Name=ContentAreaContainer;
                CaptionML=[ENU=Content Area;
                           ENG=Content Area];
                ContainerType=ContentArea }

    { 1000000002;1;Field  ;
                SourceExpr="Contact No.";
                QuickEntry="Contact No."='' }

    { 1000000003;1;Field  ;
                SourceExpr="Contact Name";
                QuickEntry=FALSE }

    { 1000000011;1;Field  ;
                Name=To;
                CaptionML=[ENU=Recipients;
                           ENG=Recipients];
                SourceExpr=Recipients;
                Importance=Promoted;
                ColumnSpan=2;
                OnValidate=BEGIN
                             UpdatePageCaption(FALSE);
                           END;

                ShowMandatory=TRUE }

    { 1000000009;1;Field  ;
                SourceExpr=CC;
                QuickEntry=FALSE }

    { 1000000001;1;Field  ;
                SourceExpr=BCC;
                Importance=Additional;
                QuickEntry=FALSE }

    { 1000000007;1;Field  ;
                SourceExpr=Subject;
                OnValidate=BEGIN
                             UpdatePageCaption(FALSE);
                           END;

                ShowMandatory=TRUE }

    { 1000000004;1;Field  ;
                CaptionML=[ENU=Attachments;
                           ENG=Attachments];
                SourceExpr=EMailAttachmentsList.GetAllRecordsDescriptionText;
                Editable=FALSE;
                OnDrillDown=VAR
                              FileAttachmentProcessing@1000000001 : Codeunit 9062600;
                              FileAttachment@1000000000 : Record 9062272;
                              EMailAttachment@1000000002 : TEMPORARY Record 9062283;
                            BEGIN
                              //IF AddEMailAttachment THEN BEGIN
                              //  AttachmentsText := EMailAttachments.AllRecordsDescriptionText;
                              //
                              //END;

                              CLEAR(EMailAttachmentsList);
                              EMailAttachmentsList.SetEMailAttachments(EMailAttachments);
                              EMailAttachmentsList.RUNMODAL;// = ACTION::OK THEN;
                              EMailAttachmentsList.GetEMailAttachments(EMailAttachments);
                            END;

                QuickEntry=FALSE }

    { 1000000008;1;Field  ;
                SourceExpr="Create CRM Log";
                QuickEntry=FALSE }

    { 1000000000;1;Field  ;
                Name=HtmlControl;
                CaptionML=[ENU=HtmlControl;
                           ENG=HtmlControl];
                SourceExpr=HtmlText;
                ControlAddIn=[TheNavPeople.UniversalHtmlControl;PublicKeyToken=403a82f1963ddd94] }

  }
  CODE
  {
    VAR
      EMailManagement@9062231 : Codeunit 9062617;
      BodyText@9062229 : Text;
      PageResult@9062230 : Action;
      PageCaption@9062232 : Text INDATASET;
      HtmlSessionMgt@1000000003 : Codeunit 9062682;
      HtmlControlInitialized@1000000002 : Boolean;
      HtmlText@1000000001 : Text;
      HtmlControlRequestHandler@1000000000 : DotNet "'TheNavPeople.HtmlControlCommunication.9.0.0.0, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7c0c47cc7f65ff95'.TheNavPeople.HtmlControlCommunication.RequestMessageEvent" WITHEVENTS;
      RequestedAction@1000000006 : Action;
      OKSelected@1000000005 : Boolean;
      Closing@1000000004 : Boolean;
      eConfirmation@1000000007 : TextConst 'ENU=The e-mail hasn''t been sent. If you close the page, you''ll lose the whole content. Do you want to abandon your e-mail?;ENG=The e-mail hasn''t been sent. If you close the page, you''ll lose the whole content. Do you want to abandon your e-mail?';
      ShowCCBCC@1000000008 : Boolean;
      AttachmentsText@1000000009 : Text;
      EMailAttachments@1000000010 : TEMPORARY Record 9062283;
      EMailAttachmentsList@1000000011 : Page 9063101;
      SendOnClose@1000000012 : Boolean;
      BLOBToolkit@1000000014 : Codeunit 9062242;

    PROCEDURE SetEMail@9062230(VAR pEMail@9062229 : Record 9062281);
    BEGIN
      Rec.DELETEALL();
      Rec := pEMail;
      Rec.INSERT();
      BodyText := Rec.GetBodyText(FALSE);
    END;

    PROCEDURE SetEMailAttachments@9062232(VAR pEMailAttachment@9062229 : Record 9062283);
    BEGIN
      EMailAttachmentsList.SetEMailAttachments(pEMailAttachment);
    END;

    PROCEDURE SetSendOnClose@1000000005(SetTo@1000000000 : Boolean);
    BEGIN
      SendOnClose := SetTo;
    END;

    PROCEDURE OK@9062229() : Boolean;
    BEGIN
      EXIT((RequestedAction = ACTION::LookupOK) OR (RequestedAction = ACTION::OK));
    END;

    PROCEDURE GetEMail@9062231(VAR pEMail@9062229 : Record 9062281);
    BEGIN
      pEMail := Rec;
    END;

    PROCEDURE GetEMailAttachments@9062233(VAR pEMailAttachment@9062229 : Record 9062283);
    BEGIN
      EMailAttachmentsList.GetEMailAttachments(pEMailAttachment);
    END;

    LOCAL PROCEDURE UpdateGlobals@9062234();
    BEGIN
      EMailAttachmentsList.SetEMail(Rec);
    END;

    LOCAL PROCEDURE UpdatePageCaption@9062235(pOnPageOpen@9062230 : Boolean);
    VAR
      lRecipientsOuterTemplate@9062229 : Text;
      eRecipientsInnerTemplate@9062231 : TextConst 'ENU=To: %1;ENG=To: %1';
    BEGIN
      IF ( NOT (pOnPageOpen)) THEN
        CurrPage.SAVERECORD();

      CLEAR(PageCaption);
      IF (Rec.Subject <> '') THEN
        PageCaption := Rec.Subject;
      IF (Rec.Recipients <> '') THEN
      BEGIN
        IF (PageCaption <> '') THEN
          lRecipientsOuterTemplate := ' (%1)'
        ELSE
          lRecipientsOuterTemplate := '%1';
        PageCaption := PageCaption + STRSUBSTNO(lRecipientsOuterTemplate, STRSUBSTNO(eRecipientsInnerTemplate, Rec.Recipients));
      END;
      IF (PageCaption = '') THEN
        PageCaption := Rec.TABLECAPTION();

      IF ( NOT (pOnPageOpen)) THEN
        CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE OnHtmlControlInitialized@1000000000();
    BEGIN
      IF (NOT(HtmlControlInitialized)) THEN BEGIN
        HtmlControlInitialized := TRUE;
        HtmlControlRequestHandler := HtmlControlRequestHandler.RequestMessageEvent();
      END;
      HtmlSessionMgt.InitializeSimpleEditor(HtmlControlRequestHandler);
      //HtmlSessionMgt.SetText('<p><span style="font-family: arial,helvetica,sans-serif; font-size: 18pt;">:(');
    END;

    LOCAL PROCEDURE OnHtmlControlResourcesLoaded@1000000003();
    BEGIN
      HtmlSessionMgt.LinksLoaded();
    END;

    LOCAL PROCEDURE OnHtmlControlMessage@1000000001(ControlMessage@1000000000 : DotNet "'TheNavPeople.HtmlControlCommunication.9.0.0.0, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7c0c47cc7f65ff95'.TheNavPeople.HtmlControlCommunication.ControlMessage");
    VAR
      ClosePage@1000000001 : Boolean;
    BEGIN
      HtmlSessionMgt.HandleControlMessage(ControlMessage, ClosePage);
      IF (ClosePage) THEN BEGIN
        Closing := TRUE;
        Rec.SetBodyText(HtmlSessionMgt.GetText);
        CurrPage.SAVERECORD();

        IF SendOnClose THEN BEGIN
          EMailManagement.SetEMail(Rec);
          EMailAttachmentsList.GetEMailAttachments(EMailAttachments);
          EMailManagement.SetEMailAttachments(EMailAttachments);
          EMailManagement.SendEMail;
        END;

        CurrPage.CLOSE();

      END;
    END;

    LOCAL PROCEDURE OnHtmlControlRequesMessage@1000000002(RequestMessage@1000000000 : DotNet "'TheNavPeople.HtmlControlCommunication.9.0.0.0, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7c0c47cc7f65ff95'.TheNavPeople.HtmlControlCommunication.RequestMessage");
    BEGIN
      IF (HtmlControlInitialized) THEN
        CurrPage.HtmlControl.SendRequest(RequestMessage);
    END;

    PROCEDURE AddEMailAttachment@1000000004() : Boolean;
    VAR
      lResult@9062230 : Boolean;
    BEGIN
      lResult := EMailManagement.AddAttachment(Rec, EMailAttachments);
      IF (lResult) THEN
        CurrPage.UPDATE(FALSE);
      EXIT(lResult);
    END;

    EVENT HtmlControl@-1000000000::ControlAddInReady@1();
    BEGIN
      OnHtmlControlInitialized();
    END;

    EVENT HtmlControl@-1000000000::ControlMessage@2(message@1000000000 : DotNet "'TheNavPeople.HtmlControlCommunication.9.0.0.0, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7c0c47cc7f65ff95'.TheNavPeople.HtmlControlCommunication.ControlMessage");
    BEGIN
      OnHtmlControlMessage(message);
    END;

    EVENT HtmlControl@-1000000000::ControlResourcesLoaded@3();
    BEGIN
      OnHtmlControlResourcesLoaded();
    END;

    EVENT HtmlControlRequestHandler@1000000000::OnEvent@8(message@1000000000 : DotNet "'TheNavPeople.HtmlControlCommunication.9.0.0.0, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7c0c47cc7f65ff95'.TheNavPeople.HtmlControlCommunication.RequestMessage");
    BEGIN
      OnHtmlControlRequesMessage(message);
    END;

    BEGIN
    {
      //DOC NA2016.10 JH 30/09/2015 - Created
      //DOC NA2016.14 PC 02/03/2016 - Redesigned
      //DOC NA2016.15 JH 10/05/2016 - CfMD amendments
      //DOC NA2016.16 AZ 24/05/2016 - CfMD amendments
    }
    END.
  }
}

