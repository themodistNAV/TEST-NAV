OBJECT Codeunit 9062587 Name Value Toolkit
{
  OBJECT-PROPERTIES
  {
    Date=28/01/16;
    Time=12:00:00 PM;
    Version List=NA2016.12;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      String@1000000001 : Codeunit 9062236;

    PROCEDURE NameValueLookup@1000000108(VAR pNameValueBuffer@1000000000 : Record 9062730;pValueVisible@1000000003 : Boolean) : Boolean;
    VAR
      lResult@1000000002 : Boolean;
    BEGIN
      //DOC NA2016.10 - Performing name / value lookup
      //  <> pNameValueBuffer: Source / target recordset
      //  -> pValueVisible: Value visible flag
      //  <- Lookup result

      pNameValueBuffer.SETRANGE("Value Visible", pValueVisible);
      pNameValueBuffer.SETRANGE("Selected Visible", FALSE);

      IF (PAGE.RUNMODAL(PAGE::"Name Value Buffer", pNameValueBuffer) = ACTION::LookupOK) THEN
        lResult := TRUE;

      EXIT(lResult);
    END;

    PROCEDURE NameValueLookupWithSelection@1000000129(VAR pNameValueBuffer@1000000000 : Record 9062730;pValueVisible@1000000003 : Boolean) : Boolean;
    VAR
      lNameValueBuffer@1000000004 : Record 9062730;
      lResult@1000000002 : Boolean;
    BEGIN
      //DOC NA2016.10 - Performing name / value lookup with selection
      //  <> pNameValueBuffer: Source / target recordset
      //  -> pValueVisible: Value visible flag
      //  <- Lookup result

      pNameValueBuffer.SETRANGE("Value Visible", pValueVisible);
      pNameValueBuffer.SETRANGE("Selected Visible", TRUE);

      IF (PAGE.RUNMODAL(PAGE::"Name Value Buffer", pNameValueBuffer) = ACTION::LookupOK) THEN
      BEGIN
        pNameValueBuffer.RESET();
        lNameValueBuffer := pNameValueBuffer;
        IF (pNameValueBuffer.FINDSET()) THEN;
        IF (pNameValueBuffer.GET(lNameValueBuffer.ID)) THEN;
        lResult := TRUE;
      END;

      EXIT(lResult);
    END;

    PROCEDURE SelectNameValueRecordsById@1000000122(VAR pNameValueBuffer@1000000000 : Record 9062730;pString@1000000005 : Text;pSeparator@1000000004 : Text;pIgnoreEmptyLines@1000000003 : Boolean;pZeroBasedNumbering@1000000002 : Boolean);
    VAR
      lNameValueBufferTmp@1000000001 : TEMPORARY Record 9062730;
    BEGIN
      //DOC NA2015.3 - Selecting name / value records
      //  <> pNameValueBuffer: The buffer
      //  -> pString: String to split
      //  -> pSeparator: Separator
      //  -> pIgnoreEmptyLines: Ignoring empty lines
      //  -> pZeroBasedNumbering: TRUE: Lines Numbered from 0, FALSE: Lines numbered from 1

      SelectNameValueRecords(pNameValueBuffer, pString, pSeparator, pIgnoreEmptyLines, pZeroBasedNumbering, pNameValueBuffer.FIELDNO(ID));
    END;

    PROCEDURE SelectNameValueRecordsByName@1000000118(VAR pNameValueBuffer@1000000000 : Record 9062730;pString@1000000005 : Text;pSeparator@1000000004 : Text;pIgnoreEmptyLines@1000000003 : Boolean;pZeroBasedNumbering@1000000002 : Boolean);
    VAR
      lNameValueBufferTmp@1000000001 : TEMPORARY Record 9062730;
    BEGIN
      //DOC NA2015.3 - Selecting name / value records
      //  <> pNameValueBuffer: The buffer
      //  -> pString: String to split
      //  -> pSeparator: Separator
      //  -> pIgnoreEmptyLines: Ignoring empty lines
      //  -> pZeroBasedNumbering: TRUE: Lines Numbered from 0, FALSE: Lines numbered from 1

      SelectNameValueRecords(pNameValueBuffer, pString, pSeparator, pIgnoreEmptyLines, pZeroBasedNumbering, pNameValueBuffer.FIELDNO(Name));
    END;

    LOCAL PROCEDURE SelectNameValueRecords@1000000121(VAR pNameValueBuffer@1000000000 : Record 9062730;pString@1000000005 : Text;pSeparator@1000000004 : Text;pIgnoreEmptyLines@1000000006 : Boolean;pZeroBasedNumbering@1000000003 : Boolean;pFieldNo@1000000002 : Integer);
    VAR
      lNameValueBufferTmp@1000000001 : TEMPORARY Record 9062730;
    BEGIN
      //DOC NA2015.3 - Selecting name / value records
      //  <> pNameValueBuffer: The buffer
      //  -> pString: String to split
      //  -> pSeparator: Separator
      //  -> pIgnoreEmptyLines: Ignoring empty lines
      //  -> pZeroBasedNumbering: TRUE: Lines Numbered from 0, FALSE: Lines numbered from 1
      //  -> pFieldNo: Field number ("ID" or "Name")

      IF ( NOT (pFieldNo IN [pNameValueBuffer.FIELDNO(ID), pNameValueBuffer.FIELDNO(Name)])) THEN
        EXIT;

      pNameValueBuffer.MODIFYALL(Selected, FALSE);

      String.SplitAdvanced(pString, pSeparator, pIgnoreEmptyLines, pZeroBasedNumbering, lNameValueBufferTmp);
      IF (lNameValueBufferTmp.FINDSET()) THEN
      REPEAT
        CASE (pFieldNo) OF
          pNameValueBuffer.FIELDNO(ID):
            pNameValueBuffer.SETRANGE(ID, lNameValueBufferTmp.ID);
          pNameValueBuffer.FIELDNO(Name):
            pNameValueBuffer.SETRANGE(Name, lNameValueBufferTmp.Name);
        END;
        IF (pNameValueBuffer.FINDFIRST()) THEN
        BEGIN
          pNameValueBuffer.Selected := TRUE;
          pNameValueBuffer.MODIFY();
        END;
        pNameValueBuffer.SETRANGE(ID);
        pNameValueBuffer.SETRANGE(Name);
      UNTIL (lNameValueBufferTmp.NEXT() = 0);
    END;

    PROCEDURE AddToNameValueBuffer@1000000032(VAR pNameValueBuffer@1000000000 : Record 9062730;pId@1000000001 : Integer;pName@1000000002 : Text[250]);
    BEGIN
      //DOC NA2016.10 - Adding to name / value buffer
      //  <> pNameValueBuffer: The buffer
      //  -> pId: Identifier
      //  -> pName: Name

      AddToNameValueBufferF(pNameValueBuffer, pId, pName, '', FALSE);
    END;

    PROCEDURE AddToNameValueBufferV@1000000110(VAR pNameValueBuffer@1000000000 : Record 9062730;pId@1000000001 : Integer;pName@1000000002 : Text[250];pValue@1000000003 : Text[250]);
    BEGIN
      //DOC NA2016.10 - Adding to name / value buffer with value
      //  <> pNameValueBuffer: The buffer
      //  -> pId: Identifier
      //  -> pName: Name
      //  -> pValue: Value

      AddToNameValueBufferF(pNameValueBuffer, pId, pName, pValue, FALSE);
    END;

    PROCEDURE AddToNameValueBufferF@1000000116(VAR pNameValueBuffer@1000000000 : Record 9062730;pId@1000000001 : Integer;pName@1000000002 : Text[250];pValue@1000000003 : Text[250];pSelected@1000000004 : Boolean);
    BEGIN
      //DOC NA2016.10 - Adding to name / value buffer (full version)
      //  <> pNameValueBuffer: The buffer
      //  -> pId: Identifier
      //  -> pName: Name
      //  -> pValue: Value
      //  -> pSelected: Selected

      pNameValueBuffer.ID := pId;
      pNameValueBuffer.Name := pName;
      pNameValueBuffer.Value := pValue;
      pNameValueBuffer.Selected := pSelected;
      pNameValueBuffer.INSERT();
    END;

    BEGIN
    {
      //DOC NA2016.10 JH 26/08/2015 - Created (functionality extracted from "TNP Toolkit")
      //DOC NA2016.12 JH 28/01/2016 - New string codeunit
    }
    END.
  }
}

