OBJECT Table 9062445 Panel Menu Item
{
  OBJECT-PROPERTIES
  {
    Date=10/05/16;
    Time=12:00:00 PM;
    Version List=NA2016.15;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               Rec.TESTFIELD("Panel Menu Code");
               IF (Rec.ID = 0) THEN
                 Rec.ID := NewId();
               UpdateControlName();
               mTnpToolkit.UpdateCreatedBy(Rec."Created By", Rec."Created Date Time");
             END;

    OnModify=BEGIN
               UpdateControlName();
               mTnpToolkit.UpdateModifiedBy(Rec."Modified By", Rec."Modified Date Time");
             END;

    OnRename=BEGIN
               UpdateControlName();
             END;

    CaptionML=[ENU=Tile Panel Menu Item;
               ENG=Tile Panel Menu Item];
  }
  FIELDS
  {
    { 1   ;   ;Panel Menu Code     ;Code20        ;TableRelation="Panel Menu";
                                                   CaptionML=[ENU=Panel Menu Code;
                                                              ENG=Panel Menu Code] }
    { 3   ;   ;ID                  ;Integer       ;CaptionML=[ENU=ID;
                                                              ENG=ID] }
    { 11  ;   ;Sequence            ;Integer       ;CaptionML=[ENU=Sequence;
                                                              ENG=Sequence] }
    { 12  ;   ;Item Type           ;Option        ;OnValidate=BEGIN
                                                                IF (Rec."Item Type" <> Rec."Item Type"::"Menu Item") THEN
                                                                BEGIN
                                                                  Rec.VALIDATE("Action Type", Rec."Action Type"::" ");
                                                                  Rec.VALIDATE(Text, '');
                                                                  Rec.VALIDATE("Codeunit ID", 0);
                                                                  CLEAR(Rec.Image);
                                                                  Rec.VALIDATE(Image);
                                                                END;
                                                                UpdateControlName();
                                                              END;

                                                   CaptionML=[ENU=Item Type;
                                                              ENG=Item Type];
                                                   OptionCaptionML=[ENU=" ,Menu Item,Separator";
                                                                    ENG=" ,Menu Item,Separator"];
                                                   OptionString=[ ,Menu Item,Separator] }
    { 13  ;   ;Action Type         ;Option        ;OnValidate=BEGIN
                                                                IF (Rec."Action Type" <> xRec."Action Type") THEN
                                                                  Rec.VALIDATE(Text, FORMAT(Rec."Action Type"));
                                                              END;

                                                   CaptionML=[ENU=Action Type;
                                                              ENG=Action Type];
                                                   OptionCaptionML=[ENU=" ,Refresh,Show,Run Object,Open Panel,Back,Lookup,,,,,Edit Panels,Edit Panel,Copy Panel,Reset Panel,,,,,,,Edit Tile Groups,New Tile Group,Delete Tile Group,Copy Tile Group,Show Tile Groups,Hide Tile Group,Reset Tile Groups,,,,Edit Tiles,Edit Tile,New Tile,Delete Tile,Copy Tile,Show Tiles,Hide Tile,,,,Edit Links,Edit Link,New Link,Delete Link,Copy Link,Show Links,Hide Link,Reset Links,,,,,,Apply Palette,Load Image from Library";
                                                                    ENG=" ,Refresh,Show,Run Object,Open Panel,Back,Lookup,,,,,Edit Panels,Edit Panel,Copy Panel,Reset Panel,,,,,,,Edit Tile Groups,New Tile Group,Delete Tile Group,Copy Tile Group,Show Tile Groups,Hide Tile Group,Reset Tile Groups,,,,Edit Tiles,Edit Tile,New Tile,Delete Tile,Copy Tile,Show Tiles,Hide Tile,,,,Edit Links,Edit Link,New Link,Delete Link,Copy Link,Show Links,Hide Link,Reset Links,,,,,,Apply Palette,Load Image from Library"];
                                                   OptionString=[ ,Refresh,Show,Run Object,Open Panel,Back,Lookup,,,,,Edit Panels,Edit Panel,Copy Panel,Reset Panel,,,,,,,Edit Tile Groups,New Tile Group,Delete Tile Group,Copy Tile Group,Show Tile Groups,Hide Tile Group,Reset Tile Groups,,,,Edit Tiles,Edit Tile,New Tile,Delete Tile,Copy Tile,Show Tiles,Hide Tile,,,,Edit Links,Edit Link,New Link,Delete Link,Copy Link,Show Links,Hide Link,Reset Links,,,,,,Apply Palette,Load Image from Library] }
    { 14  ;   ;Text                ;Text250       ;OnValidate=BEGIN
                                                                IF (Rec.Text <> '') THEN
                                                                  Rec.TESTFIELD("Item Type", Rec."Item Type"::"Menu Item");
                                                              END;

                                                   CaptionML=[ENU=Text;
                                                              ENG=Text] }
    { 15  ;   ;Image               ;BLOB          ;OnValidate=VAR
                                                                lBlob@1000000000 : Record 99008535;
                                                              BEGIN
                                                                IF (Rec.Image.HASVALUE) THEN
                                                                  Rec.TESTFIELD("Item Type", Rec."Item Type"::"Menu Item");
                                                                lBlob.Blob := Rec.Image;
                                                                mBlobManagement.SaveToBase64(lBlob, DATABASE::"Panel Menu Item", Rec.GETPOSITION(FALSE), Rec.FIELDNO(Image));
                                                              END;

                                                   CaptionML=[ENU=Image;
                                                              ENG=Image];
                                                   SubType=Bitmap }
    { 16  ;   ;Codeunit ID         ;Integer       ;TableRelation=AllObj."Object ID" WHERE (Object Type=CONST(Codeunit));
                                                   OnValidate=BEGIN
                                                                Rec.CALCFIELDS("Codeunit Name");
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF (mObjectFieldToolkit.CodeunitLookup(Rec."Codeunit ID")) THEN
                                                                Rec.VALIDATE("Codeunit ID");
                                                            END;

                                                   CaptionML=[ENU=Codeunit ID;
                                                              ENG=Codeunit ID] }
    { 17  ;   ;Codeunit Name       ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObj."Object Name" WHERE (Object Type=CONST(Codeunit),
                                                                                                  Object ID=FIELD(Codeunit ID)));
                                                   CaptionML=[ENU=Codeunit Name;
                                                              ENG=Codeunit Name];
                                                   Editable=No }
    { 18  ;   ;Control Name        ;Text50        ;OnValidate=BEGIN
                                                                IF (Rec."Control Name" <> '') THEN
                                                                  Rec.TESTFIELD("Item Type");
                                                              END;

                                                   CaptionML=[ENU=Control Name;
                                                              ENG=Control Name] }
    { 19  ;   ;Blocked             ;Boolean       ;CaptionML=[ENU=Blocked;
                                                              ENG=Blocked] }
    { 20  ;   ;Target Table ID     ;Integer       ;CaptionML=[ENU=Target Table ID;
                                                              ENG=Target Table ID] }
    { 21  ;   ;Target Position     ;Text250       ;CaptionML=[ENU=Target Position;
                                                              ENG=Target Position] }
    { 22  ;   ;Image Id            ;Integer       ;CaptionML=[ENU=Image Id;
                                                              ENG=Image Id] }
    { 23  ;   ;Additional          ;Boolean       ;CaptionML=[ENU=Additional;
                                                              ENG=Additional] }
    { 24  ;   ;Image Name          ;Text50        ;CaptionML=[ENU=Image Name;
                                                              ENG=Image Name] }
    { 1000;   ;Created By          ;Code50        ;OnLookup=BEGIN
                                                              mTnpToolkit.UserLookup(Rec."Created By", FALSE);
                                                            END;

                                                   CaptionML=[ENU=Created By;
                                                              ENG=Created By] }
    { 1001;   ;Created Date Time   ;DateTime      ;CaptionML=[ENU=Created Date Time;
                                                              ENG=Created Date Time] }
    { 1002;   ;Modified By         ;Code50        ;OnLookup=BEGIN
                                                              mTnpToolkit.UserLookup(Rec."Modified By", FALSE);
                                                            END;

                                                   CaptionML=[ENU=Modified By;
                                                              ENG=Modified By] }
    { 1003;   ;Modified Date Time  ;DateTime      ;CaptionML=[ENU=Modified Date Time;
                                                              ENG=Modified Date Time] }
  }
  KEYS
  {
    {    ;Panel Menu Code,ID                      ;Clustered=Yes }
    {    ;Panel Menu Code,Additional,Sequence      }
    {    ;Panel Menu Code,Sequence                 }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      mGeneralLookup@1000000005 : Record 9062232;
      mPanelMenuItem@1000000002 : Record 9062445;
      mBlobManagement@1000000003 : Codeunit 9062242;
      mObjectFieldToolkit@1000000001 : Codeunit 9062343;
      mPanelEventManagement@1000000004 : Codeunit 9062323;
      mPanelTools@1000000006 : Codeunit 9062320;
      mTnpToolkit@1000000000 : Codeunit 9062230;

    PROCEDURE "--- Initialisation ---"@1000000001();
    BEGIN
    END;

    PROCEDURE NewRecord@1000000002();
    BEGIN
      //DOC NA2015.1 - Initialising new record for page "OnNewRecord"

      Rec.VALIDATE(Sequence, Rec.NewSequence());
    END;

    PROCEDURE NewId@1000000015() : Integer;
    VAR
      lTilePanelMenuItem@1000000000 : Record 9062445;
    BEGIN
      //DOC NA2015.1 - Returning new ID
      //  <- The ID

      Rec.TESTFIELD("Panel Menu Code");

      lTilePanelMenuItem.RESET();
      lTilePanelMenuItem.SETRANGE("Panel Menu Code", Rec."Panel Menu Code");
      IF (lTilePanelMenuItem.FINDLAST()) THEN
        EXIT(lTilePanelMenuItem.ID + 1)
      ELSE
        EXIT(1);
    END;

    PROCEDURE NewSequence@1000000003() : Integer;
    VAR
      lTilePanelMenuItem@1000000000 : Record 9062445;
    BEGIN
      //DOC NA2015.1 - Returning new sequence
      //  <- The ID

      Rec.TESTFIELD("Panel Menu Code");

      lTilePanelMenuItem.RESET();
      lTilePanelMenuItem.SETCURRENTKEY("Panel Menu Code", Sequence);
      lTilePanelMenuItem.SETRANGE("Panel Menu Code", Rec."Panel Menu Code");
      IF (lTilePanelMenuItem.FINDLAST()) THEN
        EXIT(lTilePanelMenuItem.Sequence + 10)
      ELSE
        EXIT(10);
    END;

    PROCEDURE NewIdFor@1000000000(pTilePanelMenuCode@1000000001 : Code[20]) : Integer;
    BEGIN
      //DOC NA2015.1 - Returning new ID for given panel (using Rec)
      //  -> pTilePanelMenuCode: Tile panel menu code
      //  <- The ID

      Rec.RESET();
      Rec.SETRANGE("Panel Menu Code", pTilePanelMenuCode);
      IF (Rec.FINDLAST()) THEN
        EXIT(Rec.ID + 1)
      ELSE
        EXIT(1);
    END;

    PROCEDURE "--- General ---"@1000000007();
    BEGIN
    END;

    PROCEDURE UpdateControlName@1000000013();
    VAR
      eName@1000000000 : TextConst 'ENU=Control_%1_%2;ENG=Control_%1_%2';
    BEGIN
      //DOC NA2015.1 - Updating control name

      Rec."Control Name" := mPanelTools.CodeIdToControlName(DATABASE::"Panel Menu Item", Rec."Panel Menu Code", Rec.ID);
    END;

    PROCEDURE ModifiedDateTime@1000000041() : DateTime;
    VAR
      lModifiedDateTime@1000000000 : DateTime;
    BEGIN
      //DOC NA2015.1 - Returning the whole structure modified datetime
      //  <- The datetime

      lModifiedDateTime := Rec."Modified Date Time";

      EXIT(lModifiedDateTime);
    END;

    PROCEDURE "--- Texts ---"@1000000005();
    BEGIN
    END;

    PROCEDURE ItemTypeText@1000000010() : Text[50];
    BEGIN
      //DOC NA2015.1 - Returning item type text
      //  <- The text

      CASE (Rec."Item Type") OF
        Rec."Item Type"::"Menu Item": EXIT('MenuItem');
        Rec."Item Type"::Separator: EXIT('Separator');
        ELSE EXIT('');
      END;
    END;

    BEGIN
    {
      //DOC NA2015.1  JH 31/10/2013 - Created
      //DOC NA2015.1  JH 14/04/2014 - Tile panels 3
      //DOC NA2015.4  JH 12/02/2015 - New actions added
      //DOC NA2016.4  JH 28/08/2015 - Upgraded to 2016
      //DOC NA2016.11 JH 06/11/2015 - "Action" renamed to "Action Type"
      //DOC NA2016.15 JH 06/05/2016 - CfMD amendments
    }
    END.
  }
}

