OBJECT Codeunit 11102053 OM - Table Management
{
  OBJECT-PROPERTIES
  {
    Date=19/11/15;
    Time=12:00:00 PM;
    Version List=OMA10.00;
  }
  PROPERTIES
  {
    TableNo=2000000001;
    OnRun=BEGIN
            RunTable(ID);
          END;

  }
  CODE
  {
    VAR
      TmpAction@1000 : TEMPORARY Record 11102048;
      TmpActionField@1001 : TEMPORARY Record 11102049;
      TmpField@1002 : TEMPORARY Record 2000000041;
      gRecRef@1003 : RecordRef;
      ActionSet@1004 : Boolean;

    PROCEDURE RunTable@1(TableNo@1000 : Integer);
    VAR
      Object2@1001 : Record 2000000001;
      AllObj@1002 : Record 2000000038;
      Fld@1003 : Record 2000000041;
      AllObjWithCaption@1004 : Record 2000000058;
      ObjectMgt@1005 : Codeunit 11102046;
      FileHandler@1006 : Codeunit 11102097;
      ShowTableData@1007 : Page 11102105;
      oFile@1008 : File;
      FieldName2@1009 : Text;
      FileName@1010 : Text;
      ControlId@1011 : Integer;
      i@1012 : Integer;
      ctPageTxt@1013 : TextConst 'DEU=page.txt;ENU=page.txt;ESP=page.txt;FRA=page.txt;NLD=page.txt;DEA=page.txt';
    BEGIN
      FileName := FileHandler.TempDirectory + ctPageTxt;

      IF EXISTS(FileName) THEN
        ERASE(FileName);

      AllObj.GET(AllObj."Object Type"::Table, TableNo);
      AllObjWithCaption.GET(AllObjWithCaption."Object Type"::Table, TableNo);

      Object2.Type := Object2.Type::Page;
      Object2.ID := PAGE::"OM - Show Table Data";

      IF EXISTS(FileName) THEN
        ERASE(FileName);

      oFile.TEXTMODE(TRUE);
      oFile.CREATE(FileName);

      oFile.WRITE('OBJECT Page 11102105 OM - Show Table Data');
      oFile.WRITE('{');
      oFile.WRITE('  OBJECT-PROPERTIES');
      oFile.WRITE('  {');
      oFile.WRITE('    Date=' + FORMAT(011012D) + ';');
      oFile.WRITE('    Time=' + FormatTime(120000T) + ';');
      oFile.WRITE('    Version List=OMA9.00;');
      oFile.WRITE('  }');
      oFile.WRITE('  PROPERTIES');
      oFile.WRITE('  {');
      oFile.WRITE('    CaptionML=[ENU=Table ' + DoubleChar(AllObjWithCaption."Object Caption", ']') + ';');
      oFile.WRITE('               NLD=Tabel ' + DoubleChar(AllObjWithCaption."Object Caption", ']') + '];');
      oFile.WRITE('    SourceTable=Table' + FORMAT(TableNo) + ';');
      oFile.WRITE('    DataCaptionExpr=''' + AllObj."Object Name" + ''';');
      oFile.WRITE('    DelayedInsert=1;');
      oFile.WRITE('    PageType=List;');
      oFile.WRITE('    OnInit=BEGIN');

      Fld.SETRANGE(TableNo, TableNo);
      Fld.SETRANGE(Enabled, TRUE);
      Fld.SETFILTER(Class, '<>%1', Fld.Class::FlowFilter);
      IF Fld.FINDSET THEN
        REPEAT
          oFile.WRITE('             Ctr' + FORMAT(Fld."No.") + 'Visible := TRUE;');
        UNTIL Fld.NEXT = 0;

      oFile.WRITE('           END;');
      oFile.WRITE('');
      oFile.WRITE('    OnOpenPage=VAR');
      oFile.WRITE('                 TableFilterMgt@1000 : Codeunit 11102100;');
      oFile.WRITE('                 RecRef@1001 : RecordRef;');
      oFile.WRITE('               BEGIN');
      oFile.WRITE('                 gCompanyName := COMPANYNAME;');
      oFile.WRITE('');
      oFile.WRITE('                 IF FORMAT(TmpAction.Filter) <> '''' THEN BEGIN');
      oFile.WRITE('                   RecRef.OPEN(' + FORMAT(TableNo) + ');');
      oFile.WRITE('                   TableFilterMgt.FilterRecRef(RecRef, FORMAT(TmpAction.Filter), 0);');
      oFile.WRITE('                   SETVIEW(RecRef.GETVIEW);');
      oFile.WRITE('                 END;');
      oFile.WRITE('               END;');
      oFile.WRITE('');
      oFile.WRITE('    ActionList=ACTIONS');
      oFile.WRITE('    {');
      oFile.WRITE('      { 1       ;0   ;ActionContainer;');
      oFile.WRITE('                      ActionContainerType=ActionItems }');
      oFile.WRITE('      { 2       ;1   ;ActionGroup;');
      oFile.WRITE('                      CaptionML=[ENU=F&unctions;');
      oFile.WRITE('                                 NLD=F&uncties] }');
      oFile.WRITE('      { 3       ;2   ;Action    ;');
      oFile.WRITE('                      CaptionML=[ENU=Edit Table &Data;');
      oFile.WRITE('                                 NLD=Tabelinhoud &wijzigen];');
      oFile.WRITE('                      Promoted=Yes;');
      oFile.WRITE('                      PromotedIsBig=Yes;');
      oFile.WRITE('                      Image=Table;');
      oFile.WRITE('                      PromotedCategory=Process;');
      oFile.WRITE('                      OnAction=VAR');
      oFile.WRITE('                                 TableMgt@1000 : Codeunit 11102053;');
      oFile.WRITE('                                 RecRef@1001 : RecordRef;');
      oFile.WRITE('                               BEGIN');
      oFile.WRITE('                                 RecRef.GETTABLE(Rec);');
      oFile.WRITE('                                 TableMgt.SetRecRef(RecRef);');
      oFile.WRITE('                                 SetColumns(TableMgt);');
      oFile.WRITE('                                 TableMgt.EditTableData(' + FORMAT(TableNo) + ');');
      oFile.WRITE('                               END;');
      oFile.WRITE('                                }');
      oFile.WRITE('      { 4       ;2   ;Separator  }');
      oFile.WRITE('      { 5       ;2   ;ActionGroup;');
      oFile.WRITE('                      CaptionML=[ENU=Export;');
      oFile.WRITE('                                 NLD=Exporteren];');
      oFile.WRITE('                      Image=Export }');
      oFile.WRITE('      { 6       ;3   ;Action    ;');
      oFile.WRITE('                      CaptionML=[ENU=Export as &CSV;');
      oFile.WRITE('                                 NLD=Exporteren in &CSV formaat];');
      oFile.WRITE('                      Image=Export;');
      oFile.WRITE('                      OnAction=VAR');
      oFile.WRITE('                                 TableMgt@1000 : Codeunit 11102053;');
      oFile.WRITE('                                 RecRef@1001 : RecordRef;');
      oFile.WRITE('                               BEGIN');
      oFile.WRITE('                                 RecRef.GETTABLE(Rec);');
      oFile.WRITE('                                 TableMgt.SetRecRef(RecRef);');
      oFile.WRITE('                                 SetColumns(TableMgt);');
      oFile.WRITE('                                 TableMgt.ExportAsCsv;');
      oFile.WRITE('                               END;');
      oFile.WRITE('                                }');
      oFile.WRITE('      { 7       ;3   ;Action    ;');
      oFile.WRITE('                      CaptionML=[ENU=Export as &TAB Delimited;');
      oFile.WRITE('                                 NLD=Tab gescheiden exporteren];');
      oFile.WRITE('                      Image=Export;');
      oFile.WRITE('                      OnAction=VAR');
      oFile.WRITE('                                 TableMgt@1001 : Codeunit 11102053;');
      oFile.WRITE('                                 RecRef@1000 : RecordRef;');
      oFile.WRITE('                               BEGIN');
      oFile.WRITE('                                 RecRef.GETTABLE(Rec);');
      oFile.WRITE('                                 TableMgt.SetRecRef(RecRef);');
      oFile.WRITE('                                 SetColumns(TableMgt);');
      oFile.WRITE('                                 TableMgt.ExportAsTab;');
      oFile.WRITE('                               END;');
      oFile.WRITE('                                }');
      oFile.WRITE('      { 8       ;3   ;Action    ;');
      oFile.WRITE('                      CaptionML=[ENU=Export as &FAB;');
      oFile.WRITE('                                 NLD=Exporteren in &FAB formaat];');
      oFile.WRITE('                      Image=Export;');
      oFile.WRITE('                      OnAction=VAR');
      oFile.WRITE('                                 TableMgt@1001 : Codeunit 11102053;');
      oFile.WRITE('                                 RecRef@1000 : RecordRef;');
      oFile.WRITE('                               BEGIN');
      oFile.WRITE('                                 RecRef.GETTABLE(Rec);');
      oFile.WRITE('                                 TableMgt.SetRecRef(RecRef);');
      oFile.WRITE('                                 SetColumns(TableMgt);');
      oFile.WRITE('                                 TableMgt.ExportAsFab;');
      oFile.WRITE('                               END;');
      oFile.WRITE('                                }');
      oFile.WRITE('      { 9       ;3   ;Action    ;');
      oFile.WRITE('                      CaptionML=[ENU=Export as &XML;');
      oFile.WRITE('                                 NLD=Exporteren in &XML formaat];');
      oFile.WRITE('                      Image=Export;');
      oFile.WRITE('                      OnAction=VAR');
      oFile.WRITE('                                 TableMgt@1000 : Codeunit 11102053;');
      oFile.WRITE('                                 RecRef@1001 : RecordRef;');
      oFile.WRITE('                               BEGIN');
      oFile.WRITE('                                 RecRef.GETTABLE(Rec);');
      oFile.WRITE('                                 TableMgt.SetRecRef(RecRef);');
      oFile.WRITE('                                 SetColumns(TableMgt);');
      oFile.WRITE('                                 TableMgt.ExportAsXml;');
      oFile.WRITE('                               END;');
      oFile.WRITE('                                }');
      oFile.WRITE('      { 10      ;2   ;Separator  }');
      oFile.WRITE('      { 11      ;2   ;Action    ;');
      oFile.WRITE('                      CaptionML=[ENU=Hide all Columns;');
      oFile.WRITE('                                 NLD=Alle kolommen &verbergen];');
      oFile.WRITE('                      Promoted=Yes;');
      oFile.WRITE('                      Image=Column;');
      oFile.WRITE('                      PromotedCategory=Process;');
      oFile.WRITE('                      OnAction=BEGIN');
      oFile.WRITE('                                 ShowColumns(FALSE);');
      oFile.WRITE('                                 CurrPage.ACTIVATE(TRUE);');
      oFile.WRITE('                               END;');
      oFile.WRITE('                                }');
      oFile.WRITE('      { 12      ;2   ;Action    ;');
      oFile.WRITE('                      CaptionML=[ENU=Show all Columns;');
      oFile.WRITE('                                 NLD=Alle kolommen &tonen];');
      oFile.WRITE('                      Promoted=Yes;');
      oFile.WRITE('                      PromotedIsBig=Yes;');
      oFile.WRITE('                      Image=AllLines;');
      oFile.WRITE('                      PromotedCategory=Process;');
      oFile.WRITE('                      OnAction=BEGIN');
      oFile.WRITE('                                 ShowColumns(TRUE);');
      oFile.WRITE('                                 CurrPage.ACTIVATE(TRUE);');
      oFile.WRITE('                               END;');
      oFile.WRITE('                                }');
      oFile.WRITE('      { 13      ;2   ;Action    ;');
      oFile.WRITE('                      CaptionML=[ENU=Select &Columns;');
      oFile.WRITE('                                 NLD=Kolommen selecteren];');
      oFile.WRITE('                      Promoted=Yes;');
      oFile.WRITE('                      PromotedIsBig=Yes;');
      oFile.WRITE('                      Image=SetupColumns;');
      oFile.WRITE('                      PromotedCategory=Process;');
      oFile.WRITE('                      OnAction=BEGIN');
      oFile.WRITE('                                 SelectColumns;');
      oFile.WRITE('                                 CurrPage.ACTIVATE(TRUE);');
      oFile.WRITE('                               END;');
      oFile.WRITE('                                }');

      ControlId := 1010;
      Fld.SETRANGE(Type, Fld.Type::BLOB);
      IF Fld.FINDSET THEN
        REPEAT

          FieldName2 := '"' + Fld.FieldName + '"';

          oFile.WRITE('      { ' + FORMAT(ControlId + 1) + '    ;2   ;ActionGroup;');
          oFile.WRITE('                      CaptionML=[ENU="' + DoubleChar(Fld.FieldName, '"]') + '"];');
          oFile.WRITE('                      Image=ImportExport }');
          oFile.WRITE('      { ' + FORMAT(ControlId + 2) + '    ;3   ;Action    ;');
          oFile.WRITE('                      CaptionML=ENU=Import;');
          oFile.WRITE('                      Image=Import;');
          oFile.WRITE('                      OnAction=VAR');
          oFile.WRITE('                                 ctReplace@1001 : TextConst ''ENU=Do you want to replace field %1?;NLD=Wilt u het veld %1 vervangen?'';');
          oFile.WRITE('                                 FileHandler@1002 : Codeunit 11102097;');
          oFile.WRITE('                                 CommonDialog@1003 : Codeunit 11102059;');
          oFile.WRITE('                                 ClientFileName@1004 : Text;');
          oFile.WRITE('                                 ServerFileName@1005 : Text;');
          oFile.WRITE('                                 InStr@1006 : InStream;');
          oFile.WRITE('                                 OutStr@1007 : OutStream;');
          oFile.WRITE('                                 oFile@1008 : File;');
          oFile.WRITE('');
          oFile.WRITE('                               BEGIN');
          oFile.WRITE('                                 CALCFIELDS(' + FieldName2 + ');');
          oFile.WRITE('                                 IF ' + FieldName2 + '.HASVALUE THEN');
          oFile.WRITE('                                   IF NOT CONFIRM(ctReplace, TRUE, FIELDCAPTION(' + FieldName2 + ')) THEN');
          oFile.WRITE('                                     EXIT;');
          oFile.WRITE('');
          oFile.WRITE('                                 CommonDialog.GetOpenFileName(ClientFileName, TRUE);');
          oFile.WRITE('                                 IF ClientFileName <> '''' THEN BEGIN');
          oFile.WRITE('                                   ServerFileName := FileHandler.UploadToServer(ClientFileName, ''blob.blob'');');
          oFile.WRITE('                                   oFile.OPEN(ServerFileName);');
          oFile.WRITE('                                   oFile.CREATEINSTREAM(InStr);');
          oFile.WRITE('                                   ' + FieldName2 + '.CREATEOUTSTREAM(OutStr);');
          oFile.WRITE('                                   COPYSTREAM(OutStr, InStr);');
          oFile.WRITE('                                   oFile.CLOSE;');
          oFile.WRITE('');
          oFile.WRITE('                                   CurrPage.SAVERECORD;');
          oFile.WRITE('                                 END;');
          oFile.WRITE('                               END;');
          oFile.WRITE('                                }');
          oFile.WRITE('      { ' + FORMAT(ControlId + 3) + '    ;3   ;Action    ;');
          oFile.WRITE('                      CaptionML=ENU=Export;');
          oFile.WRITE('                      Image=Export;');
          oFile.WRITE('                      OnAction=VAR');
          oFile.WRITE('                                 ctNoValue@1000 : TextConst ''ENU=%1 has no value.;NLD=%1 heeft geen waarde.'';');
          oFile.WRITE('                                 FileHandler@1001 : Codeunit 11102097;');
          oFile.WRITE('                                 CommonDialog@1004 : Codeunit 11102059;');
          oFile.WRITE('                                 ServerFileName@1002 : Text;');
          oFile.WRITE('                                 ClientFileName@1003 : Text;');
          oFile.WRITE('                                 InStr@1007 : InStream;');
          oFile.WRITE('                                 OutStr@1006 : OutStream;');
          oFile.WRITE('                                 oFile@1005 : File;');
          oFile.WRITE('                               BEGIN');
          oFile.WRITE('                                 CALCFIELDS(' + FieldName2 + ');');
          oFile.WRITE('                                 IF NOT ' + FieldName2 + '.HASVALUE THEN');
          oFile.WRITE('                                   ERROR(ctNoValue, FIELDCAPTION(' + FieldName2 + '));');
          oFile.WRITE('');
          oFile.WRITE('                                 IF NOT CommonDialog.SaveFile(ClientFileName, ServerFileName, ''blob.blob'') THEN');
          oFile.WRITE('                                   EXIT;');
          oFile.WRITE('');
          oFile.WRITE('                                 oFile.CREATE(ServerFileName);');
          oFile.WRITE('                                 oFile.CREATEOUTSTREAM(OutStr);');
          oFile.WRITE('                                 ' + FieldName2 + '.CREATEINSTREAM(InStr);');
          oFile.WRITE('                                 COPYSTREAM(OutStr, InStr);');
          oFile.WRITE('                                 oFile.CLOSE;');
          oFile.WRITE('');
          oFile.WRITE('                                 FileHandler.DownloadToClient(ServerFileName, ClientFileName, ''blob.blob'');');
          oFile.WRITE('                               END;');
          oFile.WRITE('                                }');
          oFile.WRITE('      { ' + FORMAT(ControlId + 4) + '    ;3   ;Action    ;');
          oFile.WRITE('                      CaptionML=ENU=Delete;');
          oFile.WRITE('                      Image=Delete;');
          oFile.WRITE('                      OnAction=VAR');
          oFile.WRITE('                                 ctDelete@1000 : TextConst ''ENU=Do you want to empty field %1?;NLD=Wilt u de inhoud uit het veld %1 verwijderen?'';');
          oFile.WRITE('                                 ctNoValue@1001 : TextConst ''ENU=%1 has no value.;NLD=%1 heeft geen waarde.'';');
          oFile.WRITE('                               BEGIN');
          oFile.WRITE('                                 CALCFIELDS(' + FieldName2 + ');');
          oFile.WRITE('                                 IF NOT ' + FieldName2 + '.HASVALUE THEN');
          oFile.WRITE('                                   ERROR(ctNoValue, FIELDCAPTION(' + FieldName2 + '));');
          oFile.WRITE('                                 IF CONFIRM(ctDelete, FALSE, FIELDCAPTION(' + FieldName2 + ')) THEN BEGIN');
          oFile.WRITE('                                   CLEAR(' + FieldName2 + ');');
          oFile.WRITE('                                   CurrPage.SAVERECORD;');
          oFile.WRITE('                                 END;');
          oFile.WRITE('                               END;');
          oFile.WRITE('                                }');
          oFile.WRITE('');

          ControlId += 5;
        UNTIL Fld.NEXT = 0;

      oFile.WRITE('    }');
      oFile.WRITE('  }');
      oFile.WRITE('  CONTROLS');
      oFile.WRITE('  {');
      oFile.WRITE('    { 14  ;0   ;Container ;');
      oFile.WRITE('                ContainerType=ContentArea }');
      oFile.WRITE('');
      oFile.WRITE('    { 15  ;1   ;Group      }');
      oFile.WRITE('');
      oFile.WRITE('    { 16  ;2   ;Field     ;');
      oFile.WRITE('                CaptionML=[ENU=Company Name;');
      oFile.WRITE('                           NLD=Bedrijfsnaam];');
      oFile.WRITE('                SourceExpr=gCompanyName;');
      oFile.WRITE('                TableRelation=Company;');
      oFile.WRITE('                OnValidate=BEGIN');
      oFile.WRITE('                             CHANGECOMPANY(gCompanyName);');
      oFile.WRITE('                             CurrPage.UPDATE(FALSE);');
      oFile.WRITE('                           END;');
      oFile.WRITE('');
      oFile.WRITE('                OnLookup=VAR');
      oFile.WRITE('                           TableMgt@1000 : Codeunit ' + FORMAT(CODEUNIT::"OM - Table Management") + ';');
      oFile.WRITE('                         BEGIN');
      oFile.WRITE('                           EXIT(TableMgt.LookupCompanyName(Text, ' + FORMAT(TableNo) + '));');
      oFile.WRITE('                         END;');
      oFile.WRITE('                          }');
      oFile.WRITE('');
      oFile.WRITE('    { 17  ;1   ;Group     ;');
      oFile.WRITE('                GroupType=Repeater }');

      i := 17;

      Fld.SETRANGE(Type);
      IF Fld.FINDSET THEN
        REPEAT
          i += 1;

          oFile.WRITE('    { ' + PADSTR(FORMAT(i), 4) + ';2   ;Field     ;');
          oFile.WRITE('                SourceExpr=Field' + FORMAT(Fld."No.") + ';');
          oFile.WRITE('                Visible=Ctr' + FORMAT(Fld."No.") + 'Visible;');

          IF (Fld.Class = Fld.Class::FlowField) OR (Fld.Type = Fld.Type::BLOB) THEN
            oFile.WRITE('                Editable=FALSE }')
          ELSE
            oFile.WRITE('                Editable=TRUE }');

        UNTIL Fld.NEXT = 0;

      oFile.WRITE('  }');
      oFile.WRITE('  CODE');
      oFile.WRITE('  {');
      oFile.WRITE('    VAR');
      oFile.WRITE('      gCompanyName@1000 : Text;');
      oFile.WRITE('      TmpAction@1002 : TEMPORARY Record 11102048;');

      IF Fld.FINDSET THEN
        REPEAT
          oFile.WRITE('      Ctr' + FORMAT(Fld."No.") + 'Visible@' + FORMAT(Fld."No." + 2000) + ' : Boolean INDATASET;');
        UNTIL Fld.NEXT = 0;

      oFile.WRITE('');
      oFile.WRITE('    LOCAL PROCEDURE ShowColumns@1(AllVisible@1000 : Boolean);');
      oFile.WRITE('    VAR');
      oFile.WRITE('      Fld@1001 : Record 2000000041;');
      oFile.WRITE('    BEGIN');
      oFile.WRITE('      Fld.SETRANGE(TableNo, ' + FORMAT(TableNo) + ');');
      oFile.WRITE('      Fld.SETFILTER(Class, ''<>%1'', Fld.Class::FlowFilter);');
      oFile.WRITE('      IF Fld.FINDSET THEN');
      oFile.WRITE('        REPEAT');
      oFile.WRITE('          ShowColumn(Fld."No.", AllVisible);');
      oFile.WRITE('        UNTIL Fld.NEXT = 0;');
      oFile.WRITE('');

      IF Fld.FINDSET THEN
        REPEAT
          IF IsKeyField(Fld) THEN
            oFile.WRITE('      Ctr' + FORMAT(Fld."No.") + 'Visible := TRUE;');
        UNTIL Fld.NEXT = 0;

      oFile.WRITE('    END;');
      oFile.WRITE('');
      oFile.WRITE('    LOCAL PROCEDURE ShowColumn@2(ColumnNo@1000 : Integer;Visible@1001 : Boolean);');
      oFile.WRITE('    BEGIN');
      oFile.WRITE('      CASE ColumnNo OF');
      Fld.SETRANGE(Type);
      IF Fld.FINDSET THEN
        REPEAT
          oFile.WRITE('        ' + FORMAT(Fld."No.") + ': Ctr' + FORMAT(Fld."No.") + 'Visible := Visible;');
        UNTIL Fld.NEXT = 0;
      oFile.WRITE('      END;');
      oFile.WRITE('    END;');
      oFile.WRITE('');
      oFile.WRITE('    LOCAL PROCEDURE SetColumns@3(VAR TableMgt@1000 : Codeunit 11102053);');
      oFile.WRITE('    BEGIN');

      IF Fld.FINDSET THEN
        REPEAT
          oFile.WRITE('      TableMgt.AddFieldToBuffer(' + FORMAT(Fld."No.") + ', Ctr' + FORMAT(Fld."No.") + 'Visible);');
        UNTIL Fld.NEXT = 0;

      oFile.WRITE('    END;');
      oFile.WRITE('');
      oFile.WRITE('    LOCAL PROCEDURE SelectColumns@4();');
      oFile.WRITE('    VAR');
      oFile.WRITE('      Fld@1000 : Record 2000000041;');
      oFile.WRITE('      TmpSelectedField@1001 : TEMPORARY Record 2000000041;');
      oFile.WRITE('      TableMgt@1002 : Codeunit 11102053;');
      oFile.WRITE('      RecRef@1003 : RecordRef;');
      oFile.WRITE('    BEGIN');
      oFile.WRITE('      RecRef.GETTABLE(Rec);');
      oFile.WRITE('      TableMgt.SetRecRef(RecRef);');
      oFile.WRITE('      SetColumns(TableMgt);');
      oFile.WRITE('      TableMgt.SelectFields(TmpSelectedField, FALSE);');
      oFile.WRITE('');
      oFile.WRITE('      Fld.SETRANGE(TableNo, ' + FORMAT(TableNo) + ');');
      oFile.WRITE('      Fld.SETFILTER(Class, ''<>%1'', Fld.Class::FlowFilter);');
      oFile.WRITE('      IF Fld.FINDSET THEN');
      oFile.WRITE('        REPEAT');
      oFile.WRITE('          ShowColumn(Fld."No.", TmpSelectedField.GET(0, Fld."No."));');
      oFile.WRITE('        UNTIL Fld.NEXT = 0;');
      oFile.WRITE('    END;');
      oFile.WRITE('');
      oFile.WRITE('    PROCEDURE SetAction@5(VAR Actions@1000 : Record 11102048);');
      oFile.WRITE('    BEGIN');
      oFile.WRITE('      TmpAction := Actions;');
      oFile.WRITE('      TmpAction.INSERT;');
      oFile.WRITE('    END;');
      oFile.WRITE('');
      oFile.WRITE('    BEGIN');
      oFile.WRITE('    END.');
      oFile.WRITE('  }');
      oFile.WRITE('}');
      oFile.CLOSE;

      ObjectMgt.ImportObject(FileName);
      ObjectMgt.CompileObject(Object2);

      IF ActionSet THEN
        ShowTableData.SetAction(TmpAction);
      ShowTableData.RUN;

      ObjectMgt.TryDeleteFile(FileName);
    END;

    PROCEDURE EditTableData@2(TableNo@1000 : Integer);
    VAR
      Object2@1001 : Record 2000000001;
      Fld@1002 : Record 2000000041;
      AllObjWithCaption@1003 : Record 2000000058;
      ObjectMgt@1004 : Codeunit 11102046;
      FileHandler@1005 : Codeunit 11102097;
      EditTableData@1006 : Page 11102064;
      oFile@1007 : File;
      RecRef@1008 : RecordRef;
      FldRef@1009 : FieldRef;
      FieldType@1010 : Text;
      FileName@1011 : Text;
      ControlId@1012 : Integer;
      i@1013 : Integer;
      ControlVisible@1014 : Boolean;
      FromShowTable@1015 : Boolean;
      ctPageTxt@1016 : TextConst 'DEU=page.txt;ENU=page.txt;ESP=page.txt;FRA=page.txt;NLD=page.txt;DEA=page.txt';
    BEGIN
      FileName := FileHandler.TempDirectory + ctPageTxt;

      FromShowTable := NOT TmpField.ISEMPTY;

      AllObjWithCaption.GET(AllObjWithCaption."Object Type"::Table, TableNo);

      IF EXISTS(FileName) THEN
        ERASE(FileName);

      oFile.TEXTMODE(TRUE);
      oFile.CREATE(FileName);

      oFile.WRITE('OBJECT Page ' + FORMAT(PAGE::"OM - Edit Table Data") + ' OM - Edit Table Data');
      oFile.WRITE('{');
      oFile.WRITE('  OBJECT-PROPERTIES');
      oFile.WRITE('  {');
      oFile.WRITE('    Date=' + FORMAT(011012D) + ';');
      oFile.WRITE('    Time=' + FormatTime(120000T) + ';');
      oFile.WRITE('    Modified=Yes;');
      oFile.WRITE('    Version List=OMA9.00;');
      oFile.WRITE('  }');
      oFile.WRITE('  PROPERTIES');
      oFile.WRITE('  {');
      oFile.WRITE('    CaptionML=[ENU=Edit Table Data ' + DoubleChar(AllObjWithCaption."Object Caption", ']') + ';');
      oFile.WRITE('               NLD=Tabeldata wijzigen ' + DoubleChar(AllObjWithCaption."Object Caption", ']') + '];');
      oFile.WRITE('    SourceTable=Table' + FORMAT(TableNo) + ';');
      oFile.WRITE('    DelayedInsert=Yes;');
      oFile.WRITE('    PageType=List;');
      oFile.WRITE('    OnInit=BEGIN');

      Fld.SETRANGE(TableNo, TableNo);
      Fld.SETRANGE(Enabled, TRUE);
      Fld.SETRANGE(Class, Fld.Class::Normal);
      Fld.SETFILTER(Type, '<>%1', Fld.Type::BLOB);
      IF Fld.FINDSET THEN
        REPEAT

          CASE TRUE OF
            FromShowTable :
              ControlVisible := NOT TmpField.ISEMPTY;

            NOT ActionSet :
              ControlVisible := TRUE;

            TmpAction.Fields = TmpAction.Fields::All :
              ControlVisible := TRUE;

            ELSE BEGIN
              TmpActionField.SETRANGE("Field No.", Fld."No.");
              IF TmpActionField.FINDFIRST THEN
                ControlVisible := TmpActionField.Selected;
            END;
          END;
          IF ControlVisible THEN
            oFile.WRITE('             Ctr' + FORMAT(Fld."No.") + 'Visible := TRUE;')
          ELSE
            oFile.WRITE('             Ctr' + FORMAT(Fld."No.") + 'Visible := FALSE;');
        UNTIL Fld.NEXT = 0;

      oFile.WRITE('             gValidate := TRUE;');
      oFile.WRITE('           END;');
      oFile.WRITE('');
      oFile.WRITE('    OnOpenPage=VAR');
      oFile.WRITE('                 TableFilterMgt@1000 : Codeunit 11102100;');
      oFile.WRITE('                 RecRef@1001 : RecordRef;');
      oFile.WRITE('               BEGIN');
      oFile.WRITE('                 gCompanyName := COMPANYNAME;');
      oFile.WRITE('');
      oFile.WRITE('                 IF FORMAT(TmpAction.Filter) <> '''' THEN BEGIN');
      oFile.WRITE('                   RecRef.OPEN(' + FORMAT(TableNo) + ');');
      oFile.WRITE('                   TableFilterMgt.FilterRecRef(RecRef, FORMAT(TmpAction.Filter), 0);');
      oFile.WRITE('                   SETVIEW(RecRef.GETVIEW);');
      oFile.WRITE('                 END;');
      oFile.WRITE('               END;');
      oFile.WRITE('');
      oFile.WRITE('    OnAfterGetRecord=BEGIN');
      oFile.WRITE('                       FillVariables;');
      oFile.WRITE('                     END;');
      oFile.WRITE('');
      oFile.WRITE('    OnNewRecord=BEGIN');
      oFile.WRITE('                  FillVariables;');
      oFile.WRITE('                END;');
      oFile.WRITE('');
      oFile.WRITE('    OnInsertRecord=BEGIN');
      oFile.WRITE('                     IF gValidate THEN');
      oFile.WRITE('                       EXIT(TRUE)');
      oFile.WRITE('                     ELSE BEGIN');
      oFile.WRITE('                       INSERT;');
      oFile.WRITE('                       EXIT(FALSE);');
      oFile.WRITE('                     END;');
      oFile.WRITE('                   END;');
      oFile.WRITE('');
      oFile.WRITE('    OnModifyRecord=BEGIN');
      oFile.WRITE('                     IF gValidate THEN');
      oFile.WRITE('                       EXIT(TRUE)');
      oFile.WRITE('                     ELSE BEGIN');
      oFile.WRITE('                       MODIFY;');
      oFile.WRITE('                       EXIT(FALSE);');
      oFile.WRITE('                     END;');
      oFile.WRITE('                   END;');
      oFile.WRITE('');
      oFile.WRITE('    OnDeleteRecord=BEGIN');
      oFile.WRITE('                     IF gValidate THEN');
      oFile.WRITE('                       EXIT(TRUE)');
      oFile.WRITE('                     ELSE BEGIN');
      oFile.WRITE('                       DELETE;');
      oFile.WRITE('                       EXIT(FALSE);');
      oFile.WRITE('                     END;');
      oFile.WRITE('                   END;');
      oFile.WRITE('');
      oFile.WRITE('    ActionList=ACTIONS');
      oFile.WRITE('    {');
      oFile.WRITE('      { 1       ;0   ;ActionContainer;');
      oFile.WRITE('                      ActionContainerType=ActionItems }');
      oFile.WRITE('      { 2       ;1   ;ActionGroup;');
      oFile.WRITE('                      CaptionML=[ENU=F&unctions;');
      oFile.WRITE('                                 NLD=F&uncties] }');
      oFile.WRITE('      { 3       ;2   ;Action    ;');
      oFile.WRITE('                      CaptionML=[ENU=Show Table Data;');
      oFile.WRITE('                                 NLD=Tabelinhoud tonen];');
      oFile.WRITE('                      Promoted=Yes;');
      oFile.WRITE('                      PromotedIsBig=Yes;');
      oFile.WRITE('                      Image=Start;');
      oFile.WRITE('                      PromotedCategory=Process;');
      oFile.WRITE('                      OnAction=VAR');
      oFile.WRITE('                                 TableMgt@1000 : Codeunit 11102053;');
      oFile.WRITE('                               BEGIN');
      oFile.WRITE('                                 TableMgt.RunTable(' + FORMAT(TableNo) + ');');
      oFile.WRITE('                               END;');
      oFile.WRITE('                                }');
      oFile.WRITE('      { 4       ;2   ;Separator  }');
      oFile.WRITE('      { 5       ;2   ;ActionGroup;');
      oFile.WRITE('                      CaptionML=[ENU=Export;');
      oFile.WRITE('                                 NLD=Exporteren];');
      oFile.WRITE('                      Image=Export }');
      oFile.WRITE('      { 6       ;3   ;Action    ;');
      oFile.WRITE('                      CaptionML=[ENU=Export as &CSV;');
      oFile.WRITE('                                 NLD=Exporteren in &CSV formaat];');
      oFile.WRITE('                      Image=Export;');
      oFile.WRITE('                      OnAction=VAR');
      oFile.WRITE('                                 TableMgt@1000 : Codeunit 11102053;');
      oFile.WRITE('                                 RecRef@1001 : RecordRef;');
      oFile.WRITE('                               BEGIN');
      oFile.WRITE('                                 RecRef.GETTABLE(Rec);');
      oFile.WRITE('                                 TableMgt.SetRecRef(RecRef);');
      oFile.WRITE('                                 SetColumns(TableMgt);');
      oFile.WRITE('                                 TableMgt.ExportAsCsv;');
      oFile.WRITE('                               END;');
      oFile.WRITE('                                }');
      oFile.WRITE('      { 7       ;3   ;Action    ;');
      oFile.WRITE('                      CaptionML=[ENU=Export as &TAB Delimited;');
      oFile.WRITE('                                 NLD=Tab gescheiden exporteren];');
      oFile.WRITE('                      Image=Export;');
      oFile.WRITE('                      OnAction=VAR');
      oFile.WRITE('                                 TableMgt@1001 : Codeunit 11102053;');
      oFile.WRITE('                                 RecRef@1000 : RecordRef;');
      oFile.WRITE('                               BEGIN');
      oFile.WRITE('                                 RecRef.GETTABLE(Rec);');
      oFile.WRITE('                                 TableMgt.SetRecRef(RecRef);');
      oFile.WRITE('                                 SetColumns(TableMgt);');
      oFile.WRITE('                                 TableMgt.ExportAsTab;');
      oFile.WRITE('                               END;');
      oFile.WRITE('                                }');
      oFile.WRITE('      { 8       ;3   ;Action    ;');
      oFile.WRITE('                      CaptionML=[ENU=Export as &FAB;');
      oFile.WRITE('                                 NLD=Exporteren in &FAB formaat];');
      oFile.WRITE('                      Image=Export;');
      oFile.WRITE('                      OnAction=VAR');
      oFile.WRITE('                                 TableMgt@1001 : Codeunit 11102053;');
      oFile.WRITE('                                 RecRef@1000 : RecordRef;');
      oFile.WRITE('                               BEGIN');
      oFile.WRITE('                                 RecRef.GETTABLE(Rec);');
      oFile.WRITE('                                 TableMgt.SetRecRef(RecRef);');
      oFile.WRITE('                                 SetColumns(TableMgt);');
      oFile.WRITE('                                 TableMgt.ExportAsFab;');
      oFile.WRITE('                               END;');
      oFile.WRITE('                                }');
      oFile.WRITE('      { 9       ;3   ;Action    ;');
      oFile.WRITE('                      CaptionML=[ENU=Export as &XML;');
      oFile.WRITE('                                 NLD=Exporteren in &XML formaat];');
      oFile.WRITE('                      Image=Export;');
      oFile.WRITE('                      OnAction=VAR');
      oFile.WRITE('                                 TableMgt@1000 : Codeunit 11102053;');
      oFile.WRITE('                                 RecRef@1001 : RecordRef;');
      oFile.WRITE('                               BEGIN');
      oFile.WRITE('                                 RecRef.GETTABLE(Rec);');
      oFile.WRITE('                                 TableMgt.SetRecRef(RecRef);');
      oFile.WRITE('                                 SetColumns(TableMgt);');
      oFile.WRITE('                                 TableMgt.ExportAsXml;');
      oFile.WRITE('                               END;');
      oFile.WRITE('                                }');
      oFile.WRITE('      { 10      ;2   ;Separator  }');
      oFile.WRITE('      { 11      ;2   ;Action    ;');
      oFile.WRITE('                      CaptionML=[ENU=Hide all Columns;');
      oFile.WRITE('                                 NLD=Alle kolommen &verbergen];');
      oFile.WRITE('                      Promoted=Yes;');
      oFile.WRITE('                      Image=Column;');
      oFile.WRITE('                      PromotedCategory=Process;');
      oFile.WRITE('                      OnAction=BEGIN');
      oFile.WRITE('                                 ShowColumns(FALSE);');
      oFile.WRITE('                                 CurrPage.ACTIVATE(TRUE);');
      oFile.WRITE('                               END;');
      oFile.WRITE('                                }');
      oFile.WRITE('      { 12      ;2   ;Action    ;');
      oFile.WRITE('                      CaptionML=[ENU=Show all Columns;');
      oFile.WRITE('                                 NLD=Alle kolommen &tonen];');
      oFile.WRITE('                      Promoted=Yes;');
      oFile.WRITE('                      PromotedIsBig=Yes;');
      oFile.WRITE('                      Image=AllLines;');
      oFile.WRITE('                      PromotedCategory=Process;');
      oFile.WRITE('                      OnAction=BEGIN');
      oFile.WRITE('                                 ShowColumns(TRUE);');
      oFile.WRITE('                                 CurrPage.ACTIVATE(TRUE);');
      oFile.WRITE('                               END;');
      oFile.WRITE('                                }');
      oFile.WRITE('      { 13      ;2   ;Action    ;');
      oFile.WRITE('                      CaptionML=[ENU=Select &Columns;');
      oFile.WRITE('                                 NLD=Kolommen selecteren];');
      oFile.WRITE('                      Promoted=Yes;');
      oFile.WRITE('                      PromotedIsBig=Yes;');
      oFile.WRITE('                      Image=SetupColumns;');
      oFile.WRITE('                      PromotedCategory=Process;');
      oFile.WRITE('                      OnAction=BEGIN');
      oFile.WRITE('                                 SelectColumns;');
      oFile.WRITE('                                 CurrPage.ACTIVATE(TRUE);');
      oFile.WRITE('                               END;');
      oFile.WRITE('                                }');
      oFile.WRITE('    }');
      oFile.WRITE('  }');
      oFile.WRITE('  CONTROLS');
      oFile.WRITE('  {');
      oFile.WRITE('    { 14  ;0   ;Container ;');
      oFile.WRITE('                ContainerType=ContentArea }');
      oFile.WRITE('');
      oFile.WRITE('    { 15  ;1   ;Group      }');
      oFile.WRITE('');
      oFile.WRITE('    { 16  ;2   ;Field     ;');
      oFile.WRITE('                CaptionML=[ENU=Company Name;');
      oFile.WRITE('                           NLD=Bedrijfsnaam];');
      oFile.WRITE('                SourceExpr=gCompanyName;');
      oFile.WRITE('                TableRelation=Company;');
      oFile.WRITE('                OnValidate=BEGIN');
      oFile.WRITE('                             CHANGECOMPANY(gCompanyName);');
      oFile.WRITE('                             CurrPage.UPDATE(FALSE);');
      oFile.WRITE('                           END;');
      oFile.WRITE('');
      oFile.WRITE('                OnLookup=VAR');
      oFile.WRITE('                           TableMgt@1000 : Codeunit ' + FORMAT(CODEUNIT::"OM - Table Management") + ';');
      oFile.WRITE('                         BEGIN');
      oFile.WRITE('                           EXIT(TableMgt.LookupCompanyName(Text, ' + FORMAT(TableNo) + '));');
      oFile.WRITE('                         END;');
      oFile.WRITE('                          }');
      oFile.WRITE('');
      oFile.WRITE('    { 17  ;2   ;Field     ;');
      oFile.WRITE('                CaptionML=[ENU=Validate;');
      oFile.WRITE('                           NLD=Validatie];');
      oFile.WRITE('                SourceExpr=gValidate }');
      oFile.WRITE('');
      oFile.WRITE('    { 18  ;1   ;Group     ;');
      oFile.WRITE('                GroupType=Repeater }');
      oFile.WRITE('');

      ControlId := 18;
      IF Fld.FINDSET THEN
        REPEAT
          ControlId += 1;

          oFile.WRITE('    { ' + PADSTR(FORMAT(ControlId), 4) + ';2   ;Field     ;');
          oFile.WRITE('                CaptionML=[ENU="' + DoubleChar(Fld."Field Caption", '"]') + '"];');
          IF (Fld.RelationTableNo <> 0) AND (Fld.RelationFieldNo IN [0, 1]) THEN
            oFile.WRITE('                TableRelation=Table' + FORMAT(Fld.RelationTableNo) + ';');
          oFile.WRITE('                SourceExpr=Fld' + FORMAT(Fld."No.") + ';');
          oFile.WRITE('                Visible=Ctr' + FORMAT(Fld."No.") + 'Visible;');
          oFile.WRITE('                OnValidate=BEGIN');
          oFile.WRITE('                             IF gValidate THEN BEGIN');
          IF Fld.Type IN [Fld.Type::TableFilter, Fld.Type::RecordID] THEN
            oFile.WRITE('                               EVALUATE("' + FORMAT(Fld.FieldName) + '", Fld' + FORMAT(Fld."No.") + ');')
          ELSE
            oFile.WRITE('                               VALIDATE("' + FORMAT(Fld.FieldName) + '", Fld' + FORMAT(Fld."No.") + ');');
          oFile.WRITE('                               FillVariables;');
          oFile.WRITE('                             END ELSE');
          IF IsKeyField(Fld) THEN BEGIN
            oFile.WRITE('                               IF DELETE THEN BEGIN');
            oFile.WRITE('                                 "' + FORMAT(Fld.FieldName) + '" := Fld' + FORMAT(Fld."No.") + ';');
            oFile.WRITE('                                 INSERT;');
            oFile.WRITE('                               END ELSE');
            oFile.WRITE('                                 "' + FORMAT(Fld.FieldName) + '" := Fld' + FORMAT(Fld."No.") + ';');
          END ELSE
            IF Fld.Type IN [Fld.Type::TableFilter, Fld.Type::RecordID] THEN
              oFile.WRITE('                               EVALUATE("' + FORMAT(Fld.FieldName) + '", Fld' + FORMAT(Fld."No.") + ');')
            ELSE
              oFile.WRITE('                               "' + FORMAT(Fld.FieldName) + '" := Fld' + FORMAT(Fld."No.") + ';');
          oFile.WRITE('                           END;');
          oFile.WRITE('                            }');
          oFile.WRITE('');
        UNTIL Fld.NEXT = 0;

      oFile.WRITE('  }');
      oFile.WRITE('  CODE');
      oFile.WRITE('  {');
      oFile.WRITE('    VAR');
      oFile.WRITE('      TmpAction@1000 : TEMPORARY Record 11102048;');
      oFile.WRITE('      gCompanyName@1001 : Text;');
      oFile.WRITE('      gValidate@1005 : Boolean;');

      i := 1006;
      IF Fld.FINDSET THEN
        REPEAT
          i += 1;
          CASE Fld.Type OF
            Fld.Type::Text, Fld.Type::Code :
              FieldType := FORMAT(Fld.Type) + '[' + FORMAT(Fld.Len) + ']';
            Fld.Type::Option :
              BEGIN
                RecRef.OPEN(TableNo);
                FldRef := RecRef.FIELD(Fld."No.");
                FieldType := '''' + DoubleChar(FldRef.OPTIONSTRING, '''') + '''';
                RecRef.CLOSE;
              END;
            Fld.Type::TableFilter, Fld.Type::RecordID :
              FieldType := 'Text[1024]';
            ELSE
              FieldType := FORMAT(Fld.Type);
          END;
          oFile.WRITE('      Fld' + FORMAT(Fld."No.") + '@' + FORMAT(i) + ' : ' + FieldType + ';');
        UNTIL Fld.NEXT = 0;

      IF Fld.FINDSET THEN
        REPEAT
          i += 1;
          oFile.WRITE('      Ctr' + FORMAT(Fld."No.") + 'Visible@' + FORMAT(i) + ' : Boolean INDATASET;');
        UNTIL Fld.NEXT = 0;

      oFile.WRITE('');
      oFile.WRITE('    LOCAL PROCEDURE FillVariables@1();');
      oFile.WRITE('    BEGIN');
      IF Fld.FINDSET THEN
        REPEAT
          CASE Fld.Type OF
            Fld.Type::TableFilter, Fld.Type::RecordID :
              oFile.WRITE('      Fld' + FORMAT(Fld."No.") + ' := FORMAT("' + Fld.FieldName + '");');
            ELSE
              oFile.WRITE('      Fld' + FORMAT(Fld."No.") + ' := "' + Fld.FieldName + '";');
          END;
        UNTIL Fld.NEXT = 0;

      oFile.WRITE('    END;');
      oFile.WRITE('');
      oFile.WRITE('    PROCEDURE ShowColumns@6(AllVisible@1000 : Boolean);');
      oFile.WRITE('    VAR');
      oFile.WRITE('      Fld@1001 : Record 2000000041;');
      oFile.WRITE('    BEGIN');
      oFile.WRITE('      Fld.SETRANGE(TableNo, ' + FORMAT(TableNo) + ');');
      oFile.WRITE('      Fld.SETFILTER(Class, ''<>%1'', Fld.Class::FlowFilter);');
      oFile.WRITE('      IF Fld.FINDSET THEN');
      oFile.WRITE('        REPEAT');
      oFile.WRITE('          ShowColumn(Fld."No.", AllVisible);');
      oFile.WRITE('        UNTIL Fld.NEXT = 0;');
      oFile.WRITE('');

      IF Fld.FINDSET THEN
        REPEAT
          IF IsKeyField(Fld) THEN
            oFile.WRITE('      Ctr' + FORMAT(Fld."No.") + 'Visible := TRUE;');
        UNTIL Fld.NEXT = 0;

      oFile.WRITE('    END;');
      oFile.WRITE('');
      oFile.WRITE('    LOCAL PROCEDURE ShowColumn@7(ColumnNo@1000 : Integer;Visible@1001 : Boolean);');
      oFile.WRITE('    BEGIN');
      oFile.WRITE('      CASE ColumnNo OF');

      IF Fld.FINDSET THEN
        REPEAT
          oFile.WRITE('        ' + FORMAT(Fld."No.") + ': Ctr' + FORMAT(Fld."No.") + 'Visible := Visible;');
        UNTIL Fld.NEXT = 0;

      oFile.WRITE('      END;');
      oFile.WRITE('    END;');
      oFile.WRITE('');
      oFile.WRITE('    PROCEDURE SetColumns@8(VAR TableMgt@1000 : Codeunit 11102053);');
      oFile.WRITE('    BEGIN');

      IF Fld.FINDSET THEN
        REPEAT
          oFile.WRITE('      TableMgt.AddFieldToBuffer(' + FORMAT(Fld."No.") + ', Ctr' + FORMAT(Fld."No.") + 'Visible);');
        UNTIL Fld.NEXT = 0;

      oFile.WRITE('    END;');
      oFile.WRITE('');
      oFile.WRITE('    PROCEDURE SelectColumns@9();');
      oFile.WRITE('    VAR');
      oFile.WRITE('      Fld@1000 : Record 2000000041;');
      oFile.WRITE('      TmpSelectedField@1001 : TEMPORARY Record 2000000041;');
      oFile.WRITE('      TableMgt@1002 : Codeunit 11102053;');
      oFile.WRITE('      RecRef@1003 : RecordRef;');
      oFile.WRITE('    BEGIN');
      oFile.WRITE('      RecRef.GETTABLE(Rec);');
      oFile.WRITE('      TableMgt.SetRecRef(RecRef);');
      oFile.WRITE('      SetColumns(TableMgt);');
      oFile.WRITE('      TableMgt.SelectFields(TmpSelectedField, TRUE);');
      oFile.WRITE('');
      oFile.WRITE('      Fld.SETRANGE(TableNo, ' + FORMAT(TableNo) + ');');
      oFile.WRITE('      Fld.SETRANGE(Class, Fld.Class::Normal);');
      oFile.WRITE('      Fld.SETFILTER(Type, ''<>%1'', Fld.Type::BLOB);');
      oFile.WRITE('      IF Fld.FINDSET THEN');
      oFile.WRITE('        REPEAT');
      oFile.WRITE('          ShowColumn(Fld."No.", TmpSelectedField.GET(0, Fld."No."));');
      oFile.WRITE('        UNTIL Fld.NEXT = 0;');
      oFile.WRITE('    END;');
      oFile.WRITE('');
      oFile.WRITE('    PROCEDURE SetAction@2(VAR Actions@1000 : Record 11102048);');
      oFile.WRITE('    BEGIN');
      oFile.WRITE('      TmpAction := Actions;');
      oFile.WRITE('    END;');
      oFile.WRITE('');
      oFile.WRITE('    BEGIN');
      oFile.WRITE('    END.');
      oFile.WRITE('  }');
      oFile.WRITE('}');
      oFile.CLOSE;

      ObjectMgt.ImportObject(FileName);

      Object2.Type := Object2.Type::Page;
      Object2.ID := PAGE::"OM - Edit Table Data";
      ObjectMgt.CompileObject(Object2);

      IF ActionSet THEN
        EditTableData.SetAction(TmpAction);

      EditTableData.RUN;
    END;

    LOCAL PROCEDURE IsKeyField@3(VAR Fld@1000 : Record 2000000041) : Boolean;
    VAR
      RecRef@1001 : RecordRef;
      Fldref@1002 : FieldRef;
      KeyRef@1003 : KeyRef;
      i@1004 : Integer;
    BEGIN
      RecRef.OPEN(Fld.TableNo);
      KeyRef := RecRef.KEYINDEX(1);
      FOR i := 1 TO KeyRef.FIELDCOUNT DO BEGIN
        Fldref := KeyRef.FIELDINDEX(i);
        IF Fldref.NUMBER = Fld."No." THEN
          EXIT(TRUE);
      END;
    END;

    PROCEDURE SetAction@4(VAR TmpAction2@1000 : TEMPORARY Record 11102048;VAR TmpActionField2@1001 : TEMPORARY Record 11102049);
    BEGIN
      TmpAction := TmpAction2;
      TmpAction.INSERT;

      IF TmpAction.Fields = TmpAction.Fields::Selected THEN
        IF TmpActionField2.FINDSET THEN
          REPEAT
            TmpActionField := TmpActionField2;
            TmpActionField.INSERT;
          UNTIL TmpActionField2.NEXT = 0;

      ActionSet := TRUE;
    END;

    LOCAL PROCEDURE DoubleChar@5(Value@1000 : Text;Chars@1001 : Text) ExitValue : Text;
    VAR
      i@1002 : Integer;
      j@1003 : Integer;
    BEGIN
      FOR i := 1 TO STRLEN(Value) DO BEGIN
        FOR j := 1 TO STRLEN(Chars) DO
          IF Value[i] = Chars[j] THEN
            ExitValue += FORMAT(Chars[j]);
        ExitValue += COPYSTR(Value, i, 1);
      END;
    END;

    PROCEDURE ExportAsCsv@6();
    VAR
      CommonDialog@1000 : Codeunit 11102059;
      FileHandler@1001 : Codeunit 11102097;
      oFile@1002 : File;
      FldRef@1003 : FieldRef;
      ClientFileName@1004 : Text;
      ServerFileName@1005 : Text;
      FirstField@1006 : Boolean;
      ctDefaultFileName@1007 : TextConst 'DEU=data.csv;ENU=data.csv;ESP=data.csv;FRA=data.csv;NLD=data.csv;DEA=data.csv';
    BEGIN
      ClientFileName := ExportFileName('csv');
      CommonDialog.AddKnownExtension('csv');

      IF NOT CommonDialog.SaveFile(ClientFileName, ServerFileName, ctDefaultFileName) THEN
        EXIT;

      oFile.TEXTMODE(TRUE);
      oFile.CREATE(ServerFileName);

      IF gRecRef.FINDSET THEN
        REPEAT
          IF TmpField.FINDSET THEN BEGIN
            FirstField := TRUE;
            REPEAT
              IF NOT FirstField THEN
                WriteSeperator(oFile);

              FldRef := gRecRef.FIELD(TmpField."No.");
              oFile.WRITE(MakeCSVValue(FORMAT(FldRef.VALUE)));

              FirstField := FALSE;

            UNTIL TmpField.NEXT = 0;
          END;
        UNTIL gRecRef.NEXT = 0;

      oFile.CLOSE;

      FileHandler.DownloadToClient(ServerFileName, ClientFileName, ctDefaultFileName);
    END;

    LOCAL PROCEDURE AddDelimiters@7(Value@1000 : Text) ExitValue : Text;
    VAR
      i@1001 : Integer;
      AddDelimiters2@1002 : Boolean;
    BEGIN
      IF Value = '' THEN
        EXIT('""');

      IF (Value[1] = ' ') OR (Value[STRLEN(Value)] = ' ') THEN
        AddDelimiters2 := TRUE;

      FOR i := 1 TO STRLEN(Value) DO
        CASE Value[i] OF
          '"' :
            BEGIN
              ExitValue += '""';
              AddDelimiters2 := TRUE;
            END;

          10, 13, ';' :
            BEGIN
              ExitValue += FORMAT(Value[i]);
              AddDelimiters2 := TRUE;
            END;

          ELSE
            ExitValue += FORMAT(Value[i]);
        END;

      IF AddDelimiters2 THEN
        ExitValue := '"' + ExitValue + '"';
    END;

    PROCEDURE WriteSeperator@8(VAR oFile@1000 : File);
    BEGIN
      oFile.SEEK(oFile.POS - 2);
      oFile.WRITE(';');
      oFile.SEEK(oFile.POS - 2);
    END;

    PROCEDURE ExportAsFab@9();
    VAR
      TmpAction2@1000 : TEMPORARY Record 11102048;
      TmpActionField2@1001 : TEMPORARY Record 11102049;
      ActionMgt@1002 : Codeunit 11102038;
      Progressbar@1003 : Codeunit 11102044;
      CommonDialog@1004 : Codeunit 11102059;
      FileHandler@1005 : Codeunit 11102097;
      ClientFileName@1006 : Text;
      ServerFileName@1007 : Text;
      ctDefaultFileName@1008 : TextConst 'DEU=data.fab;ENU=data.fab;ESP=data.fab;FRA=data.fab;NLD=data.fab;DEA=data.fab';
      ctExporting@1009 : TextConst 'DEU=Exporting...;ENU=Exporting...;ESP=Exporting...;FRA=Exporting...;NLD=Exporteren...;DEA=Exporting...';
    BEGIN
      ClientFileName := ExportFileName('fab');

      CommonDialog.AddKnownExtension('fab');
      IF NOT CommonDialog.SaveFile(ClientFileName, ServerFileName, ctDefaultFileName) THEN
        EXIT;

      TmpAction2."Line No." := 10000;
      TmpAction2."Action Type" := TmpAction2."Action Type"::"Transfer Data";
      TmpAction2."Object No." := gRecRef.NUMBER;
      TmpAction2."Object Name" := gRecRef.CAPTION;
      TmpAction2.INSERT;

      IF TmpField.FINDSET THEN
        REPEAT
          TmpActionField2."Line No." := 10000;
          TmpActionField2."Field No." := TmpField."No.";
          TmpActionField2."Field Name" := TmpField.FieldName;
          TmpActionField2."Type Name" := TmpField."Type Name";
          TmpActionField2.Selected := TRUE;
          TmpActionField2.INSERT;
        UNTIL TmpField.NEXT = 0;

      Progressbar.Open(ctExporting, 2);
      ActionMgt.ExportFile(TmpAction2, TmpActionField2, ServerFileName, Progressbar);
      Progressbar.Close;

      FileHandler.DownloadToClient(ServerFileName, ClientFileName, ctDefaultFileName);
    END;

    PROCEDURE ExportAsTab@10();
    VAR
      Progressbar@1000 : Codeunit 11102044;
      CommonDialog@1001 : Codeunit 11102059;
      FileHandler@1002 : Codeunit 11102097;
      oFile@1003 : File;
      FldRef@1004 : FieldRef;
      ClientFileName@1005 : Text;
      ServerFileName@1006 : Text;
      FirstField@1007 : Boolean;
      ctDefaultFileName@1008 : TextConst 'DEU=data.txt;ENU=data.txt;ESP=data.txt;FRA=data.txt;NLD=data.txt;DEA=data.txt';
      ctExporting@1009 : TextConst 'DEU=Exporting...;ENU=Exporting...;ESP=Exporting...;FRA=Exporting...;NLD=Exporteren...;DEA=Exporting...';
      ctExtensions@1010 : TextConst 'DEU=TAB Delimited Values (*.txt)|*.txt;ENU=TAB Delimited Values (*.txt)|*.txt;ESP=TAB Delimited Values (*.txt)|*.txt;FRA=TAB Delimited Values (*.txt)|*.txt;NLD=TAB Delimited Values (*.txt)|*.txt;DEA=TAB Delimited Values (*.txt)|*.txt';
    BEGIN
      ClientFileName := ExportFileName('txt');
      CommonDialog.AddExtension(ctExtensions, 'txt');

      IF NOT CommonDialog.SaveFile(ClientFileName, ServerFileName, ctDefaultFileName) THEN
        EXIT;

      oFile.TEXTMODE(TRUE);
      oFile.CREATE(ServerFileName);

      Progressbar.Open(ctExporting, 0);
      Progressbar.BarSize := gRecRef.COUNT;

      IF gRecRef.FINDSET THEN
        REPEAT
          Progressbar.AddToBar(1);

          IF TmpField.FINDSET THEN BEGIN
            FirstField := TRUE;
            REPEAT
              IF NOT FirstField THEN
                WriteTab(oFile);

              FldRef := gRecRef.FIELD(TmpField."No.");

              IF TmpField.Class = TmpField.Class::FlowField THEN
                FldRef.CALCFIELD;

              oFile.WRITE(FORMAT(FldRef.VALUE));

              FirstField := FALSE;

            UNTIL TmpField.NEXT = 0;
          END;
        UNTIL gRecRef.NEXT = 0;

      Progressbar.Close;

      oFile.CLOSE;

      FileHandler.DownloadToClient(ServerFileName, ClientFileName, ctDefaultFileName);
    END;

    PROCEDURE ExportAsXml@11();
    VAR
      Progressbar@1000 : Codeunit 11102044;
      CommonDialog@1001 : Codeunit 11102059;
      FileHandler@1002 : Codeunit 11102097;
      oFile@1003 : File;
      FldRef@1004 : FieldRef;
      ClientFileName@1005 : Text;
      ServerFileName@1006 : Text;
      Tab@1007 : Char;
      ctDefaultFileName@1008 : TextConst 'DEU=data.xml;ENU=data.xml;ESP=data.xml;FRA=data.xml;NLD=data.xml;DEA=data.xml';
      ctExporting@1009 : TextConst 'DEU=Exporting...;ENU=Exporting...;ESP=Exporting...;FRA=Exporting...;NLD=Exporteren...;DEA=Exporting...';
    BEGIN
      ClientFileName := ExportFileName('xml');
      IF NOT CommonDialog.SaveFile(ClientFileName, ServerFileName, ctDefaultFileName) THEN
        EXIT;

      oFile.TEXTMODE(TRUE);
      oFile.CREATE(ServerFileName);
      Tab := 9;

      Progressbar.Open(ctExporting, 0);
      Progressbar.BarSize := gRecRef.COUNT;

      oFile.WRITE('<' + XmlLabel(gRecRef.NAME + 's') + '>');
      IF gRecRef.FINDSET THEN
        REPEAT

          Progressbar.AddToBar(1);

          oFile.WRITE(FORMAT(Tab) + '<' + XmlLabel(gRecRef.NAME) + '>');

          IF TmpField.FINDSET THEN
            REPEAT

              FldRef := gRecRef.FIELD(TmpField."No.");

              IF TmpField.Class = TmpField.Class::FlowField THEN
                FldRef.CALCFIELD;

              oFile.WRITE(
                FORMAT(Tab) + FORMAT(Tab) + '<' + XmlLabel(FldRef.NAME) + '>' +
                XmlValue(FORMAT(FldRef.VALUE, 0, 9)) +
                '</' + XmlLabel(FldRef.NAME) + '>');

            UNTIL TmpField.NEXT = 0;

          oFile.WRITE(FORMAT(Tab) + '</' + XmlLabel(gRecRef.NAME) + '>');
        UNTIL gRecRef.NEXT = 0;

      oFile.WRITE('</' + XmlLabel(gRecRef.NAME + 's') + '>');

      Progressbar.Close;

      oFile.CLOSE;

      FileHandler.DownloadToClient(ServerFileName, ClientFileName, ctDefaultFileName);
    END;

    LOCAL PROCEDURE XmlLabel@12(Text@1000 : Text) ExitValue : Text[1024];
    VAR
      i@1001 : Integer;
      MakeCapital@1002 : Boolean;
    BEGIN
      MakeCapital := TRUE;

      FOR i := 1 TO STRLEN(Text) DO
        IF ((Text[i] >= '0') AND (Text[i] <= '9')) OR
           ((Text[i] >= 'a') AND (Text[i] <= 'z')) OR
           ((Text[i] >= 'A') AND (Text[i] <= 'Z'))
        THEN BEGIN
          IF MakeCapital THEN
            ExitValue += UPPERCASE(FORMAT(Text[i]))
          ELSE
            ExitValue += LOWERCASE(FORMAT(Text[i]));
          MakeCapital := FALSE;
        END ELSE
          MakeCapital := TRUE;
    END;

    LOCAL PROCEDURE XmlValue@13(Text@1000 : Text) ExitValue : Text[1024];
    VAR
      i@1001 : Integer;
    BEGIN
      FOR i := 1 TO STRLEN(Text) DO
        CASE Text[i] OF
          '&' :
            ExitValue += '&amp;';
          '''' :
            ExitValue += '&apos;';
          '"' :
            ExitValue += '&quot;';
          '>' :
            ExitValue += '&gt;';
          '<' :
            ExitValue += '&lt;';
          ELSE
            ExitValue += FORMAT(Text[i]);
        END;
    END;

    LOCAL PROCEDURE WriteTab@14(VAR oFile@1000 : File);
    VAR
      Tab@1001 : Char;
    BEGIN
      Tab := 9;

      oFile.SEEK(oFile.POS - 2);
      oFile.WRITE(FORMAT(Tab));
      oFile.SEEK(oFile.POS - 2);
    END;

    PROCEDURE SetRecRef@15(VAR RecRef@1000 : RecordRef);
    BEGIN
      TmpField.DELETEALL;
      CLEAR(gRecRef);
      gRecRef := RecRef;
    END;

    PROCEDURE AddFieldToBuffer@16(FieldNo2@1000 : Integer;Visible@1001 : Boolean);
    VAR
      Fld@1002 : Record 2000000041;
    BEGIN
      IF Visible THEN
        IF Fld.GET(gRecRef.NUMBER, FieldNo2) THEN BEGIN
          TmpField := Fld;
          TmpField.INSERT;
        END;
    END;

    PROCEDURE SelectFields@17(VAR TmpSelectedField@1000 : TEMPORARY Record 2000000041;EditTable@1001 : Boolean);
    VAR
      TmpActionField2@1002 : TEMPORARY Record 11102049;
      Fld@1003 : Record 2000000041;
    BEGIN
      Fld.SETRANGE(TableNo, gRecRef.NUMBER);
      Fld.SETRANGE(Enabled, TRUE);
      IF EditTable THEN BEGIN
        Fld.SETFILTER(Type, '<>%1', Fld.Type::BLOB);
        Fld.SETRANGE(Class, Fld.Class::Normal);
      END ELSE
        Fld.SETFILTER(Class, '<>%1', Fld.Class::FlowFilter);
      IF Fld.FINDSET THEN
        REPEAT
          TmpActionField2."Line No." += 10000;
          TmpActionField2."Field No." := Fld."No.";
          TmpActionField2."Table No." := Fld.TableNo;
          TmpActionField2."Field Name" := Fld.FieldName;
          TmpActionField2."Type Name" := Fld."Type Name";
          TmpActionField2.Selected := TmpField.GET(Fld.TableNo, Fld."No.");
          TmpActionField2.INSERT;
        UNTIL Fld.NEXT = 0;

      TmpActionField2.FINDFIRST;

      PAGE.RUNMODAL(PAGE::"OM - Action Fields", TmpActionField2);

      TmpActionField2.SETRANGE(Selected, TRUE);
      IF TmpActionField2.FINDSET THEN
        REPEAT
          TmpSelectedField."No." := TmpActionField2."Field No.";
          TmpSelectedField.INSERT;
        UNTIL TmpActionField2.NEXT = 0;
    END;

    PROCEDURE HasInsertPermission@18() : Boolean;
    VAR
      Setup@1000 : Record 11102035;
      LicensePermission@1001 : Record 2000000043;
      ImportTextFiles@1002 : Boolean;
      ModifyObjects@1003 : Boolean;
    BEGIN
      Setup.CustomGet;

      IF LicensePermission.GET(LicensePermission."Object Type"::System, 1320) THEN
        ImportTextFiles := LicensePermission."Execute Permission" = LicensePermission."Execute Permission"::Yes;

      IF LicensePermission.GET(LicensePermission."Object Type"::"2", PAGE::"OM - Show Table Data") THEN
        ModifyObjects := LicensePermission."Modify Permission" = LicensePermission."Modify Permission"::Yes;

      EXIT(ImportTextFiles AND ModifyObjects);
    END;

    PROCEDURE LookupCompanyName@19(VAR Text@1000 : Text;TableNo@1001 : Integer) : Boolean;
    VAR
      Company@1002 : Record 2000000006;
      ApplicationSettings@1003 : Codeunit 11102101;
      Companies@1004 : Page 11102066;
    BEGIN
      ApplicationSettings.SetLookupTableNo(TableNo);

      IF Company.GET(Text) THEN
        Companies.SETRECORD(Company);

      Companies.LOOKUPMODE(TRUE);
      IF Companies.RUNMODAL = ACTION::LookupOK THEN BEGIN
        Companies.GETRECORD(Company);
        Text := Company.Name;
        EXIT(TRUE);
      END;
    END;

    PROCEDURE MakeCSVValue@20(Value@1000 : Text) : Text[1024];
    BEGIN
      EXIT(AddDelimiters(Value));
    END;

    PROCEDURE GetNextCSVValue@21(VAR oFile@1000 : File;VAR ExitValue@1001 : Text) : Boolean;
    VAR
      Char@1002 : Char;
      FirstCharacter@1003 : Boolean;
      QuotesOpened@1004 : Boolean;
      Stop@1005 : Boolean;
    BEGIN
      ExitValue := '';
      FirstCharacter := TRUE;

      WHILE NOT Stop DO

        IF oFile.READ(Char) = 0 THEN

          EXIT(FALSE)

        ELSE BEGIN

          CASE Char OF

            13 :
              Stop := TRUE;

            10 :
              Stop := TRUE;

            ';' :
              IF QuotesOpened THEN
                ExitValue += FORMAT(Char)
              ELSE
                Stop := TRUE;

            '"' :
              IF FirstCharacter THEN
                QuotesOpened := TRUE
              ELSE
                IF QuotesOpened THEN BEGIN
                  oFile.READ(Char);
                  IF (Char = 10) OR (Char = 13) OR (Char = ';') THEN
                    Stop := TRUE
                  ELSE
                    ExitValue += FORMAT(Char);
                END;
            ELSE
              ExitValue += FORMAT(Char);
          END;

          FirstCharacter := FALSE;

        END;

      IF (Char = 13) OR (Char = 10) THEN
        oFile.SEEK(oFile.POS - 1);

      EXIT(TRUE);
    END;

    PROCEDURE GotoNextLine@22(VAR oFile@1000 : File) : Boolean;
    VAR
      Char@1001 : Char;
      Stop@1002 : Boolean;
    BEGIN
      WHILE NOT Stop DO

        IF oFile.READ(Char) = 0 THEN

          EXIT(FALSE)

        ELSE

          CASE Char OF

            13 :
              Stop := TRUE;

            10 :
              Stop := TRUE;

          END;

      oFile.READ(Char);
      IF (Char <> 10) AND (Char <> 13) THEN
        oFile.SEEK(oFile.POS - 1);

      IF oFile.READ(Char) = 0 THEN
        EXIT(FALSE)
      ELSE BEGIN
        oFile.SEEK(oFile.POS - 1);
        EXIT(TRUE);
      END;
    END;

    LOCAL PROCEDURE FormatTime@23(TimeToPrint@1000 : Time) : Text;
    BEGIN
      EXIT(FORMAT(TimeToPrint, 0, '<Hours24>:<Minutes,2>:<Seconds,2>'));
    END;

    LOCAL PROCEDURE ExportFileName@24(Extension@1000 : Text) ExitValue : Text;
    VAR
      Object@1001 : Record 2000000001;
    BEGIN
      ExitValue := 'data.' + Extension;

      IF Object.GET(Object.Type::Table, '', gRecRef.NUMBER) THEN
        ExitValue :=
          Object.Name + ' ' +
          FORMAT(TODAY, 0, '<Year4>-<Month,2>-<Day,2>') + ' ' +
          FORMAT(TIME, 0, '<Hours24,2><Filler Character,0><Minutes,2>') + '.' + Extension;

      ExitValue := DELCHR(ExitValue, '=', '/\:*?"<>|');
    END;

    PROCEDURE IsPrimaryKeyField@25(TableNo@1000 : Integer;FieldNo2@1001 : Integer) : Boolean;
    VAR
      RecRef@1002 : RecordRef;
      FldRef@1003 : FieldRef;
      KeyRef@1004 : KeyRef;
      i@1005 : Integer;
    BEGIN
      RecRef.OPEN(TableNo);
      KeyRef := RecRef.KEYINDEX(1);
      FOR i := 1 TO KeyRef.FIELDCOUNT DO BEGIN
        FldRef := KeyRef.FIELDINDEX(i);
        IF FldRef.NUMBER = FieldNo2 THEN
          EXIT(TRUE);
      END;
    END;

    BEGIN
    END.
  }
}

