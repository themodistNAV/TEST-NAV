OBJECT Codeunit 449 Job Queue Start Codeunit
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    TableNo=472;
    OnRun=BEGIN
            IF "User Language ID" <> 0 THEN
              GLOBALLANGUAGE("User Language ID");

            CASE "Object Type to Run" OF
              "Object Type to Run"::Codeunit:
                CODEUNIT.RUN("Object ID to Run",Rec);
              "Object Type to Run"::Report:
                RunReport("Object ID to Run",Rec);
            END;

            // Commit any remaining transactions from the target codeunit\report. This is necessary due
            // to buffered record insertion which may not have surfaced errors in CODEUNIT.RUN above.
            COMMIT;
          END;

  }
  CODE
  {

    LOCAL PROCEDURE RunReport@1(ReportID@1000 : Integer;VAR JobQueueEntry@1006 : Record 472);
    VAR
      ReportInbox@1003 : Record 477;
      RecRef@1002 : RecordRef;
      OutStr@1004 : OutStream;
      RunOnRec@1001 : Boolean;
    BEGIN
      ReportInbox.INIT;
      ReportInbox."User ID" := JobQueueEntry."User ID";
      ReportInbox."Job Queue Log Entry ID" := JobQueueEntry.ID;
      ReportInbox."Report ID" := ReportID;
      ReportInbox.Description := JobQueueEntry.Description;
      ReportInbox."Report Output".CREATEOUTSTREAM(OutStr);
      RunOnRec := RecRef.GET(JobQueueEntry."Record ID to Process");
      IF RunOnRec THEN
        RecRef.SETRECFILTER;

      CASE JobQueueEntry."Report Output Type" OF
        JobQueueEntry."Report Output Type"::"None (Processing only)":
          IF RunOnRec THEN
            REPORT.EXECUTE(ReportID,JobQueueEntry.GetReportParameters,RecRef)
          ELSE
            REPORT.EXECUTE(ReportID,JobQueueEntry.GetReportParameters);
        JobQueueEntry."Report Output Type"::Print:
          IF RunOnRec THEN
            REPORT.PRINT(ReportID,JobQueueEntry.GetReportParameters,JobQueueEntry."Printer Name",RecRef)
          ELSE
            REPORT.PRINT(ReportID,JobQueueEntry.GetReportParameters,JobQueueEntry."Printer Name");
        JobQueueEntry."Report Output Type"::PDF:
          BEGIN
            IF RunOnRec THEN
              REPORT.SAVEAS(ReportID,JobQueueEntry.GetReportParameters,REPORTFORMAT::Pdf,OutStr,RecRef)
            ELSE
              REPORT.SAVEAS(ReportID,JobQueueEntry.GetReportParameters,REPORTFORMAT::Pdf,OutStr);
            ReportInbox."Output Type" := ReportInbox."Output Type"::PDF;
          END;
        JobQueueEntry."Report Output Type"::Word:
          BEGIN
            IF RunOnRec THEN
              REPORT.SAVEAS(ReportID,JobQueueEntry.GetReportParameters,REPORTFORMAT::Word,OutStr,RecRef)
            ELSE
              REPORT.SAVEAS(ReportID,JobQueueEntry.GetReportParameters,REPORTFORMAT::Word,OutStr);
            ReportInbox."Output Type" := ReportInbox."Output Type"::Word;
          END;
        JobQueueEntry."Report Output Type"::Excel:
          BEGIN
            IF RunOnRec THEN
              REPORT.SAVEAS(ReportID,JobQueueEntry.GetReportParameters,REPORTFORMAT::Excel,OutStr,RecRef)
            ELSE
              REPORT.SAVEAS(ReportID,JobQueueEntry.GetReportParameters,REPORTFORMAT::Excel,OutStr);
            ReportInbox."Output Type" := ReportInbox."Output Type"::Excel;
          END;
      END;

      CASE JobQueueEntry."Report Output Type" OF
        JobQueueEntry."Report Output Type"::"None (Processing only)":
          BEGIN
            JobQueueEntry."Notify On Success" := TRUE;
            JobQueueEntry.MODIFY;
          END;
        JobQueueEntry."Report Output Type"::Print:
          ;
        ELSE BEGIN
          ReportInbox."Created Date-Time" := ROUNDDATETIME(CURRENTDATETIME,60000);
          ReportInbox.INSERT(TRUE);
        END;
      END;
      COMMIT;
    END;

    BEGIN
    END.
  }
}

