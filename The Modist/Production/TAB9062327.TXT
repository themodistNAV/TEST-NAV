OBJECT Table 9062327 Enhanced Field Definition
{
  OBJECT-PROPERTIES
  {
    Date=10/05/16;
    Time=12:00:00 PM;
    Version List=NA2016.15;
  }
  PROPERTIES
  {
    OnInsert=VAR
               EnhFields@1000000000 : Record 9062327;
               EnhFieldNumbering@1000000001 : Codeunit 9062234;
             BEGIN
               IF "Enhanced Field No." = 0 THEN
                 "Enhanced Field No." := EnhFieldNumbering.GetNextNum_EnhField("Created By","Table No.");

               VALIDATE(Code,FORMAT("Table No.") + ' ' + FORMAT("Enhanced Field No."));
             END;

    OnDelete=VAR
               EnhFieldValue@1000000000 : Record 9062328;
               FieldLookup@1000000001 : Record 9062312;
               TxtConfirmation@1000000002 : TextConst 'ENU=Are you sure you want to delete the field %1 from table %2?;ENG=Are you sure you want to delete the field %1 from table %2?';
               TxtCancelled@1000000003 : TextConst 'ENU=Delete cancelled;ENG=Delete cancelled';
             BEGIN
               IF GUIALLOWED THEN BEGIN
                 IF NOT CONFIRM(STRSUBSTNO(TxtConfirmation,Name,"Table Name")) THEN ERROR(TxtCancelled);
               END;
               EnhFieldValue.SETRANGE("Table No.","Table No.");
               EnhFieldValue.SETRANGE("Enhanced Field No.","Enhanced Field No.");
               IF EnhFieldValue.FINDSET THEN EnhFieldValue.DELETEALL(TRUE);

               FieldLookup.SETRANGE("Table ID","Table No.");
               FieldLookup.SETRANGE("Field Type",FieldLookup."Field Type"::"Enhanced Field");
               FieldLookup.SETRANGE("Field No.","Enhanced Field No.");
               IF FieldLookup.FINDSET THEN FieldLookup.DELETEALL(TRUE);

               CriteriaManagement.DeleteCriteria("Formula Criteria ID");
               CriteriaManagement.DeleteCriteria("Visibility Criteria ID");
             END;

    OnRename=BEGIN
               VALIDATE(Code,FORMAT("Table No.") + ' ' + FORMAT("Enhanced Field No."));
             END;

    CaptionML=[ENU=Enhanced Field Definition;
               ENG=Enhanced Field Definition];
    LookupPageID=Page9062391;
    DrillDownPageID=Page9062391;
  }
  FIELDS
  {
    { 1   ;   ;Table No.           ;Integer       ;TableRelation=Object.ID WHERE (Type=CONST(Table));
                                                   OnValidate=VAR
                                                                EnhFields@1000000001 : Record 9062327;
                                                                EnhFieldNumbering@1000000002 : Codeunit 9062234;
                                                              BEGIN
                                                                IF (xRec."Table No." <> Rec."Table No.") THEN BEGIN
                                                                  "Enhanced Field No." := EnhFieldNumbering.GetNextNum_EnhField("Created By","Table No.");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Table No.;
                                                              ENG=Table No.] }
    { 2   ;   ;Enhanced Field No.  ;Integer       ;CaptionML=[ENU=Enhanced Field No.;
                                                              ENG=Enhanced Field No.] }
    { 3   ;   ;Name                ;Text50        ;OnValidate=VAR
                                                                Fields@1000000000 : Record 2000000041;
                                                                EnhFields@1000000001 : Record 9062327;
                                                                eFieldAleadyExists@1000000002 : TextConst 'ENU=Sorry, a Field called %1 (No. %2) already exists on the table %3;ENG=Sorry, a Field called %1 (No. %2) already exists on the table %3';
                                                                eEnhFieldAleadyExists@1000000003 : TextConst 'ENU=Sorry, an Enhanced Field called %1 (No. %2) already exists on the table %3;ENG=Sorry, an Enhanced Field called %1 (No. %2) already exists on the table %3';
                                                              BEGIN
                                                                IF Name = '' THEN EXIT;
                                                                IF Name = xRec.Name THEN EXIT;

                                                                CALCFIELDS("Table Name");

                                                                Fields.SETRANGE(TableNo,"Table No.");
                                                                Fields.SETRANGE(FieldName,Name);
                                                                IF Fields.FINDFIRST THEN ERROR(eFieldAleadyExists,Fields.FieldName,Fields."No.","Table Name");

                                                                EnhFields.SETRANGE("Table No.","Table No.");
                                                                IF "Enhanced Table No." <> 0 THEN SETRANGE("Enhanced Table No.","Enhanced Table No."); //DOC PC NA2016/10
                                                                EnhFields.SETRANGE(Name,Name);
                                                                IF EnhFields.FINDFIRST THEN ERROR(eEnhFieldAleadyExists,EnhFields.Name,EnhFields."Enhanced Field No.","Table Name");

                                                                IF ("Factbox Caption" = '') OR ("Factbox Caption" = xRec.Name) THEN
                                                                  "Factbox Caption" := COPYSTR(Name,1,(MAXSTRLEN("Factbox Caption")));
                                                              END;

                                                   CaptionML=[ENU=Name;
                                                              ENG=Name] }
    { 4   ;   ;Type                ;Option        ;OnValidate=BEGIN
                                                                IF ("Source Type" = "Source Type"::Calculated) AND (Type <> Type::Decimal) THEN ERROR(eCalculatedType);

                                                                GetNAVDataType("NAV Data Type");
                                                                VALIDATE("NAV Data Type");

                                                                CASE Type OF
                                                                    Type::Boolean : BEGIN
                                                                      VALIDATE("Source Type","Source Type"::"Pick From List");
                                                                      CreateBooleanDefaultValues();
                                                                      VALIDATE("Show On Factbox",FALSE);
                                                                    END;
                                                                    Type::Link : BEGIN
                                                                      VALIDATE("NAV Data Type","NAV Data Type"::Text);
                                                                      VALIDATE("Display Text",LinkDisplayText);
                                                                      VALIDATE("Factbox Display Text",FBLinkDisplayText);
                                                                      VALIDATE("Show On Factbox",FALSE);
                                                                    END;
                                                                    Type::"Dynamic Link" : BEGIN
                                                                      VALIDATE("NAV Data Type","NAV Data Type"::Text);
                                                                      VALIDATE("Source Type","Source Type"::Concatenate);
                                                                      VALIDATE("Display Text",LinkDisplayText);
                                                                      VALIDATE("Factbox Display Text",FBLinkDisplayText);
                                                                      VALIDATE("Show On Factbox",FALSE);
                                                                      VALIDATE(Editable,FALSE);
                                                                    END;
                                                                    Type::Image : BEGIN
                                                                      VALIDATE("NAV Data Type","NAV Data Type"::BLOB);
                                                                      VALIDATE("Display Text",ImageDisplayText);
                                                                      VALIDATE("Factbox Display Text",FBImageDisplayText);
                                                                      VALIDATE("Show On Factbox",FALSE);
                                                                      VALIDATE(Editable,FALSE);
                                                                    END;
                                                                    Type::Document : BEGIN
                                                                      VALIDATE("NAV Data Type","NAV Data Type"::BLOB);
                                                                      VALIDATE("Display Text",DocumentDisplaytext);
                                                                      VALIDATE("Factbox Display Text",FBDocumentDisplaytext);
                                                                      VALIDATE("Show On Factbox",FALSE);
                                                                      VALIDATE(Editable,FALSE);
                                                                    END;
                                                                    Type::"Extended Text" : BEGIN
                                                                      VALIDATE("NAV Data Type","NAV Data Type"::Text);
                                                                      VALIDATE("Show On Factbox",FALSE);
                                                                    END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Type;
                                                              ENG=Type];
                                                   OptionCaptionML=[ENU=Text,Code,Integer,Decimal,Date,Time,Boolean,Extended Text,Document,Image,Link,Dynamic Link;
                                                                    ENG=Text,Code,Integer,Decimal,Date,Time,Boolean,Extended Text,Document,Image,Link,Dynamic Link];
                                                   OptionString=Text,Code,Integer,Decimal,Date,Time,Boolean,Extended Text,Document,Image,Link,Dynamic Link }
    { 5   ;   ;Source Type         ;Option        ;OnValidate=BEGIN
                                                                IF ("Source Type" = "Source Type"::Calculated) AND (Type <> Type::Decimal) THEN ERROR(eCalculatedType);
                                                                CASE "Source Type" OF
                                                                  "Source Type"::Calculated, "Source Type"::Concatenate, "Source Type"::"Function", "Source Type"::Lookup : VALIDATE(Editable,FALSE);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Source Type;
                                                              ENG=Source Type];
                                                   OptionCaptionML=[ENU=" ,Calculated,Lookup,Concatenate,Pick From List,Function,Codeunit";
                                                                    ENG=" ,Calculated,Lookup,Concatenate,Pick From List,Function,Codeunit"];
                                                   OptionString=[ ,Calculated,Lookup,Concatenate,Pick From List,Function,Codeunit] }
    { 6   ;   ;Formula             ;Text250       ;CaptionML=[ENU=Formula;
                                                              ENG=Formula] }
    { 7   ;   ;Table Name          ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Object.Name WHERE (Type=CONST(Table),
                                                                                         ID=FIELD(Table No.)));
                                                   OnLookup=BEGIN
                                                              IF (ObjectFieldToolkit.TableLookup(Rec."Table No.")) THEN
                                                                Rec.VALIDATE("Table No.");
                                                            END;

                                                   CaptionML=[ENU=Table Name;
                                                              ENG=Table Name];
                                                   Editable=No }
    { 8   ;   ;Lookup To Table No. ;Integer       ;TableRelation=Object.ID WHERE (Type=CONST(Table));
                                                   OnLookup=BEGIN
                                                              IF (ObjectFieldToolkit.TableLookup(Rec."Table No.")) THEN
                                                                Rec.VALIDATE("Table No.");
                                                            END;

                                                   CaptionML=[ENU=Lookup To Table No.;
                                                              ENG=Lookup To Table No.] }
    { 9   ;   ;Lookup Link To Field No.;Integer   ;TableRelation=Field.No. WHERE (TableNo=FIELD(Lookup To Table No.));
                                                   OnLookup=BEGIN
                                                              IF (ObjectFieldToolkit.FieldLookup(Rec."Lookup To Table No.", Rec."Lookup Link To Field No.")) THEN
                                                                Rec.VALIDATE("Lookup Link To Field No.");
                                                            END;

                                                   CaptionML=[ENU=Lookup Link To Field No.;
                                                              ENG=Lookup Link To Field No.] }
    { 10  ;   ;Lookup Link From Field Type;Option ;CaptionML=[ENU=Lookup Link From Field Type;
                                                              ENG=Lookup Link From Field Type];
                                                   OptionCaptionML=[ENU=Field,Enhanced Field;
                                                                    ENG=Field,Enhanced Field];
                                                   OptionString=Field,Enhanced Field }
    { 11  ;   ;Lookup Link From Field No.;Integer ;TableRelation=IF (Lookup Link From Field Type=CONST(Field)) Field.No. WHERE (TableNo=FIELD(Table No.))
                                                                 ELSE IF (Lookup Link From Field Type=CONST(Enhanced Field)) "Enhanced Field Definition"."Enhanced Field No." WHERE (Table No.=FIELD(Table No.));
                                                   OnValidate=VAR
                                                                RecRef@1000000000 : RecordRef;
                                                                FieldRef@1000000001 : FieldRef;
                                                                EnhFieldDef@1000000002 : Record 9062327;
                                                              BEGIN
                                                                CASE "Lookup Link From Field Type" OF
                                                                  "Lookup Link From Field Type"::Field :
                                                                    BEGIN
                                                                      RecRef.OPEN("Table No.");
                                                                      FieldRef := RecRef.FIELD("Lookup Link From Field No.");
                                                                      VALIDATE("Lookup Link From Field Name",FieldRef.NAME);
                                                                    END;
                                                                  "Lookup Link From Field Type"::"Enhanced Field" :
                                                                    BEGIN
                                                                      EnhFieldDef.GET("Table No.","Lookup Link From Field No.");
                                                                      VALIDATE("Lookup Link From Field Name",EnhFieldDef.Name);
                                                                    END;
                                                                END;
                                                              END;

                                                   OnLookup=VAR
                                                              EnhFieldDef@1000000000 : Record 9062327;
                                                              EnhFieldDefPage@1000000001 : Page 9062391;
                                                            BEGIN
                                                              CASE "Lookup Link From Field Type" OF
                                                                "Lookup Link From Field Type"::Field :
                                                                  BEGIN
                                                                    IF (ObjectFieldToolkit.FieldLookup(Rec."Table No.", Rec."Lookup Link From Field No.")) THEN
                                                                      Rec.VALIDATE("Lookup Link From Field No.");
                                                                  END;
                                                                "Lookup Link From Field Type"::"Enhanced Field" :
                                                                  BEGIN
                                                                    EnhFieldDef.SETRANGE("Table No.","Table No.");
                                                                    EnhFieldDefPage.SETTABLEVIEW(EnhFieldDef);
                                                                    EnhFieldDefPage.LOOKUPMODE := TRUE;
                                                                    IF EnhFieldDefPage.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                                                      EnhFieldDefPage.GETRECORD(EnhFieldDef);
                                                                      VALIDATE("Lookup Link From Field No.",EnhFieldDef."Enhanced Field No.");
                                                                    END;
                                                                  END;
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Lookup Link From Field No.;
                                                              ENG=Lookup Link From Field No.] }
    { 12  ;   ;Lookup Return Field Type;Option    ;CaptionML=[ENU=Lookup Return Field Type;
                                                              ENG=Lookup Return Field Type];
                                                   OptionCaptionML=[ENU=Field,Enhanced Field;
                                                                    ENG=Field,Enhanced Field];
                                                   OptionString=Field,Enhanced Field }
    { 13  ;   ;Lookup Return Field No.;Integer    ;TableRelation=IF (Lookup Return Field Type=CONST(Field)) Field.No. WHERE (TableNo=FIELD(Lookup To Table No.))
                                                                 ELSE IF (Lookup Return Field Type=CONST(Enhanced Field)) "Enhanced Field Definition"."Enhanced Field No." WHERE (Table No.=FIELD(Lookup To Table No.));
                                                   OnLookup=VAR
                                                              EnhFieldDef@1000000001 : Record 9062327;
                                                              EnhFieldDefPage@1000000000 : Page 9062391;
                                                            BEGIN
                                                              CASE "Lookup Return Field Type" OF
                                                                "Lookup Return Field Type"::Field :
                                                                  BEGIN
                                                                    IF (ObjectFieldToolkit.FieldLookup(Rec."Lookup To Table No.", Rec."Lookup Return Field No.")) THEN
                                                                      Rec.VALIDATE("Lookup Return Field No.");
                                                                  END;
                                                                "Lookup Return Field Type"::"Enhanced Field" :
                                                                  BEGIN
                                                                    EnhFieldDef.SETRANGE("Table No.","Lookup To Table No.");
                                                                    EnhFieldDefPage.SETTABLEVIEW(EnhFieldDef);
                                                                    EnhFieldDefPage.LOOKUPMODE := TRUE;
                                                                    IF EnhFieldDefPage.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                                                      EnhFieldDefPage.GETRECORD(EnhFieldDef);
                                                                      VALIDATE("Lookup Return Field No.",EnhFieldDef."Enhanced Field No.");
                                                                    END;
                                                                  END;
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Lookup Return Field No.;
                                                              ENG=Lookup Return Field No.] }
    { 14  ;   ;Code                ;Code20        ;CaptionML=[ENU=Code;
                                                              ENG=Code];
                                                   Description=NA2015.1;
                                                   Editable=No }
    { 15  ;   ;NAV Data Type       ;Option        ;CaptionML=[ENU=NAV Data Type;
                                                              ENG=NAV Data Type];
                                                   OptionCaptionML=[ENU=BLOB,BigInteger,Binary,Boolean,Code,Date,DateFormula,DateTime,Decimal,Duration,GUID,Integer,Option,RecordID,TableFilter,Text,Time;
                                                                    ENG=BLOB,BigInteger,Binary,Boolean,Code,Date,DateFormula,DateTime,Decimal,Duration,GUID,Integer,Option,RecordID,TableFilter,Text,Time];
                                                   OptionString=BLOB,BigInteger,Binary,Boolean,Code,Date,DateFormula,DateTime,Decimal,Duration,GUID,Integer,Option,RecordID,TableFilter,Text,Time;
                                                   Description=NA2015.1 }
    { 16  ;   ;Created By          ;Option        ;OnValidate=VAR
                                                                EnhFieldNumbering@1000000000 : Codeunit 9062234;
                                                                NewNum@1000000001 : Integer;
                                                                EnhField@1000000002 : Record 9062327;
                                                              BEGIN
                                                                IF ("Created By" <> xRec."Created By") AND ("Enhanced Field No." <> 0) THEN BEGIN
                                                                  IF EnhField.GET("Table No.","Enhanced Field No.") THEN
                                                                    RENAME("Table No.",EnhFieldNumbering.GetNextNum_EnhField("Created By","Table No."))
                                                                  ELSE
                                                                    "Enhanced Field No." := EnhFieldNumbering.GetNextNum_EnhField("Created By","Table No.");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Created By;
                                                              ENG=Created By];
                                                   OptionCaptionML=[ENU=System,Customisation,Reseller,DrinkIT,LSRetail,Trimmit;
                                                                    ENG=System,Customisation,Reseller,DrinkIT,LSRetail,Trimmit];
                                                   OptionString=System,Customisation,Reseller,DrinkIT,LSRetail,Trimmit;
                                                   Description=NA2015.1 }
    { 18  ;   ;Get Value from CU No.;Integer      ;TableRelation=Object.ID WHERE (Type=CONST(Codeunit));
                                                   CaptionML=[ENU=Get Value from Codeunit No.;
                                                              ENG=Get Value from Codeunit No.] }
    { 19  ;   ;Get Value from CU Name;Text30      ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObjWithCaption."Object Caption" WHERE (Object Type=CONST(Codeunit),
                                                                                                                Object ID=FIELD(Get Value from CU No.)));
                                                   OnLookup=VAR
                                                              Object@1000000000 : Record 2000000001;
                                                            BEGIN
                                                              IF ObjectFieldToolkit.CodeunitLookup("Get Value from CU No.") THEN BEGIN
                                                                Object.SETRANGE(Type,Object.Type::Codeunit);
                                                                Object.SETRANGE(ID,"Get Value from CU No.");
                                                                IF Object.FINDSET THEN "Get Value from CU Name" := Object.Name;
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Get Value from Codeunit;
                                                              ENG=Get Value from Codeunit];
                                                   Editable=No }
    { 20  ;   ;Show On List        ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Show On List;
                                                              ENG=Show On List] }
    { 21  ;   ;Show On Card        ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Show On Card;
                                                              ENG=Show On Card] }
    { 22  ;   ;Show On Factbox     ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Show On Factbox;
                                                              ENG=Show On Factbox] }
    { 23  ;   ;Show On Fasttab     ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Show On Fasttab;
                                                              ENG=Show On Fasttab] }
    { 24  ;   ;List Sequence No.   ;Integer       ;CaptionML=[ENU=List Sequence No.;
                                                              ENG=List Sequence No.] }
    { 25  ;   ;Card Sequence No.   ;Integer       ;CaptionML=[ENU=Card Sequence No.;
                                                              ENG=Card Sequence No.] }
    { 26  ;   ;Factbox Sequence No.;Integer       ;CaptionML=[ENU=Factbox Sequence No.;
                                                              ENG=Factbox Sequence No.] }
    { 27  ;   ;Fasttab Sequence No.;Integer       ;CaptionML=[ENU=Fasttab Sequence No.;
                                                              ENG=Fasttab Sequence No.] }
    { 30  ;   ;Filter Field No.    ;Integer       ;OnValidate=VAR
                                                                TableNo@1000000002 : Integer;
                                                                RecRef@1000000001 : RecordRef;
                                                                FieldRef@1000000000 : FieldRef;
                                                              BEGIN
                                                                CASE "Source Type" OF
                                                                  "Source Type"::Lookup : TableNo := "Lookup To Table No.";
                                                                  ELSE TableNo := "Table No.";
                                                                END;

                                                                RecRef.OPEN(TableNo);
                                                                FieldRef := RecRef.FIELD("Filter Field No.");
                                                                VALIDATE("Filter Field Name",FieldRef.NAME);
                                                              END;

                                                   OnLookup=VAR
                                                              TableNo@1000000002 : Integer;
                                                            BEGIN
                                                              CASE "Source Type" OF
                                                                "Source Type"::Lookup : TableNo := "Lookup To Table No.";
                                                                ELSE TableNo := "Table No.";
                                                              END;

                                                              IF (ObjectFieldToolkit.FieldLookup(TableNo, "Filter Field No.")) THEN
                                                                Rec.VALIDATE("Filter Field No.");
                                                            END;

                                                   CaptionML=[ENU=Filter Field No.;
                                                              ENG=Filter Field No.] }
    { 31  ;   ;Filter Field Value  ;Text250       ;OnValidate=BEGIN
                                                                "Filter Field Example Value" := SmartFilterManagement.ApplySmartFilters("Filter Field Value");
                                                              END;

                                                   CaptionML=[ENU=Filter Field Value;
                                                              ENG=Filter Field Value] }
    { 32  ;   ;Filter Field Example Value;Text250 ;CaptionML=[ENU=Filter Field Example Value;
                                                              ENG=Filter Field Example Value];
                                                   Editable=No }
    { 40  ;   ;Editable            ;Boolean       ;InitValue=Yes;
                                                   OnValidate=VAR
                                                                ErrEditableNotAllowed@1000000000 : TextConst 'ENU=Fields with the following Source Types must be "Non Editable" - %1;ENG=Fields with the following Source Types must be "Non Editable" - %1';
                                                              BEGIN
                                                                IF Editable THEN BEGIN
                                                                  CASE "Source Type" OF
                                                                    "Source Type"::Calculated, "Source Type"::Concatenate, "Source Type"::"Function","Source Type"::Lookup :
                                                                      ERROR(ErrEditableNotAllowed,
                                                                        FORMAT("Source Type"::Calculated) + ', ' +
                                                                        FORMAT("Source Type"::Concatenate) + ', ' +
                                                                        FORMAT("Source Type"::Lookup) + ', ' +
                                                                        FORMAT("Source Type"::"Function"));
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Editable;
                                                              ENG=Editable];
                                                   Description=NA2015.1 }
    { 50  ;   ;Default Value       ;Text250       ;CaptionML=[ENU=Default Value;
                                                              ENG=Default Value] }
    { 60  ;   ;Visibility Criteria ID;Integer     ;TableRelation=Criteria;
                                                   CaptionML=[ENU=Visibility Criteria ID;
                                                              ENG=Visibility Criteria ID];
                                                   Description=NA2016.12 }
    { 61  ;   ;Visibility Criteria Desc.;Text250  ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Criteria.Description WHERE (ID=FIELD(Visibility Criteria ID)));
                                                   CaptionML=[ENU=Formula Criteria Description;
                                                              ENG=Formula Criteria Description];
                                                   Description=NA2016.12;
                                                   Editable=No }
    { 100 ;   ;Position Text Filter;Text250       ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Position Text Filter;
                                                              ENG=Position Text Filter] }
    { 101 ;   ;Primary Key Value 1 Filter;Text250 ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Primary Key Value 1 Filter;
                                                              ENG=Primary Key Value 1 Filter] }
    { 102 ;   ;Primary Key Value 2 Filter;Text250 ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Primary Key Value 2 Filter;
                                                              ENG=Primary Key Value 2 Filter] }
    { 103 ;   ;Primary Key Value 3 Filter;Text250 ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Primary Key Value 3 Filter;
                                                              ENG=Primary Key Value 3 Filter] }
    { 104 ;   ;Primary Key Value 4 Filter;Text250 ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Primary Key Value 4 Filter;
                                                              ENG=Primary Key Value 4 Filter] }
    { 105 ;   ;Primary Key Value 5 Filter;Text250 ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Primary Key Value 5 Filter;
                                                              ENG=Primary Key Value 5 Filter] }
    { 110 ;   ;Is Factbox          ;Boolean       ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Is Factbox;
                                                              ENG=Is Factbox] }
    { 200 ;   ;Lookup To Table Name;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Object.Name WHERE (Type=CONST(Table),
                                                                                         ID=FIELD(Lookup To Table No.)));
                                                   OnLookup=BEGIN
                                                              IF (ObjectFieldToolkit.TableLookup(Rec."Lookup To Table No.")) THEN
                                                                Rec.VALIDATE("Lookup To Table No.");
                                                            END;

                                                   CaptionML=[ENU=Lookup To Table Name;
                                                              ENG=Lookup To Table Name];
                                                   Editable=No }
    { 201 ;   ;Lookup Link To Field Name;Text100  ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Field.FieldName WHERE (TableNo=FIELD(Lookup To Table No.),
                                                                                             No.=FIELD(Lookup Link To Field No.)));
                                                   CaptionML=[ENU=Lookup Link To Field Name;
                                                              ENG=Lookup Link To Field Name];
                                                   Editable=No }
    { 202 ;   ;Lookup Link From Field Name;Text100;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Field.FieldName WHERE (TableNo=FIELD(Lookup To Table No.),
                                                                                             No.=FIELD(Lookup Link From Field No.)));
                                                   CaptionML=[ENU=Lookup Link From Field Name;
                                                              ENG=Lookup Link From Field Name];
                                                   Editable=No }
    { 203 ;   ;Lookup Return Field Name;Text100   ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Field."Field Caption" WHERE (TableNo=FIELD(Lookup To Table No.),
                                                                                                   No.=FIELD(Lookup Return Field No.)));
                                                   OnLookup=VAR
                                                              EnhFieldDef@1000000001 : Record 9062327;
                                                              EnhFieldDefPage@1000000000 : Page 9062391;
                                                            BEGIN
                                                              CASE "Lookup Return Field Type" OF
                                                                "Lookup Return Field Type"::Field :
                                                                  BEGIN
                                                                    IF (ObjectFieldToolkit.FieldLookup(Rec."Lookup To Table No.", Rec."Lookup Return Field No.")) THEN
                                                                      Rec.VALIDATE("Lookup Return Field No.");
                                                                  END;
                                                                "Lookup Return Field Type"::"Enhanced Field" :
                                                                  BEGIN
                                                                    EnhFieldDef.SETRANGE("Table No.","Lookup To Table No.");
                                                                    EnhFieldDefPage.SETTABLEVIEW(EnhFieldDef);
                                                                    EnhFieldDefPage.LOOKUPMODE := TRUE;
                                                                    IF EnhFieldDefPage.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                                                      EnhFieldDefPage.GETRECORD(EnhFieldDef);
                                                                      VALIDATE("Lookup Return Field No.",EnhFieldDef."Enhanced Field No.");
                                                                    END;
                                                                  END;
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Lookup Return Field Name;
                                                              ENG=Lookup Return Field Name];
                                                   Editable=No }
    { 204 ;   ;Filter Field Name   ;Text100       ;CaptionML=[ENU=Filter Field Name;
                                                              ENG=Filter Field Name];
                                                   Editable=No }
    { 205 ;   ;Lookup To Table Key ;Text250       ;OnValidate=VAR
                                                                eMustUseLookup@1000000000 : TextConst 'ENU=You must choose the Key using the Lookup on this Field;ENG=You must choose the Key using the Lookup on this Field';
                                                              BEGIN
                                                                ERROR(eMustUseLookup);
                                                              END;

                                                   OnLookup=VAR
                                                              RecRef@1000000000 : RecordRef;
                                                              KeyRef@1000000005 : KeyRef;
                                                              FieldRef@1000000007 : FieldRef;
                                                              i@1000000001 : Integer;
                                                              KeysText@1000000002 : Text;
                                                              tMenuInstruction@1000000003 : TextConst 'ENU=Please choose a Key to use to Order the records in the Table;ENG=Please choose a Key to use to Order the records in the Table';
                                                              KeyChoice@1000000004 : Integer;
                                                              j@1000000006 : Integer;
                                                            BEGIN
                                                              IF "Lookup To Table No." = 0 THEN ERROR(eNoLookupTable);

                                                              RecRef.OPEN("Lookup To Table No.");
                                                              i := 1;
                                                              REPEAT
                                                                IF KeysText <> '' THEN KeysText += ',';
                                                                KeyRef := RecRef.KEYINDEX(i);
                                                                j := 1;
                                                                REPEAT
                                                                  FieldRef := KeyRef.FIELDINDEX(j);
                                                                  KeysText += FieldRef.NAME + '; ';
                                                                  j += 1;
                                                                UNTIL j > KeyRef.FIELDCOUNT;
                                                                i += 1;
                                                              UNTIL i > RecRef.KEYCOUNT;

                                                              KeyChoice := STRMENU(KeysText,1,tMenuInstruction);

                                                              IF KeyChoice = 0 THEN KeyChoice := 1;
                                                              KeysText := '';
                                                              KeyRef := RecRef.KEYINDEX(KeyChoice);
                                                              j := 1;
                                                              REPEAT
                                                                FieldRef := KeyRef.FIELDINDEX(j);
                                                                KeysText += FieldRef.NAME + ',';
                                                                j += 1;
                                                              UNTIL j > KeyRef.FIELDCOUNT;

                                                              "Lookup To Table Key" := KeysText;
                                                              "Lookup To Table Key No." := KeyChoice;
                                                            END;

                                                   CaptionML=[ENU=Lookup To Table Key;
                                                              ENG=Lookup To Table Key];
                                                   Description=NA2015.1 }
    { 206 ;   ;Lookup Function     ;Option        ;CaptionML=[ENU=Lookup Function;
                                                              ENG=Lookup Function];
                                                   OptionCaptionML=[ENU=First,Last,Sum,Count,Min,Max;
                                                                    ENG=First,Last,Sum,Count,Min,Max];
                                                   OptionString=First,Last,Sum,Count,Min,Max;
                                                   Description=NA2015.1,NA2015.1 }
    { 207 ;   ;Lookup To Table Key No.;Integer    ;CaptionML=[ENU=Lookup To Table Key No.;
                                                              ENG=Lookup To Table Key No.];
                                                   Description=NA2015.1;
                                                   Editable=No }
    { 300 ;   ;Pick From Type      ;Option        ;CaptionML=[ENU=Pick From Type;
                                                              ENG=Pick From Type];
                                                   OptionCaptionML=[ENU=Field Lookup,Other Table;
                                                                    ENG=Field Lookup,Other Table];
                                                   OptionString=Field Lookup,Other Table }
    { 301 ;   ;Pick From Table No. ;Integer       ;OnLookup=BEGIN
                                                              IF (ObjectFieldToolkit.TableLookup(Rec."Pick From Table No.")) THEN
                                                                Rec.VALIDATE("Pick From Table No.");
                                                            END;

                                                   CaptionML=[ENU=Pick From Table No.;
                                                              ENG=Pick From Table No.] }
    { 302 ;   ;Pick From Field No. ;Integer       ;OnValidate=VAR
                                                                EnhFieldDef@1000000000 : Record 9062327;
                                                                RecRef@1000000001 : RecordRef;
                                                                FieldRef@1000000002 : FieldRef;
                                                              BEGIN
                                                                IF "Pick From Field No." = 0 THEN BEGIN
                                                                  VALIDATE("Pick From Field Name",'');
                                                                  EXIT;
                                                                END;

                                                                CASE "Pick From Field Type" OF
                                                                  "Pick From Field Type"::Field :
                                                                    BEGIN
                                                                      RecRef.OPEN("Pick From Table No.");
                                                                      FieldRef := RecRef.FIELD("Pick From Field No.");
                                                                      VALIDATE("Pick From Field Name",FieldRef.NAME);
                                                                    END;
                                                                  "Pick From Field Type"::"Enhanced Field" :
                                                                    BEGIN
                                                                      EnhFieldDef.GET("Pick From Table No.","Pick From Field No.");
                                                                      VALIDATE("Pick From Field Name",EnhFieldDef.Name);
                                                                    END;
                                                                END;
                                                              END;

                                                   OnLookup=VAR
                                                              EnhFieldDef@1000000001 : Record 9062327;
                                                              EnhFieldDefPage@1000000000 : Page 9062391;
                                                            BEGIN
                                                              CASE "Pick From Field Type" OF
                                                                "Pick From Field Type"::Field :
                                                                  BEGIN
                                                                    IF ObjectFieldToolkit.FieldLookup("Pick From Table No.","Pick From Field No.") THEN
                                                                      Rec.VALIDATE("Pick From Field No.");
                                                                  END;
                                                                "Pick From Field Type"::"Enhanced Field" :
                                                                  BEGIN
                                                                    EnhFieldDef.SETRANGE("Table No.","Pick From Table No.");
                                                                    EnhFieldDefPage.SETTABLEVIEW(EnhFieldDef);
                                                                    EnhFieldDefPage.LOOKUPMODE := TRUE;
                                                                    IF EnhFieldDefPage.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                                                      EnhFieldDefPage.GETRECORD(EnhFieldDef);
                                                                      VALIDATE("Pick From Field No.",EnhFieldDef."Enhanced Field No.");
                                                                    END;
                                                                  END;
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Pick From Field No.;
                                                              ENG=Pick From Field No.] }
    { 303 ;   ;Pick From Table Name;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Object.Name WHERE (Type=CONST(Table),
                                                                                         ID=FIELD(Pick From Table No.)));
                                                   OnLookup=BEGIN
                                                              IF (ObjectFieldToolkit.TableLookup(Rec."Pick From Table No.")) THEN
                                                                Rec.VALIDATE("Pick From Table No.");
                                                            END;

                                                   CaptionML=[ENU=Pick From Table Name;
                                                              ENG=Pick From Table Name];
                                                   Editable=No }
    { 304 ;   ;Pick From Field Name;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Field."Field Caption" WHERE (TableNo=FIELD(Pick From Table No.),
                                                                                                   No.=FIELD(Pick From Field No.)));
                                                   OnLookup=VAR
                                                              EnhFieldDef@1000000001 : Record 9062327;
                                                              EnhFieldDefPage@1000000000 : Page 9062391;
                                                            BEGIN
                                                              CASE "Pick From Field Type" OF
                                                                "Pick From Field Type"::Field :
                                                                  BEGIN
                                                                    IF ObjectFieldToolkit.FieldLookup("Pick From Table No.","Pick From Field No.") THEN
                                                                      Rec.VALIDATE("Pick From Field No.");
                                                                  END;
                                                                "Pick From Field Type"::"Enhanced Field" :
                                                                  BEGIN
                                                                    EnhFieldDef.SETRANGE("Table No.","Pick From Table No.");
                                                                    EnhFieldDefPage.SETTABLEVIEW(EnhFieldDef);
                                                                    EnhFieldDefPage.LOOKUPMODE := TRUE;
                                                                    IF EnhFieldDefPage.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                                                      EnhFieldDefPage.GETRECORD(EnhFieldDef);
                                                                      VALIDATE("Pick From Field No.",EnhFieldDef."Enhanced Field No.");
                                                                    END;
                                                                  END;
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Pick From Field Name;
                                                              ENG=Pick From Field Name];
                                                   Editable=No }
    { 305 ;   ;Pick From Field Type;Option        ;CaptionML=[ENU=Pick From Field Type;
                                                              ENG=Pick From Field Type];
                                                   OptionCaptionML=[ENU=Field,Enhanced Field;
                                                                    ENG=Field,Enhanced Field];
                                                   OptionString=Field,Enhanced Field }
    { 400 ;   ;Above Tolerance Criteria Type;Option;
                                                   CaptionML=[ENU=Above Tolerance Criteria Type;
                                                              ENG=Above Tolerance Criteria Type];
                                                   OptionCaptionML=[ENU=" ,>,>=";
                                                                    ENG=" ,>,>="];
                                                   OptionString=[ ,>,>=] }
    { 401 ;   ;Above Tolerance Criteria Value;Text50;
                                                   CaptionML=[ENU=Above Tolerance Criteria Value;
                                                              ENG=Above Tolerance Criteria Value] }
    { 402 ;   ;Above Tolerance Style;Option       ;CaptionML=[ENU=Above Tolerance Style;
                                                              ENG=Above Tolerance Style];
                                                   OptionCaptionML=[ENU=None,Standard,StandardAccent,Strong,StrongAccent,Attention,AttentionAccent,Favorable,Unfavorable,Ambiguous,Subordinate;
                                                                    ENG=None,Standard,StandardAccent,Strong,StrongAccent,Attention,AttentionAccent,Favorable,Unfavorable,Ambiguous,Subordinate];
                                                   OptionString=None,Standard,StandardAccent,Strong,StrongAccent,Attention,AttentionAccent,Favorable,Unfavorable,Ambiguous,Subordinate }
    { 410 ;   ;Below Tolerance Criteria Type;Option;
                                                   CaptionML=[ENU=Below Tolerance Criteria Type;
                                                              ENG=Below Tolerance Criteria Type];
                                                   OptionCaptionML=[ENU=" ,<,<=";
                                                                    ENG=" ,<,<="];
                                                   OptionString=[ ,<,<=] }
    { 411 ;   ;Below Tolerance Criteria Value;Text50;
                                                   CaptionML=[ENU=Below Tolerance Criteria Value;
                                                              ENG=Below Tolerance Criteria Value] }
    { 412 ;   ;Below Tolerance Style;Option       ;CaptionML=[ENU=Below Tolerance Style;
                                                              ENG=Below Tolerance Style];
                                                   OptionCaptionML=[ENU=None,Standard,StandardAccent,Strong,StrongAccent,Attention,AttentionAccent,Favorable,Unfavorable,Ambiguous,Subordinate;
                                                                    ENG=None,Standard,StandardAccent,Strong,StrongAccent,Attention,AttentionAccent,Favorable,Unfavorable,Ambiguous,Subordinate];
                                                   OptionString=None,Standard,StandardAccent,Strong,StrongAccent,Attention,AttentionAccent,Favorable,Unfavorable,Ambiguous,Subordinate }
    { 420 ;   ;Within Tolerance Style;Option      ;CaptionML=[ENU=Within Tolerance Style;
                                                              ENG=Within Tolerance Style];
                                                   OptionCaptionML=[ENU=None,Standard,StandardAccent,Strong,StrongAccent,Attention,AttentionAccent,Favorable,Unfavorable,Ambiguous,Subordinate;
                                                                    ENG=None,Standard,StandardAccent,Strong,StrongAccent,Attention,AttentionAccent,Favorable,Unfavorable,Ambiguous,Subordinate];
                                                   OptionString=None,Standard,StandardAccent,Strong,StrongAccent,Attention,AttentionAccent,Favorable,Unfavorable,Ambiguous,Subordinate }
    { 421 ;   ;Display Text        ;Text250       ;OnValidate=BEGIN
                                                                //DOC NA2015.7
                                                                IF ("Factbox Display Text" = '') OR ("Factbox Display Text" = xRec."Display Text") THEN
                                                                  "Factbox Display Text" := COPYSTR("Display Text",1,MAXSTRLEN("Factbox Display Text"));
                                                              END;

                                                   CaptionML=[ENU=Display Text;
                                                              ENG=Display Text] }
    { 422 ;   ;Formula Criteria ID ;Integer       ;TableRelation=Criteria;
                                                   CaptionML=[ENU=Formula Criteria ID;
                                                              ENG=Formula Criteria ID] }
    { 423 ;   ;Formula Criteria Description;Text250;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Lookup(Criteria.Description WHERE (ID=FIELD(Formula Criteria ID)));
                                                   CaptionML=[ENU=Formula Criteria Description;
                                                              ENG=Formula Criteria Description];
                                                   Editable=No }
    { 424 ;   ;Factbox Caption     ;Text30        ;CaptionML=[ENU=Factbox Caption;
                                                              ENG=Factbox Caption] }
    { 425 ;   ;Factbox Display Text;Text30        ;CaptionML=[ENU=Factbox Display Text;
                                                              ENG=Factbox Display Text] }
    { 500 ;   ;Enhanced Table No.  ;Integer       ;CaptionML=[ENU=Enhanced Table No.;
                                                              ENG=Enhanced Table No.] }
    { 601 ;   ;Lookup Link From E. Field Name;Text100;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Lookup("Enhanced Field Definition".Name WHERE (Table No.=FIELD(Lookup To Table No.),
                                                                                                              Enhanced Field No.=FIELD(Lookup Link From Field No.)));
                                                   CaptionML=[ENU=Lookup Link From E. Field Name;
                                                              ENG=Lookup Link From E. Field Name];
                                                   Editable=No }
    { 602 ;   ;Lookup Return Enh. Field Name;Text100;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Lookup("Enhanced Field Definition".Name WHERE (Table No.=FIELD(Lookup To Table No.),
                                                                                                              Enhanced Field No.=FIELD(Lookup Return Field No.)));
                                                   OnLookup=VAR
                                                              EnhFieldDef@1000000001 : Record 9062327;
                                                              EnhFieldDefPage@1000000000 : Page 9062391;
                                                            BEGIN
                                                              CASE "Lookup Return Field Type" OF
                                                                "Lookup Return Field Type"::Field :
                                                                  BEGIN
                                                                    IF (ObjectFieldToolkit.FieldLookup(Rec."Lookup To Table No.", Rec."Lookup Return Field No.")) THEN
                                                                      Rec.VALIDATE("Lookup Return Field No.");
                                                                  END;
                                                                "Lookup Return Field Type"::"Enhanced Field" :
                                                                  BEGIN
                                                                    EnhFieldDef.SETRANGE("Table No.","Lookup To Table No.");
                                                                    EnhFieldDefPage.SETTABLEVIEW(EnhFieldDef);
                                                                    EnhFieldDefPage.LOOKUPMODE := TRUE;
                                                                    IF EnhFieldDefPage.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                                                      EnhFieldDefPage.GETRECORD(EnhFieldDef);
                                                                      VALIDATE("Lookup Return Field No.",EnhFieldDef."Enhanced Field No.");
                                                                    END;
                                                                  END;
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Lookup Return Enh. Field Name;
                                                              ENG=Lookup Return Enh. Field Name];
                                                   Editable=No }
    { 603 ;   ;Pick From Enh. Field Name;Text100  ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Enhanced Field Definition".Name WHERE (Table No.=FIELD(Lookup To Table No.),
                                                                                                              Enhanced Field No.=FIELD(Pick From Field No.)));
                                                   OnLookup=VAR
                                                              EnhFieldDef@1000000001 : Record 9062327;
                                                              EnhFieldDefPage@1000000000 : Page 9062391;
                                                            BEGIN
                                                              CASE "Pick From Field Type" OF
                                                                "Pick From Field Type"::Field :
                                                                  BEGIN
                                                                    IF ObjectFieldToolkit.FieldLookup("Pick From Table No.","Pick From Field No.") THEN
                                                                      Rec.VALIDATE("Pick From Field No.");
                                                                  END;
                                                                "Pick From Field Type"::"Enhanced Field" :
                                                                  BEGIN
                                                                    EnhFieldDef.SETRANGE("Table No.","Pick From Table No.");
                                                                    EnhFieldDefPage.SETTABLEVIEW(EnhFieldDef);
                                                                    EnhFieldDefPage.LOOKUPMODE := TRUE;
                                                                    IF EnhFieldDefPage.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                                                      EnhFieldDefPage.GETRECORD(EnhFieldDef);
                                                                      VALIDATE("Pick From Field No.",EnhFieldDef."Enhanced Field No.");
                                                                    END;
                                                                  END;
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Pick From Enh. Field Name;
                                                              ENG=Pick From Enh. Field Name];
                                                   Editable=No }
    { 610 ;   ;Enhanced Field Group Code;Code20   ;TableRelation="General Lookup".Code WHERE (Type=CONST(ENH FIELD GROUP));
                                                   CaptionML=[ENU=Enhanced Field Group Code;
                                                              ENG=Enhanced Field Group Code] }
    { 640 ;   ;Assist Codeunit ID  ;Integer       ;TableRelation=AllObj."Object ID" WHERE (Object Type=CONST(Codeunit));
                                                   OnValidate=BEGIN
                                                                Rec.CALCFIELDS("Assist Codeunit Name");
                                                              END;

                                                   CaptionML=[ENU=Assist Codeunit ID;
                                                              ENG=Assist Codeunit ID] }
    { 641 ;   ;Assist Codeunit Name;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObj."Object Name" WHERE (Object Type=CONST(Codeunit),
                                                                                                  Object ID=FIELD(Assist Codeunit ID)));
                                                   CaptionML=[ENU=Assist Codeunit Name;
                                                              ENG=Assist Codeunit Name];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Table No.,Enhanced Field No.            ;Clustered=Yes }
    {    ;Table No.,List Sequence No.,Enhanced Field No. }
    {    ;Table No.,Card Sequence No.,Enhanced Field No. }
    {    ;Table No.,Factbox Sequence No.,Enhanced Field No. }
    {    ;Table No.,Fasttab Sequence No.,Enhanced Field No. }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      eCalculatedType@1000000000 : TextConst 'ENU=Sorry, you can only set the Type of Calculated fields to Decimal;ENG=Sorry, you can only set the Type of Calculated fields to Decimal';
      CriteriaManagement@9062230 : Codeunit 9062462;
      ObjectFieldToolkit@9062229 : Codeunit 9062343;
      PlanningTools@1000000001 : Codeunit 9062230;
      SmartFilterManagement@1000000010 : Codeunit 9062231;
      TNPUtils@1000000002 : Codeunit 9062229;
      eNoLookupTable@1000000003 : TextConst 'ENU=You must specify a "Lookup To" table;ENG=You must specify a "Lookup To" table';
      ImageDisplayText@1000000004 : TextConst 'ENU=Click here to view or change the image!;ENG=Click here to view or change the image!';
      DocumentDisplaytext@1000000005 : TextConst 'ENU="Click here to open the document! ";ENG="Click here to open the document! "';
      LinkDisplayText@1000000006 : TextConst 'ENU=Click here to open the Link!;ENG=Click here to open the Link!';
      FBImageDisplayText@1000000009 : TextConst 'ENU=Click here ...;ENG=Click here ...';
      FBDocumentDisplaytext@1000000008 : TextConst 'ENU=Click here ...;ENG=Click here ...';
      FBLinkDisplayText@1000000007 : TextConst 'ENU=Click here ...;ENG=Click here ...';

    PROCEDURE GetNAVDataType@1000000002(VAR NAVDataType@1000000000 : 'BLOB,BigInteger,Binary,Boolean,Code,Date,DateFormula,DateTime,Decimal,Duration,GUID,Integer,Option,RecordID,TableFilter,Text,Time');
    BEGIN
      //DOC NA2015.1
      CASE Type OF
        Type::Text : NAVDataType := NAVDataType::Text;
        Type::Code : NAVDataType := NAVDataType::Code;
        Type::Integer : NAVDataType := NAVDataType::Integer;
        Type::Decimal : NAVDataType := NAVDataType::Decimal;
        Type::Date : NAVDataType := NAVDataType::Date;
        Type::Time : NAVDataType := NAVDataType::Time;
      END;
    END;

    PROCEDURE GetPageFlags@1000000003(VAR IsCalc@1000000000 : Boolean;VAR IsLookup@1000000001 : Boolean;VAR IsPickFrom@1000000002 : Boolean;VAR IsPickFromOther@1000000003 : Boolean;VAR IsCodeunit@1000000005 : Boolean;VAR HasFilters@1000000004 : Boolean;VAR isUserSetValue@1000000006 : Boolean);
    BEGIN
      //DOC NA2015.2 - Returning flags for enhanced field definition pages
      //  <> IsCalc: Target "Is Calculated" flag
      //  <> IsLookup: Target "Is Lookup" flag
      //  <> IsPickFrom: Target "Is PIck From" flag
      //  <> IsPickFromOther: Target "Is Pick From Other" flag
      //  <> HasFilters: Target "Has Filters" flag
      //  <> IsUserSetValue: Is a field which users input data into

      CASE "Source Type" OF
        "Source Type"::" " :
          BEGIN
            IsCalc := FALSE;
            IsLookup := FALSE;
            IsPickFrom := FALSE;
            IsPickFromOther := FALSE;
            IsCodeunit := FALSE;
            HasFilters := FALSE;
            isUserSetValue := TRUE;
          END;
        "Source Type"::Calculated :
          BEGIN
            IsCalc := TRUE;
            IsLookup := FALSE;
            IsPickFrom := FALSE;
            IsPickFromOther := FALSE;
            IsCodeunit := FALSE;
            HasFilters := TRUE;
            isUserSetValue := TRUE;
          END;
        "Source Type"::Lookup :
          BEGIN
            IsCalc := FALSE;
            IsLookup := TRUE;
            IsPickFrom := FALSE;
            IsPickFromOther := FALSE;
            IsCodeunit := FALSE;
            HasFilters := FALSE;
            isUserSetValue := TRUE;
          END;
        "Source Type"::Concatenate :
          BEGIN
            IsCalc := TRUE;
            IsLookup := FALSE;
            IsPickFrom := FALSE;
            IsPickFromOther := FALSE;
            IsCodeunit := FALSE;
            HasFilters := FALSE;
            isUserSetValue := TRUE;
          END;
        "Source Type"::"Pick From List" :
          BEGIN
            IsCalc := FALSE;
            IsLookup := FALSE;
            IsPickFrom := TRUE;
            IsPickFromOther := ("Pick From Type" = "Pick From Type"::"Other Table");
            IsCodeunit := FALSE;
            HasFilters := FALSE;
            isUserSetValue := TRUE;
          END;
        "Source Type"::"Function" :
          BEGIN
            IsCalc := TRUE;
            IsLookup := FALSE;
            IsPickFrom := FALSE;
            IsPickFromOther := FALSE;
            IsCodeunit := FALSE;
            HasFilters := FALSE;
            isUserSetValue := TRUE;
          END;
        "Source Type"::Codeunit :
          BEGIN
            IsCalc := FALSE;
            IsLookup := FALSE;
            IsPickFrom := FALSE;
            IsPickFromOther := FALSE;
            IsCodeunit := TRUE;
            HasFilters := FALSE;
            isUserSetValue := TRUE;
          END;
      END;
    END;

    PROCEDURE PopulateLookupList@1000000004();
    VAR
      FieldLookup@1000000003 : Record 9062312;
      FieldLookup2@1000000002 : Record 9062312;
      RecRef@1000000001 : RecordRef;
      EnhFieldMgt@1000000000 : Codeunit 9062298;
    BEGIN
      IF "Source Type" = "Source Type"::"Pick From List" THEN BEGIN

        CASE "Pick From Type" OF
          "Pick From Type"::"Other Table" :
            BEGIN
              FieldLookup.SETRANGE("Table ID","Table No.");
              FieldLookup.SETRANGE("Field Type",FieldLookup."Field Type"::"Enhanced Field");
              FieldLookup.SETRANGE("Field No.","Enhanced Field No.");
              IF FieldLookup.FINDSET THEN FieldLookup.DELETEALL;

              RecRef.OPEN("Pick From Table No.");
              IF RecRef.FINDSET THEN BEGIN
                REPEAT
                  CLEAR(FieldLookup);

                  FieldLookup.INIT;
                  FieldLookup.VALIDATE("Table ID","Table No.");
                  FieldLookup.VALIDATE("Field Type",FieldLookup."Field Type"::"Enhanced Field");
                  FieldLookup.VALIDATE("Field No.","Enhanced Field No.");
                  FieldLookup.VALIDATE(Code,COPYSTR(EnhFieldMgt.GetFieldValue(RecRef,"Pick From Field Name"),1,MAXSTRLEN(FieldLookup.Code)));
                  FieldLookup.VALIDATE(Description,TNPUtils.GetRecordDescription(RecRef.NUMBER,RecRef.GETPOSITION));

                  FieldLookup2.RESET;
                  FieldLookup2.SETRANGE("Table ID",FieldLookup."Table ID");
                  FieldLookup2.SETRANGE("Field Type",FieldLookup."Field Type");
                  FieldLookup2.SETRANGE("Field No.",FieldLookup."Field No.");
                  FieldLookup2.SETRANGE(Code,FieldLookup.Code);
                  IF NOT FieldLookup2.FINDFIRST THEN FieldLookup.INSERT(TRUE);
                UNTIL RecRef.NEXT = 0;
              END;
              COMMIT;
            END;
        END;
      END;
    END;

    LOCAL PROCEDURE CreateBooleanDefaultValues@1000000005();
    VAR
      FieldLookup@1000000000 : Record 9062312;
    BEGIN
      IF (NOT FieldLookup.GET("Table No.",FieldLookup."Field Type"::"Enhanced Field","Enhanced Field No.",'')) THEN BEGIN
        FieldLookup.INIT;
        FieldLookup.VALIDATE("Table ID","Table No.");
        FieldLookup.VALIDATE("Field Type",FieldLookup."Field Type"::"Enhanced Field");
        FieldLookup.VALIDATE("Field No.","Enhanced Field No.");
        FieldLookup.VALIDATE(Code,'');
        FieldLookup.VALIDATE(Description,'N/A');
        FieldLookup.INSERT(TRUE);
      END;

      IF (NOT FieldLookup.GET("Table No.",FieldLookup."Field Type"::"Enhanced Field","Enhanced Field No.",'NO')) THEN BEGIN
        FieldLookup.INIT;
        FieldLookup.VALIDATE("Table ID","Table No.");
        FieldLookup.VALIDATE("Field Type",FieldLookup."Field Type"::"Enhanced Field");
        FieldLookup.VALIDATE("Field No.","Enhanced Field No.");
        FieldLookup.VALIDATE(Code,'NO');
        FieldLookup.INSERT(TRUE);
      END;

      IF (NOT FieldLookup.GET("Table No.",FieldLookup."Field Type"::"Enhanced Field","Enhanced Field No.",'YES')) THEN BEGIN
        FieldLookup.INIT;
        FieldLookup.VALIDATE("Table ID","Table No.");
        FieldLookup.VALIDATE("Field Type",FieldLookup."Field Type"::"Enhanced Field");
        FieldLookup.VALIDATE("Field No.","Enhanced Field No.");
        FieldLookup.VALIDATE(Code,'YES');
        FieldLookup.INSERT(TRUE);
      END;

      VALIDATE("Default Value",'');
    END;

    PROCEDURE EditCriteria@1000000006();
    BEGIN
      CriteriaManagement.EditCriteriaAttachedAdvanced(Rec."Formula Criteria ID", Rec."Table No.", 0,
        DATABASE::"Enhanced Field Definition", Rec.GETPOSITION(FALSE), Rec.FIELDNO("Formula Criteria ID"), FALSE);
      Rec.CALCFIELDS("Formula Criteria Description");
    END;

    PROCEDURE EditVisibilityCriteria@1000000001();
    BEGIN
      //DOC NA2016.12
      CriteriaManagement.EditCriteriaAttachedAdvanced(Rec."Visibility Criteria ID", Rec."Table No.", 0,
        DATABASE::"Enhanced Field Definition", Rec.GETPOSITION(FALSE), Rec.FIELDNO("Visibility Criteria ID"), FALSE);
      Rec.CALCFIELDS("Visibility Criteria Desc.");
    END;

    PROCEDURE GetLookupLinkFromFieldName@9062234() : Text;
    BEGIN
      IF (Rec."Lookup Link From Field Type" = Rec."Lookup Link From Field Type"::"Enhanced Field") THEN
      BEGIN
        Rec.CALCFIELDS("Lookup Link From E. Field Name");
        EXIT(Rec."Lookup Link From E. Field Name");
      END
      ELSE
      BEGIN
        Rec.CALCFIELDS("Lookup Link From Field Name");
        EXIT(Rec."Lookup Link From Field Name");
      END;
    END;

    PROCEDURE GetLookupReturnFieldName@9062235() : Text;
    BEGIN
      IF (Rec."Lookup Return Field Type" = Rec."Lookup Return Field Type"::"Enhanced Field") THEN
      BEGIN
        Rec.CALCFIELDS("Lookup Return Enh. Field Name");
        EXIT(Rec."Lookup Return Enh. Field Name");
      END
      ELSE
      BEGIN
        Rec.CALCFIELDS("Lookup Return Field Name");
        EXIT(Rec."Lookup Return Field Name");
      END;
    END;

    PROCEDURE GetPickFromFieldName@9062236() : Text;
    BEGIN
      IF (Rec."Pick From Field Type" = Rec."Pick From Field Type"::"Enhanced Field") THEN
      BEGIN
        Rec.CALCFIELDS("Pick From Enh. Field Name");
        EXIT(Rec."Pick From Enh. Field Name");
      END
      ELSE
      BEGIN
        Rec.CALCFIELDS("Pick From Field Name");
        EXIT(Rec."Pick From Field Name");
      END;
    END;

    PROCEDURE GetPageCaption@9062229() : Text;
    VAR
      lPageCaption@9062229 : Text;
      eEmptyField@9062230 : TextConst 'ENU=(Empty Field);ENG=(Empty Field)';
    BEGIN
      IF (Rec."Table No." <> 0) THEN
      BEGIN
        Rec.CALCFIELDS("Table Name");
        lPageCaption := Rec."Table Name";
      END;
      IF (Rec.Name <> '') THEN
      BEGIN
        IF (lPageCaption <> '') THEN
          lPageCaption := lPageCaption + ' - ';
        lPageCaption := lPageCaption + Rec.Name;
      END;
      IF (lPageCaption = '') THEN
        lPageCaption := eEmptyField;
      EXIT(lPageCaption);
    END;

    PROCEDURE FieldVisible@1000000000(RecordPosition@1000000000 : Text) : Boolean;
    BEGIN
      //DOC NA2016.12
      IF ("Visibility Criteria ID" = 0) THEN
        EXIT(TRUE);

      EXIT(CriteriaManagement.RecordInFilter("Visibility Criteria ID", "Table No.", RecordPosition));
    END;

    BEGIN
    {
      //DOC NA2015.1  PC 01/03/2013 - Created
      //DOC NA2015.1  PC 24/07/2013 - Change to accomodate "Type" in Dataset Primary Key
      //DOC NA2015.1  PC 13/08/2013 - Added "Code" field and set on Insert and Rename
      //DOC NA2015.1  PC 13/08/2013 - Added functions "DeleteRelatedDataset" and "CreateRelatedDataset"
      //DOC NA2015.1  PC 13/08/2013 - Call functions from OnInsert, OnDelete, OnRename
      //DOC NA2015.1  PC 15/08/2013 - Added "Created By" field
      //DOC NA2015.1  PC 15/08/2013 - Changed OnInsert to set Field No. using "Enhanced Field Numbering" codeunit
      //DOC NA2015.2  JH 13/05/2014 - "GetPageFlags" code moved from enhanced field definition page
      //DOC NA2015.4  PC 22/10/2014 - Added "Default Value" functionality
      //DOC NA2015.4  JH 10/02/2015 - Formula 250 characters
      //DOC NA2015.7  AP 26/05/2015 - Added "Browse For File" as option for the "Source Type" field
      //DOC NA2015.7  AP 26/05/2015 - Added "Boolean,Extended Text,Document,Image,Link" as options for the "Type" field
      //DOC NA2015.7  AP 26/05/2015 - Added "Display Text" field
      //DOC NA2015.8  JH 13/07/2015 - Versions sorted
      //DOC NA2016.10 JH 27/08/2015 - Upgraded to 2016
      //DOC NA2016.10 AZ 07/09/2015 - Datasets removed
      //DOC NA2016.10 JH 02/10/2015 - Criteria introduced
      //DOC NA2016.12 AZ 08/12/2015 - Criteria modifications, visibility based on criteria
      //DOC NA2016.12 JH 27/12/2015 - Criteria references changed
      //DOC NA2016.12 JH 28/01/2016 - Smart filters
      //DOC NA2016.14 JH 19/02/2016 - Lookup & DrillDown pages added
      //DOC NA2016.15 JH 15/04/2016 - CfMD amendments
    }
    END.
  }
}

