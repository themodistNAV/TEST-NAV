OBJECT Report 901 Copy Assembly Document
{
  OBJECT-PROPERTIES
  {
    Date=07/09/12;
    Time=12:00:00 PM;
    Version List=NAVW17.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Copy Assembly Document;
               ENG=Copy Assembly Document];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  CASE DocType OF
                    DocType::Quote,
                    DocType::Order,
                    DocType::"Blanket Order":
                      BEGIN
                        FromAsmHeader.GET(DocType,DocNo);
                        CopyDocMgt.CopyAsmHeaderToAsmHeader(FromAsmHeader,ToAsmHeader,IncludeHeader);
                      END;
                    DocType::"Posted Order":
                      BEGIN
                        FromPostedAsmHeader.GET(DocNo);
                        CopyDocMgt.CopyPostedAsmHeaderToAsmHeader(FromPostedAsmHeader,ToAsmHeader,IncludeHeader);
                      END;
                  END;
                END;

  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   IF DocNo <> '' THEN
                     CASE DocType OF
                       DocType::Quote:
                         IF FromAsmHeader.GET(FromAsmHeader."Document Type"::Quote,DocNo) THEN;
                       DocType::"Blanket Order":
                         IF FromAsmHeader.GET(FromAsmHeader."Document Type"::"Blanket Order",DocNo) THEN;
                       DocType::Order:
                         IF FromAsmHeader.GET(FromAsmHeader."Document Type"::Order,DocNo) THEN;
                       DocType::"Posted Order":
                         IF FromPostedAsmHeader.GET(DocNo) THEN;
                     END;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ENG=Options] }

      { 3   ;2   ;Field     ;
                  CaptionML=[ENU=Document Type;
                             ENG=Document Type];
                  OptionCaptionML=[ENU=Quote,Order,,,Blanket Order,Posted Order;
                                   ENG=Quote,Order,,,Blanket Order,Posted Order];
                  SourceExpr=DocType;
                  OnValidate=BEGIN
                               DocNo := '';
                             END;
                              }

      { 8   ;2   ;Field     ;
                  CaptionML=[ENU=Document No.;
                             ENG=Document No.];
                  SourceExpr=DocNo;
                  OnLookup=BEGIN
                             LookupDocNo;
                           END;
                            }

      { 1   ;2   ;Field     ;
                  CaptionML=[ENU=Include Header;
                             ENG=Include Header];
                  SourceExpr=IncludeHeader }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      FromAsmHeader@1003 : Record 900;
      FromPostedAsmHeader@1005 : Record 910;
      ToAsmHeader@1006 : Record 900;
      CopyDocMgt@1008 : Codeunit 6620;
      DocType@1026 : 'Quote,Order,,,Blanket Order,Posted Order';
      DocNo@1027 : Code[20];
      IncludeHeader@1007 : Boolean;

    LOCAL PROCEDURE LookupDocNo@3();
    BEGIN
      CASE DocType OF
        DocType::Quote,
        DocType::Order,
        DocType::"Blanket Order":
          BEGIN
            FromAsmHeader.RESET;
            FromAsmHeader.SETRANGE("Document Type",DocType);
            IF DocType = ToAsmHeader."Document Type" THEN
              FromAsmHeader.SETFILTER("No.",'<>%1',ToAsmHeader."No.");
            IF PAGE.RUNMODAL(PAGE::"Assembly List",FromAsmHeader) = ACTION::LookupOK THEN
              DocNo := FromAsmHeader."No.";
          END;
        DocType::"Posted Order":
          IF PAGE.RUNMODAL(0,FromPostedAsmHeader) = ACTION::LookupOK THEN
            DocNo := FromPostedAsmHeader."No.";
      END;
    END;

    PROCEDURE SetAssemblyHeader@1(AsmHeader@1000 : Record 900);
    BEGIN
      AsmHeader.TESTFIELD("No.");
      ToAsmHeader := AsmHeader;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

