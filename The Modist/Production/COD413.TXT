OBJECT Codeunit 413 AnalysisViewEntryToGLEntries
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00,NAVGB9.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      AnalysisView@1000 : Record 363;
      GLSetup@1001 : Record 98;
      DimSetEntry@1002 : Record 480;

    PROCEDURE GetGLEntries@1(VAR AnalysisViewEntry@1000 : Record 365;VAR TempGLEntry@1001 : Record 17);
    VAR
      GLEntry@1002 : Record 17;
      AnalysisViewFilter@1004 : Record 364;
      UpdateAnalysisView@1014 : Codeunit 410;
      StartDate@1007 : Date;
      EndDate@1008 : Date;
      GlobalDimValue@1009 : Code[20];
      MinEntryNo@1010 : Integer;
      MaxEntryNo@1011 : Integer;
      IncludeBlanks@1012 : Boolean;
    BEGIN
      AnalysisView.GET(AnalysisViewEntry."Analysis View Code");

      IF AnalysisView."Date Compression" = AnalysisView."Date Compression"::None THEN BEGIN
        IF GLEntry.GET(AnalysisViewEntry."Entry No.") THEN BEGIN
          TempGLEntry := GLEntry;
          TempGLEntry.INSERT;
        END;
        EXIT;
      END;

      GLSetup.GET;

      StartDate := AnalysisViewEntry."Posting Date";
      EndDate := StartDate;

      WITH AnalysisView DO
        IF StartDate < "Starting Date" THEN
          StartDate := 0D
        ELSE
          IF (AnalysisViewEntry."Posting Date" = NORMALDATE(AnalysisViewEntry."Posting Date")) AND
             NOT ("Date Compression" IN ["Date Compression"::None,"Date Compression"::Day])
          THEN
            EndDate := CalculateEndDate("Date Compression",AnalysisViewEntry);

      WITH GLEntry DO BEGIN
        SETCURRENTKEY("G/L Account No.","Posting Date");
        SETRANGE("G/L Account No.",AnalysisViewEntry."Account No.");
        SETRANGE("Posting Date",StartDate,EndDate);
        SETRANGE("Entry No.",0,AnalysisView."Last Entry No.");

        IF GetGlobalDimValue(GLSetup."Global Dimension 1 Code",AnalysisViewEntry,GlobalDimValue) THEN
          SETRANGE("Global Dimension 1 Code",GlobalDimValue)
        ELSE
          IF AnalysisViewFilter.GET(AnalysisViewEntry."Analysis View Code",GLSetup."Global Dimension 1 Code")
          THEN
            SETFILTER("Global Dimension 1 Code",AnalysisViewFilter."Dimension Value Filter");

        IF GetGlobalDimValue(GLSetup."Global Dimension 2 Code",AnalysisViewEntry,GlobalDimValue) THEN
          SETRANGE("Global Dimension 2 Code",GlobalDimValue)
        ELSE
          IF AnalysisViewFilter.GET(AnalysisViewEntry."Analysis View Code",GLSetup."Global Dimension 2 Code")
          THEN
            SETFILTER("Global Dimension 2 Code",AnalysisViewFilter."Dimension Value Filter");

        IF FIND('-') THEN
          REPEAT
            IF DimEntryOK("Dimension Set ID",AnalysisView."Dimension 1 Code",AnalysisViewEntry."Dimension 1 Value Code") AND
               DimEntryOK("Dimension Set ID",AnalysisView."Dimension 2 Code",AnalysisViewEntry."Dimension 2 Value Code") AND
               DimEntryOK("Dimension Set ID",AnalysisView."Dimension 3 Code",AnalysisViewEntry."Dimension 3 Value Code") AND
               DimEntryOK("Dimension Set ID",AnalysisView."Dimension 4 Code",AnalysisViewEntry."Dimension 4 Value Code") AND
               UpdateAnalysisView.DimSetIDInFilter("Dimension Set ID",AnalysisView)
            THEN BEGIN
              TempGLEntry := GLEntry;
              IF TempGLEntry.INSERT THEN;
            END;
          UNTIL NEXT = 0;
      END;
    END;

    PROCEDURE GetCFLedgEntries@3(VAR AnalysisViewEntry@1000 : Record 365;VAR CFForecastEntry@1001 : Record 847);
    VAR
      CFForecastEntry2@1002 : Record 847;
      AnalysisViewFilter@1004 : Record 364;
      UpdateAnalysisView@1014 : Codeunit 410;
      StartDate@1007 : Date;
      EndDate@1008 : Date;
      GlobalDimValue@1009 : Code[20];
    BEGIN
      AnalysisView.GET(AnalysisViewEntry."Analysis View Code");

      IF AnalysisView."Date Compression" = AnalysisView."Date Compression"::None THEN BEGIN
        IF CFForecastEntry2.GET(AnalysisViewEntry."Entry No.") THEN BEGIN
          CFForecastEntry := CFForecastEntry2;
          CFForecastEntry.INSERT;
        END;
        EXIT;
      END;

      GLSetup.GET;

      StartDate := AnalysisViewEntry."Posting Date";
      EndDate := StartDate;

      WITH AnalysisView DO
        IF StartDate < "Starting Date" THEN
          StartDate := 0D
        ELSE
          IF (AnalysisViewEntry."Posting Date" = NORMALDATE(AnalysisViewEntry."Posting Date")) AND
             NOT ("Date Compression" IN ["Date Compression"::None,"Date Compression"::Day])
          THEN
            EndDate := CalculateEndDate("Date Compression",AnalysisViewEntry);

      WITH CFForecastEntry2 DO BEGIN
        SETCURRENTKEY("Cash Flow Forecast No.","Cash Flow Account No.","Source Type","Cash Flow Date");
        SETRANGE("Cash Flow Forecast No.",AnalysisViewEntry."Cash Flow Forecast No.");
        SETRANGE("Cash Flow Account No.",AnalysisViewEntry."Account No.");
        SETRANGE("Cash Flow Date",StartDate,EndDate);

        IF GetGlobalDimValue(GLSetup."Global Dimension 1 Code",AnalysisViewEntry,GlobalDimValue) THEN
          SETRANGE("Global Dimension 1 Code",GlobalDimValue)
        ELSE
          IF AnalysisViewFilter.GET(AnalysisViewEntry."Analysis View Code",GLSetup."Global Dimension 1 Code")
          THEN
            SETFILTER("Global Dimension 1 Code",AnalysisViewFilter."Dimension Value Filter");

        IF GetGlobalDimValue(GLSetup."Global Dimension 2 Code",AnalysisViewEntry,GlobalDimValue) THEN
          SETRANGE("Global Dimension 2 Code",GlobalDimValue)
        ELSE
          IF AnalysisViewFilter.GET(AnalysisViewEntry."Analysis View Code",GLSetup."Global Dimension 2 Code")
          THEN
            SETFILTER("Global Dimension 2 Code",AnalysisViewFilter."Dimension Value Filter");

        IF FIND('-') THEN
          REPEAT
            IF DimEntryOK("Dimension Set ID",AnalysisView."Dimension 1 Code",AnalysisViewEntry."Dimension 1 Value Code") AND
               DimEntryOK("Dimension Set ID",AnalysisView."Dimension 2 Code",AnalysisViewEntry."Dimension 2 Value Code") AND
               DimEntryOK("Dimension Set ID",AnalysisView."Dimension 3 Code",AnalysisViewEntry."Dimension 3 Value Code") AND
               DimEntryOK("Dimension Set ID",AnalysisView."Dimension 4 Code",AnalysisViewEntry."Dimension 4 Value Code") AND
               UpdateAnalysisView.DimSetIDInFilter("Dimension Set ID",AnalysisView)
            THEN BEGIN
              CFForecastEntry := CFForecastEntry2;
              CFForecastEntry.INSERT;
            END;
          UNTIL NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE DimEntryOK@10(DimSetID@1000 : Integer;Dim@1001 : Code[20];DimValue@1002 : Code[20]) : Boolean;
    BEGIN
      IF Dim = '' THEN
        EXIT(TRUE);

      IF DimSetEntry.GET(DimSetID,Dim) THEN
        EXIT(DimSetEntry."Dimension Value Code" = DimValue);

      EXIT(DimValue = '');
    END;

    LOCAL PROCEDURE CalculateEndDate@4(DateCompression@1000 : Integer;AnalysisViewEntry@1002 : Record 365) : Date;
    VAR
      AnalysisView2@1001 : Record 363;
    BEGIN
      CASE DateCompression OF
        AnalysisView2."Date Compression"::Week:
          EXIT(CALCDATE('<+6D>',AnalysisViewEntry."Posting Date"));
        AnalysisView2."Date Compression"::Month:
          EXIT(CALCDATE('<+1M-1D>',AnalysisViewEntry."Posting Date"));
        AnalysisView2."Date Compression"::Quarter:
          EXIT(CALCDATE('<+3M-1D>',AnalysisViewEntry."Posting Date"));
        AnalysisView2."Date Compression"::Year:
          EXIT(CALCDATE('<+1Y-1D>',AnalysisViewEntry."Posting Date"));
      END;
    END;

    LOCAL PROCEDURE GetGlobalDimValue@2(GlobalDim@1000 : Code[20];VAR AnalysisViewEntry@1001 : Record 365;VAR GlobalDimValue@1002 : Code[20]) : Boolean;
    VAR
      IsGlobalDim@1003 : Boolean;
    BEGIN
      CASE GlobalDim OF
        AnalysisView."Dimension 1 Code":
          BEGIN
            IsGlobalDim := TRUE;
            GlobalDimValue := AnalysisViewEntry."Dimension 1 Value Code";
          END;
        AnalysisView."Dimension 2 Code":
          BEGIN
            IsGlobalDim := TRUE;
            GlobalDimValue := AnalysisViewEntry."Dimension 2 Value Code";
          END;
        AnalysisView."Dimension 3 Code":
          BEGIN
            IsGlobalDim := TRUE;
            GlobalDimValue := AnalysisViewEntry."Dimension 3 Value Code";
          END;
        AnalysisView."Dimension 4 Code":
          BEGIN
            IsGlobalDim := TRUE;
            GlobalDimValue := AnalysisViewEntry."Dimension 4 Value Code";
          END;
      END;
      EXIT(IsGlobalDim);
    END;

    BEGIN
    END.
  }
}

