OBJECT Table 9062444 Panel Property Value
{
  OBJECT-PROPERTIES
  {
    Date=10/05/16;
    Time=12:00:00 PM;
    Version List=NA2016.15;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               Rec.TESTFIELD("Parent Table ID");
               Rec.TESTFIELD("Parent Code");
               Rec.TESTFIELD("Panel Property ID");
               CheckModifyPermission();
               IF (Rec.ID = 0) THEN
                 Rec.VALIDATE(ID, NewId());
               IF (PanelToolkit.PanelTable(Rec."Parent Table ID")) THEN
                 PanelTimestampToolkit.Add(Rec."Parent Code");
               TnpToolkit.UpdateCreatedBy(Rec."Created By", Rec."Created Date Time");
             END;

    OnModify=BEGIN
               CheckModifyPermission();
               IF (PanelToolkit.PanelTable(Rec."Parent Table ID")) THEN
                 PanelTimestampToolkit.Add(Rec."Parent Code");
               TnpToolkit.UpdateModifiedBy(Rec."Modified By", Rec."Modified Date Time");
             END;

    OnDelete=BEGIN
               CheckModifyPermission();
               IF (PanelToolkit.PanelTable(Rec."Parent Table ID")) THEN
                 PanelTimestampToolkit.Add(Rec."Parent Code");
             END;

    OnRename=BEGIN
               CheckModifyPermission();
             END;

    CaptionML=[ENU=Panel Property Value;
               ENG=Panel Property Value];
    LookupPageID=Page9062583;
    DrillDownPageID=Page9062583;
  }
  FIELDS
  {
    { 1   ;   ;Parent Table ID     ;Integer       ;TableRelation=AllObj."Object ID" WHERE (Object Type=CONST(Table));
                                                   CaptionML=[ENU=Parent Table ID;
                                                              ENG=Parent Table ID] }
    { 2   ;   ;Parent Code         ;Code20        ;TableRelation=Panel;
                                                   CaptionML=[ENU=Parent Code;
                                                              ENG=Parent Code] }
    { 3   ;   ;Parent ID           ;Integer       ;CaptionML=[ENU=Parent ID;
                                                              ENG=Parent ID] }
    { 4   ;   ;Parent ID 2         ;Integer       ;CaptionML=[ENU=Parent ID 2;
                                                              ENG=Parent ID 2] }
    { 7   ;   ;Panel Property ID   ;Integer       ;CaptionML=[ENU=Panel Property ID;
                                                              ENG=Panel Property ID] }
    { 8   ;   ;ID                  ;Integer       ;CaptionML=[ENU=ID;
                                                              ENG=ID] }
    { 10  ;   ;Sequence            ;Integer       ;CaptionML=[ENU=Sequence;
                                                              ENG=Sequence] }
    { 12  ;   ;Property Value      ;Text250       ;CaptionML=[ENU=Property Value;
                                                              ENG=Property Value] }
    { 13  ;   ;Value               ;Text250       ;OnValidate=BEGIN
                                                                ValidateValue();
                                                              END;

                                                   OnLookup=BEGIN
                                                              ValueLookup();
                                                            END;

                                                   CaptionML=[ENU=Value;
                                                              ENG=Value] }
    { 14  ;   ;Image               ;BLOB          ;CaptionML=[ENU=Image;
                                                              ENG=Image];
                                                   SubType=Bitmap }
    { 15  ;No ;Bitmap              ;BLOB          ;CaptionML=[ENU=Bitmap;
                                                              ENG=Bitmap] }
    { 20  ;   ;Parent Table Name   ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObj."Object Name" WHERE (Object Type=CONST(Table),
                                                                                                  Object ID=FIELD(Parent Table ID)));
                                                   CaptionML=[ENU=Parent Table Name;
                                                              ENG=Parent Table Name];
                                                   Editable=No }
    { 1000;   ;Created By          ;Code50        ;OnLookup=BEGIN
                                                              TnpToolkit.UserLookup(Rec."Created By", FALSE);
                                                            END;

                                                   CaptionML=[ENU=Created By;
                                                              ENG=Created By] }
    { 1001;   ;Created Date Time   ;DateTime      ;CaptionML=[ENU=Created Date Time;
                                                              ENG=Created Date Time] }
    { 1002;   ;Modified By         ;Code50        ;OnLookup=BEGIN
                                                              TnpToolkit.UserLookup(Rec."Modified By", FALSE);
                                                            END;

                                                   CaptionML=[ENU=Modified By;
                                                              ENG=Modified By] }
    { 1003;   ;Modified Date Time  ;DateTime      ;CaptionML=[ENU=Modified Date Time;
                                                              ENG=Modified Date Time] }
  }
  KEYS
  {
    {    ;Parent Table ID,Parent Code,Parent ID,Parent ID 2,Panel Property ID,ID;
                                                   Clustered=Yes }
    {    ;Parent Table ID,Parent Code,Parent ID,Parent ID 2,Panel Property ID,Sequence }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Panel@1000000004 : Record 9062363;
      PanelProperty@1000000003 : Record 9062433;
      EnhancedPermissionsMgt@1000000005 : Codeunit 9062277;
      PanelTimestampToolkit@1000000001 : Codeunit 9062385;
      PanelToolkit@1000000002 : Codeunit 9062320;
      TnpToolkit@1000000000 : Codeunit 9062230;

    PROCEDURE "--- Initialisation ---"@1000000004();
    BEGIN
    END;

    PROCEDURE NewId@1000000000() : Integer;
    VAR
      lTilePanelPropertyValue@1000000000 : Record 9062444;
    BEGIN
      //DOC NA2015.1 - Returning new ID
      //  <- New ID

      Rec.TESTFIELD("Parent Table ID");
      Rec.TESTFIELD("Parent Code");
      Rec.TESTFIELD("Panel Property ID");

      lTilePanelPropertyValue.RESET();
      lTilePanelPropertyValue.SETRANGE("Parent Table ID", Rec."Parent Table ID");
      lTilePanelPropertyValue.SETRANGE("Parent Code", Rec."Parent Code");
      lTilePanelPropertyValue.SETRANGE("Parent ID", Rec."Parent ID");
      lTilePanelPropertyValue.SETRANGE("Parent ID 2", Rec."Parent ID 2");
      lTilePanelPropertyValue.SETRANGE("Panel Property ID", Rec."Panel Property ID");
      IF (lTilePanelPropertyValue.FINDLAST()) THEN
        EXIT(lTilePanelPropertyValue.ID + 1)
      ELSE
        EXIT(1);
    END;

    PROCEDURE NewSequence@1000000003() : Integer;
    VAR
      lTilePanelPropertyValue@1000000001 : Record 9062444;
    BEGIN
      //DOC NA2015.1 - Returning new sequence
      //  <- New sequence

      lTilePanelPropertyValue.RESET();
      lTilePanelPropertyValue.SETCURRENTKEY("Parent Table ID", "Parent Code", "Parent ID", "Parent ID 2", "Panel Property ID", Sequence);
      lTilePanelPropertyValue.SETRANGE("Parent Table ID", Rec."Parent Table ID");
      lTilePanelPropertyValue.SETRANGE("Parent Code", Rec."Parent Code");
      lTilePanelPropertyValue.SETRANGE("Parent ID", Rec."Parent ID");
      lTilePanelPropertyValue.SETRANGE("Parent ID 2", Rec."Parent ID 2");
      lTilePanelPropertyValue.SETRANGE("Panel Property ID", Rec."Panel Property ID");
      IF (lTilePanelPropertyValue.FINDLAST()) THEN
        EXIT(lTilePanelPropertyValue.Sequence + 10)
      ELSE
        EXIT(10);
    END;

    PROCEDURE NewRecord@1000000001();
    BEGIN
      //DOC NA2015.1 - Initialising new record

      Rec.VALIDATE(Sequence, NewSequence());
    END;

    PROCEDURE "--- General ---"@1000000002();
    BEGIN
    END;

    LOCAL PROCEDURE FindProperty@1000000009() : Boolean;
    VAR
      lResult@1000000000 : Boolean;
    BEGIN
      //DOC NA2015.3 - Trying to find panel property being a parent of the record
      //  <- Result

      lResult := PanelProperty.GET(Rec."Parent Table ID", Rec."Parent Code", Rec."Parent ID", Rec."Parent ID 2", Rec."Panel Property ID");
      IF ( NOT (lResult)) THEN
        CLEAR(PanelProperty);
      EXIT(lResult);
    END;

    PROCEDURE LoadImageFromLibrary@1000000047() : Boolean;
    VAR
      lSystemImage@1000000001 : Record 9062240;
      lSystemImageManagement@1000000000 : Codeunit 9062244;
      lImageSelection@1000000003 : Integer;
      lResult@1000000002 : Boolean;
    BEGIN
      //DOC NA2015.1 - Loading image from library
      //  <- Result

      lResult := FALSE;

      IF (lSystemImageManagement.LoadImageFromLibrary(lSystemImage, lImageSelection)) THEN
      BEGIN
        CASE (lImageSelection) OF
          lSystemImage."Image Selection"::Image:
            Rec.VALIDATE(Image, lSystemImage.Image);
          lSystemImage."Image Selection"::"Alternative Image":
            Rec.VALIDATE(Image, lSystemImage."Alternative Image");
        END;
        Rec.MODIFY(TRUE);
        lResult := TRUE;
      END;

      EXIT(lResult);
    END;

    LOCAL PROCEDURE ValidateValue@1000000005();
    VAR
      lTile@1000000000 : Record 9062367;
      lSystemColour@1000000001 : Record 9062336;
    BEGIN
      //DOC NA2015.3 - Validating value

      IF (Rec.Value = '') THEN
        EXIT;

      FindProperty();

      CASE (PanelProperty."Property Table ID") OF
        DATABASE::Tile:
          CASE (PanelProperty."Property ID") OF
            lTile.FIELDNO("Background Colour Code"):
              lSystemColour.GET(COPYSTR(Rec.Value, 1, MAXSTRLEN(lSystemColour.Code)));
            lTile.FIELDNO(Size):
              EVALUATE(lTile.Size, Rec.Value);
          END;
      END;
    END;

    LOCAL PROCEDURE ValueLookup@1000000006() : Boolean;
    VAR
      lTile@1000000001 : Record 9062367;
      lSystemColour@1000000000 : Record 9062336;
      lFieldLookup@1000000003 : Codeunit 9062237;
      lResult@1000000002 : Boolean;
    BEGIN
      //DOC NA2015.3 - Lookup for value
      //  <- Lookup result

      lResult := FALSE;

      FindProperty();

      CASE (PanelProperty."Property Table ID") OF
        DATABASE::Tile:
          CASE (PanelProperty."Property ID") OF
            lTile.FIELDNO("Background Colour Code"):
              BEGIN
                lSystemColour.RESET();
                IF (lSystemColour.GET(COPYSTR(Rec.Value, 1, MAXSTRLEN(lSystemColour.Code)))) THEN;
                IF (PAGE.RUNMODAL(PAGE::"System Colour List", lSystemColour) = ACTION::LookupOK) THEN
                BEGIN
                  Rec.Value := lSystemColour.Code;
                  lResult := TRUE;
                END;
              END;
            lTile.FIELDNO(Size):
              lResult := lFieldLookup.Lookup(PanelProperty."Property Table ID", PanelProperty."Property ID", Rec.Value);
          END;
      END;

      EXIT(lResult);
    END;

    LOCAL PROCEDURE CheckModifyPermission@1000000041();
    BEGIN
      //DOC NA2016.15 - Checking modify permission (given to the panel)

      IF ( NOT (PanelToolkit.PanelTable(Rec."Parent Table ID"))) THEN
        EXIT;
      IF ( NOT (Panel.GET(Rec."Parent Code"))) THEN
        EXIT;
      EnhancedPermissionsMgt.CheckPanelModifyPermission(Panel, USERID());
    END;

    BEGIN
    {
      //DOC NA2015.1  JH 28/10/2013 - Created
      //DOC NA2015.1  JH 15/12/2013 - Properties and sources integrated
      //DOC NA2015.1  JH 25/04/2014 - Tile panels 3
      //DOC NA2015.3  JH 15/08/2014 - Amendments, fixes, value validation & lookup
      //DOC NA2015.4  JH 10/02/2015 - Fixes
      //DOC NA2015.5  JH 14/03/2015 - "Bitmap" added (for backward-compatibility with 2009)
      //DOC NA2016.5  JH 28/08/2015 - Upgraded to 2016
      //DOC NA2016.15 JH 05/05/2016 - Enhanced permissions
    }
    END.
  }
}

