OBJECT Report 50029 Move Inv. to New Company 2
{
  OBJECT-PROPERTIES
  {
    Date=08/07/18;
    Time=[ 2:19:01 PM];
    Modified=Yes;
    Version List=;
  }
  PROPERTIES
  {
    ProcessingOnly=Yes;
    OnPreReport=BEGIN

                  SalesReceivablesSetup.GET;
                END;

    OnPostReport=BEGIN
                   IF GUIALLOWED THEN
                     MESSAGE('Sales Invoices Created');
                 END;

  }
  DATASET
  {
    { 1000000000;;DataItem;                  ;
               DataItemTable=Table9087006;
               DataItemTableView=SORTING(Code);
               PrintOnlyIfDetail=Yes;
               OnAfterGetRecord=BEGIN
                                  CreateSalesInvoice := FALSE;

                                  SalesHeader2.RESET;
                                  SalesHeader2.SETRANGE("Sell-to Customer Name",Brand.Name);
                                  IF NOT SalesHeader2.ISEMPTY THEN
                                    CurrReport.SKIP;

                                  Item2.SETRANGE("Brand Code",Code);
                                  IF Item2.FINDSET THEN BEGIN
                                    REPEAT
                                      ItemVariant.RESET;
                                      ItemVariant.SETRANGE("Item No.",Item2."No.");
                                      IF ItemVariant.FINDSET THEN BEGIN
                                        REPEAT
                                          ItemLedgerEntry.SETRANGE("Item No.",ItemVariant."Item No.");
                                          ItemLedgerEntry.SETRANGE("Variant Code",ItemVariant.Code);
                                          ItemLedgerEntry.SETRANGE("Entry Type",ItemLedgerEntry."Entry Type"::Purchase);
                                          ItemLedgerEntry.CALCSUMS("Remaining Quantity");
                                          CreateSalesInvoice := ItemLedgerEntry."Remaining Quantity" > 0;
                                        UNTIL (ItemVariant.NEXT=0) OR (CreateSalesInvoice);
                                      END;
                                    UNTIL (Item2.NEXT=0) OR (CreateSalesInvoice);
                                  END;

                                  IF CreateSalesInvoice THEN BEGIN
                                    SalesHeader2.RESET;
                                    SalesHeader2.SETRANGE("Sell-to Customer Name",Brand.Name);
                                    IF NOT SalesHeader2.ISEMPTY THEN
                                      CurrReport.SKIP;
                                    SalesHeader.INIT;
                                    SalesHeader.VALIDATE("Document Type",SalesHeader."Document Type"::Invoice);
                                    SalesHeader."No." :=  NoSeriesManagement.GetNextNo3(SalesReceivablesSetup."Invoice Nos.",TODAY,TRUE,FALSE);

                                    SalesHeader.INSERT(TRUE);
                                    SalesHeader.VALIDATE("Sell-to Customer No.",'TMOD FASHION');
                                    SalesHeader.VALIDATE("Posting Date",TODAY);
                                    SalesHeader.VALIDATE("Sell-to Customer Name",Brand.Name);
                                    SalesHeader.MODIFY(TRUE);

                                    SalesLine.INIT;
                                    SalesLine.VALIDATE("Document Type",SalesHeader."Document Type");
                                    SalesLine.VALIDATE("Document No.",SalesHeader."No.");
                                    LineNo := 1;
                                  END ELSE
                                    CurrReport.SKIP;
                                END;
                                 }

    { 1000000001;1;DataItem;                 ;
               DataItemTable=Table27;
               DataItemTableView=SORTING(Brand Code,Season Code);
               DataItemLink=Brand Code=FIELD(Code) }

    { 1000000002;2;DataItem;                 ;
               DataItemTable=Table5401;
               DataItemTableView=SORTING(Item No.,Code);
               OnAfterGetRecord=BEGIN
                                  Location.RESET;
                                  Location.FINDSET;
                                  REPEAT
                                    SETFILTER("Location Filter",Location.Code);
                                    CALCFIELDS(Inventory);
                                    IF Inventory > 0 THEN BEGIN
                                      ItemLedgerEntry.SETRANGE("Item No.","Item No.");
                                      ItemLedgerEntry.SETRANGE("Variant Code",Code);
                                      ItemLedgerEntry.SETRANGE("Entry Type",ItemLedgerEntry."Entry Type"::Purchase);
                                      ItemLedgerEntry.CALCSUMS("Remaining Quantity");
                                      IF ItemLedgerEntry."Remaining Quantity" > 0 THEN BEGIN
                                        SalesLine.INIT;
                                        SalesLine.VALIDATE("Line No.",LineNo);
                                        SalesLine.VALIDATE(Type,SalesLine.Type::Item);
                                        SalesLine.VALIDATE("No.","Item No.");
                                        SalesLine.VALIDATE("Variant Code",Code);
                                        SalesLine.VALIDATE("Location Code",Location.Code);
                                        SalesLine.VALIDATE(Quantity,ItemLedgerEntry."Remaining Quantity");
                                        SalesLine.VALIDATE("Unit Price",Item."Unit Cost");
                                        SalesLine.INSERT(TRUE);
                                        LineNo += 1
                                      END;
                                    END;
                                  UNTIL Location.NEXT=0;
                                END;

               DataItemLink=Item No.=FIELD(No.) }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      SalesHeader@1000000000 : Record 36;
      SalesHeader2@1000000010 : Record 36;
      SalesLine@1000000001 : Record 37;
      Location@1000000003 : Record 14;
      SalesReceivablesSetup@1000000005 : Record 311;
      Item2@1000000006 : Record 27;
      ItemLedgerEntry@1000000008 : Record 32;
      ItemVariant@1000000009 : Record 5401;
      NoSeriesManagement@1000000004 : Codeunit 396;
      LineNo@1000000002 : Integer;
      CreateSalesInvoice@1000000007 : Boolean;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

