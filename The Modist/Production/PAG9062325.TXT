OBJECT Page 9062325 AutoNAV Log
{
  OBJECT-PROPERTIES
  {
    Date=17/12/15;
    Time=[ 2:33:59 PM];
    Version List=NA2016.12;
  }
  PROPERTIES
  {
    CaptionML=[ENU=AutoNAV Log;
               ENG=AutoNAV Log];
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    LinksAllowed=No;
    SourceTable=Table9062280;
    SourceTableView=SORTING(DateTime Logged);
    PageType=List;
    PromotedActionCategoriesML=[ENU=New,Process,Reports,Filtering;
                                ENG=New,Process,Reports,Filtering];
    OnOpenPage=BEGIN
                 InitPage();
                 UpdateFilters();
               END;

    OnClosePage=BEGIN
                  PageFiltering.WriteFilterActivitiesToSysB(PAGE::"AutoNAV Log", '', FilterBuffer);
                END;

    OnAfterGetRecord=BEGIN
                       Style := Rec.GetStyle();
                     END;

    ActionList=ACTIONS
    {
      { 1000000009;  ;ActionContainer;
                      Name=ActionItemsContainer;
                      CaptionML=[ENU=Action Items;
                                 ENG=Action Items];
                      ActionContainerType=ActionItems }
      { 1000000022;1 ;Action    ;
                      Name=RefreshAction;
                      CaptionML=[ENU=Refresh;
                                 ENG=Refresh];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Refresh;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 UpdateFilters();
                               END;
                                }
      { 1000000023;1 ;Action    ;
                      Name=GotToLastRecordAction;
                      CaptionML=[ENU=Got to Last Record;
                                 ENG=Got to Last Record];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IF FINDLAST THEN;
                               END;
                                }
      { 1000000019;1 ;Action    ;
                      Name=DeleteAllAction;
                      CaptionML=[ENU=Delete All;
                                 ENG=Delete All];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Delete;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 eConfirmation@1000000000 : TextConst 'ENU=Do you want to delete all log entries?;ENG=Do you want to delete all log entries?';
                               BEGIN
                                 IF ( NOT (CONFIRM(eConfirmation, FALSE))) THEN
                                   EXIT;
                                 Rec.DELETEALL(TRUE);
                                 Refresh();
                               END;
                                }
      { 1000000027;1 ;Action    ;
                      Name=AcknowledgeSelectedAction;
                      CaptionML=[ENU=Acknowledge Selected;
                                 ENG=Acknowledge Selected];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Approve;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 AcknowledgeSelected();
                               END;
                                }
      { 9062235 ;1   ;Separator ;
                      CaptionML=[ENU=----------------;
                                 ENG=----------------] }
      { 9062237 ;1   ;Action    ;
                      Name=ShowHideInformation;
                      CaptionML=[ENU=Show/Hide Information;
                                 ENG=Show/Hide Information];
                      Promoted=Yes;
                      Enabled=FiltersEnabled;
                      PromotedIsBig=Yes;
                      Image=Info;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 ToggleFilter(Rec.Type::Information);
                               END;
                                }
      { 9062238 ;1   ;Action    ;
                      Name=ShowHideWarnings;
                      CaptionML=[ENU=Show/Hide Warnings;
                                 ENG=Show/Hide Warnings];
                      Promoted=Yes;
                      Enabled=FiltersEnabled;
                      PromotedIsBig=Yes;
                      Image=Warning;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 ToggleFilter(Rec.Type::Warning);
                               END;
                                }
      { 9062239 ;1   ;Action    ;
                      Name=ShowHideErrors;
                      CaptionML=[ENU=Show/Hide Errors;
                                 ENG=Show/Hide Errors];
                      Promoted=Yes;
                      Enabled=FiltersEnabled;
                      PromotedIsBig=Yes;
                      Image=Error;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 ToggleFilter(Rec.Type::Error);
                               END;
                                }
      { 9062240 ;1   ;Action    ;
                      Name=ShowHideDebug;
                      CaptionML=[ENU=Show/Hide Debug;
                                 ENG=Show/Hide Debug];
                      Promoted=Yes;
                      Enabled=FiltersEnabled;
                      PromotedIsBig=Yes;
                      Image=Debug;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 ToggleFilter(Rec.Type::Debug);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1000000000;;Container;
                Name=ContentAreaContainer;
                CaptionML=[ENU=Content Area;
                           ENG=Content Area];
                ContainerType=ContentArea }

    { 1000000006;1;Group  ;
                Name=GeneralGroup;
                CaptionML=[ENU=General;
                           ENG=General];
                Editable=FALSE;
                GroupType=Repeater }

    { 1000000012;2;Field  ;
                SourceExpr="Entry No.";
                Visible=FALSE;
                Editable=FALSE;
                StyleExpr=Style }

    { 1000000004;2;Field  ;
                SourceExpr="DateTime Logged";
                Editable=FALSE;
                StyleExpr=Style }

    { 1000000003;2;Field  ;
                SourceExpr="User ID";
                Editable=FALSE;
                StyleExpr=Style }

    { 1000000007;2;Field  ;
                SourceExpr=Source;
                Editable=FALSE;
                StyleExpr=Style }

    { 1000000001;2;Field  ;
                SourceExpr=Type;
                Editable=FALSE;
                StyleExpr=Style }

    { 1000000002;2;Field  ;
                SourceExpr=Description;
                Editable=FALSE;
                StyleExpr=Style;
                OnDrillDown=BEGIN
                              MESSAGE(Rec.Description + ' ' + Rec."Description 2");
                            END;
                             }

    { 1000000005;2;Field  ;
                CaptionML=[ENU=Description2;
                           ENG=Description2];
                SourceExpr="Description 2";
                Visible=FALSE;
                Editable=FALSE;
                StyleExpr=Style;
                OnDrillDown=BEGIN
                              MESSAGE(Rec.Description + ' ' + Rec."Description 2");
                            END;
                             }

    { 1000000008;2;Field  ;
                SourceExpr="Error Code";
                Editable=FALSE;
                StyleExpr=Style }

    { 1000000025;2;Field  ;
                SourceExpr=Acknowledged;
                Editable=FALSE;
                StyleExpr=Style }

    { 9062229;2;Field     ;
                SourceExpr="Object Type";
                Editable=FALSE;
                StyleExpr=Style }

    { 9062230;2;Field     ;
                SourceExpr="Object ID";
                Editable=FALSE;
                StyleExpr=Style }

    { 9062231;2;Field     ;
                SourceExpr="Object Name";
                Editable=FALSE;
                StyleExpr=Style }

    { 1000000010;1;Group  ;
                Name=OptionsGroup;
                CaptionML=[ENU=Options;
                           ENG=Options];
                GroupType=Group }

    { 1000000011;2;Field  ;
                Name=InformationFilterField;
                CaptionML=[ENU=Information;
                           ENG=Information];
                SourceExpr=PageFiltering.GetText(Rec.Type::Information, FilterBuffer);
                Enabled=FiltersEnabled;
                Editable=FALSE;
                StyleExpr=InformationStyle;
                OnDrillDown=BEGIN
                              ToggleFilter(Rec.Type::Information);
                            END;
                             }

    { 1000000013;2;Field  ;
                Name=WarningsFilterField;
                CaptionML=[ENU=Warnings;
                           ENG=Warnings];
                SourceExpr=PageFiltering.GetText(Rec.Type::Warning, FilterBuffer);
                Enabled=FiltersEnabled;
                Editable=FALSE;
                StyleExpr=WarningsStyle;
                OnDrillDown=BEGIN
                              ToggleFilter(Rec.Type::Warning);
                            END;
                             }

    { 1000000016;2;Field  ;
                Name=ErrorsFilterField;
                CaptionML=[ENU=Errors;
                           ENG=Errors];
                SourceExpr=PageFiltering.GetText(Rec.Type::Error, FilterBuffer);
                Enabled=FiltersEnabled;
                Editable=FALSE;
                StyleExpr=ErrorsStyle;
                OnDrillDown=BEGIN
                              ToggleFilter(Rec.Type::Error);
                            END;
                             }

    { 1000000018;2;Field  ;
                Name=DebugFilterField;
                CaptionML=[ENU=Debug;
                           ENG=Debug];
                SourceExpr=PageFiltering.GetText(Rec.Type::Debug, FilterBuffer);
                Enabled=FiltersEnabled;
                Editable=FALSE;
                StyleExpr=DebugStyle;
                OnDrillDown=BEGIN
                              ToggleFilter(Rec.Type::Debug);
                            END;
                             }

  }
  CODE
  {
    VAR
      SystemBehaviour@1000000002 : Record 9062230;
      tTimerIntervalZero@1000000006 : TextConst 'ENU=AutoNAV timer interval hasn''t been set up in system behaviour.;ENG=AutoNAV timer interval hasn''t been set up in system behaviour.';
      PageFiltering@9062233 : Codeunit 9062608;
      TnpToolkit@9062230 : Codeunit 9062230;
      FiltersEnabled@9062238 : Boolean;
      FilterBuffer@9062231 : TEMPORARY Record 9062735;
      InformationStyle@9062232 : Text;
      WarningsStyle@9062234 : Text;
      ErrorsStyle@9062236 : Text;
      DebugStyle@9062235 : Text;
      Style@1000000001 : Text;

    LOCAL PROCEDURE InitPage@1000000007();
    VAR
      lFilterGroup@1000000000 : Integer;
      lType@9062229 : Integer;
    BEGIN
      //DOC NA2015.1 - Page initialisation

      FiltersEnabled := TRUE;
      FOR lFilterGroup := 6 DOWNTO 0 DO
      BEGIN
        Rec.FILTERGROUP(lFilterGroup);
        IF (Rec.GETFILTER(Type) <> '') THEN
          FiltersEnabled := FALSE;
      END;
      Rec.FILTERGROUP(0);

      PageFiltering.ClearFilterBuffer(FilterBuffer);
      IF (FiltersEnabled) THEN
      BEGIN
        PageFiltering.SetTextsAsVisibleHidden();
        PageFiltering.SetStyles('', 'Subordinate');
        PageFiltering.AddOptionsToFilterBuffer(DATABASE::"AutoNAV Log Entry", Rec.FIELDNO(Type), FilterBuffer);
        FOR lType := Rec.Type::Information TO Rec.Type::Debug DO
          PageFiltering.SetActiveStyle(lType, Rec.GetTypeStyle(lType), FilterBuffer);
        PageFiltering.ReadFilterActivitiesFromSysB(PAGE::"AutoNAV Log", '', TRUE, FilterBuffer);
      END;
    END;

    LOCAL PROCEDURE UpdateFilters@1000000001();
    VAR
      lFilter@1000000000 : Text;
    BEGIN
      //DOC NA2015.1 - Updating filters

      lFilter := PageFiltering.FilterForOptionField(FilterBuffer);
      Rec.FILTERGROUP(2);
      IF (lFilter <> '') THEN
        Rec.SETFILTER(Type, lFilter)
      ELSE
        Rec.SETRANGE(Type);
      Rec.FILTERGROUP(0);

      InformationStyle := PageFiltering.GetStyle(Rec.Type::Information, FilterBuffer);
      WarningsStyle := PageFiltering.GetStyle(Rec.Type::Warning, FilterBuffer);
      ErrorsStyle := PageFiltering.GetStyle(Rec.Type::Error, FilterBuffer);
      DebugStyle := PageFiltering.GetStyle(Rec.Type::Debug, FilterBuffer);

      Refresh();
    END;

    LOCAL PROCEDURE ToggleFilter@1000000005(pIndex@1000000000 : Integer);
    BEGIN
      //DOC NA2015.1 - Toggling filter
      //  -> pIndex: Index (filter index)

      PageFiltering.ToggleFilterActivity(pIndex, FilterBuffer);
      UpdateFilters();
    END;

    LOCAL PROCEDURE Refresh@1000000000();
    BEGIN
      //DOC NA2015.1 - Refreshing the page

      IF (Rec.FINDLAST()) THEN;
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE AcknowledgeSelected@1000000009();
    VAR
      lAutoNavLogEntry@1000000000 : Record 9062280;
      eConfirmation@1000000001 : TextConst 'ENU=Do you want to confirm selected entries?;ENG=Do you want to confirm selected entries?';
    BEGIN
      //DOC NA2015.1 - Confirming selected records

      IF ( NOT (CONFIRM(eConfirmation, TRUE))) THEN
        EXIT;

      CurrPage.SETSELECTIONFILTER(lAutoNavLogEntry);

      lAutoNavLogEntry.SETFILTER(Type, '%1|%2', lAutoNavLogEntry.Type::Warning, lAutoNavLogEntry.Type::Error);
      lAutoNavLogEntry.MODIFYALL(Acknowledged, TRUE);
    END;

    BEGIN
    {
      //DOC NA2015.1  JH 31/08/2012 - Migrated to 2013
      //DOC NA2016.10 JH 28/08/2015 - Upgraded to 2016
      //DOC NA2016.12 JH 17/12/2015 - Bugfixes
    }
    END.
  }
}

