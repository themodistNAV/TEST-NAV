OBJECT Report 5183 Resend Attachments
{
  OBJECT-PROPERTIES
  {
    Date=09/09/14;
    Time=12:00:00 PM;
    Version List=NAVW18.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Resend Attachments;
               ENG=Resend Attachments];
    ProcessingOnly=Yes;
    OnPreReport=VAR
                  LoggedSeg@1000 : Record 5075;
                BEGIN
                  IF "Interaction Log Entry".GETFILTER("Logged Segment Entry No.") = '' THEN
                    ERROR(Text000,"Interaction Log Entry".FIELDCAPTION("Logged Segment Entry No."));

                  IF "Interaction Log Entry".GETFILTER("Logged Segment Entry No.") <> '0' THEN BEGIN
                    LoggedSeg.SETFILTER("Entry No.","Interaction Log Entry".GETFILTER("Logged Segment Entry No."));
                    IF LoggedSeg.COUNT <> 1 THEN
                      ERROR(
                        Text001,LoggedSeg.TABLECAPTION);
                  END;
                END;

  }
  DATASET
  {
    { 3056;    ;DataItem;                    ;
               DataItemTable=Table5065;
               DataItemTableView=SORTING(Logged Segment Entry No.)
                                 WHERE(Postponed=CONST(No));
               OnAfterGetRecord=VAR
                                  Attachment@1000 : Record 5062;
                                  InteractionLogEntryNew@1001 : Record 5065;
                                  SegLine@1007 : Record 5077;
                                  InterLogEntryCommentLine@1008 : Record 5123;
                                  SegManagement@1006 : Codeunit 5051;
                                  NewEntryNo@1002 : Integer;
                                BEGIN
                                  IF NOT Attachment.GET("Attachment No.") THEN
                                    CurrReport.SKIP;
                                  IF Attachment."Storage Type" = Attachment."Storage Type"::"Exchange Storage" THEN
                                    CurrReport.SKIP;
                                  IF CorrespondenceType = CorrespondenceType::"Same as Entry" THEN
                                    TESTFIELD("Correspondence Type");

                                  IF UpdateMergeFields THEN BEGIN
                                    IF DeliveryBufferTemp.GET("Entry No.") THEN
                                      CurrReport.SKIP;
                                    InteractionLogEntryNew.TRANSFERFIELDS("Interaction Log Entry",FALSE);
                                    InteractionLogEntryNew.VALIDATE(Date,WORKDATE);
                                    InteractionLogEntryNew.VALIDATE("Time of Interaction",TIME);
                                    IF STRPOS(Description,Text003) <> 1 THEN BEGIN
                                      IF STRLEN(Description) + STRLEN(Text003) <= MAXSTRLEN(InteractionLogEntryNew.Description) THEN
                                        InteractionLogEntryNew.VALIDATE(Description,Text003 + Description)
                                      ELSE
                                        InteractionLogEntryNew.VALIDATE(Description,COPYSTR(
                                            Text003 + Description,1,MAXSTRLEN(InteractionLogEntryNew.Description)))
                                    END;
                                    IF CorrespondenceType <> CorrespondenceType::"Same as Entry" THEN
                                      InteractionLogEntryNew."Correspondence Type" := CorrespondenceType;
                                    SegManagement.CopyFieldsFromInteractLogEntry(SegLine,InteractionLogEntryNew);
                                    InterLogEntryCommentLine.SETRANGE("Entry No.","Entry No.");
                                    IF InterLogEntryCommentLine.FINDFIRST THEN;
                                    Attachment.CALCFIELDS(Attachment);
                                    CLEAR(Attachment."Merge Source");
                                    NewEntryNo := SegManagement.LogInteraction(SegLine,Attachment,InterLogEntryCommentLine,FALSE,FALSE);
                                    InteractionLogEntryNew.GET(NewEntryNo);
                                    InteractionLogEntryNew.VALIDATE("Logged Segment Entry No.","Logged Segment Entry No.");
                                    InteractionLogEntryNew.VALIDATE("Delivery Status","Delivery Status"::"In Progress");
                                    InteractionLogEntryNew.VALIDATE("E-Mail Logged",FALSE);
                                    InteractionLogEntryNew.MODIFY(TRUE)
                                  END ELSE BEGIN
                                    IF CorrespondenceType <> CorrespondenceType::"Same as Entry" THEN
                                      "Correspondence Type" := CorrespondenceType;
                                    "Delivery Status" := "Delivery Status"::"In Progress";
                                    "E-Mail Logged" := FALSE;
                                    MODIFY
                                  END;

                                  DeliveryBufferTemp.INIT;
                                  IF UpdateMergeFields THEN BEGIN
                                    DeliveryBufferTemp."No." := NewEntryNo;
                                    DeliveryBufferTemp."Attachment No." := InteractionLogEntryNew."Attachment No.";
                                    DeliveryBufferTemp."Correspondence Type" := InteractionLogEntryNew."Correspondence Type"
                                  END ELSE BEGIN
                                    DeliveryBufferTemp."No." := "Entry No.";
                                    DeliveryBufferTemp."Attachment No." := "Attachment No.";
                                    DeliveryBufferTemp."Correspondence Type" := "Correspondence Type"
                                  END;
                                  DeliveryBufferTemp.Subject := Subject;
                                  DeliveryBufferTemp."Send Word Docs. as Attmt." := "Send Word Docs. as Attmt.";
                                  DeliveryBufferTemp.INSERT;
                                END;

               OnPostDataItem=BEGIN
                                IF DeliveryBufferTemp.COUNT = 0 THEN
                                  ERROR(Text002);

                                COMMIT;
                                AttachmentManagement.Send(DeliveryBufferTemp);
                              END;

               ReqFilterFields=Logged Segment Entry No.,Entry No.,Delivery Status,Correspondence Type,Contact No.,Campaign No. }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ENG=Options] }

      { 3   ;2   ;Field     ;
                  CaptionML=[ENU=Correspondence Type;
                             ENG=Correspondence Type];
                  OptionCaptionML=[ENU=Same as Entry,Hard Copy,E-Mail,Fax;
                                   ENG=Same as Entry,Hard Copy,E-Mail,Fax];
                  SourceExpr=CorrespondenceType }

      { 7   ;2   ;Field     ;
                  Name=Update Merge Fields;
                  CaptionML=[ENU=Update Merge Fields;
                             ENG=Update Merge Fields];
                  SourceExpr=UpdateMergeFields }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=%1 must be specified.;ENG=%1 must be specified.';
      Text001@1001 : TextConst 'ENU=The interaction log entries must always be from the same %1.;ENG=The interaction log entries must always be from the same %1.';
      Text002@1002 : TextConst 'ENU=There is nothing to send.\\Only Microsoft Word documents can be resent.;ENG=There is nothing to send.\\Only Microsoft Word documents can be resent.';
      DeliveryBufferTemp@1003 : TEMPORARY Record 5074;
      AttachmentManagement@1004 : Codeunit 5052;
      CorrespondenceType@1005 : 'Same as Entry,Hard Copy,E-Mail,Fax';
      UpdateMergeFields@1006 : Boolean;
      Text003@1007 : TextConst 'ENU=Resend:;ENG=Resend:';

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

