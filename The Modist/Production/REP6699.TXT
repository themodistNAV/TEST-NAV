OBJECT Report 6699 Move Negative Sales Lines
{
  OBJECT-PROPERTIES
  {
    Date=07/09/12;
    Time=12:00:00 PM;
    Version List=NAVW17.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Move Negative Sales Lines;
               ENG=Move Negative Sales Lines];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  CopyDocMgt.SetProperties(TRUE,FALSE,TRUE,TRUE,TRUE,FALSE,FALSE);
                  IF (FromDocType = FromDocType::"Return Order") OR (FromDocType = FromDocType::"Credit Memo") THEN
                    ToDocType := ToDocType2;
                  ToSalesHeader."Document Type" := CopyDocMgt.SalesHeaderDocType(ToDocType);
                  CopyDocMgt.CopySalesDoc(FromDocType,FromSalesHeader."No.",ToSalesHeader);
                END;

  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnInit=BEGIN
               DropDownForOrderAndInvoiceEdit := TRUE;
               DropDownForRetOrderAndCrMemoEd := TRUE;
             END;

      OnOpenPage=BEGIN
                   WITH FromSalesHeader DO
                     CASE "Document Type" OF
                       "Document Type"::Order:
                         BEGIN
                           ToDocType := ToDocType::"Return Order";
                           ToDocType2 := ToDocType2::Order;
                           FromDocType := FromDocType::Order;
                           DropDownForRetOrderAndCrMemoEd := FALSE;
                         END;
                       "Document Type"::Invoice:
                         BEGIN
                           ToDocType := ToDocType::"Credit Memo";
                           ToDocType2 := ToDocType2::Invoice;
                           FromDocType := FromDocType::Invoice;
                           DropDownForRetOrderAndCrMemoEd := FALSE;
                         END;
                       "Document Type"::"Return Order":
                         BEGIN
                           ToDocType2 := ToDocType2::Order;
                           ToDocType := ToDocType::"Return Order";
                           FromDocType := FromDocType::"Return Order";
                           DropDownForOrderAndInvoiceEdit := FALSE;
                         END;
                       "Document Type"::"Credit Memo":
                         BEGIN
                           ToDocType2 := ToDocType2::Invoice;
                           ToDocType := ToDocType::"Credit Memo";
                           FromDocType := FromDocType::"Credit Memo";
                           DropDownForOrderAndInvoiceEdit := FALSE;
                         END;
                     END;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ENG=Options] }

      { 10  ;2   ;Group     ;
                  CaptionML=[ENU=Order && Invoice;
                             ENG=Order && Invoice] }

      { 8   ;3   ;Field     ;
                  Name=DropDownForOrderAndInvoice;
                  CaptionML=[ENU=To Document Type;
                             ENG=To Document Type];
                  OptionCaptionML=[ENU=,,,,Return Order,Credit Memo;
                                   ENG=,,,,Return Order,Credit Memo];
                  SourceExpr=ToDocType;
                  Editable=DropDownForOrderAndInvoiceEdit }

      { 7   ;2   ;Group     ;
                  CaptionML=[ENU="Return Order && Credit Memo ";
                             ENG="Return Order && Credit Memo "] }

      { 5   ;3   ;Field     ;
                  Name=DropDownForRetOrderAndCrMemo;
                  CaptionML=[ENU=To Document Type;
                             ENG=To Document Type];
                  OptionCaptionML=[ENU=,,Order,Invoice;
                                   ENG=,,Order,Invoice];
                  SourceExpr=ToDocType2;
                  Editable=DropDownForRetOrderAndCrMemoEd }

      { 4   ;2   ;Field     ;
                  CaptionClass=Text19037468;
                  MultiLine=Yes }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      FromSalesHeader@1002 : Record 36;
      ToSalesHeader@1004 : Record 36;
      CopyDocMgt@1003 : Codeunit 6620;
      ToDocType@1000 : ',,Order,Invoice,Return Order,Credit Memo';
      ToDocType2@1001 : ',,Order,Invoice,Return Order,Credit Memo';
      FromDocType@1005 : 'Quote,Blanket Order,Order,Invoice,Return Order,Credit Memo';
      Text001@1006 : TextConst 'ENU=%1 %2 has been created. Do you want to view the created document?;ENG=%1 %2 has been created. Do you want to view the created document?';
      DropDownForRetOrderAndCrMemoEd@19065392 : Boolean INDATASET;
      DropDownForOrderAndInvoiceEdit@19005123 : Boolean INDATASET;
      Text19037468@19030891 : TextConst 'ENU=When you move a negative sales line to your selected document type, the quantity of the line on the selected document becomes positive.;ENG=When you move a negative sales line to your selected document type, the quantity of the line on the selected document becomes positive.';

    PROCEDURE SetSalesHeader@1(VAR NewFromSalesHeader@1000 : Record 36);
    BEGIN
      FromSalesHeader := NewFromSalesHeader;
    END;

    PROCEDURE ShowDocument@2();
    BEGIN
      COMMIT;
      IF ToSalesHeader.FIND THEN
        IF CONFIRM(Text001,TRUE,ToSalesHeader."Document Type",ToSalesHeader."No.") THEN
          CopyDocMgt.ShowSalesDoc(ToSalesHeader);
    END;

    PROCEDURE InitializeRequest@3(NewFromDocType@1000 : Option;NewToDocType@1001 : Option;NewToDocType2@1002 : Option);
    BEGIN
      FromDocType := NewFromDocType;
      ToDocType := NewToDocType;
      ToDocType2 := NewToDocType2;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

