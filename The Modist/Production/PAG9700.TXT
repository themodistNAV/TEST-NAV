OBJECT Page 9700 E-Mail Dialog
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Send E-Mail;
               ENG=Send E-Mail];
    SaveValues=Yes;
    SourceTable=Table9500;
    PageType=StandardDialog;
    SourceTableTemporary=Yes;
    OnInit=BEGIN
             HasAttachment := FALSE;
           END;

    OnOpenPage=VAR
                 OrigMailBodyText@1000 : Text;
               BEGIN
                 OriginalFromEmail := OrigEmailItem."From Address";

                 IF NOT IsEditEnabled THEN
                   LocalEdit := FALSE;
                 IF ForceOutlook THEN
                   LocalEdit := TRUE;
                 IF NOT LocalEdit THEN
                   ShownFromEmail := OriginalFromEmail
                 ELSE
                   ShownFromEmail := '';
                 WITH EmailItem DO BEGIN
                   Subject := OrigEmailItem.Subject;
                   SendToText := OrigEmailItem."Send to";
                   IF OrigEmailItem."Send CC" <> '' THEN
                     CcText := OrigEmailItem."Send CC"
                   ELSE
                     "Send CC" := CcText;
                   IF OrigEmailItem."Send BCC" <> '' THEN
                     BccText := OrigEmailItem."Send BCC"
                   ELSE
                     "Send BCC" := BccText;
                   "Attachment Name" := OrigEmailItem."Attachment Name";
                 END;
                 OrigMailBodyText := EmailItem.GetBodyText;
                 IF OrigMailBodyText <> '' THEN
                   BodyText := OrigMailBodyText
                 ELSE
                   EmailItem.SetBodyText(BodyText);
                 EmailItem."Plaintext Formatted" := TRUE;
               END;

    OnClosePage=BEGIN
                  Rec := EmailItem;
                END;

  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 3   ;1   ;Field     ;
                Name=FromAddress;
                CaptionML=[ENU=From;
                           ENG=From];
                SourceExpr=ShownFromEmail;
                Enabled=False }

    { 10  ;1   ;Field     ;
                Name=SendTo;
                CaptionML=[ENU=To;
                           ENG=To];
                SourceExpr=SendToText;
                OnValidate=BEGIN
                             EmailItem.VALIDATE("Send to",SendToText);
                             SendToText := EmailItem."Send to";
                           END;
                            }

    { 4   ;1   ;Field     ;
                Name=CcText;
                CaptionML=[ENU=Cc;
                           ENG=Cc];
                SourceExpr=CcText;
                OnValidate=BEGIN
                             EmailItem.VALIDATE("Send CC",CcText);
                             CcText := EmailItem."Send CC";
                           END;
                            }

    { 7   ;1   ;Field     ;
                Name=BccText;
                CaptionML=[ENU=Bcc;
                           ENG=Bcc];
                SourceExpr=BccText;
                OnValidate=BEGIN
                             EmailItem.VALIDATE("Send BCC",BccText);
                             BccText := EmailItem."Send BCC";
                           END;
                            }

    { 11  ;1   ;Field     ;
                Name=Subject;
                CaptionML=[ENU=Subject;
                           ENG=Subject];
                SourceExpr=EmailItem.Subject }

    { 2   ;1   ;Field     ;
                Name=Attachment Name;
                CaptionML=[ENU=Attachment Name;
                           ENG=Attachment Name];
                SourceExpr=EmailItem."Attachment Name";
                Visible=HasAttachment;
                Editable=False;
                OnAssistEdit=VAR
                               MailManagement@1000 : Codeunit 9520;
                             BEGIN
                               MailManagement.DownloadPdfAttachment(EmailItem);
                             END;
                              }

    { 40  ;1   ;Field     ;
                Name=BodyText;
                CaptionML=[ENU=Message;
                           ENG=Message];
                SourceExpr=BodyText;
                MultiLine=Yes;
                OnValidate=BEGIN
                             EmailItem.SetBodyText(BodyText);
                           END;
                            }

    { 9   ;1   ;Field     ;
                Name=OutlookEdit;
                CaptionML=[ENU=Edit in Outlook;
                           ENG=Edit in Outlook];
                SourceExpr=LocalEdit;
                Visible=IsEditEnabled;
                MultiLine=Yes;
                OnValidate=BEGIN
                             IF LocalEdit = TRUE THEN
                               ShownFromEmail := ''
                             ELSE
                               ShownFromEmail := OriginalFromEmail;
                           END;
                            }

  }
  CODE
  {
    VAR
      EmailItem@1009 : Record 9500;
      OrigEmailItem@1001 : Record 9500;
      LocalEdit@1003 : Boolean;
      IsEditEnabled@1006 : Boolean;
      HasAttachment@1008 : Boolean;
      ForceOutlook@1007 : Boolean;
      OriginalFromEmail@1000 : Text[250];
      BodyText@1002 : Text;
      SendToText@1005 : Text[250];
      BccText@1010 : Text[250];
      CcText@1011 : Text[250];
      ShownFromEmail@1004 : Text;

    PROCEDURE SetValues@1(ParmEmailItem@1000 : Record 9500;ParmOutlookSupported@1005 : Boolean;ParmSmtpSupported@1001 : Boolean);
    BEGIN
      EmailItem := ParmEmailItem;
      OrigEmailItem.COPY(ParmEmailItem);

      ForceOutlook := ParmOutlookSupported AND NOT ParmSmtpSupported;
      IsEditEnabled := ParmOutlookSupported AND (CURRENTCLIENTTYPE = CLIENTTYPE::Windows);
      IF NOT IsEditEnabled THEN
        LocalEdit := FALSE
      ELSE
        LocalEdit := TRUE;

      IF EmailItem."Attachment File Path" <> '' THEN
        HasAttachment := TRUE;
    END;

    PROCEDURE GetDoEdit@6() : Boolean;
    BEGIN
      EXIT(LocalEdit);
    END;

    LOCAL PROCEDURE GetBodyText@3() : Text;
    BEGIN
      EXIT(BodyText);
    END;

    BEGIN
    END.
  }
}

