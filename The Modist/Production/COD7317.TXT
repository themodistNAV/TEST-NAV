OBJECT Codeunit 7317 Whse. Integration Management
{
  OBJECT-PROPERTIES
  {
    Date=07/09/12;
    Time=12:00:00 PM;
    Version List=NAVW17.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1003 : TextConst 'ENU=%1 must not be the Adjustment Bin Code of the location %2.;ENG=%1 must not be the Adjustment Bin Code of the location %2.';
      Text001@1002 : TextConst 'ENU=The bin %1 is Dedicated.\Do you still want to use this bin?;ENG=The bin %1 is Dedicated.\Do you still want to use this bin?';
      Text002@1001 : TextConst 'ENU=The update has been interrupted.;ENG=The update has been interrupted.';
      Text003@1000 : TextConst '@@@="%2 = Object No., %3 = Object No.";ENU=Location %1 must be set up with Bin Mandatory if the %2 %3 uses it.;ENG=Location %1 must be set up with Bin Mandatory if the %2 %3 uses it.';
      Text004@1004 : TextConst '@@@=You cannot enter a bin code of bin type Receive, Ship, or Pick.;ENU=You cannot enter a bin code of bin type %1, %2, or %3.;ENG=You cannot enter a bin code of bin type %1, %2, or %3.';
      Text005@1005 : TextConst 'ENU=You cannot enter a bin code of bin type %1 or %2.;ENG=You cannot enter a bin code of bin type %1 or %2.';

    PROCEDURE CheckBinTypeCode@59(SourceTable@1000 : Integer;BinCodeFieldCaption@1001 : Text[30];LocationCode@1002 : Code[10];BinCode@1003 : Code[20];AdditionalIdentifier@1008 : Option);
    VAR
      BinType@1005 : Record 7303;
      MachineCenter@1004 : Record 99000758;
      WorkCenter@1006 : Record 99000754;
      ItemJournalLine@1007 : Record 83;
      Location@1009 : Record 14;
      Bin@1010 : Record 7354;
      ServiceLine@1011 : Record 5902;
    BEGIN
      Location.GET(LocationCode);
      Location.TESTFIELD("Bin Mandatory");

      IF NOT Location."Directed Put-away and Pick" THEN
        EXIT;

      IF BinCode = Location."Adjustment Bin Code" THEN
        ERROR(Text000,BinCodeFieldCaption,LocationCode);

      Bin.GET(LocationCode,BinCode);
      Bin.TESTFIELD("Bin Type Code");
      BinType.GET(Bin."Bin Type Code");
      CASE SourceTable OF
        DATABASE::"Warehouse Shipment Header",
        DATABASE::"Warehouse Shipment Line":
          BinType.TESTFIELD(Ship,TRUE);
        DATABASE::"Warehouse Receipt Header",
        DATABASE::"Warehouse Receipt Line":
          BinType.TESTFIELD(Receive,TRUE);
        DATABASE::"Production Order",
        DATABASE::"Prod. Order Line",
        DATABASE::"Assembly Header":
          AllowPutawayPickOrQCBinsOnly(BinType);
        DATABASE::"Prod. Order Component",
        DATABASE::"Assembly Line":
          AllowPutawayOrQCBinsOnly(BinType);
        DATABASE::"Machine Center":
          CASE BinCodeFieldCaption OF
            MachineCenter.FIELDCAPTION("Open Shop Floor Bin Code"),
            MachineCenter.FIELDCAPTION("To-Production Bin Code"):
              AllowPutawayOrQCBinsOnly(BinType);
            MachineCenter.FIELDCAPTION("From-Production Bin Code"):
              AllowPutawayPickOrQCBinsOnly(BinType);
          END;
        DATABASE::"Work Center":
          CASE BinCodeFieldCaption OF
            WorkCenter.FIELDCAPTION("Open Shop Floor Bin Code"),
            WorkCenter.FIELDCAPTION("To-Production Bin Code"):
              AllowPutawayOrQCBinsOnly(BinType);
            WorkCenter.FIELDCAPTION("From-Production Bin Code"):
              AllowPutawayPickOrQCBinsOnly(BinType);
          END;
        DATABASE::Location:
          CASE BinCodeFieldCaption OF
            Location.FIELDCAPTION("Open Shop Floor Bin Code"),
            Location.FIELDCAPTION("To-Production Bin Code"),
            Location.FIELDCAPTION("To-Assembly Bin Code"):
              AllowPutawayOrQCBinsOnly(BinType);
            Location.FIELDCAPTION("From-Production Bin Code"),
            Location.FIELDCAPTION("From-Assembly Bin Code"):
              AllowPutawayPickOrQCBinsOnly(BinType);
          END;
        DATABASE::"Item Journal Line":
          CASE AdditionalIdentifier OF
            ItemJournalLine."Entry Type"::Output:
              AllowPutawayPickOrQCBinsOnly(BinType);
            ItemJournalLine."Entry Type"::Consumption:
              AllowPutawayOrQCBinsOnly(BinType);
          END;
        DATABASE::"Service Line":
          IF AdditionalIdentifier = ServiceLine."Document Type"::Invoice THEN
            BinType.TESTFIELD(Pick,TRUE);
      END;
    END;

    LOCAL PROCEDURE AllowPutawayOrQCBinsOnly@65(VAR BinType@1000 : Record 7303);
    BEGIN
      IF BinType.Receive OR BinType.Ship OR BinType.Pick THEN
        ERROR(Text004,BinType.FIELDCAPTION(Receive),BinType.FIELDCAPTION(Ship),BinType.FIELDCAPTION(Pick));
    END;

    LOCAL PROCEDURE AllowPutawayPickOrQCBinsOnly@66(VAR BinType@1000 : Record 7303);
    BEGIN
      IF BinType.Receive OR BinType.Ship THEN
        ERROR(Text005,BinType.FIELDCAPTION(Receive),BinType.FIELDCAPTION(Ship));
    END;

    PROCEDURE CheckIfBinDedicatedOnSrcDoc@69(LocationCode@1000 : Code[10];VAR BinCode@1001 : Code[20];IssueWarning@1002 : Boolean);
    VAR
      Bin@1003 : Record 7354;
    BEGIN
      IF BinCode <> '' THEN BEGIN
        Bin.GET(LocationCode,BinCode);
        IF Bin.Dedicated THEN
          IF IssueWarning THEN BEGIN
            IF NOT
               CONFIRM(
                 STRSUBSTNO(Text001,BinCode),FALSE)
            THEN
              ERROR(Text002)
          END ELSE
            BinCode := '';
      END;
    END;

    PROCEDURE CheckBinCode@63(LocationCode@1000 : Code[10];BinCode@1001 : Code[20];BinCaption@1003 : Text[30];SourceTable@1005 : Integer;Number@1006 : Code[20]);
    VAR
      Bin@1007 : Record 7354;
      Location@1008 : Record 14;
    BEGIN
      IF BinCode <> '' THEN BEGIN
        Location.GET(LocationCode);
        CheckLocationCode(Location,SourceTable,Number);
        Bin.GET(LocationCode,BinCode);
        CheckBinTypeCode(SourceTable,
          BinCaption,
          LocationCode,
          BinCode,0);
      END;
    END;

    PROCEDURE CheckLocationCode@62(Location@1000 : Record 14;SourceTable@1001 : Integer;Number@1002 : Code[20]);
    VAR
      WorkCenter@1004 : Record 99000754;
      MachineCenter@1005 : Record 99000758;
      CaptionText@1003 : Text[30];
    BEGIN
      CASE SourceTable OF
        DATABASE::"Work Center":
          CaptionText := WorkCenter.TABLECAPTION;
        DATABASE::"Machine Center":
          CaptionText := MachineCenter.TABLECAPTION;
        DATABASE::Location:
          CaptionText := Location.TABLECAPTION;
      END;
      IF NOT Location."Bin Mandatory" THEN
        ERROR(Text003,
          Location.Code,
          CaptionText,
          Number);
    END;

    PROCEDURE IsOpenShopFloorBin@61(LocationCode@1000 : Code[10];BinCode@1001 : Code[20]) : Boolean;
    VAR
      Location@1002 : Record 14;
      WorkCenter@1003 : Record 99000754;
      MachineCenter@1004 : Record 99000758;
    BEGIN
      Location.GET(LocationCode);
      IF BinCode = Location."Open Shop Floor Bin Code" THEN
        EXIT(TRUE);

      WorkCenter.SETRANGE("Location Code",LocationCode);
      WorkCenter.SETRANGE("Open Shop Floor Bin Code",BinCode);
      IF WorkCenter.COUNT > 0 THEN
        EXIT(TRUE);

      MachineCenter.SETRANGE("Location Code",LocationCode);
      MachineCenter.SETRANGE("Open Shop Floor Bin Code",BinCode);
      IF MachineCenter.COUNT > 0 THEN
        EXIT(TRUE);

      EXIT(FALSE);
    END;

    PROCEDURE CheckLocationOnManufBins@9(Location@1001 : Record 14);
    VAR
      WorkCenter@1000 : Record 99000754;
    BEGIN
      WorkCenter.SETRANGE("Location Code",Location.Code);
      IF WorkCenter.FINDSET(FALSE) THEN
        REPEAT
          CheckLocationCode(Location,DATABASE::"Work Center",WorkCenter."No.");
        UNTIL WorkCenter.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

