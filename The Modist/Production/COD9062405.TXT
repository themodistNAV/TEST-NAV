OBJECT Codeunit 9062405 Ask nOra - Search Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=10/05/16;
    Time=12:00:00 PM;
    Version List=NA2016.15;
  }
  PROPERTIES
  {
    OnRun=VAR
            SearchResultsSummary@1000000000 : Record 9062523;
          BEGIN
            MESSAGE('%1',QuickSearch_SingleSentence('Hand','27','',FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,'PCTEST',0,SearchResultsSummary));
          END;

  }
  CODE
  {
    VAR
      SQLIntegration@1000000000 : Codeunit 9062299;
      TNPUtils@1000000001 : Codeunit 9062229;

    PROCEDURE ">>> QUICK SEARCH >>>"@1000000025();
    BEGIN
    END;

    PROCEDURE QuickSearch_NextWordAfter@1000000037(SentenceID@1000000010 : Integer;StartAfterWordNo@1000000011 : Integer;TableNoFilter@1000000009 : Text;FullWordMatch@1000000008 : Boolean;ReuseWords@1000000007 : Boolean;UseIgnoredWords@1000000006 : Boolean;MustBeConsecutiveWords@1000000005 : Boolean;MustMatchWholeValue@1000000003 : Boolean;MarkAsUsedForCode@1000000002 : Code[50];MaxRankToReturn@1000000001 : Integer;VAR SearchResultsSummary@1000000000 : Record 9062523) NumberOfResults : Integer;
    BEGIN
      NumberOfResults :=
        ExecuteSearch(
          CreateSearch(SentenceID,TableNoFilter,'',FALSE,FullWordMatch,ReuseWords,UseIgnoredWords,MustBeConsecutiveWords,FALSE,MustMatchWholeValue,MarkAsUsedForCode,MaxRankToReturn,StartAfterWordNo,1),
          SearchResultsSummary);
    END;

    PROCEDURE QuickSearch_SingleSentence@1000000034(SentenceText@1000000010 : Text;TableNoFilter@1000000009 : Text;WordTypeFilter@1000000018 : Text;FullWordMatch@1000000008 : Boolean;ReuseWords@1000000007 : Boolean;UseIgnoredWords@1000000006 : Boolean;MustBeConsecutiveWords@1000000005 : Boolean;SearchWithEachWordAtStart@1000000004 : Boolean;MustMatchWholeValue@1000000003 : Boolean;MarkAsUsedForCode@1000000002 : Code[50];MaxRankToReturn@1000000001 : Integer;VAR SearchResultsSummary@1000000000 : Record 9062523) NumberOfResults : Integer;
    VAR
      ANConv@1000000011 : Record 9062511;
      ANConvMgt@1000000012 : Codeunit 9062400;
      ANConvEnt@1000000014 : Record 9062511;
      SentenceID@1000000013 : Integer;
      SearchID@1000000015 : Integer;
      ANSentenceMgt@1000000016 : Codeunit 9062401;
      ANSentence@1000000017 : Record 9062517;
    BEGIN
      ANSentence.INIT;
      ANSentence.INSERT(TRUE);

      ANSentenceMgt.SetSentence(ANSentence."Sentence ID");
      ANSentenceMgt.SetSentenceText(SentenceText);
      ANSentenceMgt.Read(TRUE);

      SearchID := CreateSearch(SentenceID,TableNoFilter,'',FALSE,FullWordMatch,ReuseWords,UseIgnoredWords,MustBeConsecutiveWords,SearchWithEachWordAtStart,MustMatchWholeValue,MarkAsUsedForCode,MaxRankToReturn,0,0);
      NumberOfResults := ExecuteSearch(SearchID,SearchResultsSummary);
    END;

    PROCEDURE QuickSearch@1000000028(SentenceID@1000000007 : Integer;TableNoFilter@1000000006 : Text;WordTypeFilter@1000000011 : Text;FullWordMatch@1000000005 : Boolean;ReuseWords@1000000004 : Boolean;UseIgnoredWords@1000000003 : Boolean;MustBeConsecutiveWords@1000000002 : Boolean;SearchWithEachWordAtStart@1000000001 : Boolean;MustMatchWholeValue@1000000009 : Boolean;MarkAsUsedForCode@1000000000 : Code[50];MaxRankToReturn@1000000010 : Integer;VAR SearchResultsSummary@1000000008 : Record 9062523) NumberOfResults : Integer;
    BEGIN
      NumberOfResults :=
        ExecuteSearch(
          CreateSearch(SentenceID,TableNoFilter,WordTypeFilter,FALSE,FullWordMatch,ReuseWords,UseIgnoredWords,MustBeConsecutiveWords,SearchWithEachWordAtStart,MustMatchWholeValue,MarkAsUsedForCode,MaxRankToReturn,0,0),
          SearchResultsSummary);
    END;

    PROCEDURE QuickSearch_ForField@1000000029(SentenceID@1000000008 : Integer;ReuseWords@1000000005 : Boolean;UseIgnoredWords@1000000004 : Boolean;MarkAsUsedForCode@1000000001 : Code[50];VAR SearchResultsSummary@1000000000 : Record 9062523) NumberOfResults : Integer;
    BEGIN
      NumberOfResults :=
        ExecuteSearch(
          CreateSearch_ForField(SentenceID,ReuseWords,UseIgnoredWords,MarkAsUsedForCode)
          ,SearchResultsSummary);
    END;

    PROCEDURE QuickSearch_ForSearchResults@1000000032(OriginalSearchID@1000000004 : Integer;SentenceID@1000000003 : Integer;ReuseWords@1000000002 : Boolean;UseIgnoredWords@1000000001 : Boolean;MarkAsUsedForCode@1000000000 : Code[50];VAR SearchResultsSummary@1000000005 : Record 9062523) NumberOfResults : Integer;
    BEGIN
      NumberOfResults :=
        ExecuteSearch(
          CreateSearch_ForSearchResult(OriginalSearchID,SentenceID,ReuseWords,UseIgnoredWords,MarkAsUsedForCode)
          ,SearchResultsSummary);
    END;

    PROCEDURE QuickSearch_StartAfterWord@1000000035(SentenceID@1000000022 : Integer;StartAfterWordNo@1000000000 : Integer;TableNoFilter@1000000021 : Text;WordTypeFilter@1000000020 : Text;FullWordMatch@1000000019 : Boolean;ReuseWords@1000000018 : Boolean;UseIgnoredWords@1000000017 : Boolean;MustBeConsecutiveWords@1000000016 : Boolean;SearchWithEachWordAtStart@1000000015 : Boolean;MustMatchWholeValue@1000000014 : Boolean;MarkAsUsedForCode@1000000013 : Code[50];MaxRankToReturn@1000000012 : Integer;VAR SearchResultsSummary@1000000004 : Record 9062523) NumberOfResults : Integer;
    BEGIN
      NumberOfResults :=
        ExecuteSearch(
          CreateSearch(SentenceID,TableNoFilter,'',FALSE,FullWordMatch,ReuseWords,UseIgnoredWords,MustBeConsecutiveWords,FALSE,MustMatchWholeValue,MarkAsUsedForCode,MaxRankToReturn,StartAfterWordNo,0),
          SearchResultsSummary);
    END;

    PROCEDURE "<<< QUICK SEARCH <<<"@1000000027();
    BEGIN
    END;

    PROCEDURE ">>> PRE SEARCH >>>"@1000000018();
    BEGIN
    END;

    PROCEDURE CreateSearch@1000000019(SentenceID@1000000008 : Integer;TableNoFilter@1000000007 : Text;WordTypeFilter@1000000013 : Text;UseUnalteredWords@1000000014 : Boolean;FullWordMatch@1000000006 : Boolean;ReuseWords@1000000005 : Boolean;UseIgnoredWords@1000000004 : Boolean;MustBeConsecutiveWords@1000000003 : Boolean;SearchWithEachWordAtStart@1000000002 : Boolean;MustMatchWholeValue@1000000009 : Boolean;MarkAsUsedForCode@1000000001 : Code[50];MaxRankToReturn@1000000010 : Integer;StartAfterWordNo@1000000011 : Integer;NumWordsToUse@1000000012 : Integer) SearchID : Integer;
    VAR
      ANSearch@1000000000 : Record 9062507;
    BEGIN
      ANSearch.INIT;
      ANSearch.VALIDATE("Sentence ID",SentenceID);
      ANSearch.VALIDATE(TableNoFilter,TableNoFilter);
      ANSearch.VALIDATE(FullWordMatch,FullWordMatch);
      ANSearch.VALIDATE(ReuseWords,ReuseWords);
      ANSearch.VALIDATE(UseIgnoredWords,UseIgnoredWords);
      ANSearch.VALIDATE(MustBeConsecutiveWords,MustBeConsecutiveWords);
      ANSearch.VALIDATE(SearchWithEachWordAtStart,SearchWithEachWordAtStart);
      ANSearch.VALIDATE(MarkAsUsedForCode,MarkAsUsedForCode);
      ANSearch.VALIDATE(MustMatchWholeValue,MustMatchWholeValue);
      ANSearch.VALIDATE("Max. Rank to Return",MaxRankToReturn);
      ANSearch.VALIDATE("Start After Word No.",StartAfterWordNo);
      ANSearch.VALIDATE("No. Words to Use",NumWordsToUse);
      ANSearch.VALIDATE("Word Type Filter",WordTypeFilter);
      ANSearch.VALIDATE("Use Unaltered Words",UseUnalteredWords);
      ANSearch.INSERT(TRUE);

      IF TableNoFilter <> '' THEN AddDefaultTablesFields_toSearch(ANSearch."Search ID",TableNoFilter);

      EXIT(ANSearch."Search ID");
    END;

    PROCEDURE CreateSearch_ForField@1000000011(SentenceID@1000000008 : Integer;ReuseWords@1000000005 : Boolean;UseIgnoredWords@1000000004 : Boolean;MarkAsUsedForCode@1000000001 : Code[50]) SearchID : Integer;
    BEGIN
      EXIT(CreateSearch(SentenceID,FORMAT(DATABASE::Field),'',FALSE,TRUE,ReuseWords,UseIgnoredWords,TRUE,TRUE,FALSE,MarkAsUsedForCode,1,0,0));
    END;

    PROCEDURE CreateSearch_ForSearchResult@1000000013(OriginalSearchID@1000000004 : Integer;SentenceID@1000000005 : Integer;ReuseWords@1000000003 : Boolean;UseIgnoredWords@1000000001 : Boolean;MarkAsUsedForCode@1000000000 : Code[50]) NewSearchID : Integer;
    VAR
      ANSearch@1000000002 : Record 9062507;
    BEGIN
      //Create a New Search against the Search Results Summary table
      NewSearchID := CreateSearch(SentenceID,FORMAT(DATABASE::"Ask nOra - Search Results"),'',FALSE,FALSE,ReuseWords,UseIgnoredWords,FALSE,TRUE,FALSE,MarkAsUsedForCode,1,0,0);

      //Add a Filter to the New Search to only look at the Search Results for the Original Search
      AddSearchTableFilter(NewSearchID,DATABASE::"Ask nOra - Search Results",1,FORMAT(OriginalSearchID));
      AddDefaultFields_toSearch(NewSearchID,DATABASE::"Ask nOra - Search Results");
    END;

    PROCEDURE "--- Search Tables and Filters ---"@1000000014();
    BEGIN
    END;

    PROCEDURE AddSearchTable@1000000015(SearchID@1000000000 : Integer;TableNo@1000000001 : Integer);
    VAR
      ANSearchTable@1000000002 : Record 9062508;
      ANSearchTableSetup@1000000003 : Record 9062515;
    BEGIN
      IF NOT ANSearchTable.GET(SearchID,TableNo) THEN BEGIN
        IF NOT ANSearchTableSetup.GET(TableNo) THEN BEGIN
          ERROR('The Table %1 has not been configured for use with Ask nOra',TableNo);
        END;

        ANSearchTable.INIT;
        ANSearchTable.VALIDATE("Search ID",SearchID);
        ANSearchTable.VALIDATE("Table No.",TableNo);
        ANSearchTable.INSERT(TRUE);
      END;
    END;

    PROCEDURE AddSearchTableFilter@1000000016(SearchID@1000000000 : Integer;TableNo@1000000001 : Integer;FieldNo@1000000002 : Integer;FilterText@1000000003 : Text[250]);
    VAR
      ANSearchTable@1000000004 : Record 9062508;
      AnSearchTableFilter@1000000005 : Record 9062510;
    BEGIN
      IF NOT AnSearchTableFilter.GET(SearchID,TableNo,FieldNo) THEN BEGIN
        IF NOT ANSearchTable.GET(SearchID,TableNo) THEN AddSearchTable(SearchID,TableNo);

        AnSearchTableFilter.INIT;
        AnSearchTableFilter.VALIDATE("Search ID",SearchID);
        AnSearchTableFilter.VALIDATE("Table No.",TableNo);
        AnSearchTableFilter.VALIDATE("Field No.",FieldNo);
        AnSearchTableFilter.VALIDATE("Filter Text",FilterText);
        AnSearchTableFilter.INSERT(TRUE);
      END ELSE BEGIN
        AnSearchTableFilter.VALIDATE("Filter Text",FilterText);
        AnSearchTableFilter.MODIFY(TRUE);
      END;
    END;

    PROCEDURE AddSearchField@1000000017(SearchID@1000000000 : Integer;TableNo@1000000001 : Integer;FieldType@1000000005 : 'Field,Enhanced Field';FieldNo@1000000002 : Integer);
    VAR
      ANSearchTable@1000000003 : Record 9062508;
      ANSearchField@1000000004 : Record 9062509;
    BEGIN
      IF NOT ANSearchField.GET(SearchID,TableNo,FieldType,FieldNo) THEN BEGIN
        IF NOT ANSearchTable.GET(SearchID,TableNo) THEN AddSearchTable(SearchID,TableNo);

        ANSearchField.INIT;
        ANSearchField.VALIDATE("Search ID",SearchID);
        ANSearchField.VALIDATE("Table No.",TableNo);
        ANSearchField.VALIDATE(Type,FieldType);
        ANSearchField.VALIDATE("Field No.",FieldNo);
        ANSearchField.INSERT(TRUE);
      END;
    END;

    PROCEDURE AddDefaultTablesFields_toSearch@1000000021(SearchID@1000000000 : Integer;TableNoFilter@1000000003 : Text);
    VAR
      ANSearchTableSetup@1000000001 : Record 9062515;
      ANSearchFieldSetup@1000000002 : Record 9062516;
    BEGIN
      ANSearchTableSetup.SETFILTER("Table No.",TableNoFilter);
      ANSearchTableSetup.SETRANGE("System Table",FALSE);
      IF NOT ANSearchTableSetup.FINDSET THEN BEGIN
        ANSearchTableSetup.SETFILTER("System Table",'');
      END;

      IF ANSearchTableSetup.FINDSET THEN BEGIN
        REPEAT
          AddSearchTable(SearchID,ANSearchTableSetup."Table No.");

          ANSearchFieldSetup.SETRANGE("Table No.",ANSearchTableSetup."Table No.");
          IF ANSearchFieldSetup.FINDSET THEN BEGIN
            REPEAT
              AddSearchField(SearchID,ANSearchFieldSetup."Table No.",ANSearchFieldSetup.Type,ANSearchFieldSetup."Field No.");
            UNTIL ANSearchFieldSetup.NEXT = 0;
          END;
        UNTIL ANSearchTableSetup.NEXT = 0;
      END;
    END;

    PROCEDURE AddDefaultFields_toSearch@1000000033(SearchID@1000000001 : Integer;TableNo@1000000000 : Integer);
    VAR
      ANSearchTable@1000000003 : Record 9062508;
      ANSearchField@1000000002 : Record 9062509;
      ANSearchFieldSetup@1000000004 : Record 9062516;
    BEGIN
      ANSearchFieldSetup.SETRANGE("Table No.",TableNo);
      IF ANSearchFieldSetup.FINDSET THEN BEGIN
        IF NOT ANSearchTable.GET(SearchID,TableNo) THEN AddSearchTable(SearchID,TableNo);
        REPEAT
          AddSearchField(SearchID,ANSearchFieldSetup."Table No.",ANSearchFieldSetup.Type,ANSearchFieldSetup."Field No.");
        UNTIL ANSearchFieldSetup.NEXT = 0
      END;
    END;

    PROCEDURE "<<< PRE SEARCH <<<"@1000000022();
    BEGIN
    END;

    PROCEDURE ">>> EXECUTE SEARCH >>>"@1000000023();
    BEGIN
    END;

    PROCEDURE ExecuteSearch@1000000002(SearchID@1000000000 : Integer;VAR SearchResultsSummary@1000000006 : Record 9062523) NumberOfResults : Integer;
    VAR
      ANSearch@1000000023 : Record 9062507;
      Sentence@1000000001 : Record 9062517;
      SentenceWord@1000000002 : Record 9062518;
      FirstSearch@1000000003 : Boolean;
      SearchResults_Temp@1000000004 : TEMPORARY Record 9062514;
      NumResults@1000000005 : Integer;
      SearchWord@1000000013 : Text;
      SearchResults@1000000015 : Record 9062514;
      SentenceWordUse_Temp@1000000016 : TEMPORARY Record 9062506;
      SentenceWordUse@1000000017 : Record 9062506;
      EndSearch@1000000018 : Boolean;
      WordCounter@1000000020 : Integer;
      i@1000000021 : Integer;
      MaxEntryNo@1000000022 : Integer;
      NumWordsCounter@1000000008 : Integer;
      MaxWordsUsed@1000000007 : Boolean;
      Test@1000000009 : Boolean;
      SentenceWordText@1000000010 : Text;
    BEGIN
      ANSearch.GET(SearchID);

      ANSearch.VALIDATE("Start Time",CURRENTDATETIME);

      Sentence.GET(ANSearch."Sentence ID");
      SentenceWord.SETRANGE("Sentence ID",Sentence."Sentence ID");

      IF ANSearch."Start After Word No." <> 0 THEN SentenceWord.SETFILTER("Word ID",'>%1',ANSearch."Start After Word No.");
      IF NOT ANSearch.ReuseWords THEN SentenceWord.SETRANGE(Used,FALSE);
      IF NOT ANSearch.UseIgnoredWords THEN SentenceWord.SETRANGE(Ignore,FALSE);
      IF ANSearch."Word Type Filter" <> '' THEN SentenceWord.SETFILTER(Type,ANSearch."Word Type Filter");

      IF SentenceWord.FINDSET THEN BEGIN
        NumWordsCounter := 0;
        FirstSearch := TRUE;
        REPEAT
          IF ANSearch.MarkAsUsedForCode = 'FIELD' THEN BEGIN
          Test := TRUE;
          END;

          IF ANSearch."No. Words to Use" <> 0 THEN NumWordsCounter += 1;

          IF ANSearch."Use Unaltered Words" THEN
            SentenceWordText := SentenceWord."Unaltered Text"
          ELSE
            SentenceWordText := SentenceWord.Text;

          IF FirstSearch THEN BEGIN
            SearchWord := SentenceWordText;
            NumResults := FindStringInNAV(ANSearch."Search ID",SearchWord,ANSearch.TableNoFilter,ANSearch.FullWordMatch,SearchResults_Temp);
          END ELSE BEGIN
            IF ANSearch.MustBeConsecutiveWords THEN
              SearchWord += ' ' + SentenceWordText
            ELSE
              SearchWord := SentenceWordText;

            NumResults := FindStringInResults(SearchWord,ANSearch.FullWordMatch,SearchResults_Temp);
          END;
          SearchResults_Temp.RESET;

          //MESSAGE('%1 results for %2 (FirstSearch:%3)',NumResults,SearchWord,FirstSearch);
          IF NumResults <> 0 THEN BEGIN
            FirstSearch := FALSE;
            SearchResults_Temp.FINDSET;
            REPEAT
              IF NOT SentenceWordUse_Temp.GET(SentenceWord."Sentence ID",SentenceWord."Word ID",0,SearchResults_Temp."Entry No.") THEN BEGIN
                SentenceWordUse_Temp.INIT;
                SentenceWordUse_Temp.VALIDATE("Sentence ID",SentenceWord."Sentence ID");
                SentenceWordUse_Temp.VALIDATE("Word ID",SentenceWord."Word ID");
                SentenceWordUse_Temp.VALIDATE("Use For Search ID",0);
                SentenceWordUse_Temp.VALIDATE("Use For Result Entry No.",SearchResults_Temp."Entry No.");
                SentenceWordUse_Temp.VALIDATE("Use For Code",ANSearch.MarkAsUsedForCode);
                SentenceWordUse_Temp.INSERT(TRUE);
              END;
            UNTIL SearchResults_Temp.NEXT = 0;
          END;

          IF SentenceWord.NEXT = 0 THEN BEGIN
            IF NOT ANSearch.SearchWithEachWordAtStart THEN BEGIN
              //store those results >>>
              NumberOfResults += CompileSearchResults(SearchResults_Temp,SearchResults,SentenceWordUse_Temp,SentenceWordUse,ANSearch."Search ID",MaxEntryNo);
              //store those result <<<

              EndSearch := TRUE;
            END ELSE BEGIN
              //store those results >>>
              NumberOfResults += CompileSearchResults(SearchResults_Temp,SearchResults,SentenceWordUse_Temp,SentenceWordUse,ANSearch."Search ID",MaxEntryNo);
              //store those result <<<

              //Start from the next word >>>
              WordCounter += 1;
              SentenceWord.FINDFIRST;
              EndSearch := SentenceWord.NEXT(WordCounter) = 0;
              FirstSearch := TRUE;
              //Start from the next word <<<
            END;
          END;
          IF ANSearch."No. Words to Use" = 0 THEN
            MaxWordsUsed := FALSE
          ELSE
            MaxWordsUsed := NumWordsCounter >= ANSearch."No. Words to Use";
        UNTIL EndSearch OR (WordCounter = SentenceWord.COUNT) OR MaxWordsUsed;
      END;

      IF NumberOfResults > 0 THEN BEGIN
        BuildSearchSummary(ANSearch."Search ID",SearchResultsSummary);
        SearchResultsSummary.SETRANGE("Search ID",ANSearch."Search ID");

        ANSearch.VALIDATE("End Time",CURRENTDATETIME);
        ANSearch.MODIFY;
        EXIT(SearchResultsSummary.COUNT);
      END ELSE BEGIN
        ANSearch.VALIDATE("End Time",CURRENTDATETIME);
        ANSearch.MODIFY;

        EXIT(0);
      END;
    END;

    PROCEDURE CompileSearchResults@1000000008(VAR SearchResults_Temp@1000000001 : TEMPORARY Record 9062514;VAR SearchResults@1000000000 : Record 9062514;VAR SentenceWordUse_Temp@1000000004 : TEMPORARY Record 9062506;VAR SentenceWordUse@1000000003 : Record 9062506;VAR SearchID@1000000002 : Integer;VAR StartFromEntryNo@1000000005 : Integer) NumberOfResults : Integer;
    VAR
      AddEntryNo@1000000006 : Integer;
      ANSearch@1000000007 : Record 9062507;
    BEGIN
      ANSearch.GET(SearchID);

      AddEntryNo := StartFromEntryNo;
      IF SearchResults_Temp.FINDSET THEN BEGIN
        REPEAT
          SearchResults.RESET;
          SearchResults.SETRANGE("Search ID",SearchID);
          SearchResults.SETRANGE("Matched From Text",SearchResults_Temp."Matched From Text");
          SearchResults.SETRANGE(Text,SearchResults_Temp.Text);
          SearchResults.SETRANGE("Table No.",SearchResults_Temp."Table No.");
          SearchResults.SETRANGE("Position Text",SearchResults_Temp."Position Text");
          SearchResults.SETRANGE("Field No.",SearchResults_Temp."Field No.");
          IF NOT SearchResults.FINDSET THEN BEGIN
            SearchResults.RESET;

            SearchResults.INIT;
            SearchResults.VALIDATE("Search ID",SearchID);
            SearchResults.VALIDATE("Entry No.", AddEntryNo + SearchResults_Temp."Entry No.");
            SearchResults.VALIDATE("Matched From Text",SearchResults_Temp."Matched From Text");
            SearchResults.VALIDATE(Text,SearchResults_Temp.Text);
            SearchResults.VALIDATE("Table No.",SearchResults_Temp."Table No.");
            SearchResults.VALIDATE("Position Text",SearchResults_Temp."Position Text");
            SearchResults.VALIDATE("Field No.",SearchResults_Temp."Field No.");
            SearchResults.VALIDATE("Ranking Points",RankSearchResult(SearchResults));
            SearchResults.INSERT(TRUE);

            StartFromEntryNo := SearchResults."Entry No.";
          END;

          CLEAR(SearchResults);
        UNTIL SearchResults_Temp.NEXT = 0;

        IF SentenceWordUse_Temp.FINDSET THEN BEGIN
          REPEAT
            IF SearchResults.GET(SearchID,AddEntryNo + SentenceWordUse_Temp."Use For Result Entry No.") THEN BEGIN
              SentenceWordUse.INIT;
              SentenceWordUse.VALIDATE("Sentence ID",SentenceWordUse_Temp."Sentence ID");
              SentenceWordUse.VALIDATE("Word ID",SentenceWordUse_Temp."Word ID");
              SentenceWordUse.VALIDATE("Use For Search ID",SearchID);
              SentenceWordUse.VALIDATE("Use For Result Entry No.",AddEntryNo + SentenceWordUse_Temp."Use For Result Entry No.");
              SentenceWordUse.VALIDATE("Use For Code",SentenceWordUse_Temp."Use For Code");
              SentenceWordUse.INSERT(TRUE);
            END;
          UNTIL SentenceWordUse_Temp.NEXT = 0;
        END;
      END;

      NumberOfResults := SearchResults_Temp.COUNT;
      SearchResults_Temp.DELETEALL(TRUE);
      SentenceWordUse_Temp.DELETEALL(TRUE);
    END;

    PROCEDURE BuildSearchSummary@1000000007(SearchID@1000000001 : Integer;VAR Summary@1000000003 : Record 9062523) NumResults : Integer;
    VAR
      SearchResults@1000000002 : Record 9062514;
      CurrRank@1000000000 : Integer;
      CurrRankingPoints@1000000004 : Decimal;
      ANSearch@1000000005 : Record 9062507;
    BEGIN
      ANSearch.GET(SearchID);
      IF ANSearch.MustMatchWholeValue THEN BEGIN
        SearchResults.SETRANGE("Search ID",SearchID);
        SearchResults.SETRANGE("All Words Matched",FALSE);
        IF SearchResults.FINDSET THEN SearchResults.DELETEALL(TRUE);

        SearchResults.RESET;
      END;

      Summary.SETRANGE("Search ID",SearchID);
      IF Summary.FINDSET THEN Summary.DELETEALL(FALSE);

      SearchResults.SETRANGE("Search ID",SearchID);
      IF SearchResults.FINDSET THEN BEGIN
        REPEAT
          IF NOT Summary.GET(SearchResults."Search ID",SearchResults."Table No.",SearchResults."Position Text") THEN BEGIN
            CLEAR(Summary);
            Summary.INIT;
            Summary.VALIDATE("Search ID",SearchResults."Search ID");
            Summary.VALIDATE("Table No.",SearchResults."Table No.");
            Summary.VALIDATE("Position Text",SearchResults."Position Text");
            Summary.INSERT(TRUE);
          END;

          SearchResults.CALCFIELDS("Max. Word Used");
          IF SearchResults."Max. Word Used" > Summary."Max. Word Used" THEN BEGIN
            Summary.VALIDATE("Max. Word Used",SearchResults."Max. Word Used");
            Summary.MODIFY(TRUE);
          END;
        UNTIL SearchResults.NEXT = 0;
      END;

      Summary.SETRANGE("Search ID",SearchID);
      IF Summary.FINDSET THEN BEGIN
        REPEAT
          Summary.CALCFIELDS("No. Results FlowField");
          Summary.VALIDATE("No. Results",Summary."No. Results FlowField");
          Summary.VALIDATE("Ranking Points",RankSearchResultSummary(Summary));
          Summary.MODIFY(TRUE);
        UNTIL Summary.NEXT = 0;

        Summary.SETCURRENTKEY("Search ID","Ranking Points");
        Summary.ASCENDING(FALSE);
        Summary.FINDFIRST;
        CurrRankingPoints := 0;
        REPEAT
          IF (CurrRank = 0) OR
             (Summary."Ranking Points" * 0.8 > CurrRankingPoints) OR (Summary."Ranking Points" * 1.2 < CurrRankingPoints) THEN BEGIN
            CurrRank += 1;
            CurrRankingPoints := Summary."Ranking Points";
          END;

          IF (CurrRank <= ANSearch."Max. Rank to Return") OR (ANSearch."Max. Rank to Return" = 0) THEN BEGIN
            Summary.VALIDATE("Rank Position",CurrRank);
            Summary.MODIFY(TRUE);
          END;

        UNTIL (Summary.NEXT = 0) OR ( (ANSearch."Max. Rank to Return" <> 0) AND (CurrRank > ANSearch."Max. Rank to Return") );
        IF ANSearch."Max. Rank to Return" <> 0 THEN BEGIN
          Summary.SETFILTER("Rank Position",'<>%1&<=%2',0,ANSearch."Max. Rank to Return");
        END;
      END;
      Summary.SETCURRENTKEY("Search ID","Rank Position");
      IF NOT Summary.FINDFIRST THEN;
      EXIT(Summary.COUNT);
    END;

    PROCEDURE SQLFilterSearch@1000000006(TableNo@1000000012 : Integer;SearchFieldNo@1000000008 : Integer;SearchTerm@1000000005 : Text;FullWordMatch@1000000017 : Boolean;VAR ANSearchResults@1000000010 : TEMPORARY Record 9062514;ResultStartNo@1000000013 : Integer) NumResults : Integer;
    VAR
      lSqlQueryTmp@1000000000 : TEMPORARY Record 9062331;
      lSqlQueryParameterTmp@1000000001 : TEMPORARY Record 9062332;
      lSqlQueryResultTmp@1000000002 : TEMPORARY Record 9062333;
      lFieldValue@1000000003 : Variant;
      tmptext@1000000006 : Text;
      i@1000000009 : Integer;
      RecordNo@1000000011 : Integer;
      Obj@1000000004 : Record 2000000001;
      Field@1000000014 : Record 2000000041;
      TableName@1000000015 : Text;
      SearchFieldName@1000000016 : Text;
      SearchFieldName2@1000000024 : Text;
      KeyFieldSelect@1000000018 : Text;
      PrimKeyFieldID@1000000019 : Integer;
      SearchFieldIsInKey@1000000020 : Boolean;
      ResultPK@1000000021 : ARRAY [5] OF Text;
      PKFieldName@1000000026 : ARRAY [5] OF Text;
      NoKeys@1000000022 : Integer;
      NoKeysSet@1000000023 : Integer;
      KeyFieldName@1000000007 : Text;
    BEGIN
      //Get the Table Name
      Obj.SETRANGE(Type,Obj.Type::TableData);
      Obj.SETRANGE(ID,TableNo);
      Obj.FINDFIRST;
      TableName := Obj.Name;

      //Get the Search Field Name
      Field.GET(Obj.ID,SearchFieldNo);
      SearchFieldName := SQLIntegration.ConvertIdentifierToSql(Field.FieldName);

      //Get the Primary Key Select text
      i := 0;
      NoKeys := 0;
      REPEAT
        i += 1;
        PrimKeyFieldID := TNPUtils.GetPrimaryKeyFieldID(Obj.ID,'',i);
        IF PrimKeyFieldID <> 0 THEN BEGIN
          Field.GET(Obj.ID,PrimKeyFieldID);
          KeyFieldName := SQLIntegration.ConvertIdentifierToSql(Field.FieldName);

          IF KeyFieldSelect <> '' THEN KeyFieldSelect += ', ';
          KeyFieldSelect += 'cast([' + KeyFieldName + '] as VARCHAR(250)) as [' + KeyFieldName + ']';
          PKFieldName[i] := KeyFieldName;
          IF SearchFieldName = KeyFieldName THEN SearchFieldIsInKey := TRUE;
          NoKeys += 1;
        END;
      UNTIL PrimKeyFieldID = 0;



      SQLIntegration.Connect();

      SQLIntegration.ClearQueries();

      lSqlQueryParameterTmp.RESET();
      lSqlQueryParameterTmp.DELETEALL();
      lSqlQueryTmp.INIT();
      lSqlQueryTmp.Code := 'SIMPLEFILTERSEARCH';
      lSqlQueryTmp.Description := 'Simple Filter Search';

      tmptext :=
      'SELECT TOP 1000 ' + KeyFieldSelect;
      IF NOT SearchFieldIsInKey THEN tmptext += ', [' + SearchFieldName + ']';
      tmptext +=
      ' FROM [dbo].[' + SQLIntegration.ConvertIdentifierToSql(COMPANYNAME) +'$' + SQLIntegration.ConvertIdentifierToSql(TableName) + '] ' +
      'WHERE ';
      SearchFieldName2 := '[' + SearchFieldName + ']';
      SearchFieldName2 := 'lower(' + SearchFieldName2 + ')';
      SearchTerm := LOWERCASE(SearchTerm);
      IF FullWordMatch THEN BEGIN
        tmptext +=  SearchFieldName2 + ' LIKE ''% ' + SearchTerm + ' %'' ';
        tmptext += 'OR ' + SearchFieldName2 + ' LIKE ''% ' + SearchTerm + ''' ';
        tmptext += 'OR ' + SearchFieldName2 + ' LIKE ''' + SearchTerm + ' %'' ';
        tmptext += 'OR ' + SearchFieldName2 + ' = ''' + SearchTerm + ''' ';
      END ELSE
        tmptext += SearchFieldName2 + ' LIKE ''%' + SearchTerm + '%''';

      lSqlQueryTmp.SetQueryText(tmptext);
      SQLIntegration.AddQueryTmp(lSqlQueryTmp, lSqlQueryParameterTmp);
      SQLIntegration.ExecuteQueries();
      SQLIntegration.GetQueryResults(lSqlQueryResultTmp);

      IF (lSqlQueryResultTmp.FINDSET()) THEN BEGIN
        REPEAT
          lSqlQueryResultTmp.GetValue(lFieldValue);
          IF lSqlQueryResultTmp."Record No." <> RecordNo THEN BEGIN
            RecordNo := lSqlQueryResultTmp."Record No.";

            CLEAR(ANSearchResults);
            ANSearchResults.INIT;
            ANSearchResults.VALIDATE("Entry No.",lSqlQueryResultTmp."Record No." + ResultStartNo);
            ANSearchResults.VALIDATE("Table No.", TableNo);
            ANSearchResults.VALIDATE("Field No." ,SearchFieldNo);
            ANSearchResults.VALIDATE("Matched From Text" ,SearchTerm);

            ANSearchResults.INSERT(TRUE);

            ResultPK[1] := '';
            ResultPK[2] := '';
            ResultPK[3] := '';
            ResultPK[4] := '';
            ResultPK[5] := '';
            NoKeysSet := 0;

          END;
          IF lSqlQueryResultTmp."Field Name" = SearchFieldName THEN BEGIN
            ANSearchResults.GET(0,lSqlQueryResultTmp."Record No." + ResultStartNo );
            ANSearchResults.VALIDATE(Text ,lSqlQueryResultTmp."Text Value");
            ANSearchResults.MODIFY;
          END;

          CASE lSqlQueryResultTmp."Field Name" OF
            PKFieldName[1] : BEGIN ResultPK[1] := lSqlQueryResultTmp."Text Value"; NoKeysSet += 1; END;
            PKFieldName[2] : BEGIN ResultPK[2] := lSqlQueryResultTmp."Text Value"; NoKeysSet += 1; END;
            PKFieldName[3] : BEGIN ResultPK[3] := lSqlQueryResultTmp."Text Value"; NoKeysSet += 1; END;
            PKFieldName[4] : BEGIN ResultPK[4] := lSqlQueryResultTmp."Text Value"; NoKeysSet += 1; END;
            PKFieldName[5] : BEGIN ResultPK[5] := lSqlQueryResultTmp."Text Value"; NoKeysSet += 1; END;
          END;

          IF NoKeysSet = NoKeys THEN BEGIN
            ANSearchResults.GET(0,lSqlQueryResultTmp."Record No." + ResultStartNo );

            ANSearchResults."Position Text" :=
              TNPUtils.GetPositionTextUsingPrimaryKeyValues(
                ANSearchResults."Table No.",
                ResultPK[1],
                ResultPK[2],
                ResultPK[3],
                ResultPK[4],
                ResultPK[5]);
            ANSearchResults.MODIFY;
          END;

          i += 1;
        UNTIL (lSqlQueryResultTmp.NEXT() = 0);
      END;

      SQLIntegration.Disconnect();

      NumResults := RecordNo;
    END;

    PROCEDURE NAVTableSearch@1000000004(TableNo@1000000005 : Integer;TableView@1000000008 : Text;SearchFieldNo@1000000004 : Integer;SearchTerm@1000000003 : Text;FullWordMatch@1000000002 : Boolean;VAR ANSearchResults@1000000001 : TEMPORARY Record 9062514;ResultStartNo@1000000000 : Integer) NumResults : Integer;
    VAR
      RecRef@1000000006 : RecordRef;
      FieldRef@1000000007 : FieldRef;
      SearchPrefix@1000000009 : Text;
      SearchSuffix@1000000010 : Text;
    BEGIN
      RecRef.OPEN(TableNo);
      RecRef.SETVIEW(TableView);
      FieldRef := RecRef.FIELD(SearchFieldNo);
      IF FieldRef.GETFILTER <> '' THEN BEGIN
        SearchPrefix := FieldRef.GETFILTER + '&(';
        SearchSuffix := ')';
      END;

      IF FullWordMatch THEN
        FieldRef.SETFILTER(STRSUBSTNO(SearchPrefix + '@* %1 *|@* %1|@%1 *|@%1' + SearchSuffix,COPYSTR(SearchTerm,1,FieldRef.LENGTH)))
      ELSE
        FieldRef.SETFILTER(SearchPrefix + '*' + SearchTerm + '*' + SearchSuffix);

      NumResults := 0;
      IF RecRef.FINDSET THEN BEGIN
        REPEAT
          NumResults += 1;
          FieldRef := RecRef.FIELD(SearchFieldNo);
          CLEAR(ANSearchResults);
          ANSearchResults.INIT;
          ANSearchResults."Entry No." := NumResults + ResultStartNo;
          ANSearchResults."Table No." := TableNo;
          ANSearchResults."Field No." := SearchFieldNo;
          ANSearchResults."Matched From Text" := SearchTerm;
          ANSearchResults.Text := FORMAT(FieldRef.VALUE);
          ANSearchResults."Position Text" := RecRef.GETPOSITION;
          ANSearchResults.INSERT(TRUE);
        UNTIL RecRef.NEXT = 0;
      END;

      EXIT(NumResults);
    END;

    PROCEDURE FindStringInNAV@1000000001(SearchID@1000000012 : Integer;pString@1000000000 : Text[250];TableNoFilter@1000000006 : Text;FullWordMatch@1000000007 : Boolean;VAR ANSearchResults@1000000001 : TEMPORARY Record 9062514) NumResults : Integer;
    VAR
      RecRef@1000000002 : RecordRef;
      FieldRef@1000000003 : FieldRef;
      ANSearchTables@1000000005 : Record 9062508;
      ANSearchFields@1000000004 : Record 9062509;
      ANSearchTableFilters@1000000013 : Record 9062510;
      Summary_temp@1000000008 : TEMPORARY Record 9062523;
      ANRecordAliases@1000000009 : Record 9062505;
      Obj@1000000010 : Record 2000000001;
      ANSearchTables2@1000000011 : Record 9062508;
    BEGIN
      IF TableNoFilter = FORMAT(DATABASE::Field) THEN EXIT(FindStringInFields(pString,FullWordMatch,ANSearchResults)); //If looking for Fields then do that

      //Check if Search Tables have been added for this search
      //If not - create the default set >>>
      IF NOT CheckSearchTablesExist(SearchID) THEN AddDefaultTablesFields_toSearch(SearchID,TableNoFilter);
      //<<<

      ANSearchTables.SETRANGE("Search ID",SearchID);
      IF ANSearchTables.FINDSET THEN BEGIN
        REPEAT
          RecRef.OPEN(ANSearchTables."Table No.");

          //Apply any filters >>>
          ANSearchTableFilters.SETRANGE("Search ID",ANSearchTables."Search ID");
          ANSearchTableFilters.SETRANGE("Table No.",ANSearchTables."Table No.");
          IF ANSearchTableFilters.FINDSET THEN BEGIN
            REPEAT
              FieldRef := RecRef.FIELD(ANSearchTableFilters."Field No.");
              FieldRef.SETFILTER(ANSearchTableFilters."Filter Text");
            UNTIL ANSearchTableFilters.NEXT = 0;
          END;
          //<<<
          ANSearchFields.SETRANGE("Search ID",ANSearchTables."Search ID");
          ANSearchFields.SETRANGE("Table No.",ANSearchTables."Table No.");
          IF ANSearchFields.FINDSET THEN BEGIN
            REPEAT
              FieldRef := RecRef.FIELD(ANSearchFields.Type);
              Obj.SETRANGE(Type,Obj.Type::TableData);
              Obj.SETRANGE(ID,RecRef.NUMBER);
              IF Obj.FINDFIRST AND (RecRef.GETFILTERS = '') THEN //Only use SQL if is real table and there are no filters
                NumResults += SQLFilterSearch(RecRef.NUMBER,ANSearchFields."Field No.",pString,FullWordMatch,ANSearchResults,NumResults)
              ELSE
                NumResults += NAVTableSearch(RecRef.NUMBER,RecRef.GETVIEW,ANSearchFields."Field No.",pString,FullWordMatch,ANSearchResults,NumResults);

            UNTIL ANSearchFields.NEXT = 0;
          END;

          //Search Aliases
          ANRecordAliases.SETRANGE("Table No.",ANSearchTables."Table No.");
          IF ANRecordAliases.FINDFIRST THEN BEGIN
            NumResults += NAVTableSearch(DATABASE::"Ask nOra - Record Alias",ANRecordAliases.GETVIEW,2,pString,FullWordMatch,ANSearchResults,NumResults);
            NumResults -= ReplaceAliasesInSearchResults(ANSearchResults,RecRef.NUMBER,RecRef.GETVIEW);
          END;

          RecRef.CLOSE;
        UNTIL ANSearchTables.NEXT = 0;
      END;
    END;

    PROCEDURE FindStringInFields@1000000020(pString@1000000003 : Text[250];FullWordMatch@1000000001 : Boolean;VAR ANSearchResults@1000000000 : TEMPORARY Record 9062514) NumResults : Integer;
    VAR
      ANSearchTables2@1000000002 : Record 9062515;
      Fields@1000000004 : Record 2000000041;
      FieldTableFilter@1000000005 : Text;
      EnhFields@1000000006 : Record 9062327;
      ANRecordAliases@1000000007 : Record 9062505;
      eNoTables@1000000008 : TextConst 'ENU=No tables other than the field table have been specified;ENG=No tables other than the field table have been specified';
    BEGIN
      ANSearchTables2.SETFILTER("Table No.",'<>'+FORMAT(DATABASE::Field));
      FieldTableFilter := '';
      IF ANSearchTables2.FINDSET THEN BEGIN
        REPEAT
          IF FieldTableFilter <> '' THEN FieldTableFilter += '|';
          FieldTableFilter += FORMAT(ANSearchTables2."Table No.");
        UNTIL ANSearchTables2.NEXT = 0;
      END ELSE
        ERROR(eNoTables);


      //FIELDS >>>
      Fields.SETFILTER(TableNo,FieldTableFilter);
      NumResults += NAVTableSearch(DATABASE::Field,Fields.GETVIEW,Fields.FIELDNO("Field Caption"),pString,FullWordMatch,ANSearchResults,NumResults); //DOC PC 12/01/2014 - Search using Field Captions, not names

      //Search Aliases
      ANRecordAliases.SETRANGE("Table No.",DATABASE::Field);
      IF ANRecordAliases.FINDFIRST THEN BEGIN
        NumResults += NAVTableSearch(DATABASE::"Ask nOra - Record Alias",ANRecordAliases.GETVIEW,2,pString,FullWordMatch,ANSearchResults,NumResults);
        NumResults -= ReplaceAliasesInSearchResults(ANSearchResults,DATABASE::Field,Fields.GETVIEW);
      END;
      //FIELDS <<<

      EnhFields.SETFILTER("Table No.",FieldTableFilter);
      NumResults += NAVTableSearch(DATABASE::"Enhanced Field Definition",EnhFields.GETVIEW,3,pString,FullWordMatch,ANSearchResults,NumResults);

      //Search Aliases
      ANRecordAliases.SETRANGE("Table No.",DATABASE::"Enhanced Field Definition");
      IF ANRecordAliases.FINDFIRST THEN BEGIN
        NumResults += NAVTableSearch(DATABASE::"Ask nOra - Record Alias",ANRecordAliases.GETVIEW,2,pString,FullWordMatch,ANSearchResults,NumResults);
        NumResults -= ReplaceAliasesInSearchResults(ANSearchResults,DATABASE::"Enhanced Field Definition",EnhFields.GETVIEW);
      END;
    END;

    PROCEDURE FindStringInResults@1000000000(pString@1000000001 : Text[250];FullWordMatch@1000000003 : Boolean;VAR ANSearchResults@1000000000 : TEMPORARY Record 9062514) NumResults : Integer;
    VAR
      MatchFound@1000000002 : Boolean;
      Summary_temp@1000000005 : TEMPORARY Record 9062523;
    BEGIN
      IF FullWordMatch THEN
        ANSearchResults.SETFILTER(Text,STRSUBSTNO('* %1 *|* %1|%1 *|%1',pString))
      ELSE
        ANSearchResults.SETFILTER(Text,'*' + pString + '*');

      IF ANSearchResults.FINDSET THEN BEGIN
        REPEAT
          ANSearchResults.Keep := TRUE;
          ANSearchResults."Matched From Text" := ANSearchResults."Matched From Text" + ',' + pString;
          ANSearchResults.MODIFY;
          MatchFound := TRUE;
        UNTIL ANSearchResults.NEXT = 0;
      END;

      ANSearchResults.RESET;

      IF NOT MatchFound THEN BEGIN
        EXIT(0);
      END ELSE BEGIN
        ANSearchResults.SETRANGE(Keep,FALSE);
        IF ANSearchResults.FINDSET THEN ANSearchResults.DELETEALL;

        ANSearchResults.RESET;
        ANSearchResults.MODIFYALL(Keep,FALSE);
        NumResults := ANSearchResults.COUNT;
      END;
    END;

    PROCEDURE ReplaceAliasesInSearchResults@1000000003(VAR ANSearchResults@1000000000 : Record 9062514;SearchTableNo@1000000002 : Integer;SearchTableView@1000000003 : Text) NumRemoved : Integer;
    VAR
      RecordAliases@1000000001 : Record 9062505;
      SearchRecRef@1000000004 : RecordRef;
      AliasRecRef@1000000005 : RecordRef;
      UseAlias@1000000006 : Boolean;
    BEGIN
      ANSearchResults.SETRANGE("Table No.",DATABASE::"Ask nOra - Record Alias");
      IF ANSearchResults.FINDSET THEN BEGIN
        REPEAT
          RecordAliases.SETPOSITION(ANSearchResults."Position Text");
          IF RecordAliases.GET(RecordAliases."Table No.",RecordAliases."Alias Code") THEN BEGIN

            UseAlias := TRUE;

            //Check if within view
            IF SearchTableNo <> 0 THEN BEGIN
              SearchRecRef.OPEN(SearchTableNo);
              SearchRecRef.FILTERGROUP(10);
              SearchRecRef.SETVIEW(SearchTableView);

              AliasRecRef.OPEN(RecordAliases."Table No.");
              AliasRecRef.SETPOSITION(RecordAliases."Position Text");
              AliasRecRef.SETRECFILTER;

              SearchRecRef.FILTERGROUP(11);
              SearchRecRef.SETVIEW(AliasRecRef.GETVIEW);

              UseAlias := SearchRecRef.FINDFIRST;
              SearchRecRef.CLOSE;
              AliasRecRef.CLOSE;
            END;

            IF UseAlias THEN BEGIN
              ANSearchResults.VALIDATE("Table No.",RecordAliases."Table No.");
              ANSearchResults.VALIDATE("Position Text",RecordAliases."Position Text");
              ANSearchResults.VALIDATE("Field No.",0);
              ANSearchResults.MODIFY(TRUE);
            END ELSE BEGIN
              ANSearchResults.DELETE(TRUE);
              NumRemoved += 1;
            END;
          END;
        UNTIL ANSearchResults.NEXT = 0;
      END;
    END;

    PROCEDURE RankSearchResult@1000000005(SearchResult@1000000000 : Record 9062514) RankingPoints : Decimal;
    BEGIN
      //Rank based on:
      // - How many words we matched of the actual value

      IF SearchResult."No. Words in Text" = 0 THEN EXIT(0);

      EXIT(
        (1+((STRLEN(SearchResult."Matched From Text")/STRLEN(SearchResult.Text))/10) ) *
        (SearchResult."No. Words in Match Text" / SearchResult."No. Words in Text")
      );
    END;

    PROCEDURE RankSearchResultSummary@1000000010(Summary@1000000000 : Record 9062523) : Decimal;
    VAR
      SearchResult@1000000001 : Record 9062514;
    BEGIN
      //Rank based on:
      // - Ranking Points of results summed together

      SearchResult.SETRANGE("Search ID",Summary."Search ID");
      SearchResult.SETRANGE("Table No.",Summary."Table No.");
      SearchResult.SETRANGE("Position Text",Summary."Position Text");
      IF SearchResult.FINDSET THEN BEGIN
        SearchResult.CALCSUMS("Ranking Points");
        IF SearchResult.COUNT = 1 THEN BEGIN
          EXIT(SearchResult."Ranking Points")
        END ELSE BEGIN
          EXIT(SearchResult."Ranking Points" * ( 1 + (SearchResult.COUNT/10) ) );
        END;
      END;
      EXIT(0);
    END;

    PROCEDURE CheckSearchTablesExist@1000000026(SearchID@1000000000 : Integer) : Boolean;
    VAR
      ANSearchTable@1000000001 : Record 9062508;
    BEGIN
      ANSearchTable.SETRANGE("Search ID",SearchID);
      EXIT(NOT ANSearchTable.ISEMPTY);
    END;

    PROCEDURE "<<< EXECUTE SEARCH <<<"@1000000024();
    BEGIN
    END;

    PROCEDURE ">>> POST SEARCH >>>"@1000000030();
    BEGIN
    END;

    PROCEDURE UseSearchResult@1000000009(VAR SearchResultSummary@1000000001 : Record 9062523);
    VAR
      SearchResults@1000000003 : Record 9062514;
      SentenceWord@1000000002 : Record 9062518;
      SentenceWordUse@1000000000 : Record 9062506;
    BEGIN
      SearchResultSummary.VALIDATE(Used,TRUE);
      SearchResultSummary.MODIFY(TRUE);

      SearchResults.SETRANGE("Search ID",SearchResultSummary."Search ID");
      SearchResults.SETRANGE("Table No.",SearchResultSummary."Table No.");
      SearchResults.SETRANGE("Position Text",SearchResultSummary."Position Text");
      IF SearchResults.FINDSET THEN BEGIN
        REPEAT
          SearchResults.VALIDATE(Used,TRUE);
          SearchResults.MODIFY(TRUE);

          SentenceWordUse.SETRANGE("Use For Search ID",SearchResults."Search ID");
          SentenceWordUse.SETRANGE("Use For Result Entry No.",SearchResults."Entry No.");
          IF SentenceWordUse.FINDSET THEN BEGIN
            REPEAT
              SentenceWordUse.VALIDATE(Used,TRUE);
              SentenceWordUse.MODIFY(TRUE);
              SentenceWord.GET(SentenceWordUse."Sentence ID",SentenceWordUse."Word ID");
              SentenceWord.VALIDATE(SentenceWord.Used,TRUE);
              SentenceWord.VALIDATE("Used For",SentenceWordUse."Use For Code");
              SentenceWord.MODIFY(TRUE);
            UNTIL SentenceWordUse.NEXT = 0;
          END;
        UNTIL SearchResults.NEXT = 0;
      END;
    END;

    PROCEDURE UnUseSearchResult@1000000012(VAR SearchResultSummary@1000000001 : Record 9062523);
    VAR
      SearchResults@1000000003 : Record 9062514;
      SentenceWord@1000000002 : Record 9062518;
      SentenceWordUse@1000000000 : Record 9062506;
    BEGIN
      SearchResultSummary.VALIDATE(Used,FALSE);
      SearchResultSummary.MODIFY(TRUE);

      SearchResults.SETRANGE("Search ID",SearchResultSummary."Search ID");
      SearchResults.SETRANGE("Table No.",SearchResultSummary."Table No.");
      SearchResults.SETRANGE("Position Text",SearchResultSummary."Position Text");
      IF SearchResults.FINDSET THEN BEGIN
        REPEAT
          SearchResults.VALIDATE(Used,FALSE);
          SearchResults.MODIFY(TRUE);

          SentenceWordUse.SETRANGE("Use For Search ID",SearchResults."Search ID");
          SentenceWordUse.SETRANGE("Use For Result Entry No.",SearchResults."Entry No.");
          IF SentenceWordUse.FINDSET THEN BEGIN
            REPEAT
              SentenceWordUse.VALIDATE(Used,FALSE);
              SentenceWordUse.MODIFY(TRUE);
              SentenceWord.GET(SentenceWordUse."Sentence ID",SentenceWordUse."Word ID");
              SentenceWord.VALIDATE(SentenceWord.Used,FALSE);
              SentenceWord.VALIDATE("Used For",'');
              SentenceWord.MODIFY(TRUE);
            UNTIL SentenceWordUse.NEXT = 0;
          END;
        UNTIL SearchResults.NEXT = 0;
      END;
    END;

    PROCEDURE "<<< POST SEARCH <<<"@1000000031();
    BEGIN
    END;

    BEGIN
    {
      //DOC NA2015.5  PC 05/03/2015 - Fixes to count of words on Search Results
      //DOC NA2016.5  JH 28/08/2015 - Upgraded to 2016
      //DOC NA2016.15 JH 18/04/2016 - CfMD amendments
    }
    END.
  }
}

