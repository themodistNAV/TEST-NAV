OBJECT Report 7323 Create Invt Put-away/Pick/Mvmt
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Create Invt. Put-away/Pick/Movement;
               ENG=Create Invt. Put-away/Pick/Movement];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  IF NOT CreatePutAway AND NOT (CreatePick OR CreateMovement)THEN
                    ERROR(Text008);

                  CreateInvtPickMovement.SetInvtMovement(CreateMovement);
                END;

    OnPostReport=BEGIN
                   TempWhseActivHdr.DELETEALL;
                 END;

  }
  DATASET
  {
    { 9356;    ;DataItem;                    ;
               DataItemTable=Table5765;
               DataItemTableView=SORTING(Source Document,Source No.);
               OnPreDataItem=BEGIN
                               IF CreatePutAway AND NOT (CreatePick OR CreateMovement) THEN
                                 SETRANGE(Type,Type::Inbound);
                               IF NOT CreatePutAway AND (CreatePick OR CreateMovement) THEN
                                 SETRANGE(Type,Type::Outbound);

                               Window.OPEN(
                                 Text001 +
                                 Text002 +
                                 Text003);

                               DocumentCreated := FALSE;

                               IF CreatePick OR CreateMovement THEN
                                 CreateInvtPickMovement.SetReportGlobals(PrintDocument,ShowError);
                             END;

               OnAfterGetRecord=VAR
                                  ATOMvmntCreated@1001 : Integer;
                                  TotalATOMvmtToBeCreated@1002 : Integer;
                                BEGIN
                                  Window.UPDATE(1,"Source Document");
                                  Window.UPDATE(2,"Source No.");

                                  CASE Type OF
                                    Type::Inbound:
                                      TotalPutAwayCounter += 1;
                                    Type::Outbound:
                                      IF CreatePick THEN
                                        TotalPickCounter += 1
                                      ELSE
                                        TotalMovementCounter += 1;
                                  END;

                                  IF CheckWhseRequest("Warehouse Request") THEN
                                    CurrReport.SKIP;

                                  IF ((Type = Type::Inbound) AND (WhseActivHeader.Type <> WhseActivHeader.Type::"Invt. Put-away")) OR
                                     ((Type = Type::Outbound) AND ((WhseActivHeader.Type <> WhseActivHeader.Type::"Invt. Pick") AND
                                                                   (WhseActivHeader.Type <> WhseActivHeader.Type::"Invt. Movement"))) OR
                                     ("Source Type" <> WhseActivHeader."Source Type") OR
                                     ("Source Subtype" <> WhseActivHeader."Source Subtype") OR
                                     ("Source No." <> WhseActivHeader."Source No.") OR
                                     ("Location Code" <> WhseActivHeader."Location Code")
                                  THEN BEGIN
                                    CASE Type OF
                                      Type::Inbound:
                                        IF NOT CreateInvtPutAway.CheckSourceDoc("Warehouse Request") THEN
                                          CurrReport.SKIP;
                                      Type::Outbound:
                                        IF NOT CreateInvtPickMovement.CheckSourceDoc("Warehouse Request") THEN
                                          CurrReport.SKIP;
                                    END;
                                    InitWhseActivHeader;
                                  END;

                                  CASE Type OF
                                    Type::Inbound:
                                      BEGIN
                                        CreateInvtPutAway.SetWhseRequest("Warehouse Request",TRUE);
                                        CreateInvtPutAway.AutoCreatePutAway(WhseActivHeader);
                                      END;
                                    Type::Outbound:
                                      BEGIN
                                        CreateInvtPickMovement.SetWhseRequest("Warehouse Request",TRUE);
                                        CreateInvtPickMovement.AutoCreatePickOrMove(WhseActivHeader);
                                      END;
                                  END;

                                  IF WhseActivHeader."No." <> '' THEN BEGIN
                                    DocumentCreated := TRUE;
                                    CASE Type OF
                                      Type::Inbound:
                                        PutAwayCounter := PutAwayCounter + 1;
                                      Type::Outbound:
                                        IF CreatePick THEN BEGIN
                                          PickCounter := PickCounter + 1;

                                          CreateInvtPickMovement.GetATOMovementsCounters(ATOMvmntCreated,TotalATOMvmtToBeCreated);
                                          MovementCounter += ATOMvmntCreated;
                                          TotalMovementCounter += TotalATOMvmtToBeCreated;
                                        END ELSE
                                          MovementCounter += 1;
                                    END;
                                    IF PrintDocument THEN
                                      InsertTempWhseActivHdr;
                                    COMMIT;
                                  END;
                                END;

               OnPostDataItem=VAR
                                ExpiredItemMessageText@1000 : Text[100];
                                Msg@1002 : Text;
                              BEGIN
                                ExpiredItemMessageText := CreateInvtPickMovement.GetExpiredItemMessage;
                                IF TempWhseActivHdr.FIND('-') THEN
                                  PrintNewDocuments;

                                Window.CLOSE;
                                IF NOT SuppressMessagesState THEN
                                  IF DocumentCreated THEN BEGIN
                                    IF PutAwayCounter > 0 THEN
                                      AddToText(Msg,STRSUBSTNO(Text005,WhseActivHeader.Type::"Invt. Put-away",PutAwayCounter,TotalPutAwayCounter));
                                    IF PickCounter > 0 THEN
                                      AddToText(Msg,STRSUBSTNO(Text005,WhseActivHeader.Type::"Invt. Pick",PickCounter,TotalPickCounter));
                                    IF MovementCounter > 0 THEN
                                      AddToText(Msg,STRSUBSTNO(Text005,WhseActivHeader.Type::"Invt. Movement",MovementCounter,TotalMovementCounter));

                                    IF CreatePutAway OR CreatePick THEN
                                      Msg += ExpiredItemMessageText;

                                    MESSAGE(Msg);
                                  END ELSE BEGIN
                                    Msg := Text004 + ' ' + ExpiredItemMessageText;
                                    MESSAGE(Msg);
                                  END;
                              END;

               ReqFilterFields=Source Document,Source No. }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnInit=BEGIN
               CreatePickEditable := TRUE;
               CreateMovementEditable := TRUE;
             END;

      OnOpenPage=BEGIN
                   EnableFieldsInPage;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ENG=Options] }

      { 1   ;2   ;Field     ;
                  Name=CreateInventorytPutAway;
                  CaptionML=[ENU=Create Invt. Put-Away;
                             ENG=Create Invt. Put-Away];
                  SourceExpr=CreatePutAway }

      { 3   ;2   ;Field     ;
                  Name=CInvtPick;
                  CaptionML=[ENU=Create Invt. Pick;
                             ENG=Create Invt. Pick];
                  SourceExpr=CreatePick;
                  Enabled=CreatePickEditable;
                  Editable=CreatePickEditable;
                  OnValidate=BEGIN
                               IF CreatePick AND CreateMovement THEN
                                 ERROR(Text009);
                               EnableFieldsInPage;
                             END;
                              }

      { 10  ;2   ;Field     ;
                  Name=CInvtMvmt;
                  CaptionML=[ENU=Create Invt. Movement;
                             ENG=Create Invt. Movement];
                  SourceExpr=CreateMovement;
                  Enabled=CreateMovementEditable;
                  Editable=CreateMovementEditable;
                  OnValidate=BEGIN
                               IF CreatePick AND CreateMovement THEN
                                 ERROR(Text009);
                               EnableFieldsInPage;
                             END;
                              }

      { 6   ;2   ;Field     ;
                  CaptionML=[ENU=Print Document;
                             ENG=Print Document];
                  SourceExpr=PrintDocument }

      { 7   ;2   ;Field     ;
                  CaptionML=[ENU=Show Error;
                             ENG=Show Error];
                  SourceExpr=ShowError }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      WhseActivHeader@1002 : Record 5766;
      TempWhseActivHdr@1013 : TEMPORARY Record 5766;
      CreateInvtPutAway@1003 : Codeunit 7321;
      CreateInvtPickMovement@1004 : Codeunit 7322;
      WhseDocPrint@1012 : Codeunit 5776;
      Window@1005 : Dialog;
      CreatePutAway@1000 : Boolean;
      CreatePick@1001 : Boolean;
      Text001@1008 : TextConst 'ENU=Creating Inventory Activities...\\;ENG=Creating Inventory Activities...\\';
      Text002@1007 : TextConst 'ENU=Source Type     #1##########\;ENG=Source Type     #1##########\';
      Text003@1006 : TextConst 'ENU=Source No.      #2##########;ENG=Source No.      #2##########';
      CreateMovement@1023 : Boolean;
      DocumentCreated@1010 : Boolean;
      PrintDocument@1011 : Boolean;
      PutAwayCounter@1014 : Integer;
      PickCounter@1015 : Integer;
      MovementCounter@1027 : Integer;
      Text004@1009 : TextConst 'ENU=There is nothing to create.;ENG=There is nothing to create.';
      Text005@1016 : TextConst 'ENU=Number of %1 activities created: %2 out of a total of %3.;ENG=Number of %1 activities created: %2 out of a total of %3.';
      Text006@1017 : TextConst '@@@=No translation needed. Only a new line separator.;ENU=%1\\%2;ENG=%1\\%2';
      Text008@1019 : TextConst 'ENU=You must select Create Invt. Put-away, Create Invt. Pick, or Create Invt. Movement.;ENG=You must select Create Invt. Put-away, Create Invt. Pick, or Create Invt. Movement.';
      TotalPutAwayCounter@1020 : Integer;
      TotalPickCounter@1021 : Integer;
      TotalMovementCounter@1025 : Integer;
      ShowError@1022 : Boolean;
      Text009@1024 : TextConst 'ENU=You can select either Create Invt. Pick or Create Invt. Movement.;ENG=You can select either Create Invt. Pick or Create Invt. Movement.';
      CreatePickEditable@1026 : Boolean INDATASET;
      CreateMovementEditable@1030 : Boolean INDATASET;
      SuppressMessagesState@1031 : Boolean;

    LOCAL PROCEDURE InitWhseActivHeader@7();
    BEGIN
      WITH WhseActivHeader DO BEGIN
        INIT;
        CASE "Warehouse Request".Type OF
          "Warehouse Request".Type::Inbound:
            Type := Type::"Invt. Put-away";
          "Warehouse Request".Type::Outbound:
            IF CreatePick THEN
              Type := Type::"Invt. Pick"
            ELSE
              Type := Type::"Invt. Movement";
        END;
        "No." := '';
        "Location Code" := "Warehouse Request"."Location Code";
      END;
    END;

    LOCAL PROCEDURE InsertTempWhseActivHdr@1();
    BEGIN
      TempWhseActivHdr.INIT;
      TempWhseActivHdr := WhseActivHeader;
      TempWhseActivHdr.INSERT;
    END;

    LOCAL PROCEDURE PrintNewDocuments@2();
    BEGIN
      WITH TempWhseActivHdr DO BEGIN
        REPEAT
          CASE Type OF
            Type::"Invt. Put-away":
              WhseDocPrint.PrintInvtPutAwayHeader(TempWhseActivHdr,TRUE);
            Type::"Invt. Pick":
              IF CreatePick THEN
                WhseDocPrint.PrintInvtPickHeader(TempWhseActivHdr,TRUE)
              ELSE
                WhseDocPrint.PrintInvtMovementHeader(TempWhseActivHdr,TRUE);
          END;
        UNTIL NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE CheckWhseRequest@3(WhseRequest@1000 : Record 5765) : Boolean;
    VAR
      SalesHeader@1001 : Record 36;
      TransferHeader@1002 : Record 5740;
      GetSrcDocOutbound@1003 : Codeunit 5752;
    BEGIN
      IF WhseRequest."Document Status" <> WhseRequest."Document Status"::Released THEN
        EXIT(TRUE);
      IF (WhseRequest.Type = WhseRequest.Type::Outbound) AND
         (WhseRequest."Shipping Advice" = WhseRequest."Shipping Advice"::Complete)
      THEN
        CASE WhseRequest."Source Type" OF
          DATABASE::"Sales Line":
            IF WhseRequest."Source Subtype" = WhseRequest."Source Subtype"::"1" THEN BEGIN
              SalesHeader.GET(SalesHeader."Document Type"::Order,WhseRequest."Source No.");
              EXIT(GetSrcDocOutbound.CheckSalesHeader(SalesHeader,ShowError));
            END;
          DATABASE::"Transfer Line":
            BEGIN
              TransferHeader.GET(WhseRequest."Source No.");
              EXIT(GetSrcDocOutbound.CheckTransferHeader(TransferHeader,ShowError));
            END;
        END;
    END;

    PROCEDURE InitializeRequest@4(NewCreateInvtPutAway@1000 : Boolean;NewCreateInvtPick@1001 : Boolean;NewCreateInvtMovement@1004 : Boolean;NewPrintDocument@1002 : Boolean;NewShowError@1003 : Boolean);
    BEGIN
      CreatePutAway := NewCreateInvtPutAway;
      CreatePick := NewCreateInvtPick;
      CreateMovement := NewCreateInvtMovement;
      PrintDocument := NewPrintDocument;
      ShowError := NewShowError;
    END;

    LOCAL PROCEDURE EnableFieldsInPage@5();
    BEGIN
      CreatePickEditable := NOT CreateMovement;
      CreateMovementEditable := NOT CreatePick;
    END;

    PROCEDURE SuppressMessages@6(NewState@1000 : Boolean);
    BEGIN
      SuppressMessagesState := NewState;
    END;

    LOCAL PROCEDURE AddToText@9(VAR OrigText@1000 : Text;Addendum@1001 : Text);
    BEGIN
      IF OrigText = '' THEN
        OrigText := Addendum
      ELSE
        OrigText := STRSUBSTNO(Text006,OrigText,Addendum);
    END;

    PROCEDURE GetMovementCounters@16(VAR MovementsCreated@1000 : Integer;VAR TotalMovementsToBeCreated@1001 : Integer);
    BEGIN
      MovementsCreated := MovementCounter;
      TotalMovementsToBeCreated := TotalMovementCounter;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

