OBJECT Table 10550 BACS Ledger Entry
{
  OBJECT-PROPERTIES
  {
    Date=07/09/12;
    Time=12:00:00 PM;
    Version List=NAVGB7.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=BACS Ledger Entry;
               ENG=BACS Ledger Entry];
    LookupPageID=Page10550;
    DrillDownPageID=Page10550;
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;CaptionML=[ENU=Entry No.;
                                                              ENG=Entry No.] }
    { 2   ;   ;Bank Account No.    ;Code20        ;TableRelation="Vendor Bank Account";
                                                   CaptionML=[ENU=Bank Account No.;
                                                              ENG=Bank Account No.] }
    { 3   ;   ;Bank Account Ledger Entry No.;Integer;
                                                   TableRelation="Bank Account Ledger Entry";
                                                   CaptionML=[ENU=Bank Account Ledger Entry No.;
                                                              ENG=Bank Account Ledger Entry No.] }
    { 4   ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              ENG=Posting/Tax Point Date] }
    { 5   ;   ;Document Type       ;Option        ;CaptionML=[ENU=Document Type;
                                                              ENG=Document Type];
                                                   OptionCaptionML=[ENU=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder";
                                                                    ENG=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder"];
                                                   OptionString=[ ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder] }
    { 6   ;   ;Document No.        ;Code20        ;CaptionML=[ENU=Document No.;
                                                              ENG=Document No.] }
    { 7   ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              ENG=Description] }
    { 8   ;   ;Amount              ;Decimal       ;CaptionML=[ENU=Amount;
                                                              ENG=Amount];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCodeFromBank }
    { 9   ;   ;BACS Date           ;Date          ;CaptionML=[ENU=BACS Date;
                                                              ENG=BACS Date] }
    { 13  ;   ;Entry Status        ;Option        ;CaptionML=[ENU=Entry Status;
                                                              ENG=Entry Status];
                                                   OptionCaptionML=[ENU=,Exported,Voided,Posted,Financially Voided;
                                                                    ENG=,Exported,Voided,Posted,Financially Voided];
                                                   OptionString=,Exported,Voided,Posted,Financially Voided }
    { 14  ;   ;Original Entry Status;Option       ;CaptionML=[ENU=Original Entry Status;
                                                              ENG=Original Entry Status];
                                                   OptionCaptionML=[ENU=" ,Exported,Voided,Posted,Financially Voided";
                                                                    ENG=" ,Exported,Voided,Posted,Financially Voided"];
                                                   OptionString=[ ,Exported,Voided,Posted,Financially Voided] }
    { 15  ;   ;Bal. Account Type   ;Option        ;CaptionML=[ENU=Bal. Account Type;
                                                              ENG=Bal. Account Type];
                                                   OptionCaptionML=[ENU=G/L Account,Customer,Vendor,Bank Account,Fixed Asset;
                                                                    ENG=G/L Account,Customer,Vendor,Bank Account,Fixed Asset];
                                                   OptionString=G/L Account,Customer,Vendor,Bank Account,Fixed Asset }
    { 16  ;   ;Bal. Account No.    ;Code20        ;TableRelation=IF (Bal. Account Type=CONST(G/L Account)) "G/L Account"
                                                                 ELSE IF (Bal. Account Type=CONST(Customer)) Customer
                                                                 ELSE IF (Bal. Account Type=CONST(Vendor)) Vendor
                                                                 ELSE IF (Bal. Account Type=CONST(Bank Account)) "Bank Account"
                                                                 ELSE IF (Bal. Account Type=CONST(Fixed Asset)) "Fixed Asset";
                                                   CaptionML=[ENU=Bal. Account No.;
                                                              ENG=Bal. Account No.] }
    { 17  ;   ;Open                ;Boolean       ;CaptionML=[ENU=Open;
                                                              ENG=Open] }
    { 18  ;   ;Statement Status    ;Option        ;CaptionML=[ENU=Statement Status;
                                                              ENG=Statement Status];
                                                   OptionCaptionML=[ENU=Open,Bank Acc. Entry Applied,Check Entry Applied,Closed,BACS Entry Applied;
                                                                    ENG=Open,Bank Acc. Entry Applied,Cheque Entry Applied,Closed,BACS Entry Applied];
                                                   OptionString=Open,Bank Acc. Entry Applied,Check Entry Applied,Closed,BACS Entry Applied }
    { 19  ;   ;Statement No.       ;Code20        ;TableRelation="Bank Acc. Reconciliation Line"."Statement No." WHERE (Bank Account No.=FIELD(Bank Account No.));
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Statement No.;
                                                              ENG=Statement No.] }
    { 20  ;   ;Statement Line No.  ;Integer       ;TableRelation="Bank Acc. Reconciliation Line"."Statement Line No." WHERE (Bank Account No.=FIELD(Bank Account No.),
                                                                                                                             Statement No.=FIELD(Statement No.));
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Statement Line No.;
                                                              ENG=Statement Line No.] }
    { 21  ;   ;User ID             ;Code50        ;CaptionML=[ENU=User ID;
                                                              ENG=User ID] }
    { 22  ;   ;External Document No.;Code35       ;CaptionML=[ENU=External Document No.;
                                                              ENG=External Document No.] }
    { 23  ;   ;Account Type        ;Option        ;CaptionML=[ENU=Account Type;
                                                              ENG=Account Type];
                                                   OptionCaptionML=[ENU=G/L Account,Customer,Vendor,Bank Account,Fixed Asset;
                                                                    ENG=G/L Account,Customer,Vendor,Bank Account,Fixed Asset];
                                                   OptionString=G/L Account,Customer,Vendor,Bank Account,Fixed Asset }
    { 24  ;   ;Account No.         ;Code20        ;TableRelation=IF (Account Type=CONST(G/L Account)) "G/L Account"
                                                                 ELSE IF (Account Type=CONST(Customer)) Customer
                                                                 ELSE IF (Account Type=CONST(Vendor)) Vendor
                                                                 ELSE IF (Account Type=CONST(Bank Account)) "Bank Account"
                                                                 ELSE IF (Account Type=CONST(Fixed Asset)) "Fixed Asset";
                                                   CaptionML=[ENU=Account No.;
                                                              ENG=Account No.] }
    { 35  ;   ;Journal Batch Name  ;Code10        ;CaptionML=[ENU=Journal Batch Name;
                                                              ENG=Journal Batch Name] }
    { 36  ;   ;Register No.        ;Integer       ;TableRelation="BACS Register";
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Register No.;
                                                              ENG=Register No.] }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
    {    ;Bank Account No.,Entry Status            }
    {    ;Bank Account Ledger Entry No.,Entry Status }
    {    ;Bank Account No.,BACS Date               }
    {    ;Bank Account No.,Open                    }
    {    ;Document No.,Posting Date                }
    {    ;Entry Status                             }
    {    ;Bal. Account No.,Entry Status            }
    {    ;Bal. Account No.,Open                    }
    {    ;Bal. Account No.,BACS Date               }
    {    ;Register No.,Bal. Account No.,Statement Status,Statement No.;
                                                   SumIndexFields=Amount }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Entry No.,BACS Date,Bank Account No.,Description }
  }
  CODE
  {

    PROCEDURE GetCurrencyCodeFromBank@1() : Code[10];
    VAR
      BankAccount@1040000 : Record 270;
    BEGIN
      IF "Bank Account No." = BankAccount."No." THEN
        EXIT(BankAccount."Currency Code");

      IF BankAccount.GET("Bank Account No.") THEN
        EXIT(BankAccount."Currency Code");

      EXIT('');
    END;

    BEGIN
    END.
  }
}

