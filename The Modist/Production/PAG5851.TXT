OBJECT Page 5851 Get Post.Doc - S.ShptLn Sbfrm
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[ENU=Lines;
               ENG=Lines];
    SaveValues=Yes;
    SourceTable=Table111;
    PageType=ListPart;
    OnFindRecord=BEGIN
                   IF NOT Visible THEN
                     EXIT(FALSE);

                   IF FIND(Which) THEN BEGIN
                     SalesShptLine := Rec;
                     WHILE TRUE DO BEGIN
                       ShowRec := IsShowRec(Rec);
                       IF ShowRec THEN
                         EXIT(TRUE);
                       IF NEXT(1) = 0 THEN BEGIN
                         Rec := SalesShptLine;
                         IF FIND(Which) THEN
                           WHILE TRUE DO BEGIN
                             ShowRec := IsShowRec(Rec);
                             IF ShowRec THEN
                               EXIT(TRUE);
                             IF NEXT(-1) = 0 THEN
                               EXIT(FALSE);
                           END;
                       END;
                     END;
                   END;
                   EXIT(FALSE);
                 END;

    OnNextRecord=VAR
                   RealSteps@1001 : Integer;
                   NextSteps@1000 : Integer;
                 BEGIN
                   IF Steps = 0 THEN
                     EXIT;

                   SalesShptLine := Rec;
                   REPEAT
                     NextSteps := NEXT(Steps / ABS(Steps));
                     ShowRec := IsShowRec(Rec);
                     IF ShowRec THEN BEGIN
                       RealSteps := RealSteps + NextSteps;
                       SalesShptLine := Rec;
                     END;
                   UNTIL (NextSteps = 0) OR (RealSteps = Steps);
                   Rec := SalesShptLine;
                   FIND;
                   EXIT(RealSteps);
                 END;

    OnAfterGetRecord=BEGIN
                       "Document No.HideValue" := FALSE;
                       DocumentNoOnFormat;
                     END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1907935204;1 ;ActionGroup;
                      CaptionML=[ENU=&Line;
                                 ENG=&Line];
                      Image=Line }
      { 1902759804;2 ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Show Document;
                                 ENG=Show Document];
                      Image=View;
                      OnAction=BEGIN
                                 ShowPostedShipment;
                               END;
                                }
      { 1900206204;2 ;Action    ;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 ENG=Dimensions];
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDimensions;
                               END;
                                }
      { 1901652604;2 ;Action    ;
                      ShortCutKey=Shift+Ctrl+I;
                      CaptionML=[ENU=Item &Tracking Lines;
                                 ENG=Item &Tracking Lines];
                      Image=ItemTrackingLines;
                      OnAction=BEGIN
                                 PostedShipmentItemTrackingLns;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                Lookup=No;
                SourceExpr="Document No.";
                HideValue="Document No.HideValue";
                StyleExpr='Strong' }

    { 78  ;2   ;Field     ;
                SourceExpr="Shipment Date" }

    { 50  ;2   ;Field     ;
                SourceExpr="Bill-to Customer No.";
                Visible=FALSE }

    { 4   ;2   ;Field     ;
                SourceExpr="Sell-to Customer No.";
                Visible=FALSE }

    { 6   ;2   ;Field     ;
                SourceExpr=Type }

    { 8   ;2   ;Field     ;
                SourceExpr="No." }

    { 28  ;2   ;Field     ;
                SourceExpr="Cross-Reference No.";
                Visible=FALSE }

    { 10  ;2   ;Field     ;
                SourceExpr="Variant Code";
                Visible=FALSE }

    { 42  ;2   ;Field     ;
                SourceExpr=Nonstock;
                Visible=FALSE }

    { 12  ;2   ;Field     ;
                SourceExpr=Description }

    { 44  ;2   ;Field     ;
                SourceExpr="Return Reason Code";
                Visible=FALSE }

    { 48  ;2   ;Field     ;
                SourceExpr="Location Code";
                Visible=FALSE }

    { 54  ;2   ;Field     ;
                SourceExpr="Bin Code";
                Visible=FALSE }

    { 14  ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=FALSE }

    { 16  ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 2 Code";
                Visible=FALSE }

    { 58  ;2   ;Field     ;
                SourceExpr="Unit of Measure Code" }

    { 60  ;2   ;Field     ;
                SourceExpr=Quantity }

    { 34  ;2   ;Field     ;
                SourceExpr="Qty. Shipped Not Invoiced" }

    { 18  ;2   ;Field     ;
                CaptionML=[ENU=Qty. Not Returned;
                           ENG=Qty. Not Returned];
                DecimalPlaces=0:5;
                SourceExpr=QtyNotReturned }

    { 22  ;2   ;Field     ;
                CaptionML=[ENU=Qty. Returned;
                           ENG=Qty. Returned];
                DecimalPlaces=0:5;
                SourceExpr=CalcQtyReturned }

    { 64  ;2   ;Field     ;
                SourceExpr="Unit of Measure";
                Visible=FALSE }

    { 66  ;2   ;Field     ;
                SourceExpr="Unit Cost (LCY)";
                Visible=FALSE }

    { 20  ;2   ;Field     ;
                CaptionML=[ENU=Reverse Unit Cost (LCY);
                           ENG=Reverse Unit Cost (LCY)];
                SourceExpr=RevUnitCostLCY;
                AutoFormatType=2;
                Visible=FALSE }

    { 72  ;2   ;Field     ;
                SourceExpr="Job No.";
                Visible=FALSE }

    { 80  ;2   ;Field     ;
                SourceExpr="Blanket Order No.";
                Visible=FALSE }

    { 82  ;2   ;Field     ;
                SourceExpr="Blanket Order Line No.";
                Visible=FALSE }

    { 84  ;2   ;Field     ;
                SourceExpr="Appl.-from Item Entry";
                Visible=FALSE }

    { 32  ;2   ;Field     ;
                SourceExpr="Appl.-to Item Entry" }

  }
  CODE
  {
    VAR
      ToSalesHeader@1010 : Record 36;
      SalesShptLine@1003 : Record 111;
      TempSalesShptLine@1002 : TEMPORARY Record 111;
      QtyNotReturned@1004 : Decimal;
      RevUnitCostLCY@1000 : Decimal;
      RevQtyFilter@1005 : Boolean;
      FillExactCostReverse@1007 : Boolean;
      Visible@1009 : Boolean;
      ShowRec@1001 : Boolean;
      "Document No.HideValue"@19020538 : Boolean INDATASET;

    LOCAL PROCEDURE IsFirstDocLine@2() : Boolean;
    VAR
      SalesShptLine2@1000 : Record 111;
      QtyNotReturned2@1002 : Decimal;
      RevUnitCostLCY2@1001 : Decimal;
    BEGIN
      TempSalesShptLine.RESET;
      TempSalesShptLine.COPYFILTERS(Rec);
      TempSalesShptLine.SETRANGE("Document No.","Document No.");
      IF NOT TempSalesShptLine.FINDFIRST THEN BEGIN
        QtyNotReturned2 := QtyNotReturned;
        RevUnitCostLCY2 := RevUnitCostLCY;
        SalesShptLine2.COPYFILTERS(Rec);
        SalesShptLine2.SETRANGE("Document No.","Document No.");
        IF NOT SalesShptLine2.FINDSET THEN
          EXIT(FALSE);
        REPEAT
          ShowRec := IsShowRec(SalesShptLine2);
          IF ShowRec THEN BEGIN
            TempSalesShptLine := SalesShptLine2;
            TempSalesShptLine.INSERT;
          END;
        UNTIL (SalesShptLine2.NEXT = 0) OR ShowRec;
        QtyNotReturned := QtyNotReturned2;
        RevUnitCostLCY := RevUnitCostLCY2;
      END;

      EXIT("Line No." = TempSalesShptLine."Line No.");
    END;

    LOCAL PROCEDURE IsShowRec@3(SalesShptLine2@1000 : Record 111) : Boolean;
    BEGIN
      WITH SalesShptLine2 DO BEGIN
        QtyNotReturned := 0;
        IF RevQtyFilter AND (Type = Type::" ") THEN
          EXIT("Attached to Line No." = 0);
        IF Type <> Type::Item THEN
          EXIT(TRUE);
        CalcShippedSaleNotReturned(QtyNotReturned,RevUnitCostLCY,FillExactCostReverse);
        IF NOT RevQtyFilter THEN
          EXIT(TRUE);
        EXIT(QtyNotReturned > 0);
      END;
    END;

    LOCAL PROCEDURE CalcQtyReturned@5() : Decimal;
    BEGIN
      IF (Type = Type::Item) AND (Quantity - QtyNotReturned > 0) THEN
        EXIT(Quantity - QtyNotReturned);
      EXIT(0);
    END;

    PROCEDURE Initialize@4(NewToSalesHeader@1003 : Record 36;NewRevQtyFilter@1000 : Boolean;NewFillExactCostReverse@1001 : Boolean;NewVisible@1002 : Boolean);
    BEGIN
      ToSalesHeader := NewToSalesHeader;
      RevQtyFilter := NewRevQtyFilter;
      FillExactCostReverse := NewFillExactCostReverse;
      Visible := NewVisible;

      IF Visible THEN BEGIN
        TempSalesShptLine.RESET;
        TempSalesShptLine.DELETEALL;
      END;
    END;

    PROCEDURE GetSelectedLine@1(VAR FromSalesShptLine@1000 : Record 111);
    BEGIN
      FromSalesShptLine.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(FromSalesShptLine);
    END;

    LOCAL PROCEDURE ShowPostedShipment@6();
    VAR
      SalesShptHeader@1001 : Record 110;
    BEGIN
      IF NOT SalesShptHeader.GET("Document No.") THEN
        EXIT;
      PAGE.RUN(PAGE::"Posted Sales Shipment",SalesShptHeader);
    END;

    LOCAL PROCEDURE PostedShipmentItemTrackingLns@18();
    BEGIN
      GetSelectedLine(Rec);
      ShowItemTrackingLines;
    END;

    LOCAL PROCEDURE ShowDocument@7();
    VAR
      SalesShptHeader@1000 : Record 110;
    BEGIN
      IF NOT SalesShptHeader.GET("Document No.") THEN
        EXIT;
      PAGE.RUN(PAGE::"Posted Sales Shipment",SalesShptHeader);
    END;

    LOCAL PROCEDURE ItemTrackingLines@12();
    VAR
      FromSalesShptLine@1000 : Record 111;
    BEGIN
      GetSelectedLine(FromSalesShptLine);
      FromSalesShptLine.ShowItemTrackingLines;
    END;

    LOCAL PROCEDURE DocumentNoOnFormat@19001080();
    BEGIN
      IF NOT IsFirstDocLine THEN
        "Document No.HideValue" := TRUE;
    END;

    BEGIN
    END.
  }
}

