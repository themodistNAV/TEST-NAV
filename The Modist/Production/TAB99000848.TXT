OBJECT Table 99000848 Registered Absence
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               CheckSyntax;
             END;

    OnModify=BEGIN
               CheckSyntax;
             END;

    OnRename=BEGIN
               CheckSyntax;
             END;

    CaptionML=[ENU=Registered Absence;
               ENG=Registered Absence];
  }
  FIELDS
  {
    { 1   ;   ;Capacity Type       ;Option        ;CaptionML=[ENU=Capacity Type;
                                                              ENG=Capacity Type];
                                                   OptionCaptionML=[ENU=Work Center,Machine Center;
                                                                    ENG=Work Centre,Machine Centre];
                                                   OptionString=Work Center,Machine Center }
    { 2   ;   ;No.                 ;Code20        ;TableRelation=IF (Capacity Type=CONST(Work Center)) "Work Center"
                                                                 ELSE IF (Capacity Type=CONST(Machine Center)) "Machine Center";
                                                   CaptionML=[ENU=No.;
                                                              ENG=No.] }
    { 3   ;   ;Date                ;Date          ;CaptionML=[ENU=Date;
                                                              ENG=Date] }
    { 4   ;   ;Starting Time       ;Time          ;OnValidate=BEGIN
                                                                IF ("Ending Time" = 0T) OR
                                                                   ("Ending Time" < "Starting Time" )
                                                                THEN
                                                                  VALIDATE("Ending Time","Starting Time");

                                                                "Starting Date-Time" := CREATEDATETIME(Date,"Starting Time");
                                                              END;

                                                   CaptionML=[ENU=Starting Time;
                                                              ENG=Starting Time] }
    { 5   ;   ;Ending Time         ;Time          ;OnValidate=BEGIN
                                                                IF "Ending Time" < "Starting Time" THEN
                                                                  ERROR(Text002,FIELDCAPTION("Ending Time"),FIELDCAPTION("Starting Time"));

                                                                "Ending Date-Time" := CREATEDATETIME(Date,"Ending Time");
                                                              END;

                                                   CaptionML=[ENU=Ending Time;
                                                              ENG=Ending Time] }
    { 6   ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              ENG=Description] }
    { 7   ;   ;Capacity            ;Decimal       ;CaptionML=[ENU=Capacity;
                                                              ENG=Capacity];
                                                   MinValue=0;
                                                   AutoFormatType=1 }
    { 8   ;   ;Starting Date-Time  ;DateTime      ;OnValidate=BEGIN
                                                                "Starting Time" := DT2TIME("Starting Date-Time");
                                                                Date := DT2DATE("Starting Date-Time");
                                                                VALIDATE("Starting Time");
                                                              END;

                                                   CaptionML=[ENU=Starting Date-Time;
                                                              ENG=Starting Date-Time] }
    { 9   ;   ;Ending Date-Time    ;DateTime      ;OnValidate=BEGIN
                                                                "Ending Time" := DT2TIME("Ending Date-Time");
                                                                Date := DT2DATE("Ending Date-Time");
                                                                VALIDATE("Ending Time");
                                                              END;

                                                   CaptionML=[ENU=Ending Date-Time;
                                                              ENG=Ending Date-Time] }
  }
  KEYS
  {
    {    ;Capacity Type,No.,Date,Starting Time,Ending Time;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=%1 must not be blank.;ENG=%1 must not be blank.';
      Text001@1001 : TextConst 'ENU=%1 must be higher than %2;ENG=%1 must be higher than %2';
      Text002@1002 : TextConst 'ENU=%1 must be higher than %2.;ENG=%1 must be higher than %2.';

    LOCAL PROCEDURE CheckSyntax@7();
    BEGIN
      IF Date = 0D THEN
        ERROR(Text000,FIELDCAPTION(Date));
      IF "Starting Time" = 0T THEN
        ERROR(Text000,FIELDCAPTION("Starting Time"));
      IF "Ending Time" = 0T THEN
        ERROR(Text000,FIELDCAPTION("Ending Time"));
      IF "Starting Time" > "Ending Time" THEN
        ERROR(Text001,FIELDCAPTION("Ending Time"),FIELDCAPTION("Starting Time"));
    END;

    PROCEDURE UpdateDatetime@11();
    BEGIN
      "Starting Date-Time" := CREATEDATETIME(Date,"Starting Time");
      "Ending Date-Time" := CREATEDATETIME(Date,"Ending Time");
    END;

    BEGIN
    END.
  }
}

