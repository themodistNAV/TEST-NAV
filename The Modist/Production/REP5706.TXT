OBJECT Report 5706 Create Stockkeeping Unit
{
  OBJECT-PROPERTIES
  {
    Date=07/09/12;
    Time=12:00:00 PM;
    Version List=NAVW17.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Create Stockkeeping Unit;
               ENG=Create Stockkeeping Unit];
    ProcessingOnly=Yes;
  }
  DATASET
  {
    { 8129;    ;DataItem;                    ;
               DataItemTable=Table27;
               DataItemTableView=SORTING(No.);
               OnPreDataItem=BEGIN
                               Location.SETRANGE("Use As In-Transit",FALSE);

                               DialogWindow.OPEN(
                                 Text000 +
                                 Text001 +
                                 Text002);

                               SaveFilters := TRUE;
                             END;

               OnAfterGetRecord=VAR
                                  ItemVariant@1000 : Record 5401;
                                BEGIN
                                  IF SaveFilters THEN BEGIN
                                    LocationFilter := GETFILTER("Location Filter");
                                    VariantFilter := GETFILTER("Variant Filter");
                                    SaveFilters := FALSE;
                                  END;
                                  SETFILTER("Location Filter",LocationFilter);
                                  SETFILTER("Variant Filter",VariantFilter);

                                  Location.SETFILTER(Code,GETFILTER("Location Filter"));

                                  IF ReplacePreviousSKUs THEN BEGIN
                                    StockkeepingUnit.RESET;
                                    StockkeepingUnit.SETRANGE("Item No.","No.");
                                    IF GETFILTER("Variant Filter") <> '' THEN
                                      StockkeepingUnit.SETFILTER("Variant Code",GETFILTER("Variant Filter"));
                                    IF GETFILTER("Location Filter") <> '' THEN
                                      StockkeepingUnit.SETFILTER("Location Code",GETFILTER("Location Filter"));
                                    StockkeepingUnit.DELETEALL;
                                  END;

                                  DialogWindow.UPDATE(1,"No.");
                                  ItemVariant.SETRANGE("Item No.","No.");
                                  ItemVariant.SETFILTER(Code,GETFILTER("Variant Filter"));
                                  CASE TRUE OF
                                    (SKUCreationMethod = SKUCreationMethod::Location) OR
                                    ((SKUCreationMethod = SKUCreationMethod::"Location & Variant") AND
                                     (NOT ItemVariant.FIND('-'))):
                                      BEGIN
                                        IF Location.FIND('-') THEN
                                          REPEAT
                                            DialogWindow.UPDATE(2,Location.Code);
                                            SETRANGE("Location Filter",Location.Code);
                                            CreateSKU(Item,Location.Code,'');
                                          UNTIL Location.NEXT = 0;
                                      END;
                                    (SKUCreationMethod = SKUCreationMethod::Variant) OR
                                    ((SKUCreationMethod = SKUCreationMethod::"Location & Variant") AND
                                     (NOT Location.FIND('-'))):
                                      BEGIN
                                        IF ItemVariant.FIND('-') THEN
                                          REPEAT
                                            DialogWindow.UPDATE(3,ItemVariant.Code);
                                            SETRANGE("Variant Filter",ItemVariant.Code);
                                            CreateSKU(Item,'',ItemVariant.Code);
                                          UNTIL ItemVariant.NEXT = 0;
                                      END;
                                    (SKUCreationMethod = SKUCreationMethod::"Location & Variant"):
                                      BEGIN
                                        IF Location.FIND('-') THEN
                                          REPEAT
                                            DialogWindow.UPDATE(2,Location.Code);
                                            SETRANGE("Location Filter",Location.Code);
                                            IF ItemVariant.FIND('-') THEN
                                              REPEAT
                                                DialogWindow.UPDATE(3,ItemVariant.Code);
                                                SETRANGE("Variant Filter",ItemVariant.Code);
                                                CreateSKU(Item,Location.Code,ItemVariant.Code);
                                              UNTIL ItemVariant.NEXT = 0;
                                          UNTIL Location.NEXT = 0;
                                      END;
                                  END;
                                END;

               OnPostDataItem=BEGIN
                                DialogWindow.CLOSE;
                              END;

               ReqFilterFields=No.,Inventory Posting Group,Location Filter,Variant Filter }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   ReplacePreviousSKUs := FALSE;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ENG=Options] }

      { 3   ;2   ;Field     ;
                  CaptionML=[ENU=Create Per;
                             ENG=Create Per];
                  OptionCaptionML=[ENU=Location,Variant,Location & Variant;
                                   ENG=Location,Variant,Location & Variant];
                  SourceExpr=SKUCreationMethod }

      { 1   ;2   ;Field     ;
                  CaptionML=[ENU=Item In Inventory Only;
                             ENG=Item In Inventory Only];
                  SourceExpr=ItemInInventoryOnly }

      { 7   ;2   ;Field     ;
                  CaptionML=[ENU=Replace Previous SKUs;
                             ENG=Replace Previous SKUs];
                  SourceExpr=ReplacePreviousSKUs }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Item No.       #1##################\;ENG=Item No.       #1##################\';
      Text001@1001 : TextConst 'ENU=Location Code  #2########\;ENG=Location Code  #2########\';
      Text002@1002 : TextConst 'ENU=Variant Code   #3########\;ENG=Variant Code   #3########\';
      StockkeepingUnit@1003 : Record 5700;
      Location@1004 : Record 14;
      SKUCreationMethod@1005 : 'Location,Variant,Location & Variant';
      ItemInInventoryOnly@1006 : Boolean;
      ReplacePreviousSKUs@1007 : Boolean;
      SaveFilters@1009 : Boolean;
      DialogWindow@1008 : Dialog;
      LocationFilter@1010 : Code[1024];
      VariantFilter@1011 : Code[1024];

    LOCAL PROCEDURE CreateSKU@26(VAR Item2@1000 : Record 27;LocationCode@1001 : Code[10];VariantCode@1002 : Code[10]);
    BEGIN
      Item2.CALCFIELDS(Inventory);
      IF (ItemInInventoryOnly AND (Item2.Inventory > 0)) OR
         (NOT ItemInInventoryOnly)
      THEN
        IF NOT StockkeepingUnit.GET(LocationCode,Item2."No.",VariantCode) THEN BEGIN
          StockkeepingUnit.INIT;
          StockkeepingUnit."Item No." := Item2."No.";
          StockkeepingUnit."Location Code" := LocationCode;
          StockkeepingUnit."Variant Code" := VariantCode;
          StockkeepingUnit."Shelf No." := Item2."Shelf No.";
          StockkeepingUnit."Standard Cost" := Item2."Standard Cost";
          StockkeepingUnit."Last Direct Cost" := Item2."Last Direct Cost";
          StockkeepingUnit."Unit Cost" := Item2."Unit Cost";
          StockkeepingUnit."Vendor No." := Item2."Vendor No.";
          StockkeepingUnit."Vendor Item No." := Item2."Vendor Item No.";
          StockkeepingUnit."Lead Time Calculation" := Item2."Lead Time Calculation";
          StockkeepingUnit."Reorder Point" := Item2."Reorder Point";
          StockkeepingUnit."Maximum Inventory" := Item2."Maximum Inventory";
          StockkeepingUnit."Reorder Quantity" := Item2."Reorder Quantity";
          StockkeepingUnit."Lot Size" := Item2."Lot Size";
          StockkeepingUnit."Reordering Policy" := Item2."Reordering Policy";
          StockkeepingUnit."Include Inventory" := Item2."Include Inventory";
          StockkeepingUnit."Assembly Policy" := Item2."Assembly Policy";
          StockkeepingUnit."Manufacturing Policy" := Item2."Manufacturing Policy";
          StockkeepingUnit."Discrete Order Quantity" := Item2."Discrete Order Quantity";
          StockkeepingUnit."Minimum Order Quantity" := Item2."Minimum Order Quantity";
          StockkeepingUnit."Maximum Order Quantity" := Item2."Maximum Order Quantity";
          StockkeepingUnit."Safety Stock Quantity" := Item2."Safety Stock Quantity";
          StockkeepingUnit."Order Multiple" := Item2."Order Multiple";
          StockkeepingUnit."Safety Lead Time" := Item2."Safety Lead Time";
          StockkeepingUnit."Flushing Method" := Item2."Flushing Method";
          StockkeepingUnit."Replenishment System" := Item2."Replenishment System";
          StockkeepingUnit."Time Bucket" := Item2."Time Bucket";
          StockkeepingUnit."Rescheduling Period" := Item2."Rescheduling Period";
          StockkeepingUnit."Lot Accumulation Period" := Item2."Lot Accumulation Period";
          StockkeepingUnit."Dampener Period" := Item2."Dampener Period";
          StockkeepingUnit."Dampener Quantity" := Item2."Dampener Quantity";
          StockkeepingUnit."Overflow Level" := Item2."Overflow Level";
          StockkeepingUnit."Last Date Modified" := WORKDATE;
          StockkeepingUnit."Special Equipment Code" := Item2."Special Equipment Code";
          StockkeepingUnit."Put-away Template Code" := Item2."Put-away Template Code";
          StockkeepingUnit."Phys Invt Counting Period Code" :=
            Item2."Phys Invt Counting Period Code";
          StockkeepingUnit."Put-away Unit of Measure Code" :=
            Item2."Put-away Unit of Measure Code";
          StockkeepingUnit."Use Cross-Docking" := Item2."Use Cross-Docking";
          StockkeepingUnit.INSERT(TRUE);
        END;
    END;

    PROCEDURE InitializeRequest@1(CreatePerOption@1000 : 'Location,Variant,Location & Variant';NewItemInInventoryOnly@1001 : Boolean;NewReplacePreviousSKUs@1002 : Boolean);
    BEGIN
      SKUCreationMethod := CreatePerOption;
      ItemInInventoryOnly := NewItemInInventoryOnly;
      ReplacePreviousSKUs := NewReplacePreviousSKUs;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

