OBJECT Page 9062782 Ask nOra - Setup
{
  OBJECT-PROPERTIES
  {
    Date=10/05/16;
    Time=12:00:00 PM;
    Version List=NA2016.15;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Ask nOra - Setup;
               ENG=Ask nOra - Setup];
    InstructionalTextML=[ENU=The page contains the setup options for Ask nOra;
                         ENG=The page contains the setup options for Ask nOra];
    ActionList=ACTIONS
    {
      { 1000000001;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1000000002;1 ;Action    ;
                      Name=Import Config. XML;
                      CaptionML=[ENU=Import Config. XML;
                                 ENG=Import Config. XML];
                      ToolTipML=[ENU=Import the Ask nOra configuration records from an XML file. Any existing configuration records will be overwritten, however any configuration records currently in the database and not in the XML file being imported will remain intact.;
                                 ENG=Import the Ask nOra configuration records from an XML file. Any existing configuration records will be overwritten, however any configuration records currently in the database and not in the XML file being imported will remain intact.];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Import;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 AsknOraSetupTables@1000000000 : XMLport 9062279;
                               BEGIN
                                 XMLPORT.RUN(XMLPORT::"Ask nOra - Config.",FALSE,TRUE);
                               END;
                                }
      { 1000000003;1 ;Action    ;
                      Name=Export Config. XML;
                      CaptionML=[ENU=Export Config. XML;
                                 ENG=Export Config. XML];
                      ToolTipML=[ENU=Exports the existing Ask nOra configuration records to an XML file.;
                                 ENG=Exports the existing Ask nOra configuration records to an XML file.];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Export;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 AsknOraSetupTables@1000000000 : XMLport 9062279;
                               BEGIN
                                 XMLPORT.RUN(XMLPORT::"Ask nOra - Config.",FALSE,FALSE);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1000000000;;Container;
                ContainerType=ContentArea }

    { 1000000013;1;Group  ;
                CaptionML=[ENU=Finding Records;
                           ENG=Finding Records];
                GroupType=Group;
                InstructionalTextML=[ENU=When nOra is working out which record(s) in NAV are being spoken about, it will only look for records in these tables. nOra will use the fields listed to identify the record. For example if you would like nOra to identify Customers by both their No. and Name, then the "No." and "Name" fields should be added to the "Fields to identify records by" list;
                                     ENG=When nOra is working out which record(s) in NAV are being spoken about, it will only look for records in these tables. nOra will use the fields listed to identify the record. For example if you would like nOra to identify Customers by both their No. and Name, then the "No." and "Name" fields should be added to the "Fields to identify records by" list] }

    { 1000000007;2;Group  ;
                GroupType=GridLayout;
                Layout=Rows }

    { 1000000008;3;Group  ;
                GroupType=Group }

    { 1000000011;4;Part   ;
                CaptionML=[ENU=Tables to look in;
                           ENG=Tables to look in];
                PagePartID=Page9062698;
                PartType=Page }

    { 1000000012;4;Part   ;
                CaptionML=[ENU=Fields to identify records by;
                           ENG=Fields to identify records by];
                SubPageLink=Table No.=FIELD(Table No.);
                PagePartID=Page9062699;
                ProviderID=1000000011;
                PartType=Page }

    { 1000000006;1;Group  ;
                CaptionML=[ENU=Words to Ignore;
                           ENG=Words to Ignore];
                GroupType=Group;
                InstructionalTextML=[ENU=When nOra processes as sentence, it will ignore these words so that they don't cause confusion.;
                                     ENG=When nOra processes as sentence, it will ignore these words so that they don't cause confusion.] }

    { 1000000010;2;Group  ;
                GroupType=GridLayout;
                Layout=Rows }

    { 1000000009;3;Group  ;
                GroupType=Group }

    { 1000000016;4;Part   ;
                CaptionML=[ENU=Words to Ignore;
                           ENG=Words to Ignore];
                PagePartID=Page9062788;
                PartType=Page }

    { 1000000004;1;Group  ;
                CaptionML=[ENU=Functions;
                           ENG=Functions];
                GroupType=Group;
                InstructionalTextML=[ENU=Functions are called in sequence when a Sentence is sent to nOra. The process ends as soon as a function is called successfully.;
                                     ENG=Functions are called in sequence when a Sentence is sent to nOra. The process ends as soon as a function is called successfully.] }

    { 1000000024;2;Group  ;
                GroupType=GridLayout;
                Layout=Rows }

    { 1000000023;3;Group  ;
                GroupType=Group }

    { 1000000015;4;Part   ;
                CaptionML=[ENU=Functions;
                           ENG=Functions];
                ToolTipML=[ENU=Functions are called in sequence when a Sentence is sent to nOra. The process ends as soon as a function is called successfully.;
                           ENG=Functions are called in sequence when a Sentence is sent to nOra. The process ends as soon as a function is called successfully.];
                PagePartID=Page9062705;
                PartType=Page }

    { 1000000005;4;Part   ;
                CaptionML=[ENU=Function Aliases;
                           ENG=Function Aliases];
                SubPageLink=Table No.=CONST(9062521),
                            Primary Key 1=FIELD(Code);
                PagePartID=Page9062707;
                ProviderID=1000000015;
                PartType=Page }

    { 1000000020;1;Group  ;
                CaptionML=[ENU=Actions;
                           ENG=Actions];
                GroupType=Group;
                InstructionalTextML=[ENU=nOra looks to perform an Action once it has got down to the "ACTION" function (see the Functions FastTab). nOra looks for the Code (or Alias) of the Action in the sentence. If the Action is found in the sentence then it is carried out.;
                                     ENG=nOra looks to perform an Action once it has got down to the "ACTION" function (see the Functions FastTab). nOra looks for the Code (or Alias) of the Action in the sentence. If the Action is found in the sentence then it is carried out.] }

    { 1000000026;2;Group  ;
                GroupType=GridLayout;
                Layout=Rows }

    { 1000000025;3;Group  ;
                GroupType=Group }

    { 1000000014;4;Part   ;
                CaptionML=[ENU=Actions;
                           ENG=Actions];
                PagePartID=Page9062706;
                PartType=Page }

    { 1000000021;4;Part   ;
                CaptionML=[ENU=Action Aliases;
                           ENG=Action Aliases];
                SubPageLink=Table No.=CONST(9062520),
                            Primary Key 1=FIELD(Code);
                PagePartID=Page9062707;
                ProviderID=1000000014;
                PartType=Page }

    { 1000000018;1;Group  ;
                CaptionML=[ENU=Text Snippets;
                           ENG=Text Snippets];
                GroupType=Group;
                InstructionalTextML=[ENU=nOra looks to return a Text Snippet once it has got down to the "TEXTSNIPPET" function (see the Functions FastTab). nOra looks for the Code (or Alias) of the Text Snippet in the sentence. If the Text Snippet is found in the sentence then the corresponding "Text Snippet Lines" are sent back to the user;
                                     ENG=nOra looks to return a Text Snippet once it has got down to the "TEXTSNIPPET" function (see the Functions FastTab). nOra looks for the Code (or Alias) of the Text Snippet in the sentence. If the Text Snippet is found in the sentence then the corresponding "Text Snippet Lines" are sent back to the user] }

    { 1000000028;2;Group  ;
                GroupType=GridLayout;
                Layout=Rows }

    { 1000000027;3;Group  ;
                GroupType=Group }

    { 1000000017;4;Part   ;
                CaptionML=[ENU=Text Snippets;
                           ENG=Text Snippets];
                PagePartID=Page9062812;
                PartType=Page }

    { 1000000030;4;Part   ;
                CaptionML=[ENU=Text Snippet Lines;
                           ENG=Text Snippet Lines];
                SubPageLink=Snippet Code=FIELD(Code),
                            User ID=FIELD(User ID);
                PagePartID=Page9062814;
                ProviderID=1000000017;
                PartType=Page }

    { 1000000029;3;Group  ;
                GroupType=Group }

    { 1000000019;4;Part   ;
                CaptionML=[ENU=Text Snippet Aliases;
                           ENG=Text Snippet Aliases];
                SubPageLink=Table No.=CONST(9062596),
                            Primary Key 1=FIELD(Code),
                            Primary Key 2=FIELD(FILTER(User ID));
                PagePartID=Page9062707;
                ProviderID=1000000017;
                PartType=Page }

    { 1000000032;1;Group  ;
                CaptionML=[ENU=SQL Integration;
                           ENG=SQL Integration];
                GroupType=Group;
                InstructionalTextML=[ENU=In order to access information quickly, nOra connects directly to the SQL Server. The following settings specify how this connection is made;
                                     ENG=In order to access information quickly, nOra connects directly to the SQL Server. The following settings specify how this connection is made] }

    { 1000000033;2;Group  ;
                GroupType=GridLayout;
                Layout=Rows }

    { 1000000022;3;Group  ;
                GroupType=Group }

    { 1000000031;4;Part   ;
                CaptionML=[ENU=SQL Integration Settings;
                           ENG=SQL Integration Settings];
                SubPageLink=Group=CONST(SQL INTEGRATION);
                PagePartID=Page9062673;
                PartType=Page }

    { 1000000034;1;Group  ;
                CaptionML=[ENU=Field Aliases;
                           ENG=Field Aliases];
                GroupType=Group }

    { 1000000041;2;Group  ;
                GroupType=GridLayout;
                Layout=Rows }

    { 1000000040;3;Group  ;
                GroupType=Group }

    { 1000000035;4;Part   ;
                PagePartID=Page9062922;
                PartType=Page }

    { 1000000042;3;Group  ;
                GroupType=Group }

    { 1000000036;4;Part   ;
                SubPageLink=TableNo=FIELD(ID);
                PagePartID=Page9062923;
                ProviderID=1000000035;
                PartType=Page }

    { 1000000038;4;Part   ;
                CaptionML=[ENU=Field Aliases;
                           ENG=Field Aliases];
                SubPageLink=Table No.=CONST(2000000041),
                            Primary Key 1=FIELD(TableNo),
                            Primary Key 2=FIELD(No.);
                PagePartID=Page9062707;
                ProviderID=1000000036;
                PartType=Page }

    { 1000000043;3;Group  ;
                GroupType=Group }

    { 1000000037;4;Part   ;
                SubPageLink=Table No.=FIELD(ID);
                PagePartID=Page9062924;
                ProviderID=1000000035;
                PartType=Page }

    { 1000000039;4;Part   ;
                CaptionML=[ENU=Enhanced Field Aliases;
                           ENG=Enhanced Field Aliases];
                SubPageLink=Table No.=CONST(9062327),
                            Primary Key 1=FIELD(Table No.),
                            Primary Key 2=FIELD(Enhanced Field No.);
                PagePartID=Page9062707;
                ProviderID=1000000037;
                PartType=Page }

  }
  CODE
  {
    VAR
      tImportComplete@1000000000 : TextConst 'ENU=Import Complete;ENG=Import Complete';
      tExportComplete@1000000001 : TextConst 'ENU=Export Complete;ENG=Export Complete';

    BEGIN
    {
      //DOC NA2016.4  JH 28/08/2015 - Upgraded to 2016
      //DOC NA2016.15 JH 10/05/2016 - CfMD amendments
    }
    END.
  }
}

