OBJECT Page 6631 Sales Return Order Subform
{
  OBJECT-PROPERTIES
  {
    Date=15/10/18;
    Time=[ 9:14:26 AM];
    Modified=Yes;
    Version List=NAVW19.00.00.44365,NH2016.12,NS2016.16;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Lines;
               ENG=Lines];
    MultipleNewLines=Yes;
    LinksAllowed=No;
    SourceTable=Table37;
    DelayedInsert=Yes;
    SourceTableView=WHERE(Document Type=FILTER(Return Order));
    PageType=ListPart;
    AutoSplitKey=Yes;
    OnAfterGetRecord=BEGIN
                       ShowShortcutDimCode(ShortcutDimCode);
                     END;

    OnNewRecord=BEGIN
                  InitType;
                  CLEAR(ShortcutDimCode);
                END;

    OnDeleteRecord=VAR
                     ReserveSalesLine@1000 : Codeunit 99000832;
                   BEGIN
                     IF (Quantity <> 0) AND ItemExists("No.") THEN BEGIN
                       COMMIT;
                       IF NOT ReserveSalesLine.DeleteLineConfirm(Rec) THEN
                         EXIT(FALSE);
                       ReserveSalesLine.DeleteLine(Rec);
                     END;
                   END;

    OnAfterGetCurrRecord=BEGIN
                           IF SalesHeader.GET("Document Type","Document No.") THEN;

                           DocumentTotals.SalesUpdateTotalsControls(Rec,TotalSalesHeader,TotalSalesLine,RefreshMessageEnabled,
                             TotalAmountStyle,RefreshMessageText,InvDiscAmountEditable,CurrPage.EDITABLE,VATAmount);

                           TypeChosen := HasTypeToFillMandatotyFields;
                         END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1906587504;1 ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 ENG=F&unctions];
                      Image=Action }
      { 1901991504;2 ;Action    ;
                      AccessByPermission=TableData 90=R;
                      CaptionML=[ENU=E&xplode BOM;
                                 ENG=E&xplode BOM];
                      Image=ExplodeBOM;
                      OnAction=BEGIN
                                 ExplodeBOM;
                               END;
                                }
      { 1901991804;2 ;Action    ;
                      AccessByPermission=TableData 279=R;
                      CaptionML=[ENU=Insert &Ext. Texts;
                                 ENG=Insert &Ext. Texts];
                      Image=Text;
                      OnAction=BEGIN
                                 InsertExtendedText(TRUE);
                               END;
                                }
      { 1902085804;2 ;Action    ;
                      Name=Reserve;
                      CaptionML=[ENU=&Reserve;
                                 ENG=&Reserve];
                      Image=Reserve;
                      OnAction=BEGIN
                                 PageShowReservation;
                               END;
                                }
      { 1906421304;2 ;Action    ;
                      CaptionML=[ENU=Order &Tracking;
                                 ENG=Order &Tracking];
                      Image=OrderTracking;
                      OnAction=BEGIN
                                 ShowTracking;
                               END;
                                }
      { 1907935204;1 ;ActionGroup;
                      CaptionML=[ENU=&Line;
                                 ENG=&Line];
                      Image=Line }
      { 1907981204;2 ;ActionGroup;
                      CaptionML=[ENU=Item Availability by;
                                 ENG=Item Availability by];
                      Image=ItemAvailability }
      { 5       ;3   ;Action    ;
                      CaptionML=[ENU=Event;
                                 ENG=Event];
                      Image=Event;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromSalesLine(Rec,ItemAvailFormsMgt.ByEvent)
                               END;
                                }
      { 1903587104;3 ;Action    ;
                      CaptionML=[ENU=Period;
                                 ENG=Period];
                      Image=Period;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromSalesLine(Rec,ItemAvailFormsMgt.ByPeriod)
                               END;
                                }
      { 1903193004;3 ;Action    ;
                      CaptionML=[ENU=Variant;
                                 ENG=Variant];
                      Image=ItemVariant;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromSalesLine(Rec,ItemAvailFormsMgt.ByVariant)
                               END;
                                }
      { 1901743104;3 ;Action    ;
                      AccessByPermission=TableData 14=R;
                      CaptionML=[ENU=Location;
                                 ENG=Location];
                      Image=Warehouse;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromSalesLine(Rec,ItemAvailFormsMgt.ByLocation)
                               END;
                                }
      { 3       ;3   ;Action    ;
                      CaptionML=[ENU=BOM Level;
                                 ENG=BOM Level];
                      Image=BOMLevel;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromSalesLine(Rec,ItemAvailFormsMgt.ByBOM)
                               END;
                                }
      { 1000000009;2 ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=[ENU=Ledger E&ntries;
                                 ENG=Ledger E&ntries];
                      RunObject=Page 38;
                      RunPageView=SORTING(Item No.);
                      RunPageLink=Item No.=FIELD(No.),
                                  Variant Code=FIELD(Variant Code);
                      Promoted=No;
                      Image=ItemLedger;
                      PromotedCategory=Process }
      { 1000000010;2 ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Card;
                                 ENG=Card];
                      RunObject=Page 30;
                      RunPageLink=No.=FIELD(No.);
                      Image=EditLines }
      { 1902740304;2 ;Action    ;
                      Name=Dimensions;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 ENG=Dimensions];
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDimensions;
                               END;
                                }
      { 1900525904;2 ;Action    ;
                      Name=Comments;
                      CaptionML=[ENU=Co&mments;
                                 ENG=Co&mments];
                      Image=ViewComments;
                      OnAction=BEGIN
                                 ShowLineComments;
                               END;
                                }
      { 1907184504;2 ;Action    ;
                      AccessByPermission=TableData 5800=R;
                      CaptionML=[ENU=Item Charge &Assignment;
                                 ENG=Item Charge &Assignment];
                      Image=ItemCosts;
                      OnAction=BEGIN
                                 ItemChargeAssgnt;
                               END;
                                }
      { 1905987604;2 ;Action    ;
                      Name=ItemTrackingLines;
                      ShortCutKey=Shift+Ctrl+I;
                      CaptionML=[ENU=Item &Tracking Lines;
                                 ENG=Item &Tracking Lines];
                      Image=ItemTrackingLines;
                      OnAction=BEGIN
                                 OpenItemTrackingLines;
                               END;
                                }
      { 19      ;2   ;Action    ;
                      Name=DeferralSchedule;
                      CaptionML=[ENU=Deferral Schedule;
                                 ENG=Deferral Schedule];
                      Enabled="Deferral Code" <> '';
                      Image=PaymentPeriod;
                      OnAction=VAR
                                 DeferralUtilities@1000 : Codeunit 1720;
                               BEGIN
                                 SalesHeader.GET("Document Type","Document No.");
                                 IF ShowDeferrals(SalesHeader."Posting Date",SalesHeader."Currency Code") THEN BEGIN
                                   "Returns Deferral Start Date" :=
                                     DeferralUtilities.GetDeferralStartDate(DeferralUtilities.GetSalesDeferralDocType,"Document Type",
                                       "Document No.","Line No.","Deferral Code",SalesHeader."Posting Date");
                                   CurrPage.SAVERECORD;
                                 END;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 1000000011;2;Field  ;
                SourceExpr="Line No.";
                Visible=FALSE }

    { 1000000012;2;Field  ;
                SourceExpr="Main Line No.";
                Visible=FALSE }

    { 2   ;2   ;Field     ;
                SourceExpr=Type;
                OnValidate=BEGIN
                             NoOnAfterValidate;
                             TypeChosen := HasTypeToFillMandatotyFields;

                             IF xRec."No." <> '' THEN
                               RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 4   ;2   ;Field     ;
                SourceExpr="No.";
                OnValidate=BEGIN
                             ShowShortcutDimCode(ShortcutDimCode);
                             NoOnAfterValidate;

                             IF xRec."No." <> '' THEN
                               RedistributeTotalsOnAfterValidate;
                           END;

                ShowMandatory=TypeChosen }

    { 9063150;2;Field     ;
                Description=NH2016.12;
                SourceExpr="Catalogue Code" }

    { 34  ;2   ;Field     ;
                SourceExpr="Cross-Reference No.";
                Visible=FALSE;
                OnValidate=BEGIN
                             CrossReferenceNoOnAfterValidat;
                           END;

                OnLookup=BEGIN
                           CrossReferenceNoLookUp;
                           InsertExtendedText(FALSE);
                         END;
                          }

    { 64  ;2   ;Field     ;
                SourceExpr="IC Partner Ref. Type";
                Visible=FALSE }

    { 68  ;2   ;Field     ;
                SourceExpr="IC Partner Reference";
                Visible=FALSE }

    { 18  ;2   ;Field     ;
                SourceExpr="Variant Code";
                Visible=FALSE }

    { 38  ;2   ;Field     ;
                SourceExpr=Nonstock;
                Visible=FALSE }

    { 58  ;2   ;Field     ;
                SourceExpr="VAT Prod. Posting Group";
                Visible=FALSE;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 6   ;2   ;Field     ;
                SourceExpr=Description;
                QuickEntry=FALSE }

    { 66  ;2   ;Field     ;
                SourceExpr="Return Reason Code" }

    { 72  ;2   ;Field     ;
                SourceExpr="Location Code";
                Visible=TRUE;
                QuickEntry=FALSE }

    { 62  ;2   ;Field     ;
                SourceExpr="Bin Code";
                Visible=FALSE }

    { 28  ;2   ;Field     ;
                SourceExpr=Reserve;
                Visible=FALSE;
                OnValidate=BEGIN
                             ReserveOnAfterValidate;
                           END;
                            }

    { 8   ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr=Quantity;
                OnValidate=BEGIN
                             QuantityOnAfterValidate;
                             RedistributeTotalsOnAfterValidate;
                           END;

                ShowMandatory=TypeChosen }

    { 26  ;2   ;Field     ;
                Name=Reserved Quantity;
                CaptionML=[ENU=Reserved Quantity;
                           ENG=Reserved Quantity];
                DecimalPlaces=0:5;
                BlankZero=Yes;
                SourceExpr=ReverseReservedQtySign;
                CaptionClass=FIELDCAPTION("Reserved Quantity");
                Visible=FALSE;
                OnDrillDown=BEGIN
                              CurrPage.SAVERECORD;
                              COMMIT;
                              ShowReservationEntries(TRUE);
                              UpdateForm(TRUE);
                            END;

                QuickEntry=FALSE }

    { 22  ;2   ;Field     ;
                SourceExpr="Unit of Measure Code";
                OnValidate=BEGIN
                             UnitofMeasureCodeOnAfterValida;
                             RedistributeTotalsOnAfterValidate;
                           END;

                QuickEntry=FALSE }

    { 10  ;2   ;Field     ;
                SourceExpr="Unit of Measure";
                Visible=FALSE }

    { 70  ;2   ;Field     ;
                SourceExpr="Unit Cost (LCY)";
                Visible=FALSE }

    { 12  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Unit Price";
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;

                ShowMandatory=TypeChosen }

    { 92  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Line Amount";
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 16  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Line Discount %";
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 56  ;2   ;Field     ;
                SourceExpr="Line Discount Amount";
                Visible=FALSE;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 54  ;2   ;Field     ;
                SourceExpr="Allow Invoice Disc.";
                Visible=FALSE }

    { 20  ;2   ;Field     ;
                SourceExpr="Inv. Discount Amount";
                Visible=FALSE }

    { 82  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Return Qty. to Receive" }

    { 84  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Return Qty. Received" }

    { 24  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Qty. to Invoice" }

    { 50  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Quantity Invoiced" }

    { 14  ;2   ;Field     ;
                SourceExpr="Allow Item Charge Assignment";
                Visible=FALSE }

    { 52  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Qty. to Assign";
                OnDrillDown=BEGIN
                              CurrPage.SAVERECORD;
                              ShowItemChargeAssgnt;
                              UpdateForm(FALSE);
                            END;

                QuickEntry=FALSE }

    { 60  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Qty. Assigned";
                OnDrillDown=BEGIN
                              CurrPage.SAVERECORD;
                              ShowItemChargeAssgnt;
                              UpdateForm(FALSE);
                            END;

                QuickEntry=FALSE }

    { 78  ;2   ;Field     ;
                SourceExpr="Requested Delivery Date";
                Visible=FALSE }

    { 80  ;2   ;Field     ;
                SourceExpr="Promised Delivery Date";
                Visible=FALSE }

    { 94  ;2   ;Field     ;
                SourceExpr="Planned Delivery Date";
                Visible=FALSE;
                QuickEntry=FALSE }

    { 96  ;2   ;Field     ;
                SourceExpr="Planned Shipment Date";
                Visible=FALSE }

    { 98  ;2   ;Field     ;
                SourceExpr="Shipment Date";
                Visible=FALSE;
                QuickEntry=FALSE }

    { 100 ;2   ;Field     ;
                SourceExpr="Shipping Agent Code";
                Visible=FALSE }

    { 102 ;2   ;Field     ;
                SourceExpr="Shipping Agent Service Code";
                Visible=FALSE }

    { 104 ;2   ;Field     ;
                SourceExpr="Shipping Time";
                Visible=FALSE }

    { 30  ;2   ;Field     ;
                SourceExpr="Blanket Order No.";
                Visible=FALSE }

    { 32  ;2   ;Field     ;
                SourceExpr="Blanket Order Line No.";
                Visible=FALSE }

    { 5810;2   ;Field     ;
                SourceExpr="Appl.-from Item Entry";
                Visible=FALSE }

    { 48  ;2   ;Field     ;
                SourceExpr="Appl.-to Item Entry";
                Visible=FALSE }

    { 17  ;2   ;Field     ;
                SourceExpr="Deferral Code";
                Enabled=(Type <> Type::"Fixed Asset") AND (Type <> Type::" ") }

    { 21  ;2   ;Field     ;
                SourceExpr="Returns Deferral Start Date";
                Enabled=(Type <> Type::"Fixed Asset") AND (Type <> Type::" ") }

    { 76  ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=FALSE }

    { 74  ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 2 Code";
                Visible=FALSE }

    { 300 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[3];
                CaptionClass='1,2,3';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(3),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(3,ShortcutDimCode[3]);
                           END;
                            }

    { 302 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[4];
                CaptionClass='1,2,4';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(4),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(4,ShortcutDimCode[4]);
                           END;
                            }

    { 304 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[5];
                CaptionClass='1,2,5';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(5),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(5,ShortcutDimCode[5]);
                           END;
                            }

    { 306 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[6];
                CaptionClass='1,2,6';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(6),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(6,ShortcutDimCode[6]);
                           END;
                            }

    { 308 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[7];
                CaptionClass='1,2,7';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(7),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(7,ShortcutDimCode[7]);
                           END;
                            }

    { 310 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[8];
                CaptionClass='1,2,8';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(8),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(8,ShortcutDimCode[8]);
                           END;
                            }

    { 1170000000;2;Field  ;
                SourceExpr="Gen. Bus. Posting Group" }

    { 1170000001;2;Field  ;
                SourceExpr="Gen. Prod. Posting Group" }

    { 37  ;1   ;Group     ;
                GroupType=Group }

    { 33  ;2   ;Group     ;
                GroupType=Group }

    { 31  ;3   ;Field     ;
                Name=Invoice Discount Amount;
                CaptionML=[ENU=Invoice Discount Amount;
                           ENG=Invoice Discount Amount];
                SourceExpr=TotalSalesLine."Inv. Discount Amount";
                AutoFormatType=1;
                AutoFormatExpr=TotalSalesHeader."Currency Code";
                Editable=InvDiscAmountEditable;
                Style=Subordinate;
                StyleExpr=RefreshMessageEnabled;
                OnValidate=VAR
                             SalesHeader@1000 : Record 36;
                           BEGIN
                             SalesHeader.GET("Document Type","Document No.");
                             SalesCalcDiscByType.ApplyInvDiscBasedOnAmt(TotalSalesLine."Inv. Discount Amount",SalesHeader);
                             CurrPage.UPDATE(FALSE);
                           END;
                            }

    { 29  ;3   ;Field     ;
                Name=Invoice Disc. Pct.;
                CaptionML=[ENU=Invoice Discount %;
                           ENG=Invoice Discount %];
                DecimalPlaces=0:2;
                SourceExpr=SalesCalcDiscByType.GetCustInvoiceDiscountPct(Rec);
                Visible=TRUE;
                Editable=FALSE;
                Style=Subordinate;
                StyleExpr=RefreshMessageEnabled }

    { 15  ;2   ;Group     ;
                GroupType=Group }

    { 13  ;3   ;Field     ;
                Name=Total Amount Excl. VAT;
                DrillDown=No;
                CaptionML=[ENU=Total Amount Excl. VAT;
                           ENG=Total Amount Excl. VAT];
                SourceExpr=TotalSalesLine.Amount;
                AutoFormatType=1;
                AutoFormatExpr=TotalSalesHeader."Currency Code";
                CaptionClass=DocumentTotals.GetTotalExclVATCaption(SalesHeader."Currency Code");
                Editable=FALSE;
                Style=Subordinate;
                StyleExpr=RefreshMessageEnabled }

    { 11  ;3   ;Field     ;
                Name=Total VAT Amount;
                CaptionML=[ENU=Total VAT;
                           ENG=Total VAT];
                SourceExpr=VATAmount;
                AutoFormatType=1;
                AutoFormatExpr=TotalSalesHeader."Currency Code";
                CaptionClass=DocumentTotals.GetTotalVATCaption(SalesHeader."Currency Code");
                Editable=FALSE;
                Style=Subordinate;
                StyleExpr=RefreshMessageEnabled }

    { 9   ;3   ;Field     ;
                Name=Total Amount Incl. VAT;
                CaptionML=[ENU=Total Amount Incl. VAT;
                           ENG=Total Amount Incl. VAT];
                SourceExpr=TotalSalesLine."Amount Including VAT";
                AutoFormatType=1;
                AutoFormatExpr=TotalSalesHeader."Currency Code";
                CaptionClass=DocumentTotals.GetTotalInclVATCaption(SalesHeader."Currency Code");
                Editable=FALSE;
                StyleExpr=TotalAmountStyle }

    { 7   ;3   ;Field     ;
                Name=RefreshTotals;
                DrillDown=Yes;
                CaptionML=[ENU=RefreshTotals;
                           ENG=RefreshTotals];
                SourceExpr=RefreshMessageText;
                Enabled=RefreshMessageEnabled;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              DocumentTotals.SalesRedistributeInvoiceDiscountAmounts(Rec,VATAmount,TotalSalesLine);
                              CurrPage.UPDATE(FALSE);
                            END;

                ShowCaption=No }

    { 1000000007;2;Field  ;
                Description=NS2015.1;
                SourceExpr="Style No.";
                Visible=FALSE }

    { 1000000006;2;Field  ;
                Description=NS2015.1;
                SourceExpr="Season Code";
                Visible=FALSE }

    { 1000000008;2;Field  ;
                Description=NS2015.1;
                SourceExpr="Sub-Season Code" }

    { 1000000005;2;Field  ;
                Description=NS2015.1;
                SourceExpr="Brand Code";
                Visible=FALSE }

    { 1000000004;2;Field  ;
                Description=NS2015.1;
                SourceExpr="Division Code";
                Visible=FALSE }

    { 1000000003;2;Field  ;
                Description=NS2015.1;
                SourceExpr="Department Code";
                Visible=FALSE }

    { 1000000002;2;Field  ;
                Description=NS2015.1;
                SourceExpr="Group Code";
                Visible=FALSE }

    { 1000000001;2;Field  ;
                Description=NS2015.1;
                SourceExpr="Category Code";
                Visible=FALSE }

    { 1000000000;2;Field  ;
                Description=NS2015.1;
                SourceExpr="Sub-Category Code";
                Visible=FALSE }

  }
  CODE
  {
    VAR
      TotalSalesHeader@1005 : Record 36;
      TotalSalesLine@1004 : Record 37;
      SalesHeader@1003 : Record 36;
      TransferExtendedText@1000 : Codeunit 378;
      ItemAvailFormsMgt@1002 : Codeunit 353;
      SalesCalcDiscByType@1008 : Codeunit 56;
      DocumentTotals@1007 : Codeunit 57;
      VATAmount@1006 : Decimal;
      ShortcutDimCode@1001 : ARRAY [8] OF Code[20];
      InvDiscAmountEditable@1014 : Boolean;
      TotalAmountStyle@1013 : Text;
      RefreshMessageEnabled@1012 : Boolean;
      RefreshMessageText@1011 : Text;
      TypeChosen@1022 : Boolean;

    PROCEDURE ApproveCalcInvDisc@1();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Sales-Disc. (Yes/No)",Rec);
    END;

    LOCAL PROCEDURE CalcInvDisc@6();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Sales-Calc. Discount",Rec);
    END;

    LOCAL PROCEDURE ExplodeBOM@3();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Sales-Explode BOM",Rec);
    END;

    LOCAL PROCEDURE InsertExtendedText@5(Unconditionally@1000 : Boolean);
    BEGIN
      IF TransferExtendedText.SalesCheckIfAnyExtText(Rec,Unconditionally) THEN BEGIN
        CurrPage.SAVERECORD;
        COMMIT;
        TransferExtendedText.InsertSalesExtText(Rec);
      END;
      IF TransferExtendedText.MakeUpdate THEN
        UpdateForm(TRUE);
    END;

    LOCAL PROCEDURE PageShowReservation@2();
    BEGIN
      FIND;
      ShowReservation;
    END;

    LOCAL PROCEDURE ShowTracking@13();
    VAR
      TrackingForm@1000 : Page 99000822;
    BEGIN
      TrackingForm.SetSalesLine(Rec);
      TrackingForm.RUNMODAL;
    END;

    LOCAL PROCEDURE ItemChargeAssgnt@5800();
    BEGIN
      ShowItemChargeAssgnt;
    END;

    PROCEDURE UpdateForm@12(SetSaveRecord@1000 : Boolean);
    BEGIN
      CurrPage.UPDATE(SetSaveRecord);
    END;

    LOCAL PROCEDURE NoOnAfterValidate@19066594();
    BEGIN
      InsertExtendedText(FALSE);
      IF (Type = Type::"Charge (Item)") AND ("No." <> xRec."No.") AND
         (xRec."No." <> '')
      THEN
        CurrPage.SAVERECORD;

      IF (Reserve = Reserve::Always) AND
         ("Outstanding Qty. (Base)" <> 0) AND
         ("No." <> xRec."No.")
      THEN BEGIN
        CurrPage.SAVERECORD;
        AutoReserve;
        CurrPage.UPDATE(FALSE);
      END;
    END;

    LOCAL PROCEDURE CrossReferenceNoOnAfterValidat@19048248();
    BEGIN
      InsertExtendedText(FALSE);
    END;

    LOCAL PROCEDURE ReserveOnAfterValidate@19004502();
    BEGIN
      IF (Reserve = Reserve::Always) AND ("Outstanding Qty. (Base)" <> 0) THEN BEGIN
        CurrPage.SAVERECORD;
        AutoReserve;
      END;
    END;

    LOCAL PROCEDURE QuantityOnAfterValidate@19032465();
    BEGIN
      IF Reserve = Reserve::Always THEN BEGIN
        CurrPage.SAVERECORD;
        AutoReserve;
      END;
    END;

    LOCAL PROCEDURE UnitofMeasureCodeOnAfterValida@19057939();
    BEGIN
      IF Reserve = Reserve::Always THEN BEGIN
        CurrPage.SAVERECORD;
        AutoReserve;
      END;
    END;

    LOCAL PROCEDURE ReverseReservedQtySign@7() : Decimal;
    BEGIN
      CALCFIELDS("Reserved Quantity");
      EXIT(-"Reserved Quantity");
    END;

    LOCAL PROCEDURE RedistributeTotalsOnAfterValidate@8();
    BEGIN
      CurrPage.SAVERECORD;

      SalesHeader.GET("Document Type","Document No.");
      IF DocumentTotals.SalesCheckNumberOfLinesLimit(SalesHeader) THEN
        DocumentTotals.SalesRedistributeInvoiceDiscountAmounts(Rec,VATAmount,TotalSalesLine);
      CurrPage.UPDATE;
    END;

    BEGIN
    {
      //DOC NS2015.1  AZ 23/01/2014 - nSemble fields added
      //DOC NH2016.12 JH 18/11/2015 - "Catalogue Code" field added
      //DOC NS2016.16 JH 04/10/2016 - nSemble 2016
    }
    END.
  }
}

