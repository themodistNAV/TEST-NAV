OBJECT Page 228 Res. Gr. Allocated per Job
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00,NAVGB9.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Res. Gr. Allocated per Job;
               ENG=Res. Gr. Allocated per Job];
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    LinksAllowed=No;
    SourceTable=Table167;
    DataCaptionExpr='';
    PageType=Card;
    OnOpenPage=BEGIN
                 ArrayLength := 32;
                 SetColumns(SetWanted::Initial);
                 IF HASFILTER THEN
                   ResourceGrFilter := GETFILTER("Resource Gr. Filter");
               END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 13      ;1   ;Action    ;
                      Name=ShowMatrix;
                      CaptionML=[ENU=Show Matrix;
                                 ENG=Show Matrix];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ShowMatrix;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 HorizontalRecord@1003 : Record 1003;
                                 ResGrpPerJobFormWithMatrix@1000 : Page 9213;
                               BEGIN
                                 HorizontalRecord.SETRANGE("Resource Group No.",ResourceGrFilter);
                                 HorizontalRecord.SETRANGE(Type,HorizontalRecord.Type::Resource);
                                 JobRec.SETRANGE("Resource Gr. Filter",ResourceGrFilter);
                                 ResGrpPerJobFormWithMatrix.Load(JobRec,HorizontalRecord,MatrixColumnCaptions,MatrixRecords,Periods);
                                 ResGrpPerJobFormWithMatrix.RUNMODAL;
                               END;
                                }
      { 9       ;1   ;Action    ;
                      CaptionML=[ENU=Next Set;
                                 ENG=Next Set];
                      ToolTipML=[ENU=Next Set;
                                 ENG=Next Set];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextSet;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SetColumns(SetWanted::Next);
                               END;
                                }
      { 8       ;1   ;Action    ;
                      CaptionML=[ENU=Previous Set;
                                 ENG=Previous Set];
                      ToolTipML=[ENU=Previous Set;
                                 ENG=Previous Set];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousSet;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SetColumns(SetWanted::Previous);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 12  ;1   ;Group     ;
                CaptionML=[ENU=General;
                           ENG=General] }

    { 1   ;2   ;Field     ;
                Name=Resource Gr. Filter;
                Lookup=Yes;
                CaptionML=[ENU=Resource Gr. Filter;
                           ENG=Resource Gr. Filter];
                SourceExpr=ResourceGrFilter;
                TableRelation="Resource Group" }

    { 1906098301;1;Group  ;
                CaptionML=[ENU=Matrix Options;
                           ENG=Matrix Options] }

    { 3   ;2   ;Field     ;
                CaptionML=[ENU=View by;
                           ENG=View by];
                OptionCaptionML=[ENU=Day,Week,Month,Quarter,Year;
                                 ENG=Day,Week,Month,Quarter,Year];
                SourceExpr=PeriodType;
                OnValidate=BEGIN
                             DateControl;
                             SetColumns(SetWanted::Initial);
                             PeriodTypeOnAfterValidate;
                           END;
                            }

    { 1040001;2;Field     ;
                CaptionML=[ENU=Calendar Source;
                           ENG=Calendar Source];
                OptionCaptionML=[ENU=" ,System Calendar,Acc. Period Calendar";
                                 ENG=" ,System Calendar,Acc. Period Calendar"];
                SourceExpr=CalendarSource;
                OnValidate=BEGIN
                             SetColumns(SetWanted::Initial);
                           END;
                            }

    { 5   ;2   ;Field     ;
                CaptionML=[ENU=Date Filter;
                           ENG=Date Filter];
                SourceExpr=DateFilter;
                OnValidate=BEGIN
                             DateControl;
                             SetColumns(SetWanted::Initial);
                             DateFilterOnAfterValidate;
                           END;
                            }

    { 7   ;2   ;Field     ;
                CaptionML=[ENU=Column set;
                           ENG=Column set];
                SourceExpr=ColumnsSet;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      MatrixRecords@1035 : ARRAY [32] OF Record 2000000007;
      JobRec@1020 : Record 167;
      ResRec2@1028 : Record 156;
      ApplicationManagement@1005 : Codeunit 1;
      DateFilter@1000 : Text[300];
      ResourceGrFilter@1018 : Code[300];
      PeriodType@1027 : 'Day,Week,Month,Quarter,Year';
      ArrayLength@1022 : Integer;
      InternalDateFilter@1021 : Text[30];
      Periods@1029 : Integer;
      CurrSetLength@1031 : Integer;
      SetWanted@1030 : 'Initial,Previous,Same,Next';
      PKFirstRecInCurrSet@1034 : Text[1024];
      MatrixColumnCaptions@1033 : ARRAY [32] OF Text[100];
      ColumnsSet@1032 : Text[1024];
      CalendarSource@1040000 : ' ,System,AccPeriod';

    LOCAL PROCEDURE DateControl@6();
    BEGIN
      IF ApplicationManagement.MakeDateFilter(DateFilter) = 0 THEN;
      ResRec2.SETFILTER("Date Filter",DateFilter);
      DateFilter := ResRec2.GETFILTER("Date Filter");
      InternalDateFilter := DateFilter;
    END;

    PROCEDURE SetColumns@7(SetWanted@1001 : 'Initial,Previous,Same,Next');
    VAR
      MatrixMgt@1000 : Codeunit 9200;
    BEGIN
      MatrixMgt.GeneratePeriodMatrixData(SetWanted,32,FALSE,PeriodType,DateFilter,PKFirstRecInCurrSet,MatrixColumnCaptions,
        ColumnsSet,CurrSetLength,MatrixRecords,CalendarSource);
    END;

    LOCAL PROCEDURE PeriodTypeOnAfterValidate@19015506();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE DateFilterOnAfterValidate@19006009();
    BEGIN
      CurrPage.UPDATE;
    END;

    BEGIN
    END.
  }
}

