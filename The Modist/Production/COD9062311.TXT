OBJECT Codeunit 9062311 Planning Board Theme Toolkit
{
  OBJECT-PROPERTIES
  {
    Date=24/10/15;
    Time=[ 8:14:30 PM];
    Version List=NA2016.12;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      PlanningBoardHeader@1000000000 : Record 9062337;
      PlanningBoardTheme@1000000001 : Record 9062350;
      PlanningBoardThemeView@1000000015 : Record 9062351;
      PlanningBoardToolkit@1000000002 : Codeunit 9062301;
      tOddRowBgr@1000000003 : TextConst 'ENU=PB %1 ODD R BGR;ENG=PB %1 ODD R BGR';
      tOddRowBrd@1000000004 : TextConst 'ENU=PB %1 ODD R BRD;ENG=PB %1 ODD R BRD';
      PaletteCode@1000000005 : Code[10];
      PaletteRed@1000000008 : Integer;
      PaletteGreen@1000000007 : Integer;
      PaletteBlue@1000000006 : Integer;
      tOddRowWkdBgr@1000000009 : TextConst 'ENU=PB %1 ODD WR BGR;ENG=PB %1 ODD WR BGR';
      tOddRowWkdBrd@1000000010 : TextConst 'ENU=PB %1 ODD WR BDR;ENG=PB %1 ODD WR BDR';
      tEvenRowBgr@1000000014 : TextConst 'ENU=PB %1 EVN R BGR;ENG=PB %1 EVN R BGR';
      tEvenRowBrd@1000000013 : TextConst 'ENU=PB %1 EVN R BRD;ENG=PB %1 EVN R BRD';
      tEvenRowWkdBgr@1000000012 : TextConst 'ENU=PB %1 EVN WR BGR;ENG=PB %1 EVN WR BGR';
      tEvenRowWkdBrd@1000000011 : TextConst 'ENU=PB %1 EVN WR BDR;ENG=PB %1 EVN WR BDR';
      tSelEntFgr@1000000017 : TextConst 'ENU=PB %1 S EN FGR;ENG=PB %1 S EN FGR';
      tSelEntBgr@1000000016 : TextConst 'ENU=PB %1 S EN BGR;ENG=PB %1 S EN BGR';
      tSelEntBrd@1000000018 : TextConst 'ENU=PB %1 S EN BRD;ENG=PB %1 S EN BRD';
      tSelBgr@1000000019 : TextConst 'ENU=PB %1 SEL BGR;ENG=PB %1 SEL BGR';

    LOCAL PROCEDURE "--- General ---"@1000000005();
    BEGIN
    END;

    PROCEDURE CreateTheme@1000000000(pPlanningBoardHeader@1000000000 : Record 9062337);
    BEGIN
      //DOC NA2016.12 - Creating a theme for a planning board
      //  -> pPlanningBoardHeader: The planning board

      PlanningBoardHeader := pPlanningBoardHeader;

      PlanningBoardTheme.INIT();
      PlanningBoardTheme."Planning Board Code" := PlanningBoardHeader.Code;
      ApplyPaletteToTheme(PlanningBoardTheme, 'GREY', 255, 255, 255);
      ApplySelectedEntryToTheme(PlanningBoardTheme, 'BLUE', 255, 255, 255, 0, 0, 128, 100);
      ApplySelectionToTheme(PlanningBoardTheme, 'BLUE', 192, 192, 255);
      PlanningBoardTheme.VALIDATE("Enable Animation", TRUE);
      PlanningBoardTheme.INSERT(TRUE);

      CreateThemeView(PlanningBoardThemeView.Type::Day, FALSE, FALSE, 100, 8, 50, 25);
      CreateThemeView(PlanningBoardThemeView.Type::"Work Week", FALSE, FALSE, 100, 8, 50, 25);
      CreateThemeView(PlanningBoardThemeView.Type::Week, FALSE, FALSE, 100, 8, 50, 25);
      CreateThemeView(PlanningBoardThemeView.Type::Month, FALSE, FALSE, 100, 8, 50, 25);
      CreateThemeView(PlanningBoardThemeView.Type::Timeline, TRUE, TRUE, 100, 8, 50, 25);
    END;

    LOCAL PROCEDURE ApplyPaletteToTheme@1000000001(VAR pPlanningBoardTheme@1000000000 : Record 9062350;pPaletteCode@1000000001 : Code[10];pPaletteRed@1000000002 : Integer;pPaletteGreen@1000000003 : Integer;pPaletteBlue@1000000004 : Integer);
    BEGIN
      //DOC NA2016.12 - Applying palette to theme
      //  <> pPlanningBoardTheme: The theme
      //  -> pPaletteCode: Palette code
      //  -> pPaletteRed: Palette red
      //  -> pPaletteGreen: Palette green
      //  -> pPaletteBlue: Palette blue

      PaletteCode := pPaletteCode;
      PaletteRed := pPaletteRed;
      PaletteGreen := pPaletteGreen;
      PaletteBlue := pPaletteBlue;

      PlanningBoardTheme.VALIDATE("Odd Row Bgr. Colour Code", FindPaletteColour(tOddRowBgr, 240));
      PlanningBoardTheme.VALIDATE("Odd Row Brd. Colour Code", FindPaletteColour(tOddRowBrd, 128));
      PlanningBoardTheme.VALIDATE("Odd Row Wkd. Bgr. Colour Code", FindPaletteColour(tOddRowWkdBgr, 224));
      PlanningBoardTheme.VALIDATE("Odd Row Wkd. Brd. Colour Code", FindPaletteColour(tOddRowWkdBrd, 128));
      PlanningBoardTheme.VALIDATE("Even Row Bgr. Colour Code", FindPaletteColour(tEvenRowBgr, 224));
      PlanningBoardTheme.VALIDATE("Even Row Brd. Colour Code", FindPaletteColour(tEvenRowBrd, 128));
      PlanningBoardTheme.VALIDATE("Even Row Wkd. Bgr. Colour Code", FindPaletteColour(tEvenRowWkdBgr, 208));
      PlanningBoardTheme.VALIDATE("Even Row Wkd. Brd. Colour Code", FindPaletteColour(tEvenRowWkdBrd, 128));
    END;

    LOCAL PROCEDURE ApplySelectedEntryToTheme@1000000016(VAR pPlanningBoardTheme@1000000000 : Record 9062350;pSelectedEntryCode@1000000001 : Code[10];pForegroundRed@1000000002 : Integer;pForegroundGreen@1000000005 : Integer;pForegroundBlue@1000000006 : Integer;pBackgroundRed@1000000003 : Integer;pBackgroundGreen@1000000008 : Integer;pBackgroundBlue@1000000007 : Integer;pOpacity@1000000004 : Integer);
    BEGIN
      //DOC NA2016.12 - Applying selected entry to theme
      //  <> pPlanningBoardTheme: The theme
      //  -> pSelectedEntryCode: Selected entry code
      //  -> pForegroundRed: Foreground red primary colour
      //  -> pForegroundGreen: Foreground green primary colour
      //  -> pForegroundBlue: Foreground blue primary colour
      //  -> pBackgroundRed: Background red primary colour
      //  -> pBackgroundGreen: Background green primary colour
      //  -> pBackgroundBlue: Background blue primary colour
      //  -> pOpacity: Opacity

      PlanningBoardTheme.VALIDATE("Sel. Entry Fgr. Colour Code", PlanningBoardToolkit.FindOrCreateSystemColour(
        STRSUBSTNO(tSelEntFgr, pSelectedEntryCode), pForegroundRed, pForegroundGreen, pForegroundBlue, 50000));
      PlanningBoardTheme.VALIDATE("Sel. Entry Fgr. Opacity", pOpacity);
      PlanningBoardTheme.VALIDATE("Sel. Entry Bgr. Colour Code", PlanningBoardToolkit.FindOrCreateSystemColour(
        STRSUBSTNO(tSelEntBgr, pSelectedEntryCode), pBackgroundRed, pBackgroundGreen, pBackgroundBlue, 50000));
      PlanningBoardTheme.VALIDATE("Sel. Entry Bgr. Opacity", pOpacity);
      PlanningBoardTheme.VALIDATE("Sel. Entry Brd. Colour Code", PlanningBoardToolkit.FindOrCreateSystemColour(
        STRSUBSTNO(tSelEntBrd, pSelectedEntryCode), pBackgroundRed, pBackgroundGreen, pBackgroundBlue, 50000));
      PlanningBoardTheme.VALIDATE("Sel. Entry Brd. Opacity", pOpacity);
    END;

    LOCAL PROCEDURE ApplySelectionToTheme@1000000008(VAR pPlanningBoardTheme@1000000000 : Record 9062350;pSelectionCode@1000000001 : Code[20];pBackgroundRed@1000000004 : Integer;pBackgroundGreen@1000000003 : Integer;pBackgroundBlue@1000000002 : Integer);
    BEGIN
      //DOC NA2016.12 - Applying selection to theme
      //  <> pPlanningBoardTheme: The theme
      //  -> pSelectionCode: Selection code
      //  -> pBackgroundRed: Background red primary colour
      //  -> pBackgroundGreen: Background green primary colour
      //  -> pBackgroundBlue: Background blue primary colour

      PlanningBoardTheme.VALIDATE("Selection Bgr. Colour Code", PlanningBoardToolkit.FindOrCreateSystemColour(
        STRSUBSTNO(tSelBgr, pSelectionCode), pBackgroundRed, pBackgroundGreen, pBackgroundBlue, 500000));
    END;

    LOCAL PROCEDURE CreateThemeView@1000000004(pType@1000000000 : Integer;pDefault@1000000001 : Boolean;pResourcesVertical@1000000003 : Boolean;pResourceHeaderSize@1000000004 : Integer;pResourcesPerPage@1000000005 : Integer;pTimeRowColumnSize@1000000006 : Integer;pEntryHeight@1000000002 : Integer);
    BEGIN
      //DOC NA2016.12 - Creating theme view
      //  -> pType: View type
      //  -> pDefault: Default flag
      //  -> pResourcesVertical: Resources vertical flag (TRUE = Resources placed vertically, dates horizontally, FALSE = Opposite)
      //  -> pResourceHeaderSize: Resource header size
      //  -> pResourcesPerPage: Number of resources per page
      //  -> pTimeRowColumnSize: Time row/column size
      //  -> pEntryHeight: Entry height

      CLEAR(PlanningBoardThemeView);
      PlanningBoardThemeView.INIT();
      PlanningBoardThemeView."Planning Board Code" := PlanningBoardTheme."Planning Board Code";
      PlanningBoardThemeView.VALIDATE(Type, pType);
      PlanningBoardThemeView.Default := pDefault;
      IF (pResourcesVertical) THEN
        PlanningBoardThemeView.VALIDATE("Resource Layout", PlanningBoardThemeView."Resource Layout"::Vertical)
      ELSE
        PlanningBoardThemeView.VALIDATE("Resource Layout", PlanningBoardThemeView."Resource Layout"::Horizontal);
      PlanningBoardThemeView.VALIDATE("Resource Header Size", pResourceHeaderSize);
      PlanningBoardThemeView.VALIDATE("Resources per Page", pResourcesPerPage);
      PlanningBoardThemeView.VALIDATE("Time Row/Column Size", pTimeRowColumnSize);
      PlanningBoardThemeView.VALIDATE("Entry Height", pEntryHeight);
      PlanningBoardThemeView.INSERT(TRUE);
    END;

    LOCAL PROCEDURE "--- Tools ---"@1000000003();
    BEGIN
    END;

    LOCAL PROCEDURE FindPaletteColour@1000000006(pCodeTemplate@1000000000 : Code[20];pColourStrength@1000000001 : Integer) : Code[20];
    VAR
      lCode@1000000003 : Code[20];
      lRed@1000000002 : Integer;
      lGreen@1000000004 : Integer;
      lBlue@1000000005 : Integer;
    BEGIN
      //DOC NA2016.12 - Trying to find (or creating) a colour for palette application
      //  -> pCodeTemplate: Code template
      //  -> pColourStrength: Colour strength (0-255)

      lCode := STRSUBSTNO(pCodeTemplate, PaletteCode);
      lRed := CalculatePrimaryColour(pColourStrength, PaletteRed);
      lGreen := CalculatePrimaryColour(pColourStrength, PaletteGreen);
      lBlue := CalculatePrimaryColour(pColourStrength, PaletteBlue);

      EXIT(PlanningBoardToolkit.FindOrCreateSystemColour(lCode, lRed, lGreen, lBlue, 50000));
    END;

    LOCAL PROCEDURE CalculatePrimaryColour@1000000009(pColourStrength@1000000001 : Integer;pPaletteColour@1000000000 : Integer) : Integer;
    VAR
      lPrimaryColour@1000000002 : Integer;
    BEGIN
      //DOC NA2016.12 - Calculating primary colour
      //  -> pColourStrength: Colour strength (0-255)
      //  -> pPaletteColour: Palette colour (0-255)
      //  <- Primary colour calculated (0-255)

      lPrimaryColour := ROUND(POWER(pColourStrength * pPaletteColour, 0.5), 1);
      IF (lPrimaryColour < 0) THEN
        lPrimaryColour := 0;
      IF (lPrimaryColour > 255) THEN
        lPrimaryColour := 255;
      EXIT(lPrimaryColour);
    END;

    BEGIN
    {
      //DOC NA2016.12 JH 17/10/2015 - Created
    }
    END.
  }
}

