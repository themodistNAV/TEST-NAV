OBJECT Table 9062335 Planning Board Setup
{
  OBJECT-PROPERTIES
  {
    Date=26/07/16;
    Time=12:35:11 PM;
    Version List=NA2016.16.1;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TnpToolkit.UpdateCreatedBy(Rec."Created By", Rec."Created Date Time");
             END;

    OnModify=BEGIN
               TnpToolkit.UpdateModifiedBy(Rec."Modified By", Rec."Modified Date Time");
             END;

    CaptionML=[ENU=Planning Board Setup;
               ENG=Planning Board Setup];
  }
  FIELDS
  {
    { 1   ;   ;Primary Key         ;Code10        ;CaptionML=[ENU=Primary Key;
                                                              ENG=Primary Key] }
    { 10  ;   ;Current Date Formula;DateFormula   ;CaptionML=[ENU=Current Date Formula;
                                                              ENG=Current Date Formula] }
    { 11  ;   ;Start Date Formula  ;DateFormula   ;InitValue=-1M-CM;
                                                   CaptionML=[ENU=Start Date Formula;
                                                              ENG=Start Date Formula] }
    { 12  ;   ;End Date Formula    ;DateFormula   ;InitValue=+2M+CM;
                                                   CaptionML=[ENU=End Date Formula;
                                                              ENG=End Date Formula] }
    { 13  ;   ;Previous / Next Week;Boolean       ;CaptionML=[ENU=Previous / Next Week;
                                                              ENG=Previous / Next Week] }
    { 14  ;   ;Previous / Next Month;Boolean      ;InitValue=Yes;
                                                   CaptionML=[ENU=Previous / Next Month;
                                                              ENG=Previous / Next Month] }
    { 15  ;   ;Previous / Next Quarter;Boolean    ;InitValue=Yes;
                                                   CaptionML=[ENU=Previous / Next Quarter;
                                                              ENG=Previous / Next Quarter] }
    { 16  ;   ;Previous / Next Year;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Previous / Next Year;
                                                              ENG=Previous / Next Year] }
    { 17  ;   ;Maximum Period Formula;DateFormula ;InitValue=+1Y;
                                                   CaptionML=[ENU=Maximum Period Formula;
                                                              ENG=Maximum Period Formula] }
    { 20  ;   ;Command Handling Codeunit ID;Integer;
                                                   TableRelation=AllObj."Object ID" WHERE (Object Type=CONST(Codeunit));
                                                   OnValidate=BEGIN
                                                                Rec.CALCFIELDS("Command Handling Codeunit Name");
                                                              END;

                                                   CaptionML=[ENU=Command Handling Codeunit ID;
                                                              ENG=Command Handling Codeunit ID] }
    { 21  ;   ;Command Handling Codeunit Name;Text30;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObj."Object Name" WHERE (Object Type=CONST(Codeunit),
                                                                                                  Object ID=FIELD(Command Handling Codeunit ID)));
                                                   CaptionML=[ENU=Command Handling Codeunit Name;
                                                              ENG=Command Handling Codeunit Name];
                                                   Editable=No }
    { 30  ;   ;Use Foreground Style Cache;Boolean ;CaptionML=[ENU=Use Foreground Style Cache;
                                                              ENG=Use Foreground Style Cache] }
    { 31  ;   ;Use Background Style Cache;Boolean ;CaptionML=[ENU=Use Background Style Cache;
                                                              ENG=Use Background Style Cache] }
    { 32  ;   ;Use Border Style Cache;Boolean     ;CaptionML=[ENU=Use Border Style Cache;
                                                              ENG=Use Border Style Cache] }
    { 40  ;   ;Res. Foreground Colour Code;Code20 ;TableRelation="System Colour";
                                                   CaptionML=[ENU=Res. Foreground Colour Code;
                                                              ENG=Res. Foreground Colour Code] }
    { 41  ;   ;Res. Foreground Font Size;Option   ;InitValue=Medium;
                                                   CaptionML=[ENU=Res. Foreground Font Size;
                                                              ENG=Res. Foreground Font Size];
                                                   OptionCaptionML=[ENU=" ,Very Small,Small,Medium,Large,Very Large";
                                                                    ENG=" ,Very Small,Small,Medium,Large,Very Large"];
                                                   OptionString=[ ,Very Small,Small,Medium,Large,Very Large] }
    { 42  ;   ;Res. Foreground Font Style;Option  ;CaptionML=[ENU=Res. Foreground Font Style;
                                                              ENG=Res. Foreground Font Style];
                                                   OptionCaptionML=[ENU=" ,Bold,Italic,Underline,Bold + Italic,Bold + Underline,Italic + Underline,Bold + Italic + Underline";
                                                                    ENG=" ,Bold,Italic,Underline,Bold + Italic,Bold + Underline,Italic + Underline,Bold + Italic + Underline"];
                                                   OptionString=[ ,Bold,Italic,Underline,Bold + Italic,Bold + Underline,Italic + Underline,Bold + Italic + Underline] }
    { 50  ;   ;Entry Foreground Colour Code;Code20;TableRelation="System Colour";
                                                   CaptionML=[ENU=Entry Foreground Colour Code;
                                                              ENG=Entry Foreground Colour Code] }
    { 51  ;   ;Entry Foreground Font Size;Option  ;InitValue=Medium;
                                                   CaptionML=[ENU=Entry Foreground Font Size;
                                                              ENG=Entry Foreground Font Size];
                                                   OptionCaptionML=[ENU=" ,Very Small,Small,Medium,Large,Very Large";
                                                                    ENG=" ,Very Small,Small,Medium,Large,Very Large"];
                                                   OptionString=[ ,Very Small,Small,Medium,Large,Very Large] }
    { 52  ;   ;Entry Foreground Font Style;Option ;CaptionML=[ENU=Entry Foreground Font Style;
                                                              ENG=Entry Foreground Font Style];
                                                   OptionCaptionML=[ENU=" ,Bold,Italic,Underline,Bold + Italic,Bold + Underline,Italic + Underline,Bold + Italic + Underline";
                                                                    ENG=" ,Bold,Italic,Underline,Bold + Italic,Bold + Underline,Italic + Underline,Bold + Italic + Underline"];
                                                   OptionString=[ ,Bold,Italic,Underline,Bold + Italic,Bold + Underline,Italic + Underline,Bold + Italic + Underline] }
    { 60  ;   ;Entry Background Colour Code;Code20;TableRelation="System Colour";
                                                   CaptionML=[ENU=Entry Background Colour Code;
                                                              ENG=Entry Background Colour Code] }
    { 70  ;   ;Entry Border Colour Code;Code20    ;TableRelation="System Colour";
                                                   CaptionML=[ENU=Entry Border Colour Code;
                                                              ENG=Entry Border Colour Code] }
    { 71  ;   ;Entry Border Line Width;Option     ;InitValue=Medium;
                                                   CaptionML=[ENU=Entry Border Line Width;
                                                              ENG=Entry Border Line Width];
                                                   OptionCaptionML=[ENU=" ,Very Thin,Thin,Medium,Thick,Very Thick";
                                                                    ENG=" ,Very Thin,Thin,Medium,Thick,Very Thick"];
                                                   OptionString=[ ,Very Thin,Thin,Medium,Thick,Very Thick] }
    { 72  ;   ;Entry Border Line Style;Option     ;InitValue=Solid;
                                                   CaptionML=[ENU=Entry Border Line Style;
                                                              ENG=Entry Border Line Style];
                                                   OptionCaptionML=[ENU=" ,None,Solid,Dashed,Dotted";
                                                                    ENG=" ,None,Solid,Dashed,Dotted"];
                                                   OptionString=[ ,None,Solid,Dashed,Dotted] }
    { 80  ;   ;Diagnostics Enabled ;Boolean       ;CaptionML=[ENU=Diagnostics Enabled;
                                                              ENG=Diagnostics Enabled] }
    { 81  ;   ;Diagnostics Folder  ;Text250       ;CaptionML=[ENU=Diagnostics Folder;
                                                              ENG=Diagnostics Folder] }
    { 82  ;   ;Context Diagnostics ;Boolean       ;CaptionML=[ENU=Context Diagnostics;
                                                              ENG=Context Diagnostics] }
    { 83  ;   ;Add-in Diagnostics  ;Boolean       ;CaptionML=[ENU=Add-in Diagnostics;
                                                              ENG=Add-in Diagnostics] }
    { 90  ;   ;On Resource Double-Click;Option    ;InitValue=View Resource;
                                                   CaptionML=[ENU=On Resource Double-Click;
                                                              ENG=On Resource Double-Click];
                                                   OptionCaptionML=[ENU=" ,View Resource,Edit Resource";
                                                                    ENG=" ,View Resource,Edit Resource"];
                                                   OptionString=[ ,View Resource,Edit Resource] }
    { 91  ;   ;On Entry Double-Click;Option       ;InitValue=Edit Entry;
                                                   CaptionML=[ENU=On Entry Double-Click;
                                                              ENG=On Entry Double-Click];
                                                   OptionCaptionML=[ENU=" ,View Entry,Edit Entry";
                                                                    ENG=" ,View Entry,Edit Entry"];
                                                   OptionString=[ ,View Entry,Edit Entry] }
    { 100 ;   ;Use Web Control for Desktop;Boolean;CaptionML=[ENU=Use Web Control for Desktop;
                                                              ENG=Use Web Control for Desktop] }
    { 110 ;   ;HTML Template Code  ;Code50        ;TableRelation="Html Control Template";
                                                   OnValidate=BEGIN
                                                                IF (Rec."HTML Template Code" <> xRec."HTML Template Code") THEN
                                                                BEGIN
                                                                  Rec.VALIDATE("HTML Day View Code", '');
                                                                  Rec.VALIDATE("HTML Work Week View Code", '');
                                                                  Rec.VALIDATE("HTML Week View Code", '');
                                                                  Rec.VALIDATE("HTML Month View Code", '');
                                                                  Rec.VALIDATE("HTML Timeline View Code", '');
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=HTML Template Code;
                                                              ENG=HTML Template Code] }
    { 120 ;   ;HTML Day View Code  ;Code50        ;TableRelation="Html Control View".Code WHERE (Template Code=FIELD(HTML Template Code));
                                                   CaptionML=[ENU=HTML Day View Code;
                                                              ENG=HTML Day View Code] }
    { 121 ;   ;HTML Work Week View Code;Code50    ;TableRelation="Html Control View".Code WHERE (Template Code=FIELD(HTML Template Code));
                                                   CaptionML=[ENU=HTML Work Week View Code;
                                                              ENG=HTML Work Week View Code] }
    { 122 ;   ;HTML Week View Code ;Code50        ;TableRelation="Html Control View".Code WHERE (Template Code=FIELD(HTML Template Code));
                                                   CaptionML=[ENU=HTML Week View Code;
                                                              ENG=HTML Week View Code] }
    { 123 ;   ;HTML Month View Code;Code50        ;TableRelation="Html Control View".Code WHERE (Template Code=FIELD(HTML Template Code));
                                                   CaptionML=[ENU=HTML Month View Code;
                                                              ENG=HTML Month View Code] }
    { 124 ;   ;HTML Timeline View Code;Code50     ;TableRelation="Html Control View".Code WHERE (Template Code=FIELD(HTML Template Code));
                                                   CaptionML=[ENU=HTML Timeline View Code;
                                                              ENG=HTML Timeline View Code] }
    { 130 ;   ;Non-Empty Resources ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Non-Empty Resources;
                                                              ENG=Non-Empty Resources] }
    { 131 ;   ;Non-Empty Resources Optional;Boolean;
                                                   InitValue=Yes;
                                                   CaptionML=[ENU=Non-Empty Resources Optional;
                                                              ENG=Non-Empty Resources Optional] }
    { 140 ;   ;Start Time          ;Time          ;CaptionML=[ENU=Start Time;
                                                              ENG=Start Time] }
    { 141 ;   ;End Time            ;Time          ;CaptionML=[ENG=End Time;
                                                              ENB=End Time] }
    { 1000;   ;Created By          ;Code50        ;OnLookup=BEGIN
                                                              TnpToolkit.UserLookup(Rec."Created By", FALSE);
                                                            END;

                                                   CaptionML=[ENU=Created By;
                                                              ENG=Created By] }
    { 1001;   ;Created Date Time   ;DateTime      ;CaptionML=[ENU=Created Date Time;
                                                              ENG=Created Date Time] }
    { 1002;   ;Modified By         ;Code50        ;OnLookup=BEGIN
                                                              TnpToolkit.UserLookup(Rec."Modified By", FALSE);
                                                            END;

                                                   CaptionML=[ENU=Modified By;
                                                              ENG=Modified By] }
    { 1003;   ;Modified Date Time  ;DateTime      ;CaptionML=[ENU=Modified Date Time;
                                                              ENG=Modified Date Time] }
  }
  KEYS
  {
    {    ;Primary Key                             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ObjectFieldToolkit@1000000001 : Codeunit 9062343;
      PlanningBoardToolkit@1000000002 : Codeunit 9062301;
      TnpToolkit@1000000000 : Codeunit 9062230;

    PROCEDURE VerifyAndGet@1000000000();
    VAR
      eHtmlTemplateCode@1000000000 : TextConst 'ENU=PLANNING BOARD;ENG=PLANNING BOARD';
      eHtmlDayViewCode@1000000001 : TextConst 'ENU=DAY;ENG=DAY';
      eHtmlWorkWeekViewCode@1000000002 : TextConst 'ENU=WORK WEEK;ENG=WORK WEEK';
      eHtmlWeekViewCode@1000000003 : TextConst 'ENU=WEEK;ENG=WEEK';
      eHtmlMonthViewCode@1000000004 : TextConst 'ENU=MONTH;ENG=MONTH';
      eHtmlTimelineViewCode@1000000005 : TextConst 'ENU=TIMELINE;ENG=TIMELINE';
    BEGIN
      //DOC NA2016.12 - Verifying if planning board setup has been created (if not - creating it) and returning it

      Rec.RESET();
      IF ( NOT (Rec.GET())) THEN
      BEGIN
        Rec.INIT();
        EVALUATE(Rec."Start Date Formula", '<-1M-CM>');
        EVALUATE(Rec."End Date Formula", '<+2M+CM>');

        Rec.VALIDATE("Command Handling Codeunit ID", CODEUNIT::"Planning Board Event Handling");

        Rec.VALIDATE("Res. Foreground Colour Code", PlanningBoardToolkit.DefaultResourceForegroundColourCode());
        Rec.VALIDATE("Entry Foreground Colour Code", PlanningBoardToolkit.DefaultEntryForegroundColourCode());
        Rec.VALIDATE("Entry Background Colour Code", PlanningBoardToolkit.DefaultEntryBackgroundColourCode());
        Rec.VALIDATE("Entry Border Colour Code", PlanningBoardToolkit.DefaultEntryBorderColourCode());

        Rec.VALIDATE("Use Foreground Style Cache", TRUE);
        Rec.VALIDATE("Use Background Style Cache", TRUE);
        Rec.VALIDATE("Use Border Style Cache", TRUE);

        Rec.VALIDATE("HTML Template Code", VerifyHtmlControlTemplate(eHtmlTemplateCode));
        Rec.VALIDATE("HTML Day View Code", VerifyHtmlControlView(eHtmlDayViewCode, FALSE));
        Rec.VALIDATE("HTML Work Week View Code", VerifyHtmlControlView(eHtmlWorkWeekViewCode, FALSE));
        Rec.VALIDATE("HTML Week View Code", VerifyHtmlControlView(eHtmlWeekViewCode, FALSE));
        Rec.VALIDATE("HTML Month View Code", VerifyHtmlControlView(eHtmlMonthViewCode, FALSE));
        Rec.VALIDATE("HTML Timeline View Code", VerifyHtmlControlView(eHtmlTimelineViewCode, TRUE));

        Rec.VALIDATE("Start Time", 000000T);
        Rec.VALIDATE("End Time", 235959T);

        Rec.INSERT(TRUE);
      END;
      IF (Rec."Command Handling Codeunit ID" = 0) THEN
      BEGIN
        Rec.VALIDATE("Command Handling Codeunit ID", CODEUNIT::"Planning Board Event Handling");
        IF (Rec.MODIFY(TRUE)) THEN;
      END;
    END;

    LOCAL PROCEDURE VerifyHtmlControlTemplate@1000000002(pCode@1000000000 : Code[50]) : Code[50];
    VAR
      lHtmlControlTemplate@1000000001 : Record 9062799;
    BEGIN
      //DOC NA2016.12 - Verifying if HTML control template exists (if not - creating it)
      //  -> pCode: Template code
      //  <- Template code

      IF ( NOT (lHtmlControlTemplate.GET(pCode))) THEN
      BEGIN
        CLEAR(lHtmlControlTemplate);
        lHtmlControlTemplate.INIT();
        lHtmlControlTemplate.VALIDATE(Code, pCode);
        lHtmlControlTemplate.VALIDATE(Type, lHtmlControlTemplate.Type::Control);
        lHtmlControlTemplate.INSERT(TRUE);
      END;

      EXIT(pCode);
    END;

    LOCAL PROCEDURE VerifyHtmlControlView@1000000003(pCode@1000000000 : Code[50];pDefault@1000000002 : Boolean) : Code[50];
    VAR
      lHtmlControlView@1000000001 : Record 9062800;
    BEGIN
      //DOC NA2016.12 - Verifying if HTML control view exists (if not - creating it)
      //  -> pCode: View code
      //  -> pDefault: Default flag
      //  <- View code

      IF ( NOT (lHtmlControlView.GET(Rec."HTML Template Code", pCode))) THEN
      BEGIN
        CLEAR(lHtmlControlView);
        lHtmlControlView.INIT();
        lHtmlControlView.VALIDATE("Template Code", Rec."HTML Template Code");
        lHtmlControlView.VALIDATE(Code, pCode);
        lHtmlControlView.VALIDATE(Default, pDefault);
        lHtmlControlView.INSERT(TRUE);
      END;

      EXIT(pCode);
    END;

    PROCEDURE ValidateCommandHandlingCodeunitText@1000000004(pText@1000000000 : Text) : Boolean;
    VAR
      lResult@1000000001 : Boolean;
    BEGIN
      //DOC NA2016.12 - Validating command handling codeunit text
      //  <> pText: The text
      //  <- TRUE = Codeunit changed, FALSE = Not

      lResult := TRUE;

      xRec."Command Handling Codeunit ID" := Rec."Command Handling Codeunit ID";
      ObjectFieldToolkit.ValidateCodeunitName(Rec."Command Handling Codeunit ID", pText, FALSE);
      IF (Rec."Command Handling Codeunit ID" <> xRec."Command Handling Codeunit ID") THEN
      BEGIN
        Rec.VALIDATE("Command Handling Codeunit ID");
        lResult := TRUE;
      END;

      EXIT(lResult);
    END;

    PROCEDURE CommandHandlingCodeunitLookup@1000000005() : Boolean;
    VAR
      lResult@1000000000 : Boolean;
    BEGIN
      //DOC NA2016.12 - Lookup for command handling codeunit
      //  <- TRUE = Codeunit changed, FALSE = Not

      lResult := TRUE;

      xRec."Command Handling Codeunit ID" := Rec."Command Handling Codeunit ID";
      IF (ObjectFieldToolkit.CodeunitLookup(Rec."Command Handling Codeunit ID")) THEN
        IF (Rec."Command Handling Codeunit ID" <> xRec."Command Handling Codeunit ID") THEN
        BEGIN
          Rec.VALIDATE("Command Handling Codeunit ID");
          lResult := TRUE;
        END;

      EXIT(lResult);
    END;

    PROCEDURE DiagnosticsFolderAssist@1000000001();
    VAR
      lFileManagement@1000000000 : Codeunit 419;
      lFolder@1000000001 : Text;
      eWindowTitle@1000000002 : TextConst 'ENU=Select folder for planning board diagnostics files;ENG=Select folder for planning board diagnostics files';
    BEGIN
      //DOC NA2016.12 - Assist for diagnostics folder

      lFolder := lFileManagement.BrowseForFolderDialog(eWindowTitle, '', TRUE);
      Rec.VALIDATE("Diagnostics Folder", lFolder);
    END;

    BEGIN
    {
      //DOC NA2016.12 JH 10/10/2015 - Created
      //DOC NA2016.12 JH 27/01/2016 - HTML templates live
      //DOC NA2016.16.1 JH 26/07/2016 - Start / End Time added
    }
    END.
  }
}

