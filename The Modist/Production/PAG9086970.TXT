OBJECT Page 9086970 nF. Matrix Sub
{
  OBJECT-PROPERTIES
  {
    Date=30/10/16;
    Time=[ 6:01:20 PM];
    Version List=NF2016.17;
  }
  PROPERTIES
  {
    CaptionML=[ENU=nForcement Matrix Subpage;
               ENG=nForcement Matrix Subpage];
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table9086965;
    PageType=ListPart;
    SourceTableTemporary=Yes;
    OnClosePage=BEGIN
                  NfMatrixManagement.Finalise(NfMatrixContext);
                END;

    OnAfterGetRecord=BEGIN
                       UpdateGlobals();
                     END;

    OnAfterGetCurrRecord=BEGIN
                           UpdateGlobals();
                         END;

    ActionList=ACTIONS
    {
      { 1000000028;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1000000029;1 ;Action    ;
                      Name=MarkAction;
                      CaptionML=[ENU=Mark;
                                 ENG=Mark];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Approve;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MarkRecords(TRUE);
                               END;
                                }
      { 1000000030;1 ;Action    ;
                      Name=UnmarkAction;
                      CaptionML=[ENU=Unmark;
                                 ENG=Unmark];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Reject;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MarkRecords(FALSE);
                               END;
                                }
      { 1000000037;1 ;Separator  }
      { 1000000035;1 ;Action    ;
                      Name=ShowDetailsAction;
                      CaptionML=[ENU=Show Details;
                                 ENG=Show Details];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Properties;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowDetails();
                               END;
                                }
      { 1000000038;1 ;Separator  }
      { 1000000036;1 ;Action    ;
                      Name=ShowHideQuickFilterAction;
                      CaptionML=[ENU=Show/Hide Quick Filter;
                                 ENG=Show/Hide Quick Filter];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=EditFilter;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 QuickFilterEnabled := ( NOT (QuickFilterEnabled));
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1000000034;1 ;Action    ;
                      Name=ClearQuickFilterAction;
                      CaptionML=[ENU=Clear Quick Filter;
                                 ENG=Clear Quick Filter];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ClearFilter;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ClearQuickFilter();
                               END;
                                }
      { 1000000039;1 ;Separator  }
      { 1000000040;1 ;Action    ;
                      Name=PreviousSetAction;
                      CaptionML=[ENU=Previous Set;
                                 ENG=Previous Set];
                      Promoted=Yes;
                      Enabled=PreviousSetEnabled;
                      PromotedIsBig=Yes;
                      Image=PreviousSet;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CurrPage.SAVERECORD();
                                 IF (NfMatrixManagement.GoToPreviousSet(ParentId, Rec, NfMatrixContext)) THEN
                                 BEGIN
                                   UpdateColumnFlags();
                                   UpdateGlobals();
                                   CurrPage.UPDATE(FALSE);
                                 END;
                               END;
                                }
      { 1000000041;1 ;Action    ;
                      Name=NextSetAction;
                      CaptionML=[ENU=Next Set;
                                 ENG=Next Set];
                      Promoted=Yes;
                      Enabled=NextSetEnabled;
                      PromotedIsBig=Yes;
                      Image=NextSet;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CurrPage.SAVERECORD();
                                 IF (NfMatrixManagement.GoToNextSet(ParentId, Rec, NfMatrixContext)) THEN
                                 BEGIN
                                   UpdateColumnFlags();
                                   UpdateGlobals();
                                   CurrPage.UPDATE(FALSE);
                                 END;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1000000000;0;Container;
                ContainerType=ContentArea }

    { 1000000001;1;Group  ;
                Name=GeneralGroup;
                CaptionML=[ENU=General;
                           ENG=General];
                IndentationColumnName=Indentation;
                IndentationControls=Name;
                GroupType=Repeater }

    { 1000000024;2;Field  ;
                SourceExpr=Name;
                Editable=FALSE;
                StyleExpr=Style;
                OnDrillDown=BEGIN
                              ShowDetails();
                            END;
                             }

    { 1000000002;2;Field  ;
                SourceExpr=Type;
                Visible=TypeEnabled;
                Enabled=TypeEnabled;
                StyleExpr=Style }

    { 1000000004;2;Field  ;
                SourceExpr="Column 1 Value";
                CaptionClass='3,'+NfMatrixContext."Column 1 Caption";
                Visible=Column1Enabled;
                Enabled=Column1Enabled;
                OnValidate=BEGIN
                             ValidateValue(1);
                           END;
                            }

    { 1000000023;2;Field  ;
                SourceExpr="Column 2 Value";
                CaptionClass='3,'+NfMatrixContext."Column 2 Caption";
                Visible=Column2Enabled;
                Enabled=Column2Enabled;
                OnValidate=BEGIN
                             ValidateValue(2);
                           END;
                            }

    { 1000000022;2;Field  ;
                SourceExpr="Column 3 Value";
                CaptionClass='3,'+NfMatrixContext."Column 3 Caption";
                Visible=Column3Enabled;
                Enabled=Column3Enabled;
                OnValidate=BEGIN
                             ValidateValue(3);
                           END;
                            }

    { 1000000021;2;Field  ;
                SourceExpr="Column 4 Value";
                CaptionClass='3,'+NfMatrixContext."Column 4 Caption";
                Visible=Column4Enabled;
                Enabled=Column4Enabled;
                OnValidate=BEGIN
                             ValidateValue(4);
                           END;
                            }

    { 1000000020;2;Field  ;
                SourceExpr="Column 5 Value";
                CaptionClass='3,'+NfMatrixContext."Column 5 Caption";
                Visible=Column5Enabled;
                Enabled=Column5Enabled;
                OnValidate=BEGIN
                             ValidateValue(5);
                           END;
                            }

    { 1000000019;2;Field  ;
                SourceExpr="Column 6 Value";
                CaptionClass='3,'+NfMatrixContext."Column 6 Caption";
                Visible=Column6Enabled;
                Enabled=Column6Enabled;
                OnValidate=BEGIN
                             ValidateValue(6);
                           END;
                            }

    { 1000000018;2;Field  ;
                SourceExpr="Column 7 Value";
                CaptionClass='3,'+NfMatrixContext."Column 7 Caption";
                Visible=Column7Enabled;
                Enabled=Column7Enabled;
                OnValidate=BEGIN
                             ValidateValue(7);
                           END;
                            }

    { 1000000017;2;Field  ;
                SourceExpr="Column 8 Value";
                CaptionClass='3,'+NfMatrixContext."Column 8 Caption";
                Visible=Column8Enabled;
                Enabled=Column8Enabled;
                OnValidate=BEGIN
                             ValidateValue(8);
                           END;
                            }

    { 1000000016;2;Field  ;
                SourceExpr="Column 9 Value";
                CaptionClass='3,'+NfMatrixContext."Column 9 Caption";
                Visible=Column9Enabled;
                Enabled=Column9Enabled;
                OnValidate=BEGIN
                             ValidateValue(9);
                           END;
                            }

    { 1000000015;2;Field  ;
                SourceExpr="Column 10 Value";
                CaptionClass='3,'+NfMatrixContext."Column 10 Caption";
                Visible=Column10Enabled;
                Enabled=Column10Enabled;
                OnValidate=BEGIN
                             ValidateValue(10);
                           END;
                            }

    { 1000000014;2;Field  ;
                SourceExpr="Column 11 Value";
                CaptionClass='3,'+NfMatrixContext."Column 11 Caption";
                Visible=Column11Enabled;
                Enabled=Column11Enabled;
                OnValidate=BEGIN
                             ValidateValue(11);
                           END;
                            }

    { 1000000013;2;Field  ;
                SourceExpr="Column 12 Value";
                CaptionClass='3,'+NfMatrixContext."Column 12 Caption";
                Visible=Column12Enabled;
                Enabled=Column12Enabled;
                OnValidate=BEGIN
                             ValidateValue(12);
                           END;
                            }

    { 1000000012;2;Field  ;
                SourceExpr="Column 13 Value";
                CaptionClass='3,'+NfMatrixContext."Column 13 Caption";
                Visible=Column13Enabled;
                Enabled=Column13Enabled;
                OnValidate=BEGIN
                             ValidateValue(13);
                           END;
                            }

    { 1000000011;2;Field  ;
                SourceExpr="Column 14 Value";
                CaptionClass='3,'+NfMatrixContext."Column 14 Caption";
                Visible=Column14Enabled;
                Enabled=Column14Enabled;
                OnValidate=BEGIN
                             ValidateValue(14);
                           END;
                            }

    { 1000000010;2;Field  ;
                SourceExpr="Column 15 Value";
                CaptionClass='3,'+NfMatrixContext."Column 15 Caption";
                Visible=Column15Enabled;
                Enabled=Column15Enabled;
                OnValidate=BEGIN
                             ValidateValue(15);
                           END;
                            }

    { 1000000009;2;Field  ;
                SourceExpr="Column 16 Value";
                CaptionClass='3,'+NfMatrixContext."Column 16 Caption";
                Visible=Column16Enabled;
                Enabled=Column16Enabled;
                OnValidate=BEGIN
                             ValidateValue(16);
                           END;
                            }

    { 1000000008;2;Field  ;
                SourceExpr="Column 17 Value";
                CaptionClass='3,'+NfMatrixContext."Column 17 Caption";
                Visible=Column17Enabled;
                Enabled=Column17Enabled;
                OnValidate=BEGIN
                             ValidateValue(17);
                           END;
                            }

    { 1000000007;2;Field  ;
                SourceExpr="Column 18 Value";
                CaptionClass='3,'+NfMatrixContext."Column 18 Caption";
                Visible=Column18Enabled;
                Enabled=Column18Enabled;
                OnValidate=BEGIN
                             ValidateValue(18);
                           END;
                            }

    { 1000000006;2;Field  ;
                SourceExpr="Column 19 Value";
                CaptionClass='3,'+NfMatrixContext."Column 19 Caption";
                Visible=Column19Enabled;
                Enabled=Column19Enabled;
                OnValidate=BEGIN
                             ValidateValue(19);
                           END;
                            }

    { 1000000005;2;Field  ;
                SourceExpr="Column 20 Value";
                CaptionClass='3,'+NfMatrixContext."Column 20 Caption";
                Visible=Column20Enabled;
                Enabled=Column20Enabled;
                OnValidate=BEGIN
                             ValidateValue(20);
                           END;
                            }

    { 1000000003;2;Field  ;
                Name=ActivityField;
                CaptionML=[ENU=Activity;
                           ENG=Activity];
                SourceExpr=Activity;
                StyleExpr=Style;
                OnValidate=BEGIN
                             ValidateActivity();
                           END;
                            }

    { 1000000027;2;Field  ;
                SourceExpr=ID;
                Visible=FALSE;
                Editable=FALSE;
                StyleExpr=Style }

    { 1000000026;2;Field  ;
                SourceExpr=Tree;
                Visible=FALSE;
                Editable=FALSE;
                StyleExpr=Style }

    { 1000000025;2;Field  ;
                SourceExpr="Parent ID";
                Visible=FALSE;
                Editable=FALSE;
                StyleExpr=Style }

    { 1000000032;1;Group  ;
                Name=QuickFilterGroup;
                CaptionML=[ENU=Quick Filter;
                           ENG=Quick Filter];
                Visible=QuickFilterEnabled;
                Enabled=QuickFilterEnabled;
                GroupType=Group }

    { 1000000033;2;Field  ;
                Name=QuickFilterObjectTypeField;
                CaptionML=[ENU=Object Type;
                           ENG=Object Type];
                SourceExpr=QuickFilterObjectType;
                OnValidate=BEGIN
                             QuickFilterObjectId := 0;
                             QuickFilterObjectName := '';
                             ApplyQuickFilter();
                           END;
                            }

    { 1000000031;2;Field  ;
                Name=QuickFilterObjectField;
                CaptionML=[ENU=Object;
                           ENG=Object];
                SourceExpr=QuickFilterObjectName;
                OnValidate=BEGIN
                             NfObjectToolkit.ValidateObjectName(QuickFilterObjectType, QuickFilterObjectId, QuickFilterObjectName, FALSE);
                             ApplyQuickFilter();
                           END;

                OnLookup=BEGIN
                           IF (NfObjectToolkit.ObjectLookup(QuickFilterObjectType, QuickFilterObjectId)) THEN
                           BEGIN
                             QuickFilterObjectName := NfObjectToolkit.GetObjectName(QuickFilterObjectType, QuickFilterObjectId);
                             ApplyQuickFilter();
                           END;
                         END;
                          }

  }
  CODE
  {
    VAR
      NfMatrixContext@1000000001 : Record 9086964;
      NfMatrixManagement@1000000000 : Codeunit 9086959;
      NfObjectToolkit@1000000030 : Codeunit 9086974;
      QuickFilterEnabled@1000000029 : Boolean INDATASET;
      QuickFilterObjectType@1000000026 : ' ,Table,,Report,,Codeunit,XMLport,MenuSuite,Page,Query,System';
      QuickFilterObjectId@1000000027 : Integer;
      QuickFilterObjectName@1000000028 : Text;
      TypeEnabled@1000000023 : Boolean INDATASET;
      Column1Enabled@1000000002 : Boolean INDATASET;
      Column2Enabled@1000000021 : Boolean INDATASET;
      Column3Enabled@1000000020 : Boolean INDATASET;
      Column4Enabled@1000000019 : Boolean INDATASET;
      Column5Enabled@1000000018 : Boolean INDATASET;
      Column6Enabled@1000000017 : Boolean INDATASET;
      Column7Enabled@1000000016 : Boolean INDATASET;
      Column8Enabled@1000000015 : Boolean INDATASET;
      Column9Enabled@1000000014 : Boolean INDATASET;
      Column10Enabled@1000000013 : Boolean INDATASET;
      Column11Enabled@1000000012 : Boolean INDATASET;
      Column12Enabled@1000000011 : Boolean INDATASET;
      Column13Enabled@1000000010 : Boolean INDATASET;
      Column14Enabled@1000000009 : Boolean INDATASET;
      Column15Enabled@1000000008 : Boolean INDATASET;
      Column16Enabled@1000000007 : Boolean INDATASET;
      Column17Enabled@1000000006 : Boolean INDATASET;
      Column18Enabled@1000000005 : Boolean INDATASET;
      Column19Enabled@1000000004 : Boolean INDATASET;
      Column20Enabled@1000000003 : Boolean INDATASET;
      Style@1000000022 : Text;
      Activity@1000000024 : ' ,Check All,Uncheck All';
      ParentId@1000000025 : Integer;
      PreviousSetEnabled@1000000032 : Boolean;
      NextSetEnabled@1000000031 : Boolean;

    PROCEDURE Initialise@1000000000(pParentTableId@1000000000 : Integer;pRowTableId@1000000002 : Integer;pColumnTableId@1000000003 : Integer;pShowType@1000000001 : Boolean);
    BEGIN
      ///<summary>Initialising the page</summary>
      ///<param name="pParentTableId">Parent table ID</param>
      ///<param name="pRowTableId">Row table ID</param>
      ///<param name="pColumnTableId">Column table ID</param>
      ///<param name="pShowType">Show type flag</param>

      NfMatrixManagement.Initialise(pParentTableId, pRowTableId, pColumnTableId, pShowType, NfMatrixContext, Rec);
      UpdateColumnFlags();
    END;

    PROCEDURE Refresh@1000000009(pParentId@1000000000 : Integer);
    BEGIN
      ///<summary>Refreshing</summary>
      ///<param name="pParentId">The parent ID</param>

      ParentId := pParentId;
      NfMatrixManagement.Refresh(pParentId, Rec, NfMatrixContext);
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE ValidateValue@1000000004(pIndex@1000000000 : Integer);
    VAR
      lUpdatePage@1000000002 : Boolean;
    BEGIN
      ///<summary>Validating value with given index</summary>
      ///<param name="pIndex">The index</param>

      CurrPage.SAVERECORD();
      lUpdatePage := NfMatrixManagement.Validate(Rec, NfMatrixContext, pIndex);
      UpdateGlobals();
      IF (lUpdatePage) THEN
        CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE ValidateActivity@1000000006();
    VAR
      lIndex@1000000000 : Integer;
      lValue@1000000001 : Boolean;
    BEGIN
      ///<summary>Validating activity</summary>

      IF (Activity = Activity::" ") THEN
        EXIT;

      lValue := (Activity = Activity::"Check All");
      FOR lIndex := 1 TO NfMatrixContext."Column Set Columns" DO
        Rec.SetColumnValue(lIndex, lValue);
      CurrPage.SAVERECORD();
      FOR lIndex := 1 TO NfMatrixContext."Column Set Columns" DO
        ValidateValue(lIndex);

      Activity := Activity::" ";

      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE UpdateColumnFlags@1000000002();
    BEGIN
      ///<summary>Updating column flags</summary>

      TypeEnabled := (NfMatrixContext."Show Type");

      Column1Enabled := (NfMatrixContext."Column Set Columns" >= 1);
      Column2Enabled := (NfMatrixContext."Column Set Columns" >= 2);
      Column3Enabled := (NfMatrixContext."Column Set Columns" >= 3);
      Column4Enabled := (NfMatrixContext."Column Set Columns" >= 4);
      Column5Enabled := (NfMatrixContext."Column Set Columns" >= 5);
      Column6Enabled := (NfMatrixContext."Column Set Columns" >= 6);
      Column7Enabled := (NfMatrixContext."Column Set Columns" >= 7);
      Column8Enabled := (NfMatrixContext."Column Set Columns" >= 8);
      Column9Enabled := (NfMatrixContext."Column Set Columns" >= 9);
      Column10Enabled := (NfMatrixContext."Column Set Columns" >= 10);
      Column11Enabled := (NfMatrixContext."Column Set Columns" >= 11);
      Column12Enabled := (NfMatrixContext."Column Set Columns" >= 12);
      Column13Enabled := (NfMatrixContext."Column Set Columns" >= 13);
      Column14Enabled := (NfMatrixContext."Column Set Columns" >= 14);
      Column15Enabled := (NfMatrixContext."Column Set Columns" >= 15);
      Column16Enabled := (NfMatrixContext."Column Set Columns" >= 16);
      Column17Enabled := (NfMatrixContext."Column Set Columns" >= 17);
      Column18Enabled := (NfMatrixContext."Column Set Columns" >= 18);
      Column19Enabled := (NfMatrixContext."Column Set Columns" >= 19);
      Column20Enabled := (NfMatrixContext."Column Set Columns" >= 20);
    END;

    LOCAL PROCEDURE UpdateGlobals@1000000001();
    BEGIN
      ///<summary>Updating global variables</summary>

      QuickFilterObjectType := NfMatrixContext."Quick Filter Object Type";
      QuickFilterObjectId := NfMatrixContext."Quick Filter Object ID";
      QuickFilterObjectName := NfObjectToolkit.GetObjectName(QuickFilterObjectType, QuickFilterObjectId);
      Style := Rec.GetStyle();
      PreviousSetEnabled := NfMatrixContext."Previous Set Enabled";
      NextSetEnabled := NfMatrixContext."Next Set Enabled";
    END;

    LOCAL PROCEDURE MarkRecords@1000000007(pMark@1000000000 : Boolean);
    BEGIN
      ///<summary>Marking selected records</summary>
      ///<param name="pMark">TRUE = Mark, FALSE = Unmark</param>

      CurrPage.SETSELECTIONFILTER(Rec);
      NfMatrixManagement.Mark(NfMatrixContext, Rec, pMark);
      Rec.RESET();
      IF (Rec.FINDFIRST()) THEN;
      Refresh(ParentId);
    END;

    LOCAL PROCEDURE ApplyQuickFilter@1000000003();
    BEGIN
      ///<summary>Applying quick filter</summary>

      NfMatrixContext."Quick Filter Object Type" := QuickFilterObjectType;
      NfMatrixContext."Quick Filter Object ID" := QuickFilterObjectId;
      NfMatrixManagement.ApplyQuickFilter(Rec, NfMatrixContext);
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE ClearQuickFilter@1000000008();
    BEGIN
      ///<summary>Clearing quick filter</summary>

      CLEAR(QuickFilterObjectType);
      CLEAR(QuickFilterObjectId);
      CLEAR(QuickFilterObjectName);
      ApplyQuickFilter();
    END;

    BEGIN
    {
      ///<summary>nForcement part used for any matrix-like editing</summary>
      ///<change version="NF2016.17" initials="JH" date="2016-04-24">Created</change>
    }
    END.
  }
}

