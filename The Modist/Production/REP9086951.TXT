OBJECT Report 9086951 nF. Update Users Permissions
{
  OBJECT-PROPERTIES
  {
    Date=20/10/16;
    Time=[ 4:03:05 PM];
    Version List=NF2016.17;
  }
  PROPERTIES
  {
    CaptionML=[ENU=nForcement - Update Users Permissions;
               ENG=nForcement - Update Users Permissions];
    ProcessingOnly=Yes;
    OnInitReport=BEGIN
                   ReportResult := FALSE;
                 END;

    OnPreReport=BEGIN
                  ReportResult := TRUE;
                END;

  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1000000000;;Container;
                  ContainerType=ContentArea }

      { 1000000001;1;Group  ;
                  Name=OptionsGroup;
                  CaptionML=ENU=Options;
                  GroupType=Group }

      { 1000000002;2;Field  ;
                  Name=UsersToUpdateField;
                  CaptionML=[ENU=Users to Update;
                             ENG=Users to Update];
                  OptionCaptionML=[ENU=,Pending,All;
                                   ENG=,Pending,All];
                  SourceExpr=UsersToUpdate;
                  OnValidate=BEGIN
                               UpdateAll();
                             END;
                              }

      { 1000000003;2;Field  ;
                  Name=NoOfUsersField;
                  CaptionML=[ENU=No. of Users;
                             ENG=No. of Users];
                  SourceExpr=NoOfUsers;
                  Editable=FALSE }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      NfUser@1000000000 : Record 9086953;
      UsersToUpdate@1000000001 : ' ,Pending,All';
      NoOfUsers@1000000002 : Integer;
      ReportResult@1000000003 : Boolean;

    PROCEDURE Initialise@1000000001(VAR pNfUser@1000000000 : Record 9086953);
    BEGIN
      NfUser.COPY(pNfUser);
      NfUser.COPYFILTERS(pNfUser);
      NfUser.SETRANGE(Hidden, FALSE);
      NfUser.SETRANGE(Disabled, FALSE);
      NfUser.SETRANGE(Pending, TRUE);
      IF (NfUser.ISEMPTY()) THEN
        UsersToUpdate := UsersToUpdate::All
      ELSE
        UsersToUpdate := UsersToUpdate::Pending;
      UpdateAll();
    END;

    LOCAL PROCEDURE UpdateAll@1000000002();
    BEGIN
      IF (UsersToUpdate = UsersToUpdate::Pending) THEN
        NfUser.SETRANGE(Pending, TRUE)
      ELSE
        NfUser.SETRANGE(Pending);
      NoOfUsers := NfUser.COUNT();
    END;

    PROCEDURE GetReportResult@1000000004() : Boolean;
    BEGIN
      EXIT(ReportResult);
    END;

    PROCEDURE GetUsersToUpdate@1000000000() : Integer;
    BEGIN
      EXIT(UsersToUpdate);
    END;

    BEGIN
    {
      ///<summary>Processing-only report used as UI (parameters) for updating nForcement user permissions</summary>
      ///<change version="NF2016.17" initials="JH" date="2016-10-09">Created</change>
    }
    END.
  }
  RDLDATA
  {
  }
}

