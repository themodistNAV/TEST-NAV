OBJECT Page 776 Analysis Report Chart Matrix
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Analysis Report Chart Matrix;
               ENG=Analysis Report Chart Matrix];
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    SourceTable=Table771;
    PageType=List;
    OnFindRecord=BEGIN
                   EXIT(FINDSET);
                 END;

    OnAfterGetRecord=VAR
                       AnalysisLine@1000 : Record 7114;
                     BEGIN
                       IF AnalysisLine.GET("Analysis Area","Analysis Line Template Name","Analysis Line Line No.") THEN BEGIN
                         AnalysisLineRowNo := AnalysisLine."Row Ref. No.";
                         AnalysisLineDescription := AnalysisLine.Description;
                         GetChartTypes;
                       END;
                     END;

    ActionList=ACTIONS
    {
      { 17      ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 20      ;1   ;Action    ;
                      Name=ShowAll;
                      CaptionML=[ENU=Select All;
                                 ENG=Select All];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=AllLines;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 AnalysisReportChartLine@1000 : Record 771;
                                 AnalysisReportChartMgt@1001 : Codeunit 770;
                               BEGIN
                                 AnalysisReportChartLine.COPY(Rec);
                                 AnalysisReportChartLine.SETRANGE("Analysis Column Line No.");
                                 AnalysisReportChartMgt.SelectAll(AnalysisReportChartLine,TRUE);
                               END;
                                }
      { 18      ;1   ;Action    ;
                      Name=ShowNone;
                      CaptionML=[ENU=Deselect All;
                                 ENG=Deselect All];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=CancelAllLines;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 AnalysisReportChartLine@1001 : Record 771;
                                 AnalysisReportChartMgt@1000 : Codeunit 770;
                               BEGIN
                                 AnalysisReportChartLine.COPY(Rec);
                                 AnalysisReportChartLine.SETRANGE("Analysis Column Line No.");
                                 AnalysisReportChartMgt.DeselectAll(AnalysisReportChartLine,TRUE);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=Group;
                GroupType=Repeater }

    { 16  ;2   ;Field     ;
                Name=<Row No.>;
                CaptionML=[ENU=Row No.;
                           ENG=Row No.];
                SourceExpr=AnalysisLineRowNo;
                Editable=FALSE }

    { 15  ;2   ;Field     ;
                Name=<Description>;
                CaptionML=[ENU=Description;
                           ENG=Description];
                SourceExpr=AnalysisLineDescription;
                Editable=FALSE }

    { 14  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr=ChartType[1];
                CaptionClass='3,' + ColumnCaptions[1];
                OnValidate=BEGIN
                             SetChartType(1);
                           END;
                            }

    { 13  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr=ChartType[2];
                CaptionClass='3,' + ColumnCaptions[2];
                OnValidate=BEGIN
                             SetChartType(2);
                           END;
                            }

    { 12  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr=ChartType[3];
                CaptionClass='3,' + ColumnCaptions[3];
                OnValidate=BEGIN
                             SetChartType(3);
                           END;
                            }

    { 11  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr=ChartType[4];
                CaptionClass='3,' + ColumnCaptions[4];
                OnValidate=BEGIN
                             SetChartType(4);
                           END;
                            }

    { 10  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr=ChartType[5];
                CaptionClass='3,' + ColumnCaptions[5];
                OnValidate=BEGIN
                             SetChartType(5);
                           END;
                            }

    { 9   ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr=ChartType[6];
                CaptionClass='3,' + ColumnCaptions[6];
                OnValidate=BEGIN
                             SetChartType(6);
                           END;
                            }

    { 8   ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr=ChartType[7];
                CaptionClass='3,' + ColumnCaptions[7];
                OnValidate=BEGIN
                             SetChartType(7);
                           END;
                            }

    { 7   ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr=ChartType[8];
                CaptionClass='3,' + ColumnCaptions[8];
                OnValidate=BEGIN
                             SetChartType(8);
                           END;
                            }

    { 6   ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr=ChartType[9];
                CaptionClass='3,' + ColumnCaptions[9];
                OnValidate=BEGIN
                             SetChartType(9);
                           END;
                            }

    { 5   ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr=ChartType[10];
                CaptionClass='3,' + ColumnCaptions[10];
                OnValidate=BEGIN
                             SetChartType(10);
                           END;
                            }

    { 3   ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr=ChartType[11];
                CaptionClass='3,' + ColumnCaptions[11];
                OnValidate=BEGIN
                             SetChartType(11);
                           END;
                            }

    { 4   ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr=ChartType[12];
                CaptionClass='3,' + ColumnCaptions[12];
                OnValidate=BEGIN
                             SetChartType(12);
                           END;
                            }

  }
  CODE
  {
    VAR
      AnalysisLineRowNo@1005 : Code[20];
      AnalysisLineDescription@1004 : Text[80];
      ChartType@1003 : ARRAY [12] OF ' ,Line,StepLine,Column,StackedColumn';
      ColumnCaptions@1002 : ARRAY [12] OF Text[80];
      ColumnLineNos@1001 : ARRAY [12] OF Integer;
      MaxColumns@1000 : Integer;
      Text001@1006 : TextConst 'ENU=Invalid Column Layout.;ENG=Invalid Column Layout.';

    PROCEDURE SetFilters@1(AnalysisReportChartSetup@1000 : Record 770);
    BEGIN
      RESET;

      AnalysisReportChartSetup.SetLinkToLines(Rec);
      CASE AnalysisReportChartSetup."Base X-Axis on" OF
        AnalysisReportChartSetup."Base X-Axis on"::Period:
          IF FINDFIRST THEN
            SETRANGE("Analysis Column Line No.","Analysis Column Line No.");
        AnalysisReportChartSetup."Base X-Axis on"::Line,
        AnalysisReportChartSetup."Base X-Axis on"::Column:
          SETRANGE("Analysis Column Line No.",0);
      END;
      UpdateColumnCaptions(AnalysisReportChartSetup);
    END;

    LOCAL PROCEDURE UpdateColumnCaptions@19(AnalysisReportChartSetup@1003 : Record 770);
    VAR
      AnalysisColumn@1002 : Record 7118;
      ColumnNo@1000 : Integer;
      i@1001 : Integer;
    BEGIN
      CLEAR(ColumnCaptions);
      AnalysisReportChartSetup.FilterAnalysisColumn(AnalysisColumn);

      IF AnalysisColumn.FINDSET THEN
        REPEAT
          ColumnNo := ColumnNo + 1;
          IF ColumnNo <= ARRAYLEN(ColumnCaptions) THEN BEGIN
            ColumnCaptions[ColumnNo] := AnalysisColumn."Column Header";
            ColumnLineNos[ColumnNo] := AnalysisColumn."Line No.";
          END;
        UNTIL AnalysisColumn.NEXT = 0;
      MaxColumns := ColumnNo;
      // Set unused columns to blank to prevent RTC to display control ID as caption
      FOR i := MaxColumns + 1 TO ARRAYLEN(ColumnCaptions) DO
        ColumnCaptions[i] := ' ';
    END;

    LOCAL PROCEDURE GetChartTypes@3();
    VAR
      AnalysisReportChartSetup@1003 : Record 770;
      AnalysisReportChartLine@1000 : Record 771;
      AnalysisReportChartLine2@1002 : Record 771;
      i@1001 : Integer;
    BEGIN
      AnalysisReportChartSetup.GET("User ID","Analysis Area",Name);
      CASE AnalysisReportChartSetup."Base X-Axis on" OF
        AnalysisReportChartSetup."Base X-Axis on"::Period:
          FOR i := 1 TO MaxColumns DO BEGIN
            AnalysisReportChartLine.GET("User ID","Analysis Area",Name,"Analysis Line Line No.",ColumnLineNos[i]);
            ChartType[i] := AnalysisReportChartLine."Chart Type";
          END;
        AnalysisReportChartSetup."Base X-Axis on"::Line:
          BEGIN
            AnalysisReportChartLine.GET("User ID","Analysis Area",Name,"Analysis Line Line No.",0);
            IF AnalysisReportChartLine."Chart Type" <> AnalysisReportChartLine."Chart Type"::" " THEN
              FOR i := 1 TO MaxColumns DO BEGIN
                AnalysisReportChartLine2.GET("User ID","Analysis Area",Name,0,ColumnLineNos[i]);
                ChartType[i] := AnalysisReportChartLine2."Chart Type";
              END
            ELSE
              FOR i := 1 TO MaxColumns DO
                ChartType[i] := AnalysisReportChartLine2."Chart Type"::" ";
          END;
        AnalysisReportChartSetup."Base X-Axis on"::Column:
          BEGIN
            AnalysisReportChartLine.GET("User ID","Analysis Area",Name,"Analysis Line Line No.",0);
            FOR i := 1 TO MaxColumns DO BEGIN
              AnalysisReportChartLine2.GET("User ID","Analysis Area",Name,0,ColumnLineNos[i]);
              IF AnalysisReportChartLine2."Chart Type" <> AnalysisReportChartLine2."Chart Type"::" " THEN
                ChartType[i] := AnalysisReportChartLine."Chart Type"
              ELSE
                ChartType[i] := AnalysisReportChartLine."Chart Type"::" ";
            END;
          END;
      END;
      FOR i := MaxColumns + 1 TO ARRAYLEN(ColumnCaptions) DO
        ChartType[i] := AnalysisReportChartLine."Chart Type"::" ";
    END;

    LOCAL PROCEDURE SetChartType@2(ColumnNo@1000 : Integer);
    VAR
      AnalysisReportChartLine@1001 : Record 771;
      AnalysisReportChartSetup@1002 : Record 770;
    BEGIN
      IF ColumnNo > MaxColumns THEN
        ERROR(Text001);

      AnalysisReportChartSetup.GET("User ID","Analysis Area",Name);
      CASE AnalysisReportChartSetup."Base X-Axis on" OF
        AnalysisReportChartSetup."Base X-Axis on"::Period:
          AnalysisReportChartLine.GET("User ID","Analysis Area",Name,"Analysis Line Line No.",ColumnLineNos[ColumnNo]);
        AnalysisReportChartSetup."Base X-Axis on"::Line:
          AnalysisReportChartLine.GET("User ID","Analysis Area",Name,0,ColumnLineNos[ColumnNo]);
        AnalysisReportChartSetup."Base X-Axis on"::Column:
          AnalysisReportChartLine.GET("User ID","Analysis Area",Name,"Analysis Line Line No.",0);
      END;
      AnalysisReportChartLine.VALIDATE("Chart Type",ChartType[ColumnNo]);
      AnalysisReportChartLine.MODIFY;
      CurrPage.UPDATE;
    END;

    BEGIN
    END.
  }
}

