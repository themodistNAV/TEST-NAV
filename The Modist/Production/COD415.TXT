OBJECT Codeunit 415 Release Purchase Document
{
  OBJECT-PROPERTIES
  {
    Date=25/01/17;
    Time=10:03:21 AM;
    Modified=Yes;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    TableNo=38;
    OnRun=VAR
            PurchLine@1000 : Record 39;
            TempVATAmountLine0@1001 : TEMPORARY Record 290;
            TempVATAmountLine1@1002 : TEMPORARY Record 290;
            PrepaymentMgt@1007 : Codeunit 441;
            NotOnlyDropShipment@1003 : Boolean;
            PostingDate@1004 : Date;
            PrintPostedDocuments@1005 : Boolean;
            Location@1000000000 : Record 14;
            IntegrationProcessProcessor@1000000001 : Codeunit 50005;
          BEGIN
            IF Status = Status::Released THEN
              EXIT;

            OnBeforeReleasePurchaseDoc(Rec);
            OnCheckPurchaseReleaseRestrictions;

            TESTFIELD("Buy-from Vendor No.");
            //DOC OP9031 RK 24/11/2016 -
            ItemLineFound := FALSE;
            //DOC OP9031 RK 24/11/2016 +
            PurchLine.SETRANGE("Document Type","Document Type");
            PurchLine.SETRANGE("Document No.","No.");
            PurchLine.SETFILTER(Type,'>0');
            PurchLine.SETFILTER(Quantity,'<>0');
            IF NOT PurchLine.FIND('-') THEN
              ERROR(Text001,"Document Type","No.");
            InvtSetup.GET;
            IF InvtSetup."Location Mandatory" THEN BEGIN
              PurchLine.SETRANGE(Type,PurchLine.Type::Item);
              IF PurchLine.FIND('-') THEN
                REPEAT
                //DOC OP9031 RK 24/11/2016 -
                  //IF NOT PurchLine.IsServiceItem THEN
                  //  PurchLine.TESTFIELD("Location Code");
                  IF NOT PurchLine.IsServiceItem THEN BEGIN
                    PurchLine.TESTFIELD("Location Code");
                    ItemLineFound := TRUE;
                  END;
                //DOC OP9031 RK 24/11/2016 +
                UNTIL PurchLine.NEXT = 0;
              PurchLine.SETFILTER(Type,'>0');
            END;
            PurchLine.SETRANGE("Drop Shipment",FALSE);
            NotOnlyDropShipment := PurchLine.FIND('-');
            PurchLine.RESET;

            PurchSetup.GET;
            IF PurchSetup."Calc. Inv. Discount" THEN BEGIN
              PostingDate := "Posting Date";
              PrintPostedDocuments := "Print Posted Documents";
              CODEUNIT.RUN(CODEUNIT::"Purch.-Calc.Discount",PurchLine);
              GET("Document Type","No.");
              "Print Posted Documents" := PrintPostedDocuments;
              IF PostingDate <> "Posting Date" THEN
                VALIDATE("Posting Date",PostingDate);
            END;

            IF PrepaymentMgt.TestPurchasePrepayment(Rec) AND ("Document Type" = "Document Type"::Order) THEN BEGIN
              Status := Status::"Pending Prepayment";
              MODIFY(TRUE);
              EXIT;
            END
              ;
            Status := Status::Released;

            PurchLine.SetPurchHeader(Rec);
            PurchLine.CalcVATAmountLines(0,Rec,PurchLine,TempVATAmountLine0);
            PurchLine.CalcVATAmountLines(1,Rec,PurchLine,TempVATAmountLine1);
            PurchLine.UpdateVATOnLines(0,Rec,PurchLine,TempVATAmountLine0);
            PurchLine.UpdateVATOnLines(1,Rec,PurchLine,TempVATAmountLine1);

            MODIFY(TRUE);

            IF NotOnlyDropShipment THEN
              IF "Document Type" IN ["Document Type"::Order,"Document Type"::"Return Order"] THEN
                WhsePurchRelease.Release(Rec);

            OnAfterReleasePurchaseDoc(Rec);
            //DOC OP9031 RK 24/11/2016 -
            IF (ItemLineFound) AND ("Document Type" = "Document Type"::"Return Order") THEN BEGIN
            //  IF Location.GET("Location Code") THEN BEGIN
            //    IF Location."3PL Enabled" THEN
                  IntegrationProcessProcessor.Add3PLOrderPR(Rec);
            //  END;
            END;
            //DOC OP9031 RK 24/11/2016 +
          END;

  }
  CODE
  {
    VAR
      Text001@1010 : TextConst 'ENU=There is nothing to release for the document of type %1 with the number %2.;ENG=There is nothing to release for the document of type %1 with the number %2.';
      PurchSetup@1002 : Record 312;
      InvtSetup@1000 : Record 313;
      WhsePurchRelease@1004 : Codeunit 5772;
      Text002@1005 : TextConst 'ENU=This document can only be released when the approval process is complete.;ENG=This document can only be released when the approval process is complete.';
      Text003@1006 : TextConst 'ENU=The approval process must be cancelled or completed to reopen this document.;ENG=The approval process must be cancelled or completed to reopen this document.';
      Text004@1003 : TextConst 'ENU=There are unposted prepayment amounts on the document of type %1 with the number %2.;ENG=There are unposted prepayment amounts on the document of type %1 with the number %2.';
      Text005@1001 : TextConst 'ENU=There are unpaid prepayment invoices that are related to the document of type %1 with the number %2.;ENG=There are unpaid prepayment invoices that are related to the document of type %1 with the number %2.';
      ItemLineFound@1000000000 : Boolean;

    PROCEDURE Reopen@1(VAR PurchHeader@1000 : Record 38);
    BEGIN
      OnBeforeReopenPurchaseDoc(PurchHeader);

      WITH PurchHeader DO BEGIN
        IF Status = Status::Open THEN
          EXIT;
        IF "Document Type" IN ["Document Type"::Order,"Document Type"::"Return Order"] THEN
          WhsePurchRelease.Reopen(PurchHeader);
        Status := Status::Open;

        MODIFY(TRUE);
      END;

      OnAfterReopenPurchaseDoc(PurchHeader);
    END;

    PROCEDURE PerformManualRelease@2(VAR PurchHeader@1002 : Record 38);
    VAR
      PrepaymentMgt@1001 : Codeunit 441;
      ApprovalsMgmt@1000 : Codeunit 1535;
    BEGIN
      WITH PurchHeader DO BEGIN
        IF PrepaymentMgt.TestPurchasePrepayment(PurchHeader) THEN
          ERROR(STRSUBSTNO(Text004,"Document Type","No."));
        IF ("Document Type" = "Document Type"::Order) AND PrepaymentMgt.TestPurchasePayment(PurchHeader) THEN BEGIN
          IF Status <> Status::"Pending Prepayment" THEN BEGIN
            Status := Status::"Pending Prepayment";
            MODIFY;
            COMMIT;
          END;
          ERROR(STRSUBSTNO(Text005,"Document Type","No."));
        END;
      END;

      IF ApprovalsMgmt.IsPurchaseApprovalsWorkflowEnabled(PurchHeader) AND (PurchHeader.Status = PurchHeader.Status::Open) THEN
        ERROR(Text002);

      CODEUNIT.RUN(CODEUNIT::"Release Purchase Document",PurchHeader);
    END;

    PROCEDURE PerformManualReopen@3(VAR PurchHeader@1002 : Record 38);
    BEGIN
      IF PurchHeader.Status = PurchHeader.Status::"Pending Approval" THEN
        ERROR(Text003);

      Reopen(PurchHeader);
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeReleasePurchaseDoc@5(VAR PurchaseHeader@1000 : Record 38);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterReleasePurchaseDoc@4(VAR PurchaseHeader@1000 : Record 38);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeReopenPurchaseDoc@6(VAR PurchaseHeader@1000 : Record 38);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterReopenPurchaseDoc@7(VAR PurchaseHeader@1000 : Record 38);
    BEGIN
    END;

    BEGIN
    {
      //DOC OP9031 RK 24/11/2016 - Create 3PL order export log.
    }
    END.
  }
}

