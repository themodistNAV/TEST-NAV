OBJECT Report 9087002 Copy From Item Hierarchy
{
  OBJECT-PROPERTIES
  {
    Date=16/01/14;
    Time=[ 6:45:35 PM];
    Version List=NS2015.1;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Copy From Item Hierarchy;
               ENG=Copy From Item Hierarchy];
    ProcessingOnly=Yes;
  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1000000000;;Container;
                  ContainerType=ContentArea }

      { 1000000001;1;Field  ;
                  Name=DivisionCode;
                  CaptionML=ENU=Division Code;
                  SourceExpr=mDivisionCode;
                  OnValidate=BEGIN
                               ValidateDivision();
                             END;

                  OnLookup=BEGIN
                             DivisionLookup();
                           END;
                            }

      { 1000000002;1;Field  ;
                  Name=DepartmentCode;
                  CaptionML=ENU=Department Code;
                  SourceExpr=mDepartmentCode;
                  OnValidate=BEGIN
                               ValidateDepartment();
                             END;

                  OnLookup=BEGIN
                             DepartmentLookup();
                           END;
                            }

      { 1000000003;1;Field  ;
                  Name=GroupCode;
                  CaptionML=ENU=Group Code;
                  SourceExpr=mGroupCode;
                  OnValidate=BEGIN
                               ValidateGroup();
                             END;

                  OnLookup=BEGIN
                             GroupLookup();
                           END;
                            }

      { 1000000004;1;Field  ;
                  Name=CategoryCode;
                  CaptionML=ENU=Category Code;
                  SourceExpr=mCategoryCode }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      mItemHierarchy@1000000005 : Record 9087005;
      mDivisionCode@1000000000 : Code[20];
      mDepartmentCode@1000000001 : Code[20];
      mGroupCode@1000000002 : Code[20];
      mCategoryCode@1000000003 : Code[20];
      mLastDivisionCode@1000000004 : Code[20];
      mLastDepartmentCode@1000000006 : Code[20];
      mLastGroupCode@1000000007 : Code[20];
      mLastCategoryCode@1000000008 : Code[20];
      tEmpty@1000000009 : TextConst 'ENU=Empty "%1";ENG=Empty "%1"';

    PROCEDURE GetType@1000000005() : Integer;
    BEGIN
      IF (mDivisionCode <> '') THEN
      BEGIN
        IF (mDepartmentCode <> '') THEN
        BEGIN
          IF (mGroupCode <> '') THEN
          BEGIN
            IF (mCategoryCode <> '') THEN
              EXIT(mItemHierarchy.Type::"Sub-Category")
            ELSE
              EXIT(mItemHierarchy.Type::Category);
          END
          ELSE
            EXIT(mItemHierarchy.Type::Group);
        END
        ELSE
          EXIT(mItemHierarchy.Type::Department);
      END
      ELSE
        EXIT(mItemHierarchy.Type::Division);
    END;

    PROCEDURE "--- Division ---"@1000000008();
    BEGIN
    END;

    PROCEDURE GetDivisionCode@1000000001() : Code[20];
    BEGIN
      EXIT(mDivisionCode);
    END;

    LOCAL PROCEDURE ValidateDivision@1000000013();
    BEGIN
      IF (mDivisionCode <> mLastDivisionCode) THEN
      BEGIN
        CLEAR(mDepartmentCode);
        CLEAR(mGroupCode);
        CLEAR(mCategoryCode);
        CLEAR(mLastDepartmentCode);
        CLEAR(mLastGroupCode);
        CLEAR(mLastCategoryCode);
      END;

      IF (mDivisionCode <> '') THEN
        mItemHierarchy.GET(mItemHierarchy.Type::Division, mDivisionCode);

      mLastDivisionCode := mDivisionCode;
    END;

    LOCAL PROCEDURE DivisionLookup@1000000014() : Boolean;
    VAR
      lResult@1000000000 : Boolean;
    BEGIN
      lResult := FALSE;
      mItemHierarchy.RESET();
      mItemHierarchy.FILTERGROUP(2);
      mItemHierarchy.SETRANGE(Type, mItemHierarchy.Type::Division);
      IF (mDivisionCode <> '') THEN
        IF ( NOT (mItemHierarchy.GET(mItemHierarchy.Type::Division, mDivisionCode))) THEN;
      mItemHierarchy.FILTERGROUP(0);
      IF (PAGE.RUNMODAL(0, mItemHierarchy) = ACTION::LookupOK) THEN
      BEGIN
        mDivisionCode := mItemHierarchy."Division Code";
        ValidateDivision();
        lResult := TRUE;
      END;
      EXIT(lResult);
    END;

    LOCAL PROCEDURE CheckDivision@1000000007();
    BEGIN
      IF (mDivisionCode = '') THEN
        ERROR(tEmpty, mItemHierarchy.FIELDCAPTION("Division Code"));
    END;

    PROCEDURE "--- Department ---"@1000000009();
    BEGIN
    END;

    PROCEDURE GetDepartmentCode@1000000002() : Code[20];
    BEGIN
      EXIT(mDepartmentCode);
    END;

    LOCAL PROCEDURE ValidateDepartment@1000000006();
    BEGIN
      IF (mDepartmentCode <> mLastDepartmentCode) THEN
      BEGIN
        CLEAR(mGroupCode);
        CLEAR(mCategoryCode);
        CLEAR(mLastGroupCode);
        CLEAR(mLastCategoryCode);
      END;

      CheckDivision();
      IF (mDepartmentCode <> '') THEN
        mItemHierarchy.GET(mItemHierarchy.Type::Department, mDivisionCode, mDepartmentCode);

      mLastDepartmentCode := mDepartmentCode;
    END;

    LOCAL PROCEDURE DepartmentLookup@1000000000() : Boolean;
    VAR
      lResult@1000000000 : Boolean;
    BEGIN
      CheckDivision();
      lResult := FALSE;
      mItemHierarchy.RESET();
      mItemHierarchy.FILTERGROUP(2);
      mItemHierarchy.SETRANGE(Type, mItemHierarchy.Type::Department);
      mItemHierarchy.SETRANGE("Division Code", mDivisionCode);
      IF (mDepartmentCode <> '') THEN
        IF ( NOT (mItemHierarchy.GET(mItemHierarchy.Type::Department, mDivisionCode, mDepartmentCode))) THEN;
      mItemHierarchy.FILTERGROUP(0);
      IF (PAGE.RUNMODAL(0, mItemHierarchy) = ACTION::LookupOK) THEN
      BEGIN
        mDepartmentCode := mItemHierarchy."Department Code";
        ValidateDepartment();
        lResult := TRUE;
      END;
      EXIT(lResult);
    END;

    LOCAL PROCEDURE CheckDepartment@1000000011();
    BEGIN
      IF (mDepartmentCode = '') THEN
        ERROR(tEmpty, mItemHierarchy.FIELDCAPTION("Department Code"));
    END;

    PROCEDURE "--- Group ---"@1000000012();
    BEGIN
    END;

    PROCEDURE GetGroupCode@1000000003() : Code[20];
    BEGIN
      EXIT(mGroupCode);
    END;

    LOCAL PROCEDURE ValidateGroup@1000000017();
    BEGIN
      IF (mGroupCode <> mLastGroupCode) THEN
      BEGIN
        CLEAR(mCategoryCode);
        CLEAR(mLastCategoryCode);
      END;

      CheckDivision();
      CheckDepartment();
      IF (mGroupCode <> '') THEN
        mItemHierarchy.GET(mItemHierarchy.Type::Group, mDivisionCode, mDepartmentCode, mGroupCode);

      mLastGroupCode := mGroupCode;
    END;

    LOCAL PROCEDURE GroupLookup@1000000016() : Boolean;
    VAR
      lResult@1000000000 : Boolean;
    BEGIN
      CheckDivision();
      CheckDepartment();
      lResult := FALSE;
      mItemHierarchy.RESET();
      mItemHierarchy.FILTERGROUP(2);
      mItemHierarchy.SETRANGE(Type, mItemHierarchy.Type::Group);
      mItemHierarchy.SETRANGE("Division Code", mDivisionCode);
      mItemHierarchy.SETRANGE("Department Code", mDepartmentCode);
      IF (mGroupCode <> '') THEN
        IF ( NOT (mItemHierarchy.GET(mItemHierarchy.Type::Group, mDivisionCode, mDepartmentCode, mGroupCode))) THEN;
      mItemHierarchy.FILTERGROUP(0);
      IF (PAGE.RUNMODAL(0, mItemHierarchy) = ACTION::LookupOK) THEN
      BEGIN
        mGroupCode := mItemHierarchy."Group Code";
        ValidateGroup();
        lResult := TRUE;
      END;
      EXIT(lResult);
    END;

    LOCAL PROCEDURE CheckGroup@1000000010();
    BEGIN
      IF (mGroupCode = '') THEN
        ERROR(tEmpty, mItemHierarchy.FIELDCAPTION("Group Code"));
    END;

    PROCEDURE "--- Category ---"@1000000015();
    BEGIN
    END;

    PROCEDURE GetCategoryCode@1000000004() : Code[20];
    BEGIN
      EXIT(mCategoryCode);
    END;

    BEGIN
    {
      //DOC NS2015.1 JH 16/01/2014 - Created
    }
    END.
  }
  RDLDATA
  {
  }
}

