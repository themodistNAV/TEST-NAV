OBJECT Page 9062355 Jet Report Card Permissions
{
  OBJECT-PROPERTIES
  {
    Date=10/05/16;
    Time=12:00:00 PM;
    Version List=NA2016.15;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Jet Report Card Permissions;
               ENG=Jet Report Card Permissions];
    SourceTable=Table9062298;
    PageType=ListPart;
    OnOpenPage=BEGIN
                 mPresentationMode := GetPresentationMode();
                 mShowJetReport := (mPresentationMode <> Rec."Presentation Mode"::"Jet Report");
                 mShowContact := (mPresentationMode <> Rec."Presentation Mode"::Contact);
               END;

    OnAfterGetRecord=VAR
                       Jet@1000000000 : Record 9062296;
                     BEGIN
                     END;

    ActionList=ACTIONS
    {
      { 1000000008;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1000000009;1 ;Action    ;
                      Name=Create Blank Permission;
                      CaptionML=[ENU=Create Blank Permission;
                                 ENG=Create Blank Permission];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 JetPerm@1000000000 : Record 9062298;
                                 HeaderIDFilter@1000000001 : Text;
                                 HeaderIDInt@1000000002 : Integer;
                                 i@1000000003 : Integer;
                               BEGIN
                                 i := 0;
                                 REPEAT
                                   FILTERGROUP(i);
                                   HeaderIDFilter := GETFILTER("Header ID");
                                   i += 1;
                                 UNTIL (HeaderIDFilter <> '') OR (i >= 10);

                                 IF NOT EVALUATE(HeaderIDInt,HeaderIDFilter) THEN ERROR(errNoHeader);
                                 IF JetPerm.GET(HeaderIDInt,'','') THEN EXIT;

                                 JetPerm.INIT;
                                 JetPerm.VALIDATE("Header ID",HeaderIDInt);
                                 JetPerm.INSERT(TRUE);

                                 MESSAGE(mBlankPermCreated);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1000000000;0;Container;
                ContainerType=ContentArea }

    { 1000000001;1;Group  ;
                Name=Group;
                CaptionML=[ENU=Group;
                           ENG=Group];
                GroupType=Repeater }

    { 1000000002;2;Field  ;
                SourceExpr="Header ID";
                Visible=mShowJetReport }

    { 1000000010;2;Field  ;
                DrillDown=No;
                AssistEdit=No;
                SourceExpr="Header Description";
                Visible=mShowJetReport }

    { 1000000007;2;Field  ;
                SourceExpr="Contact No.";
                Visible=mShowContact }

    { 1000000004;2;Field  ;
                DrillDown=No;
                SourceExpr="Contact Name" }

    { 1000000003;2;Field  ;
                SourceExpr=RangeName }

    { 1000000005;2;Field  ;
                SourceExpr="Param Filter" }

    { 1000000006;2;Field  ;
                SourceExpr="Override Value" }

  }
  CODE
  {
    VAR
      mPresentationMode@1000000004 : Integer;
      mShowContact@1000000000 : Boolean INDATASET;
      mShowJetReport@1000000001 : Boolean INDATASET;
      errNoHeader@1000000002 : TextConst 'ENU=Sorry, I couldn''t work out which Jet Autopilot Header to create the blank permission for;ENG=Sorry, I couldn''t work out which Jet Autopilot Header to create the blank permission for';
      mBlankPermCreated@1000000003 : TextConst 'ENU=Blank permission created;ENG=Blank permission created';

    LOCAL PROCEDURE GetPresentationMode@1000000000() : Integer;
    VAR
      lFilterGroup@1000000000 : Integer;
      lPresentationMode@1000000001 : Integer;
    BEGIN
      //DOC NA2015.1 - Returning presentation mode
      //  <- The mode

      IF (lPresentationMode = Rec."Presentation Mode"::" ") THEN
      BEGIN
        FOR lFilterGroup := 5 DOWNTO 0 DO
        BEGIN
          Rec.FILTERGROUP(lFilterGroup);
          IF (Rec.GETFILTER("Presentation Mode") <> '') THEN
          BEGIN
            lPresentationMode := Rec.GETRANGEMIN("Presentation Mode");
            lFilterGroup := 0;
          END;
        END;
        Rec.FILTERGROUP(0);

        IF (lPresentationMode = Rec."Presentation Mode"::" ") THEN
          lPresentationMode := Rec."Presentation Mode"::"Jet Report";
      END;

      EXIT(lPresentationMode);
    END;

    PROCEDURE SetPresentationMode@1000000001(pPresentationMode@1000000000 : Integer);
    BEGIN
      //DOC NA2015.1 - Setting presentation mode
      //  -> pPresentationMode: The mode

      mPresentationMode := pPresentationMode;
    END;

    BEGIN
    {
      //DOC NA2015.1  UM 2012/07/23 - Added OnOpenPage and OnAfterGetRecord to show/set Reportname if page is run from User Management (i.e. witha contact filter)
      //DOC NA2015.1  JH 31/08/2012 - Migrated to 2013
      //DOC NA2015.1  JH 07/03/2014 - Dynamic contact filter amended
      //DOC NA2015.4  JH 19/11/2014 - Contact name added
      //DOC NA2016.4  JH 28/08/2015 - Upgraded to 2016
      //DOC NA2016.15 JH 10/05/2016 - CfMD amendments
    }
    END.
  }
}

