OBJECT Codeunit 9062636 PS psXml Collection
{
  OBJECT-PROPERTIES
  {
    Date=10/05/16;
    Time=12:00:00 PM;
    Version List=NA2016.15;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      XmlDoc@9062234 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
      XmlNodeList@9062233 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeList";
      XmlNode@9062232 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      DecPoint@9062231 : Text[1];
      CurrentObjectNr@9062230 : Integer;
      error_EmptyCollection@9062237 : TextConst 'ENU=Empty XML Node List;ENG=Empty XML Node List';
      error_XmlObjectNotAssigned@9062236 : TextConst 'ENU=XML Node not assigned, NULL.;ENG=XML Node not assigned, NULL.';
      error_wrongposition@9062235 : TextConst 'ENU=Position invalid;ENG=Position invalid';

    PROCEDURE LoadXml@1(OuterXML@1000 : Text;XPath@1001 : Text);
    BEGIN
      Initialize;
      XmlDoc := XmlDoc.XmlDocument;
      XmlDoc.LoadXml(OuterXML);

      XmlNodeList := XmlDoc.GetElementsByTagName(XPath);
    END;

    PROCEDURE SetXml@4(XmlDocInstance@1000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument");
    BEGIN
      XmlDoc := XmlDocInstance;
    END;

    PROCEDURE GetXml@5(XmlDocReturn@1000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument");
    BEGIN
      XmlDocReturn := XmlDoc;
    END;

    LOCAL PROCEDURE FindNodeObject@1100084006();
    BEGIN
      XmlNode := XmlNodeList.ItemOf(CurrentObjectNr - 1);
    END;

    PROCEDURE RESET@1100084012();
    BEGIN
    END;

    PROCEDURE COUNT@1100084002() : Integer;
    BEGIN
      IF (ISNULL(XmlNodeList)) THEN
        EXIT(0);

      EXIT(XmlNodeList.Count);
    END;

    PROCEDURE ISEMPTY@1100084008() : Boolean;
    BEGIN
      EXIT(COUNT = 0);
    END;

    PROCEDURE NEXT@1100084004() : Integer;
    BEGIN
      IF (COUNT = 0) THEN
        EXIT(0);

      CurrentObjectNr += 1;
      IF (CurrentObjectNr > COUNT) THEN
        EXIT(0);

      FindNodeObject();
      EXIT(COUNT - CurrentObjectNr + 1);
    END;

    PROCEDURE FINDFIRST@1100084005() : Boolean;
    BEGIN
      IF (COUNT = 0) THEN
        ERROR(error_EmptyCollection);

      CurrentObjectNr := 1;
      FindNodeObject();
      EXIT(TRUE);
    END;

    PROCEDURE SETPOSITION@1100084013(Position@1100084000 : Integer);
    BEGIN
      IF (Position > COUNT) OR (COUNT = 0) OR (Position < 0) THEN
        ERROR(error_wrongposition);

      CurrentObjectNr := Position;
      FindNodeObject();
    END;

    PROCEDURE GetProperties@1100084010(VAR PsPropertyInfoArray@1100084001 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array");
    VAR
      String@1003 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.String";
      XmlAttributeCollection@1000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlAttributeCollection";
      XmlAttribute@1001 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlAttribute";
      Loop@1002 : Integer;
    BEGIN
      IF (ISNULL(XmlNode)) THEN
        ERROR(error_XmlObjectNotAssigned);

      XmlAttributeCollection := XmlNode.Attributes;
      PsPropertyInfoArray := PsPropertyInfoArray.CreateInstance(GETDOTNETTYPE(String),XmlAttributeCollection.Count);
      FOR Loop := 1 TO XmlAttributeCollection.Count DO BEGIN
        XmlAttribute := XmlAttributeCollection.ItemOf(Loop - 1);
        PsPropertyInfoArray.SetValue(XmlAttribute.Name,Loop - 1);
      END;
    END;

    PROCEDURE SetPropertyValue@1100084011(PropertyName@1100084000 : Text;VAR Value@1100084001 : Text);
    VAR
      XmlAttributeCollection@1001 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlAttributeCollection";
      XmlAttribute@1000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlAttribute";
    BEGIN
      IF (ISNULL(XmlNode)) THEN
        ERROR(error_XmlObjectNotAssigned);

      XmlAttributeCollection := XmlNode.Attributes;
      IF ISNULL(XmlAttributeCollection) THEN
        Value := ''
      ELSE BEGIN
        XmlAttribute := XmlAttributeCollection.ItemOf(PropertyName);
        IF ISNULL(XmlAttribute) THEN
          Value := ''
        ELSE
          Value := XmlAttribute.Value;
      END;
    END;

    PROCEDURE GetPropertyValueText@1100084025(PropertyName@1100084000 : Text) : Text;
    VAR
      PSPropertyInfo@1100084001 : DotNet "'System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.System.Management.Automation.PSPropertyInfo";
      tempString@1100084003 : Text;
    BEGIN
      SetPropertyValue(PropertyName,tempString);
      EXIT(FORMAT(tempString));
    END;

    PROCEDURE GetPropertyValueInteger@1100084001(PropertyName@1100084000 : Text) tempInt : Integer;
    VAR
      tempString@1000 : Text;
    BEGIN
      SetPropertyValue(PropertyName,tempString);
      IF tempString = '' THEN EXIT(0);
      IF DecPoint = ',' THEN
        tempString := CONVERTSTR(tempString,'.',DecPoint);
      EVALUATE(tempInt,tempString);
    END;

    PROCEDURE GetPropertyValueBoolean@1100084003(PropertyName@1100084000 : Text) : Boolean;
    VAR
      tempString@1000 : Text;
    BEGIN
      SetPropertyValue(PropertyName,tempString);
      EXIT(LOWERCASE(tempString) = 'true');
    END;

    PROCEDURE GetPropertyValueDate@1100084007(PropertyName@1100084000 : Text) : Date;
    VAR
      tempString@1100084001 : Text;
      Year@1002 : Integer;
      Month@1001 : Integer;
      Day@1000 : Integer;
    BEGIN
      SetPropertyValue(PropertyName,tempString);
      IF STRLEN(tempString) <> 10 THEN
        EXIT(0D);

      EVALUATE(Year,COPYSTR(tempString,1,4));
      EVALUATE(Month,COPYSTR(tempString,6,2));
      EVALUATE(Day,COPYSTR(tempString,9,2));
      EXIT(DMY2DATE(Day,Month,Year));
    END;

    PROCEDURE GetPropertyIndex@7(VAR PsPropertyInfoArray@1000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array";PropertyName@1001 : Text) IndexOf : Integer;
    VAR
      SearchString@1002 : Variant;
    BEGIN
      SearchString := PropertyName;
      IndexOf := PsPropertyInfoArray.IndexOf(PsPropertyInfoArray,SearchString,0);
    END;

    LOCAL PROCEDURE Initialize@3();
    BEGIN
      DecPoint := COPYSTR(FORMAT(1.23),2,1);
    END;

    EVENT XmlDoc@9062234::NodeInserting@93(sender@9062231 : Variant;e@9062230 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeChangedEventArgs");
    BEGIN
    END;

    EVENT XmlDoc@9062234::NodeInserted@94(sender@9062231 : Variant;e@9062230 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeChangedEventArgs");
    BEGIN
    END;

    EVENT XmlDoc@9062234::NodeRemoving@95(sender@9062231 : Variant;e@9062230 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeChangedEventArgs");
    BEGIN
    END;

    EVENT XmlDoc@9062234::NodeRemoved@96(sender@9062231 : Variant;e@9062230 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeChangedEventArgs");
    BEGIN
    END;

    EVENT XmlDoc@9062234::NodeChanging@97(sender@9062231 : Variant;e@9062230 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeChangedEventArgs");
    BEGIN
    END;

    EVENT XmlDoc@9062234::NodeChanged@98(sender@9062231 : Variant;e@9062230 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeChangedEventArgs");
    BEGIN
    END;

    BEGIN
    {
      //DOC NA2016.10 AP 29/10/2015 - Created
      //DOC NA2016.15 JH 09/05/2016 - CfMD modifications
    }
    END.
  }
}

