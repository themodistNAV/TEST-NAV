OBJECT Codeunit 212 Res. Jnl.-Post Line
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    TableNo=207;
    Permissions=TableData 203=imd,
                TableData 240=imd,
                TableData 951=m,
                TableData 952=m;
    OnRun=BEGIN
            GetGLSetup;
            RunWithCheck(Rec);
          END;

  }
  CODE
  {
    VAR
      GLSetup@1010 : Record 98;
      ResJnlLine@1000 : Record 207;
      ResLedgEntry@1001 : Record 203;
      Res@1002 : Record 156;
      ResReg@1003 : Record 240;
      GenPostingSetup@1004 : Record 252;
      ResUOM@1011 : Record 205;
      ResJnlCheckLine@1006 : Codeunit 211;
      NextEntryNo@1008 : Integer;
      GLSetupRead@1009 : Boolean;

    LOCAL PROCEDURE GetResReg@2(VAR NewResReg@1000 : Record 240);
    BEGIN
      NewResReg := ResReg;
    END;

    PROCEDURE RunWithCheck@3(VAR ResJnlLine2@1000 : Record 207);
    BEGIN
      ResJnlLine.COPY(ResJnlLine2);
      Code;
      ResJnlLine2 := ResJnlLine;
    END;

    LOCAL PROCEDURE Code@1();
    BEGIN
      WITH ResJnlLine DO BEGIN
        IF EmptyLine THEN
          EXIT;

        ResJnlCheckLine.RunCheck(ResJnlLine);

        IF NextEntryNo = 0 THEN BEGIN
          ResLedgEntry.LOCKTABLE;
          IF ResLedgEntry.FINDLAST THEN
            NextEntryNo := ResLedgEntry."Entry No.";
          NextEntryNo := NextEntryNo + 1;
        END;

        IF "Document Date" = 0D THEN
          "Document Date" := "Posting Date";

        IF ResReg."No." = 0 THEN BEGIN
          ResReg.LOCKTABLE;
          IF (NOT ResReg.FINDLAST) OR (ResReg."To Entry No." <> 0) THEN BEGIN
            ResReg.INIT;
            ResReg."No." := ResReg."No." + 1;
            ResReg."From Entry No." := NextEntryNo;
            ResReg."To Entry No." := NextEntryNo;
            ResReg."Creation Date" := TODAY;
            ResReg."Source Code" := "Source Code";
            ResReg."Journal Batch Name" := "Journal Batch Name";
            ResReg."User ID" := USERID;
            ResReg.INSERT;
          END;
        END;
        ResReg."To Entry No." := NextEntryNo;
        ResReg.MODIFY;

        Res.GET("Resource No.");
        Res.TESTFIELD(Blocked,FALSE);

        IF (GenPostingSetup."Gen. Bus. Posting Group" <> "Gen. Bus. Posting Group") OR
           (GenPostingSetup."Gen. Prod. Posting Group" <> "Gen. Prod. Posting Group")
        THEN
          GenPostingSetup.GET("Gen. Bus. Posting Group","Gen. Prod. Posting Group");

        "Resource Group No." := Res."Resource Group No.";

        ResLedgEntry.INIT;
        ResLedgEntry."Entry Type" := "Entry Type";
        ResLedgEntry."Document No." := "Document No.";
        ResLedgEntry."External Document No." := "External Document No.";
        ResLedgEntry."Order Type" := "Order Type";
        ResLedgEntry."Order No." := "Order No.";
        ResLedgEntry."Order Line No." := "Order Line No.";
        ResLedgEntry."Posting Date" := "Posting Date";
        ResLedgEntry."Document Date" := "Document Date";
        ResLedgEntry."Resource No." := "Resource No.";
        ResLedgEntry."Resource Group No." := "Resource Group No.";
        ResLedgEntry.Description := Description;
        ResLedgEntry."Work Type Code" := "Work Type Code";
        ResLedgEntry."Job No." := "Job No.";
        ResLedgEntry."Unit of Measure Code" := "Unit of Measure Code";
        ResLedgEntry.Quantity := Quantity;
        ResLedgEntry."Direct Unit Cost" := "Direct Unit Cost";
        ResLedgEntry."Unit Cost" := "Unit Cost";
        ResLedgEntry."Total Cost" := "Total Cost";
        ResLedgEntry."Unit Price" := "Unit Price";
        ResLedgEntry."Total Price" := "Total Price";
        ResLedgEntry."Global Dimension 1 Code" := "Shortcut Dimension 1 Code";
        ResLedgEntry."Global Dimension 2 Code" := "Shortcut Dimension 2 Code";
        ResLedgEntry."Dimension Set ID" := "Dimension Set ID";
        ResLedgEntry."Source Code" := "Source Code";
        ResLedgEntry."Journal Batch Name" := "Journal Batch Name";
        ResLedgEntry."Reason Code" := "Reason Code";
        ResLedgEntry."Gen. Bus. Posting Group" := "Gen. Bus. Posting Group";
        ResLedgEntry."Gen. Prod. Posting Group" := "Gen. Prod. Posting Group";
        ResLedgEntry."No. Series" := "Posting No. Series";
        ResLedgEntry."Source Type" := "Source Type";
        ResLedgEntry."Source No." := "Source No.";
        ResLedgEntry."Qty. per Unit of Measure" := "Qty. per Unit of Measure";
        GetGLSetup;

        WITH ResLedgEntry DO BEGIN
          "Total Cost" := ROUND("Total Cost");
          "Total Price" := ROUND("Total Price");
          IF "Entry Type" = "Entry Type"::Sale THEN BEGIN
            Quantity := -Quantity;
            "Total Cost" := -"Total Cost";
            "Total Price" := -"Total Price";
          END;
          "Direct Unit Cost" := ROUND("Direct Unit Cost",GLSetup."Unit-Amount Rounding Precision");
          "User ID" := USERID;
          "Entry No." := NextEntryNo;
          ResUOM.GET("Resource No.","Unit of Measure Code");
          IF ResUOM."Related to Base Unit of Meas." THEN
            "Quantity (Base)" := Quantity * "Qty. per Unit of Measure";
        END;

        IF "Entry Type" = "Entry Type"::Usage THEN
          PostTimeSheetDetail(ResJnlLine,ResLedgEntry."Quantity (Base)");

        ResLedgEntry.INSERT(TRUE);

        NextEntryNo := NextEntryNo + 1;
      END;
    END;

    LOCAL PROCEDURE GetGLSetup@14();
    BEGIN
      IF NOT GLSetupRead THEN
        GLSetup.GET;
      GLSetupRead := TRUE;
    END;

    LOCAL PROCEDURE PostTimeSheetDetail@4(ResJnlLine2@1002 : Record 207;QtyToPost@1003 : Decimal);
    VAR
      TimeSheetLine@1001 : Record 951;
      TimeSheetDetail@1000 : Record 952;
      TimeSheetMgt@1004 : Codeunit 950;
    BEGIN
      WITH ResJnlLine2 DO BEGIN
        IF "Time Sheet No." <> '' THEN BEGIN
          TimeSheetDetail.GET("Time Sheet No.","Time Sheet Line No.","Time Sheet Date");
          TimeSheetDetail."Posted Quantity" += QtyToPost;
          TimeSheetDetail.Posted := TimeSheetDetail.Quantity = TimeSheetDetail."Posted Quantity";
          TimeSheetDetail.MODIFY;
          TimeSheetLine.GET("Time Sheet No.","Time Sheet Line No.");
          TimeSheetMgt.CreateTSPostingEntry(TimeSheetDetail,Quantity,"Posting Date","Document No.",TimeSheetLine.Description);

          TimeSheetDetail.SETRANGE("Time Sheet No.","Time Sheet No.");
          TimeSheetDetail.SETRANGE("Time Sheet Line No.","Time Sheet Line No.");
          TimeSheetDetail.SETRANGE(Posted,FALSE);
          IF TimeSheetDetail.ISEMPTY THEN BEGIN
            TimeSheetLine.Posted := TRUE;
            TimeSheetLine.MODIFY;
          END;
        END;
      END;
    END;

    BEGIN
    END.
  }
}

