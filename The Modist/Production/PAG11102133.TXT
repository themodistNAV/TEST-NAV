OBJECT Page 11102133 OM - Create Table Wizard
{
  OBJECT-PROPERTIES
  {
    Date=10/10/13;
    Time=12:00:00 PM;
    Version List=OMA9.01;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Create Table Wizard;
               ENU=Create Table Wizard;
               ESP=Create Table Wizard;
               FRA=Create Table Wizard;
               NLD=Tabel aanmaken wizard;
               DEA=Create Table Wizard];
    SaveValues=Yes;
    LinksAllowed=No;
    PageType=Worksheet;
    ShowFilter=No;
    OnOpenPage=VAR
                 Setup@1000 : Record 11102035;
                 Object@1001 : Record 2000000001;
                 i@1002 : Integer;
                 ctCardPage@1003 : TextConst 'DEU=Card Page;ENU=Card Page;ESP=Card Page;FRA=Card Page;NLD=Kaartpagina;DEA=Card Page';
                 ctListPage@1004 : TextConst 'DEU=List Page;ENU=List Page;ESP=List Page;FRA=List Page;NLD=Lijstpagina;DEA=List Page';
                 ctSubPage@1005 : TextConst 'DEU=Sub Page;ENU=Sub Page;ESP=Sub Page;FRA=Sub Page;NLD=Subpagina;DEA=Sub Page';
                 ctSubTable@1006 : TextConst 'DEU=Sub Table;ENU=Sub Table;ESP=Sub Table;FRA=Sub Table;NLD=Subtabel;DEA=Sub Table';
                 ctTable@1007 : TextConst 'DEU=Table;ENU=Table;ESP=Table;FRA=Table;NLD=Tabel;DEA=Table';
               BEGIN
                 Setup.CustomGet;

                 IF NOT Initialized THEN BEGIN
                   Initialized := TRUE;
                   NameField := NameField::Descr;
                   CrSearchNameFld := TRUE;
                   RecordLinks := RecordLinks::"Not Visible";
                   Notes := Notes::"Not Visible";
                 END;

                 CreateObject[OT::Table] := TRUE;

                 ObjectType2[OT::Table] := Object.Type::Table;
                 ObjectType2[OT::"Sub Table"] := Object.Type::Table;
                 ObjectType2[OT::"Card Page"] := Object.Type::Page;
                 ObjectType2[OT::"Sub Page"] := Object.Type::Page;
                 ObjectType2[OT::"List Page"] := Object.Type::Page;

                 ObjectDescription[OT::Table] := ctTable;
                 ObjectDescription[OT::"Sub Table"] := ctSubTable;
                 ObjectDescription[OT::"Card Page"] := ctCardPage;
                 ObjectDescription[OT::"Sub Page"] := ctSubPage;
                 ObjectDescription[OT::"List Page"] := ctListPage;

                 FOR i := 1 TO ARRAYLEN(ObjectEnabled) DO
                   ObjectEnabled[i] := TRUE;

                 SetEnabled;

                 FormatTableNo;
                 FormatSubTableNo;
                 FormatNoSeriesTableNo;
                 FormatNoSeriesFieldNo;
                 FormatCardPageNo;
                 FormatSubPageNo;
                 FormatListPageNo;
               END;

    ActionList=ACTIONS
    {
      { 1       ;0   ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 2       ;1   ;Action    ;
                      CaptionML=[DEU=Caption&s;
                                 ENU=Caption&s;
                                 ESP=Caption&s;
                                 FRA=Caption&s;
                                 NLD=Caption&s;
                                 DEA=Caption&s];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Translation;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 Translations;
                               END;
                                }
      { 3       ;1   ;Action    ;
                      CaptionML=[DEU=&Create;
                                 ENU=&Create;
                                 ESP=&Create;
                                 FRA=&Create;
                                 NLD=&Aanmaken;
                                 DEA=&Create];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Start;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 Object@1000 : Record 2000000001;
                                 MessageText@1001 : Text[1024];
                                 ExistingObjects@1002 : Integer;
                                 i@1003 : Integer;
                                 NewObjects@1004 : Integer;
                                 ctObjectsCreated@1005 : TextConst 'DEU=%1 %2 created.;ENU=%1 %2 created.;ESP=%1 %2 created.;FRA=%1 %2 created.;NLD=%1 %2 aangemaakt.;DEA=%1 %2 created.';
                                 ctObjectsOverwritten@1006 : TextConst 'DEU=%1 %2 overwritten.;ENU=%1 %2 overwritten.;ESP=%1 %2 overwritten.;FRA=%1 %2 overwritten.;NLD=%1 %2 overschreven.;DEA=%1 %2 overwritten.';
                                 ctOverwriteObjects@1007 : TextConst 'DEU=%1 %2 will be overwritten.\Are you sure?;ENU=%1 %2 will be overwritten.\Are you sure?;ESP=%1 %2 will be overwritten.\Are you sure?;FRA=%1 %2 will be overwritten.\Are you sure?;NLD=%1 %2 zullen worden overschreven.\Weet u het zeker?;DEA=%1 %2 will be overwritten.\Are you sure?';
                               BEGIN
                                 IF AllInputValid THEN BEGIN

                                   FOR i := 1 TO ARRAYLEN(ObjectType2) DO
                                     IF CreateAndEnabled(i) THEN
                                       IF Object.GET(ObjectType2[i], '', ObjectNo[i]) THEN
                                         ExistingObjects += 1
                                       ELSE
                                         NewObjects += 1;

                                   IF ExistingObjects > 0 THEN
                                     IF NOT CONFIRM(ctOverwriteObjects, TRUE, ExistingObjects, ObjectOrObjects(ExistingObjects)) THEN
                                       EXIT;

                                   CreateObjects;
                                   CompileObjects;

                                   IF (NewObjects > 0) OR (ExistingObjects = 0) THEN
                                     MessageText += '\' + STRSUBSTNO(ctObjectsCreated, NewObjects, ObjectOrObjects(NewObjects));

                                   IF ExistingObjects > 0 THEN
                                     MessageText += '\' + STRSUBSTNO(ctObjectsOverwritten, ExistingObjects, ObjectOrObjects(ExistingObjects));

                                   MessageText := COPYSTR(MessageText, 2);
                                   MESSAGE(MessageText);

                                 END;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 4   ;0   ;Container ;
                ContainerType=ContentArea }

    { 5   ;1   ;Group     ;
                CaptionML=[DEU=Table;
                           ENU=Table;
                           ESP=Table;
                           FRA=Table;
                           NLD=Tabel;
                           DEA=Table] }

    { 6   ;2   ;Group     ;
                GroupType=Group }

    { 7   ;3   ;Field     ;
                CaptionML=[DEU=Type;
                           ENU=Type;
                           ESP=Type;
                           FRA=Type;
                           NLD=Soort;
                           DEA=Type];
                OptionCaptionML=[DEU=Master Data,Document,Setup,Ledger Entry;
                                 ENU=Master Data,Document,Setup,Ledger Entry;
                                 ESP=Master Data,Document,Setup,Ledger Entry;
                                 FRA=Master Data,Document,Setup,Ledger Entry;
                                 NLD=Masterdata,Document,Instellingen,Geboekte post;
                                 DEA=Master Data,Document,Setup,Ledger Entry];
                SourceExpr=TableType;
                OnValidate=BEGIN
                             TmpTranslationToolLine.DELETEALL;

                             ValidateTableType;
                             SetEnabled;
                           END;
                            }

    { 8   ;3   ;Field     ;
                CaptionML=[DEU=Table No.;
                           ENU=Table No.;
                           ESP=Table No.;
                           FRA=Table No.;
                           NLD=Tabelnr.;
                           DEA=Table No.];
                BlankZero=Yes;
                SourceExpr=DisplayTableNo;
                Enabled=TableEnabled;
                Editable=CreateTable;
                OnValidate=VAR
                             Object@1000 : Record 2000000001;
                           BEGIN
                             OnAfterInputObjectNo(Object.Type::Table, DisplayTableNo);
                             EVALUATE(ObjectNo[OT::Table], DisplayTableNo);
                             FormatTableNo;
                           END;

                OnLookup=BEGIN
                           EXIT(LookupObjectNo(OT::Table, Text));
                         END;
                          }

    { 9   ;3   ;Field     ;
                CaptionML=[DEU=Name;
                           ENU=Name;
                           ESP=Name;
                           FRA=Name;
                           NLD=Naam;
                           DEA=Name];
                SourceExpr=ObjectName[OT::Table];
                Enabled=TableEnabled;
                Editable=CreateTable;
                OnValidate=BEGIN
                             ValidateTableName;
                           END;
                            }

    { 10  ;3   ;Field     ;
                CaptionML=[DEU=Create Sub Table;
                           ENU=Create Sub Table;
                           ESP=Create Sub Table;
                           FRA=Create Sub Table;
                           NLD=Subtabel aanmaken;
                           DEA=Create Sub Table];
                SourceExpr=CreateObject[OT::"Sub Table"];
                Enabled=SubTableEnabled;
                OnValidate=BEGIN
                             CreateObject[OT::"Sub Page"] := CreateObject[OT::"Sub Table"];

                             SetEnabled;

                             SetSubPageName;
                           END;
                            }

    { 11  ;3   ;Field     ;
                CaptionML=[DEU=Sub Table No.;
                           ENU=Sub Table No.;
                           ESP=Sub Table No.;
                           FRA=Sub Table No.;
                           NLD=Subtabelnr.;
                           DEA=Sub Table No.];
                BlankZero=Yes;
                SourceExpr=DisplaySubTableNo;
                Enabled=SubTableEnabled;
                Editable=CreateSubTable;
                OnValidate=VAR
                             Object@1000 : Record 2000000001;
                           BEGIN
                             OnAfterInputObjectNo(Object.Type::Table, DisplaySubTableNo);
                             EVALUATE(ObjectNo[OT::"Sub Table"], DisplaySubTableNo);
                             FormatSubTableNo;
                           END;

                OnLookup=BEGIN
                           EXIT(LookupObjectNo(OT::"Sub Table", Text));
                         END;
                          }

    { 12  ;3   ;Field     ;
                CaptionML=[DEU=Sub Table Name;
                           ENU=Sub Table Name;
                           ESP=Sub Table Name;
                           FRA=Sub Table Name;
                           NLD=Subtabelnaam;
                           DEA=Sub Table Name];
                SourceExpr=ObjectName[OT::"Sub Table"];
                Enabled=SubTableEnabled;
                Editable=CreateSubTable;
                OnValidate=BEGIN
                             ResetObjectCaptions(OT::"Sub Table");
                           END;
                            }

    { 13  ;1   ;Group     ;
                CaptionML=[DEU=Fields;
                           ENU=Fields;
                           ESP=Fields;
                           FRA=Fields;
                           NLD=Velden;
                           DEA=Fields] }

    { 14  ;2   ;Group     ;
                GroupType=Group }

    { 15  ;3   ;Field     ;
                CaptionML=[DEU=Primary Key Field;
                           ENU=Primary Key Field;
                           ESP=Primary Key Field;
                           FRA=Primary Key Field;
                           NLD=Primairsleutelveld;
                           DEA=Primary Key Field];
                OptionCaptionML=[DEU=Code,No.,Primary Key,Entry No.;
                                 ENU=Code,No.,Primary Key,Entry No.;
                                 ESP=Code,No.,Primary Key,Entry No.;
                                 FRA=Code,No.,Primary Key,Entry No.;
                                 NLD=Code,Nr.,Primaire sleutel,Volgnummer;
                                 DEA=Code,No.,Primary Key,Entry No.];
                SourceExpr=PrimaryKeyField;
                OnValidate=BEGIN
                             ResetFieldCaptions(FT::"Primary 1");
                             SetEnabled;
                           END;
                            }

    { 16  ;3   ;Field     ;
                CaptionML=[DEU=Description/Name Field;
                           ENU=Description/Name Field;
                           ESP=Description/Name Field;
                           FRA=Description/Name Field;
                           NLD=Omschrijving-/naamveld;
                           DEA=Description/Name Field];
                OptionCaptionML=[DEU=None,Description,Name;
                                 ENU=None,Description,Name;
                                 ESP=None,Description,Name;
                                 FRA=None,Description,Name;
                                 NLD=Geen,Omschrijving,Naam;
                                 DEA=None,Description,Name];
                SourceExpr=NameField;
                Enabled=NameFieldEnabled;
                OnValidate=BEGIN
                             ResetFieldCaptions(FT::"Name 1");
                             ResetFieldCaptions(FT::Search);

                             SetEnabled;
                           END;
                            }

    { 17  ;3   ;Field     ;
                CaptionML=[DEU=Search Name Field;
                           ENU=Search Name Field;
                           ESP=Search Name Field;
                           FRA=Search Name Field;
                           NLD=Zoeknaamveld;
                           DEA=Search Name Field];
                SourceExpr=CrSearchNameFld;
                CaptionClass=SearchNameCaption;
                Enabled=SearchNameFieldEnabled }

    { 18  ;3   ;Field     ;
                CaptionML=[DEU=Use No. Series;
                           ENU=Use No. Series;
                           ESP=Use No. Series;
                           FRA=Use No. Series;
                           NLD=Gebruiker nr.-serie;
                           DEA=Use No. Series];
                SourceExpr=UseNoSeries;
                Enabled=NoSeriesEnabled;
                OnValidate=BEGIN
                             SetEnabled;
                           END;
                            }

    { 19  ;3   ;Field     ;
                CaptionML=[DEU=No. Series Table;
                           ENU=No. Series Table;
                           ESP=No. Series Table;
                           FRA=No. Series Table;
                           NLD=Nr.-serietabel;
                           DEA=No. Series Table];
                BlankZero=Yes;
                SourceExpr=DisplayNoSeriesTableNo;
                Enabled=NoSeriesEnabled;
                Editable=UseNoSeries;
                OnValidate=VAR
                             Object@1000 : Record 2000000001;
                           BEGIN
                             OnAfterInputObjectNo(Object.Type::Table, DisplayNoSeriesTableNo);
                             EVALUATE(NoSeriesTableNo, DisplayNoSeriesTableNo);
                             FormatNoSeriesTableNo;

                             NoSeriesFieldNo := 0;
                             DisplayNoSeriesFieldNo := '';
                           END;

                OnLookup=VAR
                           Object@1000 : Record 2000000001;
                           TmpObject@1001 : TEMPORARY Record 2000000001;
                           Field@1002 : Record 2000000041;
                           ObjectNo2@1003 : Integer;
                         BEGIN
                           Object.FILTERGROUP(2);
                           Object.SETRANGE(Type, Object.Type::Table);
                           Object.SETRANGE("Company Name", '');
                           Object.FILTERGROUP(0);

                           Object.SETFILTER(Name, '@*setup*');

                           IF Object.FINDSET THEN
                             REPEAT
                               Field.SETRANGE(TableNo, Object.ID);
                               Field.SETRANGE(RelationTableNo, DATABASE::"No. Series");
                               IF NOT Field.ISEMPTY THEN BEGIN
                                 TmpObject := Object;
                                 TmpObject.INSERT;
                               END;
                             UNTIL Object.NEXT = 0;

                           IF TmpObject.FINDFIRST THEN
                             ;

                           IF EVALUATE(ObjectNo2, Text) THEN
                             IF TmpObject.GET(Object.Type::Table, '', ObjectNo2) THEN
                               ;

                           TmpObject.SETFILTER(Name, '@' + Text);
                           IF TmpObject.FINDFIRST THEN
                             ;
                           TmpObject.SETRANGE(Name);

                           IF TmpObject.GET(Object.Type::Table, '@*setup*', NoSeriesTableNo) THEN
                             ;

                           IF PAGE.RUNMODAL(PAGE::"OM - Object List", TmpObject) = ACTION::LookupOK THEN BEGIN
                             Text := FORMAT(TmpObject.ID);
                             EXIT(TRUE);
                           END;
                         END;
                          }

    { 20  ;3   ;Field     ;
                CaptionML=[DEU=No. Series Field;
                           ENU=No. Series Field;
                           ESP=No. Series Field;
                           FRA=No. Series Field;
                           NLD=Nr.-serieveld;
                           DEA=No. Series Field];
                BlankZero=Yes;
                SourceExpr=DisplayNoSeriesFieldNo;
                Enabled=NoSeriesEnabled;
                Editable=UseNoSeries;
                OnValidate=VAR
                             Mgt@1000 : Codeunit 11102035;
                           BEGIN
                             Mgt.AfterInputFieldNo(NoSeriesTableNo, DisplayNoSeriesFieldNo);
                             EVALUATE(NoSeriesFieldNo, DisplayNoSeriesFieldNo);

                             FormatNoSeriesFieldNo;
                           END;

                OnLookup=VAR
                           Field@1000 : Record 2000000041;
                           Fields@1001 : Page 11102068;
                           FieldNo2@1002 : Integer;
                         BEGIN
                           Field.FILTERGROUP(2);
                           Field.SETRANGE(TableNo, NoSeriesTableNo);
                           Field.FILTERGROUP(0);

                           Field.SETRANGE(RelationTableNo, DATABASE::"No. Series");

                           Fields.SETTABLEVIEW(Field);
                           Fields.LOOKUPMODE(TRUE);

                           IF Field.FINDFIRST THEN
                             Fields.SETRECORD(Field);

                           IF EVALUATE(FieldNo2, Text) THEN
                             IF Field.GET(NoSeriesTableNo, FieldNo2) THEN
                               Fields.SETRECORD(Field);

                           Field.SETFILTER(FieldName, '@' + Text);
                           IF Field.FINDFIRST THEN
                             Fields.SETRECORD(Field);
                           Field.SETRANGE(FieldName);

                           IF Fields.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             Fields.GETRECORD(Field);
                             Text := Field.FieldName;
                             EXIT(TRUE);
                           END;
                         END;
                          }

    { 21  ;3   ;Field     ;
                CaptionML=[DEU=Field Group Drop Down;
                           ENU=Field Group Drop Down;
                           ESP=Field Group Drop Down;
                           FRA=Field Group Drop Down;
                           NLD=Fieldgroup dropdown;
                           DEA=Field Group Drop Down];
                SourceExpr=AddFieldGroup;
                Enabled=AddFieldGroupEnabled;
                OnValidate=BEGIN
                             SetEnabled;
                           END;
                            }

    { 22  ;1   ;Group     ;
                CaptionML=[DEU=Pages;
                           ENU=Pages;
                           ESP=Pages;
                           FRA=Pages;
                           NLD=Pagina;
                           DEA=Pages] }

    { 23  ;2   ;Group     ;
                GroupType=Group }

    { 24  ;3   ;Field     ;
                CaptionML=[DEU=Create Card Page;
                           ENU=Create Card Page;
                           ESP=Create Card Page;
                           FRA=Create Card Page;
                           NLD=Kaartpagina aanmaken;
                           DEA=Create Card Page];
                SourceExpr=CreateObject[OT::"Card Page"];
                OnValidate=BEGIN
                             SetEnabled;

                             SetCardPageName;
                             SetSubPageName;
                             SetListPageName;
                           END;
                            }

    { 25  ;3   ;Field     ;
                CaptionML=[DEU=Card Page No.;
                           ENU=Card Page No.;
                           ESP=Card Page No.;
                           FRA=Card Page No.;
                           NLD=Kaartpaginanr.;
                           DEA=Card Page No.];
                BlankZero=Yes;
                SourceExpr=DisplayCardPageNo;
                Enabled=CardPageEnabled;
                Editable=CreateCardPage;
                OnValidate=VAR
                             Object@1000 : Record 2000000001;
                           BEGIN
                             OnAfterInputObjectNo(Object.Type::Page, DisplayCardPageNo);
                             EVALUATE(ObjectNo[OT::"Card Page"], DisplayCardPageNo);
                             FormatCardPageNo;
                           END;

                OnLookup=BEGIN
                           EXIT(LookupObjectNo(OT::"Card Page", Text));
                         END;
                          }

    { 26  ;3   ;Field     ;
                CaptionML=[DEU=Card Page Name;
                           ENU=Card Page Name;
                           ESP=Card Page Name;
                           FRA=Card Page Name;
                           NLD=Kaartpaginanaam;
                           DEA=Card Page Name];
                SourceExpr=ObjectName[OT::"Card Page"];
                Enabled=CardPageEnabled;
                Editable=CreateCardPage }

    { 27  ;3   ;Field     ;
                CaptionML=[DEU=Create List Part (Sub);
                           ENU=Create List Part (Sub);
                           ESP=Create List Part (Sub);
                           FRA=Create List Part (Sub);
                           NLD=Subpagina aanmaken;
                           DEA=Create List Part (Sub)];
                SourceExpr=CreateObject[OT::"Sub Page"];
                Enabled=SubPageEnabled;
                Editable=CreateCardPage;
                OnValidate=BEGIN
                             SetEnabled;

                             SetSubPageName;
                           END;
                            }

    { 28  ;3   ;Field     ;
                CaptionML=[DEU=List Part No.;
                           ENU=List Part No.;
                           ESP=List Part No.;
                           FRA=List Part No.;
                           NLD=Subpaginanr.;
                           DEA=List Part No.];
                BlankZero=Yes;
                SourceExpr=DisplaySubPageNo;
                Enabled=SubPageEnabled;
                Editable=CreateSubPage;
                OnValidate=VAR
                             Object@1000 : Record 2000000001;
                           BEGIN
                             OnAfterInputObjectNo(Object.Type::Page, DisplaySubPageNo);
                             EVALUATE(ObjectNo[OT::"Sub Page"], DisplaySubPageNo);
                             FormatSubPageNo;
                           END;

                OnLookup=BEGIN
                           EXIT(LookupObjectNo(OT::"Sub Page", Text));
                         END;
                          }

    { 29  ;3   ;Field     ;
                CaptionML=[DEU=List Part Name;
                           ENU=List Part Name;
                           ESP=List Part Name;
                           FRA=List Part Name;
                           NLD=Subpaginanaam;
                           DEA=List Part Name];
                SourceExpr=ObjectName[OT::"Sub Page"];
                Enabled=SubPageEnabled;
                Editable=CreateSubPage }

    { 30  ;3   ;Field     ;
                CaptionML=[DEU=Create List Page;
                           ENU=Create List Page;
                           ESP=Create List Page;
                           FRA=Create List Page;
                           NLD=Lijstpagina aanmaken;
                           DEA=Create List Page];
                SourceExpr=CreateObject[OT::"List Page"];
                Enabled=ListPageEnabled;
                OnValidate=BEGIN
                             SetEnabled;

                             SetListPageName;
                           END;
                            }

    { 31  ;3   ;Field     ;
                CaptionML=[DEU=List Page No.;
                           ENU=List Page No.;
                           ESP=List Page No.;
                           FRA=List Page No.;
                           NLD=Lijstpaginanr.;
                           DEA=List Page No.];
                BlankZero=Yes;
                SourceExpr=DisplayListPageNo;
                Enabled=ListPageEnabled;
                Editable=CreateListPage;
                OnValidate=VAR
                             Object@1000 : Record 2000000001;
                           BEGIN
                             OnAfterInputObjectNo(Object.Type::Page, DisplayListPageNo);
                             EVALUATE(ObjectNo[OT::"List Page"], DisplayListPageNo);
                             FormatListPageNo;
                           END;

                OnLookup=BEGIN
                           EXIT(LookupObjectNo(OT::"List Page", Text));
                         END;
                          }

    { 32  ;3   ;Field     ;
                CaptionML=[DEU=List Page Name;
                           ENU=List Page Name;
                           ESP=List Page Name;
                           FRA=List Page Name;
                           NLD=Lijstpaginanaam;
                           DEA=List Page Name];
                SourceExpr=ObjectName[OT::"List Page"];
                Enabled=ListPageEnabled;
                Editable=CreateListPage }

    { 33  ;1   ;Field     ;
                SourceExpr=Initialized;
                Visible=FALSE }

    { 34  ;1   ;Field     ;
                SourceExpr=ObjectNo[OT::Table];
                Visible=FALSE }

    { 35  ;1   ;Field     ;
                SourceExpr=ObjectNo[OT::"Sub Table"];
                Visible=FALSE }

    { 36  ;1   ;Field     ;
                SourceExpr=ObjectNo[OT::"Card Page"];
                Visible=FALSE }

    { 37  ;1   ;Field     ;
                SourceExpr=ObjectNo[OT::"Sub Page"];
                Visible=FALSE }

    { 38  ;1   ;Field     ;
                SourceExpr=ObjectNo[OT::"List Page"];
                Visible=FALSE }

    { 39  ;1   ;Field     ;
                SourceExpr=NoSeriesTableNo;
                Visible=FALSE }

    { 40  ;1   ;Field     ;
                SourceExpr=NoSeriesFieldNo;
                Visible=FALSE }

  }
  CODE
  {
    VAR
      TmpTranslationToolLine@1000 : TEMPORARY Record 11102068;
      DisplayCardPageNo@1001 : Text INDATASET;
      DisplayListPageNo@1002 : Text INDATASET;
      DisplayNoSeriesFieldNo@1003 : Text INDATASET;
      DisplayNoSeriesTableNo@1004 : Text INDATASET;
      DisplaySubPageNo@1005 : Text INDATASET;
      DisplaySubTableNo@1006 : Text INDATASET;
      DisplayTableNo@1007 : Text INDATASET;
      ObjectDescription@1008 : ARRAY [8] OF Text[30];
      ObjectName@1009 : ARRAY [8] OF Text[30];
      NoSeriesFieldNo@1010 : Integer;
      NoSeriesTableNo@1011 : Integer;
      ObjectNo@1012 : ARRAY [8] OF Integer;
      FT@1013 : ' ,Primary 1,Name 1,Search,No. Series,Primary 2,Line No.,Name 2';
      NameField@1014 : 'None,Descr,Name';
      Notes@1015 : 'No,Visible,Not Visible';
      ObjectType2@1016 : ARRAY [8] OF ',Table,,,,,,,Page';
      OT@1017 : ' ,Table,Sub Table,,,,Card Page,Sub Page,List Page';
      PrimaryKeyField@1018 : 'Code,No.,Primary Key,Entry No.';
      RecordLinks@1019 : 'No,Visible,Not Visible';
      TableType@1020 : 'Master Data,Document,Setup,Ledger Entry';
      AddFieldGroup@1021 : Boolean;
      AddFieldGroupEnabled@1022 : Boolean INDATASET;
      CardPageEnabled@1023 : Boolean INDATASET;
      CreateCardPage@1024 : Boolean INDATASET;
      CreateListPage@1025 : Boolean INDATASET;
      CreateObject@1026 : ARRAY [8] OF Boolean;
      CreateSubPage@1027 : Boolean INDATASET;
      CreateSubTable@1028 : Boolean INDATASET;
      CreateTable@1029 : Boolean INDATASET;
      CrSearchNameFld@1030 : Boolean;
      Initialized@1031 : Boolean;
      ListPageEnabled@1032 : Boolean INDATASET;
      NameFieldEnabled@1033 : Boolean INDATASET;
      NoSeriesEnabled@1034 : Boolean INDATASET;
      ObjectEnabled@1035 : ARRAY [8] OF Boolean;
      SearchNameFieldEnabled@1036 : Boolean INDATASET;
      SubPageEnabled@1037 : Boolean INDATASET;
      SubTableEnabled@1038 : Boolean INDATASET;
      TableEnabled@1039 : Boolean INDATASET;
      UseNoSeries@1040 : Boolean INDATASET;

    LOCAL PROCEDURE CreateObjects@1();
    VAR
      TmpObject@1000 : TEMPORARY Record 2000000001;
      TmpField@1001 : TEMPORARY Record 2000000041;
      CreateTableWizard@1002 : Codeunit 11102081;
      i@1003 : Integer;
      CreateObject2@1004 : ARRAY [8] OF Boolean;
    BEGIN
      FOR i := 1 TO ARRAYLEN(CreateObject) DO
        CreateObject2[i] := CreateAndEnabled(i);

      CreateTableWizard.GetObjects(TmpObject, CreateObject2, ObjectType2, ObjectNo, ObjectName);
      CreateTableWizard.GetFields(
        TmpObject, TmpField, PrimaryKeyField, NameField, CrSearchNameFld,
        UseNoSeries, NoSeriesTableNo, NoSeriesFieldNo, TmpTranslationToolLine);

      CreateTableWizard.CreateObjects(TmpObject, TmpField, TmpTranslationToolLine, TableType, AddFieldGroup, RecordLinks, Notes);
    END;

    LOCAL PROCEDURE CompileObjects@2();
    VAR
      Object@1000 : Record 2000000001;
      ObjectMgt@1001 : Codeunit 11102046;
      i@1002 : Integer;
    BEGIN
      FOR i := 1 TO ARRAYLEN(ObjectType2) DO
        IF CreateObject[i] AND ObjectEnabled[i] THEN BEGIN
          Object.GET(ObjectType2[i], '', ObjectNo[i]);
          ObjectMgt.CompileObject(Object);
        END;
    END;

    LOCAL PROCEDURE SetEnabled@3();
    VAR
      i@1000 : Integer;
      DescriptionField@1001 : Boolean;
    BEGIN
      DescriptionField := PrimaryKeyField IN [PrimaryKeyField::Code, PrimaryKeyField::"No."];

      NameFieldEnabled := DescriptionField;

      SearchNameFieldEnabled := (NameField <> NameField::None) AND DescriptionField;

      NoSeriesEnabled := PrimaryKeyField = PrimaryKeyField::"No.";
      AddFieldGroupEnabled := (NameField <> NameField::None) AND DescriptionField;

      ObjectEnabled[OT::"Sub Table"] := TableType IN [TableType::"Master Data", TableType::Document];

      FOR i := 1 TO ARRAYLEN(ObjectEnabled) DO BEGIN
        SetEnabledControl(i, ObjectEnabled[i]);
        SetCreateControl(i, CreateObject[i]);
      END;
    END;

    LOCAL PROCEDURE SetCardPageName@4();
    BEGIN
      IF TableType = TableType::Setup THEN
        SetName(OT::"Card Page", '', '')
      ELSE
        SetName(OT::"Card Page", '', ' Card');
      ResetObjectCaptions(OT::"Card Page");
    END;

    LOCAL PROCEDURE SetSubPageName@5();
    BEGIN
      SetName(OT::"Sub Page", '', ' Subform');
      ResetObjectCaptions(OT::"Sub Page");
    END;

    LOCAL PROCEDURE SetListPageName@6();
    BEGIN
      IF TableType = TableType::"Ledger Entry" THEN
        SetName(OT::"List Page", 'Entry', ' Entries')
      ELSE
        IF CreateAndEnabled(OT::"Card Page") THEN
          SetName(OT::"List Page", '', ' List')
        ELSE
          SetName(OT::"List Page", '', 's');
      ResetObjectCaptions(OT::"List Page");
    END;

    LOCAL PROCEDURE FreeObjectNo@7(No@1000 : Integer) : Integer;
    VAR
      Object@1001 : Record 2000000001;
      PermissionRange@1002 : Record 2000000044;
      i@1003 : Integer;
    BEGIN
      PermissionRange.SETRANGE("Object Type", ObjectType2[No]);
      PermissionRange.SETRANGE("Insert Permission", PermissionRange."Insert Permission"::Yes);
      IF PermissionRange.FINDSET THEN
        REPEAT
          FOR i := PermissionRange.From TO PermissionRange."To" DO BEGIN
            Object.SETRANGE(Type, ObjectType2[No]);
            Object.SETRANGE("Company Name", '');
            Object.SETRANGE(ID, i);
            IF Object.ISEMPTY THEN
              IF NOT ObjectNoAlreadyInUse(No, i) THEN
                EXIT(i);
          END;
        UNTIL PermissionRange.NEXT = 0;
    END;

    LOCAL PROCEDURE ObjectNoAlreadyInUse@8(No@1000 : Integer;ObjectNo2@1001 : Integer) : Boolean;
    VAR
      i@1002 : Integer;
    BEGIN
      FOR i := 1 TO ARRAYLEN(ObjectNo) DO
        IF i <> No THEN
          IF ObjectType2[i] = ObjectType2[No] THEN
            IF ObjectNo[i] = ObjectNo2 THEN
              EXIT(TRUE);
    END;

    LOCAL PROCEDURE LookupObjectNo@9(No@1000 : Integer;VAR Text@1001 : Text[1024]) : Boolean;
    VAR
      Object@1002 : Record 2000000001;
      CheckLicense@1003 : Page 11102082;
      ObjectNo2@1004 : Integer;
    BEGIN
      IF ObjectNo[No] = 0 THEN
        ObjectNo2 := FreeObjectNo(No)
      ELSE
        ObjectNo2 := ObjectNo[No];

      CheckLicense.SetFormPosition(ObjectType2[No], ObjectNo2);
      CheckLicense.LOOKUPMODE(TRUE);
      IF CheckLicense.RUNMODAL = ACTION::LookupOK THEN BEGIN
        CheckLicense.GetFormPosition(Object.Type, Object.ID);
        IF Object.Type = ObjectType2[No] THEN BEGIN
          Text := FORMAT(Object.ID);
          EXIT(TRUE);
        END;
      END;
    END;

    LOCAL PROCEDURE AllInputValid@10() : Boolean;
    VAR
      i@1000 : Integer;
      j@1001 : Integer;
      ctEnterADifferentName@1002 : TextConst 'DEU=Please enter a different %1 Name.;ENU=Please enter a different %1 Name.;ESP=Please enter a different %1 Name.;FRA=Please enter a different %1 Name.;NLD=Geen een andere %1naam. op.;DEA=Please enter a different %1 Name.';
      ctEnterADifferentNo@1003 : TextConst 'DEU=Please enter a different %1 No.;ENU=Please enter a different %1 No.;ESP=Please enter a different %1 No.;FRA=Please enter a different %1 No.;NLD=Geen een ander %1nr. op.;DEA=Please enter a different %1 No.';
      ctEnterAField@1004 : TextConst 'DEU=Please enter a %1.;ENU=Please enter a %1.;ESP=Please enter a %1.;FRA=Please enter a %1.;NLD=Voer een %1 in.;DEA=Please enter a %1.';
      ctEnterAFieldName@1005 : TextConst 'DEU=Please enter a %1 Name.;ENU=Please enter a %1 Name.;ESP=Please enter a %1 Name.;FRA=Please enter a %1 Name.;NLD=Geen een %1naam op.;DEA=Please enter a %1 Name.';
      ctEnterAFieldNo@1006 : TextConst 'DEU=Please enter a %1 No.;ENU=Please enter a %1 No.;ESP=Please enter a %1 No.;FRA=Please enter a %1 No.;NLD=Geen een %1nr. op.;DEA=Please enter a %1 No.';
      ctNameInUse@1007 : TextConst 'DEU=Object name %1 is already in use.;ENU=Object name %1 is already in use.;ESP=Object name %1 is already in use.;FRA=Object name %1 is already in use.;NLD=Objectnaam %1 is reeds is gebruik.;DEA=Object name %1 is already in use.';
      ctNoSeriesFieldNo@1008 : TextConst 'DEU=No. Series Field;ENU=No. Series Field;ESP=No. Series Field;FRA=No. Series Field;NLD=Nr.-serieveld;DEA=No. Series Field';
      ctNoSeriesTableNo@1009 : TextConst 'DEU=No. Series Table;ENU=No. Series Table;ESP=No. Series Table;FRA=No. Series Table;NLD=Nr.-serietabel;DEA=No. Series Table';
    BEGIN
      FOR i := 1 TO ARRAYLEN(ObjectNo) DO
        IF CreateAndEnabled(i) THEN BEGIN

          IF ObjectNo[i] = 0 THEN BEGIN
            MESSAGE(ctEnterAFieldNo, ObjectDescription[i]);
            EXIT;
          END;

          IF ObjectName[i] = '' THEN BEGIN
            MESSAGE(ctEnterAFieldName, ObjectDescription[i]);
            EXIT;
          END;

          IF ObjectNameInUse(i) THEN BEGIN
            MESSAGE(ctNameInUse, ObjectName[i]);
            EXIT;
          END;
        END;

      FOR i := 1 TO ARRAYLEN(ObjectNo) DO
        FOR j := i + 1 TO ARRAYLEN(ObjectNo) DO
          IF ObjectType2[i] = ObjectType2[j] THEN
            IF CreateAndEnabled(i) AND CreateAndEnabled(j) THEN BEGIN
              IF ObjectNo[i] = ObjectNo[j] THEN BEGIN
                MESSAGE(ctEnterADifferentNo, ObjectDescription[j]);
                EXIT;
              END;
              IF ObjectName[i] = ObjectName[j] THEN BEGIN
                MESSAGE(ctEnterADifferentName, ObjectDescription[j]);
                EXIT;
              END;
            END;

      IF UseNoSeries THEN BEGIN
        IF NoSeriesTableNo = 0 THEN BEGIN
          MESSAGE(ctEnterAField, ctNoSeriesTableNo);
          EXIT;
        END;
        IF NoSeriesFieldNo = 0 THEN BEGIN
          MESSAGE(ctEnterAField, ctNoSeriesFieldNo);
          EXIT;
        END;
      END;

      EXIT(TRUE);
    END;

    LOCAL PROCEDURE ObjectNameInUse@11(No@1000 : Integer) : Boolean;
    VAR
      Object@1001 : Record 2000000001;
    BEGIN
      Object.SETRANGE(Type, ObjectType2[No]);
      Object.SETRANGE("Company Name", '');
      Object.SETFILTER(ID, '<>%1', ObjectNo[No]);
      Object.SETFILTER(Name, '@' + ObjectName[No]);
      EXIT(NOT Object.ISEMPTY);
    END;

    LOCAL PROCEDURE OnAfterInputObjectNo@12(ObjectType2@1000 : Option;VAR Text@1001 : Text[1024]);
    VAR
      Object@1002 : Record 2000000001;
      ObjectNo2@1003 : Integer;
    BEGIN
      IF NOT EVALUATE(ObjectNo2, Text) THEN
        IF Text <> '' THEN BEGIN
          Object.SETRANGE(Type, ObjectType2);
          Object.SETRANGE("Company Name", '');
          Object.SETFILTER(Name, '@' + Text);

          IF Object.FINDFIRST THEN
            Text := FORMAT(Object.ID)
          ELSE BEGIN
            Object.SETFILTER(Name, '@' + Text + '*');
            IF Object.FINDFIRST THEN
              Text := FORMAT(Object.ID);
          END;
        END;

      IF Text = '' THEN
        Text := '0';
    END;

    LOCAL PROCEDURE OnFormatObjectNo@13(ObjectType2@1000 : Option;VAR Text@1001 : Text[1024]);
    VAR
      Object@1002 : Record 2000000001;
      ObjectNo2@1003 : Integer;
    BEGIN
      IF EVALUATE(ObjectNo2, Text) THEN
        IF Object.GET(ObjectType2, '', ObjectNo2) THEN
          IF Object.Name <> '' THEN
            Text := Object.Name;

      IF Text = '0' THEN
        Text := '';
    END;

    LOCAL PROCEDURE ObjectOrObjects@14(NoOfObjects@1000 : Integer) : Text[30];
    VAR
      ctObject@1001 : TextConst 'DEU=object;ENU=object;ESP=object;FRA=object;NLD=object;DEA=object';
      ctObjects@1002 : TextConst 'DEU=objects;ENU=objects;ESP=objects;FRA=objects;NLD=objecten;DEA=objects';
    BEGIN
      IF NoOfObjects = 1 THEN
        EXIT(ctObject)
      ELSE
        EXIT(ctObjects);
    END;

    LOCAL PROCEDURE SearchNameCaption@15() : Text[1024];
    VAR
      ctSearchDescription@1000 : TextConst 'DEU=Search Description Field;ENU=Search Description Field;ESP=Search Description Field;FRA=Search Description Field;NLD=Zoeknaamveld;DEA=Search Description Field';
      ctSearchName@1001 : TextConst 'DEU=Search Name Field;ENU=Search Name Field;ESP=Search Name Field;FRA=Search Name Field;NLD=Zoeknaamveld;DEA=Search Name Field';
    BEGIN
      CASE NameField OF

        NameField::None :
          EXIT('1,5,,' + ctSearchName);

        NameField::Descr :
          EXIT('1,5,,' + ctSearchDescription);

        ELSE
          EXIT('1,5,,' + ctSearchName);
      END;
    END;

    LOCAL PROCEDURE ValidateTableType@16();
    VAR
      Object@1000 : Record 2000000001;
      Mgt@1001 : Codeunit 11102035;
    BEGIN
      ObjectName[OT::Table] := Mgt.Replace(ObjectName[OT::Table], '...', '');
      ObjectName[OT::Table] := Mgt.Replace(ObjectName[OT::Table], 'Setup', '');
      ObjectName[OT::Table] := Mgt.Replace(ObjectName[OT::Table], 'Ledger', '');
      ObjectName[OT::Table] := Mgt.Replace(ObjectName[OT::Table], 'Entry', '');
      ObjectName[OT::Table] := DELCHR(ObjectName[OT::Table], '<>');

      CASE TableType OF
        TableType::"Master Data" :
          BEGIN
            PrimaryKeyField := PrimaryKeyField::Code;
            NameField := NameField::Descr;
            UseNoSeries := FALSE;
            CreateObject[OT::"Sub Table"] := FALSE;
            CreateObject[OT::"Card Page"] := TRUE;
            CreateObject[OT::"Sub Page"] := FALSE;
            CreateObject[OT::"List Page"] := TRUE;
          END;

        TableType::Document :
          BEGIN
            PrimaryKeyField := PrimaryKeyField::"No.";
            NameField := NameField::None;
            UseNoSeries := TRUE;
            CreateObject[OT::"Sub Table"] := TRUE;
            CreateObject[OT::"Card Page"] := TRUE;
            CreateObject[OT::"Sub Page"] := TRUE;
            CreateObject[OT::"List Page"] := TRUE;
          END;

        TableType::Setup :
          BEGIN
            PrimaryKeyField := PrimaryKeyField::"Primary Key";
            IF ObjectName[OT::Table] = '' THEN
              ObjectName[OT::Table] := '... Setup'
            ELSE
              ObjectName[OT::Table] := ObjectName[OT::Table] + ' Setup';

            NameField := NameField::None;
            UseNoSeries := FALSE;
            CreateObject[OT::"Sub Table"] := FALSE;
            CreateObject[OT::"Card Page"] := TRUE;
            CreateObject[OT::"Sub Page"] := FALSE;
            CreateObject[OT::"List Page"] := FALSE;
          END;

        TableType::"Ledger Entry" :
          BEGIN
            PrimaryKeyField := PrimaryKeyField::"Entry No.";
            IF ObjectName[OT::Table] = '' THEN
              ObjectName[OT::Table] := '... Ledger Entry'
            ELSE
              ObjectName[OT::Table] := ObjectName[OT::Table] + ' Ledger Entry';
            NameField := NameField::None;
            UseNoSeries := FALSE;
            CreateObject[OT::"Sub Table"] := FALSE;
            CreateObject[OT::"Card Page"] := FALSE;
            CreateObject[OT::"Sub Page"] := FALSE;
            CreateObject[OT::"List Page"] := TRUE;
          END;

      END;

      IF Object.GET(Object.Type::Table, ' List', ObjectNo[OT::Table]) THEN
        ObjectName[OT::Table] := Object.Name;

      ValidateTableName;
    END;

    LOCAL PROCEDURE ValidateTableName@17();
    BEGIN
      SetListPageName;
      SetSubPageName;
      SetCardPageName;

      ResetObjectCaptions(OT::Table);
    END;

    LOCAL PROCEDURE CreateAndEnabled@18(No@1000 : Integer) : Boolean;
    BEGIN
      EXIT(CreateObject[No] AND ObjectEnabled[No]);
    END;

    LOCAL PROCEDURE SetName@19(No@1000 : Integer;Remove@1001 : Text[30];Suffix@1002 : Text[30]);
    VAR
      Mgt@1003 : Codeunit 11102035;
    BEGIN
      IF CreateAndEnabled(No) AND (ObjectName[OT::Table] <> '') THEN BEGIN
        ObjectName[No] := DELCHR(Mgt.Replace(ObjectName[OT::Table], Remove, ''), '<>');
        ObjectName[No] := ObjectName[No] + Suffix;
      END ELSE
        ObjectName[No] := '';
    END;

    LOCAL PROCEDURE SetEnabledControl@20(No@1000 : Integer;NewEnabled@1001 : Boolean);
    BEGIN
      CASE No OF
        OT::Table : TableEnabled := NewEnabled;
        OT::"Sub Table" : SubTableEnabled := NewEnabled;
        OT::"Card Page" : CardPageEnabled := NewEnabled;
        OT::"Sub Page" : SubPageEnabled := NewEnabled;
        OT::"List Page" : ListPageEnabled := NewEnabled;
      END;
    END;

    LOCAL PROCEDURE SetCreateControl@21(No@1000 : Integer;NewEnabled@1001 : Boolean);
    BEGIN
      CASE No OF
        OT::Table : CreateTable := NewEnabled;
        OT::"Sub Table" : CreateSubTable := NewEnabled;
        OT::"Card Page" : CreateCardPage := NewEnabled;
        OT::"Sub Page" : CreateSubPage := NewEnabled;
        OT::"List Page" : CreateListPage := NewEnabled;
      END;
    END;

    LOCAL PROCEDURE Translations@22();
    VAR
      TmpTranslationToolLine2@1000 : TEMPORARY Record 11102068;
      TmpObject@1001 : TEMPORARY Record 2000000001;
      TmpField@1002 : TEMPORARY Record 2000000041;
      CreateTableWizard@1003 : Codeunit 11102081;
      i@1004 : Integer;
      CreateObject2@1005 : ARRAY [8] OF Boolean;
    BEGIN
      FOR i := 1 TO ARRAYLEN(CreateObject) DO
        CreateObject2[i] := CreateAndEnabled(i);

      CreateTableWizard.GetObjects(TmpObject, CreateObject2, ObjectType2, ObjectNo, ObjectName);
      CreateTableWizard.GetFields(
        TmpObject, TmpField, PrimaryKeyField, NameField, CrSearchNameFld,
        UseNoSeries, NoSeriesTableNo, NoSeriesFieldNo, TmpTranslationToolLine2);

      CreateTableWizard.Translations(TmpObject, TmpField, TmpTranslationToolLine);

      IF TmpTranslationToolLine.FINDSET THEN
        REPEAT
          IF TmpTranslationToolLine."Name Changed" AND (TmpTranslationToolLine."Caption Entry No." < 100) THEN
            ObjectName[TmpTranslationToolLine."Caption Entry No."] := TmpTranslationToolLine.Name;
        UNTIL TmpTranslationToolLine.NEXT = 0;
    END;

    LOCAL PROCEDURE ResetObjectCaptions@23(ObjectType2@1000 : Integer);
    BEGIN
      TmpTranslationToolLine.SETRANGE("Caption Entry No.", ObjectType2);
      TmpTranslationToolLine.DELETEALL;
      TmpTranslationToolLine.RESET;
    END;

    LOCAL PROCEDURE ResetFieldCaptions@24(FieldType@1000 : Integer);
    BEGIN
      TmpTranslationToolLine.SETRANGE("Caption Entry No.", 100 + FieldType);
      TmpTranslationToolLine.DELETEALL;
      TmpTranslationToolLine.RESET;
    END;

    LOCAL PROCEDURE FormatTableNo@25();
    VAR
      Object@1000 : Record 2000000001;
    BEGIN
      DisplayTableNo := FORMAT(ObjectNo[OT::Table]);
      OnFormatObjectNo(Object.Type::Table, DisplayTableNo);
    END;

    LOCAL PROCEDURE FormatSubTableNo@26();
    VAR
      Object@1000 : Record 2000000001;
    BEGIN
      DisplaySubTableNo := FORMAT(ObjectNo[OT::"Sub Table"]);
      OnFormatObjectNo(Object.Type::Table, DisplaySubTableNo);
    END;

    LOCAL PROCEDURE FormatNoSeriesTableNo@27();
    VAR
      Object@1000 : Record 2000000001;
    BEGIN
      DisplayNoSeriesTableNo := FORMAT(NoSeriesTableNo);
      OnFormatObjectNo(Object.Type::Table, DisplayNoSeriesTableNo);
    END;

    LOCAL PROCEDURE FormatNoSeriesFieldNo@28();
    VAR
      Field@1000 : Record 2000000041;
    BEGIN
      DisplayNoSeriesFieldNo := '';
      IF Field.GET(NoSeriesTableNo, NoSeriesFieldNo) THEN
        DisplayNoSeriesFieldNo := Field.FieldName;
    END;

    LOCAL PROCEDURE FormatCardPageNo@29();
    VAR
      Object@1000 : Record 2000000001;
    BEGIN
      DisplayCardPageNo := FORMAT(ObjectNo[OT::"Card Page"]);
      OnFormatObjectNo(Object.Type::Page, DisplayCardPageNo);
    END;

    LOCAL PROCEDURE FormatSubPageNo@30();
    VAR
      Object@1000 : Record 2000000001;
    BEGIN
      DisplaySubPageNo := FORMAT(ObjectNo[OT::"Sub Page"]);
      OnFormatObjectNo(Object.Type::Page, DisplaySubPageNo);
    END;

    LOCAL PROCEDURE FormatListPageNo@31();
    VAR
      Object@1000 : Record 2000000001;
    BEGIN
      DisplayListPageNo := FORMAT(ObjectNo[OT::"List Page"]);
      OnFormatObjectNo(Object.Type::Page, DisplayListPageNo);
    END;

    BEGIN
    END.
  }
}

