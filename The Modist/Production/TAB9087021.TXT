OBJECT Table 9087021 Buying Sheet Summary Line
{
  OBJECT-PROPERTIES
  {
    Date=05/01/17;
    Time=11:47:07 AM;
    Modified=Yes;
    Version List=NS2016.16;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               Rec.TESTFIELD("Buying Sheet No.");
               CheckStatusOpen();
               UpdateFromBuyingSheetHeader();
             END;

    OnDelete=BEGIN
               CheckStatusOpen();

               BuyingSheetLine.RESET();
               BuyingSheetLine.SETCURRENTKEY("Buying Sheet No.", "Buying Sheet Summary Line No.");
               BuyingSheetLine.SETRANGE("Buying Sheet No.", Rec."Buying Sheet No.");
               BuyingSheetLine.SETRANGE("Buying Sheet Summary Line No.", Rec."Line No.");
               BuyingSheetLine.DELETEALL(TRUE);
             END;

    CaptionML=[ENU=Buying Sheet Summary Line;
               ENG=Buying Sheet Summary Line];
    LookupPageID=Page9087057;
    DrillDownPageID=Page9087057;
  }
  FIELDS
  {
    { 1   ;   ;Buying Sheet No.    ;Code10        ;TableRelation="Buying Sheet Header";
                                                   CaptionML=[ENU=Buying Sheet No.;
                                                              ENG=Buying Sheet No.] }
    { 2   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              ENG=Line No.] }
    { 10  ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   OnValidate=BEGIN
                                                                CheckStatusOpen();
                                                                IF (Rec."Item No." <> xRec."Item No.") THEN
                                                                BEGIN
                                                                  IF (Rec."Item No." <> '') THEN
                                                                  BEGIN
                                                                    Item.GET(Rec."Item No.");
                                                                    Rec.VALIDATE(Description, Item.Description);
                                                                    Rec.VALIDATE("Description 2", Item."Description 2");
                                                                    Rec.VALIDATE("Style No.", Item."Style No.");
                                                                    Rec.VALIDATE("Unit Price (LCY)", Item."Unit Price");
                                                                    Rec.VALIDATE("Brand Code", Item."Brand Code");
                                                                    Rec.VALIDATE("Season Code", Item."Season Code");
                                                                    Rec.VALIDATE("Division Code", Item."Division Code");
                                                                    Rec.VALIDATE("Department Code", Item."Department Code");
                                                                    Rec.VALIDATE("Group Code", Item."Group Code");
                                                                    Rec.VALIDATE("Category Code", Item."Category Code");
                                                                    Rec.VALIDATE("Sub-Category Code", Item."Sub-Category Code");
                                                                    Rec.VALIDATE("Colour Code", Item."Colour Code");
                                                                    Rec.VALIDATE("Vendor Colour Code", Item."Vendor Colour Code");
                                                                    IF (Rec."Vendor No." = '') THEN
                                                                      Rec.VALIDATE("Vendor No.", Item."Vendor No.");
                                                                    IF (Rec."Vendor No." = Item."Vendor No.") THEN
                                                                      Rec.VALIDATE("Vendor Item No.", Item."Vendor Item No.")
                                                                    ELSE
                                                                      Rec.VALIDATE("Vendor Item No.", '');
                                                                    Rec.VALIDATE("Size Group Code", Item."Size Group Code");

                                                                    UpdateDirectCost();
                                                                  END;
                                                                END;

                                                                nSembleSetup.VerifyAndGet();
                                                                IF (nSembleSetup."Pre-Create Buying Sheet Sizes") THEN
                                                                  BuyingSheetSummaryLineMgt.UpdateBuyingSheetLines(Rec, (Rec."Item No." <> xRec."Item No."));
                                                              END;

                                                   CaptionML=[ENU=Item No.;
                                                              ENG=Item No.] }
    { 20  ;   ;Description         ;Text50        ;OnValidate=BEGIN
                                                                IF (Rec.Description <> xRec.Description) THEN
                                                                  UpdateBuyingSheetLines(Rec.FIELDNO(Description));
                                                              END;

                                                   CaptionML=[ENU=Description;
                                                              ENG=Description] }
    { 21  ;   ;Description 2       ;Text50        ;OnValidate=BEGIN
                                                                IF (Rec."Description 2" <> xRec."Description 2") THEN
                                                                  UpdateBuyingSheetLines(Rec.FIELDNO("Description 2"));
                                                              END;

                                                   CaptionML=[ENU=Description 2;
                                                              ENG=Description 2] }
    { 30  ;   ;Quantity            ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Buying Sheet Line".Quantity WHERE (Buying Sheet No.=FIELD(Buying Sheet No.),
                                                                                                       Buying Sheet Summary Line No.=FIELD(Line No.)));
                                                   OnValidate=VAR
                                                                eCantBeLower@1000000000 : TextConst 'ENU=can''t be lower than "%1";ENG=can''t be lower than "%1"';
                                                              BEGIN
                                                              END;

                                                   CaptionML=[ENU=Quantity;
                                                              ENG=Quantity];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 31  ;   ;Qty. per Unit of Measure;Decimal   ;InitValue=1;
                                                   CaptionML=[ENU=Qty. per Unit of Measure;
                                                              ENG=Qty. per Unit of Measure];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 32  ;   ;Quantity (Base)     ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Buying Sheet Line"."Quantity (Base)" WHERE (Buying Sheet No.=FIELD(Buying Sheet No.),
                                                                                                                Buying Sheet Summary Line No.=FIELD(Line No.)));
                                                   CaptionML=[ENU=Quantity (Base);
                                                              ENG=Quantity (Base)];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 40  ;   ;Currency Code       ;Code20        ;TableRelation=Currency;
                                                   OnValidate=VAR
                                                                lCurrencyExchangeRate@1000000000 : Record 330;
                                                              BEGIN
                                                                IF (Rec."Currency Code" <> xRec."Currency Code") THEN
                                                                BEGIN
                                                                  CheckStatusOpen();
                                                                  IF (Rec."Currency Code" <> '') THEN
                                                                    Rec.VALIDATE("Currency Factor", lCurrencyExchangeRate.ExchangeRate(WORKDATE(), Rec."Currency Code"))
                                                                  ELSE
                                                                    Rec.VALIDATE("Currency Factor", 0);
                                                                  UpdateBuyingSheetLines(Rec.FIELDNO("Currency Code"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Currency Code;
                                                              ENG=Currency Code] }
    { 41  ;   ;Currency Factor     ;Decimal       ;InitValue=1;
                                                   OnValidate=BEGIN
                                                                IF (Rec."Currency Factor" <> xRec."Currency Factor") THEN
                                                                BEGIN
                                                                  CheckStatusOpen();
                                                                  IF ( NOT (DirectUnitCostLcyValidation)) THEN
                                                                    Rec.VALIDATE("Direct Unit Cost (LCY)", TnpToolkit.FCYToLCY(Rec."Direct Unit Cost", Rec."Currency Code", Rec."Currency Factor"));
                                                                  UpdateBuyingSheetLines(Rec.FIELDNO("Currency Factor"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Currency Factor;
                                                              ENG=Currency Factor];
                                                   Editable=No }
    { 50  ;   ;Direct Unit Cost    ;Decimal       ;OnValidate=BEGIN
                                                                IF (Rec."Direct Unit Cost" <> xRec."Direct Unit Cost") THEN
                                                                BEGIN
                                                                  CheckStatusOpen();
                                                                  DirectUnitCostValidation := TRUE;
                                                                  IF ( NOT (DirectUnitCostLcyValidation)) THEN
                                                                    Rec.VALIDATE("Direct Unit Cost (LCY)", TnpToolkit.FCYToLCY(Rec."Direct Unit Cost", Rec."Currency Code", Rec."Currency Factor"));
                                                                  Rec.VALIDATE("Landed Cost (LCY)", Rec."Direct Unit Cost (LCY)" + Rec."Overhead Unit Cost (LCY)");
                                                                  UpdateBuyingSheetLines(Rec.FIELDNO("Direct Unit Cost"));
                                                                  DirectUnitCostValidation := FALSE;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Direct Unit Cost;
                                                              ENG=Direct Unit Cost] }
    { 51  ;   ;Direct Unit Cost (LCY);Decimal     ;OnValidate=BEGIN
                                                                IF (Rec."Direct Unit Cost (LCY)" <> xRec."Direct Unit Cost (LCY)") THEN
                                                                BEGIN
                                                                  CheckStatusOpen();
                                                                  DirectUnitCostLcyValidation := TRUE;
                                                                  IF ( NOT (DirectUnitCostValidation)) THEN
                                                                    Rec.VALIDATE("Direct Unit Cost", TnpToolkit.LCYToFCY(Rec."Direct Unit Cost (LCY)", Rec."Currency Code", Rec."Currency Factor"));
                                                                  UpdateLandedCost();
                                                                  UpdateUnitPrice();
                                                                  UpdateBuyingSheetLines(Rec.FIELDNO("Direct Unit Cost (LCY)"));
                                                                  DirectUnitCostLcyValidation := FALSE;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Direct Unit Cost (LCY);
                                                              ENG=Direct Unit Cost (LCY)];
                                                   Editable=No }
    { 54  ;   ;Landed Cost (LCY)   ;Decimal       ;OnValidate=BEGIN
                                                                IF (Rec."Landed Cost (LCY)" <> xRec."Landed Cost (LCY)") THEN
                                                                BEGIN
                                                                  CheckStatusOpen();
                                                                  UpdateBuyingSheetLines(Rec.FIELDNO("Landed Cost (LCY)"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Landed Cost (LCY);
                                                              ENG=Landed Cost (LCY)];
                                                   Editable=No }
    { 60  ;   ;Unit Price (LCY)    ;Decimal       ;OnValidate=BEGIN
                                                                IF (Rec."Unit Price (LCY)" <> xRec."Unit Price (LCY)") THEN
                                                                BEGIN
                                                                  CheckStatusOpen();
                                                                  UpdateBuyingSheetLines(Rec.FIELDNO("Unit Price (LCY)"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Unit Price (LCY);
                                                              ENG=Unit Price (LCY)] }
    { 62  ;   ;Recommended Retail Price;Boolean   ;OnValidate=BEGIN
                                                                IF (Rec."Recommended Retail Price" <> xRec."Recommended Retail Price") THEN
                                                                BEGIN
                                                                  CheckStatusOpen();
                                                                  UpdateBuyingSheetLines(Rec.FIELDNO("Recommended Retail Price"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Recommended Retail Price;
                                                              ENG=Recommended Retail Price] }
    { 70  ;   ;Discount %          ;Decimal       ;OnValidate=BEGIN
                                                                IF (Rec."Discount %" <> xRec."Discount %") THEN
                                                                BEGIN
                                                                  CheckStatusOpen();
                                                                  UpdateBuyingSheetLines(Rec.FIELDNO("Discount %"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Discount %;
                                                              ENG=Discount %];
                                                   DecimalPlaces=0:5 }
    { 80  ;   ;Sales Amount (LCY)  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Buying Sheet Line"."Sales Amount (LCY)" WHERE (Buying Sheet No.=FIELD(Buying Sheet No.),
                                                                                                                   Buying Sheet Summary Line No.=FIELD(Line No.)));
                                                   CaptionML=[ENU=Sales Amount (LCY);
                                                              ENG=Sales Amount (LCY)];
                                                   Editable=No }
    { 90  ;   ;Style No.           ;Code20        ;TableRelation=Style;
                                                   CaptionML=[ENU=Style No.;
                                                              ENG=Style No.] }
    { 100 ;   ;Mark-up             ;Decimal       ;OnValidate=BEGIN
                                                                IF (Rec."Mark-up" <> xRec."Mark-up") THEN
                                                                BEGIN
                                                                  CheckStatusOpen();
                                                                  UpdateUnitPrice();
                                                                  UpdateBuyingSheetLines(Rec.FIELDNO("Mark-up"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Mark-up;
                                                              ENG=Mark-up];
                                                   DecimalPlaces=0:5 }
    { 110 ;   ;Brand Code          ;Code20        ;TableRelation=Brand;
                                                   OnValidate=BEGIN
                                                                IF (Rec."Brand Code" <> xRec."Brand Code") THEN
                                                                BEGIN
                                                                  CheckStatusOpen();
                                                                  UpdateBuyingSheetLines(Rec.FIELDNO("Brand Code"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Brand Code;
                                                              ENG=Brand Code] }
    { 120 ;   ;Season Code         ;Code20        ;TableRelation=Season;
                                                   OnValidate=BEGIN
                                                                IF (Rec."Season Code" <> xRec."Season Code") THEN
                                                                BEGIN
                                                                  CheckStatusOpen();
                                                                  Rec.VALIDATE("Sub-Season Code", '');
                                                                  UpdateBuyingSheetLines(Rec.FIELDNO("Season Code"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Season Code;
                                                              ENG=Season Code] }
    { 121 ;   ;Sub-Season Code     ;Code20        ;TableRelation=Sub-Season.Code WHERE (Season Code=FIELD(Season Code));
                                                   OnValidate=BEGIN
                                                                IF (Rec."Sub-Season Code" <> xRec."Sub-Season Code") THEN
                                                                BEGIN
                                                                  CheckStatusOpen();
                                                                  UpdateBuyingSheetLines(Rec.FIELDNO("Sub-Season Code"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Sub-Season Code;
                                                              ENG=Sub-Season Code] }
    { 130 ;   ;Division Code       ;Code20        ;TableRelation="Item Hierarchy".Code WHERE (Type=CONST(Division));
                                                   OnValidate=BEGIN
                                                                IF (Rec."Division Code" <> xRec."Division Code") THEN
                                                                BEGIN
                                                                  CheckStatusOpen();
                                                                  Rec.VALIDATE("Department Code", '');
                                                                  UpdateBuyingSheetLines(Rec.FIELDNO("Division Code"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Division Code;
                                                              ENG=Division Code] }
    { 131 ;   ;Department Code     ;Code20        ;TableRelation="Item Hierarchy".Code WHERE (Type=CONST(Department),
                                                                                              Division Code=FIELD(Division Code));
                                                   OnValidate=BEGIN
                                                                IF (Rec."Department Code" <> xRec."Department Code") THEN
                                                                BEGIN
                                                                  CheckStatusOpen();
                                                                  Rec.VALIDATE("Group Code", '');
                                                                  UpdateBuyingSheetLines(Rec.FIELDNO("Department Code"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Department Code;
                                                              ENG=Department Code] }
    { 132 ;   ;Group Code          ;Code20        ;TableRelation="Item Hierarchy".Code WHERE (Type=CONST(Group),
                                                                                              Division Code=FIELD(Division Code),
                                                                                              Department Code=FIELD(Department Code));
                                                   OnValidate=BEGIN
                                                                IF (Rec."Group Code" <> xRec."Group Code") THEN
                                                                BEGIN
                                                                  CheckStatusOpen();
                                                                  Rec.VALIDATE("Category Code", '');
                                                                  UpdateBuyingSheetLines(Rec.FIELDNO("Group Code"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Group Code;
                                                              ENG=Group Code] }
    { 133 ;   ;Category Code       ;Code20        ;TableRelation="Item Hierarchy".Code WHERE (Type=CONST(Category),
                                                                                              Division Code=FIELD(Division Code),
                                                                                              Department Code=FIELD(Department Code),
                                                                                              Group Code=FIELD(Group Code));
                                                   OnValidate=BEGIN
                                                                IF (Rec."Category Code" <> xRec."Category Code") THEN
                                                                BEGIN
                                                                  CheckStatusOpen();
                                                                  Rec.VALIDATE("Sub-Category Code", '');
                                                                  UpdateBuyingSheetLines(Rec.FIELDNO("Category Code"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Category Code;
                                                              ENG=Category Code] }
    { 134 ;   ;Sub-Category Code   ;Code20        ;TableRelation="Item Hierarchy".Code WHERE (Type=CONST(Category),
                                                                                              Division Code=FIELD(Division Code),
                                                                                              Department Code=FIELD(Department Code),
                                                                                              Group Code=FIELD(Group Code),
                                                                                              Category Code=FIELD(Category Code));
                                                   OnValidate=BEGIN
                                                                IF (Rec."Sub-Category Code" <> xRec."Sub-Category Code") THEN
                                                                BEGIN
                                                                  CheckStatusOpen();
                                                                  UpdateBuyingSheetLines(Rec.FIELDNO("Sub-Category Code"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Sub-Category Code;
                                                              ENG=Sub-Category Code] }
    { 142 ;   ;Group Name          ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Item Hierarchy".Name WHERE (Type=CONST(Group),
                                                                                                   Code=FIELD(Group Code)));
                                                   CaptionML=[ENU=Group Name;
                                                              ENG=Group Name];
                                                   Editable=No }
    { 143 ;   ;Category Name       ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Item Hierarchy".Name WHERE (Type=CONST(Category),
                                                                                                   Code=FIELD(Category Code)));
                                                   CaptionML=[ENU=Category Name;
                                                              ENG=Category Name];
                                                   Editable=No }
    { 150 ;   ;Vendor No.          ;Code20        ;OnValidate=BEGIN
                                                                IF (Rec."Vendor No." <> xRec."Vendor No.") THEN
                                                                BEGIN
                                                                  CheckStatusOpen();
                                                                  UpdateBuyingSheetLines(Rec.FIELDNO("Vendor No."));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Vendor No.;
                                                              ENG=Vendor No.];
                                                   Editable=No }
    { 151 ;   ;Vendor Name         ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Vendor.Name WHERE (No.=FIELD(Vendor No.)));
                                                   CaptionML=[ENU=Vendor Name;
                                                              ENG=Vendor Name];
                                                   Editable=No }
    { 152 ;   ;Vendor Colour Code  ;Code20        ;TableRelation="Vendor Colour".Name WHERE (Vendor No.=FIELD(Vendor No.));
                                                   OnValidate=VAR
                                                                lItem@1000000000 : Record 27;
                                                              BEGIN
                                                                IF (Rec."Vendor Colour Code" <> xRec."Vendor Colour Code") THEN
                                                                BEGIN
                                                                  CheckStatusOpen();
                                                                  UpdateBuyingSheetLines(Rec.FIELDNO("Vendor Colour Code"));
                                                                END;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=Vendor Colour Code;
                                                              ENG=Vendor Colour Code] }
    { 153 ;   ;Vendor Colour Name  ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Vendor Colour".Name WHERE (Vendor No.=FIELD(Vendor No.),
                                                                                                  Code=FIELD(Vendor Colour Code)));
                                                   CaptionML=[ENU=Vendor Colour;
                                                              ENG=Vendor Colour];
                                                   Editable=No }
    { 154 ;   ;Vendor Item No.     ;Text20        ;OnValidate=BEGIN
                                                                IF (Rec."Vendor Item No." <> xRec."Vendor Item No.") THEN
                                                                BEGIN
                                                                  CheckStatusOpen();
                                                                  UpdateBuyingSheetLines(Rec.FIELDNO("Vendor Item No."));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Vendor Item No.;
                                                              ENG=Vendor Item No.] }
    { 160 ;   ;Colour Code         ;Code20        ;TableRelation=Colour;
                                                   OnValidate=BEGIN
                                                                IF (Rec."Colour Code" <> xRec."Colour Code") THEN
                                                                BEGIN
                                                                  CheckStatusOpen();
                                                                  UpdateBuyingSheetLines(Rec.FIELDNO("Colour Code"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Colour Code;
                                                              ENG=Colour Code] }
    { 161 ;   ;Colour Name         ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Colour.Name WHERE (Code=FIELD(Colour Code)));
                                                   CaptionML=[ENU=Colour;
                                                              ENG=Colour];
                                                   Editable=No }
    { 170 ;   ;Size Group Code     ;Code20        ;TableRelation="Size Group";
                                                   OnValidate=VAR
                                                                lSizeGroup@1000000001 : Record 9087001;
                                                                lStandardSizeGroupCode@1000000000 : Code[20];
                                                              BEGIN
                                                                IF (Rec."Size Group Code" <> xRec."Size Group Code") THEN
                                                                BEGIN
                                                                  CheckStatusOpen();
                                                                  IF (Rec."Size Group Code" <> '') THEN
                                                                  BEGIN
                                                                    lSizeGroup.GET(Rec."Size Group Code");
                                                                    lStandardSizeGroupCode := lSizeGroup."Standard Size Group Code";
                                                                  END;
                                                                  Rec.VALIDATE("Standard Size Group Code", lStandardSizeGroupCode);
                                                                  UpdateBuyingSheetLines(Rec.FIELDNO("Size Group Code"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Size Group Code;
                                                              ENG=Size Group Code] }
    { 171 ;   ;Standard Size Group Code;Code20    ;OnValidate=BEGIN
                                                                IF (Rec."Standard Size Group Code" <> xRec."Standard Size Group Code") THEN
                                                                BEGIN
                                                                  CheckStatusOpen();
                                                                  UpdateBuyingSheetLines(Rec.FIELDNO("Standard Size Group Code"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Standard Size Group Code;
                                                              ENG=Standard Size Group Code] }
    { 190 ;   ;No. of Lines        ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Buying Sheet Line" WHERE (Buying Sheet No.=FIELD(Buying Sheet No.),
                                                                                                Buying Sheet Summary Line No.=FIELD(Line No.)));
                                                   CaptionML=[ENU=No. of Lines;
                                                              ENG=No. of Lines];
                                                   Editable=No }
    { 210 ;   ;Overhead Unit Cost (LCY);Decimal   ;OnValidate=BEGIN
                                                                IF (Rec."Overhead Unit Cost (LCY)" <> xRec."Overhead Unit Cost (LCY)") THEN
                                                                  UpdateLandedCost();
                                                              END;

                                                   CaptionML=[ENU=Overhead Unit Cost (LCY);
                                                              ENG=Overhead Unit Cost (LCY)] }
    { 220 ;   ;Store Allocation Code;Code20       ;OnValidate=BEGIN
                                                                IF (Rec."Store Allocation Code" <> xRec."Store Allocation Code") THEN
                                                                  UpdateStoreAllocationCode();
                                                              END;

                                                   OnLookup=BEGIN
                                                              ShowStoreAllocations();
                                                            END;

                                                   CaptionML=[ENU=Store Allocation Code;
                                                              ENG=Store Allocation Code] }
    { 221 ;   ;Quantity Allocated  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Store Allocation Line".Quantity WHERE (Store Allocation Code=FIELD(Store Allocation Code),
                                                                                                           Item No.=FIELD(Item No.),
                                                                                                           Variant Code=FIELD(Variant Filter)));
                                                   OnLookup=BEGIN
                                                              ShowStoreAllocations();
                                                            END;

                                                   CaptionML=[ENU=Quantity Allocated;
                                                              ENG=Quantity Allocated];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 230 ;   ;Variant Filter      ;Code10        ;FieldClass=FlowFilter;
                                                   TableRelation="Item Variant".Code WHERE (Item No.=FIELD(Item No.));
                                                   CaptionML=[ENU=Variant Filter;
                                                              ENG=Variant Filter] }
    { 240 ;   ;Purchase Order No.  ;Code20        ;CaptionML=[ENU=Purchase Order No.;
                                                              ENG=Purchase Order No.] }
    { 250 ;   ;Picture             ;BLOB          ;CaptionML=[ENU=Picture;
                                                              ENG=Picture];
                                                   SubType=Bitmap }
    { 260 ;   ;Unit of Measure Code;Code10        ;TableRelation="Item Unit of Measure".Code WHERE (Item No.=FIELD(Item No.));
                                                   OnValidate=VAR
                                                                lUnitOfMeasureManagement@1000000000 : Codeunit 5402;
                                                              BEGIN
                                                                IF (Rec."Unit of Measure Code" <> xRec."Unit of Measure Code") THEN
                                                                BEGIN
                                                                  CheckStatusOpen();
                                                                  Item.GET(Rec."Item No.");
                                                                  Rec.VALIDATE("Qty. per Unit of Measure", lUnitOfMeasureManagement.GetQtyPerUnitOfMeasure(Item, Rec."Unit of Measure Code"));
                                                                  UpdateBuyingSheetLines(Rec.FIELDNO("Unit of Measure Code"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Unit of Measure Code;
                                                              ENG=Unit of Measure Code] }
    { 270 ;   ;Location Code       ;Code10        ;TableRelation=Location WHERE (Use As In-Transit=CONST(No));
                                                   OnValidate=BEGIN
                                                                IF (Rec."Location Code" <> xRec."Location Code") THEN
                                                                BEGIN
                                                                  CheckStatusOpen();
                                                                  UpdateBuyingSheetLines(Rec.FIELDNO("Location Code"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Location Code;
                                                              ENG=Location Code] }
    { 280 ;   ;Order Date          ;Date          ;OnValidate=BEGIN
                                                                IF (Rec."Order Date" <> xRec."Order Date") THEN
                                                                BEGIN
                                                                  CheckStatusOpen();
                                                                  UpdateBuyingSheetLines(Rec.FIELDNO("Order Date"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Order Date;
                                                              ENG=Order Date] }
    { 281 ;   ;Document Date       ;Date          ;OnValidate=BEGIN
                                                                IF (Rec."Document Date" <> xRec."Document Date") THEN
                                                                BEGIN
                                                                  CheckStatusOpen();
                                                                  UpdateBuyingSheetLines(Rec.FIELDNO("Document Date"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Document Date;
                                                              ENG=Document Date] }
    { 290 ;   ;Item Category Code  ;Code10        ;TableRelation="Item Category";
                                                   OnValidate=BEGIN
                                                                IF (Rec."Item Category Code" <> xRec."Item Category Code") THEN
                                                                BEGIN
                                                                  CheckStatusOpen();
                                                                  Rec.VALIDATE("Product Group Code", '');
                                                                  UpdateBuyingSheetLines(Rec.FIELDNO("Item Category Code"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Item Category Code;
                                                              ENG=Item Category Code] }
    { 291 ;   ;Product Group Code  ;Code10        ;TableRelation="Product Group".Code WHERE (Item Category Code=FIELD(Item Category Code));
                                                   OnValidate=BEGIN
                                                                IF (Rec."Product Group Code" <> xRec."Product Group Code") THEN
                                                                BEGIN
                                                                  CheckStatusOpen();
                                                                  UpdateBuyingSheetLines(Rec.FIELDNO("Product Group Code"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Product Group Code;
                                                              ENG=Product Group Code] }
    { 300 ;   ;Cost Amount         ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Buying Sheet Line"."Cost Amount" WHERE (Buying Sheet No.=FIELD(Buying Sheet No.),
                                                                                                            Buying Sheet Summary Line No.=FIELD(Line No.)));
                                                   CaptionML=[ENU=Cost Amount;
                                                              ENG=Cost Amount];
                                                   Editable=No }
    { 301 ;   ;Cost Amount (LCY)   ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Buying Sheet Line"."Cost Amount (LCY)" WHERE (Buying Sheet No.=FIELD(Buying Sheet No.),
                                                                                                                  Buying Sheet Summary Line No.=FIELD(Line No.)));
                                                   CaptionML=[ENU=Cost Amount (LCY);
                                                              ENG=Cost Amount (LCY)];
                                                   Editable=No }
    { 302 ;   ;Overhead Amount (LCY);Decimal      ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Buying Sheet Line"."Overhead Amount (LCY)" WHERE (Buying Sheet No.=FIELD(Buying Sheet No.),
                                                                                                                      Buying Sheet Summary Line No.=FIELD(Line No.)));
                                                   CaptionML=[ENU=Overhead Amount (LCY);
                                                              ENG=Overhead Amount (LCY)];
                                                   Editable=No }
    { 303 ;   ;Landed Amount (LCY) ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Buying Sheet Line"."Landed Amount (LCY)" WHERE (Buying Sheet No.=FIELD(Buying Sheet No.),
                                                                                                                    Buying Sheet Summary Line No.=FIELD(Line No.)));
                                                   CaptionML=[ENU=Landed Amount (LCY);
                                                              ENG=Landed Amount (LCY)];
                                                   Editable=No }
    { 310 ;   ;System Activity     ;Boolean       ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=System Activity;
                                                              ENG=System Activity] }
    { 320 ;   ;Lead Time Calculation;DateFormula  ;OnValidate=BEGIN
                                                                IF (Rec."Lead Time Calculation" <> xRec."Lead Time Calculation") THEN
                                                                BEGIN
                                                                  CheckStatusOpen();
                                                                  UpdateBuyingSheetLines(Rec.FIELDNO("Lead Time Calculation"));
                                                                END;
                                                              END;

                                                   AccessByPermission=TableData 120=R;
                                                   CaptionML=[ENU=Lead Time Calculation;
                                                              ENG=Lead Time Calculation] }
    { 1000;   ;Created By          ;Code50        ;OnLookup=BEGIN
                                                              TnpToolkit.UserLookup(Rec."Created By", FALSE);
                                                            END;

                                                   CaptionML=[ENU=Created By;
                                                              ENG=Created By] }
    { 1001;   ;Created Date Time   ;DateTime      ;CaptionML=[ENU=Created Date Time;
                                                              ENG=Created Date Time] }
    { 1002;   ;Modified By         ;Code50        ;OnLookup=BEGIN
                                                              TnpToolkit.UserLookup(Rec."Modified By", FALSE);
                                                            END;

                                                   CaptionML=[ENU=Modified By;
                                                              ENG=Modified By] }
    { 1003;   ;Modified Date Time  ;DateTime      ;CaptionML=[ENU=Modified Date Time;
                                                              ENG=Modified Date Time] }
    { 50000;  ;Comments            ;Text80        ;Description=OP9031 CC }
    { 50650;  ;Shipment Date       ;Date          ;Description=OP9031 CC }
    { 50660;  ;Cancellation Date   ;Date          ;Description=OP9031 CC }
    { 50710;  ;Country of Origin   ;Code10        ;TableRelation=Country/Region;
                                                   Description=M0021 }
    { 50730;  ;Runaway Look        ;Text100       ;Description=M0035 }
    { 50740;  ;Colour Status       ;Boolean       ;Description=M0036 }
    { 50750;  ;Sample Status       ;Boolean       ;Description=M0037 }
    { 50780;  ;Exclusive           ;Boolean       ;Description=M0038 }
  }
  KEYS
  {
    {    ;Buying Sheet No.,Line No.               ;Clustered=Yes }
    {    ;Store Allocation Code,Item No.           }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      nSembleSetup@1000000005 : Record 9087000;
      Item@1000000001 : Record 27;
      BuyingSheetHeader@1000000002 : Record 9087020;
      BuyingSheetLine@1000000003 : Record 9087022;
      BuyingSheetSummaryLineMgt@1000000000 : Codeunit 9087009;
      TnpToolkit@1000000006 : Codeunit 9062230;
      StoreAllocationSender@1000000004 : Integer;
      DirectUnitCostValidation@1000000010 : Boolean;
      DirectUnitCostLcyValidation@1000000011 : Boolean;

    PROCEDURE GetSystemActivity@1000000024() : Boolean;
    BEGIN
      //DOC NS2016.16 - Returning system activity
      //  <- The activity

      IF (Rec.GETFILTER("System Activity") <> '') THEN
        EXIT(Rec.GETRANGEMIN("System Activity"))
      ELSE
        EXIT(FALSE);
    END;

    PROCEDURE SetSystemActivity@1000000025(pSystemActivity@1000000000 : Boolean);
    BEGIN
      //DOC NS2016.16 - Setting system activity
      //  -> pSystemActivity: The activity

      IF (pSystemActivity) THEN
        Rec.SETRANGE("System Activity", TRUE)
      ELSE
        Rec.SETRANGE("System Activity");
    END;

    PROCEDURE UpdateFromBuyingSheetHeader@1000000000();
    BEGIN
      //DOC NS2016.16 - Updating from buying sheet header

      BuyingSheetHeader.GET(Rec."Buying Sheet No.");

      Rec.VALIDATE("Vendor No.", BuyingSheetHeader."Vendor No.");
      Rec.VALIDATE("Location Code", BuyingSheetHeader."Location Code");
      Rec.VALIDATE("Currency Code", BuyingSheetHeader."Currency Code");
      Rec.VALIDATE("Currency Factor", BuyingSheetHeader."Currency Factor");
      Rec.VALIDATE("Document Date", BuyingSheetHeader."Document Date");
      Rec.VALIDATE("Order Date", BuyingSheetHeader."Order Date");
      Rec.VALIDATE("Discount %", BuyingSheetHeader."Discount %");
      Rec.VALIDATE("Mark-up", BuyingSheetHeader."Mark-up");
      Rec.VALIDATE("Season Code", BuyingSheetHeader."Season Code");
      Rec.VALIDATE("Sub-Season Code", BuyingSheetHeader."Sub-Season Code");
      Rec.VALIDATE("Lead Time Calculation", BuyingSheetHeader."Lead Time Calculation");
    END;

    PROCEDURE UpdateBuyingSheetLines@1000000004(pFieldId@1000000000 : Integer);
    BEGIN
      //DOC NS2016.16 - Updating lines for given field ID
      //  -> pFieldId: The field ID

      IF (Rec.GetSystemActivity()) THEN
        EXIT;

      BuyingSheetLine.RESET();
      BuyingSheetLine.SETCURRENTKEY("Buying Sheet No.", "Buying Sheet Summary Line No.");
      BuyingSheetLine.SETRANGE("Buying Sheet No.", Rec."Buying Sheet No.");
      BuyingSheetLine.SETRANGE("Buying Sheet Summary Line No.", Rec."Line No.");
      IF (BuyingSheetLine.FINDSET(TRUE)) THEN
      REPEAT
        CASE (pFieldId) OF
          Rec.FIELDNO("Vendor No."):
            BuyingSheetLine.VALIDATE("Vendor No.", Rec."Vendor No.");
          Rec.FIELDNO("Location Code"):
            BuyingSheetLine.VALIDATE("Location Code", Rec."Location Code");
          Rec.FIELDNO("Currency Code"):
            BuyingSheetLine.VALIDATE("Currency Code", Rec."Currency Code");
          Rec.FIELDNO("Currency Factor"):
            BuyingSheetLine.VALIDATE("Currency Factor", Rec."Currency Factor");
          Rec.FIELDNO("Document Date"):
            BuyingSheetLine.VALIDATE("Document Date", Rec."Document Date");
          Rec.FIELDNO("Order Date"):
            BuyingSheetLine.VALIDATE("Order Date", Rec."Order Date");
          Rec.FIELDNO("Discount %"):
            BuyingSheetLine.VALIDATE("Discount %", Rec."Discount %");
          Rec.FIELDNO("Mark-up"):
            BuyingSheetLine.VALIDATE("Mark-up", Rec."Mark-up");
          Rec.FIELDNO("Brand Code"):
            BuyingSheetLine.VALIDATE("Brand Code", Rec."Brand Code");
          Rec.FIELDNO("Season Code"):
            BuyingSheetLine.VALIDATE("Season Code", Rec."Season Code");
          Rec.FIELDNO("Sub-Season Code"):
            BuyingSheetLine.VALIDATE("Sub-Season Code", Rec."Sub-Season Code");
          Rec.FIELDNO("Division Code"):
            BuyingSheetLine.VALIDATE("Division Code", Rec."Division Code");
          Rec.FIELDNO("Department Code"):
            BuyingSheetLine.VALIDATE("Department Code", Rec."Department Code");
          Rec.FIELDNO("Group Code"):
            BuyingSheetLine.VALIDATE("Group Code", Rec."Group Code");
          Rec.FIELDNO("Category Code"):
            BuyingSheetLine.VALIDATE("Category Code", Rec."Category Code");
          Rec.FIELDNO("Sub-Category Code"):
            BuyingSheetLine.VALIDATE("Sub-Category Code", Rec."Sub-Category Code");
          Rec.FIELDNO("Item Category Code"):
            BuyingSheetLine.VALIDATE("Item Category Code", Rec."Item Category Code");
          Rec.FIELDNO("Product Group Code"):
            BuyingSheetLine.VALIDATE("Product Group Code", Rec."Product Group Code");
          Rec.FIELDNO(Description):
            BuyingSheetLine.VALIDATE(Description, Rec.Description);
          Rec.FIELDNO("Description 2"):
            BuyingSheetLine.VALIDATE("Description 2", Rec."Description 2");
          Rec.FIELDNO("Vendor Colour Code"):
            BuyingSheetLine.VALIDATE("Vendor Colour Code", Rec."Vendor Colour Code");
          Rec.FIELDNO("Unit of Measure Code"):
            BuyingSheetLine.VALIDATE("Unit of Measure Code", Rec."Unit of Measure Code");
          Rec.FIELDNO("Direct Unit Cost"):
            BuyingSheetLine.VALIDATE("Direct Unit Cost", Rec."Direct Unit Cost");
          Rec.FIELDNO("Direct Unit Cost (LCY)"):
            BuyingSheetLine.VALIDATE("Direct Unit Cost (LCY)", Rec."Direct Unit Cost (LCY)");
          Rec.FIELDNO("Landed Cost (LCY)"):
            BuyingSheetLine.VALIDATE("Landed Unit Cost (LCY)", Rec."Landed Cost (LCY)");
          Rec.FIELDNO("Unit Price (LCY)"):
            BuyingSheetLine.VALIDATE("Unit Price (LCY)", Rec."Unit Price (LCY)");
          Rec.FIELDNO("Recommended Retail Price"):
            BuyingSheetLine.VALIDATE("Recommended Retail Price", Rec."Recommended Retail Price");
          Rec.FIELDNO("Size Group Code"):
            BuyingSheetLine.VALIDATE("Size Group Code", Rec."Size Group Code");
          Rec.FIELDNO("Standard Size Group Code"):
            BuyingSheetLine.VALIDATE("Standard Size Group Code", Rec."Standard Size Group Code");
          Rec.FIELDNO("Colour Code"):
            BuyingSheetLine.VALIDATE("Colour Code", Rec."Colour Code");
          Rec.FIELDNO("Lead Time Calculation"):
            BuyingSheetLine.VALIDATE("Lead Time Calculation", Rec."Lead Time Calculation");
        END;
        BuyingSheetLine.MODIFY(TRUE);
      UNTIL (BuyingSheetLine.NEXT() = 0);
    END;

    LOCAL PROCEDURE UpdateCurrencyFactor@12();
    BEGIN
    END;

    PROCEDURE UpdateDirectCost@1000000019();
    VAR
      lPurchPriceCalcMgt@1000000002 : Codeunit 7010;
    BEGIN
      //DOC NS2015.3 - Updating direct cost

      IF (Rec.GetSystemActivity()) THEN
        EXIT;
      IF ((Rec."Vendor No." = '') OR (Rec."Item No." = '')) THEN
        EXIT;

      lPurchPriceCalcMgt.FindBuyingSheetSummaryLinePrice(Rec);
      lPurchPriceCalcMgt.FindBuyingSheetSummaryLineDiscount(Rec);
    END;

    LOCAL PROCEDURE UpdateLandedCost@1000000005();
    BEGIN
      //DOC NS2016.16 - Updating landed cost

      Rec.VALIDATE("Landed Cost (LCY)", Rec."Direct Unit Cost (LCY)" + Rec."Overhead Unit Cost (LCY)");
    END;

    PROCEDURE UpdateUnitPrice@1000000001();
    BEGIN
      //DOC NS2016.16 - Updating unit price

      IF (Rec."Recommended Retail Price") THEN
        EXIT;

      Rec.VALIDATE("Unit Price (LCY)", Rec."Direct Unit Cost (LCY)" * Rec."Mark-up");
    END;

    PROCEDURE CheckStatusOpen@1000000002();
    BEGIN
      IF (Rec.GetSystemActivity()) THEN
        EXIT;

      BuyingSheetHeader.GET(Rec."Buying Sheet No.");
      BuyingSheetHeader.CheckStatusOpen();
    END;

    PROCEDURE CheckStatusReleased@1000000003();
    BEGIN
      IF (Rec.GetSystemActivity()) THEN
        EXIT;

      BuyingSheetHeader.GET(Rec."Buying Sheet No.");
      BuyingSheetHeader.CheckStatusReleased();
    END;

    PROCEDURE CreateBuyingSheetLine@1000000016(VAR pLineNo@1000000000 : Integer;pItemNo@1000000003 : Code[20];pVariantCode@1000000001 : Code[20]);
    VAR
      lItemVendor@1000000002 : Record 99;
    BEGIN
      //DOC NS2015.3 - Creating buying sheet line
      //  <> pLineNo: Source / target line number
      //  -> pItemNo: Item no.
      //  -> pVariantCode: Variant code

      IF (pLineNo = 0) THEN
      BEGIN
        BuyingSheetLine.RESET();
        BuyingSheetLine.SETRANGE("Buying Sheet No.", Rec."Buying Sheet No.");
        IF (BuyingSheetLine.FINDLAST()) THEN
          pLineNo := BuyingSheetLine."Line No.";
      END;
      pLineNo += 10000;

      IF (pItemNo = '') THEN
        pItemNo := Rec."Item No.";

      BuyingSheetLine.INIT();
      BuyingSheetLine.VALIDATE("Buying Sheet No.", Rec."Buying Sheet No.");
      BuyingSheetLine."Line No." := pLineNo;
      BuyingSheetLine.INSERT(TRUE);
      BuyingSheetLine.VALIDATE("Item No.", pItemNo);
      IF (pVariantCode <> '') THEN
        BuyingSheetLine.VALIDATE("Variant Code", pVariantCode);
      BuyingSheetLine.MODIFY(TRUE);
    END;

    PROCEDURE CreateBuyingSheetLineAdv@1000000012(VAR pLineNo@1000000001 : Integer;pItemNo@1000000003 : Code[20];pVariantCode@1000000000 : Code[10];VAR pBuyingSheetLine@1000000002 : Record 9087022);
    BEGIN
      //DOC NA2016.16.3 - Creating buying sheet line (advanced version)
      //  <> pLineNo: Source / target line number
      //  -> pItemNo: Item no.
      //  -> pVariantCode: Variant code
      //  <> pBuyingSheetLine: Target buying sheet line

      CreateBuyingSheetLine(pLineNo, pItemNo, pVariantCode);
      pBuyingSheetLine := BuyingSheetLine;
    END;

    PROCEDURE SetStoreAllocationSender@1000000008(pStoreAllocationSender@1000000000 : Integer);
    BEGIN
      //DOC NS2015.6 - Setting store allocation sender
      //  -> pStoreAllocationSender: The sender

      StoreAllocationSender := pStoreAllocationSender;
    END;

    PROCEDURE UpdateStoreAllocationCode@1000000007();
    VAR
      lPurchaseSummaryLine@1000000000 : Record 9087030;
    BEGIN
      //DOC NS2015.6 - Updating store allocation code

      IF ((Rec."Purchase Order No." = '') OR (Rec."Item No." = '')) THEN
        EXIT;

      BuyingSheetLine.RESET();
      BuyingSheetLine.SETCURRENTKEY("Buying Sheet No.", "Buying Sheet Summary Line No.");
      BuyingSheetLine.SETRANGE("Buying Sheet No.", Rec."Buying Sheet No.");
      BuyingSheetLine.SETRANGE("Buying Sheet Summary Line No.", Rec."Line No.");
      BuyingSheetLine.MODIFYALL("Store Allocation Code", Rec."Store Allocation Code");

      IF (StoreAllocationSender <> DATABASE::"Purchase Summary Line") THEN
      BEGIN
        lPurchaseSummaryLine.RESET();
        lPurchaseSummaryLine.SETRANGE("Document Type", lPurchaseSummaryLine."Document Type"::Order);
        lPurchaseSummaryLine.SETRANGE("Document No.", Rec."Purchase Order No.");
        lPurchaseSummaryLine.SETRANGE(Type, lPurchaseSummaryLine.Type::Item);
        lPurchaseSummaryLine.SETRANGE("No.", Rec."Item No.");
        IF (lPurchaseSummaryLine.FINDSET(TRUE)) THEN
        REPEAT
          lPurchaseSummaryLine.SetStoreAllocationSender(DATABASE::"Buying Sheet Summary Line");
          lPurchaseSummaryLine.VALIDATE("Store Allocation Code", Rec."Store Allocation Code");
          lPurchaseSummaryLine.SetStoreAllocationSender(0);
          lPurchaseSummaryLine.MODIFY(TRUE);
        UNTIL (lPurchaseSummaryLine.NEXT() = 0);
      END;
    END;

    PROCEDURE ShowStoreAllocations@1000000006();
    VAR
      lStoreAllocationManagement@1000000000 : Codeunit 9087015;
    BEGIN
      //DOC NS2015.1 - Showing store allocations

      Rec.TESTFIELD("Item No.");

      IF (Rec."Store Allocation Code" = '') THEN
        CheckStatusOpen();

      IF (lStoreAllocationManagement.VerifyStoreAllocationCode(Rec."Store Allocation Code")) THEN
      BEGIN
        Rec.VALIDATE("Store Allocation Code");
        COMMIT;
      END;

      Rec.TESTFIELD("Store Allocation Code");

      BuyingSheetHeader.GET(Rec."Buying Sheet No.");

      BuyingSheetLine.RESET();
      BuyingSheetLine.SETCURRENTKEY("Buying Sheet No.", "Buying Sheet Summary Line No.");
      BuyingSheetLine.SETRANGE("Buying Sheet No.", Rec."Buying Sheet No.");
      BuyingSheetLine.SETRANGE("Buying Sheet Summary Line No.", Rec."Line No.");

      lStoreAllocationManagement.ShowStoreAllocationMatrix(Rec."Store Allocation Code", DATABASE::"Buying Sheet Line", BuyingSheetLine.GETVIEW(FALSE),
        BuyingSheetLine.FIELDNO("Item No."), BuyingSheetLine.FIELDNO("Variant Code"), BuyingSheetLine.FIELDNO(Description),
        BuyingSheetLine.FIELDNO(Quantity), BuyingSheetLine.FIELDNO("Quantity Allocated"), BuyingSheetLine.FIELDNO(Sequence),
        BuyingSheetHeader.Status <> BuyingSheetHeader.Status::Open);
    END;

    PROCEDURE ShowItem@1000000010();
    VAR
      lItem@1000000000 : Record 27;
    BEGIN
      //DOC NS2015.1 - Showing item

      Rec.TESTFIELD("Item No.");
      lItem.GET(Rec."Item No.");
      PAGE.RUN(PAGE::"Item Card", lItem);
    END;

    PROCEDURE ShowStyle@1000000011();
    VAR
      lStyle@1000000000 : Record 9087012;
    BEGIN
      //DOC NS2015.1 - Showing style

      Rec.TESTFIELD("Style No.");
      lStyle.GET(Rec."Style No.");
      PAGE.RUN(PAGE::"Style Card", lStyle);
    END;

    PROCEDURE ShowVendor@1000000013();
    VAR
      lVendor@1000000000 : Record 23;
    BEGIN
      //DOC NS2015.1 - Showing vendor

      Rec.TESTFIELD("Vendor No.");
      lVendor.GET(Rec."Vendor No.");
      PAGE.RUN(PAGE::"Vendor Card", lVendor);
    END;

    PROCEDURE ShowBuyingSheet@1000000014();
    VAR
      lReqWksh@1000000000 : Record 245;
    BEGIN
      //DOC NS2015.1 - Showing buying sheeet

      BuyingSheetHeader.GET(Rec."Buying Sheet No.");
      PAGE.RUN(PAGE::"Buying Sheet Card", BuyingSheetHeader);
    END;

    PROCEDURE ShowLines@1000000015();
    BEGIN
      //DOC NS2015.4 - Showing lines

      BuyingSheetLine.RESET();
      BuyingSheetLine.SETCURRENTKEY("Buying Sheet No.", "Buying Sheet Summary Line No.");
      BuyingSheetLine.FILTERGROUP(2);
      BuyingSheetLine.SETRANGE("Buying Sheet No.", Rec."Buying Sheet No.");
      BuyingSheetLine.SETRANGE("Buying Sheet Summary Line No.", Rec."Line No.");
      BuyingSheetLine.FILTERGROUP(0);

      PAGE.RUNMODAL(PAGE::"Buying Sheet Lines", BuyingSheetLine);
    END;

    PROCEDURE ShowMatrix@1000000009();
    VAR
      lBuyingSheetMatrix@1000000000 : Page 9087078;
    BEGIN
      //DOC NS2016.16 - Showing matrix

      BuyingSheetHeader.GET(Rec."Buying Sheet No.");

      CLEAR(lBuyingSheetMatrix);
      lBuyingSheetMatrix.Initialise(Rec, BuyingSheetHeader.Status <> BuyingSheetHeader.Status::Open);
      lBuyingSheetMatrix.RUNMODAL();
    END;

    BEGIN
    {
      //DOC NS2015.1  PC 15/11/2013 - Created
      //DOC NS2015.1  JH 19/02/2014 - Amendments
      //DOC NS2015.3  JH 31/07/2014 - Bugfixes
      //DOC NS2015.3  JH 23/09/2014 - Proper purchase price management
      //DOC NS2015.4  JH 16/02/2015 - Proper index while showing lines
      //DOC NS2015.6  JH 09/04/2015 - "Store Allocation" renamed to "Stock Allocation"
      //DOC NS2016.16 JH 06/09/2016 - nSemble 2016

      //DOC OP9031 M0035 PCM 22/11/16 - Added field "Runway Look"
      //DOC OP9031 M0036 PCM 22/11/16 - Added field "Colour Status"
      //DOC OP9031 M0037 PCM 22/11/16 - Added field "Sample Status"
      //DOC OP9031 M0038 PCM 22/11/16 - Added field "ExclusiveBoolean"
      //DOC OP9031 M0021 PCM 22/11/16 - Added field "Country of Origin"
      //DOC OP9031 PCM 04/01/17 - Added "Shipment Date", "Cancellation Date", and "Comments" fields.
    }
    END.
  }
}

