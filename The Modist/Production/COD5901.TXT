OBJECT Codeunit 5901 ServLoanerManagement
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    Permissions=TableData 5914=rimd,
                TableData 5931=rimd;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=The %1 field is empty.;ENG=The %1 field is empty.';
      Text001@1001 : TextConst 'ENU=You cannot receive loaner %1 because it has not been lent.;ENG=You cannot receive loaner %1 because it has not been lent.';
      Text002@1002 : TextConst 'ENU=Loaner no. %1 has not been lent connection with %2 no. %3.;ENG=Loaner no. %1 has not been lent connection with %2 no. %3.';
      Text003@1003 : TextConst 'ENU=There is no %1 to receive.;ENG=There is no %1 to receive.';
      Text004@1004 : TextConst 'ENU="There is no loaner to receive on the service shipment item line document no.=%1,line no.=%2.";ENG="There is no loaner to receive on the service shipment item line document no.=%1,line no.=%2."';
      Text005@1005 : TextConst 'ENU=Do you want to receive loaner %1?;ENG=Do you want to receive loaner %1?';
      Text006@1006 : TextConst 'ENU=There is no service shipment header within the filter.\Filters: order no.: %1\Do you want to receive the loaner anyway?;ENG=There is no service shipment header within the filter.\Filters: order no.: %1\Do you want to receive the loaner anyway?';

    PROCEDURE LendLoaner@10(ServItemLine@1000 : Record 5901);
    VAR
      Loaner@1001 : Record 5913;
      ServHeader@1003 : Record 5900;
      LoanerEntry@1002 : Record 5914;
      ServLogMgt@1004 : Codeunit 5906;
    BEGIN
      IF ServItemLine."Loaner No." <> '' THEN BEGIN
        Loaner.GET(ServItemLine."Loaner No.");
        Loaner.CALCFIELDS(Lent);
        Loaner.TESTFIELD(Lent,FALSE);
        Loaner.TESTFIELD(Blocked,FALSE);

        LoanerEntry.LOCKTABLE;
        LoanerEntry.INIT;
        LoanerEntry."Entry No." := LoanerEntry.GetNextEntryNo;
        LoanerEntry."Loaner No." := ServItemLine."Loaner No.";
        LoanerEntry."Document Type" := ServItemLine."Document Type" + 1;
        LoanerEntry."Document No." := ServItemLine."Document No.";
        LoanerEntry."Service Item Line No." := ServItemLine."Line No.";
        LoanerEntry."Service Item No." := ServItemLine."Service Item No.";
        LoanerEntry."Service Item Group Code" := ServItemLine."Service Item Group Code";
        IF ServHeader.GET(ServItemLine."Document Type",ServItemLine."Document No.") THEN
          LoanerEntry."Customer No." := ServHeader."Customer No.";
        LoanerEntry."Date Lent" := WORKDATE;
        LoanerEntry."Time Lent" := TIME;
        LoanerEntry."Date Received" := 0D;
        LoanerEntry."Time Received" := 0T;
        LoanerEntry.Lent := TRUE;
        LoanerEntry.INSERT;
        CLEAR(ServLogMgt);
        ServLogMgt.LoanerLent(LoanerEntry);
      END ELSE
        ERROR(Text000,ServItemLine.FIELDCAPTION("Loaner No."));
    END;

    PROCEDURE ReceiveLoaner@11(VAR ServItemLine@1000 : Record 5901);
    VAR
      Loaner@1001 : Record 5913;
      LoanerEntry@1002 : Record 5914;
      ServLogMgt@1003 : Codeunit 5906;
    BEGIN
      IF ServItemLine."Loaner No." <> '' THEN BEGIN
        IF NOT CONFIRM(Text005,TRUE,ServItemLine."Loaner No.") THEN
          EXIT;
        LoanerEntry.RESET;
        LoanerEntry.SETCURRENTKEY("Document Type","Document No.","Loaner No.",Lent);
        LoanerEntry.SETRANGE("Document Type",ServItemLine."Document Type" + 1);
        LoanerEntry.SETRANGE("Document No.",ServItemLine."Document No.");
        LoanerEntry.SETRANGE("Loaner No.",ServItemLine."Loaner No.");
        LoanerEntry.SETRANGE(Lent,TRUE);
        IF LoanerEntry.FINDFIRST THEN BEGIN
          LoanerEntry."Date Received" := WORKDATE;
          LoanerEntry."Time Received" := TIME;
          LoanerEntry.Lent := FALSE;
          LoanerEntry.MODIFY;
          ServItemLine."Loaner No." := '';
          ServItemLine.MODIFY;
          CLEAR(ServLogMgt);
          ServLogMgt.LoanerReceived(LoanerEntry);
          ClearLoanerField(ServItemLine."Document No.",ServItemLine."Line No.",LoanerEntry."Loaner No.");
        END ELSE
          ERROR(
            Text002,ServItemLine."Loaner No.",
            FORMAT(ServItemLine."Document Type"),ServItemLine."Document No.");
      END ELSE
        ERROR(Text003,Loaner.TABLECAPTION);
    END;

    PROCEDURE ReceiveLoanerShipment@2(ServShipmentItemLine@1000 : Record 5989);
    VAR
      LoanerEntry@1002 : Record 5914;
      ServShptHeader@1004 : Record 5990;
      ServLogMgt@1003 : Codeunit 5906;
    BEGIN
      WITH ServShipmentItemLine DO
        IF "Loaner No." = '' THEN
          ERROR(Text004,"No.","Line No.");

      IF NOT CONFIRM(Text005,TRUE,ServShipmentItemLine."Loaner No.") THEN
        EXIT;
      ServShptHeader.GET(ServShipmentItemLine."No.");
      LoanerEntry.RESET;
      LoanerEntry.SETCURRENTKEY("Document Type","Document No.","Loaner No.",Lent);
      LoanerEntry.SETRANGE("Document Type",LoanerEntry."Document Type"::Order);
      LoanerEntry.SETRANGE("Document No.",ServShptHeader."Order No.");
      LoanerEntry.SETRANGE("Loaner No.",ServShipmentItemLine."Loaner No.");
      LoanerEntry.SETRANGE(Lent,TRUE);
      IF LoanerEntry.FINDFIRST THEN BEGIN
        LoanerEntry."Date Received" := WORKDATE;
        LoanerEntry."Time Received" := TIME;
        LoanerEntry.Lent := FALSE;
        LoanerEntry.MODIFY;
        ServShipmentItemLine."Loaner No." := '';
        ServShipmentItemLine.MODIFY;
        CLEAR(ServLogMgt);
        ServLogMgt.LoanerReceived(LoanerEntry);
        ClearLoanerField(ServShptHeader."Order No.",ServShipmentItemLine."Line No.",LoanerEntry."Loaner No.");
      END ELSE
        ERROR(
          Text002,ServShipmentItemLine."Loaner No.",
          ServShipmentItemLine.FIELDCAPTION("No."),ServShipmentItemLine."No.");
    END;

    LOCAL PROCEDURE ClearLoanerField@4(OrderNo@1000 : Code[20];LineNo@1001 : Integer;LoanerNo@1006 : Code[20]);
    VAR
      ServShptHeader@1002 : Record 5990;
      ServShptItemLine@1003 : Record 5989;
      ServiceHeader@1004 : Record 5900;
      ServItemLine@1005 : Record 5901;
    BEGIN
      IF ServItemLine.GET(ServiceHeader."Document Type"::Order,OrderNo,LineNo) THEN
        IF ServItemLine."Loaner No." = LoanerNo THEN BEGIN
          ServItemLine."Loaner No." := '';
          ServItemLine.MODIFY;
        END;

      ServShptHeader.RESET;
      ServShptHeader.SETCURRENTKEY("Order No.");
      ServShptHeader.SETRANGE("Order No.",OrderNo);
      IF ServShptHeader.FIND('-') THEN
        REPEAT
          ServShptItemLine.RESET;
          IF ServShptItemLine.GET(ServShptHeader."No.",LineNo) THEN
            IF ServShptItemLine."Loaner No." = LoanerNo THEN BEGIN
              ServShptItemLine."Loaner No." := '';
              ServShptItemLine.MODIFY;
            END;
        UNTIL ServShptHeader.NEXT = 0;
    END;

    PROCEDURE Receive@3(VAR Loaner@1000 : Record 5913);
    VAR
      ServItemLine@1002 : Record 5901;
      LoanerEntry@1001 : Record 5914;
      ServShptItemLine@1004 : Record 5989;
      ServShptHeader@1003 : Record 5990;
    BEGIN
      WITH Loaner DO
        IF Lent THEN BEGIN
          CLEAR(LoanerEntry);
          LoanerEntry.SETCURRENTKEY("Document Type","Document No.","Loaner No.",Lent);
          LoanerEntry.SETRANGE("Document Type","Document Type");
          LoanerEntry.SETRANGE("Document No.","Document No.");
          LoanerEntry.SETRANGE("Loaner No.","No.");
          LoanerEntry.SETRANGE(Lent,TRUE);

          IF LoanerEntry.FINDFIRST THEN
            IF ServItemLine.GET(LoanerEntry."Document Type" - 1,LoanerEntry."Document No.",LoanerEntry."Service Item Line No.") THEN
              ReceiveLoaner(ServItemLine)
            ELSE BEGIN
              ServShptHeader.RESET;
              ServShptHeader.SETCURRENTKEY("Order No.");
              ServShptHeader.SETRANGE("Order No.",LoanerEntry."Document No.");
              IF ServShptHeader.FINDLAST THEN BEGIN
                ServShptItemLine.GET(ServShptHeader."No.",LoanerEntry."Service Item Line No.");
                ReceiveLoanerShipment(ServShptItemLine);
              END ELSE
                IF CONFIRM(Text006,FALSE,LoanerEntry."Document No.") THEN BEGIN
                  // receive loaner anyway
                  LoanerEntry."Date Received" := WORKDATE;
                  LoanerEntry."Time Received" := TIME;
                  LoanerEntry.Lent := FALSE;
                  LoanerEntry.MODIFY;
                END;
            END;
        END ELSE
          ERROR(Text001,"No.");
    END;

    BEGIN
    END.
  }
}

