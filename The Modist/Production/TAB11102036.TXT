OBJECT Table 11102036 OM - Project
{
  OBJECT-PROPERTIES
  {
    Date=19/11/15;
    Time=12:00:00 PM;
    Version List=OMA10.00;
  }
  PROPERTIES
  {
    DataPerCompany=No;
    DataCaptionFields=No.,Description;
    OnInsert=VAR
               Setup@1000 : Record 11102035;
               StatusHistory@1001 : Record 11102038;
               RepositoryMgt@1002 : Codeunit 11102067;
             BEGIN
               RepositoryMgt.Synchronize(FALSE, FALSE);

               Setup.CustomGet;

               IF "No." = '' THEN
                 "No." := GetNextNo(Setup."Project Nos. Format");

               TESTFIELD("No.");

               IF Description = '' THEN
                 VALIDATE(Description, FORMAT(WORKDATE, 0, STRSUBSTNO(Setup."Project Description", "No.")));

               IF "Project Type Code" = '' THEN
                 VALIDATE("Project Type Code", Setup."Default Project Type");

               "Date Time Changed" := CURRENTDATETIME;

               StatusHistory.UpdateDescription(0, "No.", Description);

               UpdateRepository(1);
             END;

    OnModify=VAR
               StatusHistory@1000 : Record 11102038;
             BEGIN
               IF xRec.Blocked AND NOT SkipCheckBlocked THEN
                 TESTFIELD(Blocked, FALSE);

               "Date Time Changed" := CURRENTDATETIME;

               StatusHistory.UpdateDescription(0, "No.", Description);

               UpdateRepository(2);
             END;

    OnDelete=VAR
               ProjectObject@1000 : Record 11102037;
               StatusHistory@1001 : Record 11102038;
               Modification@1002 : Record 11102042;
               DocumentLine@1003 : Record 11102046;
               Actions@1004 : Record 11102048;
               ProjectPermissions@1005 : Record 11102050;
               TransportProjectHistory@1006 : Record 11102066;
               RepositorySetup@1007 : Record 11102085;
               Test@1008 : Record 11102089;
               Comment@1009 : Record 11102095;
             BEGIN
               TESTFIELD(Blocked, FALSE);

               IF RepositorySetup.GET THEN
                 ;

               IF RepositorySetup."Use Repository" THEN BEGIN
                 "Repository Busy" := TRUE;
                 MODIFY;
               END;

               StatusHistory.SETCURRENTKEY("Table Name", "No.");
               StatusHistory.SETRANGE("Table Name", StatusHistory."Table Name"::Project);
               StatusHistory.SETRANGE("No.", "No.");
               StatusHistory.DELETEALL(TRUE);

               ProjectObject.SETRANGE("Project No.", "No.");
               ProjectObject.DELETEALL(TRUE);

               Comment.SETCURRENTKEY("Table Name", "No.");
               Comment.SETRANGE("Table Name", Comment."Table Name"::Project);
               Comment.SETRANGE("No.", "No.");
               Comment.DELETEALL(TRUE);

               DocumentLine.SETRANGE("Table Name", DocumentLine."Table Name"::Project);
               DocumentLine.SETRANGE("No.", "No.");
               DocumentLine.DELETEALL;

               Modification.SETCURRENTKEY("Assigned to Project No.");
               Modification.SETRANGE("Assigned to Project No.", "No.");
               Modification.MODIFYALL("Assigned to Project No.", 'DELETED', TRUE);

               Actions.SETRANGE(Type, Actions.Type::Project);
               Actions.SETRANGE("No.", "No.");
               Actions.DELETEALL(TRUE);

               ProjectPermissions.SETCURRENTKEY("Project No.");
               ProjectPermissions.SETRANGE("Project No.", "No.");
               ProjectPermissions.DELETEALL(TRUE);

               TransportProjectHistory.SETCURRENTKEY("Project No.");
               TransportProjectHistory.SETRANGE("Project No.", "No.");
               TransportProjectHistory.DELETEALL(TRUE);

               Test.SETRANGE(Type, Test.Type::Project);
               Test.SETRANGE("No.", "No.");
               Test.DELETEALL(TRUE);

               UpdateRepository(3);
             END;

    OnRename=BEGIN
               TESTFIELD(Blocked, FALSE);

               UpdateRepository(4);
             END;

    CaptionML=[DEU=Project;
               ENU=Project;
               ESP=Project;
               FRA=Project;
               NLD=OM Project;
               DEA=Project];
    LookupPageID=Page11102040;
    DrillDownPageID=Page11102040;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;AltSearchField=Search Description;
                                                   CaptionML=[DEU=No.;
                                                              ENU=No.;
                                                              ESP=No.;
                                                              FRA=No.;
                                                              NLD=Nr.;
                                                              DEA=No.] }
    { 2   ;   ;Description         ;Text100       ;OnValidate=BEGIN
                                                                IF ("Search Description" = UPPERCASE(xRec.Description)) OR ("Search Description" = '') THEN
                                                                  "Search Description" := Description;
                                                              END;

                                                   CaptionML=[DEU=Description;
                                                              ENU=Description;
                                                              ESP=Description;
                                                              FRA=Description;
                                                              NLD=Omschrijving;
                                                              DEA=Description] }
    { 3   ;   ;Search Description  ;Code100       ;CaptionML=[DEU=Search Description;
                                                              ENU=Search Description;
                                                              ESP=Search Description;
                                                              FRA=Search Description;
                                                              NLD=Zoeknaam;
                                                              DEA=Search Description] }
    { 4   ;   ;No. of Comments     ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("OM - Comment" WHERE (Table Name=CONST(Project),
                                                                                           No.=FIELD(No.)));
                                                   CaptionML=[DEU=No. of Comments;
                                                              ENU=No. of Comments;
                                                              ESP=No. of Comments;
                                                              FRA=No. of Comments;
                                                              NLD=Aantal opmerkingen;
                                                              DEA=No. of Comments];
                                                   Editable=No }
    { 5   ;   ;Project Flow Code   ;Code20        ;TableRelation="OM - Flow".Code WHERE (Table Name=CONST(Project));
                                                   OnValidate=VAR
                                                                Flow@1000 : Record 11102040;
                                                              BEGIN
                                                                IF "Status Code" = '' THEN
                                                                  IF Flow.GET(Flow."Table Name"::Project, "Project Flow Code") THEN
                                                                    IF Flow.DefaultStatus <> '' THEN
                                                                      VALIDATE("Status Code", Flow.DefaultStatus);
                                                              END;

                                                   CaptionML=[DEU=Project Flow Code;
                                                              ENU=Project Flow Code;
                                                              ESP=Project Flow Code;
                                                              FRA=Project Flow Code;
                                                              NLD=Projectverloop;
                                                              DEA=Project Flow Code] }
    { 6   ;   ;Status Code         ;Code20        ;TableRelation="OM - Status".Code WHERE (Table Name=CONST(Project));
                                                   OnValidate=VAR
                                                                StatusHistory@1000 : Record 11102038;
                                                                Status@1001 : Record 11102039;
                                                                FlowStatus@1002 : Record 11102041;
                                                                RoleFound@1003 : Boolean;
                                                              BEGIN
                                                                FlowStatus.SETRANGE("Table Name", FlowStatus."Table Name"::Project);
                                                                FlowStatus.SETRANGE("Flow Code", "Project Flow Code");
                                                                FlowStatus.SETRANGE("Status Code", "Status Code");
                                                                FlowStatus.SETFILTER(Role, '<>%1', '');
                                                                IF FlowStatus.FINDFIRST THEN BEGIN
                                                                  VALIDATE("Active Role", FlowStatus.Role);
                                                                  RoleFound := TRUE;

                                                                  IF FlowStatus."Block Table" THEN
                                                                    Blocked := TRUE;
                                                                END;

                                                                IF Status.GET(Status."Table Name"::Project, "Status Code") THEN BEGIN
                                                                  XRecStatusType := "Status Type";
                                                                  VALIDATE("Status Type", Status.Type);
                                                                  IF NOT RoleFound AND (Status."Role Code" <> '') THEN
                                                                    VALIDATE("Active Role", Status."Role Code");
                                                                END;

                                                                StatusHistory."Table Name" := StatusHistory."Table Name"::Project;
                                                                StatusHistory."No." := "No.";
                                                                StatusHistory."Status Code" := "Status Code";
                                                                StatusHistory.INSERT(TRUE);

                                                                SendEmails;
                                                              END;

                                                   CaptionML=[DEU=Status Code;
                                                              ENU=Status Code;
                                                              ESP=Status Code;
                                                              FRA=Status Code;
                                                              NLD=Status;
                                                              DEA=Status Code] }
    { 7   ;   ;Status Type         ;Option        ;OnValidate=VAR
                                                                ProjectObject@1000 : Record 11102037;
                                                                Transport@1001 : Record 11102043;
                                                                Test@1002 : Record 11102089;
                                                                Object@1003 : Record 2000000001;
                                                                ctNoObjectsAssigned@1004 : TextConst 'DEU=There are no objects assigned to this project.\Are you sure?;ENU=There are no objects assigned to this project.\Are you sure?;ESP=There are no objects assigned to this project.\Are you sure?;FRA=There are no objects assigned to this project.\Are you sure?;NLD=Er zijn geen objecten toegewezen aan dit project.\Weet u het zeker?;DEA=There are no objects assigned to this project.\Are you sure?';
                                                                ctNotCompiled@1005 : TextConst 'DEU=Object %1 %2 %3 is not compiled.\Are you sure?;ENU=Object %1 %2 %3 is not compiled.\Are you sure?;ESP=Object %1 %2 %3 is not compiled.\Are you sure?;FRA=Object %1 %2 %3 is not compiled.\Are you sure?;NLD=Object %1 %2 %3 is niet gecompileerd.\Weet u het zeker?;DEA=Object %1 %2 %3 is not compiled.\Are you sure?';
                                                              BEGIN
                                                                IF "Status Type" = "Status Type"::Developing THEN
                                                                  IF "Transport No." <> '' THEN BEGIN
                                                                    Transport.GET("Transport No.");
                                                                    IF Transport."Status Type" = Transport."Status Type"::Ready THEN
                                                                      TESTFIELD("Transport No.", '');
                                                                  END;

                                                                IF "Status Type" IN ["Status Type"::" ", "Status Type"::Ready] THEN
                                                                  RemoveActiveProjects;

                                                                IF "Status Type" = "Status Type"::Ready THEN
                                                                  IF (xRec."No." = "No.") AND
                                                                     (xRec."Status Type" = "Status Type"::Developing) OR
                                                                     (XRecStatusType = "Status Type"::Developing)
                                                                  THEN BEGIN

                                                                    Test.SETRANGE(Type, Test.Type::Project);
                                                                    Test.SETRANGE("No.", "No.");
                                                                    Test.SETFILTER("Codeunit No.", '<>0');
                                                                    Test.SETRANGE("Last Test Succeeded", FALSE);
                                                                    Test.SETFILTER("Run Frequency", '<>%1', Test."Run Frequency"::"Only Manual");
                                                                    IF Test.FINDFIRST THEN
                                                                      Test.FIELDERROR("Last Test Succeeded");

                                                                    ProjectObject.SETRANGE("Project No.", "No.");
                                                                    IF ProjectObject.FINDSET THEN
                                                                      REPEAT
                                                                        IF Object.GET(ProjectObject."Object Type", '', ProjectObject."Object No.") THEN
                                                                          IF NOT Object.Compiled THEN
                                                                            IF NOT CONFIRM(ctNotCompiled, TRUE, Object.Type, Object.ID, Object.Name) THEN
                                                                              ERROR('');
                                                                      UNTIL ProjectObject.NEXT = 0
                                                                    ELSE
                                                                      IF NOT CONFIRM(ctNoObjectsAssigned, TRUE) THEN
                                                                        ERROR('');

                                                                    IF "Check Guidelines" <> "Check Guidelines"::" " THEN
                                                                      CheckGuidelines(TRUE);

                                                                  END;
                                                              END;

                                                   CaptionML=[DEU=Status Type;
                                                              ENU=Status Type;
                                                              ESP=Status Type;
                                                              FRA=Status Type;
                                                              NLD=Statussoort;
                                                              DEA=Status Type];
                                                   OptionCaptionML=[DEU=" ,Developing,Ready";
                                                                    ENU=" ,Developing,Ready";
                                                                    ESP=" ,Developing,Ready";
                                                                    FRA=" ,Developing,Ready";
                                                                    NLD=" ,Ontwikkelen,Klaar";
                                                                    DEA=" ,Developing,Ready"];
                                                   OptionString=[ ,Developing,Ready] }
    { 8   ;   ;User Role 1         ;Code50        ;TableRelation="OM - User";
                                                   OnValidate=VAR
                                                                Setup@1000 : Record 11102035;
                                                              BEGIN
                                                                Setup.CustomGet;
                                                                IF "Active Role" = Setup."Role Shortcut 1" THEN
                                                                  VALIDATE("Active User", "User Role 1");
                                                              END;

                                                   CaptionML=[DEU=User Role 1;
                                                              ENU=User Role 1;
                                                              ESP=User Role 1;
                                                              FRA=User Role 1;
                                                              NLD=Gebruikersrol 1;
                                                              DEA=User Role 1];
                                                   CaptionClass=CaptionUserRole(1) }
    { 9   ;   ;User Role 2         ;Code50        ;TableRelation="OM - User";
                                                   OnValidate=VAR
                                                                Setup@1000 : Record 11102035;
                                                              BEGIN
                                                                Setup.CustomGet;
                                                                IF "Active Role" = Setup."Role Shortcut 2" THEN
                                                                  VALIDATE("Active User", "User Role 2");
                                                              END;

                                                   CaptionML=[DEU=User Role 2;
                                                              ENU=User Role 2;
                                                              ESP=User Role 2;
                                                              FRA=User Role 2;
                                                              NLD=Gebruikersrol 2;
                                                              DEA=User Role 2];
                                                   CaptionClass=CaptionUserRole(2) }
    { 10  ;   ;User Role 3         ;Code50        ;TableRelation="OM - User";
                                                   OnValidate=VAR
                                                                Setup@1000 : Record 11102035;
                                                              BEGIN
                                                                Setup.CustomGet;
                                                                IF "Active Role" = Setup."Role Shortcut 3" THEN
                                                                  VALIDATE("Active User", "User Role 3");
                                                              END;

                                                   CaptionML=[DEU=User Role 3;
                                                              ENU=User Role 3;
                                                              ESP=User Role 3;
                                                              FRA=User Role 3;
                                                              NLD=Gebruikersrol 3;
                                                              DEA=User Role 3];
                                                   CaptionClass=CaptionUserRole(3) }
    { 11  ;   ;User Role 4         ;Code50        ;TableRelation="OM - User";
                                                   OnValidate=VAR
                                                                Setup@1000 : Record 11102035;
                                                              BEGIN
                                                                Setup.CustomGet;
                                                                IF "Active Role" = Setup."Role Shortcut 4" THEN
                                                                  VALIDATE("Active User", "User Role 4");
                                                              END;

                                                   CaptionML=[DEU=User Role 4;
                                                              ENU=User Role 4;
                                                              ESP=User Role 4;
                                                              FRA=User Role 4;
                                                              NLD=Gebruikersrol 4;
                                                              DEA=User Role 4];
                                                   CaptionClass=CaptionUserRole(4) }
    { 12  ;   ;User Role 5         ;Code50        ;TableRelation="OM - User";
                                                   OnValidate=VAR
                                                                Setup@1000 : Record 11102035;
                                                              BEGIN
                                                                Setup.CustomGet;
                                                                IF "Active Role" = Setup."Role Shortcut 5" THEN
                                                                  VALIDATE("Active User", "User Role 5");
                                                              END;

                                                   CaptionML=[DEU=User Role 5;
                                                              ENU=User Role 5;
                                                              ESP=User Role 5;
                                                              FRA=User Role 5;
                                                              NLD=Gebruikersrol 5;
                                                              DEA=User Role 5];
                                                   CaptionClass=CaptionUserRole(5) }
    { 13  ;   ;Active User         ;Code50        ;TableRelation="OM - User";
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Active User Name");
                                                              END;

                                                   CaptionML=[DEU=Active User;
                                                              ENU=Active User;
                                                              ESP=Active User;
                                                              FRA=Active User;
                                                              NLD=Actieve gebruiker;
                                                              DEA=Active User] }
    { 14  ;   ;Active Role         ;Code20        ;TableRelation="OM - Role";
                                                   OnValidate=VAR
                                                                Setup@1000 : Record 11102035;
                                                              BEGIN
                                                                IF "Active Role" <> '' THEN BEGIN
                                                                  Setup.CustomGet;

                                                                  IF (Setup."Role Shortcut 1" = "Active Role") AND ("User Role 1" <> '') THEN
                                                                    VALIDATE("Active User", "User Role 1");

                                                                  IF (Setup."Role Shortcut 2" = "Active Role") AND ("User Role 2" <> '') THEN
                                                                    VALIDATE("Active User", "User Role 2");

                                                                  IF (Setup."Role Shortcut 3" = "Active Role") AND ("User Role 3" <> '') THEN
                                                                    VALIDATE("Active User", "User Role 3");

                                                                  IF (Setup."Role Shortcut 4" = "Active Role") AND ("User Role 4" <> '') THEN
                                                                    VALIDATE("Active User", "User Role 4");

                                                                  IF (Setup."Role Shortcut 5" = "Active Role") AND ("User Role 5" <> '') THEN
                                                                    VALIDATE("Active User", "User Role 5");
                                                                END;

                                                                CALCFIELDS("Active Role Name");
                                                              END;

                                                   CaptionML=[DEU=Active Role;
                                                              ENU=Active Role;
                                                              ESP=Active Role;
                                                              FRA=Active Role;
                                                              NLD=Actieve rol;
                                                              DEA=Active Role] }
    { 15  ;   ;Transport No.       ;Code20        ;TableRelation="OM - Transport";
                                                   OnValidate=VAR
                                                                ProjectObject@1000 : Record 11102037;
                                                                Modification@1001 : Record 11102042;
                                                                Transport@1002 : Record 11102043;
                                                                Actions@1003 : Record 11102048;
                                                                ActionField@1004 : Record 11102049;
                                                                Test@1005 : Record 11102089;
                                                                TestParameter@1006 : Record 11102090;
                                                                ctConfirmAlreadyTransported@1007 : TextConst 'DEU=This project has already been transported.\Are you sure?;ENU=This project has already been transported.\Are you sure?;ESP=This project has already been transported.\Are you sure?;FRA=This project has already been transported.\Are you sure?;NLD=Dit project is al getransporteerd.\Weet u het zeker?;DEA=This project has already been transported.\Are you sure?';
                                                              BEGIN
                                                                IF ("Transport No." = '') AND (xRec."Transport No." <> '') THEN
                                                                  IF Transport.GET(xRec."Transport No.") THEN BEGIN
                                                                    IF Transport.Transported THEN
                                                                      IF NOT CONFIRM(ctConfirmAlreadyTransported, TRUE) THEN
                                                                        ERROR('');
                                                                    ProjectObject.SETRANGE("Project No.", "No.");
                                                                    ProjectObject.SETFILTER("Transport No.", '<>%1', '');
                                                                    ProjectObject.MODIFYALL("Transport No.", '');

                                                                    Modification.SETCURRENTKEY("Assigned to Project No.");
                                                                    Modification.SETRANGE("Assigned to Project No.", "No.");
                                                                    Modification.SETFILTER("Transport No.", '<>%1', '');
                                                                    Modification.MODIFYALL("Transport No.", '');

                                                                    Actions.SETRANGE(Type, Actions.Type::Project);
                                                                    Actions.SETRANGE("No.", "No.");
                                                                    Actions.SETFILTER("Transport No.", '<>%1', '');
                                                                    Actions.MODIFYALL("Transport No.", '');

                                                                    ActionField.SETRANGE(Type, Actions.Type::Project);
                                                                    ActionField.SETRANGE("No.", "No.");
                                                                    ActionField.SETFILTER("Transport No.", '<>%1', '');
                                                                    ActionField.MODIFYALL("Transport No.", '');

                                                                    Test.SETRANGE(Type, Actions.Type::Project);
                                                                    Test.SETRANGE("No.", "No.");
                                                                    Test.SETFILTER("Transport No.", '<>%1', '');
                                                                    Test.MODIFYALL("Transport No.", '');

                                                                    TestParameter.SETRANGE("Test Type", Actions.Type::Project);
                                                                    TestParameter.SETRANGE("Test No.", "No.");
                                                                    TestParameter.SETFILTER("Transport No.", '<>%1', '');
                                                                    TestParameter.MODIFYALL("Transport No.", '');

                                                                  END;

                                                                IF "Transport No." <> '' THEN BEGIN

                                                                  Transport.GET("Transport No.");
                                                                  IF Transport."Status Type" = Transport."Status Type"::Ready THEN
                                                                    TESTFIELD("Status Type", "Status Type"::Ready);

                                                                  ProjectObject.SETRANGE("Project No.", "No.");
                                                                  ProjectObject.SETRANGE("Transport No.", '');
                                                                  ProjectObject.MODIFYALL("Transport No.", "Transport No.");

                                                                  Modification.SETCURRENTKEY("Assigned to Project No.");
                                                                  Modification.SETRANGE("Assigned to Project No.", "No.");
                                                                  Modification.SETRANGE("Transport No.", '');
                                                                  Modification.MODIFYALL("Transport No.", "Transport No.");

                                                                  Actions.SETRANGE(Type, Actions.Type::Project);
                                                                  Actions.SETRANGE("No.", "No.");
                                                                  Actions.SETRANGE("Transport No.", '');
                                                                  Actions.MODIFYALL("Transport No.", "Transport No.");

                                                                  ActionField.SETRANGE(Type, Actions.Type::Project);
                                                                  ActionField.SETRANGE("No.", "No.");
                                                                  ActionField.SETRANGE("Transport No.", '');
                                                                  ActionField.MODIFYALL("Transport No.", "Transport No.");

                                                                  Test.SETRANGE(Type, Actions.Type::Project);
                                                                  Test.SETRANGE("No.", "No.");
                                                                  Test.SETRANGE("Transport No.", '');
                                                                  Test.MODIFYALL("Transport No.", "Transport No.");

                                                                  TestParameter.SETRANGE("Test Type", Actions.Type::Project);
                                                                  TestParameter.SETRANGE("Test No.", "No.");
                                                                  TestParameter.SETRANGE("Transport No.", '');
                                                                  TestParameter.MODIFYALL("Transport No.", "Transport No.");

                                                                END;
                                                              END;

                                                   CaptionML=[DEU=Transport No.;
                                                              ENU=Transport No.;
                                                              ESP=Transport No.;
                                                              FRA=Transport No.;
                                                              NLD=Transportnr.;
                                                              DEA=Transport No.] }
    { 16  ;   ;Transported         ;Boolean       ;OnValidate=VAR
                                                                Flow@1000 : Record 11102040;
                                                                Transport@1001 : Record 11102043;
                                                                TransportType@1002 : Record 11102098;
                                                              BEGIN
                                                                IF Flow.GET(Flow."Table Name"::Project, "Project Flow Code") THEN
                                                                  IF Flow."Transport Status" <> '' THEN
                                                                    VALIDATE("Status Code", Flow."Transport Status");

                                                                IF Transport.GET("Transport No.") THEN
                                                                  IF TransportType.GET(Transport."Transport Type Code") THEN
                                                                    IF TransportType."Block Project at Transport" THEN
                                                                      VALIDATE(Blocked, TRUE);
                                                              END;

                                                   CaptionML=[DEU=Transported;
                                                              ENU=Transported;
                                                              ESP=Transported;
                                                              FRA=Transported;
                                                              NLD=Getransporteerd;
                                                              DEA=Transported];
                                                   Editable=No }
    { 17  ;   ;Priority            ;Text30        ;CaptionML=[DEU=Priority;
                                                              ENU=Priority;
                                                              ESP=Priority;
                                                              FRA=Priority;
                                                              NLD=Prioriteit;
                                                              DEA=Priority] }
    { 18  ;   ;Promised Transport Date;Date       ;CaptionML=[DEU=Promised Transport Date;
                                                              ENU=Promised Transport Date;
                                                              ESP=Promised Transport Date;
                                                              FRA=Promised Transport Date;
                                                              NLD=Afgesproken transportdatum;
                                                              DEA=Promised Transport Date] }
    { 19  ;   ;Estimated Duration  ;Duration      ;CaptionML=[DEU=Estimated Duration;
                                                              ENU=Estimated Duration;
                                                              ESP=Estimated Duration;
                                                              FRA=Estimated Duration;
                                                              NLD=Geschatte tijdsduur;
                                                              DEA=Estimated Duration] }
    { 20  ;   ;Actual Duration     ;Duration      ;CaptionML=[DEU=Actual Duration;
                                                              ENU=Actual Duration;
                                                              ESP=Actual Duration;
                                                              FRA=Actual Duration;
                                                              NLD=Werkelijke tijdsduur;
                                                              DEA=Actual Duration] }
    { 21  ;   ;Date Time Changed   ;DateTime      ;CaptionML=[DEU=Date Time Changed;
                                                              ENU=Date Time Changed;
                                                              ESP=Date Time Changed;
                                                              FRA=Date Time Changed;
                                                              NLD=Datum tijd gewijzigd;
                                                              DEA=Date Time Changed] }
    { 22  ;   ;No. of Actions Before;Integer      ;FieldClass=FlowField;
                                                   CalcFormula=Count("OM - Action" WHERE (Type=CONST(Project),
                                                                                          No.=FIELD(No.),
                                                                                          Sub Type=CONST(Before)));
                                                   CaptionML=[DEU=No. of Actions Before;
                                                              ENU=No. of Actions Before;
                                                              ESP=No. of Actions Before;
                                                              FRA=No. of Actions Before;
                                                              NLD=Aantal acties vooraf;
                                                              DEA=No. of Actions Before];
                                                   Editable=No }
    { 23  ;   ;No. of Actions After;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("OM - Action" WHERE (Type=CONST(Project),
                                                                                          No.=FIELD(No.),
                                                                                          Sub Type=CONST(After)));
                                                   CaptionML=[DEU=No. of Actions After;
                                                              ENU=No. of Actions After;
                                                              ESP=No. of Actions After;
                                                              FRA=No. of Actions After;
                                                              NLD=Aantal acties achteraf;
                                                              DEA=No. of Actions After];
                                                   Editable=No }
    { 24  ;   ;Blocked             ;Boolean       ;OnValidate=VAR
                                                                Transport@1000 : Record 11102043;
                                                                TransportType@1001 : Record 11102098;
                                                              BEGIN
                                                                IF NOT Blocked THEN
                                                                  IF Transport.GET("Transport No.") THEN
                                                                    IF TransportType.GET(Transport."Transport Type Code") THEN
                                                                      TransportType.TESTFIELD("Block Project at Transport", FALSE);
                                                              END;

                                                   CaptionML=[DEU=Blocked;
                                                              ENU=Blocked;
                                                              ESP=Blocked;
                                                              FRA=Blocked;
                                                              NLD=Geblokkeerd;
                                                              DEA=Blocked] }
    { 25  ;   ;No. of Documents    ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("OM - Document Line" WHERE (Table Name=CONST(Project),
                                                                                                 No.=FIELD(No.)));
                                                   CaptionML=[DEU=Document;
                                                              ENU=Document;
                                                              ESP=Document;
                                                              FRA=Document;
                                                              NLD=Aantal documenten;
                                                              DEA=Document];
                                                   Editable=No }
    { 26  ;   ;Path                ;Text100       ;CaptionML=[DEU=Path;
                                                              ENU=Path;
                                                              ESP=Path;
                                                              FRA=Path;
                                                              NLD=Pad;
                                                              DEA=Path] }
    { 27  ;   ;Url                 ;Text100       ;CaptionML=[DEU=Url;
                                                              ENU=Url;
                                                              ESP=Url;
                                                              FRA=Url;
                                                              NLD=Url;
                                                              DEA=Url] }
    { 28  ;   ;Repository Busy     ;Boolean       ;CaptionML=[DEU=Repository Busy;
                                                              ENU=Repository Busy;
                                                              ESP=Repository Busy;
                                                              FRA=Repository Busy;
                                                              NLD=Repository bezig;
                                                              DEA=Repository Busy] }
    { 29  ;   ;No. of Tests        ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("OM - Test" WHERE (Type=CONST(Project),
                                                                                        No.=FIELD(No.)));
                                                   CaptionML=[DEU=No. of Tests;
                                                              ENU=No. of Tests;
                                                              ESP=No. of Tests;
                                                              FRA=No. of Tests;
                                                              NLD=Aantal testen;
                                                              DEA=No. of Tests];
                                                   Editable=No }
    { 30  ;   ;No. of Objects      ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("OM - Project Object" WHERE (Project No.=FIELD(No.)));
                                                   CaptionML=[DEU=No. of Objects;
                                                              ENU=No. of Objects;
                                                              ESP=No. of Objects;
                                                              FRA=No. of Objects;
                                                              NLD=Aantal objecten;
                                                              DEA=No. of Objects];
                                                   Editable=No }
    { 32  ;   ;Project Type Code   ;Code20        ;TableRelation="OM - Project Type";
                                                   OnValidate=VAR
                                                                Setup@1000 : Record 11102035;
                                                                User@1001 : Record 11102056;
                                                                ProjectType@1002 : Record 11102097;
                                                              BEGIN
                                                                IF ProjectType.GET("Project Type Code") THEN BEGIN

                                                                  VALIDATE("Project Flow Code", ProjectType."Project Flow Code");
                                                                  VALIDATE("User Role 1", ProjectType."User Role 1");
                                                                  VALIDATE("User Role 2", ProjectType."User Role 2");
                                                                  VALIDATE("User Role 3", ProjectType."User Role 3");
                                                                  VALIDATE("User Role 4", ProjectType."User Role 4");
                                                                  VALIDATE("User Role 5", ProjectType."User Role 5");

                                                                  Setup.CustomGet;

                                                                  IF User.GetActiveUser(FALSE) THEN
                                                                    IF User."Default Role" <> '' THEN BEGIN
                                                                      IF (User."Default Role" = Setup."Role Shortcut 1") AND ("User Role 1" = '') THEN
                                                                        VALIDATE("User Role 1", User.Code);
                                                                      IF (User."Default Role" = Setup."Role Shortcut 2") AND ("User Role 2" = '') THEN
                                                                        VALIDATE("User Role 2", User.Code);
                                                                      IF (User."Default Role" = Setup."Role Shortcut 3") AND ("User Role 3" = '') THEN
                                                                        VALIDATE("User Role 3", User.Code);
                                                                      IF (User."Default Role" = Setup."Role Shortcut 4") AND ("User Role 4" = '') THEN
                                                                        VALIDATE("User Role 4", User.Code);
                                                                      IF (User."Default Role" = Setup."Role Shortcut 5") AND ("User Role 5" = '') THEN
                                                                        VALIDATE("User Role 5", User.Code);
                                                                    END;

                                                                  "Deleted Field 33" := ProjectType."Deleted Field 10";
                                                                END;
                                                              END;

                                                   CaptionML=[DEU=Project Type Code;
                                                              ENU=Project Type Code;
                                                              ESP=Project Type Code;
                                                              FRA=Project Type Code;
                                                              NLD=Projectsoort;
                                                              DEA=Project Type Code] }
    { 33  ;   ;Deleted Field 33    ;Boolean       ;CaptionML=[DEU=Deleted Field 33;
                                                              ENU=Deleted Field 33;
                                                              ESP=Deleted Field 33;
                                                              FRA=Deleted Field 33;
                                                              NLD=Deleted Field 33;
                                                              DEA=Deleted Field 33] }
    { 34  ;   ;Main Project No.    ;Code20        ;TableRelation="OM - Project";
                                                   CaptionML=[DEU=Main Project No.;
                                                              ENU=Main Project No.;
                                                              ESP=Main Project No.;
                                                              FRA=Main Project No.;
                                                              NLD=Hoofdprojectnr.;
                                                              DEA=Main Project No.] }
    { 35  ;   ;Active User Name    ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("OM - User".Name WHERE (Code=FIELD(Active User)));
                                                   CaptionML=[DEU=Active User Name;
                                                              ENU=Active User Name;
                                                              ESP=Active User Name;
                                                              FRA=Active User Name;
                                                              NLD=Actieve gebruikersnaam;
                                                              DEA=Active User Name];
                                                   Editable=No }
    { 36  ;   ;Active Role Name    ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("OM - Role".Description WHERE (Code=FIELD(Active Role)));
                                                   CaptionML=[DEU=Active Role Name;
                                                              ENU=Active Role Name;
                                                              ESP=Active Role Name;
                                                              FRA=Active Role Name;
                                                              NLD=Actieve rolnaam;
                                                              DEA=Active Role Name];
                                                   Editable=No }
    { 37  ;   ;No. of Modifications;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("OM - Modification" WHERE (Assigned to Project No.=FIELD(No.)));
                                                   CaptionML=[DEU=No. of Modifications;
                                                              ENU=No. of Modifications;
                                                              ESP=No. of Modifications;
                                                              FRA=No. of Modifications;
                                                              NLD=Aantal wijzigingen;
                                                              DEA=No. of Modifications];
                                                   Editable=No }
    { 38  ;   ;No. of Permissions  ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("OM - Project Permissions" WHERE (Project No.=FIELD(No.)));
                                                   CaptionML=[DEU=No. of Permissions;
                                                              ENU=No. of Permissions;
                                                              ESP=No. of Permissions;
                                                              FRA=No. of Permissions;
                                                              NLD=Aantal toegangsrechten;
                                                              DEA=No. of Permissions];
                                                   Editable=No }
    { 39  ;   ;Check Guidelines    ;Option        ;CaptionML=[DEU=Check Guidelines;
                                                              ENU=Check Guidelines;
                                                              ESP=Check Guidelines;
                                                              FRA=Check Guidelines;
                                                              NLD=Controleer richtlijnen;
                                                              DEA=Check Guidelines];
                                                   OptionCaptionML=[DEU=" ,All Checks,Transport Checks";
                                                                    ENU=" ,All Checks,Transport Checks";
                                                                    ESP=" ,All Checks,Transport Checks";
                                                                    FRA=" ,All Checks,Transport Checks";
                                                                    NLD=" ,Alle controles,Transportcontroles";
                                                                    DEA=" ,All Checks,Transport Checks"];
                                                   OptionString=[ ,All Checks,Transport Checks] }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Transport No.                            }
    {    ;Transported                              }
    {    ;Status Type                              }
    {    ;Priority                                 }
    {    ;Promised Transport Date                  }
    {    ;Date Time Changed                        }
    {    ;Active User                              }
    {    ;Active Role                              }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      XRecStatusType@1000 : Integer;
      SkipCheckBlocked@1001 : Boolean;

    PROCEDURE NextStatus@45();
    VAR
      Status@1000 : Record 11102039;
    BEGIN
      GetNextStatus(Status);
      IF SelectStatus(Status) THEN
        SetStatus(Status);
    END;

    PROCEDURE GetNextStatus@44(VAR Status@1000 : Record 11102039);
    VAR
      FlowStatus@1001 : Record 11102041;
    BEGIN
      FlowStatus.SETRANGE("Table Name", FlowStatus."Table Name"::Project);
      FlowStatus.SETRANGE("Flow Code", "Project Flow Code");
      FlowStatus.SETRANGE("Status Code", "Status Code");
      FlowStatus.FINDFIRST;

      IF FlowStatus."Next Status" = '' THEN BEGIN
        FlowStatus.SETRANGE("Status Code");
        FlowStatus.NEXT(1);
        Status.GET(Status."Table Name"::Project, FlowStatus."Status Code");
        Status.SETRECFILTER;
      END ELSE BEGIN
        Status.SETRANGE("Table Name", Status."Table Name"::Project);
        Status.SETFILTER(Code, FlowStatus."Next Status");
      END;
    END;

    PROCEDURE PreviousStatus@43();
    VAR
      Status@1000 : Record 11102039;
    BEGIN
      GetPreviousStatus(Status);
      IF SelectStatus(Status) THEN
        SetStatus(Status);
    END;

    PROCEDURE GetPreviousStatus@2(VAR Status@1000 : Record 11102039);
    VAR
      FlowStatus@1001 : Record 11102041;
    BEGIN
      FlowStatus.SETRANGE("Table Name", FlowStatus."Table Name"::Project);
      FlowStatus.SETRANGE("Flow Code", "Project Flow Code");
      FlowStatus.SETRANGE("Status Code", "Status Code");
      FlowStatus.FINDFIRST;

      IF FlowStatus."Previous Status" = '' THEN BEGIN
        FlowStatus.SETRANGE("Status Code");
        FlowStatus.NEXT(-1);
        Status.GET(Status."Table Name"::Project, FlowStatus."Status Code");
        Status.SETRECFILTER;
      END ELSE BEGIN
        Status.SETRANGE("Table Name", Status."Table Name"::Project);
        Status.SETFILTER(Code, FlowStatus."Previous Status");
      END;
    END;

    PROCEDURE SelectStatus@1(VAR Status@1000 : Record 11102039) : Boolean;
    VAR
      StatusList@1001 : Page 11102045;
    BEGIN
      IF Status.COUNT = 1 THEN BEGIN
        Status.FINDFIRST;
        EXIT(TRUE);
      END;

      StatusList.SETTABLEVIEW(Status);
      StatusList.LOOKUPMODE := TRUE;
      StatusList.EDITABLE := FALSE;
      IF StatusList.RUNMODAL = ACTION::LookupOK THEN BEGIN
        StatusList.GETRECORD(Status);
        EXIT(TRUE);
      END;
    END;

    PROCEDURE SetStatus@42(VAR Status@1000 : Record 11102039);
    BEGIN
      VALIDATE("Status Code", Status.Code);
      MODIFY(TRUE);
    END;

    PROCEDURE AddObjects@3();
    VAR
      Object@1000 : Record 2000000001;
      ObjectList@1001 : Page 11102067;
    BEGIN
      TESTFIELD("Status Type", "Status Type"::Developing);

      Object.FILTERGROUP(2);
      Object.SETFILTER(Type, '<>%1', Object.Type::TableData);
      Object.FILTERGROUP(0);

      ObjectList.SETTABLEVIEW(Object);

      ObjectList.LOOKUPMODE := TRUE;

      IF ObjectList.RUNMODAL = ACTION::LookupOK THEN BEGIN
        ObjectList.GetSelectionFilter(Object);
        AddObjectRange(Object);
      END;
    END;

    PROCEDURE AddObjectRange@4(VAR Object@1000 : Record 2000000001);
    VAR
      ProjectObject@1001 : Record 11102037;
      RepositorySetup@1002 : Record 11102085;
      Progressbar@1003 : Codeunit 11102044;
      ctAddingObjects@1004 : TextConst 'DEU=Adding objects...;ENU=Adding objects...;ESP=Adding objects...;FRA=Adding objects...;NLD=Objecten toevoegen...;DEA=Adding objects...';
    BEGIN
      IF RepositorySetup.GET THEN
        ;

      IF RepositorySetup."Use Repository" THEN BEGIN
        "Repository Busy" := TRUE;
        MODIFY;
      END;

      Progressbar.Open(ctAddingObjects, 1);
      Progressbar.BarSize := Object.COUNT;

      IF Object.FINDSET THEN
        REPEAT
          Progressbar.Text1Object := Object;
          Progressbar.AddToBar(1);

          IF NOT ProjectObject.GET("No.", Object.Type, Object.ID) THEN BEGIN
            ProjectObject."Project No." := "No.";
            ProjectObject."Object Type" := Object.Type;
            ProjectObject."Object No." := Object.ID;
            ProjectObject.INSERT(TRUE);
          END;
        UNTIL Object.NEXT = 0;

      Progressbar.Close;

      IF RepositorySetup."Use Repository" THEN BEGIN
        "Repository Busy" := FALSE;
        MODIFY(TRUE);
      END;
    END;

    PROCEDURE ShowCard@5();
    VAR
      ProjectCard@1000 : Page 11102038;
    BEGIN
      ProjectCard.SETRECORD(Rec);
      ProjectCard.RUN;
    END;

    PROCEDURE ShowHistory@6();
    VAR
      StatusHistory@1000 : Record 11102038;
      FormStatusHistory@1001 : Page 11102044;
    BEGIN
      StatusHistory.SETCURRENTKEY("Table Name", "No.");

      StatusHistory.FILTERGROUP(2);
      StatusHistory.SETRANGE("Table Name", StatusHistory."Table Name"::Project);
      StatusHistory.SETRANGE("No.", "No.");
      StatusHistory.FILTERGROUP(0);

      FormStatusHistory.SETTABLEVIEW(StatusHistory);
      FormStatusHistory.RUN;
    END;

    PROCEDURE ShowObjects@7();
    VAR
      ProjectObject@1000 : Record 11102037;
      ProjectObjects@1001 : Page 11102042;
    BEGIN
      ProjectObject.FILTERGROUP(2);
      ProjectObject.SETRANGE("Project No.", "No.");
      ProjectObject.FILTERGROUP(0);

      ProjectObjects.SETTABLEVIEW(ProjectObject);
      ProjectObjects.RUN;
    END;

    LOCAL PROCEDURE RemoveActiveProjects@8();
    VAR
      User@1000 : Record 11102056;
      User2@1001 : Record 11102056;
      Mgt@1002 : Codeunit 11102035;
      AssignModificationsMgt@1003 : Codeunit 11102036;
      ActiveProject@1004 : Code[20];
      AssignType@1005 : Option;
    BEGIN
      User.SETCURRENTKEY("Active Project No.");
      User.SETRANGE("Active Project No.", "No.");
      IF User.FINDSET THEN
        REPEAT

          User2 := User;
          User2."Active Project No." := '';
          IF User2."Assign Mode" = User2."Assign Mode"::"Active Project" THEN
            User2."Assign Mode" := User2."Assign Mode"::Save;
          User2.MODIFY;

          IF User2."Short User Id" = Mgt.ShortUserId THEN BEGIN
            AssignModificationsMgt.GetSettings(AssignType, ActiveProject);
            AssignModificationsMgt.SetSettings(User2."Assign Mode", '', FALSE);
          END;

        UNTIL User.NEXT = 0;
    END;

    LOCAL PROCEDURE GetNextNo@9(NosFormat@1000 : Code[20]) : Code[20];
    VAR
      Project@1001 : Record 11102036;
      LastNo@1002 : Code[20];
      NewNo@1003 : Code[20];
      SearchFilter@1004 : Code[20];
      EndPos@1005 : Integer;
      i@1006 : Integer;
      StartPos@1007 : Integer;
      IsDigit@1008 : Boolean;
      NoEnded@1009 : Boolean;
    BEGIN
      WITH Project DO
        IF NosFormat <> '' THEN BEGIN
          i := STRLEN(NosFormat);
          REPEAT
            IsDigit := NosFormat[i] IN ['0'..'9'];
            IF IsDigit AND NOT NoEnded THEN BEGIN
              SearchFilter := '?' + SearchFilter;
              IF EndPos = 0 THEN
                EndPos := i;
              IF NOT NoEnded THEN
                StartPos := i;
            END ELSE BEGIN
              SearchFilter := FORMAT(NosFormat[i]) + SearchFilter;
              IF EndPos <> 0 THEN
                NoEnded := TRUE;
            END;
            i -= 1;
          UNTIL i = 0;
          SETFILTER("No.", SearchFilter);
          IF FINDLAST THEN BEGIN
            LastNo := COPYSTR("No.", StartPos, EndPos - StartPos + 1);
            NewNo := INCSTR(LastNo);
            EXIT(DELSTR("No.", StartPos) + NewNo + COPYSTR("No.", EndPos + 1));
          END ELSE
            EXIT(NosFormat);
        END;
    END;

    PROCEDURE ShowActionsBefore@10();
    VAR
      ActionWorksheet@1000 : Page 11102060;
      BeforeAfter@1001 : ' ,Before,After';
    BEGIN
      ActionWorksheet.SetProject(Rec, BeforeAfter::Before);
      ActionWorksheet.RUN;
    END;

    PROCEDURE ShowActionsAfter@11();
    VAR
      ActionWorksheet@1000 : Page 11102060;
      BeforeAfter@1001 : ' ,Before,After';
    BEGIN
      ActionWorksheet.SetProject(Rec, BeforeAfter::After);
      ActionWorksheet.RUN;
    END;

    PROCEDURE ShowTests@12();
    VAR
      TestWorksheet@1000 : Page 11102125;
    BEGIN
      TestWorksheet.SetProject(Rec);
      TestWorksheet.RUN;
    END;

    PROCEDURE CheckAllCommentsPresent@13();
    VAR
      CommentType@1000 : Record 11102044;
      Comment@1001 : Record 11102095;
      cNoComment@1002 : TextConst 'DEU="There is no %1 present in %2 %3=''%4'', %5 %6=''%7''.";ENU="There is no %1 present in %2 %3=''%4'', %5 %6=''%7''.";ESP="There is no %1 present in %2 %3=''%4'', %5 %6=''%7''.";FRA="There is no %1 present in %2 %3=''%4'', %5 %6=''%7''.";NLD="Er is geen %1 aanwezig in %2 %3=''%4'', %5 %6=''%7''.";DEA="There is no %1 present in %2 %3=''%4'', %5 %6=''%7''."';
    BEGIN
      CommentType.SETCURRENTKEY("Table Name", Order);
      CommentType.SETRANGE("Table Name", CommentType."Table Name"::Project);
      CommentType.SETRANGE(Mandatory, TRUE);
      IF CommentType.FINDSET THEN
        REPEAT
          Comment.SETCURRENTKEY("Table Name", "No.");
          Comment.SETRANGE("Table Name", Comment."Table Name"::Project);
          Comment.SETRANGE("No.", "No.");
          Comment.SETRANGE(Type, CommentType.Code);
          IF Comment.ISEMPTY THEN
            ERROR(cNoComment,
              Comment.TABLECAPTION,
              TABLECAPTION, FIELDCAPTION("No."), "No.",
              CommentType.TABLECAPTION, CommentType.FIELDCAPTION(Code), CommentType.Code);
        UNTIL CommentType.NEXT = 0;
    END;

    PROCEDURE AssignCancelled@14() : Boolean;
    VAR
      ctConfirmAlreadyTransported@1000 : TextConst 'DEU=This project has already been transported.\Are you sure?;ENU=This project has already been transported.\Are you sure?;ESP=This project has already been transported.\Are you sure?;FRA=This project has already been transported.\Are you sure?;NLD=Dit project is al getransporteerd.\Weet u het zeker?;DEA=This project has already been transported.\Are you sure?';
      ctConfirmNotDeveloping@1001 : TextConst 'DEU=This project does not have the status developing.\Are you sure?;ENU=This project does not have the status developing.\Are you sure?;ESP=This project does not have the status developing.\Are you sure?;FRA=This project does not have the status developing.\Are you sure?;NLD=Deze project heeft niet de status ontwikkeling.\Weet u het zeker?;DEA=This project does not have the status developing.\Are you sure?';
    BEGIN
      TESTFIELD(Blocked, FALSE);
      CASE TRUE OF
        Transported :
          IF NOT CONFIRM(ctConfirmAlreadyTransported, TRUE) THEN
            EXIT(TRUE);
        "Status Type" <> "Status Type"::Developing :
          IF NOT CONFIRM(ctConfirmNotDeveloping, TRUE) THEN
            EXIT(TRUE);
      END;
    END;

    PROCEDURE SetSkipCheckBlocked@15(NewValue@1000 : Boolean);
    BEGIN
      SkipCheckBlocked := NewValue;
    END;

    PROCEDURE ProjectInHourRegistration@16() : Text;
    VAR
      ctProjectDescription@1000 : TextConst 'DEU=%1 - %2;ENU=%1 - %2;ESP=%1 - %2;FRA=%1 - %2;NLD=%1 - %2;DEA=%1 - %2';
    BEGIN
      IF "No." <> '' THEN
        EXIT(STRSUBSTNO(ctProjectDescription, "No.", Description));
    END;

    PROCEDURE MarkObjects@17();
    VAR
      ProjectObject@1000 : Record 11102037;
      Object@1001 : Record 2000000001;
      VersionControl@1002 : Codeunit 11102040;
    BEGIN
      VersionControl.CheckMarkLock;

      ProjectObject.SETRANGE("Project No.", "No.");
      IF ProjectObject.FINDSET THEN
        REPEAT
          IF Object.GET(ProjectObject."Object Type", '', ProjectObject."Object No.") THEN
            VersionControl.MarkObject(Object, TRUE);
        UNTIL ProjectObject.NEXT = 0;
    END;

    PROCEDURE RemoveMarks@18();
    VAR
      ProjectObject@1000 : Record 11102037;
      Object@1001 : Record 2000000001;
      VersionControl@1002 : Codeunit 11102040;
    BEGIN
      ProjectObject.SETRANGE("Project No.", "No.");
      IF ProjectObject.FINDSET THEN
        REPEAT
          IF Object.GET(ProjectObject."Object Type", '', ProjectObject."Object No.") THEN
            VersionControl.RemoveObjectMark(Object);
        UNTIL ProjectObject.NEXT = 0;

      VersionControl.RemoveMarkLock(TRUE);
    END;

    PROCEDURE LookupStatusCode@19(VAR Text@1000 : Text) : Boolean;
    VAR
      Status@1001 : Record 11102039;
      StatusList@1002 : Page 11102045;
    BEGIN
      Status.FILTERGROUP(10);
      Status.SETRANGE("Table Name", Status."Table Name"::Project);
      Status.FILTERGROUP(0);

      IF "Project Flow Code" <> '' THEN BEGIN
        Status.SETRANGE("Flow Code Filter", "Project Flow Code");
        Status.SETRANGE("In Flow", TRUE);
      END;

      StatusList.SETTABLEVIEW(Status);
      IF Status.GET(Status."Table Name"::Project, "Status Code") THEN
        StatusList.SETRECORD(Status);

      StatusList.LOOKUPMODE := TRUE;
      StatusList.EDITABLE := FALSE;
      IF StatusList.RUNMODAL = ACTION::LookupOK THEN BEGIN
        StatusList.GETRECORD(Status);
        Text := Status.Code;
        EXIT(TRUE);
      END;
    END;

    PROCEDURE ResetStatus@20();
    VAR
      Flow@1000 : Record 11102040;
      ctResetStatus@1001 : TextConst 'DEU=This project has already been transported.\Are you sure?;ENU=This project has already been transported.\Are you sure?;ESP=This project has already been transported.\Are you sure?;FRA=This project has already been transported.\Are you sure?;NLD=Dit project is al getransporteerd.\Weet u het zeker?;DEA=This project has already been transported.\Are you sure?';
    BEGIN
      TESTFIELD("Transport No.", '');

      IF Transported THEN
        IF NOT CONFIRM(ctResetStatus, TRUE) THEN
          EXIT;

      Transported := FALSE;

      CheckUser("User Role 1");
      CheckUser("User Role 2");
      CheckUser("User Role 3");
      CheckUser("User Role 4");
      CheckUser("User Role 5");
      CheckUser("Active User");

      IF Flow.GET(Flow."Table Name"::Project, "Project Flow Code") THEN
        VALIDATE("Status Code", Flow.DefaultStatus);

      MODIFY(TRUE);
    END;

    LOCAL PROCEDURE CheckUser@41(VAR UserCode@1000 : Code[50]);
    VAR
      User@1001 : Record 11102056;
    BEGIN
      IF NOT User.GET(UserCode) THEN
        UserCode := '';
    END;

    PROCEDURE TransportHistory@21() ExitValue : Text;
    VAR
      TransportProjectHistory@1000 : Record 11102066;
    BEGIN
      TransportProjectHistory.SETCURRENTKEY("Project No.");
      TransportProjectHistory.SETRANGE("Project No.", "No.");
      IF TransportProjectHistory.FINDSET THEN
        REPEAT
          IF STRLEN(ExitValue + ', ' + TransportProjectHistory."Transport No.") < 1024 THEN
            IF ExitValue = '' THEN
              ExitValue := TransportProjectHistory."Transport No."
            ELSE
              ExitValue := ExitValue + ', ' + TransportProjectHistory."Transport No.";

        UNTIL TransportProjectHistory.NEXT = 0;
    END;

    PROCEDURE AssistEditTransportHistory@22();
    VAR
      TransportProjectHistory@1000 : Record 11102066;
      TransportProjectHistoryLines@1001 : Page 11102096;
    BEGIN
      TransportProjectHistory.SETCURRENTKEY("Project No.");
      TransportProjectHistory.SETRANGE("Project No.", "No.");

      TransportProjectHistoryLines.SETTABLEVIEW(TransportProjectHistory);
      TransportProjectHistoryLines.RUNMODAL;
    END;

    PROCEDURE TransportProject@23();
    VAR
      Transport@1000 : Record 11102043;
      TransportCard@1001 : Page 11102053;
      ctAreYouSure@1002 : TextConst 'DEU=A new transport will be created for this project.\Are you sure?;ENU=A new transport will be created for this project.\Are you sure?;ESP=A new transport will be created for this project.\Are you sure?;FRA=A new transport will be created for this project.\Are you sure?;NLD=Een nieuw transport zal worden aangemaakt voor dit project.\Weet u het zeker?;DEA=A new transport will be created for this project.\Are you sure?';
    BEGIN
      TESTFIELD("Status Type", "Status Type"::Ready);
      TESTFIELD("Transport No.", '');

      IF NOT CONFIRM(ctAreYouSure, TRUE) THEN
        EXIT;

      Transport.INSERT(TRUE);

      VALIDATE("Transport No.", Transport."No.");
      MODIFY(TRUE);

      TransportCard.SETTABLEVIEW(Transport);
      TransportCard.SETRECORD(Transport);
      TransportCard.RUN;
    END;

    LOCAL PROCEDURE CaptionUserRole@24(No@1000 : Integer) : Text;
    VAR
      Mgt@1001 : Codeunit 11102035;
      RoleDescription@1002 : Text;
      ctEmptyDescription@1003 : TextConst 'DEU=User Role %1;ENU=User Role %1;ESP=User Role %1;FRA=User Role %1;NLD=Gebruikersrol %1;DEA=User Role %1';
    BEGIN
      RoleDescription := Mgt.ShortcutCaption(No);
      IF RoleDescription = '' THEN
        RoleDescription := STRSUBSTNO(ctEmptyDescription, No);

      EXIT(RoleDescription);
    END;

    PROCEDURE DeleteChildTables@25();
    VAR
      ProjectObject@1000 : Record 11102037;
      StatusHistory@1001 : Record 11102038;
      DocumentLine@1002 : Record 11102046;
      Actions@1003 : Record 11102048;
      ActionField@1004 : Record 11102049;
      ProjectPermissions@1005 : Record 11102050;
      TransportProjectHistory@1006 : Record 11102066;
      Comment@1007 : Record 11102095;
    BEGIN
      StatusHistory.SETCURRENTKEY("Table Name", "No.");
      StatusHistory.SETRANGE("Table Name", StatusHistory."Table Name"::Project);
      StatusHistory.SETRANGE("No.", "No.");
      StatusHistory.DELETEALL;

      ProjectObject.SETRANGE("Project No.", "No.");
      ProjectObject.DELETEALL;

      Comment.SETCURRENTKEY("Table Name", "No.");
      Comment.SETRANGE("Table Name", Comment."Table Name"::Project);
      Comment.SETRANGE("No.", "No.");
      Comment.DELETEALL(TRUE);

      DocumentLine.SETRANGE("Table Name", DocumentLine."Table Name"::Project);
      DocumentLine.SETRANGE("No.", "No.");
      DocumentLine.DELETEALL;

      Actions.SETRANGE(Type, Actions.Type::Project);
      Actions.SETRANGE("No.", "No.");
      Actions.DELETEALL;

      ActionField.SETRANGE(Type, Actions.Type::Project);
      ActionField.SETRANGE("No.", "No.");
      ActionField.DELETEALL;

      ProjectPermissions.SETRANGE("Project No.", "No.");
      ProjectPermissions.DELETEALL;

      TransportProjectHistory.SETCURRENTKEY("Project No.");
      TransportProjectHistory.SETRANGE("Project No.", "No.");
      TransportProjectHistory.DELETEALL;
    END;

    PROCEDURE UpdateRepository@26(Trigger@1000 : Integer);
    VAR
      RepositoryMgt@1001 : Codeunit 11102067;
      RecRef@1002 : RecordRef;
    BEGIN
      RecRef.GETTABLE(Rec);
      RepositoryMgt.UpdateProject(RecRef, "No.", Trigger);
      RecRef.SETTABLE(Rec);
    END;

    LOCAL PROCEDURE SendEmails@27();
    VAR
      Setup@1000 : Record 11102035;
      FlowStatus@1001 : Record 11102041;
      Role@1002 : Record 11102055;
      TmpUser@1003 : TEMPORARY Record 11102056;
      User@1004 : Record 11102056;
      Mgt@1005 : Codeunit 11102035;
      MailMgt@1006 : Codeunit 11102084;
      ApplicationSettings@1007 : Codeunit 11102101;
      CrLf@1008 : Text;
      ctBodyLine1@1009 : TextConst 'DEU=User %1 has switched project %2: "%3" to status %4.;ENU=User %1 has switched project %2: "%3" to status %4.;ESP=User %1 has switched project %2: "%3" to status %4.;FRA=User %1 has switched project %2: "%3" to status %4.;NLD=Gebruiker %1 heeft project %2: "%3" omgezet naar status %4.;DEA=User %1 has switched project %2: "%3" to status %4.';
      ctBodyLine2@1010 : TextConst 'DEU=Server: %1;ENU=Server: %1;ESP=Server: %1;FRA=Server: %1;NLD=Server: %1;DEA=Server: %1';
      ctBodyLine3@1011 : TextConst 'DEU=Database: %1;ENU=Database: %1;ESP=Database: %1;FRA=Database: %1;NLD=Database: %1;DEA=Database: %1';
      ctSendMail@1012 : TextConst 'DEU=Do you want to send an e-mail to %1?;ENU=Do you want to send an e-mail to %1?;ESP=Do you want to send an e-mail to %1?;FRA=Do you want to send an e-mail to %1?;NLD=Wilt u een e-mail versturen naar %1?;DEA=Do you want to send an e-mail to %1?';
      ctSendMails@1013 : TextConst 'DEU=Do you want to send e-mails?;ENU=Do you want to send e-mails?;ESP=Do you want to send e-mails?;FRA=Do you want to send e-mails?;NLD=Wilt u e-mails versturen?;DEA=Do you want to send e-mails?';
      ctSubject@1014 : TextConst 'DEU=Project %1: "%2" has reached status %3;ENU=Project %1: "%2" has reached status %3;ESP=Project %1: "%2" has reached status %3;FRA=Project %1: "%2" has reached status %3;NLD=Project %1 - %2 heeft status %3 bereikt;DEA=Project %1: "%2" has reached status %3';
    BEGIN
      FlowStatus.SETRANGE("Table Name", FlowStatus."Table Name"::Project);
      FlowStatus.SETRANGE("Flow Code", "Project Flow Code");
      FlowStatus.SETRANGE("Status Code", "Status Code");
      IF FlowStatus.FINDFIRST THEN BEGIN

        IF FlowStatus."Send E-Mail to Active User" THEN
          IF User.GET("Active User") THEN
            User.AddToTempRecord(TmpUser);

        IF FlowStatus."Send E-Mail to Roles" <> '' THEN BEGIN

          Setup.CustomGet;

          Role.SETFILTER(Code, FlowStatus."Send E-Mail to Roles");
          IF Role.FINDSET THEN
            REPEAT

              IF (Setup."Role Shortcut 1" = Role.Code) AND ("User Role 1" <> '') THEN
                IF User.GET("User Role 1") THEN
                  User.AddToTempRecord(TmpUser);

              IF (Setup."Role Shortcut 2" = Role.Code) AND ("User Role 2" <> '') THEN
                IF User.GET("User Role 2") THEN
                  User.AddToTempRecord(TmpUser);

              IF (Setup."Role Shortcut 3" = Role.Code) AND ("User Role 3" <> '') THEN
                IF User.GET("User Role 3") THEN
                  User.AddToTempRecord(TmpUser);

              IF (Setup."Role Shortcut 4" = Role.Code) AND ("User Role 4" <> '') THEN
                IF User.GET("User Role 4") THEN
                  User.AddToTempRecord(TmpUser);

              IF (Setup."Role Shortcut 5" = Role.Code) AND ("User Role 5" <> '') THEN
                IF User.GET("User Role 5") THEN
                  User.AddToTempRecord(TmpUser);

            UNTIL Role.NEXT = 0;
        END;

        TmpUser.MARKEDONLY(TRUE);
        TmpUser.SETFILTER("E-Mail", '<>%1', '');
        CASE TmpUser.COUNT OF
          0 : EXIT;
          1 :
            IF TmpUser.FINDFIRST THEN
              IF NOT CONFIRM(ctSendMail, TRUE, TmpUser.Name) THEN
                EXIT;
          ELSE
            IF NOT CONFIRM(ctSendMails, TRUE) THEN
              EXIT;
        END;

        CrLf[1] := 13;
        CrLf[2] := 10;

        IF TmpUser.FINDSET THEN
          REPEAT

            MailMgt.ToAddress := TmpUser."E-Mail";
            MailMgt.Subject := STRSUBSTNO(ctSubject, "No.", Description, "Status Code");
            MailMgt.AddToBody(
              STRSUBSTNO(ctBodyLine1, Mgt.ShortUserId, "No.", Description, "Status Code") + CrLf + CrLf +
              STRSUBSTNO(ctBodyLine2, ApplicationSettings.ServerInstanceName) + CrLf +
              STRSUBSTNO(ctBodyLine3, ApplicationSettings.DatabaseName));

            MailMgt.Send;

          UNTIL TmpUser.NEXT = 0;

      END;
    END;

    PROCEDURE SetToReady@28();
    VAR
      Status@1000 : Record 11102039;
      FlowStatus@1001 : Record 11102041;
    BEGIN
      FlowStatus.SETRANGE("Table Name", FlowStatus."Table Name"::Project);
      FlowStatus.SETRANGE("Flow Code", "Project Flow Code");
      IF FlowStatus.FINDSET THEN
        REPEAT
          IF Status.GET(Status."Table Name"::Project, FlowStatus."Status Code") THEN
            IF Status.Type = Status.Type::Ready THEN BEGIN
              VALIDATE("Status Code", Status.Code);
              MODIFY(TRUE);
              EXIT;
            END;
        UNTIL FlowStatus.NEXT = 0;

      Status.SETRANGE("Table Name", Status."Table Name"::Project);
      Status.SETRANGE(Type, Status.Type::Ready);
      IF Status.FINDFIRST THEN BEGIN
        VALIDATE("Status Code", Status.Code);
        MODIFY(TRUE);
        EXIT;
      END;

      VALIDATE("Status Type", "Status Type"::Ready);
      MODIFY(TRUE);
    END;

    PROCEDURE CheckGuidelines@29(WithError@1000 : Boolean);
    VAR
      ProjectObject@1001 : Record 11102037;
      CheckGuidelinesComment@1002 : Record 11102081;
      Object@1003 : Record 2000000001;
      TmpObject@1004 : TEMPORARY Record 2000000001;
      CheckGuidelinesMgt@1005 : Codeunit 11102060;
      ctUnknownComments@1006 : TextConst 'DEU=There are unknown guidelines comments.\Please correct them first.;ENU=There are unknown guidelines comments.\Please correct them first.;ESP=There are unknown guidelines comments.\Please correct them first.;FRA=There are unknown guidelines comments.\Please correct them first.;NLD=Er zijn onbekende richtlijnopmerkingen.\Deze moeten eerst worden gecorrigeerd.;DEA=There are unknown guidelines comments.\Please correct them first.';
      ctUnknownTransportComments@1007 : TextConst 'DEU=There are unknown transport guidelines comments.\Please correct them first.;ENU=There are unknown transport guidelines comments.\Please correct them first.;ESP=There are unknown transport guidelines comments.\Please correct them first.;FRA=There are unknown transport guidelines comments.\Please correct them first.;NLD=Er zijn onbekende transport richtlijnopmerkingen.\Deze moeten eerst worden gecorrigeerd.;DEA=There are unknown transport guidelines comments.\Please correct them first.';
    BEGIN
      ProjectObject.SETRANGE("Project No.", "No.");
      IF ProjectObject.FINDSET THEN
        REPEAT
          IF Object.GET(ProjectObject."Object Type", '', ProjectObject."Object No.") THEN BEGIN
            TmpObject := Object;
            TmpObject.INSERT;
          END;
        UNTIL ProjectObject.NEXT = 0;

      CheckGuidelinesMgt.AddObjectsToSheet(TmpObject);
      CheckGuidelinesMgt.SetProjectObjects(ProjectObject);
      CheckGuidelinesMgt.SetObjectRange(TmpObject);
      CheckGuidelinesMgt.RUN;

      IF WithError THEN
        IF ProjectObject.FINDSET THEN
          REPEAT

            CheckGuidelinesComment.SETRANGE("Object Type", ProjectObject."Object Type");
            CheckGuidelinesComment.SETRANGE("Object No.", ProjectObject."Object No.");
            CheckGuidelinesComment.SETRANGE("Known Comment", FALSE);

            CASE "Check Guidelines" OF
              "Check Guidelines"::"All Checks" :
                IF NOT CheckGuidelinesComment.ISEMPTY THEN
                  ERROR(ctUnknownComments);

              "Check Guidelines"::"Transport Checks" :
                BEGIN
                  CheckGuidelinesComment.SETRANGE(Type, CheckGuidelinesComment.Type::Transport);
                  IF NOT CheckGuidelinesComment.ISEMPTY THEN
                    ERROR(ctUnknownTransportComments);
                END;

            END;

          UNTIL ProjectObject.NEXT = 0;
    END;

    PROCEDURE SetKnownComments@30();
    VAR
      ProjectObject@1000 : Record 11102037;
      TmpObject@1001 : TEMPORARY Record 2000000001;
      GetDate@1002 : Report 11102049;
      CheckGuidelinesMgt@1003 : Codeunit 11102060;
      Date@1004 : Date;
      HistoryType@1005 : ' ,Date,No. of Days,Begin of Project';
      RunFrom@1006 : 'Check Guidelines,Project';
    BEGIN
      GetDate.SetRunFrom(RunFrom::Project);
      GetDate.RUNMODAL;
      IF GetDate.GetResult(HistoryType, Date) THEN BEGIN

        ProjectObject.SETRANGE("Project No.", "No.");
        IF ProjectObject.FINDSET THEN
          REPEAT
            TmpObject.Type := ProjectObject."Object Type";
            TmpObject.ID := ProjectObject."Object No.";
            TmpObject.INSERT;
          UNTIL ProjectObject.NEXT = 0;

        CheckGuidelinesMgt.SetKnownCommentWithCALHistory(TmpObject, HistoryType, Date, "No.");
      END;
    END;

    PROCEDURE AssistEdit@31() : Boolean;
    VAR
      Project@1000 : Record 11102036;
      ProjectType@1001 : Record 11102097;
      ProjectTypeList@1002 : Page 11175782;
    BEGIN
      WITH Project DO BEGIN
        Project := Rec;

        IF ProjectType.GET(xRec."Project Type Code") THEN
          ProjectTypeList.SETRECORD(ProjectType);

        ProjectTypeList.LOOKUPMODE(TRUE);
        IF ProjectTypeList.RUNMODAL = ACTION::LookupOK THEN BEGIN

          ProjectTypeList.GETRECORD(ProjectType);
          VALIDATE("Project Type Code", ProjectType.Code);

          IF ("No." = '') AND (ProjectType."Nos. Format" <> '') THEN
            "No." := GetNextNo(ProjectType."Nos. Format");

          IF (Description = '') AND (ProjectType."Project Description" <> '') THEN
            VALIDATE(Description, STRSUBSTNO(FORMAT(WORKDATE, 0, ProjectType."Project Description"), "No."));

          Rec := Project;
          EXIT(TRUE);
        END;

      END;
    END;

    PROCEDURE DataCaptionExpression@32() : Text;
    BEGIN
      EXIT("No." + ' ' + Description);
    END;

    PROCEDURE ActivateProject@33();
    VAR
      AssignModificationsMgt@1000 : Codeunit 11102036;
      AssignType@1001 : 'Save,,Active project';
      ctEnableTracing@1002 : TextConst 'DEU=All object modifications will be assigned to this project.\Are you sure?;ENU=All object modifications will be assigned to this project.\Are you sure?;ESP=All object modifications will be assigned to this project.\Are you sure?;FRA=All object modifications will be assigned to this project.\Are you sure?;NLD=Alle objectwijzigingen zullen aan dit project worden toegewezen.\Weet u het zeker?;DEA=All object modifications will be assigned to this project.\Are you sure?';
    BEGIN
      TESTFIELD("Status Type", "Status Type"::Developing);
      IF CONFIRM(ctEnableTracing, TRUE) THEN
        AssignModificationsMgt.SetSettings(AssignType::"Active project", "No.", TRUE);
    END;

    PROCEDURE AssignModifications@34();
    VAR
      AssignModificationsMgt@1000 : Codeunit 11102036;
      AssignModifications2@1001 : Page 11102050;
      ActiveProjectNo@1002 : Code[20];
      AssignType@1003 : 'Save,,Active Project';
      ctActiveProject@1004 : TextConst 'DEU=Project ''%1'' will be the active project.\Are you sure?;ENU=Project ''%1'' will be the active project.\Are you sure?;ESP=Project ''%1'' will be the active project.\Are you sure?;FRA=Project ''%1'' will be the active project.\Are you sure?;NLD=Project ''%1'' zal het actieve project worden.\Weet u het zeker?;DEA=Project ''%1'' will be the active project.\Are you sure?';
    BEGIN
      TESTFIELD("Status Type", "Status Type"::Developing);

      AssignModificationsMgt.GetSettings(AssignType, ActiveProjectNo);
      IF AssignType = AssignType::"Active Project" THEN
        IF ActiveProjectNo <> "No." THEN BEGIN
          IF NOT CONFIRM(ctActiveProject, TRUE, "No.") THEN
            EXIT;
          AssignModificationsMgt.SetSettings(AssignType, "No.", TRUE);
        END;

      AssignModifications2.SetActiveProject("No.");
      AssignModifications2.RUN;
    END;

    PROCEDURE Rollback@35();
    VAR
      RollbackObjects@1000 : Page 11102098;
    BEGIN
      RollbackObjects.SetRunType(1, "No.");
      RollbackObjects.RUN;
    END;

    PROCEDURE NoOfGuidelinesComments@36() ExitValue : Integer;
    VAR
      ProjectObject@1000 : Record 11102037;
    BEGIN
      WITH ProjectObject DO BEGIN
        SETRANGE("Project No.", Rec."No.");
        IF FINDSET THEN
          REPEAT
            CALCFIELDS("No. of Comments");
            ExitValue += "No. of Comments";
          UNTIL NEXT = 0;
      END;
    END;

    PROCEDURE NoOfNewGuidelinesComments@37() ExitValue : Integer;
    VAR
      ProjectObject@1000 : Record 11102037;
    BEGIN
      WITH ProjectObject DO BEGIN
        SETRANGE("Project No.", Rec."No.");
        IF FINDSET THEN
          REPEAT
            CALCFIELDS("No. of New Comments");
            ExitValue += "No. of New Comments";
          UNTIL NEXT = 0;
      END;
    END;

    PROCEDURE NoOfCriticalGuidelinesComments@38() ExitValue : Integer;
    VAR
      ProjectObject@1000 : Record 11102037;
    BEGIN
      WITH ProjectObject DO BEGIN
        SETRANGE("Project No.", Rec."No.");
        IF FINDSET THEN
          REPEAT
            CALCFIELDS("No. of Critical Comments");
            ExitValue += "No. of Critical Comments";
          UNTIL NEXT = 0;
      END;
    END;

    PROCEDURE PushObjects@39() ExitValue : Integer;
    VAR
      ProjectObject@1000 : Record 11102037;
      NAVDatabase@1001 : Record 11102099;
      Object@1002 : Record 2000000001;
      TmpObject@1003 : TEMPORARY Record 2000000001;
      PushObjects@1004 : Codeunit 11102098;
    BEGIN
      IF PAGE.RUNMODAL(0, NAVDatabase) <> ACTION::LookupOK THEN
        EXIT;

      WITH ProjectObject DO BEGIN
        SETRANGE("Project No.", Rec."No.");
        IF FINDSET THEN
          REPEAT
            IF Object.GET("Object Type", '', "Object No.") THEN BEGIN
              TmpObject := Object;
              TmpObject.INSERT;
            END;
          UNTIL NEXT = 0;
      END;

      TmpObject.FINDFIRST;
      PushObjects.SetToDatabaseCode(NAVDatabase.Code);
      PushObjects.RUN(TmpObject);
    END;

    PROCEDURE ShowTransport@40();
    VAR
      Transport@1000 : Record 11102043;
      TransportCard@1001 : Page 11102053;
    BEGIN
      TESTFIELD("Transport No.");
      Transport.GET("Transport No.");
      TransportCard.SETRECORD(Transport);
      TransportCard.RUN;
    END;

    PROCEDURE LockObjects@47();
    VAR
      ProjectObject@1000 : Record 11102037;
      ObjectLock@1001 : Record 11102054;
      Object@1002 : Record 2000000001;
    BEGIN
      ProjectObject.SETRANGE("Project No.", "No.");
      IF ProjectObject.FINDSET THEN
        REPEAT
          IF Object.GET(ProjectObject."Object Type", '', ProjectObject."Object No.") THEN
            ObjectLock.InsertLock(Object);
        UNTIL ProjectObject.NEXT = 0;
    END;

    PROCEDURE RemoveObjectLocks@46();
    VAR
      ProjectObject@1000 : Record 11102037;
      ObjectLock@1001 : Record 11102054;
    BEGIN
      ProjectObject.SETRANGE("Project No.", "No.");
      IF ProjectObject.FINDSET THEN
        REPEAT
          IF ObjectLock.GET(ProjectObject."Object Type", ProjectObject."Object No.") THEN
            ObjectLock.DELETE(TRUE);
        UNTIL ProjectObject.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

