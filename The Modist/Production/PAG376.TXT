OBJECT Page 376 Job Journal Reconcile
{
  OBJECT-PROPERTIES
  {
    Date=07/09/12;
    Time=12:00:00 PM;
    Version List=NAVW17.00;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[ENU=Job Journal Reconcile;
               ENG=Job Journal Reconcile];
    SourceTable=Table278;
    DataCaptionExpr=Caption;
    PageType=List;
    SourceTableTemporary=Yes;
    OnOpenPage=BEGIN
                 JobJnlLine.SETCURRENTKEY("Journal Template Name","Journal Batch Name",Type,"No.","Unit of Measure Code","Work Type Code");
                 IF JobJnlLine.FIND('-') THEN BEGIN
                   OldUnitOfMeasureCode := JobJnlLine."Unit of Measure Code";
                   OldWorkTypeCode := JobJnlLine."Work Type Code";
                   REPEAT
                     IF OldUnitOfMeasureCode <> JobJnlLine."Unit of Measure Code" THEN BEGIN
                       InsertUnitOfMeasureQty;
                       InsertWorkTypeQty;
                     END ELSE
                       IF OldWorkTypeCode <> JobJnlLine."Work Type Code" THEN
                         InsertWorkTypeQty;

                     OldUnitOfMeasureCode := JobJnlLine."Unit of Measure Code";
                     OldWorkTypeCode := JobJnlLine."Work Type Code";

                     UnitOfMeasureQty := UnitOfMeasureQty + JobJnlLine.Quantity;
                     WorkTypeQty := WorkTypeQty + JobJnlLine.Quantity;
                     TotalQty := TotalQty + JobJnlLine.Quantity;
                   UNTIL (JobJnlLine.NEXT = 0);

                   InsertUnitOfMeasureQty;
                   InsertWorkTypeQty;
                   INIT;
                   "Is Total" := TRUE;
                   "Unit of Measure Code" := '';
                   "Line Type" := "Line Type"::Total;
                   "Work Type Code" := '';
                   Quantity := TotalQty;
                   INSERT;

                   TotalQty := 0;
                 END;
               END;

    OnAfterGetRecord=BEGIN
                       FormatLine(FORMAT("Unit of Measure Code"));
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 4   ;2   ;Field     ;
                SourceExpr="Unit of Measure Code";
                Style=Strong;
                StyleExpr=Emphasize }

    { 8   ;2   ;Field     ;
                SourceExpr="Work Type Code" }

    { 10  ;2   ;Field     ;
                SourceExpr=Quantity;
                Style=Strong;
                StyleExpr=Emphasize }

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Total %1;ENG=Total %1';
      JobJnlLine@1001 : Record 210;
      UnitOfMeasureQty@1003 : Decimal;
      WorkTypeQty@1004 : Decimal;
      TotalQty@1005 : Decimal;
      OldUnitOfMeasureCode@1006 : Text[10];
      OldWorkTypeCode@1007 : Code[10];
      Emphasize@19043477 : Boolean INDATASET;

    PROCEDURE SetJobJnlLine@1(VAR JobJnlLine2@1000 : Record 210);
    BEGIN
      JobJnlLine2.TESTFIELD(Type,JobJnlLine2.Type::Resource);
      JobJnlLine.COPYFILTERS(JobJnlLine2);
      JobJnlLine.SETRANGE(Type,JobJnlLine2.Type::Resource);
      JobJnlLine.SETRANGE("No.",JobJnlLine2."No.");
    END;

    LOCAL PROCEDURE InsertUnitOfMeasureQty@2();
    BEGIN
      INIT;
      "Is Total" := FALSE;
      "Unit of Measure Code" := OldUnitOfMeasureCode;
      "Line Type" := "Line Type"::Total;
      "Work Type Code" := '';
      Quantity := UnitOfMeasureQty;
      INSERT;
      UnitOfMeasureQty := 0;
    END;

    LOCAL PROCEDURE InsertWorkTypeQty@3();
    BEGIN
      INIT;
      "Is Total" := FALSE;
      "Unit of Measure Code" := OldUnitOfMeasureCode;
      "Line Type" := 0;
      "Work Type Code" := OldWorkTypeCode;
      Quantity := WorkTypeQty;
      INSERT;
      WorkTypeQty := 0;
    END;

    LOCAL PROCEDURE Caption@4() : Text[80];
    VAR
      Res@1000 : Record 156;
    BEGIN
      Res.GET(JobJnlLine.GETRANGEMIN("No."));
      EXIT(Res."No." + ' ' + Res.Name);
    END;

    LOCAL PROCEDURE FormatLine@19026690(Text@19007834 : Text[1024]);
    BEGIN
      IF "Line Type" = "Line Type"::Total THEN BEGIN
        Emphasize := TRUE;
        Text := STRSUBSTNO(Text000,Text);
      END;
    END;

    BEGIN
    END.
  }
}

