OBJECT Codeunit 9062635 PS Management
{
  OBJECT-PROPERTIES
  {
    Date=10/05/16;
    Time=12:00:00 PM;
    Version List=NA2016.15;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      PSScriptSetup@9062234 : Record 9062769;
      PSVariableStore@9062233 : Codeunit 9062634;
      Window@9062232 : Dialog;
      WindowIsOpen@9062231 : Boolean;
      HideDialog@9062230 : Boolean;
      ExecutingPowerShell@9062235 : TextConst 'ENU=Executing Powershell on %1...;ENG=Executing Powershell on %1...';

    PROCEDURE OpenDialog@2(ComputerName@1000 : Text);
    VAR
      UniversalVariables@9062229 : Codeunit 9062232;
    BEGIN
      IF NOT GUIALLOWED THEN EXIT;
      IF UniversalVariables.GetBooleanVar('HidePSDialog') THEN EXIT;
      Window.OPEN(STRSUBSTNO(ExecutingPowerShell,ComputerName));
      WindowIsOpen := TRUE;
    END;

    PROCEDURE CloseDialog@3();
    BEGIN
      IF NOT GUIALLOWED THEN EXIT;
      IF WindowIsOpen THEN
        Window.CLOSE;
      WindowIsOpen := FALSE;
    END;

    PROCEDURE ExecutePsCommand@1100084001(VAR PSMPsObjectCollection@1005 : Codeunit 9062555;ComputerName@1003 : Text;PSCommand@1000 : Text;RequiredModule@1001 : ' ,Developement,Infrastructure,Both');
    VAR
      PSMSetup@1002 : Record 9062714;
      PSMPowershellWrapper@1004 : Codeunit 9062554;
    BEGIN
      IF PSCommand = '' THEN EXIT;
      PSMSetup.GET;
      IF ComputerName = '' THEN
        ComputerName := PSMSetup."Default Server Name";

      IF WriteDebug(ComputerName,PSCommand) THEN
        EXIT;

      WITH PSMPowershellWrapper DO BEGIN
        OpenRunspace(ComputerName,PSMSetup.GetLoginID,PSMSetup.GetPassword);
        CASE RequiredModule OF
           RequiredModule::Developement :
             LoadModule(PSScriptSetup.GetDevModulePath);
           RequiredModule::Infrastructure :
             LoadModule(PSScriptSetup.GetAdminModulePath);
           RequiredModule::Both :
             BEGIN
              LoadModule(PSScriptSetup.GetAdminModulePath);
              LoadModule(PSScriptSetup.GetDevModulePath);
             END;
         END;
        AddScript(PSCommand);
        InvokeCommands(PSMPsObjectCollection);
        CloseRunspace;
      END;
    END;

    PROCEDURE GetProperties@1100084005(VAR PSMPsObjectCollection@1001 : Codeunit 9062555;VAR PsPropertyInfoArray@1000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array");
    BEGIN
      WITH PSMPsObjectCollection DO BEGIN
        IF NOT FINDFIRST THEN EXIT;
        GetProperties(PsPropertyInfoArray);
      END;
    END;

    PROCEDURE GetOuterXml@1(VAR PSMPsObjectCollection@1000 : Codeunit 9062555) : Text;
    BEGIN
      PSMPsObjectCollection.FINDFIRST;
      EXIT(PSMPsObjectCollection.GetPropertyValueText('OuterXml'));
    END;

    LOCAL PROCEDURE WriteDebug@4(ComputerName@1002 : Text;PSCommand@1001 : Text) : Boolean;
    VAR
      FileMgt@1003 : Codeunit 419;
      ClientFileHelper@1005 : DotNet "'mscorlib'.System.IO.File" RUNONCLIENT;
      TempFileName@1004 : Text;
    BEGIN
      IF NOT PSScriptSetup."Debbug Script" THEN EXIT(FALSE);
      TempFileName := FileMgt.ClientTempFileName(ComputerName + '.ps1');
      ClientFileHelper.AppendAllText(TempFileName,PSCommand);
      HYPERLINK(TempFileName);
      EXIT(TRUE);
    END;

    PROCEDURE ForceWriteDebug@9062229(ComputerName@1002 : Text;PSCommand@1001 : Text);
    VAR
      FileMgt@1003 : Codeunit 419;
      ClientFileHelper@1005 : DotNet "'mscorlib'.System.IO.File" RUNONCLIENT;
      TempFileName@1004 : Text;
    BEGIN
      TempFileName := FileMgt.ClientTempFileName(ComputerName + '.ps1');
      ClientFileHelper.AppendAllText(TempFileName,PSCommand);
      HYPERLINK(TempFileName);
    END;

    PROCEDURE HidePSDialog@9062230();
    BEGIN
      HideDialog := TRUE;
    END;

    BEGIN
    {
      //DOC NA2016.10 AP 29/10/2015 - Created
      //DOC NA2016.11 JH 17/11/2015 - New version
      //DOC NA2016.15 JH 09/05/2016 - CfMD modifications
    }
    END.
  }
}

