OBJECT Table 9021608 Missing Int Cust User Links
{
  OBJECT-PROPERTIES
  {
    Date=13/07/16;
    Time=[ 1:50:00 PM];
    Version List=EC2016.6;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF MissL.FINDLAST THEN
                 "Entry No." := MissL."Entry No." + 1
               ELSE
                 "Entry No." := 1;
             END;

    CaptionML=[ENU=Missing Int Cust User Links;
               ENG=Missing Int Cust User Links];
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;CaptionML=[ENU=Entry No.;
                                                              ENG=Entry No.] }
    { 10  ;   ;Description         ;Text250       ;CaptionML=[ENU=Description;
                                                              ENG=Description] }
    { 20  ;   ;GuID 1 Description  ;Text100       ;CaptionML=[ENU=GuID 1 Description;
                                                              ENG=GuID 1 Description] }
    { 21  ;   ;GuID 1              ;Text38        ;CaptionML=[ENU=GuID 1;
                                                              ENG=GuID 1] }
    { 22  ;   ;GuID 2 Description  ;Text100       ;CaptionML=[ENU=GuID 2 Description;
                                                              ENG=GuID 2 Description] }
    { 23  ;   ;GuID 2              ;Text38        ;CaptionML=[ENU=GuID 2;
                                                              ENG=GuID 2] }
    { 30  ;   ;Contact No.         ;Code20        ;TableRelation=Contact;
                                                   CaptionML=[ENU=Contact No.;
                                                              ENG=Contact No.] }
    { 32  ;   ;Customer No.        ;Code20        ;TableRelation=Customer;
                                                   CaptionML=[ENU=Customer No.;
                                                              ENG=Customer No.] }
    { 100 ;   ;Not Fatal           ;Boolean       ;CaptionML=[ENU=Not Fatal;
                                                              ENG=Not Fatal] }
    { 102 ;   ;Fatal Type No.      ;Integer       ;CaptionML=[ENU=Fatal Type No.;
                                                              ENG=Fatal Type No.] }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
    {    ;GuID 1                                   }
    {    ;GuID 2                                   }
    {    ;Contact No.                              }
    {    ;Customer No.                             }
    {    ;Not Fatal                                }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Cust@1190000022 : Record 18;
      Cust1@1190000021 : Record 18;
      Cont@1190000020 : Record 5050;
      Cont1@1190000019 : Record 5050;
      ContBusRel@1190000018 : Record 5054;
      B2B@1190000017 : Record 9021643;
      IntCust@1190000016 : Record 9021642;
      MissL@1190000015 : Record 9021608;
      InternetSetup@1190000005 : Record 9021609;
      v@1190000014 : Integer;
      w@1190000013 : Integer;
      x@1190000012 : Integer;
      y@1190000011 : Integer;
      z@1190000010 : Integer;
      FaultTypeNo@1040000 : Integer;
      RecProb@1190000009 : Boolean;
      IntCustGot@1190000008 : Boolean;
      InAttendedMode@1040001 : Boolean;
      IsTHEInternetCustomer@1190000023 : Boolean;
      TempText@1190000007 : Text[250];
      Window@1190000006 : Dialog;

    PROCEDURE FindMissingLinks@1190000005();
    VAR
      TxtDeleteConfirmation@1000000000 : TextConst 'ENU=Problems are already recorded.  Delete these?;ENG=Problems are already recorded.  Delete these?';
      TxtUnAttendedModeConfirmation@1000000001 : TextConst 'ENU=Do you wish to run in UnAttended Mode?;ENG=Do you wish to run in UnAttended Mode?';
      TxtContactGuid@1000000027 : TextConst 'ENU=Contact Guid;ENG=Contact Guid';
      TxtCustGuid@1000000025 : TextConst 'ENU=Cust Guid;ENG=Cust Guid';
      TxtCustUserGuid@1000000023 : TextConst 'ENU=Cust User Guid;ENG=Cust User Guid';
      TxtB2BNo@1000000020 : TextConst 'ENU=B2B No.;ENG=B2B No.';
      TxtB2BCustomerNo@1000000014 : TextConst 'ENU=B2B Customer No;ENG=B2B Customer No';
      TxtB2BContactNo@1000000013 : TextConst 'ENU=B2B Contact No;ENG=B2B Contact No';
      TxtContactUserGuId@1000000043 : TextConst 'ENU=Contacts User GuID;ENG=Contacts User GuID';
      TxtInternetCustGuID@1000000044 : TextConst 'ENU=Internet Cust GuID;ENG=Internet Cust GuID';
      TxtInternetCustContactNo@1000000046 : TextConst 'ENU=Internet Cust Contact No.;ENG=Internet Cust Contact No.';
      TxtInternetCustCustomerNo@1000000045 : TextConst 'ENU=Internet Cust Customer No.;ENG=Internet Cust Customer No.';
      TxtB2BInternetCustomer@1000000060 : TextConst 'ENU=B2B Internet Customer;ENG=B2B Internet Customer';
      TxtCheck1_01@1000000002 : TextConst 'ENU=There are no customers with User Guid who are not Internet Customers;ENG=There are no customers with User Guid who are not Internet Customers';
      TxtCheck1_02@1000000003 : TextConst 'ENU=There are %1 customers with User Guid who are not Internet Customers;ENG=There are %1 customers with User Guid who are not Internet Customers';
      TxtCheck1_03@1000000004 : TextConst 'ENU=Checking Customers who are B2B have Internet Logins;ENG=Checking Customers who are B2B have Internet Logins';
      TxtCheck1_04@1000000005 : TextConst 'ENU=Cust has B2B ticked but there is no login;ENG=Cust has B2B ticked but there is no login';
      TxtCheck1_05@1000000006 : TextConst 'ENU=There are no customers who have Is A B2B Internet Customer but have no logins;ENG=There are no customers who have Is A B2B Internet Customer but have no logins';
      TxtCheck1_06@1000000007 : TextConst 'ENU=There are %1 customers who have Is A B2B Internet Customer but have no logins;ENG=There are %1 customers who have Is A B2B Internet Customer but have no logins';
      TxtCheck1_07@1000000008 : TextConst 'ENU=Checking Customers who are Int. Custs have Company Contacts with User Guid;ENG=Checking Customers who are Int. Custs have Company Contacts with User Guid';
      TxtCheck1_08@1000000009 : TextConst 'ENU=Business Rel Code is not Cust;ENG=Business Rel Code is not Cust';
      TxtCheck1_09@1000000010 : TextConst 'ENU=Contact linked to Customer is Person;ENG=Contact linked to Customer is Person';
      TxtCheck1_10@1000000011 : TextConst 'ENU=Contact is not marked as Internet Customer;ENG=Contact is not marked as Internet Customer';
      TxtCheck1_11@1000000012 : TextConst 'ENU=Contact User Guid is not Cust User User Guid;ENG=Contact User Guid is not Cust User User Guid';
      TxtCheck1Errors@1000000015 : TextConst 'ENU=%1 ContBusRels not CUST, %2 Conts are Person, %3 are not Int. Cust, %4 wrong Guid;ENG=%1 ContBusRels not CUST, %2 Conts are Person, %3 are not Int. Cust, %4 wrong Guid';
      TxtCheck1Ok@1000000016 : TextConst 'ENU=Check of Contacts related to Customers OK;ENG=Check of Contacts related to Customers OK';
      TxtCheck2@1000000017 : TextConst 'ENU=Checking Contacts of Type Company;ENG=Checking Contacts of Type Company';
      TxtCheck2_01@1000000018 : TextConst 'ENU=Contact is an Internet Customer but Customer is not;ENG=Contact is an Internet Customer but Customer is not';
      TxtCheck2_02@1000000019 : TextConst 'ENU=Company Contact User Guid is blank when the Contact is an Internet Customer;ENG=Company Contact User Guid is blank when the Contact is an Internet Customer';
      TxtCheck2_03@1000000021 : TextConst 'ENU=Company Contact User Guid is not the same as Cust User User Guid;ENG=Company Contact User Guid is not the same as Cust User User Guid';
      TxtCheck2_04@1000000022 : TextConst 'ENU=Company Contact Is a B2B but not Contact No. on B2B is wrong;ENG=Company Contact Is a B2B but not Contact No. on B2B is wrong';
      TxtCheck2_05@1000000024 : TextConst 'ENU=Company Contact Is a B2B which is linked to Customer No. but Cust. No. on B2B is wrong;ENG=Company Contact Is a B2B which is linked to Customer No. but Cust. No. on B2B is wrong';
      TxtCheck2_06@1000000026 : TextConst 'ENU=Company Contact Is a B2B but Customer is not B2B.  B2B is linked to Cust. No.;ENG=Company Contact Is a B2B but Customer is not B2B.  B2B is linked to Cust. No.';
      TxtCheck2_07@1000000028 : TextConst 'ENU=Company Contact Is a B2B but Customer for Contact not found.  B2B is linked to Cust. No.;ENG=Company Contact Is a B2B but Customer for Contact not found.  B2B is linked to Cust. No.';
      TxtCheck2Errors@1000000029 : TextConst 'ENU=Company Conts %1 Cust not Int, %2 Cont User Guid are blank, %3 Cust and Cont User Guid vary %4 Problems with B2Bs, %5 Cust No and B2B Cust No not agree;ENG=Company Conts %1 Cust not Int, %2 Cont User Guid are blank, %3 Cust and Cont User Guid vary %4 Problems with B2Bs, %5 Cust No and B2B Cust No not agree';
      TxtCheck2OK@1000000030 : TextConst 'ENU=No problems found with Contacts of type company;ENG=No problems found with Contacts of type company';
      TxtCheck3@1000000031 : TextConst 'ENU=Checking Contacts of Type Person;ENG=Checking Contacts of Type Person';
      TxtCheck3_01@1000000032 : TextConst 'ENU=Person Contact is an Internet Customer but does not have a GUID;ENG=Person Contact is an Internet Customer but does not have a GUID';
      TxtCheck3_02@1000000033 : TextConst 'ENU=Person Contact is has a User GUID but cannot get Internet Customer - could mean has not logged in.;ENG=Person Contact is has a User GUID but cannot get Internet Customer - could mean has not logged in.';
      TxtCheck3_03@1000000034 : TextConst 'ENU=Internet Customer from Person Contact User GuID has a different Contact No.;ENG=Internet Customer from Person Contact User GuID has a different Contact No.';
      TxtCheck3_04@1000000035 : TextConst 'ENU=Person Contact Internet Customer Customer No. is not Customer No. that the Contact is linked to;ENG=Person Contact Internet Customer Customer No. is not Customer No. that the Contact is linked to';
      TxtCheck3_05@1000000036 : TextConst 'ENU=Person Contact is Internet Customer but customer is not.;ENG=Person Contact is Internet Customer but customer is not.';
      TxtCheck3_06@1000000037 : TextConst 'ENU=Person Contact User GUID is same as Customer User GUID - this is not necessarily an error;ENG=Person Contact User GUID is same as Customer User GUID - this is not necessarily an error';
      TxtCheck3_07@1000000038 : TextConst 'ENU=Person Contact is linked to Customer which is not B2B Int Cust. - this is not a fatal error;ENG=Person Contact is linked to Customer which is not B2B Int Cust. - this is not a fatal error';
      TxtCheck3_08@1000000039 : TextConst 'ENU=Person Contact cannot get B2B Int Cust. - this is not a fatal error but where did User GUiD come from;ENG=Person Contact cannot get B2B Int Cust. - this is not a fatal error but where did User GUiD come from';
      TxtCheck3_09@1000000040 : TextConst 'ENU=Person Contact B2B Int Cust. has not customer no. that Contact is linked to;ENG=Person Contact B2B Int Cust. has not customer no. that Contact is linked to';
      TxtCheck3_10@1000000041 : TextConst 'ENU=Person Contact B2B Int Cust. has not contact no. that belonging to that Contact;ENG=Person Contact B2B Int Cust. has not contact no. that belonging to that Contact';
      TxtCheck3_11@1000000042 : TextConst 'ENU=Person Contact is an Internet Customer is not linked to a Customer;ENG=Person Contact is an Internet Customer is not linked to a Customer';
      TxtCheck3Error@1000000047 : TextConst 'ENU=There are %1 problems with Contact of Type Person.;ENG=There are %1 problems with Contact of Type Person.';
      TxtCheck3OK@1000000048 : TextConst 'ENU=No problems found with Contacts of Type Person;ENG=No problems found with Contacts of Type Person';
      TxtCheck4@1000000049 : TextConst 'ENU=Checking Internet B2B Logins;ENG=Checking Internet B2B Logins';
      TxtCheck4_01@1000000050 : TextConst 'ENU=B2B Cust has a Customer No. that does not exist;ENG=B2B Cust has a Customer No. that does not exist';
      TxtCheck4_02@1000000051 : TextConst 'ENU=B2B Cust has a Contact No. that does not exist;ENG=B2B Cust has a Contact No. that does not exist';
      TxtCheck4_03@1000000052 : TextConst 'ENU=B2B Cust has a Contact No. but the Contact that is not a Person;ENG=B2B Cust has a Contact No. but the Contact that is not a Person';
      TxtCheck4_04@1000000053 : TextConst 'ENU=B2B Cust has a Contact No. but the Contact is not an Internet Customer;ENG=B2B Cust has a Contact No. but the Contact is not an Internet Customer';
      TxtCheck4_05@1000000054 : TextConst 'ENU=B2B Cust has a Contact No. but the Contact User GuID is not the B2B No.;ENG=B2B Cust has a Contact No. but the Contact User GuID is not the B2B No.';
      TxtCheck4_06@1000000055 : TextConst 'ENU=Contact linked to B2B Cust has a Customer No. which is not the Customer No. on the B2B.;ENG=Contact linked to B2B Cust has a Customer No. which is not the Customer No. on the B2B.';
      TxtCheck4_07@1000000056 : TextConst 'ENU=Contact linked to B2B Cust is not linked to any Customer.;ENG=Contact linked to B2B Cust is not linked to any Customer.';
      TxtCheck4_08@1000000057 : TextConst 'ENU=Cannot find Int. Cust for B2B Cust - this may mean Login has not logged in to web site.;ENG=Cannot find Int. Cust for B2B Cust - this may mean Login has not logged in to web site.';
      TxtCheck4_09@1000000058 : TextConst 'ENU=The Contact on the Int. Cust is not the Contact No. on the B2B.;ENG=The Contact on the Int. Cust is not the Contact No. on the B2B.';
      TxtCheck4_10@1000000059 : TextConst 'ENU=The Customer on the Int. Cust is not the Customer No. on the B2B.;ENG=The Customer on the Int. Cust is not the Customer No. on the B2B.';
      TxtCheck4_11@1000000061 : TextConst 'ENU=Customer No. linked to Contact;ENG=Customer No. linked to Contact';
      TxtCheck4_12@1000000062 : TextConst 'ENU=Internet Customer Contact No.;ENG=Internet Customer Contact No.';
      TxtCheck4Error@1000000063 : TextConst 'ENU=There are %1 problems with B2B Internet Customers.;ENG=There are %1 problems with B2B Internet Customers.';
      TxtCheck4OK@1000000064 : TextConst 'ENU=''No problems found with B2B Internet Customers'';ENG=''No problems found with B2B Internet Customers''';
      TxtCheck5@1000000065 : TextConst 'ENU=Checking Internet Customers;ENG=Checking Internet Customers';
      TxtCheck5_01@1000000066 : TextConst 'ENU=The Int. Cust Contact No. is blank - run Internet Automation.;ENG=The Int. Cust Contact No. is blank - run Internet Automation.';
      TxtCheck5_02@1000000067 : TextConst 'ENU=Cannot be Contact No. on Int. Customer.;ENG=Cannot be Contact No. on Int. Customer.';
      TxtCheck5_03@1000000068 : TextConst 'ENU=Contact on Int. Customer is not an Internet Customer.;ENG=Contact on Int. Customer is not an Internet Customer.';
      TxtCheck5_04@1000000069 : TextConst 'ENU=The User Guid on the Contact on Int. Customer is not the Int. Customer No.;ENG=The User Guid on the Contact on Int. Customer is not the Int. Customer No.';
      TxtCheck5_05@1000000070 : TextConst 'ENU=The Contact on Int. Customer is linked to a different customer not the Int. Customer Customer No.;ENG=The Contact on Int. Customer is linked to a different customer not the Int. Customer Customer No.';
      TxtCheck5_06@1000000071 : TextConst 'ENU=Cannot get the customer that the Contact that is linked to the Int. Customer;ENG=Cannot get the customer that the Contact that is linked to the Int. Customer';
      TxtCheck5_07@1000000072 : TextConst 'ENU=The customer that the Contact that is linked to the Int. Customer is not an Internet customer;ENG=The customer that the Contact that is linked to the Int. Customer is not an Internet customer';
      TxtCheck5_08@1000000073 : TextConst 'ENU=The customer that same User GuID as the Int. Cust. No. even though there is a B2B Int. Cust.;ENG=The customer that same User GuID as the Int. Cust. No. even though there is a B2B Int. Cust.';
      TxtCheck5_09@1000000074 : TextConst 'ENU=The customer does not have same User GuID as the Int. Cust. No. There is no B2B Int. Cust.;ENG=The customer does not have same User GuID as the Int. Cust. No. There is no B2B Int. Cust.';
      TxtCheck5_10@1000000075 : TextConst 'ENU=There are %1 customers with the same User GuID;ENG=There are %1 customers with the same User GuID';
      TxtCheck5_11@1000000076 : TextConst 'ENU=Other Contact with same GuID;ENG=Other Contact with same GuID';
      TxtCheck5_12@1000000077 : TextConst 'ENU=The Customer on Int. Customer is the customer on the B2B customer.;ENG=The Customer on Int. Customer is the customer on the B2B customer.';
      TxtCheck5_13@1000000078 : TextConst 'ENU=The Contact on Int. Customer is the contact on the B2B customer.;ENG=The Contact on Int. Customer is the contact on the B2B customer.';
      TxtCheck5_14@1000000079 : TextConst 'ENU=The Contact on Int. Customer is not linked to a customer but a B2B customer exists.;ENG=The Contact on Int. Customer is not linked to a customer but a B2B customer exists.';
      TxtCheck5_15@1000000080 : TextConst 'ENU=There are %1 contacts with the same User GuID;ENG=There are %1 contacts with the same User GuID';
      TxtCheck5Error@1000000081 : TextConst 'ENU=There are %1 problems with Internet Customers.;ENG=There are %1 problems with Internet Customers.';
      TxtCheck5OK@1000000082 : TextConst 'ENU=No problems found with Internet Customers;ENG=No problems found with Internet Customers';
      TxtInternetCustomerNo@1000000083 : TextConst 'ENU=Internet Customer No.;ENG=Internet Customer No.';
      TxtContactCustomerNo@1000000084 : TextConst 'ENU=Contact Customer No.;ENG=Contact Customer No.';
    BEGIN
      //1. Run through Customers and make sure any that has a user guid has a contact of type company
      //   and that Contact has the same user guid.
      //2. Run through Contacts of type Company with a User GuID, find associated Customer and make sure
      //   User GuID is the same.
      //3. Run through Contacts of type Person with User GuID and find B2B, check same Contact No.
      //4.  Run through all B2Bs and check Contact with same GuID is Contact on B2B
      //5.  Run through all Internet Customers - check Contacts have right User Guid
      //                                      - check no other Contact has User Guid
      //                                      - if Customer No., check User Guid and Is An Internet Customer
      //                                      - check no other Customers have same User Guid
      InternetSetup.GET;

      FaultTypeNo := 1;

      RecProb := TRUE;
      IF RecProb THEN BEGIN
        MissL.RESET;
        IF MissL.FINDFIRST THEN BEGIN
          IF CONFIRM(TxtDeleteConfirmation) THEN
            MissL.DELETEALL;
        END;
      END;
      IF CONFIRM(TxtUnAttendedModeConfirmation) THEN
        InAttendedMode := FALSE
      ELSE
        InAttendedMode := TRUE;
        Cust.RESET;
        Cust.SETFILTER("User GUID",'<>%1','');
        Cust.SETRANGE("Is An Internet Customer",FALSE);
        IF Cust.COUNT = 0 THEN BEGIN
          IF InAttendedMode THEN
            MESSAGE(TxtCheck1_01)
        END ELSE BEGIN
          IF InAttendedMode THEN
            MESSAGE(TxtCheck1_02,Cust.COUNT);
        END;
        Window.OPEN(TxtCheck1_03);
        x := 0;
        Cust.RESET;
        Cust.SETFILTER("User GUID",'<>%1','');
        Cust.SETRANGE("Is An Internet Customer");
        Cust.SETRANGE("Is a B2B Internet Customer",TRUE);
        IF Cust.FIND('-') THEN
        REPEAT
          B2B.RESET;
          B2B.SETCURRENTKEY("Customer No.");
          B2B.SETRANGE("Customer No.",Cust."No.");
          IF NOT B2B.FINDFIRST THEN BEGIN
            x := x + 1;
            IF RecProb THEN
              InsertProb(TxtCheck1_04,
                          '','','','',
                          '',Cust."No.",FALSE);
          END;
        UNTIL Cust.NEXT = 0;
        Window.CLOSE;
        IF x = 0 THEN BEGIN
          IF InAttendedMode THEN
            MESSAGE(TxtCheck1_05)
        END ELSE BEGIN
          IF InAttendedMode THEN
            MESSAGE(TxtCheck1_06,x);
        END;
        Window.OPEN(TxtCheck1_07);
        FaultTypeNo := 2;
        v := 0;
        w := 0;
        x := 0;
        y := 0;
        z := 0;
        Cust.RESET;
        Cust.SETFILTER("User GUID",'<>%1','');
        Cust.SETRANGE("Is An Internet Customer");
        IF Cust.FIND('-') THEN
        REPEAT
          ContBusRel.RESET;
          ContBusRel.SETCURRENTKEY("Link to Table","No.");
          ContBusRel.SETRANGE("Link to Table",ContBusRel."Link to Table"::Customer);
          ContBusRel.SETRANGE("No.",Cust."No.");
          IF ContBusRel.FIND('-') THEN
          REPEAT
            IF ContBusRel."Business Relation Code" <> 'CUST' THEN BEGIN
              x := x + 1;
              IF RecProb THEN
                InsertProb(TxtCheck1_08,
                            '','','','',
                            ContBusRel."Contact No.",Cust."No.",FALSE);
              END ELSE BEGIN
              Cont.GET(ContBusRel."Contact No.");
              IF Cont.Type = Cont.Type::Person THEN BEGIN
                y := y + 1;
                IF RecProb THEN
                  InsertProb(TxtCheck1_09,
                              '','','','',
                              ContBusRel."Contact No.",Cust."No.",FALSE);
              END;
              IF Cont."Is An Internet Customer" = FALSE THEN BEGIN
                z := z + 1;
                IF RecProb THEN
                  InsertProb(TxtCheck1_10,
                              '','','','',
                              ContBusRel."Contact No.",Cust."No.",FALSE);
              END;
              IF Cont."User GuID" <> Cust."User GUID" THEN BEGIN
                w := w + 1;
                IF RecProb THEN
                  InsertProb(TxtCheck1_11,
                              TxtContactGuid,Cont."User GuID",TxtCustGuid,Cust."User GUID",
                              ContBusRel."Contact No.",Cust."No.",FALSE);
                END;
            END;
          UNTIL ContBusRel.NEXT = 0;
        UNTIL Cust.NEXT = 0;
        Window.CLOSE;
        IF (x > 0) OR (w > 0) OR (y > 0) OR (z > 0) THEN BEGIN
          IF InAttendedMode THEN
            MESSAGE(TxtCheck1Errors,x,y,z,w)
        END ELSE BEGIN
          IF InAttendedMode THEN
            MESSAGE(TxtCheck1Ok);
        END;

      //IF CONFIRM('Check Contacts')THEN BEGIN
        //2. Run through Contacts of type Company with a User GuID, find associated Customer and make sure
        //   User GuID is the same.
        //IF CONFIRM('Check Contact of Type Company?') THEN BEGIN
          Window.OPEN(TxtCheck2);
          FaultTypeNo := 3;
          v := 0;
          w := 0;
          x := 0;
          y := 0;
          z := 0;
          Cont.RESET;
          Cont.SETRANGE("Is An Internet Customer",TRUE);
          Cont.SETRANGE(Type,Cont.Type::Company);
          IF Cont.FIND('-') THEN
          REPEAT
            Cont.CALCFIELDS("Is An Internet B2B Customer");
            IF ContBusRel.GET(Cont."No.",'CUST') THEN BEGIN
              Cust.GET(ContBusRel."No.");
              IF Cust."Is An Internet Customer" = FALSE THEN BEGIN
                v := v + 1;
                IF RecProb THEN
                  InsertProb(TxtCheck2_01,
                             '','','','',
                             Cont."No.",Cust."No.",FALSE);
               END;
              IF Cont."User GuID" = '' THEN BEGIN
                w := w + 1;
                IF RecProb THEN
                  InsertProb(TxtCheck2_02,
                             '','','',Cust."User GUID",
                             Cont."No.",Cust."No.",FALSE);
              END ELSE BEGIN
                IF Cust."User GUID" <> Cont."User GuID" THEN BEGIN
                  x := x + 1;
                  IF RecProb THEN
                    InsertProb(TxtCheck2_03,
                               TxtCustGuid,Cont."User GuID",TxtCustGuid,Cust."User GUID",
                               Cont."No.",Cust."No.",FALSE);
                END;
              END;
              IF Cont."Is An Internet B2B Customer" THEN BEGIN
                IF Cust."Is a B2B Internet Customer" THEN BEGIN
                  B2B.GET(Cont."User GuID");
                  IF B2B."Contact No." <> Cont."No." THEN BEGIN
                    z := z + 1;
                    IF RecProb THEN
                      InsertProb(TxtCheck2_04,
                                 TxtB2BNo,B2B."No.",'','',
                                 Cont."No.",Cust."No.",FALSE);
                  END;
                  IF B2B."Customer No." <> Cust."No." THEN BEGIN
                    z := z + 1;
                    IF RecProb THEN
                      InsertProb(TxtCheck2_05,
                                 TxtB2BNo,B2B."No.",TxtB2BCustomerNo,FORMAT(B2B."Customer No."),
                                 Cont."No.",Cust."No.",FALSE);
                  END;
                END ELSE BEGIN
                  B2B.GET(Cont."User GuID");
                  v := v + 1;
                  IF RecProb THEN
                    InsertProb(TxtCheck2_06,
                               TxtB2BNo,B2B."No.",TxtB2BContactNo,FORMAT(B2B."Contact No."),
                               Cont."No.",B2B."Customer No.",FALSE);
                END;
              END;
            END ELSE BEGIN
              IF Cont."Is An Internet B2B Customer" THEN BEGIN
                B2B.GET(Cont."User GuID");
                y := y + 1;
                IF RecProb THEN
                  InsertProb(TxtCheck2_07,
                             '','','','',
                             Cont."No.",B2B."Customer No.",FALSE);
              END;
            END;
          UNTIL Cont.NEXT = 0;
          Window.CLOSE;
          IF (v > 0) OR (x > 0) OR (w > 0) OR (y > 0) OR (z > 0) THEN BEGIN
            IF InAttendedMode THEN
              MESSAGE(TxtCheck2Errors,v,w,x,y,z)
          END ELSE BEGIN
            IF InAttendedMode THEN
              MESSAGE(TxtCheck2OK);
          END;
        //END;
        //3. Run through Contacts of type Person with User GuID and find B2B, check same Contact No.
        Window.OPEN(TxtCheck3);
        FaultTypeNo := 4;
        v := 0;
        w := 0;
        x := 0;
        y := 0;
        z := 0;
        Cont.RESET;
        Cont.SETRANGE("Is An Internet Customer",TRUE);
        Cont.SETRANGE(Type,Cont.Type::Person);
        IF Cont.FIND('-') THEN
        REPEAT
          IntCustGot := FALSE;
          IsTHEInternetCustomer := FALSE;
          IF Cont."User GuID" = '' THEN BEGIN
            v := v + 1;
            IF RecProb THEN
              InsertProb(TxtCheck3_01,
                          '','','','',
                          Cont."No.",'',TRUE);
          END ELSE BEGIN
            IF NOT IntCust.GET(Cont."User GuID") THEN BEGIN
              v := v + 1;
              IF RecProb THEN
                InsertProb(TxtCheck3_02,
                            '','','','',
                            Cont."No.",'',TRUE);
            END ELSE BEGIN
              IntCustGot := TRUE;
              IF IntCust."Contact No." <> Cont."No." THEN BEGIN
                v := v + 1;
                IF RecProb THEN
                  InsertProb(TxtCheck3_03,
                              TxtContactUserGuId,Cont."User GuID",TxtInternetCustContactNo,FORMAT(IntCust."Contact No."),
                              Cont."No.",'',FALSE);
                END;
            END;
          END;
          IF ContBusRel.GET(Cont."Company No.",'CUST') THEN BEGIN
            Cust.GET(ContBusRel."No.");
            IF (InternetSetup."Use Internet Customer" =
                InternetSetup."Use Internet Customer"::Always) AND
                (Cust."No." = InternetSetup."Internet Customer") THEN
              IsTHEInternetCustomer := TRUE;
            IF IntCustGot THEN BEGIN
              IF IntCust."Customer No." <> Cust."No." THEN BEGIN
                v := v + 1;
                IF RecProb THEN
                  InsertProb(TxtCheck3_04,
                              TxtInternetCustGuID,Cont."User GuID",TxtInternetCustCustomerNo,FORMAT(IntCust."Customer No."),
                              Cont."No.",Cust."No.",FALSE);
              END;
            END;
            IF Cust."Is An Internet Customer" = FALSE THEN BEGIN
              v := v + 1;
              IF RecProb THEN
                InsertProb(TxtCheck3_05,
                            '','','','',
                            Cont."No.",Cust."No.",FALSE);
            END;
            IF Cust."User GUID" = Cont."User GuID" THEN BEGIN
              v := v + 1;
              IF RecProb THEN
                InsertProb(TxtCheck3_06,
                            '','','','',
                            Cont."No.",Cust."No.",TRUE);
            END;
            IF Cust."Is a B2B Internet Customer" = FALSE THEN BEGIN
              v := v + 1;
              IF RecProb THEN
                InsertProb(TxtCheck3_07,
                            '','','','',
                            Cont."No.",Cust."No.",TRUE);
            END;
            IF NOT B2B.GET(Cont."User GuID") THEN BEGIN
              IF (Cont."User GuID" <> '') AND
                (IsTHEInternetCustomer = FALSE) THEN BEGIN
                v := v + 1;
                IF RecProb THEN
                  InsertProb(TxtCheck3_08,
                              TxtContactUserGuId,Cont."User GuID",'','',
                              Cont."No.",Cust."No.",FALSE);
              END;
            END ELSE BEGIN
              IF B2B."Customer No." <> Cust."No." THEN BEGIN
                v := v + 1;
                IF RecProb THEN
                  InsertProb(TxtCheck3_09,
                              TxtContactUserGuId,Cont."User GuID",TxtB2BCustomerNo,FORMAT(B2B."Customer No."),
                              Cont."No.",Cust."No.",FALSE);
              END;
              IF B2B."Contact No." <> Cont."No." THEN BEGIN
                v := v + 1;
                IF RecProb THEN
                  InsertProb(TxtCheck3_10,
                              TxtContactUserGuId,Cont."User GuID",TxtB2BCustomerNo,FORMAT(B2B."Contact No."),
                              Cont."No.",Cust."No.",FALSE);
              END;
            END;
          END ELSE BEGIN
            v := v + 1;
            IF RecProb THEN
              InsertProb(TxtCheck3_11,
                          '','','','',
                          Cont."No.",'',FALSE);
            END;
        UNTIL Cont.NEXT = 0;
        Window.CLOSE;
        IF (v > 0) OR (x > 0) OR (w > 0) OR (y > 0) OR (z > 0) THEN BEGIN
          IF InAttendedMode THEN
            MESSAGE(TxtCheck3Error,v,w,x,y,z)
        END ELSE BEGIN
          IF InAttendedMode THEN
            MESSAGE(TxtCheck3OK);
        END;
      //END;
      //4  Run through all B2Bs and check Contact with same GuID is Contact on B2B
      //IF CONFIRM('Check B2B Logins?') THEN BEGIN
        Window.OPEN(TxtCheck4);
        FaultTypeNo := 5;
        v := 0;
        w := 0;
        x := 0;
        y := 0;
        z := 0;
        B2B.RESET;
        IF B2B.FIND('-') THEN
        REPEAT
          IF NOT Cust.GET(B2B."Customer No.") THEN BEGIN
            v := v + 1;
            IF RecProb THEN
              InsertProb(TxtCheck4_01,
                         TxtB2BInternetCustomer,B2B."No.",'','',
                         '',B2B."Customer No.",FALSE);
          END;
          IF NOT Cont.GET(B2B."Contact No.") THEN BEGIN
            v := v + 1;
            IF RecProb THEN
              InsertProb(TxtCheck4_02,
                         TxtB2BInternetCustomer,B2B."No.",'','',
                         B2B."Contact No.",'',FALSE);
          END ELSE BEGIN
            IF Cont.Type <> Cont.Type::Person THEN BEGIN
              v := v + 1;
              IF RecProb THEN
                InsertProb(TxtCheck4_03,
                           TxtB2BInternetCustomer,B2B."No.",'','',
                           B2B."Contact No.",'',TRUE);
            END;
            IF Cont."Is An Internet Customer" <> TRUE THEN BEGIN
              v := v + 1;
              IF RecProb THEN
                InsertProb(TxtCheck4_04,
                           TxtB2BInternetCustomer,B2B."No.",'','',
                           B2B."Contact No.",'',FALSE);
            END;
            IF Cont."User GuID" <> B2B."No." THEN BEGIN
              v := v + 1;
              IF RecProb THEN
                InsertProb(TxtCheck4_05,
                           TxtB2BInternetCustomer,B2B."No.",'','',
                           B2B."Contact No.",'',FALSE);
            END;
            IF ContBusRel.GET(Cont."Company No.",'CUST') THEN BEGIN
              IF ContBusRel."No." <> B2B."Customer No." THEN BEGIN
                v := v + 1;
                IF RecProb THEN
                  InsertProb(TxtCheck4_06,
                             TxtB2BInternetCustomer,B2B."No.",TxtCheck4_11,FORMAT(ContBusRel."No."),
                             B2B."Contact No.",B2B."Customer No.",FALSE);
              END;
            END ELSE BEGIN
              v := v + 1;
              IF RecProb THEN
                InsertProb(TxtCheck4_07,
                           TxtB2BInternetCustomer,B2B."No.",'','',
                           B2B."Contact No.",B2B."Customer No.",FALSE);
            END;
          END;
          IF NOT IntCust.GET(B2B."No.") THEN BEGIN
            v := v + 1;
            IF RecProb THEN
              InsertProb(TxtCheck4_08,
                         TxtB2BInternetCustomer,B2B."No.",'','',
                         B2B."Contact No.",B2B."Customer No.",TRUE);
          END ELSE BEGIN
            IF IntCust."Contact No." <> B2B."Contact No." THEN BEGIN
              v := v + 1;
              IF RecProb THEN
                InsertProb(TxtCheck4_09,
                           TxtB2BInternetCustomer,B2B."No.",TxtCheck4_12,FORMAT(IntCust."Contact No."),
                           B2B."Contact No.",B2B."Customer No.",FALSE);
            END;
            IF IntCust."Customer No." <> B2B."Customer No." THEN BEGIN
              v := v + 1;
              IF RecProb THEN
                InsertProb(TxtCheck4_10,
                           TxtB2BInternetCustomer,B2B."No.",TxtCheck4_12,FORMAT(IntCust."Customer No."),
                           B2B."Contact No.",B2B."Customer No.",FALSE);
            END;
          END;
        UNTIL B2B.NEXT = 0;
        Window.CLOSE;
        IF (v > 0) OR (x > 0) OR (w > 0) OR (y > 0) OR (z > 0) THEN BEGIN
          IF InAttendedMode THEN
            MESSAGE(TxtCheck4Error,v,w,x,y,z)
        END ELSE BEGIN
          IF InAttendedMode THEN
            MESSAGE(TxtCheck4OK);
        END;
      //END;

      //5  Run through all Internet Customers - check Contacts have right User Guid
      //                                      - check no other Contact has User Guid
      //                                      - if Customer No., check User Guid and Is An Internet Customer
      //                                      - check no other Customers have same User Guid
      Window.OPEN(TxtCheck5);
      FaultTypeNo := 6;
      v := 0;
      w := 0;
      x := 0;
      y := 0;
      z := 0;
      IntCust.RESET;
      IF IntCust.FIND('-') THEN
      REPEAT
        IF IntCust."Contact No." = '' THEN BEGIN
          v := v + 1;
          IF RecProb THEN
            InsertProb(TxtCheck5_01,
                        TxtInternetCustomerNo,IntCust."No.",'','',
                        '','',TRUE);
        END ELSE BEGIN
          IF NOT Cont.GET(IntCust."Contact No.") THEN BEGIN
            v := v + 1;
            IF RecProb THEN
              InsertProb(TxtCheck5_02,
                          TxtInternetCustomerNo,IntCust."No.",'','',
                          IntCust."Contact No.",'',FALSE);
          END ELSE BEGIN
            IF Cont."Is An Internet Customer" = FALSE THEN BEGIN
              v := v + 1;
              IF RecProb THEN
                InsertProb(TxtCheck5_03,
                            TxtInternetCustomerNo,IntCust."No.",'','',
                            IntCust."Contact No.",'',FALSE);
            END;
            IF Cont."User GuID" <> IntCust."No." THEN BEGIN
              v := v + 1;
              IF RecProb THEN
                InsertProb(TxtCheck5_04,
                            TxtInternetCustomerNo,IntCust."No.",TxtContactUserGuId,Cont."User GuID",
                            IntCust."Contact No.",'',FALSE);
            END;
            IF ContBusRel.GET(Cont."Company No.",'CUST') THEN BEGIN
              IF ContBusRel."No." <> IntCust."Customer No." THEN BEGIN
                IF IntCust."Customer No." <> '' THEN BEGIN
                  v := v + 1;
                  IF RecProb THEN
                    InsertProb(TxtCheck5_05,
                                TxtInternetCustomerNo,IntCust."No.",TxtContactCustomerNo,FORMAT(ContBusRel."No."),
                                IntCust."Contact No.",IntCust."Customer No.",FALSE);
                END;
              END ELSE BEGIN
                IF NOT Cust.GET(ContBusRel."No.") THEN BEGIN
                  v := v + 1;
                  IF RecProb THEN
                    InsertProb(TxtCheck5_06,
                                TxtInternetCustomerNo,IntCust."No.",'','',
                                IntCust."Contact No.",ContBusRel."No.",FALSE);
                END ELSE BEGIN
                  IF Cust."Is An Internet Customer" = FALSE THEN BEGIN
                    v := v + 1;
                    IF RecProb THEN
                      InsertProb(TxtCheck5_07,
                                  TxtInternetCustomerNo,IntCust."No.",'','',
                                  IntCust."Contact No.",ContBusRel."No.",FALSE);
                  END;
                  IF B2B.GET(IntCust."No.") THEN BEGIN
                    IF Cust."User GUID" = IntCust."No." THEN BEGIN
                      v := v + 1;
                      IF RecProb THEN
                        InsertProb(TxtCheck5_08,
                                    TxtInternetCustomerNo,IntCust."No.",'','',
                                    IntCust."Contact No.",Cust."No.",TRUE);
                    END;
                  END ELSE BEGIN
                    IF Cust."User GUID" <> IntCust."No." THEN BEGIN
                      v := v + 1;
                      IF RecProb THEN
                        InsertProb(TxtCheck5_09,
                                    TxtInternetCustomerNo,IntCust."No.",'','',
                                    IntCust."Contact No.",Cust."No.",FALSE);
                    END ELSE BEGIN
                      Cust1.RESET;
                      Cust1.SETFILTER("No.",'<>%1',Cust."No.");
                      Cust1.SETRANGE("User GUID",IntCust."No.");
                      IF Cust1.FINDFIRST THEN BEGIN
                        TempText := STRSUBSTNO(TxtCheck5_10,Cust1.COUNT);
                        v := v + 1;
                        IF RecProb THEN
                          InsertProb(TempText,
                                TxtInternetCustomerNo,IntCust."No.",TxtCheck5_11,FORMAT(Cont1."No."),
                                IntCust."Contact No.",'',FALSE);
                      END;
                    END;
                  END;
                END;
              END;
              IF B2B.GET(IntCust."No.") THEN BEGIN
                IF B2B."Customer No." <> IntCust."Customer No." THEN BEGIN
                  v := v + 1;
                  IF RecProb THEN
                    InsertProb(TxtCheck5_12,
                                TxtInternetCustomerNo,IntCust."No.",TxtB2BCustomerNo,FORMAT(B2B."Customer No."),
                                IntCust."Contact No.",IntCust."Customer No.",FALSE);
                END;
                IF B2B."Contact No." <> IntCust."Contact No." THEN BEGIN
                  v := v + 1;
                  IF RecProb THEN
                    InsertProb(TxtCheck5_13,
                                TxtInternetCustomerNo,IntCust."No.",TxtB2BCustomerNo,FORMAT(B2B."Contact No."),
                                IntCust."Contact No.",IntCust."Customer No.",FALSE);
                END;
              END;
            END ELSE BEGIN
              IF B2B.GET(IntCust."No.") THEN BEGIN
                v := v + 1;
                IF RecProb THEN
                  InsertProb(TxtCheck5_14,
                              TxtInternetCustomerNo,IntCust."No.",'','',
                              IntCust."Contact No.",'',FALSE);
              END;
            END;
            Cont1.RESET;
            Cont1.SETCURRENTKEY("User GuID");
            Cont1.SETFILTER("No.",'<>%1',Cont."No.");
            Cont1.SETRANGE("User GuID",IntCust."No.");
            IF Cont1.FINDFIRST THEN BEGIN
              TempText := STRSUBSTNO(TxtCheck5_15,Cont1.COUNT);
              v := v + 1;
              IF RecProb THEN
                InsertProb(TempText,
                            TxtInternetCustomerNo,IntCust."No.",TxtCheck5_11,FORMAT(Cont1."No."),
                            IntCust."Contact No.",'',FALSE);
            END;
          END;
        END;
      UNTIL IntCust.NEXT = 0;
      Window.CLOSE;
      IF (v > 0) OR (x > 0) OR (w > 0) OR (y > 0) OR (z > 0) THEN BEGIN
        IF InAttendedMode THEN
          MESSAGE(TxtCheck5Error,v,w,x,y,z)
      END ELSE BEGIN
        IF InAttendedMode THEN
          MESSAGE(TxtCheck5OK);
      END;
    END;

    PROCEDURE InsertProb@1190000006(ProbDesc@1190000005 : Text[250];GUID1Desc@1190000006 : Text[38];InGuID1@1190000007 : Text[100];GUID2Desc@1190000010 : Text[38];InGuID2@1190000011 : Text[100];ContNo@1190000008 : Code[20];CustNo@1190000009 : Code[20];InNotFatal@1190000012 : Boolean);
    BEGIN
      MissL.INIT;
      MissL.Description := ProbDesc;
      MissL."GuID 1 Description" := GUID1Desc;
      MissL."GuID 1" := InGuID1;
      MissL."GuID 2 Description" := GUID2Desc;
      MissL."GuID 2" := InGuID2;
      MissL."Contact No." := ContNo;
      MissL."Customer No." := CustNo;
      MissL."Not Fatal" := InNotFatal;
      MissL."Fatal Type No." := FaultTypeNo;
      MissL.INSERT(TRUE);
    END;

    BEGIN
    {
      //DOC EC2016.6 JH 05/10/2016 - ECom 2016
    }
    END.
  }
}

