OBJECT Report 29 Export Acc. Sched. to Excel
{
  OBJECT-PROPERTIES
  {
    Date=22/12/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00.00.44365,NAVGB9.00.00.44365;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Export Acc. Sched. to Excel;
               ENG=Export Acc. Sched. to Excel];
    ProcessingOnly=Yes;
    UseRequestPage=No;
  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               OnAfterGetRecord=VAR
                                  Window@1000 : Dialog;
                                  RecNo@1001 : Integer;
                                  TotalRecNo@1002 : Integer;
                                  RowNo@1003 : Integer;
                                  ColumnNo@1004 : Integer;
                                  ClientFileName@1005 : Text;
                                BEGIN
                                  IF DoUpdateExistingWorksheet THEN
                                    IF NOT UploadClientFile(ClientFileName,ServerFileName) THEN
                                      EXIT;

                                  Window.OPEN(
                                    Text000 +
                                    '@1@@@@@@@@@@@@@@@@@@@@@\');
                                  Window.UPDATE(1,0);
                                  AccSchedLine.SETFILTER(Show,'<>%1',AccSchedLine.Show::No);
                                  TotalRecNo := AccSchedLine.COUNT;
                                  RecNo := 0;

                                  TempExcelBuffer.DELETEALL;
                                  CLEAR(TempExcelBuffer);

                                  AccSchedName.GET(AccSchedLine.GETRANGEMIN("Schedule Name"));
                                  AccSchedManagement.CheckAnalysisView(AccSchedName.Name,ColumnLayout.GETRANGEMIN("Column Layout Name"),TRUE);
                                  IF AccSchedName."Analysis View Name" <> '' THEN
                                    AnalysisView.GET(AccSchedName."Analysis View Name");
                                  GLSetup.GET;

                                  RowNo := 1;
                                  EnterCell(RowNo,1,Text001,FALSE,FALSE,TRUE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  IF AccSchedLine.GETFILTER("Date Filter") <> '' THEN BEGIN
                                    RowNo := RowNo + 1;
                                    EnterFilterInCell(
                                      RowNo,
                                      AccSchedLine.GETFILTER("Date Filter"),
                                      AccSchedLine.FIELDCAPTION("Date Filter"),
                                      '',
                                      TempExcelBuffer."Cell Type"::Text);
                                  END;
                                  IF AccSchedLine.GETFILTER("G/L Budget Filter") <> '' THEN BEGIN
                                    RowNo := RowNo + 1;
                                    EnterFilterInCell(
                                      RowNo,
                                      AccSchedLine.GETFILTER("G/L Budget Filter"),
                                      AccSchedLine.FIELDCAPTION("G/L Budget Filter"),
                                      '',
                                      TempExcelBuffer."Cell Type"::Text);
                                  END;

                                  IF AccSchedLine.GETFILTER("Cost Budget Filter") <> '' THEN BEGIN
                                    RowNo := RowNo + 1;
                                    EnterFilterInCell(
                                      RowNo,
                                      AccSchedLine.GETFILTER("Cost Budget Filter"),
                                      AccSchedLine.FIELDCAPTION("Cost Budget Filter"),
                                      '',
                                      TempExcelBuffer."Cell Type"::Text);
                                  END;

                                  IF AccSchedLine.GETFILTER("Dimension 1 Filter") <> '' THEN BEGIN
                                    RowNo := RowNo + 1;
                                    EnterFilterInCell(
                                      RowNo,
                                      AccSchedLine.GETFILTER("Dimension 1 Filter"),
                                      GetDimFilterCaption(1),
                                      '',
                                      TempExcelBuffer."Cell Type"::Text);
                                  END;
                                  IF AccSchedLine.GETFILTER("Dimension 2 Filter") <> '' THEN BEGIN
                                    RowNo := RowNo + 1;
                                    EnterFilterInCell(
                                      RowNo,
                                      AccSchedLine.GETFILTER("Dimension 2 Filter"),
                                      GetDimFilterCaption(2),
                                      '',
                                      TempExcelBuffer."Cell Type"::Text);
                                  END;
                                  IF AccSchedLine.GETFILTER("Dimension 3 Filter") <> '' THEN BEGIN
                                    RowNo := RowNo + 1;
                                    EnterFilterInCell(
                                      RowNo,
                                      AccSchedLine.GETFILTER("Dimension 3 Filter"),
                                      GetDimFilterCaption(3),
                                      '',
                                      TempExcelBuffer."Cell Type"::Text);
                                  END;
                                  IF AccSchedLine.GETFILTER("Dimension 4 Filter") <> '' THEN BEGIN
                                    RowNo := RowNo + 1;
                                    EnterFilterInCell(
                                      RowNo,
                                      AccSchedLine.GETFILTER("Dimension 4 Filter"),
                                      GetDimFilterCaption(4),
                                      '',
                                      TempExcelBuffer."Cell Type"::Text);
                                  END;

                                  RowNo := RowNo + 1;
                                  IF UseAmtsInAddCurr THEN BEGIN
                                    IF GLSetup."Additional Reporting Currency" <> '' THEN BEGIN
                                      RowNo := RowNo + 1;
                                      EnterFilterInCell(
                                        RowNo,
                                        GLSetup."Additional Reporting Currency",
                                        Currency.TABLECAPTION,
                                        '',
                                        TempExcelBuffer."Cell Type"::Text)
                                    END;
                                  END ELSE
                                    IF GLSetup."LCY Code" <> '' THEN BEGIN
                                      RowNo := RowNo + 1;
                                      EnterFilterInCell(
                                        RowNo,
                                        GLSetup."LCY Code",
                                        Currency.TABLECAPTION,
                                        '',
                                        TempExcelBuffer."Cell Type"::Text);
                                    END;

                                  RowNo := RowNo + 1;
                                  IF AccSchedLine.FIND('-') THEN BEGIN
                                    IF ColumnLayout.FIND('-') THEN BEGIN
                                      RowNo := RowNo + 1;
                                      ColumnNo := 2; // Skip the "Row No." column.
                                      REPEAT
                                        ColumnNo := ColumnNo + 1;
                                        EnterCell(
                                          RowNo,
                                          ColumnNo,
                                          ColumnLayout."Column Header",
                                          FALSE,
                                          FALSE,
                                          FALSE,
                                          FALSE,
                                          '',
                                          TempExcelBuffer."Cell Type"::Text);
                                      UNTIL ColumnLayout.NEXT = 0;
                                    END;
                                    REPEAT
                                      RecNo := RecNo + 1;
                                      Window.UPDATE(1,ROUND(RecNo / TotalRecNo * 10000,1));
                                      RowNo := RowNo + 1;
                                      ColumnNo := 1;
                                      EnterCell(
                                        RowNo,
                                        ColumnNo,
                                        AccSchedLine."Row No.",
                                        AccSchedLine.Bold,
                                        AccSchedLine.Italic,
                                        AccSchedLine.Underline,
                                        AccSchedLine."Double Underline",
                                        '0',
                                        TempExcelBuffer."Cell Type"::Number);
                                      ColumnNo := 2;
                                      EnterCell(
                                        RowNo,
                                        ColumnNo,
                                        AccSchedLine.Description,
                                        AccSchedLine.Bold,
                                        AccSchedLine.Italic,
                                        AccSchedLine.Underline,
                                        AccSchedLine."Double Underline",
                                        '',
                                        TempExcelBuffer."Cell Type"::Text);
                                      IF ColumnLayout.FIND('-') THEN BEGIN
                                        REPEAT
                                          IF AccSchedLine.Totaling = '' THEN
                                            ColumnValue := 0
                                          ELSE BEGIN
                                            ColumnValue := AccSchedManagement.CalcCell(AccSchedLine,ColumnLayout,UseAmtsInAddCurr);
                                            IF AccSchedManagement.GetDivisionError THEN
                                              ColumnValue := 0
                                          END;
                                          ColumnNo := ColumnNo + 1;
                                          EnterCell(
                                            RowNo,
                                            ColumnNo,
                                            MatrixMgt.FormatValue(ColumnValue,ColumnLayout."Rounding Factor",UseAmtsInAddCurr),
                                            AccSchedLine.Bold,
                                            AccSchedLine.Italic,
                                            AccSchedLine.Underline,
                                            AccSchedLine."Double Underline",
                                            '',
                                            TempExcelBuffer."Cell Type"::Number)
                                        UNTIL ColumnLayout.NEXT = 0;
                                      END;
                                    UNTIL AccSchedLine.NEXT = 0;
                                  END;

                                  Window.CLOSE;

                                  IF DoUpdateExistingWorksheet THEN BEGIN
                                    TempExcelBuffer.UpdateBook(ServerFileName,SheetName);
                                    TempExcelBuffer.WriteSheet('',COMPANYNAME,USERID);
                                    TempExcelBuffer.CloseBook;
                                    IF NOT TestMode THEN
                                      IF FileMgt.IsWebClient THEN
                                        TempExcelBuffer.DownloadAndOpenExcel
                                      ELSE
                                        TempExcelBuffer.OverwriteAndOpenExistingExcel(ClientFileName);
                                  END ELSE BEGIN
                                    TempExcelBuffer.CreateBook(ServerFileName,AccSchedName.Name);
                                    TempExcelBuffer.WriteSheet(AccSchedName.Description,COMPANYNAME,USERID);
                                    TempExcelBuffer.CloseBook;
                                    IF NOT TestMode THEN
                                      TempExcelBuffer.OpenExcel;
                                  END;
                                  IF NOT TestMode THEN
                                    TempExcelBuffer.GiveUserControl;
                                END;
                                 }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Analyzing Data...\\;ENG=Analysing Data...\\';
      Text001@1001 : TextConst 'ENU=Filters;ENG=Filters';
      Text002@1002 : TextConst 'ENU=Update Workbook;ENG=Update Workbook';
      AccSchedName@1003 : Record 84;
      AccSchedLine@1004 : Record 85;
      ColumnLayout@1005 : Record 334;
      TempExcelBuffer@1006 : TEMPORARY Record 370;
      GLSetup@1013 : Record 98;
      AnalysisView@1014 : Record 363;
      Currency@1015 : Record 4;
      AccSchedManagement@1007 : Codeunit 8;
      MatrixMgt@1018 : Codeunit 9200;
      FileMgt@1017 : Codeunit 419;
      UseAmtsInAddCurr@1008 : Boolean;
      ColumnValue@1009 : Decimal;
      ServerFileName@1016 : Text;
      SheetName@1011 : Text[250];
      DoUpdateExistingWorksheet@1010 : Boolean;
      ExcelFileExtensionTok@1012 : TextConst '@@@={Locked};ENU=.xlsx;ENG=.xlsx';
      TestMode@1019 : Boolean;

    PROCEDURE SetOptions@3(VAR AccSchedLine2@1000 : Record 85;ColumnLayoutName2@1001 : Code[10];UseAmtsInAddCurr2@1002 : Boolean);
    BEGIN
      AccSchedLine.COPYFILTERS(AccSchedLine2);
      ColumnLayout.SETRANGE("Column Layout Name",ColumnLayoutName2);
      UseAmtsInAddCurr := UseAmtsInAddCurr2;
    END;

    LOCAL PROCEDURE EnterFilterInCell@5(RowNo@1000 : Integer;Filter@1001 : Text[250];FieldName@1002 : Text[100];Format@1003 : Text[30];CellType@1004 : Option);
    BEGIN
      IF Filter <> '' THEN BEGIN
        EnterCell(RowNo,1,FieldName,FALSE,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,2,Filter,FALSE,FALSE,FALSE,FALSE,Format,CellType);
      END;
    END;

    LOCAL PROCEDURE EnterCell@2(RowNo@1000 : Integer;ColumnNo@1001 : Integer;CellValue@1002 : Text[250];Bold@1003 : Boolean;Italic@1004 : Boolean;UnderLine@1005 : Boolean;DoubleUnderLine@1008 : Boolean;Format@1006 : Text[30];CellType@1007 : Option);
    BEGIN
      TempExcelBuffer.INIT;
      TempExcelBuffer.VALIDATE("Row No.",RowNo);
      TempExcelBuffer.VALIDATE("Column No.",ColumnNo);
      TempExcelBuffer."Cell Value as Text" := CellValue;
      TempExcelBuffer.Formula := '';
      TempExcelBuffer.Bold := Bold;
      TempExcelBuffer.Italic := Italic;
      IF DoubleUnderLine = TRUE THEN BEGIN
        TempExcelBuffer."Double Underline" := TRUE;
        TempExcelBuffer.Underline := FALSE;
      END ELSE BEGIN
        TempExcelBuffer."Double Underline" := FALSE;
        TempExcelBuffer.Underline := UnderLine;
      END;
      TempExcelBuffer.NumberFormat := Format;
      TempExcelBuffer."Cell Type" := CellType;
      TempExcelBuffer.INSERT;
    END;

    LOCAL PROCEDURE GetDimFilterCaption@4(DimFilterNo@1000 : Integer) : Text[80];
    VAR
      Dimension@1001 : Record 348;
    BEGIN
      IF AccSchedName."Analysis View Name" = '' THEN
        CASE DimFilterNo OF
          1:
            Dimension.GET(GLSetup."Global Dimension 1 Code");
          2:
            Dimension.GET(GLSetup."Global Dimension 2 Code");
        END
      ELSE
        CASE DimFilterNo OF
          1:
            Dimension.GET(AnalysisView."Dimension 1 Code");
          2:
            Dimension.GET(AnalysisView."Dimension 2 Code");
          3:
            Dimension.GET(AnalysisView."Dimension 3 Code");
          4:
            Dimension.GET(AnalysisView."Dimension 4 Code");
        END;
      EXIT(COPYSTR(Dimension.GetMLFilterCaption(GLOBALLANGUAGE),1,80));
    END;

    PROCEDURE SetUpdateExistingWorksheet@1(UpdateExistingWorksheet@1000 : Boolean);
    BEGIN
      DoUpdateExistingWorksheet := UpdateExistingWorksheet;
    END;

    PROCEDURE SetCalendarSource@1040000(VAR CalendarSource@1040001 : ' ,System,AccPeriod';PeriodType@1040000 : 'Day,Week,Month,Quarter,Year');
    BEGIN
      AccSchedManagement.SetCalendarSource(CalendarSource,PeriodType);
    END;

    PROCEDURE SetFileNameSilent@6(NewFileName@1000 : Text);
    BEGIN
      ServerFileName := NewFileName;
    END;

    PROCEDURE SetTestMode@7(NewTestMode@1000 : Boolean);
    BEGIN
      TestMode := NewTestMode;
    END;

    LOCAL PROCEDURE UploadClientFile@10(VAR ClientFileName@1000 : Text;VAR ServerFileName@1001 : Text) : Boolean;
    BEGIN
      IF FileMgt.IsWebClient THEN
        ServerFileName := FileMgt.UploadFile(Text002,ExcelFileExtensionTok)
      ELSE BEGIN
        ClientFileName := FileMgt.OpenFileDialog(Text002,ExcelFileExtensionTok,'');
        IF ClientFileName = '' THEN
          EXIT(FALSE);
        ServerFileName := FileMgt.UploadFileSilent(ClientFileName);
      END;

      IF ServerFileName = '' THEN
        EXIT(FALSE);

      SheetName := TempExcelBuffer.SelectSheetsName(ServerFileName);
      IF SheetName = '' THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

