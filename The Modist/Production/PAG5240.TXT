OBJECT Page 5240 CRM Coupling Salesperson
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Microsoft Dynamics CRM User Coupling;
               ENG=Microsoft Dynamics CRM User Coupling];
    SourceTable=Table13;
    PageType=StandardDialog;
    OnInit=BEGIN
             SynchAction := SynchAction::PushToNAV;
             SetPushActionCheckboxes;
           END;

    OnAfterGetRecord=VAR
                       CRMIntegrationRecord@1000 : Record 5331;
                       CRMID@1001 : GUID;
                     BEGIN
                       IF CRMIntegrationRecord.FindIDFromRecordID(RECORDID,CRMID) THEN BEGIN
                         CRMSystemuser.GET(CRMID);
                         OriginalCRMSystemuser := CRMSystemuser;
                         SynchAction := SynchAction::DoNotSynch;
                         SetPushActionCheckboxes;
                       END;
                     END;

  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                CaptionML=[ENU=Coupling;
                           ENG=Coupling];
                GroupType=Group;
                Layout=Rows }

    { 3   ;2   ;Group     ;
                CaptionML=[ENU=Dynamics NAV;
                           ENG=Dynamics NAV];
                GroupType=Group }

    { 4   ;3   ;Field     ;
                CaptionML=[ENU=Salesperson;
                           ENG=Salesperson];
                SourceExpr=Name;
                Editable=FALSE }

    { 5   ;3   ;Field     ;
                Name=SynchActionControl;
                CaptionML=[ENU=Synchronize After Coupling;
                           ENG=Synchronise After Coupling];
                OptionCaptionML=[ENU=No,Yes - Use the Dynamics CRM data;
                                 ENG=No,Yes - Use the Dynamics CRM data];
                SourceExpr=SynchAction;
                OnValidate=BEGIN
                             SetPushActionCheckboxes;
                           END;
                            }

    { 6   ;2   ;Group     ;
                CaptionML=[ENU=Dynamics CRM;
                           ENG=Dynamics CRM];
                GroupType=Group }

    { 7   ;3   ;Field     ;
                Name=CRM Systemuser FullName;
                CaptionML=[ENU=User;
                           ENG=User];
                SourceExpr=CRMSystemuser.FullName;
                OnValidate=VAR
                             ManualCRMSystemuser@1000 : Record 5340;
                             PreviouslySelectedCRMSystemuser@1001 : Record 5340;
                             CRMSystemuserFound@1002 : Boolean;
                           BEGIN
                             PreviouslySelectedCRMSystemuser := CRMSystemuser;
                             ManualCRMSystemuser.SETRANGE(FullName,CRMSystemuser.FullName);

                             IF ManualCRMSystemuser.FINDFIRST THEN
                               CRMSystemuserFound := TRUE
                             ELSE BEGIN
                               ManualCRMSystemuser.SETCURRENTKEY(FullName);
                               ManualCRMSystemuser.SETFILTER(FullName,'%1',CRMSystemuser.FullName + '*');
                               IF ManualCRMSystemuser.FINDFIRST THEN
                                 CRMSystemuserFound := TRUE;
                             END;

                             IF CRMSystemuserFound THEN BEGIN
                               CRMSystemuser := ManualCRMSystemuser;
                               IF PreviouslySelectedCRMSystemuser.SystemUserId <> CRMSystemuser.SystemUserId THEN
                                 HandleNewCRMSystemuser;
                             END ELSE
                               ERROR(STRSUBSTNO(NoSuchCRMRecordErr,CRMSystemuser.FullName));
                           END;

                OnLookup=VAR
                           PreviouslySelectedCRMSystemuser@1002 : Record 5340;
                           CRMSystemuserList@1000 : Page 5340;
                         BEGIN
                           CRMSystemuserList.SETRECORD(CRMSystemuser);
                           CRMSystemuserList.SetCurrentlyCoupledCRMSystemuser(OriginalCRMSystemuser);
                           CRMSystemuserList.LOOKUPMODE(TRUE);
                           PreviouslySelectedCRMSystemuser := CRMSystemuser;

                           IF CRMSystemuserList.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             CRMSystemuserList.GETRECORD(CRMSystemuser);
                             IF PreviouslySelectedCRMSystemuser.SystemUserId <> CRMSystemuser.SystemUserId THEN
                               HandleNewCRMSystemuser;
                           END;
                         END;
                          }

    { 8   ;1   ;Group     ;
                CaptionML=[ENU=Coupled Records;
                           ENG=Coupled Records];
                Editable=FALSE;
                GroupType=Group }

    { 9   ;2   ;Group     ;
                GroupType=FixedLayout }

    { 10  ;3   ;Group     ;
                CaptionML=[ENU=Dynamics NAV Salesperson;
                           ENG=Dynamics NAV Salesperson];
                GroupType=Group;
                Layout=Columns }

    { 11  ;4   ;Field     ;
                Name=Name2;
                CaptionML=[ENU=Name;
                           ENG=Name];
                SourceExpr=Name }

    { 12  ;4   ;Field     ;
                SourceExpr="E-Mail" }

    { 13  ;4   ;Field     ;
                SourceExpr="Phone No." }

    { 14  ;4   ;Field     ;
                Name=PushToCRMControl;
                CaptionML=[ENU=Use for Synchronization;
                           ENG=Use for Synchronisation];
                SourceExpr=PushToCRM }

    { 15  ;3   ;Group     ;
                CaptionML=[ENU=Dynamics CRM User;
                           ENG=Dynamics CRM User];
                GroupType=Group }

    { 16  ;4   ;Field     ;
                SourceExpr=CRMSystemuser.FullName }

    { 17  ;4   ;Field     ;
                SourceExpr=CRMSystemuser.InternalEMailAddress }

    { 18  ;4   ;Field     ;
                SourceExpr=CRMSystemuser.MobilePhone }

    { 19  ;4   ;Field     ;
                Name=PushToNAVControl;
                SourceExpr=PushToNAV }

  }
  CODE
  {
    VAR
      CRMSystemuser@1001 : Record 5340;
      OriginalCRMSystemuser@1010 : Record 5340;
      IntegrationTableMapping@1009 : Record 5335;
      PushToCRM@1003 : Boolean;
      PushToNAV@1004 : Boolean;
      InitialSynchDisabledErr@1006 : TextConst 'ENU=No initial synchronization direction was specified because initial synchronization was disabled.;ENG=No initial synchronisation direction was specified because initial synchronisation was disabled.';
      NoSuchCRMRecordErr@1011 : TextConst '@@@="%1 = The User name entered by the user";ENU=User with name %1 does not exist in Microsoft Dynamics CRM.;ENG=User with name %1 does not exist in Microsoft Dynamics CRM.';
      SynchAction@1012 : 'DoNotSynch,PushToNAV';

    LOCAL PROCEDURE SetPushActionCheckboxes@14();
    BEGIN
      IF SynchAction = SynchAction::DoNotSynch THEN BEGIN
        PushToCRM := FALSE;
        PushToNAV := FALSE;
      END ELSE BEGIN
        PushToCRM := FALSE;
        PushToNAV := NOT PushToCRM;
      END
    END;

    LOCAL PROCEDURE HandleNewCRMSystemuser@7();
    VAR
      CRMIntegrationRecord@1001 : Record 5331;
    BEGIN
      IF OriginalCRMSystemuser.SystemUserId <> CRMSystemuser.SystemUserId THEN
        CRMIntegrationRecord.AssertRecordIDCanBeCoupled(RECORDID,CRMSystemuser.SystemUserId);
    END;

    PROCEDURE GetCRMID@6() : GUID;
    BEGIN
      EXIT(CRMSystemuser.SystemUserId);
    END;

    PROCEDURE GetPerformInitialSynchronization@3() : Boolean;
    BEGIN
      EXIT(SynchAction <> SynchAction::DoNotSynch);
    END;

    PROCEDURE GetInitialSynchronizationDirection@4() : Integer;
    BEGIN
      IF SynchAction = SynchAction::DoNotSynch THEN
        ERROR(InitialSynchDisabledErr);

      EXIT(IntegrationTableMapping.Direction::FromIntegrationTable);
    END;

    BEGIN
    END.
  }
}

