OBJECT Page 5530 Item Availability by Event
{
  OBJECT-PROPERTIES
  {
    Date=22/12/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00.00.44365;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Item Availability by Event;
               ENG=Item Availability by Event];
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    LinksAllowed=No;
    SourceTable=Table5531;
    DataCaptionExpr=PageCaption;
    SourceTableView=SORTING(Period Start,Line No.)
                    ORDER(Ascending);
    PageType=Worksheet;
    SourceTableTemporary=Yes;
    OnOpenPage=BEGIN
                 IF ItemIsSet THEN
                   InitAndCalculatePeriodEntries
                 ELSE
                   InitItemRequestFields;
               END;

    OnAfterGetRecord=BEGIN
                       Emphasize := EmphasizeLine;
                       EnableShowDocumentAction := HasSourceDocument;
                     END;

    OnQueryClosePage=BEGIN
                       IF CloseAction = ACTION::LookupOK THEN
                         SelectedDate := "Period Start";
                     END;

    ActionList=ACTIONS
    {
      { 3       ;0   ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 6       ;1   ;Action    ;
                      CaptionML=[ENU=Recalculate;
                                 ENG=Recalculate];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Refresh;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 InitAndCalculatePeriodEntries;
                               END;
                                }
      { 17      ;1   ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Show Document;
                                 ENG=Show Document];
                      Promoted=Yes;
                      Enabled=EnableShowDocumentAction;
                      PromotedIsBig=Yes;
                      Image=View;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CalcInventoryPageData.ShowDocument("Source Document ID");
                               END;
                                }
      { 24      ;    ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 23      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Item;
                                 ENG=&Item];
                      Image=Item }
      { 22      ;2   ;ActionGroup;
                      CaptionML=[ENU=&Item Availability by;
                                 ENG=&Item Availability by];
                      Image=ItemAvailability }
      { 20      ;3   ;Action    ;
                      CaptionML=[ENU=Event;
                                 ENG=Event];
                      Image=Event;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromItem(Item,ItemAvailFormsMgt.ByEvent);
                               END;
                                }
      { 18      ;3   ;Action    ;
                      CaptionML=[ENU=Period;
                                 ENG=Period];
                      Image=Period;
                      OnAction=BEGIN
                                 PAGE.RUN(PAGE::"Item Availability by Periods",Item,Item."No.");
                               END;
                                }
      { 11      ;3   ;Action    ;
                      CaptionML=[ENU=Variant;
                                 ENG=Variant];
                      Image=ItemVariant;
                      OnAction=BEGIN
                                 PAGE.RUN(PAGE::"Item Availability by Variant",Item,Item."No.");
                               END;
                                }
      { 7       ;3   ;Action    ;
                      AccessByPermission=TableData 14=R;
                      CaptionML=[ENU=Location;
                                 ENG=Location];
                      Image=Warehouse;
                      OnAction=BEGIN
                                 PAGE.RUN(PAGE::"Item Availability by Location",Item,Item."No.");
                               END;
                                }
      { 25      ;3   ;Action    ;
                      CaptionML=[ENU=BOM Level;
                                 ENG=BOM Level];
                      Image=BOMLevel;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromItem(Item,ItemAvailFormsMgt.ByBOM);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=[ENU=Options;
                           ENG=Options];
                GroupType=Group }

    { 30  ;2   ;Field     ;
                CaptionML=[ENU=Item No.;
                           ENG=Item No.];
                SourceExpr=ItemNo;
                TableRelation=Item;
                OnValidate=BEGIN
                             IF ItemNo <> Item."No." THEN BEGIN
                               Item.GET(ItemNo);
                               IF LocationFilter <> '' THEN
                                 Item.SETFILTER("Location Filter",LocationFilter);
                               IF VariantFilter <> '' THEN
                                 Item.SETFILTER("Variant Filter",VariantFilter);
                               InitAndCalculatePeriodEntries;
                             END;
                           END;
                            }

    { 35  ;2   ;Field     ;
                CaptionML=[ENU=Variant Filter;
                           ENG=Variant Filter];
                SourceExpr=VariantFilter;
                OnValidate=BEGIN
                             IF VariantFilter <> Item.GETFILTER("Variant Filter") THEN BEGIN
                               Item.SETRANGE("Variant Filter");
                               IF VariantFilter <> '' THEN
                                 Item.SETFILTER("Variant Filter",VariantFilter);
                               InitAndCalculatePeriodEntries;
                             END;
                           END;

                OnLookup=VAR
                           ItemVariant@1001 : Record 5401;
                           ItemVariants@1000 : Page 5401;
                         BEGIN
                           ItemVariant.SETFILTER("Item No.",ItemNo);
                           ItemVariants.SETTABLEVIEW(ItemVariant);
                           ItemVariants.LOOKUPMODE := TRUE;
                           IF ItemVariants.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             ItemVariants.GETRECORD(ItemVariant);
                             Text := ItemVariant.Code;
                             EXIT(TRUE);
                           END;
                           EXIT(FALSE);
                         END;
                          }

    { 4   ;2   ;Field     ;
                CaptionML=[ENU=Location Filter;
                           ENG=Location Filter];
                SourceExpr=LocationFilter;
                OnValidate=BEGIN
                             IF LocationFilter <> Item.GETFILTER("Location Filter") THEN BEGIN
                               Item.SETRANGE("Location Filter");
                               IF LocationFilter <> '' THEN
                                 Item.SETFILTER("Location Filter",LocationFilter);
                               InitAndCalculatePeriodEntries;
                             END;
                           END;

                OnLookup=VAR
                           Location@1001 : Record 14;
                           LocationList@1000 : Page 15;
                         BEGIN
                           LocationList.SETTABLEVIEW(Location);
                           LocationList.LOOKUPMODE := TRUE;
                           IF LocationList.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             LocationList.GETRECORD(Location);
                             Text := Location.Code;
                             EXIT(TRUE);
                           END;
                           EXIT(FALSE);
                         END;
                          }

    { 15  ;2   ;Field     ;
                CaptionML=[ENU=View by;
                           ENG=View by];
                OptionCaptionML=[ENU=Day,Week,Month,Quarter,Year;
                                 ENG=Day,Week,Month,Quarter,Year];
                SourceExpr=PeriodType;
                Importance=Promoted;
                OnValidate=BEGIN
                             CalculatePeriodEntries;
                           END;
                            }

    { 13  ;2   ;Field     ;
                CaptionML=[ENU=Last Updated;
                           ENG=Last Updated];
                SourceExpr=LastUpdateTime;
                Importance=Promoted;
                Editable=FALSE }

    { 9   ;2   ;Field     ;
                CaptionML=[ENU=Forecast Name;
                           ENG=Forecast Name];
                SourceExpr=ForecastName;
                TableRelation="Production Forecast Name";
                Importance=Promoted;
                OnValidate=BEGIN
                             InitAndCalculatePeriodEntries;
                           END;
                            }

    { 32  ;2   ;Field     ;
                CaptionML=[ENU=Include Planning Suggestions;
                           ENG=Include Planning Suggestions];
                SourceExpr=IncludePlanningSuggestions;
                OnValidate=BEGIN
                             IF IncludePlanningSuggestions THEN
                               IncludeBlanketOrders := TRUE;

                             InitAndCalculatePeriodEntries;
                           END;
                            }

    { 16  ;2   ;Field     ;
                CaptionML=[ENU=Include Blanket Sales Orders;
                           ENG=Include Blanket Sales Orders];
                SourceExpr=IncludeBlanketOrders;
                Editable=NOT IncludePlanningSuggestions;
                OnValidate=BEGIN
                             InitAndCalculatePeriodEntries;
                           END;
                            }

    { 5   ;1   ;Group     ;
                Editable=FALSE;
                IndentationColumnName=Level;
                IndentationControls=Description;
                ShowAsTree=Yes;
                GroupType=Repeater }

    { 39  ;2   ;Field     ;
                CaptionML=[ENU=Period;
                           ENG=Period];
                SourceExpr=Code;
                Editable=FALSE;
                Style=Strong;
                StyleExpr=Emphasize }

    { 8   ;2   ;Field     ;
                SourceExpr="Period Start";
                Visible=TRUE;
                Editable=FALSE;
                Style=Strong;
                StyleExpr=Emphasize }

    { 14  ;2   ;Field     ;
                SourceExpr=Description;
                Editable=FALSE;
                Style=Strong;
                StyleExpr=Emphasize }

    { 19  ;2   ;Field     ;
                SourceExpr=Type;
                Editable=FALSE;
                Style=Strong;
                StyleExpr=Emphasize }

    { 28  ;2   ;Field     ;
                SourceExpr=Source;
                Editable=FALSE;
                Style=Strong;
                StyleExpr=Emphasize }

    { 21  ;2   ;Field     ;
                SourceExpr="Document No.";
                Editable=FALSE;
                Style=Strong;
                StyleExpr=Emphasize }

    { 10  ;2   ;Field     ;
                SourceExpr="Variant Code";
                Visible=FALSE;
                Editable=FALSE;
                Style=Strong;
                StyleExpr=Emphasize }

    { 12  ;2   ;Field     ;
                SourceExpr="Location Code";
                Visible=FALSE;
                Editable=FALSE;
                Style=Strong;
                StyleExpr=Emphasize }

    { 41  ;2   ;Field     ;
                SourceExpr="Gross Requirement";
                Editable=FALSE;
                Style=Strong;
                StyleExpr=Emphasize }

    { 26  ;2   ;Field     ;
                SourceExpr="Reserved Requirement";
                Editable=FALSE;
                Style=Strong;
                StyleExpr=Emphasize }

    { 43  ;2   ;Field     ;
                SourceExpr="Scheduled Receipt";
                Editable=FALSE;
                Style=Strong;
                StyleExpr=Emphasize }

    { 27  ;2   ;Field     ;
                SourceExpr="Reserved Receipt";
                Editable=FALSE;
                Style=Strong;
                StyleExpr=Emphasize }

    { 2   ;2   ;Field     ;
                SourceExpr="Remaining Quantity (Base)";
                Visible=FALSE;
                Editable=FALSE;
                Style=Strong;
                StyleExpr=Emphasize }

    { 33  ;2   ;Field     ;
                DecimalPlaces=0:5;
                SourceExpr="Projected Inventory";
                Enabled=FALSE;
                Editable=FALSE;
                Style=Strong;
                StyleExpr=Emphasize }

    { 45  ;2   ;Field     ;
                SourceExpr=Forecast;
                Editable=FALSE;
                Style=Strong;
                StyleExpr=Emphasize }

    { 37  ;2   ;Field     ;
                DecimalPlaces=0:5;
                SourceExpr="Forecasted Projected Inventory";
                Editable=FALSE;
                Style=Strong;
                StyleExpr=Emphasize }

    { 49  ;2   ;Field     ;
                SourceExpr="Remaining Forecast";
                Editable=FALSE;
                Style=Strong;
                StyleExpr=Emphasize }

    { 53  ;2   ;Field     ;
                SourceExpr="Action Message";
                Editable=FALSE;
                Style=Strong;
                StyleExpr=Emphasize }

    { 51  ;2   ;Field     ;
                SourceExpr="Action Message Qty.";
                Editable=FALSE;
                Style=Strong;
                StyleExpr=Emphasize }

    { 47  ;2   ;Field     ;
                DecimalPlaces=0:5;
                SourceExpr="Suggested Projected Inventory";
                Editable=FALSE;
                Style=Strong;
                StyleExpr=Emphasize }

  }
  CODE
  {
    VAR
      Item@1004 : Record 27;
      TempInvtPageData@1015 : TEMPORARY Record 5531;
      CalcInventoryPageData@1010 : Codeunit 5531;
      ItemAvailFormsMgt@1021 : Codeunit 353;
      ItemNo@1003 : Code[20];
      LocationFilter@1009 : Code[250];
      VariantFilter@1008 : Code[250];
      ForecastName@1005 : Code[10];
      PeriodType@1000 : 'Day,Week,Month,Quarter,Year';
      LastUpdateTime@1016 : DateTime;
      SelectedDate@1001 : Date;
      IncludePlanningSuggestions@1011 : Boolean INDATASET;
      IncludeBlanketOrders@1014 : Boolean INDATASET;
      Emphasize@1020 : Boolean INDATASET;
      EnableShowDocumentAction@1007 : Boolean INDATASET;

    LOCAL PROCEDURE InitAndCalculatePeriodEntries@14();
    BEGIN
      Initialize;
      CalculatePeriodEntries;
    END;

    LOCAL PROCEDURE CalculatePeriodEntries@8();
    BEGIN
      TempInvtPageData.RESET;
      TempInvtPageData.DELETEALL;
      TempInvtPageData.SETCURRENTKEY("Period Start","Line No.");
      CalcInventoryPageData.CreatePeriodEntries(TempInvtPageData,PeriodType);

      RESET;
      DELETEALL;
      SETCURRENTKEY("Period Start","Line No.");

      TempInvtPageData.SETRANGE(Level,0);
      IF TempInvtPageData.FIND('-') THEN
        REPEAT
          CalcInventoryPageData.DetailsForPeriodEntry(TempInvtPageData,TRUE);
          CalcInventoryPageData.DetailsForPeriodEntry(TempInvtPageData,FALSE);
        UNTIL TempInvtPageData.NEXT = 0;
      TempInvtPageData.SETRANGE(Level);

      ExpandAll;
    END;

    LOCAL PROCEDURE Initialize@1();
    BEGIN
      Item.SETRANGE("Drop Shipment Filter",FALSE);
      CalcInventoryPageData.Initialize(Item,ForecastName,IncludeBlanketOrders,0D,IncludePlanningSuggestions);
      LastUpdateTime := CURRENTDATETIME;
    END;

    LOCAL PROCEDURE ExpandAll@9();
    VAR
      RunningInventory@1000 : Decimal;
      RunningInventoryForecast@1002 : Decimal;
      RunningInventoryPlan@1001 : Decimal;
    BEGIN
      RESET;
      DELETEALL;
      SETCURRENTKEY("Period Start","Line No.");

      IF TempInvtPageData.FIND('-') THEN
        REPEAT
          Rec := TempInvtPageData;
          UpdateInventorys(RunningInventory,RunningInventoryForecast,RunningInventoryPlan);
          INSERT;
        UNTIL TempInvtPageData.NEXT = 0;

      IF FIND('-') THEN;
    END;

    LOCAL PROCEDURE EmphasizeLine@4() : Boolean;
    BEGIN
      EXIT(Level = 0);
    END;

    LOCAL PROCEDURE HasSourceDocument@7() : Boolean;
    BEGIN
      EXIT((Level > 0) AND (FORMAT("Source Document ID") <> ''));
    END;

    LOCAL PROCEDURE InitItemRequestFields@10();
    BEGIN
      CLEAR(Item);
      CLEAR(ItemNo);
      CLEAR(LocationFilter);
      CLEAR(VariantFilter);
      CLEAR(LastUpdateTime);
    END;

    LOCAL PROCEDURE UpdateItemRequestFields@11(VAR Item@1000 : Record 27);
    BEGIN
      ItemNo := Item."No.";
      LocationFilter := '';
      IF Item.GETFILTER("Location Filter") <> '' THEN
        LocationFilter := Item.GETFILTER("Location Filter");
      VariantFilter := '';
      IF Item.GETFILTER("Variant Filter") <> '' THEN
        VariantFilter := Item.GETFILTER("Variant Filter");
    END;

    LOCAL PROCEDURE ItemIsSet@16() : Boolean;
    BEGIN
      EXIT(Item."No." <> '');
    END;

    LOCAL PROCEDURE PageCaption@5() : Text[250];
    BEGIN
      EXIT(STRSUBSTNO('%1 %2',Item."No.",Item.Description));
    END;

    PROCEDURE SetItem@3(VAR NewItem@1000 : Record 27);
    BEGIN
      Item.COPY(NewItem);
      UpdateItemRequestFields(Item);
    END;

    PROCEDURE SetForecastName@2(NewForcastName@1000 : Code[10]);
    BEGIN
      ForecastName := NewForcastName;
    END;

    PROCEDURE SetIncludePlan@6(NewIncludePlanningSuggestions@1000 : Boolean);
    BEGIN
      IncludePlanningSuggestions := NewIncludePlanningSuggestions;
    END;

    PROCEDURE GetSelectedDate@13() : Date;
    BEGIN
      EXIT(SelectedDate);
    END;

    BEGIN
    END.
  }
}

