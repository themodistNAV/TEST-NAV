OBJECT Codeunit 9062344 System Colour Management
{
  OBJECT-PROPERTIES
  {
    Date=27/08/15;
    Time=12:57:28 PM;
    Version List=NA2016.5;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      mSystemColour@1000000002 : Record 9062336;
      mTnpToolkit@1000000003 : Codeunit 9062230;
      mRecordRef@1000000000 : RecordRef;
      mFieldRef@1000000001 : FieldRef;
      tWindowsData@1000000004 : TextConst 'ENU="<ColourTemplate ColourCode=""%1"" Colour=""%2"" SpecialColour=""%3"" />";ENG="<ColourTemplate ColourCode=""%1"" Colour=""%2"" SpecialColour=""%3"" />"';
      tWebData@1000000005 : TextConst 'ENU="{ ""Caption"": ""%1"", ""ColourCode"": ""%2"", ""Colour"": ""%3"", ""SystemColour"": ""%4"" } ";ENG="{ ""Caption"": ""%1"", ""ColourCode"": ""%2"", ""Colour"": ""%3"", ""SystemColour"": ""%4"" } "';

    PROCEDURE "--- General ---"@1000000017();
    BEGIN
    END;

    PROCEDURE SystemColourLookup@1000000001(VAR pColourCode@1000000000 : Code[20]) : Boolean;
    VAR
      lSystemColour@1000000001 : Record 9062336;
      lResult@1000000002 : Boolean;
    BEGIN
      //DOC NA2015.2 - Performing system colour lookup
      //  <> pColourCode: Source / target colour code
      //  <- Lookup result

      lResult := FALSE;

      lSystemColour.RESET();
      IF (lSystemColour.GET(pColourCode)) THEN;
      IF (PAGE.RUNMODAL(0, lSystemColour) = ACTION::LookupOK) THEN
      BEGIN
        pColourCode := lSystemColour.Code;
        lResult := TRUE;
      END;

      EXIT(lResult);
    END;

    PROCEDURE "--- Windows Add-in ---"@1000000013();
    BEGIN
    END;

    PROCEDURE WindowsAddInDataForRecord@1000000004(pTableId@1000000000 : Integer;pFieldId@1000000001 : Integer;pRecord@1000000002 : Variant) : Text;
    VAR
      lData@1000000004 : Text[1024];
    BEGIN
      //DOC NA2015.5 - Returning windows add-in data for given record
      //  -> pTableId: Table ID
      //  -> pFieldId: Field ID
      //  -> pRecord: Record
      //  <- The data

      Initialise(pTableId, pFieldId, pRecord);
      lData := WindowsAddInData(mSystemColour.Code);
      Finalise();
      EXIT(lData);
    END;

    PROCEDURE WindowsAddInData@1000000010(pColourCode@1000000000 : Code[20]) : Text;
    VAR
      lSystemColour@1000000001 : Boolean;
    BEGIN
      //DOC NA2015.5 - Returning windows add-in data
      //  -> pColourCode: Colour code
      //  <- The data

      IF (mSystemColour.Code <> pColourCode) THEN
        IF ( NOT (mSystemColour.GET(pColourCode))) THEN
          CLEAR(mSystemColour);

      lSystemColour := (mSystemColour."Special Colour" <> mSystemColour."Special Colour"::" ");
      EXIT(STRSUBSTNO(tWindowsData, mSystemColour.Code, mSystemColour.Name, mTnpToolkit.ToXmlBoolean(lSystemColour)));
    END;

    PROCEDURE WindowsAddInColourCodeChanged@1000000019(pValue@1000000000 : Text;pTableId@1000000003 : Integer;pFieldId@1000000002 : Integer;pRecord@1000000001 : Variant) : Boolean;
    VAR
      eUnknownColour@1000000005 : TextConst 'ENU=Unknown colour: "%1";ENG=Unknown colour: "%1"';
    BEGIN
      //DOC NA2015.1 - Add-in colour code changed handler for passed table, field and record
      //  -> pValue: Value
      //  -> pTableId: Table ID
      //  -> pFieldId: Field ID
      //  -> pRecord: Record
      //  <- Value amended

      Initialise(pTableId, pFieldId, pRecord);
      IF (mSystemColour.Search(pValue)) THEN
        WriteColour()
      ELSE
        MESSAGE(eUnknownColour, pValue);
      Finalise();
      EXIT(TRUE);
    END;

    PROCEDURE WindowsAddInLookup@1000000002(pTableId@1000000004 : Integer;pFieldId@1000000003 : Integer;pRecord@1000000000 : Variant) : Boolean;
    VAR
      lColour@1000000001 : Record 9062336;
      lResult@1000000002 : Boolean;
    BEGIN
      //DOC NA2015.1 - Doing add-in colour lookup for passed table, field and record
      //  -> pTableId: Table ID
      //  -> pFieldId: Field ID
      //  -> pRecord: Record
      //  <- Lookup result

      Initialise(pTableId, pFieldId, pRecord);
      IF (PAGE.RUNMODAL(0, mSystemColour) = ACTION::LookupOK) THEN
      BEGIN
        WriteColour();
        lResult := TRUE;
      END;
      Finalise();
      EXIT(lResult);
    END;

    PROCEDURE "--- Web Add-in ---"@1000000014();
    BEGIN
    END;

    PROCEDURE WebAddInDataForRecord@1000000016(pTableId@1000000000 : Integer;pFieldId@1000000001 : Integer;pRecord@1000000002 : Variant) : Text;
    VAR
      lData@1000000004 : Text[1024];
    BEGIN
      //DOC NA2015.5 - Returning web add-in data for given record
      //  -> pTableId: Table ID
      //  -> pFieldId: Field ID
      //  -> pRecord: Record
      //  <- The data

      Initialise(pTableId, pFieldId, pRecord);
      lData := WebAddInData(mFieldRef.CAPTION, mSystemColour.Code);
      Finalise();
      EXIT(lData);
    END;

    PROCEDURE WebAddInData@1000000015(pCaption@1000000002 : Text;pColourCode@1000000000 : Code[20]) : Text;
    VAR
      lSystemColour@1000000001 : Boolean;
    BEGIN
      //DOC NA2015.5 - Returning web add-in data
      //  -> pCaption: Caption
      //  -> pColourCode: Colour code
      //  <- The data

      IF (mSystemColour.Code <> pColourCode) THEN
        IF ( NOT (mSystemColour.GET(pColourCode))) THEN
          CLEAR(mSystemColour);

      lSystemColour := (mSystemColour."Special Colour" <> mSystemColour."Special Colour"::" ");
      EXIT(STRSUBSTNO(tWebData, pCaption, mSystemColour.Code, mSystemColour.HtmlColourName(mSystemColour.Code),
        mTnpToolkit.ToJsonBoolean(lSystemColour)));
    END;

    PROCEDURE "--- Internal Methods ---"@1000000020();
    BEGIN
    END;

    LOCAL PROCEDURE Initialise@1000000000(pTableId@1000000002 : Integer;pFieldId@1000000001 : Integer;pRecord@1000000000 : Variant);
    VAR
      lColourCode@1000000003 : Code[20];
    BEGIN
      //DOC NA2015.1 - Initialising the codeunit
      //  -> pTableId: Table ID
      //  -> pFieldId: Field ID
      //  -> pRecord: Record

      mRecordRef.OPEN(pTableId);
      mRecordRef.GETTABLE(pRecord);
      mFieldRef := mRecordRef.FIELD(pFieldId);
      lColourCode := COPYSTR(FORMAT(mFieldRef.VALUE), 1, MAXSTRLEN(lColourCode));
      IF ( NOT (mSystemColour.GET(lColourCode))) THEN
        CLEAR(mSystemColour);
      mSystemColour.RESET();
    END;

    LOCAL PROCEDURE WriteColour@1000000006();
    BEGIN
      //DOC NA2015.1 - Writing colour back to the record
      //  Unfortunately FieldRef.SETRECORD doesn't work with variants (FM again...), so we have to make a dirty trick of
      //  actually modifying the record in the database. Please, remember when using it, page refresing after using
      //  any of these functions is crucial because of this activity.

      IF (FORMAT(mFieldRef.VALUE) <> mSystemColour.Code) THEN
      BEGIN
        mFieldRef.VALIDATE(mSystemColour.Code);
        mRecordRef.MODIFY(TRUE);
      END;
    END;

    LOCAL PROCEDURE Finalise@1000000003();
    BEGIN
      //DOC NA2015.1 - Finalising the codeunit

      mRecordRef.CLOSE();
    END;

    BEGIN
    {
      //DOC NA2015.1 JH 05/10/2013 - Created
      //DOC NA2015.2 JH 26/05/2014 - Lookup added
      //DOC NA2015.5 JH 12/02/2015 - Web add-in supported, fixes
      //DOC NA2016.5 JH 27/08/2015 - Upgraded to 2016
    }
    END.
  }
}

