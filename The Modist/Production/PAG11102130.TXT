OBJECT Page 11102130 OM - Branch Subform
{
  OBJECT-PROPERTIES
  {
    Date=04/02/15;
    Time=12:00:00 PM;
    Version List=OMA9.05;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Branch Subform;
               ENU=Branch Subform;
               ESP=Branch Subform;
               FRA=Branch Subform;
               NLD=Branch subform;
               DEA=Branch Subform];
    InsertAllowed=No;
    SourceTable=Table11102052;
    SourceTableView=WHERE(Visible=CONST(Yes));
    PageType=ListPart;
    OnAfterGetRecord=BEGIN
                       ActualExpansionStatus := ExpansionStatus;

                       IF ActualExpansionStatus = ActualExpansionStatus::Child THEN
                         ShowOutdated := FALSE
                       ELSE
                         ShowOutdated := Outdated;

                       IF ActualExpansionStatus = ActualExpansionStatus::Child THEN BEGIN
                         Indent := 1;
                         LineStyle := 'Subordinate';
                       END ELSE BEGIN
                         Indent := 0;
                         LineStyle := '';
                       END;
                     END;

    OnDeleteRecord=VAR
                     CALHistoryObject@1000 : Record 11102052;
                   BEGIN
                     IF ExpansionStatus = ActualExpansionStatus::Collapsed THEN BEGIN

                       CALHistoryObject.SETCURRENTKEY("Branch No.", "Object Type", "Object No.", "Branch Order");
                       CALHistoryObject.SETRANGE("Branch No.", "Branch No.");
                       CALHistoryObject.SETRANGE("Object Type", "Object Type");
                       CALHistoryObject.SETRANGE("Object No.", "Object No.");
                       CALHistoryObject.MODIFYALL("Branch No.", '', TRUE);

                     END ELSE BEGIN

                       VALIDATE("Branch No.", '');
                       MODIFY(TRUE);
                     END;
                     EXIT(FALSE);
                   END;

    OnAfterGetCurrRecord=BEGIN
                           CurrRec := Rec;
                         END;

    ActionList=ACTIONS
    {
      { 1       ;0   ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 2       ;1   ;ActionGroup;
                      CaptionML=[DEU=F&unctions;
                                 ENU=F&unctions;
                                 ESP=F&unctions;
                                 FRA=F&unctions;
                                 NLD=F&uncties;
                                 DEA=F&unctions] }
      { 3       ;2   ;Action    ;
                      ShortCutKey=Shift+Ctrl+C;
                      CaptionML=[DEU=Compare;
                                 ENU=Compare;
                                 ESP=Compare;
                                 FRA=Compare;
                                 NLD=Ver&gelijken;
                                 DEA=Compare];
                      OnAction=BEGIN
                                 Compare;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 4   ;0   ;Container ;
                ContainerType=ContentArea }

    { 5   ;1   ;Group     ;
                IndentationColumnName=Indent;
                IndentationControls=Object Type,Object Name,Object Caption;
                ShowAsTree=Yes;
                GroupType=Repeater }

    { 6   ;2   ;Field     ;
                SourceExpr="Entry No.";
                Visible=FALSE;
                Editable=FALSE;
                StyleExpr=LineStyle }

    { 7   ;2   ;Field     ;
                SourceExpr="Object Type";
                StyleExpr=LineStyle }

    { 8   ;2   ;Field     ;
                SourceExpr="Object No.";
                LookupPageID=OM - Object List;
                StyleExpr=LineStyle }

    { 9   ;2   ;Field     ;
                SourceExpr="Object Name";
                StyleExpr=LineStyle }

    { 10  ;2   ;Field     ;
                DrillDown=No;
                SourceExpr="Object Caption";
                Visible=FALSE;
                StyleExpr=LineStyle }

    { 11  ;2   ;Field     ;
                SourceExpr=Modified;
                StyleExpr=LineStyle }

    { 12  ;2   ;Field     ;
                SourceExpr=Compiled;
                StyleExpr=LineStyle }

    { 13  ;2   ;Field     ;
                CaptionML=[DEU=Outdated;
                           ENU=Outdated;
                           ESP=Outdated;
                           FRA=Outdated;
                           NLD=Outdated;
                           DEA=Outdated];
                SourceExpr=ShowOutdated;
                Editable=FALSE;
                StyleExpr=LineStyle }

    { 14  ;2   ;Field     ;
                SourceExpr="Version List";
                StyleExpr=LineStyle }

    { 15  ;2   ;Field     ;
                SourceExpr="Object Date";
                StyleExpr=LineStyle }

    { 16  ;2   ;Field     ;
                SourceExpr="Object Time";
                StyleExpr=LineStyle }

    { 17  ;2   ;Field     ;
                SourceExpr="Object Date Time";
                Visible=FALSE;
                StyleExpr=LineStyle }

    { 18  ;2   ;Field     ;
                SourceExpr="Added By";
                Visible=FALSE;
                StyleExpr=LineStyle }

    { 19  ;2   ;Field     ;
                SourceExpr="Added Date";
                Visible=FALSE;
                StyleExpr=LineStyle }

    { 20  ;2   ;Field     ;
                SourceExpr="Added Time";
                Visible=FALSE;
                StyleExpr=LineStyle }

    { 21  ;2   ;Field     ;
                SourceExpr="Added Date Time";
                Visible=FALSE;
                StyleExpr=LineStyle }

  }
  CODE
  {
    VAR
      CurrRec@1000 : Record 11102052;
      LineStyle@1001 : Text INDATASET;
      Indent@1002 : Integer INDATASET;
      ActualExpansionStatus@1003 : 'Collapsed,Expanded,No Children,Child';
      ShowOutdated@1004 : Boolean;

    PROCEDURE RunObject@1();
    VAR
      Object@1000 : Record 2000000001;
      ObjectMgt@1001 : Codeunit 11102046;
    BEGIN
      Object.GET(CurrRec."Object Type", '', CurrRec."Object No.");
      ObjectMgt.RunObject(Object);
    END;

    PROCEDURE DesignObject@2();
    VAR
      Object@1000 : Record 2000000001;
      ObjectMgt@1001 : Codeunit 11102046;
    BEGIN
      Object.GET(CurrRec."Object Type", '', CurrRec."Object No.");
      ObjectMgt.DesignObject(Object);
    END;

    PROCEDURE Navigate@6();
    VAR
      Object@1000 : Record 2000000001;
      ObjectMgt@1001 : Codeunit 11102046;
    BEGIN
      Object.GET(CurrRec."Object Type", '', CurrRec."Object No.");
      ObjectMgt.Navigate(Object);
    END;

    PROCEDURE ShowCALHistory@3();
    VAR
      CALHistoryObject@1000 : Record 11102052;
      CALHistoryObjects@1001 : Page 11102072;
    BEGIN
      CALHistoryObject.SETCURRENTKEY("Object Type", "Object No.");
      CALHistoryObject.SETRANGE("Object Type", CurrRec."Object Type");
      CALHistoryObject.SETRANGE("Object No.", CurrRec."Object No.");

      CALHistoryObjects.SETTABLEVIEW(CALHistoryObject);
      CALHistoryObjects.RUNMODAL;
    END;

    LOCAL PROCEDURE ExpansionStatus@4() : Integer;
    VAR
      CALHistoryObject@1000 : Record 11102052;
    BEGIN
      CALHistoryObject.SETCURRENTKEY("Branch No.", "Object Type", "Object No.", "Branch Order");
      CALHistoryObject.SETRANGE("Branch No.", "Branch No.");
      CALHistoryObject.SETRANGE("Object Type", "Object Type");
      CALHistoryObject.SETRANGE("Object No.", "Object No.");
      CALHistoryObject.SETFILTER("Branch Order", '<>%1', "Branch Order");
      IF NOT CALHistoryObject.FINDFIRST THEN
        EXIT(ActualExpansionStatus::"No Children");

      IF CALHistoryObject."Branch Order" < "Branch Order" THEN
        EXIT(ActualExpansionStatus::Child);

      IF CALHistoryObject.Visible THEN
        EXIT(ActualExpansionStatus::Expanded);

      EXIT(ActualExpansionStatus::Collapsed);
    END;

    LOCAL PROCEDURE Compare@5();
    VAR
      CALHistoryObject@1000 : Record 11102052;
      LeftCALHistoryObject@1001 : Record 11102052;
      SourceControl@1002 : Codeunit 11102050;
    BEGIN
      CurrPage.SETSELECTIONFILTER(CALHistoryObject);

      CALHistoryObject.FINDFIRST;
      LeftCALHistoryObject := CALHistoryObject;
      CALHistoryObject.NEXT;

      SourceControl.Compare(LeftCALHistoryObject, CALHistoryObject);
    END;

    BEGIN
    END.
  }
}

