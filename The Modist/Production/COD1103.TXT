OBJECT Codeunit 1103 CA Jnl.-Post Batch
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    TableNo=1101;
    Permissions=TableData 1102=imd;
    OnRun=BEGIN
            CostJnlLine.COPY(Rec);
            Code;
            Rec := CostJnlLine;
          END;

  }
  CODE
  {
    VAR
      CostJnlLine@1000 : Record 1101;
      CostReg@1001 : Record 1105;
      CostRegNo@1002 : Integer;
      Text000@1003 : TextConst 'ENU=cannot exceed %1 characters;ENG=cannot exceed %1 characters';
      Text001@1004 : TextConst 'ENU=Journal Batch Name    #1##########\\Checking lines        #2######\Posting lines         #3###### @4@@@@@@@@@@@@@;ENG=Journal Batch Name    #1##########\\Checking lines        #2######\Posting lines         #3###### @4@@@@@@@@@@@@@';
      Text002@1005 : TextConst 'ENU=The lines in Cost Journal are out of balance by %1. Verify that %2 and %3 are correct for each line.;ENG=The lines in Cost Journal are out of balance by %1. Verify that %2 and %3 are correct for each line.';

    LOCAL PROCEDURE Code@1();
    VAR
      CostJnlTemplate@1000 : Record 1100;
      CostJnlBatch@1001 : Record 1102;
      CAJnlCheckLine@1018 : Codeunit 1101;
      CAJnlPostLine@1019 : Codeunit 1102;
      Window@1002 : Dialog;
      StartLineNo@1016 : Integer;
      LineCount@1010 : Integer;
      NoOfRecords@1009 : Integer;
    BEGIN
      WITH CostJnlLine DO BEGIN
        SETRANGE("Journal Template Name","Journal Template Name");
        SETRANGE("Journal Batch Name","Journal Batch Name");
        LOCKTABLE;

        CostJnlTemplate.GET("Journal Template Name");
        CostJnlBatch.GET("Journal Template Name","Journal Batch Name");
        IF STRLEN(INCSTR(CostJnlBatch.Name)) > MAXSTRLEN(CostJnlBatch.Name) THEN
          CostJnlBatch.FIELDERROR(
            Name,
            STRSUBSTNO(
              Text000,
              MAXSTRLEN(CostJnlBatch.Name)));

        IF NOT FIND('=><') THEN BEGIN
          "Line No." := 0;
          COMMIT;
          EXIT;
        END;

        Window.OPEN(Text001);
        Window.UPDATE(1,"Journal Batch Name");

        // Check lines
        LineCount := 0;
        StartLineNo := "Line No.";
        REPEAT
          LineCount := LineCount + 1;
          Window.UPDATE(2,LineCount);
          CAJnlCheckLine.RunCheck(CostJnlLine);
          IF NEXT = 0 THEN
            FINDFIRST;
        UNTIL "Line No." = StartLineNo;
        NoOfRecords := LineCount;

        // CheckBalance
        CheckBalance;

        CostReg.LOCKTABLE;
        IF CostReg.FINDLAST THEN
          CostRegNo := CostReg."No." + 1
        ELSE
          CostRegNo := 1;

        // Post lines
        LineCount := 0;
        FINDSET;
        REPEAT
          LineCount := LineCount + 1;
          Window.UPDATE(3,LineCount);
          Window.UPDATE(4,ROUND(LineCount / NoOfRecords * 10000,1));
          CAJnlPostLine.RunWithCheck(CostJnlLine);
        UNTIL NEXT = 0;

        IF NOT CostReg.FINDLAST OR (CostReg."No." <> CostRegNo) THEN
          CostRegNo := 0;
        INIT;
        "Line No." := CostRegNo;

        IF CostJnlBatch."Delete after Posting" THEN
          DELETEALL;

        COMMIT;
      END;
    END;

    LOCAL PROCEDURE CheckBalance@2();
    VAR
      CostJnlLine2@1000 : Record 1101;
    BEGIN
      CostJnlLine.FINDSET;
      CostJnlLine2.COPY(CostJnlLine);
      CostJnlLine2.CALCSUMS(Balance);
      IF CostJnlLine2.Balance <> 0 THEN
        ERROR(Text002,CostJnlLine2.Balance,CostJnlLine2.FIELDCAPTION("Posting Date"),CostJnlLine2.FIELDCAPTION(Amount));
    END;

    BEGIN
    END.
  }
}

