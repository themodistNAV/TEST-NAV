OBJECT Report 97 Date Compr. G/L Budget Entries
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    Permissions=TableData 87=rimd;
    CaptionML=[ENU=Date Compr. G/L Budget Entries;
               ENG=Date Compr. G/L Budget Entries];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  DimSelectionBuf.CompareDimText(
                    3,REPORT::"Date Compr. G/L Budget Entries",'',RetainDimText,Text009);
                END;

  }
  DATASET
  {
    { 3459;    ;DataItem;                    ;
               DataItemTable=Table96;
               DataItemTableView=SORTING(Budget Name,G/L Account No.,Date);
               OnPreDataItem=VAR
                               GLSetup@1000 : Record 98;
                             BEGIN
                               IF NOT
                                  CONFIRM(
                                    Text000 +
                                    Text001,FALSE)
                               THEN
                                 CurrReport.BREAK;

                               IF EntrdDateComprReg."Ending Date" = 0D THEN
                                 ERROR(
                                   Text002,
                                   EntrdDateComprReg.FIELDCAPTION("Ending Date"));

                               DateComprReg.INIT;
                               DateComprReg."Creation Date" := TODAY;
                               DateComprReg."Starting Date" := EntrdDateComprReg."Starting Date";
                               DateComprReg."Ending Date" := EntrdDateComprReg."Ending Date";
                               DateComprReg."Period Length" := EntrdDateComprReg."Period Length";
                               DateComprReg."User ID" := USERID;
                               DateComprReg."Table ID" := DATABASE::"G/L Budget Entry";
                               DateComprReg.Filter := COPYSTR(GETFILTERS,1,MAXSTRLEN(DateComprReg.Filter));

                               IF AnalysisView.FINDFIRST THEN BEGIN
                                 AnalysisView.CheckDimensionsAreRetained(3,REPORT::"Date Compr. G/L Budget Entries",TRUE);
                                 AnalysisView.CheckViewsAreUpdated;
                                 COMMIT;
                               END;

                               SelectedDim.GetSelectedDim(
                                 USERID,3,REPORT::"Date Compr. G/L Budget Entries",'',TempSelectedDim);
                               GLSetup.GET;
                               Retain[2] :=
                                 TempSelectedDim.GET(
                                   USERID,3,REPORT::"Date Compr. G/L Budget Entries",'',GLSetup."Global Dimension 1 Code");
                               Retain[3] :=
                                 TempSelectedDim.GET(
                                   USERID,3,REPORT::"Date Compr. G/L Budget Entries",'',GLSetup."Global Dimension 2 Code");

                               GLBudgetEntry2.LOCKTABLE;
                               IF GLBudgetEntry2.FIND('+') THEN;
                               LastEntryNo := GLBudgetEntry2."Entry No.";
                               LowestEntryNo := 2147483647;

                               Window.OPEN(
                                 Text003 +
                                 Text004 +
                                 Text005 +
                                 Text006 +
                                 Text007 +
                                 Text008);

                               SETRANGE("Entry No.",0,LastEntryNo);
                               SETRANGE(Date,EntrdDateComprReg."Starting Date",EntrdDateComprReg."Ending Date");
                             END;

               OnAfterGetRecord=BEGIN
                                  GLBudgetEntry2 := "G/L Budget Entry";
                                  WITH GLBudgetEntry2 DO BEGIN
                                    SETCURRENTKEY("Budget Name","G/L Account No.",Date);
                                    COPYFILTERS("G/L Budget Entry");
                                    SETFILTER(Date,DateComprMgt.GetDateFilter(Date,EntrdDateComprReg,FALSE));
                                    SETRANGE("Budget Name","Budget Name");
                                    SETRANGE("G/L Account No.","G/L Account No.");

                                    LastEntryNo := LastEntryNo + 1;

                                    IF RetainNo(FIELDNO("Business Unit Code")) THEN
                                      SETRANGE("Business Unit Code","Business Unit Code");
                                    IF RetainNo(FIELDNO("Global Dimension 1 Code")) THEN
                                      SETRANGE("Global Dimension 1 Code","Global Dimension 1 Code");
                                    IF RetainNo(FIELDNO("Global Dimension 2 Code")) THEN
                                      SETRANGE("Global Dimension 2 Code","Global Dimension 2 Code");
                                    IF Amount >= 0 THEN
                                      SETFILTER(Amount,'>=0')
                                    ELSE
                                      SETFILTER(Amount,'<0');

                                    InitNewEntry(NewGLBudgetEntry);

                                    DimBufMgt.CollectDimEntryNo(
                                      TempSelectedDim,"Dimension Set ID","Entry No.",0,FALSE,DimEntryNo);
                                    ComprDimEntryNo := DimEntryNo;
                                    SummarizeEntry(NewGLBudgetEntry,GLBudgetEntry2);
                                    WHILE NEXT <> 0 DO BEGIN
                                      DimBufMgt.CollectDimEntryNo(
                                        TempSelectedDim,"Dimension Set ID","Entry No.",ComprDimEntryNo,TRUE,DimEntryNo);
                                      IF DimEntryNo = ComprDimEntryNo THEN
                                        SummarizeEntry(NewGLBudgetEntry,GLBudgetEntry2);
                                    END;

                                    InsertNewEntry(NewGLBudgetEntry,ComprDimEntryNo);

                                    ComprCollectedEntries;
                                  END;

                                  IF DateComprReg."No. Records Deleted" >= NoOfDeleted + 10 THEN BEGIN
                                    NoOfDeleted := DateComprReg."No. Records Deleted";
                                    InsertRegister;
                                    COMMIT;
                                    GLBudgetEntry2.LOCKTABLE;
                                    GLBudgetEntry2.RESET;
                                    IF GLBudgetEntry2.FIND('+') THEN;
                                    LastEntryNo := GLBudgetEntry2."Entry No.";
                                  END;
                                END;

               OnPostDataItem=VAR
                                UpdateAnalysisView@1000 : Codeunit 410;
                              BEGIN
                                InsertRegister;
                                IF AnalysisView.FINDFIRST THEN
                                  IF LowestEntryNo < 2147483647 THEN
                                    UpdateAnalysisView.SetLastBudgetEntryNo(LowestEntryNo - 1);
                              END;

               ReqFilterFields=Budget Name,G/L Account No. }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   InitializeParameter;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ENG=Options] }

      { 1   ;2   ;Field     ;
                  CaptionML=[ENU=Starting Date;
                             ENG=Starting Date];
                  ClosingDates=Yes;
                  SourceExpr=EntrdDateComprReg."Starting Date" }

      { 2   ;2   ;Field     ;
                  CaptionML=[ENU=Ending Date;
                             ENG=Ending Date];
                  ClosingDates=Yes;
                  SourceExpr=EntrdDateComprReg."Ending Date" }

      { 3   ;2   ;Field     ;
                  CaptionML=[ENU=Period Length;
                             ENG=Period Length];
                  OptionCaptionML=[ENU=Day,Week,Month,Quarter,Year,Period;
                                   ENG=Day,Week,Month,Quarter,Year,Period];
                  SourceExpr=EntrdDateComprReg."Period Length" }

      { 4   ;2   ;Field     ;
                  CaptionML=[ENU=Posting Description;
                             ENG=Posting Description];
                  SourceExpr=EntrdGLBudgetEntry.Description }

      { 1907651001;2;Group  ;
                  CaptionML=[ENU=Retain Field Contents;
                             ENG=Retain Field Contents] }

      { 5   ;3   ;Field     ;
                  CaptionML=[ENU=Business Unit Code;
                             ENG=Business Unit Code];
                  SourceExpr=Retain[1] }

      { 6   ;2   ;Field     ;
                  CaptionML=[ENU=Retain Dimensions;
                             ENG=Retain Dimensions];
                  SourceExpr=RetainDimText;
                  Editable=FALSE;
                  OnAssistEdit=BEGIN
                                 DimSelectionBuf.SetDimSelectionMultiple(3,REPORT::"Date Compr. G/L Budget Entries",RetainDimText);
                               END;
                                }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=This batch job deletes entries.\\;ENG=This batch job deletes entries.\\';
      Text001@1001 : TextConst 'ENU=Do you want to date compress the entries?;ENG=Do you want to date compress the entries?';
      Text002@1002 : TextConst 'ENU=%1 must be specified.;ENG=%1 must be specified.';
      Text003@1003 : TextConst 'ENU=Date compressing G/L budget entries...\\;ENG=Date compressing G/L budget entries...\\';
      Text004@1004 : TextConst 'ENU=Budget Name          #1##########\;ENG=Budget Name          #1##########\';
      Text005@1005 : TextConst 'ENU=G/L Account No.      #2##########\;ENG=G/L Account No.      #2##########\';
      Text006@1006 : TextConst 'ENU=Date                 #3######\\;ENG=Date                 #3######\\';
      Text007@1007 : TextConst 'ENU=No. of new entries   #4######\;ENG=No. of new entries   #4######\';
      Text008@1008 : TextConst 'ENU=No. of entries del.  #5######;ENG=No. of entries del.  #5######';
      Text009@1009 : TextConst 'ENU=Retain Dimensions;ENG=Retain Dimensions';
      DateComprReg@1010 : Record 87;
      EntrdDateComprReg@1011 : Record 87;
      EntrdGLBudgetEntry@1012 : Record 96;
      NewGLBudgetEntry@1013 : Record 96;
      GLBudgetEntry2@1014 : Record 96;
      SelectedDim@1015 : Record 369;
      TempSelectedDim@1016 : TEMPORARY Record 369;
      DimSelectionBuf@1017 : Record 368;
      AnalysisView@1018 : Record 363;
      DateComprMgt@1019 : Codeunit 356;
      DimBufMgt@1020 : Codeunit 411;
      DimMgt@1021 : Codeunit 408;
      Window@1022 : Dialog;
      NoOfFields@1023 : Integer;
      Retain@1024 : ARRAY [10] OF Boolean;
      FieldNumber@1025 : ARRAY [10] OF Integer;
      FieldNameArray@1026 : ARRAY [10] OF Text[100];
      LastEntryNo@1027 : Integer;
      LowestEntryNo@1028 : Integer;
      NoOfDeleted@1029 : Integer;
      i@1030 : Integer;
      ComprDimEntryNo@1031 : Integer;
      DimEntryNo@1032 : Integer;
      RetainDimText@1033 : Text[250];
      RegExists@1034 : Boolean;

    LOCAL PROCEDURE InsertField@2(Number@1000 : Integer;Name@1001 : Text[100]);
    BEGIN
      NoOfFields := NoOfFields + 1;
      FieldNumber[NoOfFields] := Number;
      FieldNameArray[NoOfFields] := Name;
    END;

    LOCAL PROCEDURE RetainNo@3(Number@1000 : Integer) : Boolean;
    BEGIN
      EXIT(Retain[Index(Number)]);
    END;

    LOCAL PROCEDURE Index@6(Number@1000 : Integer) : Integer;
    BEGIN
      FOR i := 1 TO NoOfFields DO
        IF Number = FieldNumber[i] THEN
          EXIT(i);
    END;

    LOCAL PROCEDURE SummarizeEntry@5(VAR NewGLBudgetEntry@1000 : Record 96;GLBudgetEntry@1001 : Record 96);
    BEGIN
      WITH GLBudgetEntry DO BEGIN
        NewGLBudgetEntry.Amount := NewGLBudgetEntry.Amount + Amount;
        DELETE;
        IF "Entry No." < LowestEntryNo THEN
          LowestEntryNo := "Entry No.";
        DateComprReg."No. Records Deleted" := DateComprReg."No. Records Deleted" + 1;
        Window.UPDATE(5,DateComprReg."No. Records Deleted");
      END;
    END;

    PROCEDURE ComprCollectedEntries@12();
    VAR
      GLBudgetEntry@1000 : Record 96;
      OldDimEntryNo@1001 : Integer;
      Found@1002 : Boolean;
      GLBudgetEntryNo@1003 : Integer;
    BEGIN
      OldDimEntryNo := 0;
      IF DimBufMgt.FindFirstDimEntryNo(DimEntryNo,GLBudgetEntryNo) THEN BEGIN
        InitNewEntry(NewGLBudgetEntry);
        REPEAT
          GLBudgetEntry.GET(GLBudgetEntryNo);
          SummarizeEntry(NewGLBudgetEntry,GLBudgetEntry);
          OldDimEntryNo := DimEntryNo;
          Found := DimBufMgt.NextDimEntryNo(DimEntryNo,GLBudgetEntryNo);
          IF (OldDimEntryNo <> DimEntryNo) OR NOT Found THEN BEGIN
            InsertNewEntry(NewGLBudgetEntry,OldDimEntryNo);
            IF Found THEN
              InitNewEntry(NewGLBudgetEntry);
          END;
          OldDimEntryNo := DimEntryNo;
        UNTIL NOT Found;
      END;
      DimBufMgt.DeleteAllDimEntryNo;
    END;

    PROCEDURE InitNewEntry@7(VAR NewGLBudgetEntry@1000 : Record 96);
    BEGIN
      LastEntryNo := LastEntryNo + 1;

      WITH GLBudgetEntry2 DO BEGIN
        NewGLBudgetEntry.INIT;
        NewGLBudgetEntry."Entry No." := LastEntryNo;
        NewGLBudgetEntry."Budget Name" := "Budget Name";
        NewGLBudgetEntry."G/L Account No." := "G/L Account No.";
        NewGLBudgetEntry.Date := GETRANGEMIN(Date);
        NewGLBudgetEntry.Description := EntrdGLBudgetEntry.Description;
        NewGLBudgetEntry."User ID" := USERID;

        IF RetainNo(FIELDNO("Business Unit Code")) THEN
          NewGLBudgetEntry."Business Unit Code" := "Business Unit Code";
        IF RetainNo(FIELDNO("Global Dimension 1 Code")) THEN
          NewGLBudgetEntry."Global Dimension 1 Code" := "Global Dimension 1 Code";
        IF RetainNo(FIELDNO("Global Dimension 2 Code")) THEN
          NewGLBudgetEntry."Global Dimension 2 Code" := "Global Dimension 2 Code";

        Window.UPDATE(1,NewGLBudgetEntry."Budget Name");
        Window.UPDATE(2,NewGLBudgetEntry."G/L Account No.");
        Window.UPDATE(3,NewGLBudgetEntry.Date);
        DateComprReg."No. of New Records" := DateComprReg."No. of New Records" + 1;
        Window.UPDATE(4,DateComprReg."No. of New Records");
      END;
    END;

    LOCAL PROCEDURE InsertNewEntry@23(VAR NewGLBudgetEntry@1000 : Record 96;DimEntryNo@1001 : Integer);
    VAR
      TempDimBuf@1002 : TEMPORARY Record 360;
      TempDimSetEntry@1005 : TEMPORARY Record 480;
      DimVal@1004 : Record 349;
    BEGIN
      TempDimBuf.DELETEALL;
      DimBufMgt.GetDimensions(DimEntryNo,TempDimBuf);
      IF TempDimBuf.FINDSET THEN
        REPEAT
          DimVal.GET(TempDimBuf."Dimension Code",TempDimBuf."Dimension Value Code");
          TempDimSetEntry."Dimension Code" := TempDimBuf."Dimension Code";
          TempDimSetEntry."Dimension Value Code" := TempDimBuf."Dimension Value Code";
          TempDimSetEntry."Dimension Value ID" := DimVal."Dimension Value ID";
          TempDimSetEntry.INSERT;
        UNTIL TempDimBuf.NEXT = 0;
      NewGLBudgetEntry."Dimension Set ID" := DimMgt.GetDimensionSetID(TempDimSetEntry);
      NewGLBudgetEntry.INSERT;
    END;

    LOCAL PROCEDURE InsertRegister@1();
    VAR
      DateComprReg2@1000 : Record 87;
    BEGIN
      IF RegExists THEN
        DateComprReg.MODIFY
      ELSE BEGIN
        DateComprReg2.LOCKTABLE;
        IF DateComprReg2.FINDLAST THEN;
        DateComprReg."No." := DateComprReg2."No." + 1;
        DateComprReg.INSERT;
        RegExists := TRUE;
      END;
    END;

    LOCAL PROCEDURE InitializeParameter@9();
    BEGIN
      IF EntrdDateComprReg."Ending Date" = 0D THEN
        EntrdDateComprReg."Ending Date" := TODAY;

      WITH "G/L Budget Entry" DO BEGIN
        InsertField(FIELDNO("Business Unit Code"),FIELDCAPTION("Business Unit Code"));
        InsertField(FIELDNO("Global Dimension 1 Code"),FIELDCAPTION("Global Dimension 1 Code"));
        InsertField(FIELDNO("Global Dimension 2 Code"),FIELDCAPTION("Global Dimension 2 Code"));
      END;

      RetainDimText := DimSelectionBuf.GetDimSelectionText(3,REPORT::"Date Compr. G/L Budget Entries",'');
    END;

    PROCEDURE InitializeRequest@4(StartingDate@1009 : Date;EndingDate@1008 : Date;PeriodLength@1007 : Option;Description@1006 : Text[50];RetainBusinessUnitCode@1005 : Boolean;RetainDimensionText@1000 : Text[250]);
    BEGIN
      InitializeParameter;
      EntrdDateComprReg."Starting Date" := StartingDate;
      EntrdDateComprReg."Ending Date" := EndingDate;
      EntrdDateComprReg."Period Length" := PeriodLength;
      EntrdGLBudgetEntry.Description := Description;
      Retain[1] := RetainBusinessUnitCode;
      RetainDimText := RetainDimensionText;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

