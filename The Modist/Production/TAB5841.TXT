OBJECT Table 5841 Standard Cost Worksheet
{
  OBJECT-PROPERTIES
  {
    Date=29/01/16;
    Time=12:00:00 PM;
    Version List=NAVW19.00.00.44974;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               StdCostWkshName.GET("Standard Cost Worksheet Name");
             END;

    CaptionML=[ENU=Standard Cost Worksheet;
               ENG=Standard Cost Worksheet];
  }
  FIELDS
  {
    { 2   ;   ;Standard Cost Worksheet Name;Code10;TableRelation="Standard Cost Worksheet Name";
                                                   CaptionML=[ENU=Standard Cost Worksheet Name;
                                                              ENG=Standard Cost Worksheet Name] }
    { 3   ;   ;Type                ;Option        ;OnValidate=BEGIN
                                                                IF Type <> xRec.Type THEN
                                                                  VALIDATE("No.",'');
                                                              END;

                                                   CaptionML=[ENU=Type;
                                                              ENG=Type];
                                                   OptionCaptionML=[ENU=Item,Work Center,Machine Center,Resource;
                                                                    ENG=Item,Work Centre,Machine Centre,Resource];
                                                   OptionString=Item,Work Center,Machine Center,Resource }
    { 4   ;   ;No.                 ;Code20        ;TableRelation=IF (Type=CONST(Item)) Item
                                                                 ELSE IF (Type=CONST(Machine Center)) "Machine Center"
                                                                 ELSE IF (Type=CONST(Work Center)) "Work Center"
                                                                 ELSE IF (Type=CONST(Resource)) Resource;
                                                   OnValidate=VAR
                                                                TempStdCostWksh@1000 : Record 5841;
                                                              BEGIN
                                                                TempStdCostWksh := Rec;
                                                                INIT;
                                                                Type := TempStdCostWksh.Type;
                                                                "No." := TempStdCostWksh."No.";
                                                                "Replenishment System" := "Replenishment System"::" ";

                                                                IF "No." = '' THEN
                                                                  EXIT;

                                                                CASE Type OF
                                                                  Type::Item:
                                                                    BEGIN
                                                                      Item.GET("No.");
                                                                      Description := Item.Description;
                                                                      "Replenishment System" := Item."Replenishment System";
                                                                      GetItemCosts;
                                                                    END;
                                                                  Type::"Work Center":
                                                                    BEGIN
                                                                      WorkCtr.GET("No.");
                                                                      Description := WorkCtr.Name;
                                                                      GetWorkCtrCosts;
                                                                    END;
                                                                  Type::"Machine Center":
                                                                    BEGIN
                                                                      MachCtr.GET("No.");
                                                                      Description := MachCtr.Name;
                                                                      GetMachCtrCosts;
                                                                    END;
                                                                  Type::Resource:
                                                                    BEGIN
                                                                      Res.GET("No.");
                                                                      Description := Res.Name;
                                                                      GetResCosts;
                                                                    END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              ENG=No.];
                                                   NotBlank=Yes }
    { 5   ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              ENG=Description] }
    { 6   ;   ;Implemented         ;Boolean       ;CaptionML=[ENU=Implemented;
                                                              ENG=Implemented];
                                                   Editable=No }
    { 7   ;   ;Replenishment System;Option        ;CaptionML=[ENU=Replenishment System;
                                                              ENG=Replenishment System];
                                                   OptionCaptionML=[ENU=Purchase,Prod. Order, ,Assembly;
                                                                    ENG=Purchase,Prod. Order, ,Assembly];
                                                   OptionString=Purchase,Prod. Order, ,Assembly;
                                                   Editable=No }
    { 11  ;   ;Standard Cost       ;Decimal       ;CaptionML=[ENU=Standard Cost;
                                                              ENG=Standard Cost];
                                                   MinValue=0;
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 12  ;   ;New Standard Cost   ;Decimal       ;OnValidate=BEGIN
                                                                IF Type = Type::Item THEN
                                                                  UpdateCostShares
                                                              END;

                                                   CaptionML=[ENU=New Standard Cost;
                                                              ENG=New Standard Cost];
                                                   MinValue=0;
                                                   AutoFormatType=2 }
    { 13  ;   ;Indirect Cost %     ;Decimal       ;CaptionML=[ENU=Indirect Cost %;
                                                              ENG=Indirect Cost %];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   Editable=No }
    { 14  ;   ;New Indirect Cost % ;Decimal       ;CaptionML=[ENU=New Indirect Cost %;
                                                              ENG=New Indirect Cost %];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 15  ;   ;Overhead Rate       ;Decimal       ;CaptionML=[ENU=Overhead Rate;
                                                              ENG=Overhead Rate];
                                                   DecimalPlaces=2:5;
                                                   Editable=No }
    { 16  ;   ;New Overhead Rate   ;Decimal       ;OnValidate=BEGIN
                                                                IF Type = Type::Resource THEN
                                                                  TESTFIELD("New Overhead Rate",0);
                                                              END;

                                                   CaptionML=[ENU=New Overhead Rate;
                                                              ENG=New Overhead Rate];
                                                   DecimalPlaces=2:5 }
    { 21  ;   ;Single-Lvl Material Cost;Decimal   ;CaptionML=[ENU=Single-Lvl Material Cost;
                                                              ENG=Single-Lvl Material Cost];
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 22  ;   ;New Single-Lvl Material Cost;Decimal;
                                                   CaptionML=[ENU=New Single-Lvl Material Cost;
                                                              ENG=New Single-Lvl Material Cost];
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 23  ;   ;Single-Lvl Cap. Cost;Decimal       ;CaptionML=[ENU=Single-Lvl Cap. Cost;
                                                              ENG=Single-Lvl Cap. Cost];
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 24  ;   ;New Single-Lvl Cap. Cost;Decimal   ;CaptionML=[ENU=New Single-Lvl Cap. Cost;
                                                              ENG=New Single-Lvl Cap. Cost];
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 25  ;   ;Single-Lvl Subcontrd Cost;Decimal  ;AccessByPermission=TableData 99000758=R;
                                                   CaptionML=[ENU=Single-Lvl Subcontrd Cost;
                                                              ENG=Single-Lvl Subcontrd Cost];
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 26  ;   ;New Single-Lvl Subcontrd Cost;Decimal;
                                                   AccessByPermission=TableData 99000758=R;
                                                   CaptionML=[ENU=New Single-Lvl Subcontrd Cost;
                                                              ENG=New Single-Lvl Subcontrd Cost];
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 27  ;   ;Single-Lvl Cap. Ovhd Cost;Decimal  ;CaptionML=[ENU=Single-Lvl Cap. Ovhd Cost;
                                                              ENG=Single-Lvl Cap. Ovhd Cost];
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 28  ;   ;New Single-Lvl Cap. Ovhd Cost;Decimal;
                                                   CaptionML=[ENU=New Single-Lvl Cap. Ovhd Cost;
                                                              ENG=New Single-Lvl Cap. Ovhd Cost];
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 29  ;   ;Single-Lvl Mfg. Ovhd Cost;Decimal  ;CaptionML=[ENU=Single-Lvl Mfg. Ovhd Cost;
                                                              ENG=Single-Lvl Mfg. Ovhd Cost];
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 30  ;   ;New Single-Lvl Mfg. Ovhd Cost;Decimal;
                                                   CaptionML=[ENU=New Single-Lvl Mfg. Ovhd Cost;
                                                              ENG=New Single-Lvl Mfg. Ovhd Cost];
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 41  ;   ;Rolled-up Material Cost;Decimal    ;CaptionML=[ENU=Rolled-up Material Cost;
                                                              ENG=Rolled-up Material Cost];
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 42  ;   ;New Rolled-up Material Cost;Decimal;CaptionML=[ENU=New Rolled-up Material Cost;
                                                              ENG=New Rolled-up Material Cost];
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 43  ;   ;Rolled-up Cap. Cost ;Decimal       ;CaptionML=[ENU=Rolled-up Cap. Cost;
                                                              ENG=Rolled-up Cap. Cost];
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 44  ;   ;New Rolled-up Cap. Cost;Decimal    ;CaptionML=[ENU=New Rolled-up Cap. Cost;
                                                              ENG=New Rolled-up Cap. Cost];
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 45  ;   ;Rolled-up Subcontrd Cost;Decimal   ;AccessByPermission=TableData 99000758=R;
                                                   CaptionML=[ENU=Rolled-up Subcontrd Cost;
                                                              ENG=Rolled-up Subcontrd Cost];
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 46  ;   ;New Rolled-up Subcontrd Cost;Decimal;
                                                   AccessByPermission=TableData 99000758=R;
                                                   CaptionML=[ENU=New Rolled-up Subcontrd Cost;
                                                              ENG=New Rolled-up Subcontrd Cost];
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 47  ;   ;Rolled-up Cap. Ovhd Cost;Decimal   ;CaptionML=[ENU=Rolled-up Cap. Ovhd Cost;
                                                              ENG=Rolled-up Cap. Ovhd Cost];
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 48  ;   ;New Rolled-up Cap. Ovhd Cost;Decimal;
                                                   CaptionML=[ENU=New Rolled-up Cap. Ovhd Cost;
                                                              ENG=New Rolled-up Cap. Ovhd Cost];
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 49  ;   ;Rolled-up Mfg. Ovhd Cost;Decimal   ;CaptionML=[ENU=Rolled-up Mfg. Ovhd Cost;
                                                              ENG=Rolled-up Mfg. Ovhd Cost];
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 50  ;   ;New Rolled-up Mfg. Ovhd Cost;Decimal;
                                                   CaptionML=[ENU=New Rolled-up Mfg. Ovhd Cost;
                                                              ENG=New Rolled-up Mfg. Ovhd Cost];
                                                   Editable=No;
                                                   AutoFormatType=2 }
  }
  KEYS
  {
    {    ;Standard Cost Worksheet Name,Type,No.   ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Item@1000 : Record 27;
      WorkCtr@1001 : Record 99000754;
      MachCtr@1002 : Record 99000758;
      Res@1004 : Record 156;
      StdCostWkshName@1003 : Record 5840;

    LOCAL PROCEDURE GetItemCosts@1();
    BEGIN
      "Standard Cost" := Item."Standard Cost";
      "New Standard Cost" := Item."Standard Cost";
      "Overhead Rate" := Item."Overhead Rate";
      "New Overhead Rate" := Item."Overhead Rate";
      "Indirect Cost %" := Item."Indirect Cost %";
      "New Indirect Cost %" := Item."Indirect Cost %";

      IF Item.IsMfgItem THEN
        TransferManufCostsFromItem
      ELSE
        TransferStandardCostFromItem;
    END;

    LOCAL PROCEDURE GetWorkCtrCosts@2();
    BEGIN
      "Standard Cost" := WorkCtr."Unit Cost";
      "New Standard Cost" := WorkCtr."Unit Cost";
      "Overhead Rate" := WorkCtr."Overhead Rate";
      "New Overhead Rate" := WorkCtr."Overhead Rate";
      "Indirect Cost %" := WorkCtr."Indirect Cost %";
      "New Indirect Cost %" := WorkCtr."Indirect Cost %";
    END;

    LOCAL PROCEDURE GetMachCtrCosts@3();
    BEGIN
      "Standard Cost" := MachCtr."Unit Cost";
      "New Standard Cost" := MachCtr."Unit Cost";
      "Overhead Rate" := MachCtr."Overhead Rate";
      "New Overhead Rate" := MachCtr."Overhead Rate";
      "Indirect Cost %" := MachCtr."Indirect Cost %";
      "New Indirect Cost %" := MachCtr."Indirect Cost %";
    END;

    LOCAL PROCEDURE GetResCosts@6();
    BEGIN
      "Standard Cost" := Res."Unit Cost";
      "New Standard Cost" := Res."Unit Cost";
      "Overhead Rate" := 0;
      "New Overhead Rate" := 0;
      "Indirect Cost %" := Res."Indirect Cost %";
      "New Indirect Cost %" := Res."Indirect Cost %";
    END;

    LOCAL PROCEDURE UpdateCostShares@4();
    VAR
      Ratio@1000 : Decimal;
      RoundingResidual@1001 : Decimal;
    BEGIN
      IF xRec."Standard Cost" <> 0 THEN
        Ratio := "New Standard Cost" / xRec."New Standard Cost";

      "New Single-Lvl Material Cost" := RoundAmt("New Single-Lvl Material Cost",Ratio);
      "New Single-Lvl Mfg. Ovhd Cost" := RoundAmt("New Single-Lvl Mfg. Ovhd Cost",Ratio);
      "New Single-Lvl Cap. Cost" := RoundAmt("New Single-Lvl Cap. Cost",Ratio);
      "New Single-Lvl Subcontrd Cost" := RoundAmt("New Single-Lvl Subcontrd Cost",Ratio);
      "New Single-Lvl Cap. Ovhd Cost" := RoundAmt("New Single-Lvl Cap. Ovhd Cost",Ratio);
      RoundingResidual := "New Standard Cost" -
        ("New Single-Lvl Material Cost" +
         "New Single-Lvl Mfg. Ovhd Cost" +
         "New Single-Lvl Cap. Cost" +
         "New Single-Lvl Subcontrd Cost" +
         "New Single-Lvl Cap. Ovhd Cost");
      "New Single-Lvl Material Cost" := "New Single-Lvl Material Cost" + RoundingResidual;

      "New Rolled-up Material Cost" := RoundAmt("New Rolled-up Material Cost",Ratio);
      "New Rolled-up Mfg. Ovhd Cost" := RoundAmt("New Rolled-up Mfg. Ovhd Cost",Ratio);
      "New Rolled-up Cap. Cost" := RoundAmt("New Rolled-up Cap. Cost",Ratio);
      "New Rolled-up Subcontrd Cost" := RoundAmt("New Rolled-up Subcontrd Cost",Ratio);
      "New Rolled-up Cap. Ovhd Cost" := RoundAmt("New Rolled-up Cap. Ovhd Cost",Ratio);
      RoundingResidual := "New Standard Cost" -
        ("New Rolled-up Material Cost" +
         "New Rolled-up Mfg. Ovhd Cost" +
         "New Rolled-up Cap. Cost" +
         "New Rolled-up Subcontrd Cost" +
         "New Rolled-up Cap. Ovhd Cost");
      "New Rolled-up Material Cost" := "New Rolled-up Material Cost" + RoundingResidual;
    END;

    LOCAL PROCEDURE RoundAmt@5(Amt@1000 : Decimal;AmtAdjustFactor@1001 : Decimal) : Decimal;
    BEGIN
      EXIT(ROUND(Amt * AmtAdjustFactor,0.00001));
    END;

    LOCAL PROCEDURE TransferManufCostsFromItem@7();
    BEGIN
      "Single-Lvl Material Cost" := Item."Single-Level Material Cost";
      "New Single-Lvl Material Cost" := Item."Single-Level Material Cost";
      "Single-Lvl Cap. Cost" := Item."Single-Level Capacity Cost";
      "New Single-Lvl Cap. Cost" := Item."Single-Level Capacity Cost";
      "Single-Lvl Subcontrd Cost" := Item."Single-Level Subcontrd. Cost";
      "New Single-Lvl Subcontrd Cost" := Item."Single-Level Subcontrd. Cost";
      "Single-Lvl Cap. Ovhd Cost" := Item."Single-Level Cap. Ovhd Cost";
      "New Single-Lvl Cap. Ovhd Cost" := Item."Single-Level Cap. Ovhd Cost";
      "Single-Lvl Mfg. Ovhd Cost" := Item."Single-Level Mfg. Ovhd Cost";
      "New Single-Lvl Mfg. Ovhd Cost" := Item."Single-Level Mfg. Ovhd Cost";

      "Rolled-up Material Cost" := Item."Rolled-up Material Cost";
      "New Rolled-up Material Cost" := Item."Rolled-up Material Cost";
      "Rolled-up Cap. Cost" := Item."Rolled-up Capacity Cost";
      "New Rolled-up Cap. Cost" := Item."Rolled-up Capacity Cost";
      "Rolled-up Subcontrd Cost" := Item."Rolled-up Subcontracted Cost";
      "New Rolled-up Subcontrd Cost" := Item."Rolled-up Subcontracted Cost";
      "Rolled-up Cap. Ovhd Cost" := Item."Rolled-up Cap. Overhead Cost";
      "New Rolled-up Cap. Ovhd Cost" := Item."Rolled-up Cap. Overhead Cost";
      "Rolled-up Mfg. Ovhd Cost" := Item."Rolled-up Mfg. Ovhd Cost";
      "New Rolled-up Mfg. Ovhd Cost" := Item."Rolled-up Mfg. Ovhd Cost";
    END;

    LOCAL PROCEDURE TransferStandardCostFromItem@8();
    BEGIN
      "Single-Lvl Material Cost" := Item."Standard Cost";
      "New Single-Lvl Material Cost" := Item."Standard Cost";
      "Single-Lvl Cap. Cost" := 0;
      "New Single-Lvl Cap. Cost" := 0;
      "Single-Lvl Subcontrd Cost" := 0;
      "New Single-Lvl Subcontrd Cost" := 0;
      "Single-Lvl Cap. Ovhd Cost" := 0;
      "New Single-Lvl Cap. Ovhd Cost" := 0;
      "Single-Lvl Mfg. Ovhd Cost" := 0;
      "New Single-Lvl Mfg. Ovhd Cost" := 0;

      "Rolled-up Material Cost" := Item."Standard Cost";
      "New Rolled-up Material Cost" := Item."Standard Cost";
      "Rolled-up Cap. Cost" := 0;
      "New Rolled-up Cap. Cost" := 0;
      "Rolled-up Subcontrd Cost" := 0;
      "New Rolled-up Subcontrd Cost" := 0;
      "Rolled-up Cap. Ovhd Cost" := 0;
      "New Rolled-up Cap. Ovhd Cost" := 0;
      "Rolled-up Mfg. Ovhd Cost" := 0;
      "New Rolled-up Mfg. Ovhd Cost" := 0;
    END;

    BEGIN
    END.
  }
}

