OBJECT Page 193 Incoming Doc. Attach. FactBox
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[ENU=Incoming Document Files;
               ENG=Incoming Document Files];
    SourceTable=Table137;
    PageType=ListPart;
    SourceTableTemporary=Yes;
    OnAfterGetRecord=BEGIN
                       StyleExpressionTxt := GetStyleTxt;
                     END;

    ActionList=ACTIONS
    {
      { 7       ;    ;ActionContainer;
                      CaptionML=[ENU=Actions;
                                 ENG=Actions];
                      ActionContainerType=ActionItems }
      { 6       ;1   ;Action    ;
                      Name=Export;
                      CaptionML=[ENU=View File;
                                 ENG=View File];
                      Image=Document;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 NameDrillDown;
                               END;
                                }
      { 8       ;1   ;Action    ;
                      Name=ImportNew;
                      CaptionML=[ENU=Attach File;
                                 ENG=Attach File];
                      Image=Attach;
                      OnAction=VAR
                                 IncomingDocumentAttachment@1000 : Record 133;
                                 IncomingDocument@1001 : Record 130;
                               BEGIN
                                 IncomingDocumentAttachment.SETRANGE("Incoming Document Entry No.","Incoming Document Entry No.");
                                 IncomingDocumentAttachment.SetFiltersFromMainRecord(MainRecordRef,IncomingDocumentAttachment);
                                 IF IncomingDocumentAttachment.Import THEN
                                   IF IncomingDocument.GET("Incoming Document Entry No.") THEN
                                     LoadDataFromIncomingDocument(IncomingDocument);
                               END;
                                }
      { 10      ;1   ;Action    ;
                      Name=IncomingDoc;
                      CaptionML=[ENU=Incoming Document;
                                 ENG=Incoming Document];
                      Image=Document;
                      Scope=Repeater;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record 130;
                               BEGIN
                                 IF NOT IncomingDocument.GET("Incoming Document Entry No.") THEN
                                   EXIT;
                                 PAGE.RUNMODAL(PAGE::"Incoming Document",IncomingDocument);

                                 IF IncomingDocument.GET(IncomingDocument."Entry No.") THEN
                                   LoadDataFromIncomingDocument(IncomingDocument);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=Group;
                IndentationColumnName=Indentation;
                IndentationControls=Name;
                GroupType=Repeater }

    { 4   ;2   ;Field     ;
                SourceExpr=Name;
                StyleExpr=StyleExpressionTxt;
                OnDrillDown=BEGIN
                              NameDrillDown;
                            END;
                             }

    { 5   ;2   ;Field     ;
                SourceExpr=Type }

    { 3   ;2   ;Field     ;
                SourceExpr="Created Date-Time";
                Visible=FALSE }

  }
  CODE
  {
    VAR
      MainRecordRef@1000 : RecordRef;
      StyleExpressionTxt@1001 : Text;

    PROCEDURE LoadDataFromRecord@3(MainRecordVariant@1003 : Variant);
    VAR
      IncomingDocument@1000 : Record 130;
    BEGIN
      DELETEALL;
      IF GetIncomingDocumentRecord(MainRecordVariant,IncomingDocument) THEN
        InsertFromIncomingDocument(IncomingDocument,Rec);
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE LoadDataFromIncomingDocument@38(IncomingDocument@1000 : Record 130);
    BEGIN
      DELETEALL;
      InsertFromIncomingDocument(IncomingDocument,Rec);
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE GetIncomingDocumentRecord@10(MainRecordVariant@1000 : Variant;VAR IncomingDocument@1001 : Record 130) : Boolean;
    VAR
      DataTypeManagement@1003 : Codeunit 701;
    BEGIN
      IF NOT DataTypeManagement.GetRecordRef(MainRecordVariant,MainRecordRef) THEN
        EXIT(FALSE);

      CASE MainRecordRef.NUMBER OF
        DATABASE::"Incoming Document":
          BEGIN
            IncomingDocument.COPY(MainRecordVariant);
            EXIT(TRUE);
          END;
        ELSE BEGIN
          IF IncomingDocument.FindFromIncomingDocumentEntryNo(MainRecordRef,IncomingDocument) THEN
            EXIT(TRUE);
          IF IncomingDocument.FindByDocumentNoAndPostingDate(MainRecordRef,IncomingDocument) THEN
            EXIT(TRUE);
          EXIT(FALSE);
        END;
      END;
    END;

    BEGIN
    END.
  }
}

