OBJECT Report 50004 Copy to Gate Pass Doc.
{
  OBJECT-PROPERTIES
  {
    Date=07/08/18;
    Time=[ 8:55:37 AM];
    Modified=Yes;
    Version List=TM0001,TM3007;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Copy Sales Document;
               ENG=Copy Sales Document];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  GatePassMgmt.CopyGatePassDocAllLines(DocType,DocNo,GatePassHeader);
                END;

  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnOpenPage=BEGIN
                   IF DocNo <> '' THEN BEGIN
                     CASE DocType OF
                       DocType::Quote:
                         IF FromSalesHeader.GET(FromSalesHeader."Document Type"::Quote,DocNo) THEN;
                       DocType::"Blanket Order":
                         IF FromSalesHeader.GET(FromSalesHeader."Document Type"::"Blanket Order",DocNo) THEN;
                       DocType::Order:
                         IF FromSalesHeader.GET(FromSalesHeader."Document Type"::Order,DocNo) THEN;
                       DocType::Invoice:
                         IF FromSalesHeader.GET(FromSalesHeader."Document Type"::Invoice,DocNo) THEN;
                       DocType::"Return Order":
                         IF FromSalesHeader.GET(FromSalesHeader."Document Type"::"Return Order",DocNo) THEN;
                       DocType::"Credit Memo":
                         IF FromSalesHeader.GET(FromSalesHeader."Document Type"::"Credit Memo",DocNo) THEN;
                       DocType::"Posted Shipment":
                         IF FromSalesShptHeader.GET(DocNo) THEN
                           FromSalesHeader.TRANSFERFIELDS(FromSalesShptHeader);
                       DocType::"Posted Invoice":
                         IF FromSalesInvHeader.GET(DocNo) THEN
                           FromSalesHeader.TRANSFERFIELDS(FromSalesInvHeader);
                       DocType::"Posted Return Receipt":
                         IF FromReturnRcptHeader.GET(DocNo) THEN
                           FromSalesHeader.TRANSFERFIELDS(FromReturnRcptHeader);
                       DocType::"Posted Credit Memo":
                         IF FromSalesCrMemoHeader.GET(DocNo) THEN
                           FromSalesHeader.TRANSFERFIELDS(FromSalesCrMemoHeader);
                     END;
                     IF FromSalesHeader."No." = '' THEN
                       DocNo := '';
                   END;
                   ValidateDocNo;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ENG=Options] }

      { 3   ;2   ;Field     ;
                  Name=DocumentType;
                  CaptionML=[ENU=Document Type;
                             ENG=Document Type];
                  OptionCaptionML=ENU=Quote,Blanket Order,Order,Invoice,Return Order,Credit Memo,Posted Shipment,Posted Invoice,Posted Return Receipt,Posted Credit Memo,Transfer Order,Posted Transfer Shipment,Posted Transfer Receipt,Whse. Receipt,Posted Whse. Receipt;
                  SourceExpr=DocType;
                  OnValidate=BEGIN
                               DocNo := '';
                               ValidateDocNo;
                             END;
                              }

      { 8   ;2   ;Field     ;
                  Name=DocumentNo;
                  CaptionML=[ENU=Document No.;
                             ENG=Document No.];
                  SourceExpr=DocNo;
                  OnValidate=BEGIN
                               ValidateDocNo;
                             END;

                  OnLookup=BEGIN
                             LookupDocNo;
                           END;
                            }

      { 5   ;2   ;Field     ;
                  Name=SellToCustNo;
                  CaptionML=[ENU=Sell-to Customer No.;
                             ENG=Sell-to Customer No.];
                  SourceExpr=FromSalesHeader."Sell-to Customer No.";
                  Editable=FALSE }

      { 7   ;2   ;Field     ;
                  Name=SellToCustName;
                  CaptionML=[ENU=Sell-to Customer Name;
                             ENG=Sell-to Customer Name];
                  SourceExpr=FromSalesHeader."Sell-to Customer Name";
                  Editable=FALSE }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      GatePassHeader@1000000001 : Record 50033;
      SalesHeader@1007 : Record 36;
      FromSalesHeader@1010 : Record 36;
      FromSalesShptHeader@1012 : Record 110;
      FromSalesInvHeader@1014 : Record 112;
      FromReturnRcptHeader@1016 : Record 6660;
      FromSalesCrMemoHeader@1018 : Record 114;
      FromTransferHeader@1000000008 : Record 5740;
      FromTransferShipmentHeader@1000000009 : Record 5744;
      FromTransferReceiptHeader@1000000010 : Record 5746;
      FromWarehouseReceiptHeader@1000000011 : Record 7316;
      SalesSetup@1003 : Record 311;
      SalesLine@1000000004 : Record 37;
      SalesInvoiceLine@1000000005 : Record 113;
      SalesShipmentLine@1000000006 : Record 111;
      SalesCrMemoLine@1000000007 : Record 115;
      CopyDocMgt@1008 : Codeunit 6620;
      GatePassMgmt@1000000000 : Codeunit 50024;
      DocType@1026 : 'Quote,Blanket Order,Order,Invoice,Return Order,Credit Memo,Posted Shipment,Posted Invoice,Posted Return Receipt,Posted Credit Memo,Transfer Order,Posted Transfer Shipment,Posted Transfer Receipt,Whse. Receipt,Posted Whse. Receipt';
      DocNo@1027 : Code[20];
      Text000@1000 : TextConst 'ENU=The price information may not be reversed correctly, if you copy a %1. If possible copy a %2 instead or use %3 functionality.;ENG=The price information may not be reversed correctly, if you copy a %1. If possible copy a %2 instead or use %3 functionality.';
      Text001@1001 : TextConst 'ENU=Undo Shipment;ENG=Undo Shipment';
      Text002@1002 : TextConst 'ENU=Undo Return Receipt;ENG=Undo Return Receipt';
      Text003@1004 : TextConst 'ENU=Quote,Blanket Order,Order,Invoice,Return Order,Credit Memo,Posted Shipment,Posted Invoice,Posted Return Receipt,Posted Credit Memo;ENG=Quote,Blanket Order,Order,Invoice,Return Order,Credit Memo,Posted Shipment,Posted Invoice,Posted Return Receipt,Posted Credit Memo';
      SelectedItems@1000000002 : Code[20];
      Text004@1000000003 : TextConst 'ENU=Please select a document first.';
      C_NoLines@1000000012 : TextConst 'ENU=Order not Found.';

    PROCEDURE SetGatePassHeader@2(VAR NewGatePassHeader@1000 : Record 50033);
    BEGIN
      NewGatePassHeader.TESTFIELD("No.");
      GatePassHeader := NewGatePassHeader;
    END;

    LOCAL PROCEDURE ValidateDocNo@10();
    VAR
      DocType2@1000 : 'Quote,Blanket Order,Order,Invoice,Return Order,Credit Memo,Posted Shipment,Posted Invoice,Posted Return Receipt,Posted Credit Memo';
      SalesInvHdrL@1000000000 : Record 112;
      SalesCrMemoHdrL@1000000002 : Record 114;
    BEGIN
      IF DocNo = '' THEN
        FromSalesHeader.INIT
      ELSE
        IF FromSalesHeader."No." = '' THEN BEGIN
          FromSalesHeader.INIT;
          CASE DocType OF
            DocType::Quote,
            DocType::"Blanket Order",
            DocType::Order,
            DocType::Invoice,
            DocType::"Return Order",
            DocType::"Credit Memo":
      //Doc TM3007 ST 05/07/2018 -
              BEGIN
                IF NOT FromSalesHeader.GET(CopyDocMgt.SalesHeaderDocType(DocType), DocNo) THEN BEGIN
                  CASE TRUE OF
                    DocType = DocType::Order:
                      BEGIN
                        SalesInvHdrL.SETCURRENTKEY("No.");
                        SalesInvHdrL.SETRANGE("Order No.", DocNo);
                        IF SalesInvHdrL.ISEMPTY THEN
                          ERROR(C_NoLines);
                        IF SalesInvHdrL.COUNT > 1 THEN BEGIN
                          IF PAGE.RUNMODAL(0, SalesInvHdrL) = ACTION::LookupOK THEN
                            DocNo := SalesInvHdrL."No."
                          ELSE
                            EXIT;
                        END ELSE BEGIN
                          SalesInvHdrL.FINDFIRST;
                          DocNo := SalesInvHdrL."No.";
                        END;
                        FromSalesInvHeader.GET(DocNo);
                        FromSalesHeader.TRANSFERFIELDS(FromSalesInvHeader);
                        DocType := DocType::"Posted Invoice"
                      END;
                    DocType = DocType::"Return Order":
                      BEGIN
                        SalesCrMemoHdrL.SETCURRENTKEY("No.");
                        SalesCrMemoHdrL.SETRANGE("Origianl Order No.", DocNo);
                        IF SalesCrMemoHdrL.ISEMPTY THEN
                          ERROR(C_NoLines);
                        IF SalesCrMemoHdrL.COUNT > 1 THEN BEGIN
                          IF PAGE.RUNMODAL(0, SalesCrMemoHdrL) = ACTION::LookupOK THEN
                            DocNo := SalesCrMemoHdrL."No."
                          ELSE
                            EXIT;
                        END ELSE BEGIN
                          SalesCrMemoHdrL.FINDFIRST;
                          DocNo := SalesCrMemoHdrL."No.";
                        END;
                        SalesCrMemoHdrL.GET(DocNo);
                        FromSalesHeader.TRANSFERFIELDS(SalesCrMemoHdrL);
                        DocType := DocType::"Posted Credit Memo";
                      END;
                  END;
                END
              END;
      //Doc TM3007 ST 05/07/2018 +
            DocType::"Posted Shipment":
              BEGIN
                FromSalesShptHeader.GET(DocNo);
                FromSalesHeader.TRANSFERFIELDS(FromSalesShptHeader);
              END;
            DocType::"Posted Invoice":
              BEGIN
                FromSalesInvHeader.GET(DocNo);
                FromSalesHeader.TRANSFERFIELDS(FromSalesInvHeader);
              END;
            DocType::"Posted Return Receipt":
              BEGIN
                FromReturnRcptHeader.GET(DocNo);
                FromSalesHeader.TRANSFERFIELDS(FromReturnRcptHeader);
              END;
            DocType::"Posted Credit Memo":
              BEGIN
                FromSalesCrMemoHeader.GET(DocNo);
                FromSalesHeader.TRANSFERFIELDS(FromSalesCrMemoHeader);
              END;
            DocType::"Transfer Order":
              FromTransferHeader.GET(DocNo);
            DocType::"Posted Transfer Receipt":
              FromTransferReceiptHeader.GET(DocNo);
            DocType::"Posted Transfer Shipment":
              FromTransferShipmentHeader.GET(DocNo);
            DocType::"Whse. Receipt":
              FromWarehouseReceiptHeader.GET(DocNo);
          END;
        END;
      FromSalesHeader."No." := '';
    END;

    LOCAL PROCEDURE LookupDocNo@3();
    BEGIN
      CASE DocType OF
        DocType::Quote,
        DocType::"Blanket Order",
        DocType::Order,
        DocType::Invoice,
        DocType::"Return Order",
        DocType::"Credit Memo":
          BEGIN
            FromSalesHeader.FILTERGROUP := 0;
            FromSalesHeader.SETRANGE("Document Type",CopyDocMgt.SalesHeaderDocType(DocType));
            IF SalesHeader."Document Type" = CopyDocMgt.SalesHeaderDocType(DocType) THEN
              FromSalesHeader.SETFILTER("No.",'<>%1',SalesHeader."No.");
            FromSalesHeader.FILTERGROUP := 2;
            FromSalesHeader."Document Type" := CopyDocMgt.SalesHeaderDocType(DocType);
            FromSalesHeader."No." := DocNo;
            IF (DocNo = '') AND (SalesHeader."Sell-to Customer No." <> '') THEN
              IF FromSalesHeader.SETCURRENTKEY("Document Type","Sell-to Customer No.") THEN BEGIN
                FromSalesHeader."Sell-to Customer No." := SalesHeader."Sell-to Customer No.";
                IF FromSalesHeader.FIND('=><') THEN;
              END;
            IF PAGE.RUNMODAL(0,FromSalesHeader) = ACTION::LookupOK THEN
              DocNo := FromSalesHeader."No.";
          END;
        DocType::"Posted Shipment":
          BEGIN
            FromSalesShptHeader."No." := DocNo;
            IF (DocNo = '') AND (SalesHeader."Sell-to Customer No." <> '') THEN
              IF FromSalesShptHeader.SETCURRENTKEY("Sell-to Customer No.") THEN BEGIN
                FromSalesShptHeader."Sell-to Customer No." := SalesHeader."Sell-to Customer No.";
                IF FromSalesShptHeader.FIND('=><') THEN;
              END;
            IF PAGE.RUNMODAL(0,FromSalesShptHeader) = ACTION::LookupOK THEN
              DocNo := FromSalesShptHeader."No.";
          END;
        DocType::"Posted Invoice":
          BEGIN
            FromSalesInvHeader."No." := DocNo;
            IF (DocNo = '') AND (SalesHeader."Sell-to Customer No." <> '') THEN
              IF FromSalesInvHeader.SETCURRENTKEY("Sell-to Customer No.") THEN BEGIN
                FromSalesInvHeader."Sell-to Customer No." := SalesHeader."Sell-to Customer No.";
                IF FromSalesInvHeader.FIND('=><') THEN;
              END;
            FromSalesInvHeader.FILTERGROUP(2);
            FromSalesInvHeader.SETRANGE("Prepayment Invoice",FALSE);
            FromSalesInvHeader.FILTERGROUP(0);
            IF PAGE.RUNMODAL(0,FromSalesInvHeader) = ACTION::LookupOK THEN
              DocNo := FromSalesInvHeader."No.";
          END;
        DocType::"Posted Return Receipt":
          BEGIN
            FromReturnRcptHeader."No." := DocNo;
            IF (DocNo = '') AND (SalesHeader."Sell-to Customer No." <> '') THEN
              IF FromReturnRcptHeader.SETCURRENTKEY("Sell-to Customer No.") THEN BEGIN
                FromReturnRcptHeader."Sell-to Customer No." := SalesHeader."Sell-to Customer No.";
                IF FromReturnRcptHeader.FIND('=><') THEN;
              END;
            IF PAGE.RUNMODAL(0,FromReturnRcptHeader) = ACTION::LookupOK THEN
              DocNo := FromReturnRcptHeader."No.";
          END;
        DocType::"Posted Credit Memo":
          BEGIN
            FromSalesCrMemoHeader."No." := DocNo;
            IF (DocNo = '') AND (SalesHeader."Sell-to Customer No." <> '') THEN
              IF FromSalesCrMemoHeader.SETCURRENTKEY("Sell-to Customer No.") THEN BEGIN
                FromSalesCrMemoHeader."Sell-to Customer No." := SalesHeader."Sell-to Customer No.";
                IF FromSalesCrMemoHeader.FIND('=><') THEN;
              END;
            FromSalesCrMemoHeader.FILTERGROUP(2);
            FromSalesCrMemoHeader.SETRANGE("Prepayment Credit Memo",FALSE);
            FromSalesCrMemoHeader.FILTERGROUP(0);
            IF PAGE.RUNMODAL(0,FromSalesCrMemoHeader) = ACTION::LookupOK THEN
              DocNo := FromSalesCrMemoHeader."No.";
          END;
        DocType::"Transfer Order":
          BEGIN
            FromTransferHeader.RESET;
            IF PAGE.RUNMODAL(0,FromTransferHeader) = ACTION::LookupOK THEN
              DocNo := FromTransferHeader."No.";
          END;
        DocType::"Posted Transfer Receipt":
          BEGIN
            FromTransferReceiptHeader.RESET;
            IF PAGE.RUNMODAL(0,FromTransferReceiptHeader) = ACTION::LookupOK THEN
              DocNo := FromTransferReceiptHeader."No.";
          END;
        DocType::"Posted Transfer Shipment":
          BEGIN
            FromTransferShipmentHeader.RESET;
            IF PAGE.RUNMODAL(0,FromTransferShipmentHeader) = ACTION::LookupOK THEN
              DocNo := FromTransferShipmentHeader."No.";
          END;
        DocType::"Whse. Receipt":
          BEGIN
            FromWarehouseReceiptHeader.RESET;
            IF PAGE.RUNMODAL(0,FromWarehouseReceiptHeader) = ACTION::LookupOK THEN
              DocNo := FromWarehouseReceiptHeader."No.";
          END;
      END;
      ValidateDocNo;
    END;

    LOCAL PROCEDURE LookupItemNo@1000000003();
    VAR
      lTmpItems@1000000000 : TEMPORARY Record 27;
    BEGIN
      // CLEAR(DocumentItemEntryBuffer);
      // DocumentItemEntryBuffer.SetItems(DocNo,DocType);
      // IF DocumentItemEntryBuffer.RUNMODAL = ACTION::LookupOK THEN BEGIN
      //  lTmpItems.RESET;
      //  lTmpItems.DELETEALL;
      //  DocumentItemEntryBuffer.GetItems(lTmpItems);
      //  IF lTmpItems.FINDFIRST THEN
      //    SelectedItems := lTmpItems."No.";
      //  IF lTmpItems.FINDLAST THEN
      //    SelectedItems += '..' + lTmpItems."No.";
      // END;
    END;

    PROCEDURE InitializeRequest@1(NewDocType@1001 : Option;NewDocNo@1000 : Code[20];NewIncludeHeader@1002 : Boolean;NewRecalcLines@1003 : Boolean);
    BEGIN
      DocType := NewDocType;
      DocNo := NewDocNo;
    END;

    BEGIN
    {
      //DOC TM3007 ST 05/07/18 - Code added to copy posted sales invoice & credit memo based on order no.
    }
    END.
  }
  RDLDATA
  {
  }
}

