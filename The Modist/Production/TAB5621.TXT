OBJECT Table 5621 FA Journal Line
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    OnInsert=VAR
               FAJnlTemplate@1000 : Record 5619;
               FAJnlBatch@1001 : Record 5620;
             BEGIN
               LOCKTABLE;
               FAJnlTemplate.GET("Journal Template Name");
               "Source Code" := FAJnlTemplate."Source Code";
               FAJnlBatch.GET("Journal Template Name","Journal Batch Name");
               "Reason Code" := FAJnlBatch."Reason Code";

               ValidateShortcutDimCode(1,"Shortcut Dimension 1 Code");
               ValidateShortcutDimCode(2,"Shortcut Dimension 2 Code");
             END;

    CaptionML=[ENU=FA Journal Line;
               ENG=FA Journal Line];
  }
  FIELDS
  {
    { 1   ;   ;Journal Template Name;Code10       ;TableRelation="FA Journal Template";
                                                   CaptionML=[ENU=Journal Template Name;
                                                              ENG=Journal Template Name] }
    { 2   ;   ;Journal Batch Name  ;Code10        ;TableRelation="FA Journal Batch".Name WHERE (Journal Template Name=FIELD(Journal Template Name));
                                                   CaptionML=[ENU=Journal Batch Name;
                                                              ENG=Journal Batch Name] }
    { 3   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              ENG=Line No.] }
    { 4   ;   ;Depreciation Book Code;Code10      ;TableRelation="Depreciation Book";
                                                   OnValidate=BEGIN
                                                                IF ("FA No." = '') OR ("Depreciation Book Code" = '') THEN
                                                                  EXIT;
                                                                FADeprBook.GET("FA No.","Depreciation Book Code");
                                                                "FA Posting Group" := FADeprBook."FA Posting Group";
                                                              END;

                                                   CaptionML=[ENU=Depreciation Book Code;
                                                              ENG=Depreciation Book Code] }
    { 5   ;   ;FA Posting Type     ;Option        ;OnValidate=BEGIN
                                                                IF "FA Posting Type" <> "FA Posting Type"::"Acquisition Cost" THEN
                                                                  TESTFIELD("Insurance No.",'');
                                                                IF "FA Posting Type" <> "FA Posting Type"::Maintenance THEN
                                                                  TESTFIELD("Maintenance Code",'');
                                                              END;

                                                   CaptionML=[ENU=FA Posting Type;
                                                              ENG=FA Posting Type];
                                                   OptionCaptionML=[ENU=Acquisition Cost,Depreciation,Write-Down,Appreciation,Custom 1,Custom 2,Disposal,Maintenance,Salvage Value;
                                                                    ENG=Acquisition Cost,Depreciation,Write-Down,Appreciation,Custom 1,Custom 2,Disposal,Maintenance,Salvage Value];
                                                   OptionString=Acquisition Cost,Depreciation,Write-Down,Appreciation,Custom 1,Custom 2,Disposal,Maintenance,Salvage Value }
    { 6   ;   ;FA No.              ;Code20        ;TableRelation="Fixed Asset";
                                                   OnValidate=BEGIN
                                                                IF "FA No." = '' THEN BEGIN
                                                                  CreateDim(DATABASE::"Fixed Asset","FA No.");
                                                                  EXIT;
                                                                END;

                                                                FA.GET("FA No.");
                                                                FA.TESTFIELD(Blocked,FALSE);
                                                                FA.TESTFIELD(Inactive,FALSE);
                                                                Description := FA.Description;
                                                                IF "Depreciation Book Code" = '' THEN BEGIN
                                                                  FASetup.GET;
                                                                  "Depreciation Book Code" := FASetup."Default Depr. Book";
                                                                  IF NOT FADeprBook.GET("FA No.","Depreciation Book Code") THEN
                                                                    "Depreciation Book Code" := '';
                                                                END;
                                                                IF "Depreciation Book Code" <> '' THEN BEGIN
                                                                  FADeprBook.GET("FA No.","Depreciation Book Code");
                                                                  "FA Posting Group" := FADeprBook."FA Posting Group";
                                                                END;

                                                                CreateDim(DATABASE::"Fixed Asset","FA No.");
                                                              END;

                                                   CaptionML=[ENU=FA No.;
                                                              ENG=FA No.] }
    { 7   ;   ;FA Posting Date     ;Date          ;CaptionML=[ENU=FA Posting Date;
                                                              ENG=FA Posting Date] }
    { 8   ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              ENG=Posting Date] }
    { 9   ;   ;Document Type       ;Option        ;CaptionML=[ENU=Document Type;
                                                              ENG=Document Type];
                                                   OptionCaptionML=[ENU=" ,,Invoice,Credit Memo";
                                                                    ENG=" ,,Invoice,Credit Memo"];
                                                   OptionString=[ ,,Invoice,Credit Memo] }
    { 10  ;   ;Document Date       ;Date          ;CaptionML=[ENU=Document Date;
                                                              ENG=Document Date] }
    { 11  ;   ;Document No.        ;Code20        ;CaptionML=[ENU=Document No.;
                                                              ENG=Document No.] }
    { 12  ;   ;External Document No.;Code35       ;CaptionML=[ENU=External Document No.;
                                                              ENG=External Document No.] }
    { 13  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              ENG=Description] }
    { 14  ;   ;Amount              ;Decimal       ;OnValidate=BEGIN
                                                                IF ((Amount > 0) AND (NOT Correction)) OR
                                                                   ((Amount < 0) AND Correction)
                                                                THEN BEGIN
                                                                  "Debit Amount" := Amount;
                                                                  "Credit Amount" := 0
                                                                END ELSE BEGIN
                                                                  "Debit Amount" := 0;
                                                                  "Credit Amount" := -Amount;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Amount;
                                                              ENG=Amount];
                                                   AutoFormatType=1 }
    { 15  ;   ;Debit Amount        ;Decimal       ;OnValidate=BEGIN
                                                                Correction := ("Debit Amount" < 0);
                                                                Amount := "Debit Amount";
                                                                VALIDATE(Amount);
                                                              END;

                                                   CaptionML=[ENU=Debit Amount;
                                                              ENG=Debit Amount];
                                                   AutoFormatType=1 }
    { 16  ;   ;Credit Amount       ;Decimal       ;OnValidate=BEGIN
                                                                Correction := ("Credit Amount" < 0);
                                                                Amount := -"Credit Amount";
                                                                VALIDATE(Amount);
                                                              END;

                                                   CaptionML=[ENU=Credit Amount;
                                                              ENG=Credit Amount];
                                                   AutoFormatType=1 }
    { 17  ;   ;Salvage Value       ;Decimal       ;CaptionML=[ENU=Salvage Value;
                                                              ENG=Salvage Value];
                                                   AutoFormatType=1 }
    { 18  ;   ;Quantity            ;Decimal       ;CaptionML=[ENU=Quantity;
                                                              ENG=Quantity];
                                                   DecimalPlaces=0:5 }
    { 19  ;   ;Correction          ;Boolean       ;OnValidate=BEGIN
                                                                VALIDATE(Amount);
                                                              END;

                                                   CaptionML=[ENU=Correction;
                                                              ENG=Correction] }
    { 20  ;   ;No. of Depreciation Days;Integer   ;CaptionML=[ENU=No. of Depreciation Days;
                                                              ENG=No. of Depreciation Days];
                                                   BlankZero=Yes }
    { 21  ;   ;Depr. until FA Posting Date;Boolean;CaptionML=[ENU=Depr. until FA Posting Date;
                                                              ENG=Depr. until FA Posting Date] }
    { 22  ;   ;Depr. Acquisition Cost;Boolean     ;CaptionML=[ENU=Depr. Acquisition Cost;
                                                              ENG=Depr. Acquisition Cost] }
    { 24  ;   ;FA Posting Group    ;Code10        ;TableRelation="FA Posting Group";
                                                   CaptionML=[ENU=FA Posting Group;
                                                              ENG=FA Posting Group] }
    { 26  ;   ;Maintenance Code    ;Code10        ;TableRelation=Maintenance;
                                                   OnValidate=BEGIN
                                                                IF "Maintenance Code" <> '' THEN
                                                                  TESTFIELD("FA Posting Type","FA Posting Type"::Maintenance);
                                                              END;

                                                   CaptionML=[ENU=Maintenance Code;
                                                              ENG=Maintenance Code] }
    { 27  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Shortcut Dimension 1 Code");
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 1 Code;
                                                              ENG=Shortcut Dimension 1 Code];
                                                   CaptionClass='1,2,1' }
    { 28  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Shortcut Dimension 2 Code");
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 2 Code;
                                                              ENG=Shortcut Dimension 2 Code];
                                                   CaptionClass='1,2,2' }
    { 30  ;   ;Insurance No.       ;Code20        ;TableRelation=Insurance;
                                                   OnValidate=BEGIN
                                                                IF "Insurance No." <> '' THEN
                                                                  TESTFIELD("FA Posting Type","FA Posting Type"::"Acquisition Cost");
                                                              END;

                                                   CaptionML=[ENU=Insurance No.;
                                                              ENG=Insurance No.] }
    { 31  ;   ;Budgeted FA No.     ;Code20        ;TableRelation="Fixed Asset";
                                                   OnValidate=BEGIN
                                                                IF "Budgeted FA No." = '' THEN
                                                                  EXIT;
                                                                FA.GET("Budgeted FA No.");
                                                                FA.TESTFIELD("Budgeted Asset",TRUE);
                                                              END;

                                                   CaptionML=[ENU=Budgeted FA No.;
                                                              ENG=Budgeted FA No.] }
    { 32  ;   ;Use Duplication List;Boolean       ;OnValidate=BEGIN
                                                                "Duplicate in Depreciation Book" := '';
                                                              END;

                                                   CaptionML=[ENU=Use Duplication List;
                                                              ENG=Use Duplication List] }
    { 33  ;   ;Duplicate in Depreciation Book;Code10;
                                                   TableRelation="Depreciation Book";
                                                   OnValidate=BEGIN
                                                                "Use Duplication List" := FALSE;
                                                              END;

                                                   CaptionML=[ENU=Duplicate in Depreciation Book;
                                                              ENG=Duplicate in Depreciation Book] }
    { 34  ;   ;FA Reclassification Entry;Boolean  ;CaptionML=[ENU=FA Reclassification Entry;
                                                              ENG=FA Reclassification Entry] }
    { 35  ;   ;FA Error Entry No.  ;Integer       ;TableRelation="FA Ledger Entry";
                                                   CaptionML=[ENU=FA Error Entry No.;
                                                              ENG=FA Error Entry No.];
                                                   BlankZero=Yes }
    { 36  ;   ;Reason Code         ;Code10        ;TableRelation="Reason Code";
                                                   CaptionML=[ENU=Reason Code;
                                                              ENG=Reason Code] }
    { 37  ;   ;Source Code         ;Code10        ;TableRelation="Source Code";
                                                   CaptionML=[ENU=Source Code;
                                                              ENG=Source Code] }
    { 38  ;   ;Recurring Method    ;Option        ;CaptionML=[ENU=Recurring Method;
                                                              ENG=Recurring Method];
                                                   OptionCaptionML=[ENU=" ,F Fixed,V Variable";
                                                                    ENG=" ,F Fixed,V Variable"];
                                                   OptionString=[ ,F Fixed,V Variable] }
    { 39  ;   ;Recurring Frequency ;DateFormula   ;CaptionML=[ENU=Recurring Frequency;
                                                              ENG=Recurring Frequency] }
    { 41  ;   ;Expiration Date     ;Date          ;CaptionML=[ENU=Expiration Date;
                                                              ENG=Expiration Date] }
    { 42  ;   ;Index Entry         ;Boolean       ;CaptionML=[ENU=Index Entry;
                                                              ENG=Index Entry] }
    { 43  ;   ;Posting No. Series  ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=Posting No. Series;
                                                              ENG=Posting No. Series] }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDimensions;
                                                            END;

                                                   CaptionML=[ENU=Dimension Set ID;
                                                              ENG=Dimension Set ID];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Journal Template Name,Journal Batch Name,Line No.;
                                                   Clustered=Yes }
    {    ;Journal Template Name,Journal Batch Name,FA Posting Date;
                                                   MaintainSQLIndex=No }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      FASetup@1000 : Record 5603;
      FA@1001 : Record 5600;
      FAJnlTemplate@1002 : Record 5619;
      FAJnlBatch@1003 : Record 5620;
      FAJnlLine@1004 : Record 5621;
      FADeprBook@1005 : Record 5612;
      NoSeriesMgt@1006 : Codeunit 396;
      DimMgt@1007 : Codeunit 408;

    PROCEDURE ConvertToLedgEntry@1(VAR FAJnlLine@1000 : Record 5621) : Option;
    VAR
      FALedgEntry@1001 : Record 5601;
    BEGIN
      WITH FALedgEntry DO BEGIN
        CASE FAJnlLine."FA Posting Type" OF
          FAJnlLine."FA Posting Type"::"Acquisition Cost":
            "FA Posting Type" := "FA Posting Type"::"Acquisition Cost";
          FAJnlLine."FA Posting Type"::Depreciation:
            "FA Posting Type" := "FA Posting Type"::Depreciation;
          FAJnlLine."FA Posting Type"::"Write-Down":
            "FA Posting Type" := "FA Posting Type"::"Write-Down";
          FAJnlLine."FA Posting Type"::Appreciation:
            "FA Posting Type" := "FA Posting Type"::Appreciation;
          FAJnlLine."FA Posting Type"::"Custom 1":
            "FA Posting Type" := "FA Posting Type"::"Custom 1";
          FAJnlLine."FA Posting Type"::"Custom 2":
            "FA Posting Type" := "FA Posting Type"::"Custom 2";
          FAJnlLine."FA Posting Type"::Disposal:
            "FA Posting Type" := "FA Posting Type"::"Proceeds on Disposal";
          FAJnlLine."FA Posting Type"::"Salvage Value":
            "FA Posting Type" := "FA Posting Type"::"Salvage Value";
        END;
        EXIT("FA Posting Type");
      END;
    END;

    PROCEDURE SetUpNewLine@8(LastFAJnlLine@1000 : Record 5621);
    BEGIN
      FAJnlTemplate.GET("Journal Template Name");
      FAJnlBatch.GET("Journal Template Name","Journal Batch Name");
      FAJnlLine.SETRANGE("Journal Template Name","Journal Template Name");
      FAJnlLine.SETRANGE("Journal Batch Name","Journal Batch Name");
      IF FAJnlLine.FINDFIRST THEN BEGIN
        "FA Posting Date" := LastFAJnlLine."FA Posting Date";
        "Document No." := LastFAJnlLine."Document No.";
      END ELSE BEGIN
        "FA Posting Date" := WORKDATE;
        IF FAJnlBatch."No. Series" <> '' THEN BEGIN
          CLEAR(NoSeriesMgt);
          "Document No." := NoSeriesMgt.TryGetNextNo(FAJnlBatch."No. Series","FA Posting Date");
        END;
      END;
      "Recurring Method" := LastFAJnlLine."Recurring Method";
      "Source Code" := FAJnlTemplate."Source Code";
      "Reason Code" := FAJnlBatch."Reason Code";
      "Posting No. Series" := FAJnlBatch."Posting No. Series";
    END;

    PROCEDURE CreateDim@13(Type1@1000 : Integer;No1@1001 : Code[20]);
    VAR
      TableID@1002 : ARRAY [10] OF Integer;
      No@1003 : ARRAY [10] OF Code[20];
    BEGIN
      TableID[1] := Type1;
      No[1] := No1;
      "Shortcut Dimension 1 Code" := '';
      "Shortcut Dimension 2 Code" := '';
      "Dimension Set ID" :=
        DimMgt.GetDefaultDimID(
          TableID,No,"Source Code",
          "Shortcut Dimension 1 Code","Shortcut Dimension 2 Code",0,0);
    END;

    PROCEDURE ValidateShortcutDimCode@14(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.ValidateShortcutDimValues(FieldNumber,ShortcutDimCode,"Dimension Set ID");
    END;

    PROCEDURE LookupShortcutDimCode@18(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.LookupDimValueCode(FieldNumber,ShortcutDimCode);
      DimMgt.ValidateShortcutDimValues(FieldNumber,ShortcutDimCode,"Dimension Set ID");
    END;

    PROCEDURE ShowShortcutDimCode@15(VAR ShortcutDimCode@1000 : ARRAY [8] OF Code[20]);
    BEGIN
      DimMgt.GetShortcutDimensions("Dimension Set ID",ShortcutDimCode);
    END;

    PROCEDURE ShowDimensions@2();
    BEGIN
      "Dimension Set ID" :=
        DimMgt.EditDimensionSet2(
          "Dimension Set ID",STRSUBSTNO('%1 %2 %3',"Journal Template Name","Journal Batch Name","Line No."),
          "Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
    END;

    PROCEDURE IsOpenedFromBatch@42() : Boolean;
    VAR
      FAJournalBatch@1002 : Record 5620;
      TemplateFilter@1001 : Text;
      BatchFilter@1000 : Text;
    BEGIN
      BatchFilter := GETFILTER("Journal Batch Name");
      IF BatchFilter <> '' THEN BEGIN
        TemplateFilter := GETFILTER("Journal Template Name");
        IF TemplateFilter <> '' THEN
          FAJournalBatch.SETFILTER("Journal Template Name",TemplateFilter);
        FAJournalBatch.SETFILTER(Name,BatchFilter);
        FAJournalBatch.FINDFIRST;
      END;

      EXIT((("Journal Batch Name" <> '') AND ("Journal Template Name" = '')) OR (BatchFilter <> ''));
    END;

    BEGIN
    END.
  }
}

