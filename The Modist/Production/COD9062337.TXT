OBJECT Codeunit 9062337 Copy Planning Board
{
  OBJECT-PROPERTIES
  {
    Date=05/01/16;
    Time=12:56:51 PM;
    Version List=NA2016.12;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    LOCAL PROCEDURE "--- General ---"@1000000008();
    BEGIN
    END;

    PROCEDURE CopyFilters@1000000001(pToPlanningBoardCode@1000000000 : Code[20];pToPlanningBoardTableType@1000000003 : Integer) : Boolean;
    VAR
      lFromPlanningBoardCode@1000000002 : Code[20];
      lFromPlanningBoardTableType@1000000005 : Integer;
    BEGIN
      //DOC NA2016.12 - Copying filters to specified planning board
      //  -> pToPlanningBoardCode: Target planning board code
      //  -> pToPlanningBoardTableType: Target planning board table type
      //  <- Result (TRUE = Copied, FALSE = Cancelled)

      IF ( NOT (SelectFromPlanningBoard(pToPlanningBoardCode, lFromPlanningBoardCode))) THEN
        EXIT(FALSE);
      lFromPlanningBoardTableType := pToPlanningBoardTableType;
      CopyFiltersFromTo(lFromPlanningBoardCode, lFromPlanningBoardTableType, pToPlanningBoardCode, pToPlanningBoardTableType);
      EXIT(TRUE);
    END;

    PROCEDURE CopyFiltersFromTo@1000000000(pFromPlanningBoardCode@1000000001 : Code[20];pFromPlanningBoardTableType@1000000005 : Integer;pToPlanningBoardCode@1000000000 : Code[20];pToPlanningBoardTableType@1000000004 : Integer);
    VAR
      lFromPlanningBoardTableField@1000000002 : Record 9062340;
      lToPlanningBoardTableField@1000000003 : Record 9062340;
    BEGIN
      //DOC NA2016.12 - Copying filters from one to another planning board
      //  -> pFromPlanningBoardCode: Source planning board code
      //  -> pFromPlanningBoardTableType: Source planning board table type
      //  -> pToPlanningBoardCode: Target planning board code
      //  -> pToPlanningBoardTableType: Target planning board table type

      lToPlanningBoardTableField.RESET();
      lToPlanningBoardTableField.SETRANGE("Planning Board Code", pToPlanningBoardCode);
      lToPlanningBoardTableField.SETRANGE("Planning Board Table Type", pToPlanningBoardTableType);
      lToPlanningBoardTableField.SETRANGE("Field Application", lToPlanningBoardTableField."Field Application"::Filter);
      lToPlanningBoardTableField.DELETEALL(TRUE);

      lFromPlanningBoardTableField.RESET();
      lFromPlanningBoardTableField.SETRANGE("Planning Board Code", pFromPlanningBoardCode);
      lFromPlanningBoardTableField.SETRANGE("Planning Board Table Type", pFromPlanningBoardTableType);
      lFromPlanningBoardTableField.SETRANGE("Field Application", lFromPlanningBoardTableField."Field Application"::Filter);
      IF (lFromPlanningBoardTableField.FINDSET()) THEN
      REPEAT
        lToPlanningBoardTableField := lFromPlanningBoardTableField;
        lToPlanningBoardTableField.VALIDATE("Planning Board Code", pToPlanningBoardCode);
        lToPlanningBoardTableField.VALIDATE("Planning Board Table Type", pToPlanningBoardTableType);
        lToPlanningBoardTableField.INSERT(TRUE);
      UNTIL (lFromPlanningBoardTableField.NEXT() = 0);
    END;

    PROCEDURE CopyStyles@1000000013(pToPlanningBoardCode@1000000000 : Code[20];pToPlanningBoardTableType@1000000003 : Integer;pToStyleApplication@1000000004 : Integer) : Boolean;
    VAR
      lFromPlanningBoardCode@1000000002 : Code[20];
      lFromPlanningBoardTableType@1000000005 : Integer;
      lFromStyleApplication@1000000006 : Integer;
    BEGIN
      //DOC NA2016.12 - Copying styles to specified planning board
      //  -> pToPlanningBoardCode: Target planning board code
      //  -> pToPlanningBoardTableType: Target planning board table type
      //  -> pToStyleApplication: Target style application
      //  <- Result (TRUE = Copied, FALSE = Cancelled)

      IF ( NOT (SelectFromPlanningBoard(pToPlanningBoardCode, lFromPlanningBoardCode))) THEN
        EXIT(FALSE);
      lFromPlanningBoardTableType := pToPlanningBoardTableType;
      lFromStyleApplication := pToStyleApplication;
      CopyStylesFromTo(lFromPlanningBoardCode, lFromPlanningBoardTableType, lFromStyleApplication, pToPlanningBoardCode, pToPlanningBoardTableType, pToStyleApplication);
      EXIT(TRUE);
    END;

    PROCEDURE CopyStylesFromTo@1000000014(pFromPlanningBoardCode@1000000001 : Code[20];pFromPlanningBoardTableType@1000000005 : Integer;pFromStyleApplication@1000000007 : Integer;pToPlanningBoardCode@1000000000 : Code[20];pToPlanningBoardTableType@1000000004 : Integer;pToStyleApplication@1000000006 : Integer);
    VAR
      lFromPlanningBoardTableStyle@1000000002 : Record 9062342;
      lToPlanningBoardTableStyle@1000000003 : Record 9062342;
    BEGIN
      //DOC NA2016.12 - Copying styles from one to another planning board
      //  -> pFromPlanningBoardCode: Source planning board code
      //  -> pFromPlanningBoardTableType: Source planning board table type
      //  -> pFromStyleApplication: Source style application
      //  -> pToPlanningBoardCode: Target planning board code
      //  -> pToPlanningBoardTableType: Target planning board table type
      //  -> pToStyleApplication: Target style application

      lToPlanningBoardTableStyle.RESET();
      lToPlanningBoardTableStyle.SETRANGE("Planning Board Code", pToPlanningBoardCode);
      lToPlanningBoardTableStyle.SETRANGE("Planning Board Table Type", pToPlanningBoardTableType);
      lToPlanningBoardTableStyle.SETRANGE("Style Application", pToStyleApplication);
      lToPlanningBoardTableStyle.DELETEALL(TRUE);

      lFromPlanningBoardTableStyle.RESET();
      lFromPlanningBoardTableStyle.SETRANGE("Planning Board Code", pFromPlanningBoardCode);
      lFromPlanningBoardTableStyle.SETRANGE("Planning Board Table Type", pFromPlanningBoardTableType);
      lFromPlanningBoardTableStyle.SETRANGE("Style Application", pFromStyleApplication);
      IF (lFromPlanningBoardTableStyle.FINDSET()) THEN
      REPEAT
        lToPlanningBoardTableStyle := lFromPlanningBoardTableStyle;
        lToPlanningBoardTableStyle.VALIDATE("Planning Board Code", pToPlanningBoardCode);
        lToPlanningBoardTableStyle.VALIDATE("Planning Board Table Type", pToPlanningBoardTableType);
        lToPlanningBoardTableStyle.VALIDATE("Style Application", pToStyleApplication);
        lToPlanningBoardTableStyle.INSERT(TRUE);
      UNTIL (lFromPlanningBoardTableStyle.NEXT() = 0);
    END;

    PROCEDURE CopyTheme@1000000002(pToPlanningBoardCode@1000000000 : Code[20]) : Boolean;
    VAR
      lFromPlanningBoardCode@1000000001 : Code[20];
    BEGIN
      //DOC NA2016.12 - Copying theme to specified planning board
      //  -> pToPlanningBoardCode: Target planning board code
      //  <- Result (TRUE = Copied, FALSE = Cancelled)

      IF ( NOT (SelectFromPlanningBoard(pToPlanningBoardCode, lFromPlanningBoardCode))) THEN
        EXIT(FALSE);
      CopyThemeFromTo(lFromPlanningBoardCode, pToPlanningBoardCode);
      EXIT(TRUE);
    END;

    PROCEDURE CopyThemeFromTo@1000000005(pFromPlanningBoardCode@1000000001 : Code[20];pToPlanningBoardCode@1000000000 : Code[20]);
    VAR
      lFromPlanningBoardTheme@1000000002 : Record 9062350;
      lToPlanningBoardTheme@1000000003 : Record 9062350;
      lFromPlanningBoardThemeView@1000000005 : Record 9062351;
      lToPlanningBoardThemeView@1000000006 : Record 9062351;
    BEGIN
      //DOC NA2016.12 - Copying theme from one to another planning board
      //  -> pFromPlanningBoardCode: Source planning board code
      //  -> pToPlanningBoardCode: Target planning board code

      lFromPlanningBoardTheme.GET(pFromPlanningBoardCode);
      IF (lToPlanningBoardTheme.GET(pToPlanningBoardCode)) THEN
        lToPlanningBoardTheme.DELETE(TRUE);
      lToPlanningBoardThemeView.RESET();
      lToPlanningBoardThemeView.SETRANGE("Planning Board Code", pToPlanningBoardCode);
      lToPlanningBoardThemeView.DELETEALL(TRUE);

      lToPlanningBoardTheme.INIT();
      lToPlanningBoardTheme := lFromPlanningBoardTheme;
      lToPlanningBoardTheme.VALIDATE("Planning Board Code", pToPlanningBoardCode);
      lToPlanningBoardTheme.INSERT(TRUE);

      lFromPlanningBoardThemeView.RESET();
      lFromPlanningBoardThemeView.SETRANGE("Planning Board Code", pFromPlanningBoardCode);
      IF (lFromPlanningBoardThemeView.FINDSET()) THEN
      REPEAT
        lToPlanningBoardThemeView := lFromPlanningBoardThemeView;
        lToPlanningBoardThemeView.VALIDATE("Planning Board Code", pToPlanningBoardCode);
        lToPlanningBoardThemeView.INSERT(TRUE);
      UNTIL (lFromPlanningBoardThemeView.NEXT() = 0);
    END;

    LOCAL PROCEDURE "--- Internal ---"@1000000009();
    BEGIN
    END;

    LOCAL PROCEDURE SelectFromPlanningBoard@1000000010(pToPlanningBoardCode@1000000001 : Code[20];VAR pFromPlanningBoardCode@1000000000 : Code[20]) : Boolean;
    VAR
      eNoToPlanningBoardCode@1000000002 : TextConst 'ENU=You have to specify target planning board code.;ENG=You have to specify target planning board code.';
      eNoFromPlanningBoards@1000000003 : TextConst 'ENU=There are no planning boards to copy from.;ENG=There are no planning boards to copy from.';
      lFromPlanningBoardHeader@1000000004 : Record 9062337;
      lToPlanningBoardHeader@1000000006 : Record 9062337;
      lResult@1000000005 : Boolean;
    BEGIN
      //DOC NA2016.12 - Selecting source planning board
      //  -> pToPlanningBoardCode: Target planning board code
      //  <> pFromPlanningBoardCode: Source planning board code
      //  <- Result (TRUE = Selected, FALSE = Cancelled)

      IF (pToPlanningBoardCode = '') THEN
        ERROR(eNoToPlanningBoardCode);

      lToPlanningBoardHeader.GET(pToPlanningBoardCode);
      lToPlanningBoardHeader.TESTFIELD(Status, lToPlanningBoardHeader.Status::Open);

      lFromPlanningBoardHeader.RESET();
      lFromPlanningBoardHeader.SETFILTER(Code, '<>%1', pToPlanningBoardCode);
      IF (lFromPlanningBoardHeader.ISEMPTY()) THEN
        ERROR(eNoFromPlanningBoards);
      IF (PAGE.RUNMODAL(0, lFromPlanningBoardHeader) = ACTION::LookupOK) THEN
      BEGIN
        pFromPlanningBoardCode := lFromPlanningBoardHeader.Code;
        lResult := TRUE;
      END;

      EXIT(lResult);
    END;

    BEGIN
    {
      //DOC NA2016.12 JH 05/01/2016 - Created
    }
    END.
  }
}

