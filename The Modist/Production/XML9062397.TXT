OBJECT XMLport 9062397 Enhanced View - Grid Data
{
  OBJECT-PROPERTIES
  {
    Date=10/05/16;
    Time=12:00:00 PM;
    Version List=NA2016.15;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Enhanced View - Grid Data;
               ENG=Enhanced View - Grid Data];
    Encoding=ISO-8859-2;
    XMLVersionNo=1.1;
    Format/Evaluate=XML Format/Evaluate;
    OnPreXMLport=VAR
                   GroupByField@1000000000 : TEMPORARY Record 9062807;
                   TotalsField@1000000001 : TEMPORARY Record 9062807;
                 BEGIN
                   EnhViewData.GetEnhViewState(EnhViewCalcMgt);
                   EnhViewCalcMgt.GetData(EnhView, GroupByField, TotalsField, Column, Cell);
                   EnhViewCalcMgt.GetGridFields(EnhViewGridField);
                 END;

  }
  ELEMENTS
  {
    { [{E4C0F020-7258-419D-AF2E-AD24C667C7E0}];  ;EnhView             ;Element ;Table   ;
                                                  VariableName=EnhView;
                                                  SourceTable=Table9062804;
                                                  Temporary=Yes;
                                                  Export::OnAfterGetRecord=BEGIN
                                                                             EnhView_ColumnList := BuildJSonColumnList();
                                                                             EnhView_AggregateList := BuildJSonAggregateList();
                                                                             EnhView_Data := BuildJSonData();
                                                                           END;
                                                                            }

    { [{ACD93A18-D8EF-4D64-A27D-A788C6FA761C}];1 ;HideMenu            ;Element ;Field   ;
                                                  DataType=Boolean;
                                                  SourceField=EnhView::Hide Menu Bar }

    { [{038CC334-3A1A-43EA-AB7E-36C508C6C40F}];1 ;Code                ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=EnhView::Code }

    { [{4DBE827A-04D3-4D26-896B-65BC062D4F96}];1 ;Description         ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=EnhView::Description }

    { [{75085B2B-B0F9-4CA7-94A2-E0D50C9B84B9}];1 ;ColumnList          ;Element ;Text    ;
                                                  VariableName=EnhView_ColumnList }

    { [{2D7D56EA-3E13-4BAE-8235-9E6CE4A1E492}];1 ;AggregateList       ;Element ;Text    ;
                                                  VariableName=EnhView_AggregateList }

    { [{3C89D9FF-26BF-4864-AC2B-0F132842D61D}];1 ;Data                ;Element ;Text    ;
                                                  VariableName=EnhView_Data }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      Column@1000000015 : TEMPORARY Record 9062805;
      Cell@1000000011 : TEMPORARY Record 9062806;
      CellStyle@1000000003 : Record 9062808;
      EnhViewGridField@1000000004 : TEMPORARY Record 9062807;
      ValueFormat@1000000013 : Record 9062813;
      EnhViewData@1000000002 : Codeunit 9062678;
      EnhViewMgt@1000000014 : Codeunit 9062679;
      EnhViewCalcMgt@1000000019 : Codeunit 9062674;
      RecRefOpen@1000000001 : Boolean;
      RecRef@1000000000 : RecordRef;
      txtDFDay@1000000005 : TextConst 'ENU=D;ENG=D';
      txtDFWeek@1000000010 : TextConst 'ENU=W;ENG=W';
      txtDFMonth@1000000006 : TextConst 'ENU=M;ENG=M';
      txtDFQuater@1000000007 : TextConst 'ENU=Q;ENG=Q';
      txtDFHYear@1000000008 : TextConst 'ENU=H;ENG=H';
      txtDFYear@1000000009 : TextConst 'ENU=Y;ENG=Y';
      VariantValue@1000000012 : Variant;

    LOCAL PROCEDURE OpenRecord@1000000001(RecordVar@1000000000 : RecordID);
    BEGIN
      IF (RecRefOpen) THEN
        RecRef.CLOSE();
      RecRef.OPEN(EnhView."Source Table No.");
      RecRef.GET(RecordVar);
      RecRefOpen := TRUE;
    END;

    LOCAL PROCEDURE BuildJSonColumnList@1000000004() : Text;
    VAR
      Field@1000000003 : Record 2000000041;
      JsonMgt@1000000000 : Codeunit 9062670;
      AggregateFunctionName@1000000001 : Text;
      TemplateText@1000000002 : Text;
    BEGIN
      EnhViewGridField.RESET();
      EnhViewGridField.SETRANGE("View Code", EnhView.Code);
      EnhViewGridField.SETRANGE(Type, EnhViewGridField.Type::"Grid Column");

      JsonMgt.StartJSonArray();

      JsonMgt.StartJSon();
      JsonMgt.AddToJSon('field', 'EntryStyle');
      JsonMgt.AddToJSon('title', ' ');
      JsonMgt.AddToJSon('groupable', FALSE);
      JsonMgt.AddToJSon('sortable', FALSE);
      //JsonMgt.AddToJSon('locked', 'true');
      JsonMgt.AddToJSon('template', '#EntryStyleTemplate#'); //'<div style="width:6px;margin:2px;overflow:hidden;#=EntryStyle#;">&nbsp;</div>');

      JsonMgt.EndJSon();

      IF (EnhViewGridField.FINDSET()) THEN BEGIN
        REPEAT
          JsonMgt.StartJSon();
          JsonMgt.AddToJSon('field', EnhViewGridField.Name);
          JsonMgt.AddToJSon('title', EnhViewGridField.Caption);
          JsonMgt.AddToJSon('sortable', EnhViewGridField.Sortable);
          JsonMgt.AddToJSon('groupable', EnhViewGridField.Groupable);

          IF (Field.GET(EnhViewGridField."Table No.", EnhViewGridField."Field No.")) THEN BEGIN
            IF (Field.Type = Field.Type::Decimal) THEN
              JsonMgt.AddToJSon('template', GetFormatTemplate(EnhViewGridField, '', ''));
          END;


          IF (EnhViewGridField."Aggregate Function" <> EnhViewGridField."Aggregate Function"::" ") THEN BEGIN
            AggregateFunctionName := GetAggregateName(EnhViewGridField);
            TemplateText := GetFormatTemplate(EnhViewGridField, EnhViewGridField."Aggregate Caption", AggregateFunctionName);

            JsonMgt.WritePropertyName('aggregates');
            JsonMgt.StartJSonArray();
            JsonMgt.WriteValue(AggregateFunctionName);
            JsonMgt.EndJSonArray();
            JsonMgt.AddToJSon('footerTemplate', TemplateText);
            JsonMgt.AddToJSon('groupFooterTemplate', TemplateText);
          END;

          JsonMgt.EndJSon();
        UNTIL (EnhViewGridField.NEXT() = 0);
      END;

      JsonMgt.EndJSonArray();

      EXIT(JsonMgt.GetJSon());
    END;

    LOCAL PROCEDURE BuildJSonAggregateList@1000000005() : Text;
    VAR
      JsonMgt@1000000000 : Codeunit 9062670;
    BEGIN
      EnhViewGridField.RESET();
      EnhViewGridField.SETRANGE("View Code", EnhView.Code);
      EnhViewGridField.SETRANGE(Type, EnhViewGridField.Type::"Grid Column");
      EnhViewGridField.SETFILTER("Aggregate Function", '<>%1', EnhViewGridField."Aggregate Function"::" ");
      IF (EnhViewGridField.FINDSET()) THEN BEGIN
        JsonMgt.StartJSonArray();
        REPEAT
          JsonMgt.StartJSon();
          JsonMgt.AddToJSon('field', EnhViewGridField.Name);
          JsonMgt.AddToJSon('aggregate', GetAggregateName(EnhViewGridField));
          JsonMgt.EndJSon();
        UNTIL (EnhViewGridField.NEXT() = 0);
        JsonMgt.EndJSonArray();
        EXIT(JsonMgt.GetJSon());
      END;

      EXIT('');
    END;

    LOCAL PROCEDURE BuildJSonData@1000000003() : Text;
    VAR
      JsonMgt@1000000000 : Codeunit 9062670;
      RecId@1000000001 : RecordID;
      CellHtmlStyle@1000000002 : Text;
      CellHtmlClass@1000000003 : Text;
      FormattedValue@1000000004 : Text;
    BEGIN
      JsonMgt.StartJSonArray();

      Cell.RESET();
      Cell.SETRANGE("View Code", EnhView.Code);
      IF (Cell.FINDSET()) THEN BEGIN
        REPEAT
          JsonMgt.StartJSon();

          CellHtmlStyle := '';
          CellHtmlClass := '';
          IF (Cell."Cell Style Id" <> 0) THEN BEGIN
            CellStyle.GET(Cell."View Code", CellStyle.Type::Cell, 0, Cell."Cell Style Id");
            CellHtmlStyle := CellStyle.GetHtmlStyle();
            CellHtmlClass := CellStyle."Css Class Name";
          END;

          JsonMgt.AddToJSon('EntryStyle', CellHtmlStyle);
          JsonMgt.AddToJSon('EntryClass', CellHtmlClass);
          JsonMgt.AddToJSon('EntryNo', Cell."Entry No.");

          RecId := Cell."Related Record Id";
          OpenRecord(RecId);

          EnhViewGridField.RESET();
          EnhViewGridField.SETRANGE("View Code", EnhView.Code);
          EnhViewGridField.SETRANGE(Type, EnhViewGridField.Type::"Grid Column");
          IF (EnhViewGridField.FINDSET()) THEN BEGIN
            REPEAT
              FormattedValue := EnhViewGridField.GetRecRefFieldValue(RecRef, VariantValue);
              IF (VariantValue.ISDECIMAL) THEN BEGIN
                JsonMgt.WritePropertyName(EnhViewGridField.Name);
                JsonMgt.WriteValue(VariantValue);
              END ELSE
                JsonMgt.AddToJSon(EnhViewGridField.Name, FormattedValue);
            UNTIL (EnhViewGridField.NEXT() = 0);
          END;

          JsonMgt.EndJSon();
        UNTIL (Cell.NEXT() = 0);
      END;

      JsonMgt.EndJSonArray();
      EXIT(JsonMgt.GetJSon());
    END;

    LOCAL PROCEDURE "--- Tools ---"@1000000006();
    BEGIN
    END;

    LOCAL PROCEDURE GetAggregateName@1000000007(VAR ForEnhViewField@1000000000 : Record 9062807) : Text;
    BEGIN
      CASE (ForEnhViewField."Aggregate Function") OF
        ForEnhViewField."Aggregate Function"::Average: EXIT('average');
        ForEnhViewField."Aggregate Function"::Sum: EXIT('sum');
        ForEnhViewField."Aggregate Function"::Min: EXIT('max');
        ForEnhViewField."Aggregate Function"::Max: EXIT('min');
        ForEnhViewField."Aggregate Function"::Count: EXIT('count');
      END;
      EXIT('');
    END;

    LOCAL PROCEDURE GetFormatTemplate@1000000012(VAR ForEnhViewField@1000000000 : Record 9062807;FieldCaption@1000000003 : Text;FieldName@1000000001 : Text) : Text;
    VAR
      NumberFormat@1000000002 : Text;
    BEGIN
      IF (FieldName = '') THEN
        FieldName := ForEnhViewField.Name;

      IF (FieldCaption <> '') THEN
        IF (FieldCaption[STRLEN(FieldCaption)] <> ' ') THEN
          FieldCaption := FieldCaption + ' ';

      NumberFormat := ValueFormat.GetKendoUIFormat(ForEnhViewField."Value Format Code");

      EXIT(STRSUBSTNO('%1#=kendo.toString(%2, ''%3'')#', FieldCaption, FieldName, NumberFormat));
    END;

    BEGIN
    {
      //DOC NA2016.12 AZ 21/01/2016 - Created
      //DOC NA2016.14 AZ 26/02/2016 - Grid View added, bugfixes
      //DOC NA2016.14 AZ 03/03/2016 - "Number Format" option field replaced with "Value Format Code" field
      //DOC NA2016.15 AZ 12/04/2016 - Midifications and bugfixes, Quick Reports support added
      //DOC NA2016.15 JH 10/05/2016 - CfMD amendments
    }
    END.
  }
}

