OBJECT Page 6520 Item Tracing
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Item Tracing;
               ENG=Item Tracing];
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    SourceTable=Table6520;
    PageType=Worksheet;
    SourceTableTemporary=Yes;
    OnInit=BEGIN
             NavigateEnable := TRUE;
             PrintEnable := TRUE;
             FunctionsEnable := TRUE;
           END;

    OnOpenPage=BEGIN
                 InitButtons;
                 TraceMethod := TraceMethod::"Usage->Origin";
                 ShowComponents := ShowComponents::"Item-tracked Only";
               END;

    OnAfterGetRecord=BEGIN
                       DescriptionIndent := 0;
                       ItemTracingMgt.SetExpansionStatus(Rec,TempTrackEntry,Rec,ActualExpansionStatus);
                       DescriptionOnFormat;
                     END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 34      ;1   ;ActionGroup;
                      Name=Line;
                      CaptionML=[ENU=&Line;
                                 ENG=&Line];
                      Image=Line }
      { 60      ;2   ;Action    ;
                      Name=ShowDocument;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Show Document;
                                 ENG=Show Document];
                      Image=View;
                      OnAction=BEGIN
                                 ItemTracingMgt.ShowDocument("Record Identifier");
                               END;
                                }
      { 10      ;1   ;ActionGroup;
                      Name=Item;
                      CaptionML=[ENU=&Item;
                                 ENG=&Item];
                      Image=Item }
      { 17      ;2   ;Action    ;
                      Name=Card;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Card;
                                 ENG=Card];
                      RunObject=Page 30;
                      RunPageLink=No.=FIELD(Item No.);
                      Image=EditLines }
      { 19      ;2   ;Action    ;
                      Name=LedgerEntries;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=[ENU=Ledger E&ntries;
                                 ENG=Ledger E&ntries];
                      RunObject=Page 38;
                      RunPageView=SORTING(Item No.);
                      RunPageLink=Item No.=FIELD(Item No.);
                      Promoted=No;
                      Image=CustomerLedger;
                      PromotedCategory=Process }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 36      ;1   ;ActionGroup;
                      Name=Functions;
                      CaptionML=[ENU=F&unctions;
                                 ENG=F&unctions];
                      Image=Action }
      { 59      ;2   ;Action    ;
                      Name=TraceOppositeFromLine;
                      CaptionML=[ENU=&Trace Opposite - from Line;
                                 ENG=&Trace Opposite - from Line];
                      Promoted=Yes;
                      Enabled=FunctionsEnable;
                      Image=TraceOppositeLine;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IF TraceMethod = TraceMethod::"Origin->Usage" THEN
                                   TraceMethod := TraceMethod::"Usage->Origin"
                                 ELSE
                                   TraceMethod := TraceMethod::"Origin->Usage";
                                 OppositeTraceFromLine;
                               END;
                                }
      { 26      ;2   ;Action    ;
                      Name=SetFiltersWithLineValues;
                      CaptionML=[ENU=Set &Filters with Line Values;
                                 ENG=Set &Filters with Line Values];
                      Enabled=FunctionsEnable;
                      Image=FilterLines;
                      OnAction=BEGIN
                                 ItemTracingMgt.InitSearchParm(Rec,SerialNoFilter,LotNoFilter,ItemNoFilter,VariantFilter);
                               END;
                                }
      { 7       ;2   ;Action    ;
                      Name=Go to Already-Traced History;
                      CaptionML=[ENU=Go to Already-Traced History;
                                 ENG=Go to Already-Traced History];
                      Enabled=FunctionsEnable;
                      Image=MoveUp;
                      OnAction=BEGIN
                                 SetFocus("Item Ledger Entry No.");
                               END;
                                }
      { 37      ;2   ;Action    ;
                      Name=NextTraceResult;
                      CaptionML=[ENU=Next Trace Result;
                                 ENG=Next Trace Result];
                      Image=NextRecord;
                      OnAction=BEGIN
                                 RecallHistory(1);
                               END;
                                }
      { 38      ;2   ;Action    ;
                      Name=PreviousTraceResult;
                      CaptionML=[ENU=Previous Trace Result;
                                 ENG=Previous Trace Result];
                      Image=PreviousRecord;
                      OnAction=BEGIN
                                 RecallHistory(-1);
                               END;
                                }
      { 16      ;1   ;Action    ;
                      Name=Print;
                      Ellipsis=Yes;
                      CaptionML=[ENU=&Print;
                                 ENG=&Print];
                      Promoted=Yes;
                      Enabled=PrintEnable;
                      Image=Print;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 xItemTracingBuffer@1002 : Record 6520;
                                 PrintTracking@1000 : Report 6520;
                               BEGIN
                                 CLEAR(PrintTracking);
                                 xItemTracingBuffer.COPY(Rec);
                                 PrintTracking.TransferEntries(Rec);
                                 COPY(xItemTracingBuffer);
                                 PrintTracking.RUN;
                               END;
                                }
      { 11      ;1   ;Action    ;
                      Name=Navigate;
                      CaptionML=[ENU=&Navigate;
                                 ENG=&Navigate];
                      Promoted=Yes;
                      Enabled=NavigateEnable;
                      Image=Navigate;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 Navigate@1000 : Page 344;
                               BEGIN
                                 Navigate.SetTracking("Serial No.","Lot No.");
                                 Navigate.RUN;
                               END;
                                }
      { 20      ;1   ;Action    ;
                      Name=Trace;
                      CaptionML=[ENU=&Trace;
                                 ENG=&Trace];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Trace;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 FindRecords;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000001;1;Group  ;
                CaptionML=[ENU=General;
                           ENG=General] }

    { 18  ;2   ;Field     ;
                CaptionML=[ENU=Serial No. Filter;
                           ENG=Serial No. Filter];
                SourceExpr=SerialNoFilter;
                OnLookup=VAR
                           SerialNoInfo@1003 : Record 6504;
                           SerialNoList@1002 : Page 6509;
                         BEGIN
                           SerialNoInfo.RESET;

                           CLEAR(SerialNoList);
                           SerialNoList.SETTABLEVIEW(SerialNoInfo);
                           IF SerialNoList.RUNMODAL = ACTION::LookupOK THEN
                             SerialNoFilter := SerialNoList.GetSelectionFilter;
                         END;
                          }

    { 13  ;2   ;Field     ;
                CaptionML=[ENU=Lot No. Filter;
                           ENG=Lot No. Filter];
                SourceExpr=LotNoFilter;
                OnLookup=VAR
                           LotNoInfo@1002 : Record 6505;
                           LotNoList@1003 : Page 6508;
                         BEGIN
                           LotNoInfo.RESET;

                           CLEAR(LotNoList);
                           LotNoList.SETTABLEVIEW(LotNoInfo);
                           IF LotNoList.RUNMODAL = ACTION::LookupOK THEN
                             LotNoFilter := LotNoList.GetSelectionFilter;
                         END;
                          }

    { 1000000013;2;Field  ;
                CaptionML=[ENU=Item Filter;
                           ENG=Item Filter];
                SourceExpr=ItemNoFilter;
                OnValidate=BEGIN
                             IF ItemNoFilter = '' THEN
                               VariantFilter := '';
                           END;

                OnLookup=VAR
                           Item@1002 : Record 27;
                           ItemList@1003 : Page 31;
                         BEGIN
                           Item.RESET;

                           CLEAR(ItemList);
                           ItemList.SETTABLEVIEW(Item);
                           ItemList.LOOKUPMODE(TRUE);
                           IF ItemList.RUNMODAL = ACTION::LookupOK THEN
                             ItemNoFilter := ItemList.GetSelectionFilter;
                         END;
                          }

    { 4   ;2   ;Field     ;
                CaptionML=[ENU=Variant Filter;
                           ENG=Variant Filter];
                SourceExpr=VariantFilter;
                OnValidate=BEGIN
                             IF ItemNoFilter = '' THEN
                               ERROR(Text001);
                           END;

                OnLookup=VAR
                           ItemVariant@1003 : Record 5401;
                           ItemVariants@1002 : Page 5401;
                         BEGIN
                           IF ItemNoFilter = '' THEN
                             ERROR(Text001);

                           ItemVariant.RESET;

                           CLEAR(ItemVariants);
                           ItemVariant.SETFILTER("Item No.",ItemNoFilter);
                           ItemVariants.SETTABLEVIEW(ItemVariant);
                           ItemVariants.LOOKUPMODE(TRUE);
                           IF ItemVariants.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             ItemVariants.GETRECORD(ItemVariant);
                             VariantFilter := ItemVariant.Code;
                           END;
                         END;
                          }

    { 25  ;2   ;Field     ;
                CaptionML=[ENU=Show Components;
                           ENG=Show Components];
                OptionCaptionML=[ENU=No,Item-tracked Only,All;
                                 ENG=No,Item-tracked Only,All];
                SourceExpr=ShowComponents }

    { 21  ;2   ;Field     ;
                CaptionML=[ENU=Trace Method;
                           ENG=Trace Method];
                ToolTipML=[ENU=Find the latest occurrence and investigate where these items came from.;
                           ENG=Find the latest occurrence and investigate where these items came from.];
                OptionCaptionML=[ENU=Origin -> Usage,Usage -> Origin;
                                 ENG=Origin -> Usage,Usage -> Origin];
                SourceExpr=TraceMethod }

    { 35  ;1   ;Field     ;
                ToolTipML=[ENU=These are the settings that were used to generate the trace result.;
                           ENG=These are the settings that were used to generate the trace result.];
                CaptionClass=FORMAT(TraceText);
                Editable=FALSE }

    { 1   ;1   ;Group     ;
                IndentationColumnName=DescriptionIndent;
                IndentationControls=Description;
                ShowAsTree=Yes;
                GroupType=Repeater }

    { 1000000015;2;Field  ;
                SourceExpr=Description }

    { 8   ;2   ;Field     ;
                SourceExpr="Entry Type";
                Visible=FALSE }

    { 1000000034;2;Field  ;
                SourceExpr="Serial No.";
                Editable=FALSE;
                Style=Strong;
                StyleExpr=SerialNoEmphasize }

    { 27  ;2   ;Field     ;
                SourceExpr="Lot No.";
                Editable=FALSE;
                Style=Strong;
                StyleExpr=LotNoEmphasize }

    { 1000000030;2;Field  ;
                SourceExpr="Item No.";
                Editable=FALSE;
                Style=Strong;
                StyleExpr=ItemNoEmphasize }

    { 32  ;2   ;Field     ;
                SourceExpr="Item Description";
                Editable=FALSE }

    { 2   ;2   ;Field     ;
                SourceExpr="Variant Code";
                Visible=FALSE }

    { 1000000032;2;Field  ;
                SourceExpr="Document No.";
                Visible=FALSE }

    { 1000000043;2;Field  ;
                SourceExpr="Posting Date";
                Visible=FALSE }

    { 1000000017;2;Field  ;
                SourceExpr="Source Type";
                Visible=FALSE }

    { 6   ;2   ;Field     ;
                SourceExpr="Source No.";
                Visible=FALSE;
                Editable=FALSE }

    { 1000000003;2;Field  ;
                SourceExpr="Source Name";
                Visible=FALSE;
                Editable=FALSE }

    { 23  ;2   ;Field     ;
                SourceExpr="Location Code";
                Editable=FALSE }

    { 1000000021;2;Field  ;
                SourceExpr=Quantity;
                OnDrillDown=VAR
                              ItemLedgerEntry@1000000000 : Record 32;
                            BEGIN
                              ItemLedgerEntry.RESET;
                              ItemLedgerEntry.SETRANGE("Entry No.","Item Ledger Entry No.");
                              PAGE.RUNMODAL(0,ItemLedgerEntry);
                            END;
                             }

    { 1000000019;2;Field  ;
                SourceExpr="Remaining Quantity" }

    { 1000000023;2;Field  ;
                Lookup=Yes;
                SourceExpr="Created by";
                Visible=FALSE }

    { 1000000025;2;Field  ;
                SourceExpr="Created on";
                Visible=FALSE }

    { 3   ;2   ;Field     ;
                SourceExpr="Already Traced" }

    { 9   ;2   ;Field     ;
                SourceExpr="Item Ledger Entry No.";
                Visible=FALSE }

    { 5   ;2   ;Field     ;
                SourceExpr="Parent Item Ledger Entry No.";
                Visible=FALSE }

  }
  CODE
  {
    VAR
      TempTrackEntry@1000 : TEMPORARY Record 6520;
      ItemTracingMgt@1017 : Codeunit 6520;
      TraceMethod@1004 : 'Origin->Usage,Usage->Origin';
      ShowComponents@1000000002 : 'No,Item-tracked Only,All';
      ActualExpansionStatus@1009 : 'Has Children,Expanded,No Children';
      SerialNoFilter@1000000009 : Code[1000];
      LotNoFilter@1006 : Code[1000];
      ItemNoFilter@1000000007 : Code[1000];
      VariantFilter@1001 : Code[1000];
      Text001@1002 : TextConst 'ENU=Item No. Filter is required.;ENG=Item No. Filter is required.';
      TraceText@1005 : Text[1000];
      Text002@1007 : TextConst 'ENU=Serial No.: %1, Lot No.: %2, Item: %3, Variant: %4, Trace Method: %5, Show Components: %6;ENG=Serial No.: %1, Lot No.: %2, Item: %3, Variant: %4, Trace Method: %5, Show Components: %6';
      PreviousExists@1010 : Boolean;
      NextExists@1012 : Boolean;
      Text003@1008 : TextConst 'ENU=Filters are too large to show.;ENG=Filters are too large to show.';
      Text004@1003 : TextConst 'ENU=Origin->Usage,Usage->Origin;ENG=Origin->Usage,Usage->Origin';
      Text005@1013 : TextConst 'ENU=No,Item-tracked Only,All;ENG=No,Item-tracked Only,All';
      DescriptionIndent@19057867 : Integer INDATASET;
      FunctionsEnable@19066687 : Boolean INDATASET;
      PrintEnable@19037407 : Boolean INDATASET;
      NavigateEnable@19005834 : Boolean INDATASET;
      SerialNoEmphasize@1011 : Text INDATASET;
      LotNoEmphasize@1014 : Text INDATASET;
      ItemNoEmphasize@1015 : Text INDATASET;

    PROCEDURE FindRecords@1000000001();
    BEGIN
      ItemTracingMgt.FindRecords(TempTrackEntry,Rec,
        SerialNoFilter,LotNoFilter,ItemNoFilter,VariantFilter,
        TraceMethod,ShowComponents);
      InitButtons;

      ItemTracingMgt.GetHistoryStatus(PreviousExists,NextExists);

      UpdateTraceText;

      ItemTracingMgt.ExpandAll(TempTrackEntry,Rec);
      CurrPage.UPDATE(FALSE)
    END;

    LOCAL PROCEDURE OppositeTraceFromLine@1();
    BEGIN
      ItemTracingMgt.InitSearchParm(Rec,SerialNoFilter,LotNoFilter,ItemNoFilter,VariantFilter);
      FindRecords;
    END;

    PROCEDURE InitButtons@7();
    BEGIN
      IF NOT TempTrackEntry.FINDFIRST THEN BEGIN
        FunctionsEnable := FALSE;
        PrintEnable := FALSE;
        NavigateEnable := FALSE;
      END ELSE BEGIN
        FunctionsEnable := TRUE;
        PrintEnable := TRUE;
        NavigateEnable := TRUE;
      END;
    END;

    PROCEDURE InitFilters@4(VAR ItemTrackingEntry@1000 : Record 6520);
    BEGIN
      SerialNoFilter := ItemTrackingEntry.GETFILTER("Serial No.");
      LotNoFilter := ItemTrackingEntry.GETFILTER("Lot No.");
      ItemNoFilter := ItemTrackingEntry.GETFILTER("Item No.");
      VariantFilter := ItemTrackingEntry.GETFILTER("Variant Code");
      TraceMethod := TraceMethod::"Usage->Origin";
      ShowComponents := ShowComponents::"Item-tracked Only";
    END;

    LOCAL PROCEDURE RecallHistory@2(Steps@1000 : Integer);
    BEGIN
      ItemTracingMgt.RecallHistory(Steps,TempTrackEntry,Rec,SerialNoFilter,
        LotNoFilter,ItemNoFilter,VariantFilter,TraceMethod,ShowComponents);
      UpdateTraceText;
      InitButtons;
      ItemTracingMgt.GetHistoryStatus(PreviousExists,NextExists);

      ItemTracingMgt.ExpandAll(TempTrackEntry,Rec);
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE UpdateTraceText@3();
    VAR
      LengthOfText@1001 : Integer;
      Overflow@1000 : Boolean;
    BEGIN
      LengthOfText := (STRLEN(Text002 + SerialNoFilter + LotNoFilter + ItemNoFilter + VariantFilter) +
                       STRLEN(FORMAT(TraceMethod)) + STRLEN(FORMAT(ShowComponents)) - 6); // 6 = number of positions in Text002

      Overflow := LengthOfText > 512;

      IF Overflow THEN
        TraceText := Text003
      ELSE
        TraceText := STRSUBSTNO(Text002,SerialNoFilter,LotNoFilter,ItemNoFilter,VariantFilter,
            SELECTSTR(TraceMethod + 1,Text004) ,SELECTSTR(ShowComponents + 1,Text005));
    END;

    LOCAL PROCEDURE DescriptionOnFormat@19023855();
    BEGIN
      DescriptionIndent := Level;
    END;

    LOCAL PROCEDURE LineFormat@6();
    BEGIN
      IF "Serial No." = SerialNoFilter THEN
        SerialNoEmphasize := 'Strong'
      ELSE
        SerialNoEmphasize := '';

      IF "Lot No." = LotNoFilter THEN
        LotNoEmphasize := 'Strong'
      ELSE
        LotNoEmphasize := '';

      IF "Item No." = ItemNoFilter THEN
        ItemNoEmphasize := 'Strong'
      ELSE
        ItemNoEmphasize := '';
    END;

    LOCAL PROCEDURE SetFocus@5(ItemLedgerEntryNo@1000 : Integer);
    BEGIN
      IF "Already Traced" THEN BEGIN
        TempTrackEntry.SETCURRENTKEY("Item Ledger Entry No.");
        TempTrackEntry.SETRANGE("Item Ledger Entry No.",ItemLedgerEntryNo);
        TempTrackEntry.FINDFIRST;
        CurrPage.SETRECORD(TempTrackEntry);
      END;
    END;

    BEGIN
    END.
  }
}

