OBJECT Table 9062703 Questionnaire Template Line
{
  OBJECT-PROPERTIES
  {
    Date=10/05/16;
    Time=12:00:00 PM;
    Version List=NA2016.15;
  }
  PROPERTIES
  {
    OnInsert=VAR
               SeqNo@1000000000 : Integer;
               MaxSeqNo@1000000001 : Integer;
               QuestTemplLineBuffer@1000000002 : TEMPORARY Record 9062703;
             BEGIN
               CheckOpen();

               QuestTemplateLine.RESET();
               QuestTemplateLine.SETRANGE("Questionnaire Template Code", "Questionnaire Template Code");
               MaxSeqNo := QuestTemplateLine.COUNT + 1;

               IF ("Line No." = 0) THEN BEGIN
                 QuestTemplateLine.RESET();
                 QuestTemplateLine.SETRANGE("Questionnaire Template Code", "Questionnaire Template Code");
                 IF (QuestTemplateLine.FINDLAST()) THEN
                   VALIDATE("Line No.",QuestTemplateLine."Line No." + 10000)
                 ELSE
                   VALIDATE("Line No.",10000);
               END;

               IF (Sequence <= 0) THEN BEGIN
                 QuestTemplateLine.RESET();
                 QuestTemplateLine.SETCURRENTKEY("Questionnaire Template Code", Sequence);
                 QuestTemplateLine.SETRANGE("Questionnaire Template Code", "Questionnaire Template Code");
                 IF (QuestTemplateLine.FINDLAST()) THEN
                   Sequence := QuestTemplateLine.Sequence + 1
                 ELSE
                   Sequence := 1;
               END;

               IF (Sequence > MaxSeqNo) THEN
                 Sequence := MaxSeqNo;

               SeqNo := Sequence;

               QuestTemplLineBuffer.RESET();
               QuestTemplLineBuffer.DELETEALL();
               QuestTemplateLine.RESET();
               QuestTemplateLine.SETCURRENTKEY("Questionnaire Template Code", Sequence);
               QuestTemplateLine.SETRANGE("Questionnaire Template Code", "Questionnaire Template Code");
               QuestTemplateLine.SETFILTER(Sequence, '>=%1', Sequence);
               IF (QuestTemplateLine.FINDSET()) THEN BEGIN
                 REPEAT
                   SeqNo += 1;
                   QuestTemplLineBuffer.TRANSFERFIELDS(QuestTemplateLine);
                   QuestTemplLineBuffer.Sequence := SeqNo;
                   QuestTemplLineBuffer.INSERT();
                 UNTIL (QuestTemplateLine.NEXT() = 0);
               END;
               QuestTemplLineBuffer.RESET();
               IF (QuestTemplLineBuffer.FINDSET()) THEN BEGIN
                 REPEAT
                   QuestTemplateLine.GET(QuestTemplLineBuffer."Questionnaire Template Code",
                     QuestTemplLineBuffer."Line No.");
                   QuestTemplateLine.Sequence := QuestTemplLineBuffer.Sequence;
                   QuestTemplateLine.MODIFY();
                 UNTIL (QuestTemplLineBuffer.NEXT() = 0);
               END;

               IF "Line Type" <> "Line Type"::Question THEN Required := FALSE;
               //UpdateQuestionNo();

               RenumberLines(TRUE, FALSE);
             END;

    OnModify=BEGIN
               CheckOpen();
             END;

    OnDelete=VAR
               QuestTemplateLineLogicCriteria@1000000000 : Record 9062707;
               SeqNo@1000000001 : Integer;
               TextCommentExtension@1000000002 : Record 9062238;
             BEGIN
               CheckOpen();

               QuestTemplateLineLogicCriteria.RESET();
               QuestTemplateLineLogicCriteria.SETRANGE("Questionnaire Template Code","Questionnaire Template Code");
               QuestTemplateLineLogicCriteria.SETRANGE("Source Entry No.","Line No.");
               QuestTemplateLineLogicCriteria.SETRANGE("Line Type", QuestTemplateLineLogicCriteria."Line Type"::"Before Question");
               QuestTemplateLineLogicCriteria.DELETEALL(TRUE);

               QuestTemplateLineLogicCriteria.RESET();
               QuestTemplateLineLogicCriteria.SETRANGE("Questionnaire Template Code","Questionnaire Template Code");
               QuestTemplateLineLogicCriteria.SETRANGE("Related Line No.","Line No.");
               QuestTemplateLineLogicCriteria.DELETEALL(TRUE);

               TextCommentExtension.RESET();
               TextCommentExtension.SETRANGE("Table No.",DATABASE::"Questionnaire Template Line");
               TextCommentExtension.SETRANGE(PositionText,GETPOSITION);
               TextCommentExtension.DELETEALL(TRUE);

               SeqNo := Sequence;
               QuestTemplateLine.RESET();
               QuestTemplateLine.SETCURRENTKEY("Questionnaire Template Code", Sequence);
               QuestTemplateLine.SETRANGE("Questionnaire Template Code", "Questionnaire Template Code");
               QuestTemplateLine.SETFILTER(Sequence, '>%1', Sequence);
               IF (QuestTemplateLine.FINDSET(TRUE, TRUE)) THEN BEGIN
                 REPEAT
                   QuestTemplateLine.Sequence := SeqNo;
                   QuestTemplateLine.MODIFY();
                   SeqNo += 1;
                 UNTIL (QuestTemplateLine.NEXT() = 0);
               END;

               CriteriaMgt.DeleteCriteria("Answer Criteria Id");
               CriteriaMgt.DeleteCriteria("Source Criteria Id");

               RenumberLines(FALSE, TRUE);
             END;

    OnRename=BEGIN
               CheckOpen();

               VALIDATE("Line No.");
             END;

    CaptionML=[ENU=Questionnaire Template Line;
               ENG=Questionnaire Template Line];
    LookupPageID=Page9063019;
    DrillDownPageID=Page9063019;
  }
  FIELDS
  {
    { 1   ;   ;Questionnaire Template Code;Code20 ;TableRelation="Questionnaire Template".Code;
                                                   CaptionML=[ENU=Questionnaire Template Code;
                                                              ENG=Questionnaire Template Code] }
    { 3   ;   ;Line No.            ;Integer       ;OnValidate=BEGIN
                                                                VALIDATE("Line No. (Text)",FORMAT("Line No."));
                                                              END;

                                                   CaptionML=[ENU=Line No.;
                                                              ENG=Line No.] }
    { 4   ;   ;Line No. (Text)     ;Text10        ;CaptionML=[ENU=Line No. (Text);
                                                              ENG=Line No. (Text)];
                                                   Editable=No }
    { 8   ;   ;Sequence            ;Integer       ;OnValidate=BEGIN
                                                                IF (Sequence <> xRec.Sequence) THEN BEGIN
                                                                  UpdateSequence(xRec.Sequence, Sequence);
                                                                  UpdateLogicCriteria(FIELDNO(Sequence));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Sequence;
                                                              ENG=Sequence] }
    { 9   ;   ;Question Name       ;Text50        ;OnValidate=BEGIN
                                                                IF ("Question Name" <> '') THEN BEGIN
                                                                  QuestTemplateLine.RESET();
                                                                  QuestTemplateLine.SETCURRENTKEY("Questionnaire Template Code", "Question Name", "Line No.");
                                                                  QuestTemplateLine.SETRANGE("Questionnaire Template Code", "Questionnaire Template Code");
                                                                  QuestTemplateLine.SETRANGE("Question Name", "Question Name");
                                                                  QuestTemplateLine.SETFILTER("Line No.", '<>%1', "Line No.");
                                                                  IF (QuestTemplateLine.FINDFIRST()) THEN
                                                                    ERROR(errUniqueName, "Question Name", QuestTemplateLine."Question No.");
                                                                END;

                                                                UpdateDescription();
                                                              END;

                                                   CaptionML=[ENU=Question Name;
                                                              ENG=Question Name] }
    { 10  ;   ;Line Type           ;Option        ;OnValidate=BEGIN
                                                                CASE ("Line Type") OF
                                                                  "Line Type"::Question:
                                                                    Indent := 2;
                                                                  "Line Type"::"Group Header":
                                                                    Indent := 1;
                                                                  "Line Type"::Block:
                                                                    Indent := 0;
                                                                END;

                                                                IF "Line Type" <> "Line Type"::Question THEN Required := FALSE;

                                                                IF (xRec."Line Type" <> "Line Type") THEN
                                                                  RenumberLines(FALSE, FALSE);
                                                              END;

                                                   CaptionML=[ENU=Line Type;
                                                              ENG=Line Type];
                                                   OptionCaptionML=[ENU=Question,Group Header,Block;
                                                                    ENG=Question,Group Header,Block];
                                                   OptionString=Question,Group Header,Block }
    { 11  ;   ;Group No.           ;Integer       ;CaptionML=[ENU=Group No.;
                                                              ENG=Group No.] }
    { 12  ;   ;Page No.            ;Integer       ;CaptionML=[ENU=Page No.;
                                                              ENG=Page No.] }
    { 13  ;   ;Question No.        ;Text30        ;OnValidate=BEGIN
                                                                UpdateDescription();
                                                              END;

                                                   CaptionML=[ENU=Question No.;
                                                              ENG=Question No.] }
    { 14  ;   ;Question Description;Text80        ;CaptionML=[ENU=Question Description;
                                                              ENG=Question Description] }
    { 15  ;   ;Indent              ;Integer       ;OnValidate=BEGIN
                                                                RenumberLines(FALSE, FALSE);
                                                              END;

                                                   CaptionML=[ENU=Indent;
                                                              ENG=Indent] }
    { 16  ;   ;New Page            ;Boolean       ;OnValidate=BEGIN
                                                                IF "New Page" <> xRec."New Page" THEN
                                                                  RenumberLines(FALSE, FALSE);
                                                              END;

                                                   CaptionML=[ENU=New Page;
                                                              ENG=New Page] }
    { 17  ;   ;Required            ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Required;
                                                              ENG=Required] }
    { 18  ;   ;Group Sequence      ;Integer       ;CaptionML=[ENU=Group Sequence;
                                                              ENG=Group Sequence] }
    { 19  ;   ;Hidden              ;Boolean       ;CaptionML=[ENU=Hidden;
                                                              ENG=Hidden] }
    { 21  ;   ;Before Question Actions;Integer    ;FieldClass=FlowField;
                                                   CalcFormula=Count("Quest. Template Logic Criteria" WHERE (Questionnaire Template Code=FIELD(Questionnaire Template Code),
                                                                                                             Source Entry No.=FIELD(Line No.),
                                                                                                             Line Type=CONST(Before Question)));
                                                   CaptionML=[ENU=Before Question Actions;
                                                              ENG=Before Question Actions];
                                                   BlankZero=Yes;
                                                   Description=NA2015.9;
                                                   Editable=No }
    { 22  ;   ;After Question Actions;Integer     ;FieldClass=FlowField;
                                                   CalcFormula=Count("Quest. Template Logic Criteria" WHERE (Questionnaire Template Code=FIELD(Questionnaire Template Code),
                                                                                                             Source Entry No.=FIELD(Line No.),
                                                                                                             Line Type=CONST(After Question)));
                                                   CaptionML=[ENU=After Question Actions;
                                                              ENG=After Question Actions];
                                                   BlankZero=Yes;
                                                   Description=NA2015.9;
                                                   Editable=No }
    { 23  ;   ;Question Block No.  ;Integer       ;CaptionML=[ENU=Question Block No.;
                                                              ENG=Question Block No.];
                                                   Description=NA2015.9 }
    { 28  ;   ;Show Drop Down      ;Boolean       ;CaptionML=[ENU=Show Drop Down;
                                                              ENG=Show Drop Down];
                                                   Description=NA2015.9 }
    { 100 ;   ;Question Text       ;Text250       ;CaptionML=[ENU=Question Text;
                                                              ENG=Question Text];
                                                   Description=--- Question Fields --- }
    { 101 ;   ;Question Help Text  ;Text250       ;CaptionML=[ENU=Question Help Text;
                                                              ENG=Question Help Text] }
    { 102 ;   ;Question Help URL   ;Text250       ;OnValidate=BEGIN
                                                                IF STRLEN("Question Help URL") <> 0 THEN BEGIN
                                                                  IF STRPOS(UPPERCASE("Question Help URL"),UPPERCASE(tHttp)) <> 1 THEN
                                                                    "Question Help URL" := tHttpFull + "Question Help URL";
                                                                END;
                                                              END;

                                                   ExtendedDatatype=URL;
                                                   CaptionML=[ENU=Question Help URL;
                                                              ENG=Question Help URL] }
    { 103 ;   ;Question Help URL Name;Text100     ;CaptionML=[ENU=Question Help URL Name;
                                                              ENG=Question Help URL Name] }
    { 200 ;   ;Answer Type         ;Option        ;InitValue=Text;
                                                   OnValidate=BEGIN
                                                                UpdateLogicCriteria(FIELDNO("Answer Type"));
                                                              END;

                                                   CaptionML=[ENU=Answer Type;
                                                              ENG=Answer Type];
                                                   OptionCaptionML=[ENU=TableFilter,RecordID,OemText,Date,Time,DateFormula,Decimal,Text,Code,Binary,BLOB,Boolean,Integer,OemCode,Option,BigInteger,Duration,GUID,DateTime;
                                                                    ENG=TableFilter,RecordID,OemText,Date,Time,DateFormula,Decimal,Text,Code,Binary,BLOB,Boolean,Integer,OemCode,Option,BigInteger,Duration,GUID,DateTime];
                                                   OptionString=TableFilter,RecordID,OemText,Date,Time,DateFormula,Decimal,Text,Code,Binary,BLOB,Boolean,Integer,OemCode,Option,BigInteger,Duration,GUID,DateTime;
                                                   ValuesAllowed=[Date;Time;DateFormula;Decimal;Text;Code;Boolean;Integer;Option;BigInteger;DateTime];
                                                   Description=--- Answer Definition Fields --- }
    { 201 ;   ;Answer Table Id     ;Integer       ;TableRelation=AllObj."Object ID" WHERE (Object Type=CONST(Table));
                                                   OnValidate=BEGIN
                                                                IF ("Answer Table Id" <> xRec."Answer Table Id") THEN BEGIN
                                                                  VALIDATE("Answer Field Id", 0);
                                                                  VALIDATE("Answer Alt. Field Id", 0);
                                                                  "Answer Table Name" := ObjectFieldToolkit.GetTableName("Answer Table Id");
                                                                  UpdateLogicCriteria(FIELDNO("Answer Table Id"));
                                                                  CriteriaMgt.DeleteCriteria("Answer Criteria Id");
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF (ObjectFieldToolkit.TableLookup("Answer Table Id")) THEN
                                                                VALIDATE("Answer Table Id");
                                                            END;

                                                   CaptionML=[ENU=Answer Table Id;
                                                              ENG=Answer Table Id] }
    { 202 ;   ;Answer Field Id     ;Integer       ;TableRelation=Field.No. WHERE (TableNo=FIELD(Answer Table Id));
                                                   OnValidate=VAR
                                                                ValueProcessing@1000000000 : Codeunit 9062475;
                                                              BEGIN
                                                                IF ("Answer Field Id" <> xRec."Answer Field Id") THEN BEGIN
                                                                  "Answer Field Name" := ObjectFieldToolkit.GetFieldName("Answer Table Id","Answer Field Id");
                                                                  UpdateLogicCriteria(FIELDNO("Answer Field Id"));
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF (ObjectFieldToolkit.FieldLookup("Answer Table Id", "Answer Field Id")) THEN
                                                                VALIDATE("Answer Field Id");
                                                            END;

                                                   CaptionML=[ENU=Answer Field Id;
                                                              ENG=Answer Field Id] }
    { 203 ;   ;Answer Alt. Field Id;Integer       ;TableRelation=Field.No. WHERE (TableNo=FIELD(Answer Table Id));
                                                   OnValidate=BEGIN
                                                                "Answer Alt. Field Name" := ObjectFieldToolkit.GetFieldName("Answer Table Id","Answer Alt. Field Id");
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF (ObjectFieldToolkit.FieldLookup("Answer Table Id","Answer Alt. Field Id")) THEN
                                                                VALIDATE("Answer Alt. Field Id");
                                                            END;

                                                   CaptionML=[ENU=Answer Alt. Field Id;
                                                              ENG=Answer Alt. Field Id] }
    { 204 ;   ;Answer Option String;Text250       ;CaptionML=[ENU=Answer Option String;
                                                              ENG=Answer Option String] }
    { 205 ;   ;Answer Table Name   ;Text50        ;OnValidate=BEGIN
                                                                ObjectFieldToolkit.ValidateTableName("Answer Table Id","Answer Table Name",FALSE);
                                                                VALIDATE("Answer Table Id");
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF (ObjectFieldToolkit.TableLookup("Answer Table Id")) THEN
                                                                VALIDATE("Answer Table Id");
                                                            END;

                                                   CaptionML=[ENU=Answer Table Name;
                                                              ENG=Answer Table Name] }
    { 206 ;   ;Answer Field Name   ;Text50        ;OnValidate=BEGIN
                                                                ObjectFieldToolkit.ValidateFieldName("Answer Table Id","Answer Field Id","Answer Field Name",FALSE);
                                                                VALIDATE("Answer Field Id");
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF (ObjectFieldToolkit.FieldLookup("Answer Table Id","Answer Field Id")) THEN
                                                                VALIDATE("Answer Field Id");
                                                            END;

                                                   CaptionML=[ENU=Answer Field Name;
                                                              ENG=Answer Field Name] }
    { 207 ;   ;Answer Alt. Field Name;Text50      ;OnValidate=BEGIN
                                                                ObjectFieldToolkit.ValidateFieldName("Answer Table Id","Answer Alt. Field Id","Answer Alt. Field Name",FALSE);
                                                                VALIDATE("Answer Alt. Field Id");
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF (ObjectFieldToolkit.FieldLookup("Answer Table Id","Answer Alt. Field Id")) THEN
                                                                VALIDATE("Answer Alt. Field Id");
                                                            END;

                                                   CaptionML=[ENU=Answer Alt. Field Name;
                                                              ENG=Answer Alt. Field Name] }
    { 208 ;   ;Answer Criteria Id  ;Integer       ;TableRelation=Criteria;
                                                   CaptionML=[ENU=Answer Criteria Id;
                                                              ENG=Answer Criteria Id];
                                                   Description=NA2015.9 }
    { 209 ;   ;Answer Criteria View;Text250       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Criteria.View WHERE (ID=FIELD(Answer Criteria Id)));
                                                   OnLookup=BEGIN
                                                              EditAnswerCriteria();
                                                            END;

                                                   CaptionML=[ENU=Answer Criteria View;
                                                              ENG=Answer Criteria View];
                                                   Description=NA2015.9;
                                                   Editable=No }
    { 220 ;   ;Source Table Id     ;Integer       ;OnValidate=BEGIN
                                                                IF ("Source Table Id" <> xRec."Source Table Id") THEN BEGIN
                                                                  CriteriaMgt.DeleteCriteria("Source Criteria Id");
                                                                  "Source Field Type" := "Source Field Type"::" ";
                                                                  VALIDATE("Source Field Id", 0);
                                                                END;
                                                                "Source Table Name" := ObjectFieldToolkit.GetTableName("Source Table Id");
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF (ObjectFieldToolkit.TableLookup("Source Table Id")) THEN
                                                                VALIDATE("Source Table Id");
                                                            END;

                                                   CaptionML=[ENU=Source Table Id;
                                                              ENG=Source Table Id];
                                                   Description=NA2016.14 }
    { 221 ;   ;Source Field Type   ;Option        ;OnValidate=BEGIN
                                                                IF ("Source Field Type" <> xRec."Source Field Type") THEN
                                                                  VALIDATE("Source Field Id", 0);
                                                              END;

                                                   CaptionML=[ENU=Source Field Type;
                                                              ENG=Source Field Type];
                                                   OptionCaptionML=[ENU=" ,Field,Enhanced Field";
                                                                    ENG=" ,Field,Enhanced Field"];
                                                   OptionString=[ ,Field,Enhanced Field];
                                                   Description=NA2016.14 }
    { 222 ;   ;Source Field Id     ;Integer       ;OnValidate=BEGIN
                                                                "Source Field Name" := ObjectFieldToolkit.GetFieldNameAdv("Source Table Id", "Source Field Type", "Source Field Id");
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF (ObjectFieldToolkit.FieldLookupAdv("Source Table Id", "Source Field Type", "Source Field Id")) THEN
                                                                VALIDATE("Source Field Id");
                                                            END;

                                                   CaptionML=[ENU=Source Field Id;
                                                              ENG=Source Field Id];
                                                   Description=NA2016.14 }
    { 223 ;   ;Source Table Name   ;Text50        ;OnValidate=BEGIN
                                                                ObjectFieldToolkit.ValidateTableName("Source Table Id", "Source Table Name", FALSE);
                                                                VALIDATE("Source Table Id");
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF (ObjectFieldToolkit.TableLookup("Source Table Id")) THEN
                                                                VALIDATE("Source Table Id");
                                                            END;

                                                   CaptionML=[ENU=Source Table Name;
                                                              ENG=Source Table Name];
                                                   Description=NA2016.14 }
    { 224 ;   ;Source Field Name   ;Text50        ;OnValidate=BEGIN
                                                                ObjectFieldToolkit.ValidateFieldNameAdv("Source Table Id", "Source Field Type", "Source Field Id", "Source Field Name");
                                                                VALIDATE("Source Field Id");
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF (ObjectFieldToolkit.FieldLookupAdv("Source Table Id", "Source Field Type", "Source Field Id")) THEN
                                                                VALIDATE("Source Field Id");
                                                            END;

                                                   CaptionML=[ENU=Source Field Name;
                                                              ENG=Source Field Name];
                                                   Description=NA2016.14 }
    { 225 ;   ;Source Criteria Id  ;Integer       ;TableRelation=Criteria.ID;
                                                   CaptionML=[ENU=Source Criteria Id;
                                                              ENG=Source Criteria Id];
                                                   Description=NA2016.14 }
    { 226 ;   ;Source Criteria View;Text250       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Criteria.View WHERE (ID=FIELD(Source Criteria Id)));
                                                   OnLookup=BEGIN
                                                              EditSourceCriteria();
                                                            END;

                                                   CaptionML=[ENU=Source Criteria View;
                                                              ENG=Source Criteria View];
                                                   Description=NA2016.14;
                                                   Editable=No }
    { 227 ;   ;Source Action       ;Option        ;CaptionML=[ENU=Source Action;
                                                              ENG=Source Action];
                                                   OptionCaptionML=[ENU=Load and Save,Load,Save;
                                                                    ENG=Load and Save,Load,Save];
                                                   OptionString=Load and Save,Load,Save;
                                                   Description=NA2016.14 }
  }
  KEYS
  {
    {    ;Questionnaire Template Code,Line No.    ;Clustered=Yes }
    {    ;Questionnaire Template Code,Sequence     }
    {    ;Questionnaire Template Code,Question Name,Line No. }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      QuestTemplateLine@1000000000 : Record 9062703;
      errUniqueName@1000000001 : TextConst 'ENU=Question name must be unique;ENG=Question name must be unique';
      QuestCriteriaLine@1000000002 : Record 9062707;
      ObjectFieldToolkit@1000000003 : Codeunit 9062343;
      tHttp@1000000004 : TextConst 'ENU=http;ENG=http';
      tHttpFull@1000000005 : TextConst 'ENU=http://;ENG=http://';
      CriteriaMgt@1000000006 : Codeunit 9062462;

    LOCAL PROCEDURE UpdateSequence@1000000006(PrevSequence@1000000000 : Integer;NewSequence@1000000001 : Integer);
    VAR
      QuestMgt@1000000004 : Codeunit 9062540;
      Diff@1000000002 : Integer;
    BEGIN
      QuestTemplateLine.RESET();
      QuestTemplateLine.SETRANGE("Questionnaire Template Code", "Questionnaire Template Code");
      QuestTemplateLine.SETFILTER("Line No.", '<>%1', "Line No.");

      IF (PrevSequence < NewSequence) THEN BEGIN
        Diff := -1;
        QuestTemplateLine.SETRANGE(Sequence, PrevSequence + 1, NewSequence);
      END ELSE BEGIN
        Diff := 1;
        QuestTemplateLine.SETRANGE(Sequence, NewSequence, PrevSequence - 1);
      END;

      IF (QuestTemplateLine.FINDSET(TRUE, TRUE)) THEN BEGIN
        REPEAT
          //update sequence
          QuestTemplateLine.Sequence := QuestTemplateLine.Sequence + Diff;
          QuestTemplateLine.MODIFY();
          //QuestTemplateLine.UpdateCriteria(FIELDNO(Sequence));
        UNTIL (QuestTemplateLine.NEXT() = 0);
      END;

      //renumber lines
      {
      IF (NewSequence > PrevSequence) THEN BEGIN
        QuestTemplateLine.RESET();
        QuestTemplateLine.SETCURRENTKEY("Questionnaire Template Code", Sequence);
        QuestTemplateLine.SETRANGE("Questionnaire Template Code", "Questionnaire Template Code");
        QuestTemplateLine.SETRANGE(Sequence, PrevSequence, NewSequence - 1);
        QuestTemplateLine.SETFILTER("Line No.", '<>%1', "Line No.");
        IF (QuestTemplateLine.FINDFIRST()) THEN
          QuestMgt.RenumberQuestLinesRange(QuestTemplateLine, "Line No.", TRUE);
      END;
      }
      RenumberLines(FALSE, FALSE);
    END;

    PROCEDURE UpdateDescription@1000000004();
    BEGIN
      IF ("Question No." <> '') AND ("Question Name" <> '') THEN
        "Question Description" := STRSUBSTNO('%1 - %2', "Question No.", "Question Name")
      ELSE IF("Question No." <> '') THEN
        "Question Description" := "Question No."
      ELSE
        "Question Description" := "Question Name";
      UpdateLogicCriteria(FIELDNO("Question Description"));
      UpdateActions(FIELDNO("Question Description"));
    END;

    LOCAL PROCEDURE InitFromPrevRecord@1000000005(VAR PrevRecord@1000000000 : Record 9062703);
    BEGIN
    END;

    PROCEDURE MoveUp@1000000007();
    BEGIN
      QuestTemplateLine.RESET();
      QuestTemplateLine.SETCURRENTKEY("Questionnaire Template Code", "Questionnaire Template Code");
      QuestTemplateLine.SETFILTER(Sequence, '<%1', Sequence);
      IF (NOT(QuestTemplateLine.ISEMPTY)) THEN
        VALIDATE(Sequence, Sequence - 1);
      MODIFY();
    END;

    PROCEDURE MoveDown@1000000008();
    BEGIN
      QuestTemplateLine.RESET();
      QuestTemplateLine.SETCURRENTKEY("Questionnaire Template Code", "Questionnaire Template Code");
      QuestTemplateLine.SETFILTER(Sequence, '>%1', Sequence);
      IF (NOT(QuestTemplateLine.ISEMPTY)) THEN
        VALIDATE(Sequence, Sequence + 1);
      MODIFY();
    END;

    PROCEDURE UpdateLogicCriteria@1000000009(SourceFieldNo@1000000000 : Integer);
    BEGIN
      IF (SourceFieldNo IN [FIELDNO(Sequence), 0]) THEN BEGIN
        QuestCriteriaLine.RESET();
        QuestCriteriaLine.SETRANGE("Questionnaire Template Code", "Questionnaire Template Code");
        QuestCriteriaLine.SETRANGE("Source Entry No.", "Line No.");
        QuestCriteriaLine.SETFILTER("Line Type", '%1|%2', QuestCriteriaLine."Line Type"::"Before Question",
          QuestCriteriaLine."Line Type"::"After Question");
        QuestCriteriaLine.MODIFYALL("Questionnaire Line Sequence", Sequence);
      END;

      IF (SourceFieldNo IN [FIELDNO("Answer Type"), FIELDNO("Answer Option String"), FIELDNO("Answer Table Id"),
        FIELDNO("Answer Field Id"), 0])
      THEN BEGIN
        QuestCriteriaLine.RESET();
        QuestCriteriaLine.SETRANGE("Questionnaire Template Code", "Questionnaire Template Code");
        QuestCriteriaLine.SETRANGE("Source Entry No.", "Line No.");
        QuestCriteriaLine.SETRANGE("Line Type", QuestCriteriaLine."Line Type"::"After Question");
        IF (QuestCriteriaLine.FINDSET(TRUE)) THEN BEGIN
          REPEAT
            QuestCriteriaLine.SetValQuestLine(Rec);
            QuestCriteriaLine.MODIFY();
          UNTIL (QuestCriteriaLine.NEXT() = 0);
        END;

        QuestCriteriaLine.RESET();
        QuestCriteriaLine.SETCURRENTKEY("Questionnaire Template Code", "Line Type", "Related Line No.");
        QuestCriteriaLine.SETRANGE("Questionnaire Template Code", "Questionnaire Template Code");
        QuestCriteriaLine.SETRANGE("Line Type", QuestCriteriaLine."Line Type"::"Before Question");
        QuestCriteriaLine.SETRANGE("Related Line No.", "Line No.");
        IF (QuestCriteriaLine.FINDSET(TRUE)) THEN BEGIN
          REPEAT
            QuestCriteriaLine.SetValQuestLine(Rec);
            QuestCriteriaLine.MODIFY();
          UNTIL (QuestCriteriaLine.NEXT() = 0);
        END;
      END;

      IF (SourceFieldNo IN [FIELDNO("Question Description"), 0]) THEN BEGIN
        QuestCriteriaLine.RESET();
        QuestCriteriaLine.SETCURRENTKEY("Questionnaire Template Code", "Line Type", "Related Line No.");
        QuestCriteriaLine.SETRANGE("Questionnaire Template Code", "Questionnaire Template Code");
        QuestCriteriaLine.SETRANGE("Related Line No.", "Line No.");
        QuestCriteriaLine.MODIFYALL("Related Line Description", "Question Description");
      END;
    END;

    PROCEDURE UpdateActions@1000000003(SourceFieldNo@1000000000 : Integer);
    VAR
      QuestTemplActionLine@1000000001 : Record 9062723;
    BEGIN
      IF (SourceFieldNo IN [FIELDNO("Question Description"), 0]) THEN BEGIN
        QuestTemplActionLine.RESET();
        QuestTemplActionLine.SETRANGE("Questionnaire Template Code", "Questionnaire Template Code");
        QuestTemplActionLine.SETFILTER("Action Type", '%1|%2', QuestTemplActionLine."Action Type"::"Set Field",
          QuestTemplActionLine."Action Type"::"Set Filter");
        QuestTemplActionLine.SETRANGE("Value Calculation", QuestTemplActionLine."Value Calculation"::Answer);
        QuestTemplActionLine.SETRANGE("Quest. Template Line No.", "Line No.");
        QuestTemplActionLine.MODIFYALL("Text Value", "Question Description");
      END;
    END;

    LOCAL PROCEDURE RenumberLines@1000000000(NewLine@1000000001 : Boolean;Deleted@1000000002 : Boolean);
    VAR
      QuestMgt@1000000000 : Codeunit 9062540;
    BEGIN
      QuestMgt.RenumberQuestLinesRange(Rec, "Line No.", FALSE, NewLine, Deleted);
    END;

    LOCAL PROCEDURE CheckOpen@1000000002();
    VAR
      QuestTemplHeader@1000000000 : Record 9062702;
    BEGIN
      QuestTemplHeader.GET("Questionnaire Template Code");
      QuestTemplHeader.CheckOpen();
    END;

    LOCAL PROCEDURE CreateAnswerCriteria@1000000001();
    VAR
      Criteria@1000000000 : Record 9062626;
      QuestTemplateLine@1000000001 : Record 9062703;
      QuestLine@1000000002 : Record 9062705;
    BEGIN
      IF ("Answer Table Id" = 0) THEN
        EXIT;

      IF ("Answer Criteria Id" <> 0) THEN
        CriteriaMgt.DeleteCriteria("Answer Criteria Id");

      "Answer Criteria Id" := CriteriaMgt.CreateCriteriaAttached(DATABASE::"Questionnaire Template Line",
        GETPOSITION(FALSE), FIELDNO("Answer Criteria Id"), TRUE);

      Criteria.GET("Answer Criteria Id");
      Criteria.VALIDATE("Table ID", "Answer Table Id");

      QuestTemplateLine.RESET();
      QuestTemplateLine.SETRANGE("Questionnaire Template Code", "Questionnaire Template Code");
      QuestTemplateLine.SETRANGE(Sequence, 0, Sequence-1);

      Criteria.VALIDATE("Filter Source Table Id", DATABASE::"Questionnaire Template Line");
      Criteria.VALIDATE("Filter Source Field Id", QuestLine.FIELDNO("Text Input"));
      Criteria.VALIDATE("Filter Source Caption Field Id", QuestTemplateLine.FIELDNO("Question Description"));
      Criteria.VALIDATE("Filter Source Record Position", QuestTemplateLine.GETVIEW(FALSE));

      Criteria."Field Filter Enabled" := FALSE;
      Criteria."Record Filter Enabled" := TRUE;

      Criteria.MODIFY(TRUE);
      MODIFY();
      COMMIT;
    END;

    PROCEDURE EditAnswerCriteria@1000000010();
    VAR
      Criteria@1000000000 : Record 9062626;
      CriteriaField@1000000001 : Record 9062627;
    BEGIN
      IF ("Answer Table Id" = 0) THEN
        EXIT;
      IF ("Answer Criteria Id" = 0) THEN
        CreateAnswerCriteria();
      CriteriaMgt.EditCriteriaAttached("Answer Criteria Id", "Answer Table Id",
        DATABASE::"Questionnaire Template Line", GETPOSITION(FALSE), FIELDNO("Answer Criteria Id"), TRUE);
      MODIFY();
    END;

    PROCEDURE EditSourceCriteria@1000000014();
    BEGIN
      CriteriaMgt.EditCriteriaAttached("Source Criteria Id", "Source Table Id",
        DATABASE::"Questionnaire Template Line", GETPOSITION(FALSE), FIELDNO("Source Criteria Id"), TRUE);
      MODIFY();
      CALCFIELDS("Source Criteria View");
    END;

    BEGIN
    {
      //DOC NA2015.7  AZ 05/06/2015 - Created
      //DOC NA2015.9  AZ 05/08/2015 - Questionnaire actions, criteria changes and bugfixes
      //DOC NA2015.9  AZ 18/08/2015 - Question groups and loops
      //DOC NA2015.10 AZ 09/09/2015 - Bugfixes
      //DOC NA2016.15 AZ 10/03/2016 - Source fields added
      //DOC NA2016.15 JH 06/05/2016 - CfMD amendments
    }
    END.
  }
}

