OBJECT Page 492 Item Availability by Location
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00,NAVGB9.00;
  }
  PROPERTIES
  {
    Editable=Yes;
    CaptionML=[ENU=Item Availability by Location;
               ENG=Item Availability by Location];
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    LinksAllowed=No;
    SourceTable=Table27;
    DataCaptionFields=No.,Description;
    PageType=ListPlus;
    OnOpenPage=BEGIN
                 PeriodFormMgt.SetCalendarSource(CalendarSource);
                 FindPeriod('');
               END;

    OnClosePage=VAR
                  Location@1000 : Record 14;
                BEGIN
                  CurrPage.ItemAvailLocLines.PAGE.GETRECORD(Location);
                  LastLocation := Location.Code;
                END;

    OnAfterGetRecord=BEGIN
                       PeriodFormMgt.SetCalendarSource(CalendarSource);
                       SETRANGE("No.");
                       SETRANGE("Drop Shipment Filter",FALSE);
                       FindPeriod('');
                       UpdateSubForm;
                     END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 10      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Item;
                                 ENG=&Item];
                      Image=Item }
      { 11      ;2   ;ActionGroup;
                      CaptionML=[ENU=&Item Availability by;
                                 ENG=&Item Availability by];
                      Image=ItemAvailability }
      { 3       ;3   ;Action    ;
                      CaptionML=[ENU=Event;
                                 ENG=Event];
                      Image=Event;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromItem(Rec,ItemAvailFormsMgt.ByEvent);
                               END;
                                }
      { 14      ;3   ;Action    ;
                      CaptionML=[ENU=Period;
                                 ENG=Period];
                      RunObject=Page 157;
                      RunPageLink=No.=FIELD(No.),
                                  Global Dimension 1 Filter=FIELD(Global Dimension 1 Filter),
                                  Global Dimension 2 Filter=FIELD(Global Dimension 2 Filter),
                                  Location Filter=FIELD(Location Filter),
                                  Drop Shipment Filter=FIELD(Drop Shipment Filter),
                                  Variant Filter=FIELD(Variant Filter);
                      Image=Period }
      { 15      ;3   ;Action    ;
                      CaptionML=[ENU=Variant;
                                 ENG=Variant];
                      RunObject=Page 5414;
                      RunPageLink=No.=FIELD(No.),
                                  Global Dimension 1 Filter=FIELD(Global Dimension 1 Filter),
                                  Global Dimension 2 Filter=FIELD(Global Dimension 2 Filter),
                                  Location Filter=FIELD(Location Filter),
                                  Drop Shipment Filter=FIELD(Drop Shipment Filter),
                                  Variant Filter=FIELD(Variant Filter);
                      Image=ItemVariant }
      { 16      ;3   ;Action    ;
                      CaptionML=[ENU=Location;
                                 ENG=Location];
                      RunObject=Page 492;
                      RunPageLink=No.=FIELD(No.),
                                  Global Dimension 1 Filter=FIELD(Global Dimension 1 Filter),
                                  Global Dimension 2 Filter=FIELD(Global Dimension 2 Filter),
                                  Location Filter=FIELD(Location Filter),
                                  Drop Shipment Filter=FIELD(Drop Shipment Filter),
                                  Variant Filter=FIELD(Variant Filter);
                      Image=Warehouse }
      { 4       ;3   ;Action    ;
                      CaptionML=[ENU=BOM Level;
                                 ENG=BOM Level];
                      Image=BOMLevel;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromItem(Rec,ItemAvailFormsMgt.ByBOM);
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 27      ;1   ;Action    ;
                      CaptionML=[ENU=Previous Period;
                                 ENG=Previous Period];
                      ToolTipML=[ENU=Previous Period;
                                 ENG=Previous Period];
                      Promoted=Yes;
                      Image=PreviousRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 FindPeriod('<=');
                                 UpdateSubForm;
                               END;
                                }
      { 26      ;1   ;Action    ;
                      CaptionML=[ENU=Next Period;
                                 ENG=Next Period];
                      ToolTipML=[ENU=Next Period;
                                 ENG=Next Period];
                      Promoted=Yes;
                      Image=NextRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 FindPeriod('>=');
                                 UpdateSubForm;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                CaptionML=[ENU=Options;
                           ENG=Options] }

    { 33  ;2   ;Field     ;
                CaptionML=[ENU=View by;
                           ENG=View by];
                ToolTipML=[ENU=Day;
                           ENG=Day];
                OptionCaptionML=[ENU=Day,Week,Month,Quarter,Year;
                                 ENG=Day,Week,Month,Quarter,Year];
                SourceExpr=ItemPeriodLength;
                OnValidate=BEGIN
                             IF ItemPeriodLength = ItemPeriodLength::Year THEN
                               YearItemPeriodLengthOnValidate;
                             IF ItemPeriodLength = ItemPeriodLength::Quarter THEN
                               QuarterItemPeriodLengthOnValid;
                             IF ItemPeriodLength = ItemPeriodLength::Month THEN
                               MonthItemPeriodLengthOnValidat;
                             IF ItemPeriodLength = ItemPeriodLength::Week THEN
                               WeekItemPeriodLengthOnValidate;
                             IF ItemPeriodLength = ItemPeriodLength::Day THEN
                               DayItemPeriodLengthOnValidate;
                           END;
                            }

    { 1040000;2;Field     ;
                CaptionML=[ENU=Calendar;
                           ENG=Calendar];
                ToolTipML=[ENU=System Calendar;
                           ENG=System Calendar];
                OptionCaptionML=[ENU=,System Calendar,Acc. Period Calendar;
                                 ENG=,System Calendar,Acc. Period Calendar];
                SourceExpr=CalendarSource;
                OnValidate=BEGIN
                             IF CalendarSource = CalendarSource::"Acc. Period Calendar" THEN
                               AccPeriodCalendCalendarSourceO;
                             IF CalendarSource = CalendarSource::"System Calendar" THEN
                               SystemCalendarCalendarSourceOn;
                           END;
                            }

    { 34  ;2   ;Field     ;
                CaptionML=[ENU=View as;
                           ENG=View as];
                ToolTipML=[ENU=Net Change;
                           ENG=Net Change];
                OptionCaptionML=[ENU=Net Change,Balance at Date;
                                 ENG=Net Change,Balance at Date];
                SourceExpr=AmountType;
                OnValidate=BEGIN
                             IF AmountType = AmountType::"Balance at Date" THEN
                               BalanceatDateAmountTypeOnValid;
                             IF AmountType = AmountType::"Net Change" THEN
                               NetChangeAmountTypeOnValidate;
                           END;
                            }

    { 1   ;1   ;Part      ;
                Name=ItemAvailLocLines;
                PagePartID=Page515;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      Calendar@1000 : Record 2000000007;
      ItemAvailFormsMgt@1004 : Codeunit 353;
      ItemPeriodLength@1001 : 'Day,Week,Month,Quarter,Year,Period';
      PeriodFormMgt@1040000 : Codeunit 359;
      AmountType@1002 : 'Net Change,Balance at Date';
      LastLocation@1003 : Code[10];
      CalendarSource@1040001 : ' ,System Calendar,Acc. Period Calendar';

    LOCAL PROCEDURE FindPeriod@2(SearchText@1000 : Code[10]);
    BEGIN
      IF GETFILTER("Date Filter") <> '' THEN BEGIN
        Calendar.SETFILTER("Period Start",GETFILTER("Date Filter"));
        IF NOT PeriodFormMgt.FindDate('+',Calendar,ItemPeriodLength) THEN
          PeriodFormMgt.FindDate('+',Calendar,ItemPeriodLength::Day);
        Calendar.SETRANGE("Period Start");
      END;
      PeriodFormMgt.FindDate(SearchText,Calendar,ItemPeriodLength);
      IF AmountType = AmountType::"Net Change" THEN BEGIN
        SETRANGE("Date Filter",Calendar."Period Start",Calendar."Period End");
        IF GETRANGEMIN("Date Filter") = GETRANGEMAX("Date Filter") THEN
          SETRANGE("Date Filter",GETRANGEMIN("Date Filter"));
      END ELSE
        SETRANGE("Date Filter",0D,Calendar."Period End");
    END;

    LOCAL PROCEDURE UpdateSubForm@1();
    BEGIN
      CurrPage.ItemAvailLocLines.PAGE.Set(Rec,AmountType);
    END;

    PROCEDURE GetLastLocation@3() : Code[10];
    BEGIN
      EXIT(LastLocation);
    END;

    LOCAL PROCEDURE YearItemPeriodLengthOnPush@19025466();
    BEGIN
      FindPeriod('');
      UpdateSubForm;
    END;

    LOCAL PROCEDURE QuarterItemPeriodLengthOnPush@19031488();
    BEGIN
      FindPeriod('');
      UpdateSubForm;
    END;

    LOCAL PROCEDURE MonthItemPeriodLengthOnPush@19075006();
    BEGIN
      FindPeriod('');
      UpdateSubForm;
    END;

    LOCAL PROCEDURE WeekItemPeriodLengthOnPush@19034453();
    BEGIN
      FindPeriod('');
      UpdateSubForm;
    END;

    LOCAL PROCEDURE DayItemPeriodLengthOnPush@19038924();
    BEGIN
      FindPeriod('');
      UpdateSubForm;
    END;

    LOCAL PROCEDURE NetChangeAmountTypeOnPush@19074855();
    BEGIN
      FindPeriod('');
      UpdateSubForm;
    END;

    LOCAL PROCEDURE BalanceatDateAmountTypeOnPush@19049003();
    BEGIN
      FindPeriod('');
      UpdateSubForm;
    END;

    LOCAL PROCEDURE SystemCalendarCalendarSoOnPush@19062580();
    BEGIN
      PeriodFormMgt.SetCalendarSource(CalendarSource);
      FindPeriod('');
    END;

    LOCAL PROCEDURE AccPeriodCalendCalendarSOnPush@19057185();
    BEGIN
      PeriodFormMgt.SetCalendarSource(CalendarSource);
      FindPeriod('');
    END;

    LOCAL PROCEDURE DayItemPeriodLengthOnValidate@19054182();
    BEGIN
      DayItemPeriodLengthOnPush;
    END;

    LOCAL PROCEDURE WeekItemPeriodLengthOnValidate@19004944();
    BEGIN
      WeekItemPeriodLengthOnPush;
    END;

    LOCAL PROCEDURE MonthItemPeriodLengthOnValidat@19047492();
    BEGIN
      MonthItemPeriodLengthOnPush;
    END;

    LOCAL PROCEDURE QuarterItemPeriodLengthOnValid@19062960();
    BEGIN
      QuarterItemPeriodLengthOnPush;
    END;

    LOCAL PROCEDURE YearItemPeriodLengthOnValidate@19077185();
    BEGIN
      YearItemPeriodLengthOnPush;
    END;

    LOCAL PROCEDURE SystemCalendarCalendarSourceOn@19024495();
    BEGIN
      SystemCalendarCalendarSoOnPush;
    END;

    LOCAL PROCEDURE AccPeriodCalendCalendarSourceO@19044568();
    BEGIN
      AccPeriodCalendCalendarSOnPush;
    END;

    LOCAL PROCEDURE NetChangeAmountTypeOnValidate@19062218();
    BEGIN
      NetChangeAmountTypeOnPush;
    END;

    LOCAL PROCEDURE BalanceatDateAmountTypeOnValid@19007073();
    BEGIN
      BalanceatDateAmountTypeOnPush;
    END;

    BEGIN
    END.
  }
}

