OBJECT Table 9087000 nSemble Setup
{
  OBJECT-PROPERTIES
  {
    Date=29/11/16;
    Time=[ 2:44:35 PM];
    Modified=Yes;
    Version List=NS2016.16;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TnpToolkit.UpdateCreatedBy(Rec."Created By", Rec."Created Date Time");
             END;

    OnModify=BEGIN
               TnpToolkit.UpdateModifiedBy(Rec."Modified By", Rec."Modified Date Time");
             END;

    CaptionML=[ENU=nSemble Setup;
               ENG=nSemble Setup];
  }
  FIELDS
  {
    { 1   ;   ;Primary Key         ;Code10        ;CaptionML=[ENU=Primary Key;
                                                              ENG=Primary Key] }
    { 10  ;   ;Style Nos.          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=Style Nos.;
                                                              ENG=Style Nos.] }
    { 11  ;   ;Buying Staging Nos. ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=Buying Staging Nos.;
                                                              ENG=Buying Staging Nos.] }
    { 12  ;   ;Buying Sheet Nos.   ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=Buying Sheet Nos.;
                                                              ENG=Buying Sheet Nos.] }
    { 13  ;   ;Store Allocation Nos.;Code10       ;TableRelation="No. Series";
                                                   CaptionML=[ENU=Store Allocation Nos.;
                                                              ENG=Store Allocation Nos.] }
    { 20  ;   ;Season Chronology By;Option        ;InitValue=Date;
                                                   CaptionML=[ENU=Season Chronology By;
                                                              ENG=Season Chronology By];
                                                   OptionCaptionML=[ENU=" ,Date,Sequence";
                                                                    ENG=" ,Date,Sequence"];
                                                   OptionString=[ ,Date,Sequence] }
    { 30  ;   ;Style Item Description;Text50      ;InitValue=%5 %2 %3;
                                                   OnLookup=BEGIN
                                                              StyleManagement.StyleItemDescriptionHelp();
                                                            END;

                                                   CaptionML=[ENU=Style Item Description;
                                                              ENG=Style Item Description] }
    { 31  ;   ;Style Item Variant Description;Text50;
                                                   InitValue=%9 %2 %3;
                                                   OnLookup=BEGIN
                                                              StyleManagement.StyleItemVariantDescriptionHelp();
                                                            END;

                                                   CaptionML=[ENU=Style Item Variant Description;
                                                              ENG=Style Item Variant Description] }
    { 32  ;   ;Style Unit of Measure;Code10       ;TableRelation="Unit of Measure";
                                                   OnValidate=VAR
                                                                lUnitOfMeasure@1000 : Record 204;
                                                              BEGIN
                                                              END;

                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=Style Unit of Measure;
                                                              ENG=Style Unit of Measure] }
    { 33  ;   ;Style Gen. Prod. Posting Group;Code10;
                                                   TableRelation="Gen. Product Posting Group";
                                                   OnValidate=VAR
                                                                lGenProductPostingGroup@1000000000 : Record 251;
                                                              BEGIN
                                                                IF (Rec."Style Gen. Prod. Posting Group" <> xRec."Style Gen. Prod. Posting Group") THEN
                                                                  IF (lGenProductPostingGroup.ValidateVatProdPostingGroup(lGenProductPostingGroup, Rec."Style Gen. Prod. Posting Group")) THEN
                                                                    Rec.VALIDATE("Style VAT Prod. Posting Group", lGenProductPostingGroup."Def. VAT Prod. Posting Group");
                                                              END;

                                                   CaptionML=[ENU=Style Gen. Prod. Posting Group;
                                                              ENG=Style Gen. Prod. Posting Group] }
    { 34  ;   ;Style VAT Prod. Posting Group;Code10;
                                                   TableRelation="VAT Product Posting Group";
                                                   CaptionML=[ENU=Style VAT Prod. Posting Group;
                                                              ENG=Style VAT Prod. Posting Group] }
    { 35  ;   ;Style Inventory Posting Group;Code10;
                                                   TableRelation="Inventory Posting Group";
                                                   CaptionML=[ENU=Style Inventory Posting Group;
                                                              ENG=Style Inventory Posting Group] }
    { 40  ;   ;Vendor Lead Time Calculation;DateFormula;
                                                   InitValue=1W;
                                                   CaptionML=[ENU=Vendor Lead Time Calculation;
                                                              ENG=Vendor Lead Time Calculation] }
    { 50  ;   ;Main Location Code  ;Code10        ;TableRelation=Location;
                                                   CaptionML=[ENU=Main Location Code;
                                                              ENG=Main Location Code] }
    { 51  ;   ;Inbound Location Code;Code10       ;TableRelation=Location;
                                                   CaptionML=[ENU=Inbound Location Code;
                                                              ENG=Inbound Location Code] }
    { 60  ;   ;Enable Buying Staging Styles;Boolean;
                                                   InitValue=Yes;
                                                   CaptionML=[ENU=Enable Buying Staging Styles;
                                                              ENG=Enable Buying Staging Styles] }
    { 61  ;   ;Enable Buying Staging Sizes;Option ;InitValue=All;
                                                   CaptionML=[ENU=Enable Buying Staging Sizes;
                                                              ENG=Enable Buying Staging Sizes];
                                                   OptionCaptionML=[ENU=All,Only Ordered;
                                                                    ENG=All,Only Ordered];
                                                   OptionString=All,Only Ordered }
    { 62  ;   ;Buying Sheet Item Ident.;Option    ;InitValue=Vendor Item No. + Vendor Colour Code;
                                                   CaptionML=[ENU=Buying Sheet Item Identification;
                                                              ENG=Buying Sheet Item Identification];
                                                   OptionCaptionML=ENU=" ,Vendor Item No.,Vendor Item No. + Colour Code,Vendor Item No. + Vendor Colour Code,Vendor Style No. + Colour Code";
                                                   OptionString=[ ,Vendor Item No.,Vendor Item No. + Colour Code,Vendor Item No. + Vendor Colour Code,Vendor Style No. + Colour Code];
                                                   Description=NS2016.16.1 }
    { 70  ;   ;One Purch. Ord. per Buying Sh.;Boolean;
                                                   InitValue=Yes;
                                                   CaptionML=[ENU=One Purchase Order per Buying Sheet;
                                                              ENG=One Purchase Order per Buying Sheet] }
    { 80  ;   ;Allocate Consignment Overhead;Option;
                                                   InitValue=By Amount;
                                                   CaptionML=[ENU=Allocate Consignment Overhead;
                                                              ENG=Allocate Consignment Overhead];
                                                   OptionCaptionML=[ENU=" ,By Quantity,By Amount";
                                                                    ENG=" ,By Quantity,By Amount"];
                                                   OptionString=[ ,By Quantity,By Amount] }
    { 90  ;   ;Release Inb. Store Alloc. Tr.;Boolean;
                                                   CaptionML=[ENU=Release Inb. Store Alloc. Tr.;
                                                              ENG=Release Inb. Store Alloc. Tr.] }
    { 91  ;   ;Release Outb. Store Alloc. Tr.;Boolean;
                                                   CaptionML=[ENU=Release Outb. Store Alloc. Tr.;
                                                              ENG=Release Outb. Store Alloc. Tr.] }
    { 100 ;   ;Inb. Store Alloc. Reason Code;Code10;
                                                   TableRelation="Reason Code";
                                                   CaptionML=[ENU=Inb. Store Alloc. Reason Code;
                                                              ENG=Inb. Store Alloc. Reason Code] }
    { 101 ;   ;Outb. Store Alloc. Reason Code;Code10;
                                                   TableRelation="Reason Code";
                                                   CaptionML=[ENU=Outb. Store Alloc. Reason Code;
                                                              ENG=Outb. Store Alloc. Reason Code] }
    { 110 ;   ;Quality Inspection Rounding;Decimal;InitValue=0.01;
                                                   CaptionML=[ENU=Quality Inspection Rounding;
                                                              ENG=Quality Inspection Rounding];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 111 ;   ;Buying Sheet Appr. Workf. No.;Code20;
                                                   TableRelation="Enhanced Workflow";
                                                   CaptionML=[ENU=Buying Sheet Approval Workflow No.;
                                                              ENG=Buying Sheet Approval Workflow No.] }
    { 112 ;   ;Style Approval Workflow No.;Code20 ;TableRelation="Enhanced Workflow";
                                                   CaptionML=[ENU=Style Approval Workflow No.;
                                                              ENG=Style Approval Workflow No.] }
    { 120 ;   ;Allocate Buying Sheet Overhead;Option;
                                                   InitValue=By Direct Cost;
                                                   CaptionML=[ENU=Allocate Buying Sheet Overhead;
                                                              ENG=Allocate Buying Sheet Overhead];
                                                   OptionCaptionML=[ENU=" ,By Quantity,By Direct Cost";
                                                                    ENG=" ,By Quantity,By Direct Cost"];
                                                   OptionString=[ ,By Quantity,By Direct Cost] }
    { 130 ;   ;Buying Sheet Form Jet Rep. ID;Integer;
                                                   TableRelation="Jet Report Header";
                                                   CaptionML=[ENU=Buying Sheet Form Jet Rep. ID;
                                                              ENG=Buying Sheet Form Jet Rep. ID];
                                                   BlankZero=Yes }
    { 140 ;   ;Buying Sh. Created Workf. No.;Code20;
                                                   TableRelation="Enhanced Workflow";
                                                   CaptionML=[ENU=Buying Sheet Created Workflow No.;
                                                              ENG=Buying Sheet Created Workflow No.] }
    { 150 ;   ;Replenishment Codeunit ID;Integer  ;TableRelation=AllObj."Object ID" WHERE (Object Type=CONST(Codeunit));
                                                   OnValidate=BEGIN
                                                                Rec.CALCFIELDS("Replenishment Codeunit Name");
                                                              END;

                                                   CaptionML=[ENU=Replenishment Codeunit ID;
                                                              ENG=Replenishment Codeunit ID] }
    { 151 ;   ;Replenishment Codeunit Name;Text50 ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObj."Object Name" WHERE (Object Type=CONST(Codeunit),
                                                                                                  Object ID=FIELD(Replenishment Codeunit ID)));
                                                   CaptionML=[ENU=Replenishment Codeunit Name;
                                                              ENG=Replenishment Codeunit Name];
                                                   Editable=No }
    { 160 ;   ;Colour Nos.         ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=Colour Nos.;
                                                              ENG=Colour Nos.] }
    { 170 ;   ;Item Numbering      ;Code30        ;OnLookup=BEGIN
                                                              StyleManagement.ItemNumberingHelp();
                                                            END;

                                                   CaptionML=[ENU=Item Numbering;
                                                              ENG=Item Numbering] }
    { 180 ;   ;Arch. Processed Buying Staging;Option;
                                                   CaptionML=[ENU=Arch. Processed Buying Staging;
                                                              ENG=Arch. Processed Buying Staging];
                                                   OptionCaptionML=[ENU=" ,Archive,Move to Archive";
                                                                    ENG=" ,Archive,Move to Archive"];
                                                   OptionString=[ ,Archive,Move to Archive] }
    { 181 ;   ;Arch. Posted Buying Sheet;Option   ;CaptionML=[ENU=Arch. Posted Buying Sheet;
                                                              ENG=Arch. Posted Buying Sheet];
                                                   OptionCaptionML=[ENU=" ,Archive,Move to Archive";
                                                                    ENG=" ,Archive,Move to Archive"];
                                                   OptionString=[ ,Archive,Move to Archive] }
    { 190 ;   ;Pre-Create Buying Sheet Sizes;Boolean;
                                                   CaptionML=[ENU=Pre-Create Buying Sheet Sizes;
                                                              ENG=Pre-Create Buying Sheet Sizes] }
    { 191 ;   ;Pre-Create Purchase Sizes;Boolean  ;CaptionML=[ENU=Pre-Create Purchase Sizes;
                                                              ENG=Pre-Create Purchase Sizes] }
    { 192 ;   ;Pre-Create Sales Sizes;Boolean     ;CaptionML=[ENU=Pre-Create Sales Sizes;
                                                              ENG=Pre-Create Sales Sizes] }
    { 193 ;   ;Pre-Create Transfer Sizes;Boolean  ;CaptionML=[ENU=Pre-Create Transfer Sizes;
                                                              ENG=Pre-Create Transfer Sizes] }
    { 900 ;   ;Activity            ;Option        ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Activity;
                                                              ENG=Activity];
                                                   OptionCaptionML=[ENU=" ,Insert,Modify,Delete,Rename";
                                                                    ENG=" ,Insert,Modify,Delete,Rename"];
                                                   OptionString=[ ,Insert,Modify,Delete,Rename] }
    { 901 ;   ;Range               ;Option        ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Range;
                                                              ENG=Range];
                                                   OptionCaptionML=[ENU=" ,Current,Selected,All";
                                                                    ENG=" ,Current,Selected,All"];
                                                   OptionString=[ ,Current,Selected,All] }
    { 902 ;   ;Direction           ;Option        ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Direction;
                                                              ENG=Direction];
                                                   OptionCaptionML=[ENU=" ,Down,Up";
                                                                    ENG=" ,Down,Up"];
                                                   OptionString=[ ,Down,Up] }
    { 1000;   ;Created By          ;Code50        ;OnLookup=BEGIN
                                                              TnpToolkit.UserLookup(Rec."Created By", FALSE);
                                                            END;

                                                   CaptionML=[ENU=Created By;
                                                              ENG=Created By] }
    { 1001;   ;Created Date Time   ;DateTime      ;CaptionML=[ENU=Created Date Time;
                                                              ENG=Created Date Time] }
    { 1002;   ;Modified By         ;Code50        ;OnLookup=BEGIN
                                                              TnpToolkit.UserLookup(Rec."Modified By", FALSE);
                                                            END;

                                                   CaptionML=[ENU=Modified By;
                                                              ENG=Modified By] }
    { 1003;   ;Modified Date Time  ;DateTime      ;CaptionML=[ENU=Modified Date Time;
                                                              ENG=Modified Date Time] }
  }
  KEYS
  {
    {    ;Primary Key                             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      StyleManagement@1000000001 : Codeunit 9087006;
      TnpToolkit@1000000000 : Codeunit 9062230;

    PROCEDURE VerifyAndGet@1000000000();
    VAR
      eVendorLeadTimeCalculation@1000000000 : TextConst 'ENU=1W;ENG=1W';
    BEGIN
      //DOC NS2015.1 - Verifying and returning the record

      Rec.RESET();
      IF ( NOT (Rec.GET())) THEN
      BEGIN
        Rec.INIT();
        Rec.INSERT(TRUE);
        Rec.VALIDATE("Style Nos.", Rec.GetStyleNos());
        Rec.VALIDATE("Buying Staging Nos.", Rec.GetBuyingStagingNos());
        Rec.VALIDATE("Buying Sheet Nos.", Rec.GetBuyingSheetNos());
        Rec.VALIDATE("Store Allocation Nos.", Rec.GetStoreAllocationNos());
        Rec.VALIDATE("Colour Nos.", Rec.GetColourNos());
        EVALUATE("Vendor Lead Time Calculation", eVendorLeadTimeCalculation);
        Rec.MODIFY(TRUE);
      END;
    END;

    PROCEDURE GetStyleNos@1000000003() : Code[10];
    VAR
      eCode@1000000001 : TextConst 'ENU=STYLE;ENG=STYLE';
      eDescription@1000000000 : TextConst 'ENU=Style;ENG=Style';
      eStartingNo@1000000002 : TextConst 'ENU=ST000001;ENG=ST000001';
    BEGIN
      //DOC NS2015.1 - Returning style no. series
      //  <- The no. series

      EXIT(VerifyNoSeries(Rec."Style Nos.", eCode, eDescription, eStartingNo));
    END;

    PROCEDURE GetBuyingStagingNos@1000000005() : Code[10];
    VAR
      eCode@1000000001 : TextConst 'ENU=BUY-STAG;ENG=BUY-STAG';
      eDescription@1000000000 : TextConst 'ENU=Buying Stating;ENG=Buying Stating';
      eStartingNo@1000000002 : TextConst 'ENU=BST000001;ENG=BST000001';
    BEGIN
      //DOC NS2015.1 - Returning buying staging no. series code
      //  <- The no. series

      EXIT(VerifyNoSeries(Rec."Buying Staging Nos.", eCode, eDescription, eStartingNo));
    END;

    PROCEDURE GetBuyingSheetNos@1000000004() : Code[10];
    VAR
      eCode@1000000001 : TextConst 'ENU=BUY-SHEET;ENG=BUY-SHEET';
      eDescription@1000000000 : TextConst 'ENU=Buying Sheet;ENG=Buying Sheet';
      eStartingNo@1000000002 : TextConst 'ENU=BSH000001;ENG=BSH000001';
    BEGIN
      //DOC NS2015.1 - Returning buying sheet no. series code
      //  <- The no. series

      EXIT(VerifyNoSeries(Rec."Buying Sheet Nos.", eCode, eDescription, eStartingNo));
    END;

    PROCEDURE GetStoreAllocationNos@1000000008() : Code[10];
    VAR
      eCode@1000000001 : TextConst 'ENU=STORE-ALL;ENG=STORE-ALL';
      eDescription@1000000000 : TextConst 'ENU=Store Allocation;ENG=Store Allocation';
      eStartingNo@1000000002 : TextConst 'ENU=SA000001;ENG=SA000001';
    BEGIN
      //DOC NS2015.1 - Returning store allocation no. series code
      //  <- The no. series

      EXIT(VerifyNoSeries(Rec."Store Allocation Nos.", eCode, eDescription, eStartingNo));
    END;

    PROCEDURE GetColourNos@1000000006() : Code[10];
    VAR
      eCode@1000000001 : TextConst 'ENU=COLOUR;ENG=COLOUR';
      eDescription@1000000000 : TextConst 'ENU=Colour;ENG=Colour';
      eStartingNo@1000000002 : TextConst 'ENU=001;ENG=001';
    BEGIN
      //DOC NS2015.1 - Returning colour no. series code
      //  <- The no. series

      EXIT(VerifyNoSeries(Rec."Colour Nos.", eCode, eDescription, eStartingNo));
    END;

    LOCAL PROCEDURE VerifyNoSeries@1000000001(VAR pNoSeriesCode@1000000000 : Code[10];pCode@1000000003 : Code[10];pDescription@1000000005 : Text[50];pStartingNo@1000000006 : Code[20]) : Code[10];
    VAR
      lNoSeries@1000000002 : Record 308;
      lNoSeriesToolkit@1000000001 : Codeunit 9062598;
    BEGIN
      //DOC NS2015.1 - Verifying no. series
      //  <> pNoSeriesCode: Source / target no. series code
      //  -> pCode: Code to use if "pNoSeriesCode" is empty
      //  -> pDescription: Description of no. series
      //  -> pStartingNo: Starting number for new no. series
      //  <- Final no. series code

      IF (pNoSeriesCode = '') THEN
      BEGIN
        pNoSeriesCode := pCode;
        Rec.MODIFY(TRUE);
      END;

      IF ( NOT (lNoSeries.GET(pNoSeriesCode))) THEN
        lNoSeriesToolkit.CreateNoSeriesAdv(pCode, pDescription, TRUE, FALSE, pStartingNo);

      EXIT(pNoSeriesCode);
    END;

    BEGIN
    {
      //DOC NS2015.1  JH 04/11/2013 - Created
      //DOC NS2015.1  AZ 22/01/2013 - "Consignment Nos." field added
      //DOC NS2015.1  JH 20/02/2014 - Amendments
      //DOC NS2015.1  JH 07/03/2014 - New fields
      //DOC NS2015.4  JH 29/01/2015 - Updated for NAV 2015
      //DOC NS2015.4  JH 03/02/2015 - "nSemble Active" added
      //DOC NS2015.6  JH 09/04/2015 - "Store Allocation Nos." renamed to "Stock Allocation Nos."
      //DOC NS2016.16 JH 05/09/2016 - nSemble 2016

      //DOC M0040 PCM 15/11/16 - Added option to "Buying Sheet Item Indent." field, "Vendor Style No. + Colour Code".
      //DOC NS2016.16.1 PCM 29/11/16 - Corrected field name and caption for "Buying Sheet Item Indent.".
    }
    END.
  }
}

