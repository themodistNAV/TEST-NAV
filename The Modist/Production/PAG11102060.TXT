OBJECT Page 11102060 OM - Action Worksheet
{
  OBJECT-PROPERTIES
  {
    Date=19/11/15;
    Time=12:00:00 PM;
    Version List=OMA10.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Action Worksheet;
               ENU=Action Worksheet;
               ESP=Action Worksheet;
               FRA=Action Worksheet;
               NLD=Actie werkblad;
               DEA=Action Worksheet];
    SaveValues=Yes;
    SourceTable=Table11102048;
    SourceTableView=SORTING(Type,No.);
    DataCaptionFields=Type,No.,Sub Type;
    PageType=Worksheet;
    OnOpenPage=VAR
                 ActionGroup@1000 : Record 11102047;
                 ctNewSelection@1001 : TextConst 'DEU=New selection;ENU=New selection;ESP=New selection;FRA=New selection;NLD=Nieuwe selectie;DEA=New selection';
               BEGIN
                 IF CurrentSelection2 <> '' THEN
                   CurrentSelection := CurrentSelection2;

                 IF CurrentType = CurrentType::Group THEN BEGIN
                   IF NOT ActionGroup.GET(CurrentSelection) THEN
                     IF NOT ActionGroup.FINDFIRST THEN BEGIN
                       ActionGroup.Code := 'DM001';
                       ActionGroup.Description := ctNewSelection;
                       ActionGroup.INSERT;
                       CurrentSelection := ActionGroup.Code;
                     END;

                   IF NOT ActionGroup.GET(CurrentSelection) THEN
                     ActionGroup.FINDFIRST;

                   CurrentSelection := ActionGroup.Code;
                 END;

                 ValidateSelection;
                 SetEditable;
               END;

    OnAfterGetRecord=VAR
                       TableFilterMgt@1000 : Codeunit 11102100;
                     BEGIN
                       IF "Object No." = 0 THEN
                         ObjectNo := ''
                       ELSE
                         ObjectNo := FORMAT("Object No.");

                       IF "Into Table No." = 0 THEN
                         IntoTableNo := ''
                       ELSE
                         IntoTableNo := FORMAT("Into Table No.");

                       Filter2 := TableFilterMgt.FormatTableFilter(FORMAT(Filter), "Object No.");

                       FormatCompanyName;
                       FormatIntoCompanyName;

                       SetEditable;
                     END;

    OnNewRecord=VAR
                  NewLineNo@1000 : Integer;
                  NewLineNo2@1001 : Integer;
                BEGIN
                  "Action Type" := xRec."Action Type";
                  "Company Name" := xRec."Company Name";

                  IF xRec.COUNT = 0 THEN BEGIN
                    "Line No." := 10000;
                    EXIT;
                  END;

                  IF BelowxRec THEN BEGIN
                    "Line No." := xRec."Line No." + 10000;
                    EXIT;
                  END;

                  NewLineNo := xRec."Line No.";
                  IF xRec.NEXT(-1) <> 0 THEN BEGIN
                    NewLineNo2 := xRec."Line No.";
                    xRec.NEXT(1);
                  END;

                  "Line No." := ROUND(NewLineNo2 + ((NewLineNo - NewLineNo2) / 2), 1);

                  ObjectNo := '';
                  Filter2 := '';
                END;

    OnAfterGetCurrRecord=BEGIN
                           SetEditable;
                         END;

    ActionList=ACTIONS
    {
      { 1       ;0   ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 2       ;1   ;Action    ;
                      CaptionML=[DEU=&Start;
                                 ENU=&Start;
                                 ESP=&Start;
                                 FRA=&Start;
                                 NLD=&Starten;
                                 DEA=&Start];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Start;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 Start;
                               END;
                                }
      { 3       ;1   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[DEU=E&xport;
                                 ENU=E&xport;
                                 ESP=E&xport;
                                 FRA=E&xport;
                                 NLD=&Exporteren;
                                 DEA=E&xport];
                      Promoted=Yes;
                      Image=Export;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 Actions@1000 : Record 11102048;
                                 ActionField@1001 : Record 11102049;
                                 ActionMgt@1002 : Codeunit 11102038;
                                 Progressbar@1003 : Codeunit 11102044;
                                 CommonDialog@1004 : Codeunit 11102059;
                                 FileHandler@1005 : Codeunit 11102097;
                                 ServerFileName@1006 : Text;
                                 ctDefaultFileName@1007 : TextConst 'DEU=actions.fab;ENU=actions.fab;ESP=actions.fab;FRA=actions.fab;NLD=actions.fab;DEA=actions.fab';
                                 ctExporting@1008 : TextConst 'DEU=Exporting...;ENU=Exporting...;ESP=Exporting...;FRA=Exporting...;NLD=Exporteren...;DEA=Exporting...';
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(Actions);

                                 IF Actions.COUNT = 1 THEN BEGIN
                                   Actions.RESET;
                                   Actions.COPYFILTERS(Rec);
                                   Actions.SETRANGE(Type, CurrentType);
                                   Actions.SETRANGE("No.", CurrentSelection);
                                   Actions.SETRANGE("Sub Type", CurrentSubType);
                                 END;

                                 CommonDialog.AddKnownExtension('fab');
                                 IF NOT CommonDialog.SaveFile(ExportFileName, ServerFileName, ctDefaultFileName) THEN
                                   EXIT;

                                 Progressbar.Open(ctExporting, 2);

                                 ActionField.SETRANGE(Type, CurrentType);
                                 ActionField.SETRANGE("No.", CurrentSelection);
                                 ActionField.SETRANGE("Sub Type", CurrentSubType);
                                 ActionMgt.ExportFile(Actions, ActionField, ServerFileName, Progressbar);

                                 Progressbar.Close;

                                 FileHandler.DownloadToClient(ServerFileName, ExportFileName, ctDefaultFileName);
                               END;
                                }
      { 4       ;1   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[DEU=&Import;
                                 ENU=&Import;
                                 ESP=&Import;
                                 FRA=&Import;
                                 NLD=&Importeren;
                                 DEA=&Import];
                      Promoted=Yes;
                      Image=Import;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ActionMgt@1000 : Codeunit 11102038;
                                 CommonDialog@1001 : Codeunit 11102059;
                                 ServerFileName@1002 : Text;
                               BEGIN
                                 CommonDialog.AddKnownExtension('fab');
                                 IF NOT CommonDialog.OpenFile(ImportFileName, ServerFileName) THEN
                                   EXIT;

                                 ActionMgt.ImportFile(ServerFileName, TRUE);
                               END;
                                }
      { 5       ;1   ;ActionGroup;
                      CaptionML=[DEU=F&unctions;
                                 ENU=F&unctions;
                                 ESP=F&unctions;
                                 FRA=F&unctions;
                                 NLD=F&uncties;
                                 DEA=F&unctions] }
      { 6       ;2   ;Action    ;
                      ShortCutKey=Ctrl+T;
                      CaptionML=[DEU=Edit Table Data;
                                 ENU=Edit Table Data;
                                 ESP=Edit Table Data;
                                 FRA=Edit Table Data;
                                 NLD=Tabelinhoud wijzigen;
                                 DEA=Edit Table Data];
                      Image=Table;
                      OnAction=BEGIN
                                 EditTableData;
                               END;
                                }
      { 7       ;2   ;Action    ;
                      CaptionML=[DEU=Show Table Info;
                                 ENU=Show Table Info;
                                 ESP=Show Table Info;
                                 FRA=Show Table Info;
                                 NLD=Tabel&informatie;
                                 DEA=Show Table Info];
                      Image=AnalysisView;
                      OnAction=VAR
                                 Mgt@1000 : Codeunit 11102035;
                               BEGIN
                                 IF IsTableRecord THEN
                                   Mgt.AssistTableNo("Object No.");
                               END;
                                }
      { 8       ;2   ;Separator  }
      { 9       ;2   ;Action    ;
                      ShortCutKey=Ctrl+G;
                      Ellipsis=Yes;
                      CaptionML=[DEU=Create Actions;
                                 ENU=Create Actions;
                                 ESP=Create Actions;
                                 FRA=Create Actions;
                                 NLD=Acties aanmaken;
                                 DEA=Create Actions];
                      Image=AddAction;
                      OnAction=VAR
                                 CreateActions@1000 : Report 11102038;
                               BEGIN
                                 CreateActions.SetActionGroup(Type, "No.", "Sub Type");
                                 CreateActions.RUNMODAL;
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 10      ;2   ;Action    ;
                      ShortCutKey=Ctrl+Q;
                      Ellipsis=Yes;
                      CaptionML=[DEU=Edit SQL &Query;
                                 ENU=Edit SQL &Query;
                                 ESP=Edit SQL &Query;
                                 FRA=Edit SQL &Query;
                                 NLD=SQL-&query wijzigen;
                                 DEA=Edit SQL &Query];
                      Image=Text;
                      OnAction=BEGIN
                                 AssistEditSQLQuery;
                                 CurrPage.SAVERECORD;
                               END;
                                }
      { 11      ;2   ;Separator  }
      { 12      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[DEU=Select &Fields;
                                 ENU=Select &Fields;
                                 ESP=Select &Fields;
                                 FRA=Select &Fields;
                                 NLD=Velden selecteren;
                                 DEA=Select &Fields];
                      Image=CheckList;
                      OnAction=VAR
                                 ActionField@1000 : Record 11102049;
                               BEGIN
                                 FieldAssist(ActionField, FALSE);
                               END;
                                }
      { 13      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[DEU=Select &Into Fields;
                                 ENU=Select &Into Fields;
                                 ESP=Select &Into Fields;
                                 FRA=Select &Into Fields;
                                 NLD=Doelvelden selecteren;
                                 DEA=Select &Into Fields];
                      Image=CheckList;
                      OnAction=VAR
                                 ActionField@1000 : Record 11102049;
                               BEGIN
                                 FieldsIntoAssist(ActionField);
                               END;
                                }
      { 14      ;2   ;Separator  }
      { 15      ;2   ;Action    ;
                      CaptionML=[DEU=Export to &Repository;
                                 ENU=Export to &Repository;
                                 ESP=Export to &Repository;
                                 FRA=Export to &Repository;
                                 NLD=Naar repository exporteren;
                                 DEA=Export to &Repository];
                      Image=ExportFile;
                      OnAction=VAR
                                 Actions@1000 : Record 11102048;
                                 ActionField@1001 : Record 11102049;
                                 RepositoryMgt@1002 : Codeunit 11102067;
                               BEGIN
                                 Actions := Rec;
                                 Actions.COPYFILTERS(Rec);
                                 CurrPage.SETSELECTIONFILTER(Rec);

                                 RepositoryMgt.AddAction(Rec, ActionField);

                                 CLEARMARKS;
                                 MARKEDONLY(FALSE);
                                 COPYFILTERS(Actions);
                                 Rec := Actions;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 16  ;0   ;Container ;
                ContainerType=ContentArea }

    { 17  ;1   ;Group     ;
                GroupType=Group }

    { 18  ;2   ;Field     ;
                Lookup=Yes;
                CaptionML=[DEU=Selection;
                           ENU=Selection;
                           ESP=Selection;
                           FRA=Selection;
                           NLD=Selectie;
                           DEA=Selection];
                SourceExpr=CurrentSelection;
                OnValidate=VAR
                             ActionGroup@1000 : Record 11102047;
                           BEGIN
                             IF NOT ActionGroup.GET(CurrentSelection) THEN BEGIN
                               ActionGroup.SETFILTER(Code, CurrentSelection + '*');
                               IF ActionGroup.FINDFIRST THEN
                                 CurrentSelection := ActionGroup.Code;
                             END;

                             ValidateSelection;

                             CurrPage.UPDATE;
                           END;

                OnLookup=VAR
                           Project@1000 : Record 11102036;
                           Transport@1001 : Record 11102043;
                           ActionGroup@1002 : Record 11102047;
                           Projects@1003 : Page 11102040;
                           Transports@1004 : Page 11102055;
                           ActionGroups@1005 : Page 11102059;
                         BEGIN
                           CASE CurrentType OF

                             CurrentType::Group :
                               BEGIN
                                 IF ActionGroup.GET(CurrentSelection) THEN
                                   ActionGroups.SETRECORD(ActionGroup);

                                 ActionGroups.LOOKUPMODE := TRUE;
                                 IF ActionGroups.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                   ActionGroups.GETRECORD(ActionGroup);
                                   Text := ActionGroup.Code;
                                   EXIT(TRUE);
                                 END;
                               END;

                             CurrentType::Project :
                               BEGIN
                                 IF Project.GET(CurrentSelection) THEN
                                   Projects.SETRECORD(Project);

                                 Projects.LOOKUPMODE := TRUE;
                                 IF Projects.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                   Projects.GETRECORD(Project);
                                   Text := Project."No.";
                                   EXIT(TRUE);
                                 END;
                               END;

                             CurrentType::Transport :
                               BEGIN
                                 IF Transport.GET(CurrentSelection) THEN
                                   Transports.SETRECORD(Transport);

                                 Transports.LOOKUPMODE := TRUE;
                                 IF Transports.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                   Transports.GETRECORD(Transport);
                                   Text := Transport."No.";
                                   EXIT(TRUE);
                                 END;
                               END;

                           END;
                         END;
                          }

    { 19  ;2   ;Field     ;
                SourceExpr=SelectionDescription;
                Editable=FALSE }

    { 20  ;1   ;Group     ;
                GroupType=Repeater }

    { 21  ;2   ;Field     ;
                SourceExpr="Action Type";
                OnValidate=BEGIN
                             SetEditable;
                           END;
                            }

    { 22  ;2   ;Field     ;
                Width=13;
                CaptionML=[DEU=Object No.;
                           ENU=Object No.;
                           ESP=Object No.;
                           FRA=Object No.;
                           NLD=Objectnr.;
                           DEA=Object No.];
                BlankZero=Yes;
                SourceExpr=ObjectNo;
                Editable=ObjectNoEditable;
                OnValidate=VAR
                             Mgt@1000 : Codeunit 11102035;
                           BEGIN
                             Mgt.AfterInputObjectNo(GetObjectType, ObjectNo);
                             EVALUATE("Object No.", ObjectNo);
                             VALIDATE("Object No.");
                           END;

                OnLookup=VAR
                           Mgt@1000 : Codeunit 11102035;
                         BEGIN
                           EXIT(Mgt.LookupObjectNo(GetObjectType, Text));
                         END;
                          }

    { 23  ;2   ;Field     ;
                SourceExpr="Object Name" }

    { 24  ;2   ;Field     ;
                CaptionML=[DEU=Company Name;
                           ENU=Company Name;
                           ESP=Company Name;
                           FRA=Company Name;
                           NLD=Bedrijfsnaam;
                           DEA=Company Name];
                SourceExpr=CompanyNameInput;
                Editable=CompanyNameEditable;
                OnValidate=BEGIN
                             VALIDATE("Company Name", CompanyNameInput);
                             FormatCompanyName;
                           END;

                OnLookup=BEGIN
                           EXIT(LookupCompanyName(Text, TRUE));
                         END;
                          }

    { 25  ;2   ;Field     ;
                AssistEdit=Yes;
                SourceExpr=Filter2;
                CaptionClass=FIELDCAPTION(Filter);
                Editable=IsTableNoAddRecord;
                OnValidate=VAR
                             TableFilterMgt@1000 : Codeunit 11102100;
                           BEGIN
                             IF Filter2 = '' THEN
                               EVALUATE(Filter, '')
                             ELSE
                               EVALUATE(Filter, TableFilterMgt.EmptyTableFilter("Object No.") + Filter2);

                             CurrPage.UPDATE(TRUE);
                           END;

                OnAssistEdit=VAR
                               TableFilterMgt@1000 : Codeunit 11102100;
                             BEGIN
                               IF IsTableRecord AND ("Object No." <> 0) THEN BEGIN
                                 Filter2 := FORMAT(Filter);
                                 TableFilterMgt.AssistEditFilter("Object No.", Filter2);
                                 EVALUATE(Filter, Filter2);
                                 CurrPage.UPDATE(TRUE);

                               END;
                             END;
                              }

    { 26  ;2   ;Field     ;
                SourceExpr="Export FlowFields";
                Visible=FALSE }

    { 27  ;2   ;Field     ;
                SourceExpr=Fields;
                Editable=IsTableRecord2;
                OnAssistEdit=VAR
                               ActionField@1000 : Record 11102049;
                             BEGIN
                               FieldAssist(ActionField, FALSE);
                             END;
                              }

    { 28  ;2   ;Field     ;
                Width=13;
                CaptionML=[DEU=Into Table No.;
                           ENU=Into Table No.;
                           ESP=Into Table No.;
                           FRA=Into Table No.;
                           NLD=Doel tabelnr.;
                           DEA=Into Table No.];
                SourceExpr=IntoTableNo;
                Editable=IntoFieldsEditable2;
                OnValidate=VAR
                             Object@1000 : Record 2000000001;
                             Mgt@1001 : Codeunit 11102035;
                           BEGIN
                             Mgt.AfterInputObjectNo(Object.Type::Table, IntoTableNo);
                             EVALUATE("Into Table No.", IntoTableNo);
                             VALIDATE("Into Table No.");
                           END;

                OnLookup=VAR
                           Object@1000 : Record 2000000001;
                           Mgt@1001 : Codeunit 11102035;
                         BEGIN
                           EXIT(Mgt.LookupObjectNo(Object.Type::Table, Text));
                         END;

                OnAssistEdit=VAR
                               Mgt@1000 : Codeunit 11102035;
                             BEGIN
                               Mgt.AssistTableNo("Into Table No.");
                             END;
                              }

    { 29  ;2   ;Field     ;
                SourceExpr="Into Table Name" }

    { 30  ;2   ;Field     ;
                CaptionML=[DEU=Into Company Name;
                           ENU=Into Company Name;
                           ESP=Into Company Name;
                           FRA=Into Company Name;
                           NLD=Doel bedrijfsnaam;
                           DEA=Into Company Name];
                SourceExpr=IntoCompanyNameInput;
                Editable=IntoFieldsEditable2;
                OnValidate=BEGIN
                             VALIDATE("Into Company Name", IntoCompanyNameInput);
                             FormatIntoCompanyName;
                           END;

                OnLookup=BEGIN
                           EXIT(LookupCompanyName(Text, FALSE));
                         END;
                          }

    { 31  ;2   ;Field     ;
                SourceExpr="Into Fields";
                Editable=IntoFieldsEditable2;
                OnAssistEdit=VAR
                               ActionField@1000 : Record 11102049;
                             BEGIN
                               FieldsIntoAssist(ActionField);
                             END;
                              }

    { 32  ;2   ;Field     ;
                SourceExpr=["DELETEALL;"];
                Editable=IsTableNoAddRecord }

    { 33  ;2   ;Field     ;
                SourceExpr=["INIT;"];
                Editable=IsTableRecord2 }

    { 34  ;2   ;Field     ;
                SourceExpr=["IF FIND('=') THEN;"];
                Editable=IsTableNoAddRecord }

    { 35  ;2   ;Field     ;
                SourceExpr=["IF INSERT THEN;"];
                Editable=IsTableRecord2 }

    { 36  ;2   ;Field     ;
                SourceExpr=["IF MODIFY THEN;"];
                Editable=IsTableRecord2 }

    { 37  ;2   ;Field     ;
                SourceExpr="SQL Query";
                Editable=FALSE;
                OnAssistEdit=BEGIN
                               AssistEditSQLQuery;
                               CurrPage.SAVERECORD;
                             END;
                              }

    { 38  ;2   ;Field     ;
                SourceExpr="DOS Command";
                Editable=DOSCommandEditable }

    { 39  ;2   ;Field     ;
                SourceExpr="Commit Type";
                Editable=CommitTypeEditable }

    { 40  ;1   ;Field     ;
                SourceExpr=ExportFileName;
                Visible=FALSE }

    { 41  ;1   ;Field     ;
                SourceExpr=ImportFileName;
                Visible=FALSE }

    { 42  ;0   ;Container ;
                ContainerType=FactBoxArea }

    { 43  ;1   ;Part      ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 44  ;1   ;Part      ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      CompanyNameInput@1000 : Text INDATASET;
      ExportFileName@1001 : Text;
      Filter2@1002 : Text INDATASET;
      ImportFileName@1003 : Text;
      IntoCompanyNameInput@1004 : Text INDATASET;
      IntoTableNo@1005 : Text INDATASET;
      ObjectNo@1006 : Text INDATASET;
      SelectionDescription@1007 : Text;
      CurrentSelection@1008 : Code[20];
      CurrentSelection2@1009 : Code[20];
      CurrentSubType@1010 : Option;
      CurrentType@1011 : 'Group,Project,Transport';
      CommitTypeEditable@1012 : Boolean INDATASET;
      CompanyNameEditable@1013 : Boolean INDATASET;
      DOSCommandEditable@1014 : Boolean INDATASET;
      IntoFieldsEditable2@1015 : Boolean INDATASET;
      IsTableNoAddRecord@1016 : Boolean INDATASET;
      IsTableRecord2@1017 : Boolean INDATASET;
      ObjectNoEditable@1018 : Boolean INDATASET;

    LOCAL PROCEDURE ValidateSelection@1();
    VAR
      Project@1000 : Record 11102036;
      Transport@1001 : Record 11102043;
      ActionGroup@1002 : Record 11102047;
    BEGIN
      CASE CurrentType OF

        CurrentType::Group :
          BEGIN
            ActionGroup.GET(CurrentSelection);
            SelectionDescription := ActionGroup.Description;
            FILTERGROUP(2);
            SETRANGE(Type, Type::Group);
            SETRANGE("No.", CurrentSelection);
            SETRANGE("Sub Type", CurrentSubType);
            FILTERGROUP(0);
          END;

        CurrentType::Project :
          BEGIN
            Project.GET(CurrentSelection);
            SelectionDescription := Project.Description;
            FILTERGROUP(2);
            SETRANGE(Type, Type::Project);
            SETRANGE("No.", CurrentSelection);
            SETRANGE("Sub Type", CurrentSubType);
            FILTERGROUP(0);
          END;

        CurrentType::Transport :
          BEGIN
            Transport.GET(CurrentSelection);
            SelectionDescription := Transport.Description;
            FILTERGROUP(2);
            SETCURRENTKEY("Transport No.");
            SETRANGE(Type, Type::Project);
            SETRANGE("Transport No.", CurrentSelection);
            SETRANGE("Sub Type", CurrentSubType);
            FILTERGROUP(0);
          END;

      END;
    END;

    LOCAL PROCEDURE EditTableData@2();
    VAR
      ActionField@1000 : Record 11102049;
      TableMgt@1001 : Codeunit 11102053;
    BEGIN
      TESTFIELD("Object No.");

      ActionField.SETRANGE(Type, Type);
      ActionField.SETRANGE("No.", "No.");
      ActionField.SETRANGE("Sub Type", "Sub Type");
      ActionField.SETRANGE("Line No.", "Line No.");

      TableMgt.SetAction(Rec, ActionField);
      TableMgt.EditTableData("Object No.");
    END;

    PROCEDURE SetProject@3(VAR Project@1000 : Record 11102036;BeforeAfter@1001 : ' ,Before,After');
    VAR
      Actions@1002 : Record 11102048;
      cProject@1003 : TextConst 'DEU=Project %1 - %2;ENU=Project %1 - %2;ESP=Project %1 - %2;FRA=Project %1 - %2;NLD=Project %1 - %2;DEA=Project %1 - %2';
    BEGIN
      CurrentSelection2 := Project."No.";
      CurrentType := Actions.Type::Project;
      CurrentSubType := BeforeAfter;

      SelectionDescription := STRSUBSTNO(cProject, Project."No.", BeforeAfter);
    END;

    PROCEDURE SetTransport@4(VAR Transport@1000 : Record 11102043;BeforeAfter@1001 : ' ,Before,After');
    VAR
      ctTransport@1002 : TextConst 'DEU=Transport %1 - %2;ENU=Transport %1 - %2;ESP=Transport %1 - %2;FRA=Transport %1 - %2;NLD=Transport %1 - %2;DEA=Transport %1 - %2';
    BEGIN
      CurrentSelection2 := Transport."No.";
      CurrentType := CurrentType::Transport;
      CurrentSubType := BeforeAfter;

      SelectionDescription := STRSUBSTNO(ctTransport, Transport."No.", BeforeAfter);

      CurrPage.EDITABLE := FALSE;
    END;

    LOCAL PROCEDURE Start@5();
    VAR
      Actions@1000 : Record 11102048;
      ActionField@1001 : Record 11102049;
      ActionMgt@1002 : Codeunit 11102038;
    BEGIN
      CurrPage.SETSELECTIONFILTER(Actions);

      IF Actions.COUNT = 1 THEN BEGIN
        Actions.RESET;
        Actions.COPYFILTERS(Rec);
        Actions.SETRANGE(Type, CurrentType);
        Actions.SETRANGE("No.", CurrentSelection);
        Actions.SETRANGE("Sub Type", CurrentSubType);
      END;

      ActionMgt.Start(Actions, ActionField);
    END;

    LOCAL PROCEDURE SetEditable@6();
    VAR
      CommandAction@1000 : Boolean;
    BEGIN
      CommandAction := "Action Type" IN ["Action Type"::"Execute SQL Query", "Action Type"::"Execute DOS Command"];

      ObjectNoEditable := NOT IsRenumberAction AND NOT CommandAction;
      CompanyNameEditable := IsTableRecord AND NOT IsRenumberAction OR ("Action Type" = "Action Type"::"Execute SQL Query");
      CommitTypeEditable := NOT IsRenumberAction AND NOT CommandAction;
      IntoFieldsEditable2 := IntoFieldsEditable;
      DOSCommandEditable := "Action Type" = "Action Type"::"Execute DOS Command";

      IsTableRecord2 := IsTableRecord;
      IsTableNoAddRecord := IsTableRecord2 AND NOT ("Action Type" = "Action Type"::"Add Record");
    END;

    LOCAL PROCEDURE IntoFieldsEditable@7() : Boolean;
    BEGIN
      EXIT("Action Type" IN ["Action Type"::"Copy Data", "Action Type"::"Transfer Data"]);
    END;

    LOCAL PROCEDURE FormatCompanyName@8();
    BEGIN
      IF "Company Name" = '' THEN
        CompanyNameInput := ActiveCompanyText
      ELSE
        CompanyNameInput := "Company Name";
    END;

    LOCAL PROCEDURE FormatIntoCompanyName@9();
    BEGIN
      IF ("Into Company Name" = '') AND ("Into Table No." <> 0) THEN
        IntoCompanyNameInput := ActiveCompanyText
      ELSE
        IntoCompanyNameInput := "Into Company Name";
    END;

    BEGIN
    END.
  }
}

