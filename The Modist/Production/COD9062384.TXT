OBJECT Codeunit 9062384 Deletion Check
{
  OBJECT-PROPERTIES
  {
    Date=28/08/15;
    Time=[ 2:26:34 PM];
    Version List=NA2016.1;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      mObjectFieldToolkit@1000000003 : Codeunit 9062343;
      mField@1000000000 : Record 2000000041;
      mTable@1000000001 : Record 2000000038;
      mTableTmp@1000000002 : TEMPORARY Record 2000000038;

    PROCEDURE Check@1000000001(pRecordName@1000000000 : Text[50];pCode@1000000003 : Code[20];pUsedByTableId@1000000001 : Integer;pUsedByFieldId@1000000002 : Integer);
    VAR
      eUsed@1000000006 : TextConst 'ENU="%1 ""%2"" is used on %3; it can''t be deleted.";ENG="%1 ""%2"" is used on %3; it can''t be deleted."';
      lRecordRef@1000000005 : RecordRef;
      lFieldRef@1000000004 : FieldRef;
    BEGIN
      //DOC NA2015.1 - Checking if record is used elsewhere before its deletion
      //  -> pName: Name (of the record)
      //  -> pCode: Code (of the record)
      //  -> pUsedByTableId: Table to check
      //  -> pUsedByFieldId: Field to check

      lRecordRef.OPEN(pUsedByTableId);
      lFieldRef := lRecordRef.FIELD(pUsedByFieldId);
      lFieldRef.SETRANGE(pCode);
      IF ( NOT (lRecordRef.ISEMPTY)) THEN
        ERROR(eUsed, pRecordName, pCode, mObjectFieldToolkit.GetTableName(pUsedByTableId));
      lRecordRef.CLOSE();
    END;

    PROCEDURE CheckTable@1000000003(pTableId@1000000000 : Integer;pCode@1000000003 : Code[20];pUsedByTableId@1000000001 : Integer;pUsedByFieldId@1000000002 : Integer);
    BEGIN
      //DOC NA2015.1 - Checking (table) if record is used elsewhere before its deletion
      //  -> pTableId: Table ID (of the record)
      //  -> pCode: Code (of the record)
      //  -> pUsedByTableId: Table to check
      //  -> pUsedByFieldId: Field to check

      Check(mObjectFieldToolkit.GetTableName(pTableId), pCode, pUsedByTableId, pUsedByFieldId);
    END;

    PROCEDURE AddTable@1000000002(pTableId@1000000000 : Integer);
    BEGIN
      //DOC NA2015.1 - Adding another table & field
      //  -> pTableId: Table ID
      //  -> pFieldName: Field name

      IF ( NOT (mTableTmp.GET(mTable."Object Type"::Table, pTableId))) THEN
        IF (mTable.GET(mTable."Object Type"::Table, pTableId)) THEN
        BEGIN
          mTableTmp := mTable;
          mTableTmp.INSERT();
        END;
    END;

    PROCEDURE CheckMultiple@1000000005(pName@1000000002 : Text[50];pCode@1000000003 : Code[20];pFieldName@1000000001 : Text[50]);
    BEGIN
      //DOC NA2015.1 - Checking if record is used elsewhere (multiple tablees / fields) before its deletion
      //  -> pName: Name (of the record)
      //  -> pCode: Code (of the record)
      //  -> pFieldName: Field name (for each table)

      mTableTmp.RESET();
      IF (mTableTmp.FINDSET()) THEN
      REPEAT
        mField.RESET();
        mField.SETRANGE(TableNo, mTable."Object ID");
        mField.SETRANGE(FieldName, pFieldName);
        IF (mField.FINDFIRST()) THEN
          Check(pName, pCode, mField.TableNo, mField."No.");
      UNTIL (mTableTmp.NEXT() = 0);
    END;

    PROCEDURE CheckMultipleTables@1000000000(pTableId@1000000000 : Integer;pCode@1000000003 : Code[20];pFieldName@1000000001 : Text[50]);
    BEGIN
      //DOC NA2015.1 - Checking if record is used elsewhere (multiple tables / fields) before its deletion
      //  -> pTableId: Table ID (of the record)
      //  -> pCode: Code (of the record)
      //  -> pFieldName: Field name (for each table)

      CheckMultiple(mObjectFieldToolkit.GetTableName(pTableId), pCode, pFieldName);
    END;

    BEGIN
    {
      //DOC NA2015.1 JH 13/02/2014 - Created
      //DOC NA2016.1 JH 28/08/2015 - Upgraded to 2016
    }
    END.
  }
}

