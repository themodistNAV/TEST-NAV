OBJECT Table 9021654 Customer Subscription
{
  OBJECT-PROPERTIES
  {
    Date=13/07/16;
    Time=[ 1:50:05 PM];
    Version List=EC2016.6;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TESTFIELD("User GUID");
               //DOC EC2013.3.30 InternetShopMgt.Randomize;
               IF "User Subscription GUID" = '' THEN
                 //DOC EC2013.3.30 "User Subscription GUID" := InternetShopMgt.GenerateGuid;
                 "User Subscription GUID" := CREATEGUID;  //DOC EC2013.3.30

               //If manually enter this do not want the automatic internet processing to process this so:
               Processed := TRUE;
             END;

    OnDelete=BEGIN
               SegmentLineRec.RESET;
               SegmentLineRec.SETCURRENTKEY("Contact No.","Segment No.");
               SegmentLineRec.SETRANGE("Contact No.","Contact No.");
               SegmentLineRec.SETRANGE("Segment No.","Segment No.");
               SegmentLineRec.SETRANGE("Label Code","Label Code");
               SegmentLineRec.SETRANGE("Subscription Code","Subscription Code");
               IF SegmentLineRec.FINDFIRST THEN
                 ERROR(Text008);
             END;

    OnRename=BEGIN
               ERROR(Text001);
             END;

    CaptionML=[ENU=Customer Subscription;
               ENG=Customer Subscription];
    LookupPageID=Page9021676;
    DrillDownPageID=Page9021676;
  }
  FIELDS
  {
    { 1   ;   ;User Subscription GUID;Text38      ;CaptionML=[ENU=User Subscription GUID;
                                                              ENG=User Subscription GUID];
                                                   Editable=No }
    { 2   ;   ;Label Code          ;Code10        ;TableRelation=Label;
                                                   OnValidate=BEGIN
                                                                IF xRec."Label Code" <> '' THEN
                                                                  ERROR(Text006);
                                                              END;

                                                   CaptionML=[ENU=Label Code;
                                                              ENG=Label Code];
                                                   NotBlank=Yes }
    { 3   ;   ;Subscription Code   ;Code10        ;TableRelation=Subscription.Code WHERE (Label Code=FIELD(Label Code));
                                                   CaptionML=[ENU=Subscription Code;
                                                              ENG=Subscription Code];
                                                   NotBlank=Yes }
    { 5   ;   ;User GUID           ;Text38        ;OnValidate=BEGIN
                                                                IF NOT CONFIRM(Text009) THEN
                                                                  ERROR(Text010);
                                                                ContactRec.RESET;
                                                                ContactRec.SETCURRENTKEY("User GuID");
                                                                ContactRec.SETRANGE("User GuID","User GUID");
                                                                IF NOT ContactRec.FINDFIRST THEN
                                                                  ERROR(Text003);
                                                              END;

                                                   CaptionML=[ENU=User GUID;
                                                              ENG=User GUID] }
    { 12  ;   ;Contact No.         ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Contact.No. WHERE (User GuID=FIELD(User GUID)));
                                                   TableRelation=Contact;
                                                   CaptionML=[ENU=Contact No.;
                                                              ENG=Contact No.];
                                                   Editable=No }
    { 13  ;   ;Internet Cust. Contact Name;Text50 ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Internet Customers".Contact WHERE (No.=FIELD(User GUID)));
                                                   CaptionML=[ENU=Internet Cust. Contact Name;
                                                              ENG=Internet Cust. Contact Name];
                                                   Editable=No }
    { 14  ;   ;End Date Processed  ;Boolean       ;CaptionML=[ENU=End Date Processed;
                                                              ENG=End Date Processed] }
    { 16  ;   ;Segment Line Checked;Boolean       ;CaptionML=[ENU=Segment Line Checked;
                                                              ENG=Segment Line Checked] }
    { 17  ;   ;Campaign No.        ;Code20        ;TableRelation=Campaign;
                                                   CaptionML=[ENU=Campaign No.;
                                                              ENG=Campaign No.];
                                                   Editable=No }
    { 18  ;   ;Segment No.         ;Code20        ;TableRelation="Segment Header".No.;
                                                   OnValidate=BEGIN
                                                                IF xRec."Segment No." <> '' THEN
                                                                  ERROR(Text005);

                                                                IF NOT InsertSegmentEntry THEN
                                                                  ERROR(Text004);
                                                                //Since this is being changed manually, we do not want the automated process to process so:

                                                                SegmentHeaderRec.GET("Segment No.");
                                                                SegmentHeaderRec.TESTFIELD("Campaign No.");
                                                                "Campaign No." := SegmentHeaderRec."Campaign No.";

                                                                Processed := TRUE;
                                                              END;

                                                   CaptionML=[ENU=Segment No.;
                                                              ENG=Segment No.] }
    { 20  ;   ;Membership Id       ;Text150       ;CaptionML=[ENU=Membership Id;
                                                              ENG=Membership Id];
                                                   Editable=No }
    { 21  ;   ;Date and Time Registered;DateTime  ;CaptionML=[ENU=Date and Time Registered;
                                                              ENG=Date and Time Registered];
                                                   Editable=No }
    { 30  ;   ;Start Date          ;Date          ;OnValidate=BEGIN
                                                                SubscriptRec.GET("Label Code","Subscription Code");
                                                                CalcEndDate(SubscriptRec);
                                                              END;

                                                   CaptionML=[ENU=Start Date;
                                                              ENG=Start Date] }
    { 32  ;   ;End Date            ;Date          ;CaptionML=[ENU=End Date;
                                                              ENG=End Date] }
    { 40  ;   ;Processed           ;Boolean       ;CaptionML=[ENU=Processed;
                                                              ENG=Processed] }
  }
  KEYS
  {
    {    ;User Subscription GUID                  ;Clustered=Yes }
    {    ;Label Code,Subscription Code,Membership Id }
    {    ;Date and Time Registered                 }
    {    ;Processed                                }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      LabelRec@1040010 : Record 9021618;
      SubscriptRec@1040000 : Record 9021653;
      SegmentLineRec@1040001 : Record 5077;
      SegmentLineRec1@1040002 : Record 5077;
      CustRec@1040003 : Record 18;
      ContBusRel@1040004 : Record 5054;
      SegmentHeaderRec@1040009 : Record 5076;
      ContactRec@1040013 : Record 5050;
      UpdateContFromCust@1040005 : Codeunit 5056;
      Text002@1040008 : TextConst 'ENU=You cannot change the Label Code as it comes from the Subscription.;ENG=You cannot change the Label Code as it comes from the Subscription.';
      Text001@1040011 : TextConst 'ENU=You cannot rename the Customer Subscription.  Please delete it and create a new one.;ENG=You cannot rename the Customer Subscription.  Please delete it and create a new one.';
      Text003@1040014 : TextConst 'ENU=This User GuID has not been found in Contacts. Please correct and then try again.;ENG=This User GuID has not been found in Contacts. Please correct and then try again.';
      Text004@1040006 : TextConst 'ENU=Could not create a segment line.;ENG=Could not create a segment line.';
      Text005@1040015 : TextConst 'ENU=You cannot change the Segment No. unless it is blank.  To blank it, run "Delete Segment Entry".;ENG=You cannot change the Segment No. unless it is blank.  To blank it, run "Delete Segment Entry".';
      Text006@1040016 : TextConst 'ENU=You cannot change this when it has a previous value.;ENG=You cannot change this when it has a previous value.';
      Text007@1040017 : TextConst 'ENU=You cannot insert a segment line as there is no contact no.;ENG=You cannot insert a segment line as there is no contact no.';
      Text008@1040018 : TextConst 'ENU=You cannot delete a customer subscription as segment lines exist.;ENG=You cannot delete a customer subscription as segment lines exist.';
      Text009@1040019 : TextConst 'ENU=Are you really sure you want to change the User GuID?;ENG=Are you really sure you want to change the User GuID?';
      Text010@1040020 : TextConst 'ENU=Change Abandonned.;ENG=Change Abandonned.';

    PROCEDURE InsertSegmentEntry@1040000() Success : Boolean;
    BEGIN
      CALCFIELDS("Contact No.");
      IF "Contact No." = '' THEN
        ERROR(Text007);

      SegmentLineRec1.INIT;
      IF "Segment No." = '' THEN BEGIN
        SubscriptRec.GET("Label Code","Subscription Code");
        SubscriptRec.TESTFIELD("Segment No.");
        SubscriptRec.CALCFIELDS("Campaign No.");
        SegmentLineRec1."Segment No." := SubscriptRec."Segment No.";
        SegmentLineRec1."Campaign No." := SubscriptRec."Campaign No.";
        "Segment No." := SubscriptRec."Segment No.";
        "Campaign No." := SubscriptRec."Campaign No.";
      END ELSE BEGIN
        SegmentLineRec1."Segment No." := "Segment No.";
        SegmentLineRec1."Campaign No." := "Campaign No.";
      END;
      SegmentLineRec1."Campaign Target" := TRUE;
      SegmentLineRec1."Label Code" := "Label Code";
      SegmentLineRec1."Subscription Code" := "Subscription Code";
      SegmentLineRec1.VALIDATE("Contact No.","Contact No.");
      //Do not need to enter Company User GuID as this is entered by the OnValidate of "Contact No."
      //The validate also calls the InitLine function.

      SegmentLineRec.RESET;
      SegmentLineRec.SETCURRENTKEY("Contact No.","Segment No.");
      SegmentLineRec.SETRANGE("Contact No.","Contact No.");
      SegmentLineRec.SETRANGE("Segment No.","Segment No.");
      SegmentLineRec.SETRANGE("Label Code","Label Code");
      SegmentLineRec.SETRANGE("Subscription Code","Subscription Code");
      IF SegmentLineRec.FINDFIRST THEN BEGIN
        SegmentLineRec1."Line No." := SegmentLineRec."Line No.";
        SegmentLineRec.TRANSFERFIELDS(SegmentLineRec1);
        IF SegmentLineRec.MODIFY THEN
          EXIT(TRUE)
        ELSE
          EXIT(FALSE);
      END ELSE BEGIN
        SegmentLineRec.RESET;
        SegmentLineRec.SETRANGE("Segment No.","Segment No.");
        IF SegmentLineRec.FINDLAST THEN BEGIN
          //Code if find a Segment Line
          SegmentLineRec1."Line No." := SegmentLineRec."Line No." + 10000;
          SegmentLineRec1."Campaign No." := SegmentLineRec."Campaign No.";
        END ELSE BEGIN
          //Code if NOT find a Segment Line
          SegmentLineRec1."Line No." := 10000;
          SegmentHeaderRec.GET("Segment No.");
          SegmentLineRec1."Campaign No." := SegmentHeaderRec."Campaign No." ;
        END;
        IF SegmentLineRec1.INSERT THEN
          EXIT(TRUE)
        ELSE
          EXIT(FALSE);
      END;
    END;

    PROCEDURE CalcEndDate@1040002(SubRec@1040001 : Record 9021653);
    VAR
      DateExpression@1040000 : Text[30];
    BEGIN
      IF "Start Date" = 0D THEN
        "Start Date" := TODAY;

      CASE SubRec."Length Type of Subscription" OF
        SubRec."Length Type of Subscription"::Day :
          BEGIN
             DateExpression := FORMAT(SubRec."No. of Periods of Subscription") + 'D';
            "End Date" := CALCDATE(DateExpression,"Start Date");
          END;
        SubRec."Length Type of Subscription"::Week :
          BEGIN
             DateExpression := FORMAT(SubRec."No. of Periods of Subscription") + 'W';
            "End Date" := CALCDATE(DateExpression,"Start Date");
          END;
        SubRec."Length Type of Subscription"::Month :
          BEGIN
             DateExpression := FORMAT(SubRec."No. of Periods of Subscription") + 'M';
            "End Date" := CALCDATE(DateExpression,"Start Date");
          END;
        SubRec."Length Type of Subscription"::Quarter :
          BEGIN
             DateExpression := FORMAT(SubRec."No. of Periods of Subscription") + 'Q';
            "End Date" := CALCDATE(DateExpression,"Start Date");
          END;
        SubRec."Length Type of Subscription"::Year :
          BEGIN
             DateExpression := FORMAT(SubRec."No. of Periods of Subscription") + 'Y';
            "End Date" := CALCDATE(DateExpression,"Start Date");
          END;
      END;
    END;

    PROCEDURE DeleteSegmentEntry@1040001();
    BEGIN
      SegmentLineRec.RESET;
      SegmentLineRec.SETCURRENTKEY("Contact No.","Segment No.");
      SegmentLineRec.SETRANGE("Contact No.","Contact No.");
      SegmentLineRec.SETRANGE("Segment No.","Segment No.");
      SegmentLineRec.SETRANGE("Label Code","Label Code");
      SegmentLineRec.SETRANGE("Subscription Code","Subscription Code");
      IF SegmentLineRec.FIND('-') THEN
      REPEAT
        SegmentLineRec.DELETE(TRUE);
      UNTIL SegmentLineRec.NEXT = 0;
      "Segment No." := '';
      "Campaign No." := '';
    END;

    BEGIN
    {
      //DOC EC2013.3.30 MQ 06/12/2012 - GW121206 Replace GenerateGuid with CREATEGUID
      //DOC EC2016.6    JH 05/10/2016 - ECom 2016
    }
    END.
  }
}

