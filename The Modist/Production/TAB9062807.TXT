OBJECT Table 9062807 Enhanced View Field
{
  OBJECT-PROPERTIES
  {
    Date=10/05/16;
    Time=12:00:00 PM;
    Version List=NA2016.15;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               UpdateFieldName();
             END;

    OnDelete=BEGIN
               CriteriaMgt.DeleteCriteria("Relation Criteria Id");
               CriteriaMgt.DeleteCriteria("Table Criteria Id");

               IF (Type = Type::"Grid Column") THEN BEGIN
                 IF ("Default Group") THEN
                   VALIDATE("Default Group", FALSE);
                 IF ("Default Totals") THEN
                   VALIDATE("Default Totals", FALSE);
               END;
             END;

    OnRename=BEGIN
               UpdateFieldName();
             END;

    CaptionML=[ENU=Enhanced View Field;
               ENG=Enhanced View Field];
    LookupPageID=Page9063219;
    DrillDownPageID=Page9063219;
  }
  FIELDS
  {
    { 1   ;   ;View Code           ;Code20        ;TableRelation="Enhanced View";
                                                   OnValidate=BEGIN
                                                                IF ("View Code" <> '') THEN BEGIN
                                                                  EnhView.GET("View Code");
                                                                  VALIDATE("Table No.", EnhView."Source Table No.");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=View Code;
                                                              ENG=View Code] }
    { 2   ;   ;Type                ;Option        ;CaptionML=[ENU=Type;
                                                              ENG=Type];
                                                   OptionCaptionML=[ENU=Group Header,Cell,Grid Column;
                                                                    ENG=Group Header,Cell,Grid Column];
                                                   OptionString=Group Header,Cell,Grid Column }
    { 3   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              ENG=Line No.] }
    { 4   ;   ;Name                ;Text50        ;CaptionML=[ENU=Name;
                                                              ENG=Name] }
    { 5   ;   ;Table No.           ;Integer       ;TableRelation=AllObj."Object ID" WHERE (Object Type=CONST(Table));
                                                   OnValidate=BEGIN
                                                                IF (Rec."Table No." <> xRec."Table No.") THEN BEGIN
                                                                  Rec.VALIDATE("Field No.", 0);
                                                                  CriteriaMgt.DeleteCriteria("Table Criteria Id");
                                                                END;
                                                                Rec.CALCFIELDS("Table Name");
                                                              END;

                                                   CaptionML=[ENU=Table No.;
                                                              ENG=Table No.] }
    { 6   ;   ;Field Type          ;Option        ;InitValue=Field;
                                                   OnValidate=BEGIN
                                                                IF ("Field Type" <> xRec."Field Type") THEN
                                                                  VALIDATE("Field No.", 0);
                                                              END;

                                                   CaptionML=[ENU=Field Type;
                                                              ENG=Field Type];
                                                   OptionCaptionML=[ENU=Text,Field,Enhanced Field;
                                                                    ENG=Text,Field,Enhanced Field];
                                                   OptionString=Text,Field,Enhanced Field }
    { 7   ;   ;Field No.           ;Integer       ;TableRelation=IF (Field Type=CONST(Field)) Field.No. WHERE (TableNo=FIELD(Table No.))
                                                                 ELSE IF (Field Type=CONST(Enhanced Field)) "Enhanced Field Definition"."Enhanced Field No." WHERE (Table No.=FIELD(Table No.));
                                                   OnValidate=VAR
                                                                Field@1000000000 : Record 2000000041;
                                                                EnhField@1000000001 : Record 9062327;
                                                              BEGIN
                                                                GetEnhView(FALSE);

                                                                IF ("Field No." <> 0) THEN BEGIN
                                                                  ObjectFieldToolkit.ValidateFieldIdAdv("Table No.", "Field Type", "Field No.");
                                                                  "Field Name" := ObjectFieldToolkit.GetFieldNameAdv("Table No.", "Field Type", "Field No.");
                                                                  "Primary Key Field" := ObjectFieldToolkit.FieldInPrimaryKeyAdv("Table No.", "Field Type", "Field No.");
                                                                END ELSE BEGIN
                                                                  "Field Name" := '';
                                                                  "Primary Key Field" := FALSE;
                                                                END;

                                                                Caption := "Field Name";
                                                                Editable := FALSE;
                                                                "Show All Values" := FALSE;
                                                                "Group By Date Function Avail" := FALSE;
                                                                Sortable := TRUE;
                                                                Groupable := TRUE;
                                                                "Fast Select" := FALSE;
                                                                "Number Field" := FALSE;

                                                                CASE ("Field Type") OF
                                                                  "Field Type"::Field:
                                                                    BEGIN
                                                                      IF ("Field No." <> 0) THEN BEGIN
                                                                        Field.GET("Table No.", "Field No.");
                                                                        //field relation
                                                                        VALIDATE("Relation Table No.", Field.RelationTableNo);
                                                                        IF (Field.RelationTableNo <> 0) AND (Field.RelationFieldNo = 0) THEN
                                                                          FindRelationFieldNo()
                                                                        ELSE
                                                                          VALIDATE("Relation Field No.", Field.RelationFieldNo);
                                                                        Caption := Field."Field Caption";
                                                                        "Fast Select" := (Field.Type IN [Field.Type::Date, Field.Type::DateTime, Field.Type::Code, Field.Type::OemCode,
                                                                          Field.Type::Option]);
                                                                        "Show All Values" := (Field.Type = Field.Type::Option);
                                                                        "Group By Date Function Avail" := (Field.Type IN [Field.Type::Date, Field.Type::DateTime]);
                                                                        Groupable := Field.Type IN [Field.Type::Boolean, Field.Type::Code, Field.Type::Date,
                                                                          Field.Type::DateTime, Field.Type::Integer, Field.Type::OemCode, Field.Type::OemText,
                                                                          Field.Type::Option, Field.Type::Text, Field.Type::Time];
                                                                        "Number Field" := Field.Type IN [Field.Type::Integer, Field.Type::Decimal];
                                                                      END ELSE
                                                                        VALIDATE("Relation Table No.", 0);
                                                                      //other properties
                                                                      Editable := TRUE;
                                                                    END;
                                                                  "Field Type"::Text,
                                                                  "Field Type"::"Enhanced Field":
                                                                    BEGIN
                                                                      VALIDATE("Relation Table No.", 0);
                                                                    END;
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              ObjectFieldToolkit.FieldLookupAdv("Table No.", "Field Type", "Field No.");
                                                              VALIDATE("Field No.");
                                                            END;

                                                   CaptionML=[ENU=Field No.;
                                                              ENG=Field No.] }
    { 8   ;   ;Field Name          ;Text50        ;OnValidate=BEGIN
                                                                ObjectFieldToolkit.ValidateFieldNameAdv("Table No.", "Field Type", "Field No.", "Field Name");
                                                                VALIDATE("Field No.");
                                                              END;

                                                   OnLookup=BEGIN
                                                              ObjectFieldToolkit.FieldLookupAdv("Table No.", "Field Type", "Field No.");
                                                              VALIDATE("Field No.");
                                                            END;

                                                   CaptionML=[ENU=Field Name;
                                                              ENG=Field Name] }
    { 9   ;   ;Table Name          ;Text80        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObj."Object Name" WHERE (Object Type=CONST(Table),
                                                                                                  Object ID=FIELD(Table No.)));
                                                   CaptionML=[ENU=Table Name;
                                                              ENG=Table Name];
                                                   Editable=No }
    { 10  ;   ;Default Value       ;Text250       ;CaptionML=[ENU=Default Value;
                                                              ENG=Default Value] }
    { 11  ;   ;Caption             ;Text80        ;CaptionML=[ENU=Caption;
                                                              ENG=Caption] }
    { 12  ;   ;Relation Table No.  ;Integer       ;OnValidate=BEGIN
                                                                IF ("Relation Table No." <> xRec."Relation Table No.") THEN BEGIN
                                                                  VALIDATE("Relation Field No.", 0);
                                                                  VALIDATE("Caption Field No.", 0);
                                                                  CriteriaMgt.DeleteCriteria("Relation Criteria Id");
                                                                END;
                                                                "Relation Table Name" := ObjectFieldToolkit.GetTableName("Relation Table No.");
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF (ObjectFieldToolkit.TableLookup("Relation Table No.")) THEN
                                                                VALIDATE("Relation Table No.");
                                                            END;

                                                   CaptionML=[ENU=Relation Table No.;
                                                              ENG=Relation Table No.] }
    { 13  ;   ;Relation Table Name ;Text80        ;OnValidate=BEGIN
                                                                ObjectFieldToolkit.ValidateTableName("Relation Table No.", "Relation Table Name", FALSE);
                                                                VALIDATE("Relation Table No.");
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF (ObjectFieldToolkit.TableLookup("Relation Table No.")) THEN
                                                                VALIDATE("Relation Table No.");
                                                            END;

                                                   CaptionML=[ENU=Relation Table Name;
                                                              ENG=Relation Table Name] }
    { 14  ;   ;Relation Field No.  ;Integer       ;OnValidate=BEGIN
                                                                IF ("Relation Field No." <> 0) THEN BEGIN
                                                                  ObjectFieldToolkit.ValidateFieldId("Relation Table No.", "Relation Field No.");
                                                                  "Relation Field Name" := ObjectFieldToolkit.GetFieldName("Relation Table No.", "Relation Field No.");
                                                                END ELSE
                                                                  "Relation Field Name" := '';
                                                              END;

                                                   OnLookup=BEGIN
                                                              ObjectFieldToolkit.FieldLookup("Relation Table No.", "Relation Field No.");
                                                              VALIDATE("Relation Field No.");
                                                            END;

                                                   CaptionML=[ENU=Relation Field No.;
                                                              ENG=Relation Field No.] }
    { 15  ;   ;Relation Field Name ;Text50        ;OnValidate=BEGIN
                                                                ObjectFieldToolkit.ValidateFieldName("Relation Table No.", "Relation Field No.", "Relation Field Name", FALSE);
                                                              END;

                                                   OnLookup=BEGIN
                                                              ObjectFieldToolkit.FieldLookup("Relation Table No.", "Relation Field No.");
                                                              VALIDATE("Relation Field No.");
                                                            END;

                                                   CaptionML=[ENU=Relation Field Name;
                                                              ENG=Relation Field Name] }
    { 19  ;   ;Caption Field Type  ;Option        ;OnValidate=BEGIN
                                                                IF ("Caption Field Type" <> xRec."Caption Field Type") THEN
                                                                  VALIDATE("Caption Field No.", 0);
                                                              END;

                                                   CaptionML=[ENU=Caption Field Type;
                                                              ENG=Caption Field Type];
                                                   OptionCaptionML=[ENU=" ,Field,Enhanced Field";
                                                                    ENG=" ,Field,Enhanced Field"];
                                                   OptionString=[ ,Field,Enhanced Field] }
    { 20  ;   ;Caption Field No.   ;Integer       ;OnValidate=BEGIN
                                                                ObjectFieldToolkit.ValidateFieldIdAdv("Relation Table No.", "Caption Field Type", "Caption Field No.");
                                                                "Caption Field Name" := ObjectFieldToolkit.GetFieldNameAdv("Relation Table No.", "Caption Field Type",
                                                                  "Caption Field No.");
                                                              END;

                                                   OnLookup=BEGIN
                                                              ObjectFieldToolkit.FieldLookupAdv("Relation Table No.", "Caption Field Type", "Caption Field No.");
                                                              VALIDATE("Caption Field No.");
                                                            END;

                                                   CaptionML=[ENU=Caption Field No.;
                                                              ENG=Caption Field No.] }
    { 21  ;   ;Caption Field Name  ;Text50        ;OnValidate=BEGIN
                                                                ObjectFieldToolkit.ValidateFieldNameAdv("Relation Table No.", "Caption Field Type",
                                                                  "Caption Field No.", "Caption Field Name");
                                                                VALIDATE("Caption Field No.");
                                                              END;

                                                   OnLookup=BEGIN
                                                              ObjectFieldToolkit.FieldLookupAdv("Relation Table No.", "Caption Field Type", "Caption Field No.");
                                                              VALIDATE("Caption Field No.");
                                                            END;

                                                   CaptionML=[ENU=Caption Field Name;
                                                              ENG=Caption Field Name] }
    { 22  ;   ;Format Expression   ;Text80        ;CaptionML=[ENU=Format Expression;
                                                              ENG=Format Expression] }
    { 23  ;   ;Relation Criteria Id;Integer       ;CaptionML=[ENU=Relation Criteria Id;
                                                              ENG=Relation Criteria Id] }
    { 24  ;   ;Table Criteria Id   ;Integer       ;CaptionML=[ENU=Table Criteria Id;
                                                              ENG=Table Criteria Id] }
    { 25  ;   ;Group By Date Function;Option      ;CaptionML=[ENU=Group By Date Function;
                                                              ENG=Group By Date Function];
                                                   OptionCaptionML=[ENU=Day,Year Week,Year Month,Year Quarter,Year Half,Year;
                                                                    ENG=Day,Year Week,Year Month,Year Quarter,Year Half,Year];
                                                   OptionString=Day,Year Week,Year Month,Year Quarter,Year Half,Year }
    { 26  ;   ;Default Group       ;Boolean       ;OnValidate=VAR
                                                                EnhViewField@1000000000 : Record 9062807;
                                                              BEGIN
                                                                IF ("Default Group") THEN BEGIN
                                                                  VALIDATE(Groupable, TRUE);

                                                                  EnhViewField.RESET();
                                                                  EnhViewField.SETRANGE("View Code", "View Code");
                                                                  EnhViewField.SETRANGE(Type, Type);
                                                                  EnhViewField.SETFILTER("Line No.", '<>%1', "Line No.");
                                                                  EnhViewField.SETRANGE("Default Group", TRUE);
                                                                  IF (EnhViewField.FINDFIRST()) THEN BEGIN
                                                                    EnhViewField."Default Group" := FALSE;
                                                                    EnhViewField.MODIFY();
                                                                  END;

                                                                END;

                                                                IF ("Default Group" <> xRec."Default Group") THEN BEGIN
                                                                  GetEnhView(TRUE);

                                                                  IF ("Default Group") THEN BEGIN
                                                                    EnhView."Group By Field Type" := "Field Type";
                                                                    EnhView."Group By Field No." := "Field No.";
                                                                    EnhView."Group By Field Name" := "Field Name";
                                                                  END ELSE BEGIN
                                                                    CLEAR(EnhView."Group By Field Type");
                                                                    CLEAR(EnhView."Group By Field No.");
                                                                    CLEAR(EnhView."Group By Field Name");
                                                                  END;

                                                                  EnhView.MODIFY();
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Default Group;
                                                              ENG=Default Group] }
    { 27  ;   ;Editable            ;Boolean       ;CaptionML=[ENU=Editable;
                                                              ENG=Editable] }
    { 28  ;   ;Show All Values     ;Boolean       ;CaptionML=[ENU=Show All Values;
                                                              ENG=Show All Values] }
    { 29  ;   ;Groupable           ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Groupable;
                                                              ENG=Groupable] }
    { 30  ;   ;Sortable            ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Sortable;
                                                              ENG=Sortable] }
    { 31  ;   ;Fast Select         ;Boolean       ;CaptionML=[ENU=Fast Select;
                                                              ENG=Fast Select] }
    { 32  ;   ;Aggregate Function  ;Option        ;CaptionML=[ENU=Aggregate Function;
                                                              ENG=Aggregate Function];
                                                   OptionCaptionML=[ENU=" ,Sum,Average,Min,Max,Count";
                                                                    ENG=" ,Sum,Average,Min,Max,Count"];
                                                   OptionString=[ ,Sum,Average,Min,Max,Count] }
    { 33  ;   ;Value Format Code   ;Code10        ;TableRelation="Value Format";
                                                   CaptionML=[ENU=Value Format Code;
                                                              ENG=Value Format Code] }
    { 34  ;   ;Aggregate Caption   ;Text30        ;CaptionML=[ENU=Aggregate Caption;
                                                              ENG=Aggregate Caption] }
    { 35  ;   ;Number Field        ;Boolean       ;CaptionML=[ENU=Number Field;
                                                              ENG=Number Field] }
    { 36  ;   ;Default Totals      ;Boolean       ;OnValidate=VAR
                                                                EnhViewField@1000000000 : Record 9062807;
                                                              BEGIN
                                                                IF ("Default Totals") THEN BEGIN
                                                                  TESTFIELD("Number Field");

                                                                  EnhViewField.RESET();
                                                                  EnhViewField.SETRANGE("View Code", "View Code");
                                                                  EnhViewField.SETRANGE(Type, Type);
                                                                  EnhViewField.SETFILTER("Line No.", '<>%1', "Line No.");
                                                                  EnhViewField.SETRANGE("Default Totals", TRUE);
                                                                  IF (EnhViewField.FINDFIRST()) THEN BEGIN
                                                                    EnhViewField."Default Totals" := FALSE;
                                                                    EnhViewField.MODIFY();
                                                                  END;

                                                                END;

                                                                IF ("Default Totals" <> xRec."Default Totals") THEN BEGIN
                                                                  GetEnhView(TRUE);

                                                                  IF ("Default Totals") THEN BEGIN
                                                                    EnhView."Totals Field Type" := "Field Type";
                                                                    EnhView."Totals Field No." := "Field No.";
                                                                    EnhView."Totals Field Name" := "Field Name";
                                                                  END ELSE BEGIN
                                                                    CLEAR(EnhView."Totals Field Type");
                                                                    CLEAR(EnhView."Totals Field No.");
                                                                    CLEAR(EnhView."Totals Field Name");
                                                                  END;

                                                                  EnhView.MODIFY();
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Default Totals;
                                                              ENG=Default Totals] }
    { 37  ;   ;Primary Key Field   ;Boolean       ;CaptionML=[ENU=Primary Key Field;
                                                              ENG=Primary Key Field] }
    { 38  ;   ;Index               ;Integer       ;CaptionML=[ENU=Index;
                                                              ENG=Index] }
    { 39  ;   ;Source Record Id    ;RecordID      ;CaptionML=[ENU=Source Record Id;
                                                              ENG=Source Record Id] }
    { 40  ;   ;Field Copy          ;Boolean       ;CaptionML=[ENU=Field Copy;
                                                              ENG=Field Copy] }
    { 41  ;   ;Source Field Line No.;Integer      ;CaptionML=[ENU=Source Field Line No.;
                                                              ENG=Source Field Line No.] }
    { 300 ;   ;Group By Date Function Avail;Boolean;
                                                   CaptionML=[ENU=Group By Date Function Avail;
                                                              ENG=Group By Date Function Avail] }
  }
  KEYS
  {
    {    ;View Code,Type,Line No.                 ;Clustered=Yes }
    {    ;Index                                    }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      EnhView@1000000001 : Record 9062804;
      ObjectFieldToolkit@1000000000 : Codeunit 9062343;
      CriteriaMgt@1000000002 : Codeunit 9062462;

    LOCAL PROCEDURE "--- Get Value ---"@1000000008();
    BEGIN
    END;

    PROCEDURE GetRecRefFieldValue@1000000000(VAR RecRef@1000000000 : RecordRef;VAR Value@1000000007 : Variant) : Text;
    VAR
      RecRefFieldValue@1000000001 : Variant;
    BEGIN
      EXIT(GetRecRefFieldValueAdv(RecRef, RecRefFieldValue, Value));
    END;

    PROCEDURE GetRecRefFieldValueAdv@1000000004(VAR RecRef@1000000000 : RecordRef;VAR RecRefFieldValue@1000000007 : Variant;VAR Value@1000000009 : Variant) : Text;
    VAR
      RecordRefMgt@1000000001 : Codeunit 9062241;
    BEGIN
      RecordRefMgt.GetFieldValue(RecRef, "Field Type", "Field No.", RecRefFieldValue);
      EXIT(GetFieldValueAdv(RecRefFieldValue, Value));
    END;

    PROCEDURE GetFieldValueAdv@1000000014(VAR RecRefFieldValue@1000000007 : Variant;VAR Value@1000000009 : Variant) : Text;
    VAR
      Field@1000000002 : Record 2000000041;
      EnhancedFieldMgt@1000000003 : Codeunit 9062298;
      RecordRefMgt@1000000006 : Codeunit 9062241;
      RelatedRecRef@1000000005 : RecordRef;
      FldRef@1000000001 : FieldRef;
      RelPKFieldRef@1000000008 : FieldRef;
    BEGIN
      //get value from related table
      IF (HasRelation()) THEN BEGIN
        RelatedRecRef.OPEN("Relation Table No.");
        RelPKFieldRef := RelatedRecRef.FIELD("Relation Field No.");
        RelPKFieldRef.SETRANGE(RecRefFieldValue);
        IF (RelatedRecRef.FINDFIRST()) THEN
          RecordRefMgt.GetFieldValue(RelatedRecRef, "Caption Field Type", "Caption Field No.", Value)
        ELSE
          CLEAR(Value);
        RelatedRecRef.CLOSE();
      END ELSE
        Value := RecRefFieldValue;

      EXIT(ProcessFieldValues(RecRefFieldValue, Value));
    END;

    PROCEDURE ProcessFieldValues@1000000010(VAR RecRefFieldValue@1000000001 : Variant;VAR Value@1000000000 : Variant) : Text;
    VAR
      FieldValue@1000000002 : Text;
      FormatExpression@1000000003 : Text;
    BEGIN
      //apply value transformation
      FormatExpression := "Format Expression";
      ApplyValueTransformation(Value, FormatExpression);

      //format value
      IF (FormatExpression = '') THEN
        FieldValue := FORMAT(Value)
      ELSE
        FieldValue := FORMAT(Value, 0, FormatExpression);
      IF (FieldValue = '') THEN
        FieldValue := "Default Value";

      EXIT(FieldValue);
    END;

    LOCAL PROCEDURE ApplyValueTransformation@1000000019(VAR Value@1000000000 : Variant;VAR FormatExpression@1000000003 : Text);
    VAR
      DateValue@1000000001 : Date;
      DateTimeValue@1000000002 : DateTime;
    BEGIN
      IF (Value.ISDATE) OR (Value.ISDATETIME) THEN BEGIN
        IF ("Group By Date Function" <> "Group By Date Function"::Day) THEN BEGIN
          IF (Value.ISDATE) THEN
            Value := TransformDateValue(Value, FormatExpression)
          ELSE BEGIN
            DateTimeValue := Value;
            DateValue := TransformDateValue(DT2DATE(DateTimeValue), FormatExpression);
            Value := CREATEDATETIME(DateValue, 0T);
          END;
        END;
      END;
    END;

    LOCAL PROCEDURE TransformDateValue@1000000028(DateValue@1000000000 : Date;VAR FormatExpression@1000000002 : Text) : Date;
    VAR
      Month@1000000001 : Integer;
      NewFormatExpression@1000000003 : Text;
      txtWeek@1000000007 : TextConst 'ENU=Week <Week> of <Year4>;ENG=Week <Week> of <Year4>';
      txtYearMonth@1000000008 : TextConst 'ENU=<Month Text> <Year4>;ENG=<Month Text> <Year4>';
      txtQuarter@1000000006 : TextConst 'ENU=Quarter <Quarter> of <Year4>;ENG=Quarter <Quarter> of <Year4>';
      txtHalf1@1000000005 : TextConst 'ENU=First half of <Year4>;ENG=First half of <Year4>';
      txtHalf2@1000000004 : TextConst 'ENU=Second half of <Year4>;ENG=Second half of <Year4>';
      txtYear@1000000009 : TextConst 'ENU=<Year4>;ENG=<Year4>';
    BEGIN
      IF (DateValue <> 0D) THEN BEGIN
        CASE ("Group By Date Function") OF
          "Group By Date Function"::"Year Week":
            BEGIN
              DateValue := CALCDATE('<-CW>', DateValue);
              NewFormatExpression := txtWeek;
            END;
          "Group By Date Function"::"Year Month":
            BEGIN
              DateValue := CALCDATE('<-CM>', DateValue);
              NewFormatExpression := txtYearMonth;
            END;
          "Group By Date Function"::"Year Quarter":
            BEGIN
              DateValue := CALCDATE('<-CQ>', DateValue);
              NewFormatExpression := txtQuarter;
            END;
          "Group By Date Function"::"Year Half":
            BEGIN
              Month := DATE2DMY(DateValue, 2);
              IF (Month < 7) THEN BEGIN
                DateValue := DMY2DATE(1, 1, DATE2DMY(DateValue, 3));
                NewFormatExpression := txtHalf1;
              END ELSE BEGIN
                DateValue := DMY2DATE(1, 7, DATE2DMY(DateValue, 3));
                NewFormatExpression := txtHalf2;
              END;
            END;
          "Group By Date Function"::Year:
            BEGIN
              DateValue := CALCDATE('<-CY>', DateValue);
              NewFormatExpression := txtYear;
            END;
        END;
      END;

      IF ((NewFormatExpression <> '') AND (FormatExpression = '')) THEN
        FormatExpression := NewFormatExpression;

      EXIT(DateValue);
    END;

    LOCAL PROCEDURE "--- Edit ---"@1000000006();
    BEGIN
    END;

    PROCEDURE FindRelationFieldNo@1000000001();
    VAR
      RecRef@1000000000 : RecordRef;
      KeyRef@1000000001 : KeyRef;
      FldRef@1000000002 : FieldRef;
    BEGIN
      IF ("Relation Table No." <> 0) AND ("Relation Field No." = 0) THEN BEGIN
        RecRef.OPEN("Relation Table No.");
        KeyRef :=RecRef.KEYINDEX(1);
        FldRef := KeyRef.FIELDINDEX(1);
        VALIDATE("Relation Field No.", FldRef.NUMBER);
        RecRef.CLOSE();
      END;
    END;

    PROCEDURE EditRelationCriteria@1000000002();
    BEGIN
      CriteriaMgt.EditCriteriaAttachedAdvanced("Relation Criteria Id",
        "Relation Table No.", "Table No.",
        DATABASE::"Enhanced View Field", GETPOSITION(FALSE), FIELDNO("Relation Criteria Id"), TRUE);
      MODIFY();
    END;

    PROCEDURE EditTableCriteria@1000000007();
    BEGIN
      CriteriaMgt.EditCriteriaAttached("Table Criteria Id", "Table No.",
        DATABASE::"Enhanced View Field", GETPOSITION(FALSE), FIELDNO("Table Criteria Id"), TRUE);
      MODIFY();
    END;

    PROCEDURE UpdateFieldName@1000000003();
    BEGIN
      IF (Type = Type::"Grid Column") THEN
        Name := 'Field' + FORMAT("Line No.", 0, 9);
    END;

    LOCAL PROCEDURE GetEnhView@1000000009(ForceReload@1000000000 : Boolean);
    BEGIN
      IF ((EnhView.Code <> "View Code") OR (ForceReload)) THEN BEGIN
        IF (NOT(EnhView.GET("View Code"))) THEN BEGIN
          CLEAR(EnhView);
          EnhView.INIT();
        END;
      END;
    END;

    PROCEDURE Equals@1000000005(VAR EnhViewField@1000000000 : Record 9062807) : Boolean;
    BEGIN
      EXIT(
        FieldEquals(EnhViewField) AND
        ("Group By Date Function" = EnhViewField."Group By Date Function"));
    END;

    PROCEDURE FieldEquals@1000000013(VAR EnhViewField@1000000000 : Record 9062807) : Boolean;
    BEGIN
      EXIT(
       ("View Code" = EnhViewField."View Code") AND
       ("Line No." = EnhViewField."Line No.") AND
       ("Field Type" = EnhViewField."Field Type") AND
       ("Field No." = EnhViewField."Field No.") AND
       ("Relation Table No." =  EnhViewField."Relation Table No.") AND
       ("Relation Field No." = EnhViewField."Relation Field No.") AND
       ("Caption Field Type" = EnhViewField."Caption Field Type") AND
       ("Caption Field No." = EnhViewField."Caption Field No."));
    END;

    PROCEDURE HasRelation@1000000011() : Boolean;
    BEGIN
      EXIT(
        (Rec."Relation Table No." <> 0) AND
        (Rec."Relation Field No." <> 0) AND
        (Rec."Caption Field No." <> 0) AND
        (Rec."Caption Field Type" <> Rec."Caption Field Type"::" "));
    END;

    BEGIN
    {
      //DOC NA2016.12 AZ 21/01/2016 - Created
      //DOC NA2016.14 AZ 26/02/2016 - Grid View added, bugfixes
      //DOC NA2016.14 AZ 03/03/2016 - "Number Format" option field replaced with "Value Format Code" field
      //DOC NA2016.15 AZ 12/04/2016 - Midifications and bugfixes, Quick Reports support added
      //DOC NA2016.15 JH 06/05/2016 - CfMD amendments
    }
    END.
  }
}

