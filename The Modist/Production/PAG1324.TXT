OBJECT Page 1324 Mini Sales Quote
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00,NAVGB9.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Sales Quote;
               ENG=Sales Quote];
    SourceTable=Table36;
    SourceTableView=WHERE(Document Type=FILTER(Quote));
    PageType=Document;
    RefreshOnActivate=Yes;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Quote,Posting,View;
                                ENG=New,Process,Report,Quote,Posting,View];
    OnInit=BEGIN
             ShowBillToShipToTab := FALSE;
             ShowDetailsTab := FALSE;
           END;

    OnOpenPage=BEGIN
                 IF UserSetupManagement.GetSalesFilter <> '' THEN BEGIN
                   FILTERGROUP(2);
                   SETRANGE("Responsibility Center",UserSetupManagement.GetSalesFilter);
                   FILTERGROUP(0);
                 END;

                 IF OfficeHost.IsAvailable THEN BEGIN
                   OfficeHost := OfficeHost.Create;
                   IF OfficeHost.HostType = 'Outlook-ItemEdit' THEN
                     OutlookComposeFormAvailable := TRUE;
                   IF OfficeHost.HostType = 'Outlook-ItemRead' THEN
                     OutlookReadFormAvailable := TRUE;
                 END;
               END;

    OnAfterGetRecord=BEGIN
                       CustomerSelected := "Sell-to Customer No." <> '';
                     END;

    OnNewRecord=BEGIN
                  "Responsibility Center" := UserSetupManagement.GetSalesFilter;
                END;

    OnDeleteRecord=BEGIN
                     CurrPage.SAVERECORD;
                     EXIT(ConfirmDeletion);
                   END;

    ActionList=ACTIONS
    {
      { 1900000003;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 31      ;1   ;ActionGroup;
                      Name=Process;
                      CaptionML=[ENU=Process;
                                 ENG=Process] }
      { 35      ;2   ;Action    ;
                      Name=MakeInvoice;
                      CaptionML=[ENU=Make Invoice;
                                 ENG=Make Invoice];
                      ToolTipML=[ENU=Convert the sales quote to a sales invoice.;
                                 ENG=Convert the sales quote to a sales invoice.];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=MakeOrder;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MiniLinesInstructionMgt.SalesCheckAllLinesHaveQuantityAssigned(Rec);
                                 CODEUNIT.RUN(CODEUNIT::"Sales-Quote to Invoice Yes/No",Rec);
                               END;
                                }
      { 37      ;2   ;Action    ;
                      Name=Print;
                      Ellipsis=Yes;
                      CaptionML=[ENU=&Print;
                                 ENG=&Print];
                      ToolTipML=[ENU=Print the sales quote.;
                                 ENG=Print the sales quote.];
                      Promoted=Yes;
                      Image=Print;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MiniLinesInstructionMgt.SalesCheckAllLinesHaveQuantityAssigned(Rec);
                                 DocPrint.PrintSalesHeader(Rec);
                               END;
                                }
      { 32      ;2   ;Action    ;
                      Name=Email;
                      CaptionML=[ENU=&Email;
                                 ENG=&Email];
                      ToolTipML=[ENU=Attach the sales quote to an email to the customer.;
                                 ENG=Attach the sales quote to an email to the customer.];
                      Promoted=Yes;
                      Visible=NOT (OutlookComposeFormAvailable OR OutlookReadFormAvailable);
                      PromotedIsBig=Yes;
                      Image=Email;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ReportDistributionManagement@1000 : Codeunit 452;
                               BEGIN
                                 MiniLinesInstructionMgt.SalesCheckAllLinesHaveQuantityAssigned(Rec);
                                 ReportDistributionManagement.EmailDocumentReport(Rec);
                               END;
                                }
      { 16      ;2   ;Action    ;
                      Name=Attach;
                      CaptionML=[ENU=Attach;
                                 ENG=Attach];
                      Promoted=Yes;
                      Visible=OutlookReadFormAvailable OR OutlookComposeFormAvailable;
                      PromotedIsBig=Yes;
                      Image=Email;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 TempBlob@1000 : Record 99008535;
                                 ReportDistributionManagement@1001 : Codeunit 452;
                               BEGIN
                                 MiniLinesInstructionMgt.SalesCheckAllLinesHaveQuantityAssigned(Rec);
                                 ReportDistributionManagement.GetReportPDFAsBlob(Rec,TempBlob);

                                 IF OutlookReadFormAvailable THEN
                                   OfficeHost.InvokeExtensionAsync('replyWithAttachment',TempBlob.Blob,QuotePdfTxt);
                               END;
                                }
      { 57      ;1   ;ActionGroup;
                      Name=Quote;
                      CaptionML=[ENU=&Quote;
                                 ENG=&Quote];
                      Image=Invoice }
      { 60      ;2   ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Customer;
                                 ENG=Customer];
                      ToolTipML=[ENU=View or edit detailed information about the customer.;
                                 ENG=View or edit detailed information about the customer.];
                      RunObject=Page 1300;
                      RunPageLink=No.=FIELD(Sell-to Customer No.);
                      Promoted=Yes;
                      Enabled=CustomerSelected;
                      PromotedIsBig=Yes;
                      Image=Customer;
                      PromotedCategory=Category4 }
      { 134     ;2   ;Action    ;
                      Name=GetRecurringSalesLines;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Get Recurring Sales Lines;
                                 ENG=Get Recurring Sales Lines];
                      ToolTipML=[ENU=Insert sales document lines that you have set up for the customer as recurring. Recurring sales lines could be for a monthly replenishment order or a fixed freight expense.;
                                 ENG=Insert sales document lines that you have set up for the customer as recurring. Recurring sales lines could be for a monthly replenishment order or a fixed freight expense.];
                      PromotedIsBig=Yes;
                      Image=CustomerCode;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 StdCustSalesCode@1000 : Record 172;
                               BEGIN
                                 TESTFIELD("No.");
                                 TESTFIELD("Sell-to Customer No.");

                                 StdCustSalesCode.FILTERGROUP := 2;
                                 StdCustSalesCode.SETRANGE("Customer No.","Sell-to Customer No.");
                                 StdCustSalesCode.FILTERGROUP := 0;

                                 IF PAGE.RUNMODAL(PAGE::"Mini Std Customer Sales Codes",StdCustSalesCode) = ACTION::LookupOK THEN
                                   StdCustSalesCode.ApplyStdCodesToSalesLines(Rec,StdCustSalesCode);
                               END;
                                }
      { 64      ;2   ;Action    ;
                      Name=CopyDocument;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Copy Document;
                                 ENG=Copy Document];
                      ToolTipML=[ENU=Copy document lines and header information from another sales document to this document. You can copy a sales invoice into a sales quote to quickly create a similar document.;
                                 ENG=Copy document lines and header information from another sales document to this document. You can copy a sales invoice into a sales quote to quickly create a similar document.];
                      PromotedIsBig=Yes;
                      Image=CopyDocument;
                      PromotedCategory=New;
                      OnAction=BEGIN
                                 CopySalesDoc.SetSalesHeader(Rec);
                                 CopySalesDoc.RUNMODAL;
                                 CLEAR(CopySalesDoc);
                               END;
                                }
      { 10      ;2   ;Action    ;
                      Name=Dimensions;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 ENG=Dimensions];
                      ToolTipML=[ENU=View or edit the dimension sets that are set up for the customer on the sales document.;
                                 ENG=View or edit the dimension sets that are set up for the customer on the sales document.];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Dimensions;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 ShowDocDim;
                                 CurrPage.SAVERECORD;
                               END;
                                }
      { 3       ;1   ;ActionGroup;
                      Name=View;
                      CaptionML=[ENU=View;
                                 ENG=View] }
      { 4       ;2   ;Action    ;
                      Name=Ship-to and Bill-to Address;
                      CaptionML=[ENU=Ship-to and Bill-to Address;
                                 ENG=Ship-to and Bill-to Address];
                      ToolTipML=[ENU=Show fields for the customer's shipping and billing addresses. You can specify a different address where the item or service is delivered or specify a different address where the document is sent.;
                                 ENG=Show fields for the customer's shipping and billing addresses. You can specify a different address where the item or service is delivered or specify a different address where the document is sent.];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ShipAddress;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 ShowBillToShipToTab := NOT ShowBillToShipToTab;
                               END;
                                }
      { 5       ;2   ;Action    ;
                      Name=QuoteDetails;
                      CaptionML=[ENU=Quote Details;
                                 ENG=Quote Details];
                      ToolTipML=[ENU=Show fields for quote details, such as currency, and payment terms.;
                                 ENG=Show fields for quote details, such as currency, and payment terms.];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=TaxDetail;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 ShowDetailsTab := NOT ShowDetailsTab;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=SalesQuote;
                CaptionML=[ENU=Sales Quote;
                           ENG=Sales Quote];
                GroupType=Group }

    { 13  ;2   ;Group     ;
                GroupType=Group }

    { 6   ;3   ;Field     ;
                CaptionML=[ENU=Customer Name;
                           ENG=Customer Name];
                ToolTipML=[ENU=Specifies the name of the customer who will receive the products and be billed by default. The value is automatically inserted from the customer card when you fill the Sell-to Customer No. field. The value will appear on the printed sales document.;
                           ENG=Specifies the name of the customer who will receive the products and be billed by default. The value is automatically inserted from the customer card when you fill the Sell-to Customer No. field. The value will appear on the printed sales document.];
                NotBlank=Yes;
                SourceExpr="Sell-to Customer Name";
                OnValidate=BEGIN
                             IF MiniCustomerMgt.ValidateSellToCustomer(Rec,xRec) THEN
                               CurrPage.UPDATE;
                           END;

                OnLookup=BEGIN
                           IF MiniCustomerMgt.LookupSellToCustomer(Rec,xRec) THEN
                             CurrPage.UPDATE;
                         END;

                ShowMandatory=TRUE }

    { 75  ;3   ;Field     ;
                CaptionML=[ENU=Address;
                           ENG=Address];
                ToolTipML=[ENU=Specifies the address where the customer is located. The value is automatically inserted from the customer card when you fill the Sell-to Customer No. field. The value will appear on the printed sales document.;
                           ENG=Specifies the address where the customer is located. The value is automatically inserted from the customer card when you fill the Sell-to Customer No. field. The value will appear on the printed sales document.];
                SourceExpr="Sell-to Address" }

    { 11  ;3   ;Field     ;
                CaptionML=[ENU=Address 2;
                           ENG=Address 2];
                ToolTipML=[ENU=Specifies an additional part of the address where the customer is located. The value is automatically inserted from the customer card when you fill the Sell-to Customer No. field. The value will appear on the printed sales document.;
                           ENG=Specifies an additional part of the address where the customer is located. The value is automatically inserted from the customer card when you fill the Sell-to Customer No. field. The value will appear on the printed sales document.];
                SourceExpr="Sell-to Address 2" }

    { 80  ;3   ;Field     ;
                CaptionML=[ENU=Post Code;
                           ENG=Post Code];
                ToolTipML=[ENU=Specifies the post code where the customer is located. The value is automatically inserted from the customer card when you fill the Sell-to Customer No. field. The value will appear on the printed sales document.;
                           ENG=Specifies the post code where the customer is located. The value is automatically inserted from the customer card when you fill the Sell-to Customer No. field. The value will appear on the printed sales document.];
                SourceExpr="Sell-to Post Code" }

    { 79  ;3   ;Field     ;
                CaptionML=[ENU=City;
                           ENG=City];
                ToolTipML=[ENU=Specifies the name of the city where the customer is located. The value is automatically inserted from the customer card when you fill the Sell-to Customer No. field. The value will appear on the printed sales document.;
                           ENG=Specifies the name of the city where the customer is located. The value is automatically inserted from the customer card when you fill the Sell-to Customer No. field. The value will appear on the printed sales document.];
                SourceExpr="Sell-to City" }

    { 1040000;3;Field     ;
                CaptionML=[ENU=County;
                           ENG=County];
                ToolTipML=[ENU=Specifies the county of the customer that you sell the items to.;
                           ENG=Specifies the county of the customer that you sell the items to.];
                SourceExpr="Sell-to County" }

    { 15  ;2   ;Group     ;
                GroupType=Group }

    { 8   ;3   ;Field     ;
                CaptionML=[ENU=Contact;
                           ENG=Contact];
                ToolTipML=[ENU=Specifies the name of the person to contact at the customer. The value is automatically inserted from the customer card when you fill the Sell-to Customer No. field. The value will appear on the printed sales document.;
                           ENG=Specifies the name of the person to contact at the customer. The value is automatically inserted from the customer card when you fill the Sell-to Customer No. field. The value will appear on the printed sales document.];
                SourceExpr="Sell-to Contact" }

    { 43  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the date on which you create the sales document. The date will appear on the printed sales document. By default, today's date is entered.;
                           ENG=Specifies the date on which you create the sales document. The date will appear on the printed sales document. By default, today's date is entered.];
                SourceExpr="Document Date" }

    { 12  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the date that the customer has asked for the order to be delivered. The shipment date is calculated from this field. If you leave the field empty, the earliest possible delivery date is calculated and inserted.;
                           ENG=Specifies the date that the customer has asked for the order to be delivered. The shipment date is calculated from this field. If you leave the field empty, the earliest possible delivery date is calculated and inserted.];
                SourceExpr="Requested Delivery Date";
                Importance=Promoted }

    { 33  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the date you expect to ship items on the sales document. By default, today's date is entered.;
                           ENG=Specifies the date you expect to ship items on the sales document. By default, today's date is entered.];
                SourceExpr="Shipment Date" }

    { 112 ;3   ;Field     ;
                ToolTipML=[ENU=Specifies whether the document is open, waiting to be approved, has been invoiced for prepayment, or has been released to the next stage of processing.;
                           ENG=Specifies whether the document is open, waiting to be approved, has been invoiced for prepayment, or has been released to the next stage of processing.];
                SourceExpr=Status;
                Importance=Promoted;
                Visible=FALSE }

    { 28  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies when the sales invoice must be paid. By default, the field is calculated as the date in the Shipment Date field plus the period defined in the Payment Terms Code field.;
                           ENG=Specifies when the sales invoice must be paid. By default, the field is calculated as the date in the Shipment Date field plus the period defined in the Payment Terms Code field.];
                SourceExpr="Due Date";
                Importance=Promoted }

    { 7   ;1   ;Group     ;
                Name=QuoteDetails;
                CaptionML=[ENU=Quote Details;
                           ENG=Quote Details];
                Visible=ShowDetailsTab;
                GroupType=Group }

    { 107 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the currency of amounts on the sales document. By default, the field is filled with the value in the Currency Code field on the customer card.;
                           ENG=Specifies the currency of amounts on the sales document. By default, the field is filled with the value in the Currency Code field on the customer card.];
                SourceExpr="Currency Code";
                Importance=Promoted;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                             MiniSalesCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);
                           END;

                OnAssistEdit=BEGIN
                               CLEAR(ChangeExchangeRate);
                               IF "Posting Date" <> 0D THEN
                                 ChangeExchangeRate.SetParameter("Currency Code","Currency Factor","Posting Date")
                               ELSE
                                 ChangeExchangeRate.SetParameter("Currency Code","Currency Factor",WORKDATE);
                               IF ChangeExchangeRate.RUNMODAL = ACTION::OK THEN BEGIN
                                 VALIDATE("Currency Factor",ChangeExchangeRate.GetParameter);
                                 CurrPage.UPDATE;
                               END;
                               CLEAR(ChangeExchangeRate);
                             END;
                              }

    { 156 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the customer's VAT specification to link transactions made for this customer with the appropriate general ledger account according to the VAT posting setup.;
                           ENG=Specifies the customer's VAT specification to link transactions made for this customer with the appropriate general ledger account according to the VAT posting setup.];
                SourceExpr="VAT Bus. Posting Group";
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                             MiniSalesCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);
                           END;
                            }

    { 121 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies whether the unit price on the line should be displayed including or excluding VAT.;
                           ENG=Specifies whether the unit price on the line should be displayed including or excluding VAT.];
                SourceExpr="Prices Including VAT";
                Visible=FALSE;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                             CALCFIELDS("Invoice Discount Amount");
                             MiniSalesCalcDiscByType.ApplyDefaultInvoiceDiscount("Invoice Discount Amount",Rec);
                           END;
                            }

    { 26  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a formula that calculates the payment due date, payment discount date, and payment discount amount on the sales document. By default, the payment term from the customer card is entered.;
                           ENG=Specifies a formula that calculates the payment due date, payment discount date, and payment discount amount on the sales document. By default, the payment term from the customer card is entered.];
                SourceExpr="Payment Terms Code";
                Importance=Promoted }

    { 101 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how payment for the sales document must be submitted, such as bank transfer or check. By default, the payment method from the customer card is entered.;
                           ENG=Specifies how payment for the sales document must be submitted, such as bank transfer or cheque. By default, the payment method from the customer card is entered.];
                SourceExpr="Payment Method Code" }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number for the transaction type, for the purpose of reporting to INTRASTAT.;
                           ENG=Specifies the number for the transaction type, for the purpose of reporting to INTRASTAT.];
                SourceExpr="Transaction Type" }

    { 1905885101;1;Group  ;
                Name=BillToAndShipToAddresses;
                CaptionML=[ENU=Ship-to and Bill-to Addresses;
                           ENG=Ship-to and Bill-to Addresses];
                Visible=ShowBillToShipToTab;
                GroupType=Group }

    { 41  ;2   ;Group     ;
                Name=ShipToAddress;
                CaptionML=[ENU=Ship-to Address;
                           ENG=Ship-to Address];
                GroupType=Group }

    { 40  ;3   ;Field     ;
                CaptionML=[ENU=Address Code;
                           ENG=Address Code];
                ToolTipML=[ENU=Specifies the code for another shipment address than the customer's own address, which is entered by default. To ship products on the sales document to another address, choose the button in the Ship-to Code field and select a code that represents a ship-to address.;
                           ENG=Specifies the code for another shipment address than the customer's own address, which is entered by default. To ship products on the sales document to another address, choose the button in the Ship-to Code field and select a code that represents a ship-to address.];
                SourceExpr="Ship-to Code";
                Importance=Promoted }

    { 38  ;3   ;Field     ;
                CaptionML=[ENU=Name;
                           ENG=Name];
                ToolTipML=[ENU=Specifies the name that products on the sales document will be shipped to. By default, the field is filled with the value in the Name field on the customer card or with the value in the Name field in the Ship-to Address window.;
                           ENG=Specifies the name that products on the sales document will be shipped to. By default, the field is filled with the value in the Name field on the customer card or with the value in the Name field in the Ship-to Address window.];
                SourceExpr="Ship-to Name" }

    { 39  ;3   ;Field     ;
                CaptionML=[ENU=Address;
                           ENG=Address];
                ToolTipML=[ENU=Specifies the address that products on the sales document will be shipped to. By default, the field is filled with the value in the Address field on the customer card or with the value in the Address field in the Ship-to Address window.;
                           ENG=Specifies the address that products on the sales document will be shipped to. By default, the field is filled with the value in the Address field on the customer card or with the value in the Address field in the Ship-to Address window.];
                SourceExpr="Ship-to Address" }

    { 36  ;3   ;Field     ;
                CaptionML=[ENU=Address 2;
                           ENG=Address 2];
                ToolTipML=[ENU=Specifies the second part of the address that products on the sales document will be shipped to. By default, the field is filled with the value in the Address 2 field on the customer card or with the value in the Address 2 field in the Ship-to Address window.;
                           ENG=Specifies the second part of the address that products on the sales document will be shipped to. By default, the field is filled with the value in the Address 2 field on the customer card or with the value in the Address 2 field in the Ship-to Address window.];
                SourceExpr="Ship-to Address 2" }

    { 34  ;3   ;Field     ;
                CaptionML=[ENU=Post Code;
                           ENG=Post Code];
                ToolTipML=[ENU=Specifies the post code of the customer's shipping address.;
                           ENG=Specifies the post code of the customer's shipping address.];
                SourceExpr="Ship-to Post Code" }

    { 21  ;3   ;Field     ;
                CaptionML=[ENU=City;
                           ENG=City];
                ToolTipML=[ENU=Specifies the city name of the address that products on the sales document will be shipped to. By default, the field is filled with the value in the City field on the customer card or with the value in the City field in the Ship-to Address window.;
                           ENG=Specifies the city name of the address that products on the sales document will be shipped to. By default, the field is filled with the value in the City field on the customer card or with the value in the City field in the Ship-to Address window.];
                SourceExpr="Ship-to City" }

    { 1040002;3;Field     ;
                CaptionML=[ENU=County;
                           ENG=County];
                ToolTipML=[ENU=Specifies the county of the customer's shipping address.;
                           ENG=Specifies the county of the customer's shipping address.];
                SourceExpr="Ship-to County" }

    { 20  ;3   ;Field     ;
                CaptionML=[ENU=Contact;
                           ENG=Contact];
                ToolTipML=[ENU=Specifies the name of the contact person at the address that products on the sales document will be shipped to. By default, the field is filled with the value in the Primary Contact No. field on the customer card.;
                           ENG=Specifies the name of the contact person at the address that products on the sales document will be shipped to. By default, the field is filled with the value in the Primary Contact No. field on the customer card.];
                SourceExpr="Ship-to Contact" }

    { 19  ;2   ;Group     ;
                Name=BillToCustomer;
                CaptionML=[ENU=Bill-to Customer;
                           ENG=Bill-to Customer];
                GroupType=Group }

    { 14  ;3   ;Field     ;
                CaptionML=[ENU=Name;
                           ENG=Name];
                ToolTipML=[ENU=Specifies the customer to whom you will send the sales invoice, when different from the customer that you are selling to. By default, the name and address of the customer that you are selling to is entered.;
                           ENG=Specifies the customer to whom you will send the sales invoice, when different from the customer that you are selling to. By default, the name and address of the customer that you are selling to is entered.];
                SourceExpr="Bill-to Name";
                OnValidate=BEGIN
                             IF MiniCustomerMgt.ValidateBillToCustomer(Rec,xRec) THEN
                               CurrPage.UPDATE;
                           END;

                OnLookup=BEGIN
                           IF MiniCustomerMgt.LookupBillToCustomer(Rec,xRec) THEN
                             CurrPage.UPDATE;
                         END;
                          }

    { 18  ;3   ;Field     ;
                CaptionML=[ENU=Address;
                           ENG=Address];
                ToolTipML=[ENU=Specifies the address of the customer that you will send the invoice to.;
                           ENG=Specifies the address of the customer that you will send the invoice to.];
                SourceExpr="Bill-to Address" }

    { 9   ;3   ;Field     ;
                CaptionML=[ENU=Address 2;
                           ENG=Address 2];
                ToolTipML=[ENU=Contains another line of the address of the customer that you will send the invoice to.;
                           ENG=Contains another line of the address of the customer that you will send the invoice to.];
                SourceExpr="Bill-to Address 2" }

    { 85  ;3   ;Field     ;
                CaptionML=[ENU=Post Code;
                           ENG=Post Code];
                ToolTipML=[ENU=Specifies the post code of the customer's billing address.;
                           ENG=Specifies the post code of the customer's billing address.];
                SourceExpr="Bill-to Post Code" }

    { 22  ;3   ;Field     ;
                CaptionML=[ENU=City;
                           ENG=City];
                ToolTipML=[ENU=Specifies the city name of the customer that you will send the invoice to.;
                           ENG=Specifies the city name of the customer that you will send the invoice to.];
                SourceExpr="Bill-to City" }

    { 1040001;3;Field     ;
                CaptionML=[ENU=County;
                           ENG=County];
                ToolTipML=[ENU=Specifies the county of the customer's billing address.;
                           ENG=Specifies the county of the customer's billing address.];
                SourceExpr="Bill-to County" }

    { 24  ;3   ;Field     ;
                CaptionML=[ENU=Contact;
                           ENG=Contact];
                ToolTipML=[ENU=Specifies the name of the person you should contact at the customer that you are sending the invoice to.;
                           ENG=Specifies the name of the person you should contact at the customer that you are sending the invoice to.];
                SourceExpr="Bill-to Contact" }

    { 17  ;1   ;Part      ;
                Name=SalesLines;
                SubPageLink=Document No.=FIELD(No.);
                PagePartID=Page1325 }

  }
  CODE
  {
    VAR
      CopySalesDoc@1000 : Report 292;
      UserSetupManagement@1004 : Codeunit 5700;
      MiniSalesCalcDiscByType@1002 : Codeunit 1300;
      MiniCustomerMgt@1003 : Codeunit 1302;
      DocPrint@1008 : Codeunit 229;
      MiniLinesInstructionMgt@1010 : Codeunit 1320;
      ChangeExchangeRate@1001 : Page 511;
      OfficeHost@1009 : DotNet "'Microsoft.Dynamics.Nav.ClientExtensions, Version=9.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.Hosts.OfficeHost" RUNONCLIENT;
      ShowBillToShipToTab@1005 : Boolean;
      ShowDetailsTab@1007 : Boolean;
      CustomerSelected@1006 : Boolean;
      OutlookComposeFormAvailable@1012 : Boolean;
      OutlookReadFormAvailable@1011 : Boolean;
      QuotePdfTxt@1013 : TextConst 'ENU=Quote.pdf;ENG=Quote.pdf';

    BEGIN
    END.
  }
}

