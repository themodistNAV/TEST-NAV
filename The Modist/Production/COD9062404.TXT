OBJECT Codeunit 9062404 Ask nOra - On First use
{
  OBJECT-PROPERTIES
  {
    Date=10/05/16;
    Time=12:00:00 PM;
    Version List=NA2016.15;
  }
  PROPERTIES
  {
    OnRun=VAR
            SMTPMail@1000000000 : Codeunit 400;
          BEGIN
            SetupSearchTables;
            SetupFunctions;
            SetupActions;
            SetupIgnoreWords;
            SetupTextSnippets;
          END;

  }
  CODE
  {

    PROCEDURE SetupSearchTables@1000000000();
    VAR
      ANSearchTable@1000000003 : Record 9062515;
      ANSearchField@1000000001 : Record 9062516;
    BEGIN
      CreateSearchTable(ANSearchTable,DATABASE::"Ask nOra - Question Choice",TRUE);
      CreateSearchField(ANSearchTable."Table No.",FALSE,3); //Description
      CreateSearchField(ANSearchTable."Table No.",FALSE,6); //Choice ID as Code

      CreateSearchTable(ANSearchTable,DATABASE::"Ask nOra - Function",TRUE);
      CreateSearchField(ANSearchTable."Table No.",FALSE,1); //Code
      CreateSearchField(ANSearchTable."Table No.",FALSE,2); //Description

      CreateSearchTable(ANSearchTable,DATABASE::"Ask nOra - Search Results Sum.",TRUE);
      CreateSearchField(ANSearchTable."Table No.",FALSE,4); //Record Description
      CreateSearchField(ANSearchTable."Table No.",FALSE,2); //Table Name

      CreateSearchTable(ANSearchTable,DATABASE::"Ask nOra - Action",TRUE);
      CreateSearchField(ANSearchTable."Table No.",FALSE,1); //Code
      CreateSearchField(ANSearchTable."Table No.",FALSE,2); //Name

      CreateSearchTable(ANSearchTable,DATABASE::"Ask nOra - Text Snippets",TRUE);
      CreateSearchField(ANSearchTable."Table No.",FALSE,1); //Code
      CreateSearchField(ANSearchTable."Table No.",FALSE,3); //Name

      CreateSearchTable(ANSearchTable,DATABASE::Table9062319,FALSE);
      CreateSearchField(ANSearchTable."Table No.",FALSE,5); //Description

      CreateSearchTable(ANSearchTable,DATABASE::Customer,FALSE);
      CreateSearchField(ANSearchTable."Table No.",FALSE,1); //No.
      CreateSearchField(ANSearchTable."Table No.",FALSE,2); //Name

      CreateSearchTable(ANSearchTable,DATABASE::Vendor,FALSE);
      CreateSearchField(ANSearchTable."Table No.",FALSE,1); //No.
      CreateSearchField(ANSearchTable."Table No.",FALSE,2); //Name

      CreateSearchTable(ANSearchTable,DATABASE::Item,FALSE);
      CreateSearchField(ANSearchTable."Table No.",FALSE,1); //No.
      CreateSearchField(ANSearchTable."Table No.",FALSE,3); //Description

      CreateSearchTable(ANSearchTable,DATABASE::"Sales Header",FALSE);
      CreateSearchField(ANSearchTable."Table No.",FALSE,3); //No.
      CreateSearchField(ANSearchTable."Table No.",FALSE,22); //Posting Description

      CreateSearchTable(ANSearchTable,DATABASE::"Purchase Header",FALSE);
      CreateSearchField(ANSearchTable."Table No.",FALSE,3); //No.
      CreateSearchField(ANSearchTable."Table No.",FALSE,22); //Posting Description

      CreateSearchTable(ANSearchTable,DATABASE::"Sales Invoice Header",FALSE);
      CreateSearchField(ANSearchTable."Table No.",FALSE,3); //No.
      CreateSearchField(ANSearchTable."Table No.",FALSE,22); //Posting Description

      CreateSearchTable(ANSearchTable,DATABASE::"Purch. Inv. Header",FALSE);
      CreateSearchField(ANSearchTable."Table No.",FALSE,3); //No.
      CreateSearchField(ANSearchTable."Table No.",FALSE,22); //Posting Description

      CreateSearchTable(ANSearchTable,DATABASE::"G/L Account",FALSE);
      CreateSearchField(ANSearchTable."Table No.",FALSE,1); //No.
      CreateSearchField(ANSearchTable."Table No.",FALSE,2); //Name

      CreateSearchTable(ANSearchTable,DATABASE::Resource,FALSE);
      CreateSearchField(ANSearchTable."Table No.",FALSE,1); //No.
      CreateSearchField(ANSearchTable."Table No.",FALSE,3); //Name
    END;

    PROCEDURE SetupFunctions@1000000001();
    VAR
      ANFunction@1000000001 : Record 9062521;
      ANAction@1000000000 : Record 9062520;
      ANRecordAlias@1000000002 : Record 9062505;
      eHelloCode@1000000003 : TextConst 'ENU=HELLO;ENG=HELLO';
      eHelloDescription@1000000004 : TextConst 'ENU=Say hello;ENG=Say hello';
      eForgetItCode@1000000005 : TextConst 'ENU=FORGET IT;ENG=FORGET IT';
      eForgetItDescription@1000000006 : TextConst 'ENU=Start the conversation over;ENG=Start the conversation over';
      eActionCode@1000000007 : TextConst 'ENU=ACTION;ENG=ACTION';
      eActionDescription@1000000008 : TextConst 'ENU=Actions;ENG=Actions';
      eTextSnippetCode@1000000009 : TextConst 'ENU=TEXTSNIPPET;ENG=TEXTSNIPPET';
      eTextSnippetDescription@1000000010 : TextConst 'ENU=Show the contents of a text snippet;ENG=Show the contents of a text snippet';
    BEGIN
      CreateFunction(ANFunction,eHelloCode,eHelloDescription,1000,TRUE);
      CreateAlias(DATABASE::"Ask nOra - Function",'HI',ANFunction.GETPOSITION);
      CreateAlias(DATABASE::"Ask nOra - Function",'HEY',ANFunction.GETPOSITION);

      CreateFunction(ANFunction,eForgetItCode,eForgetItDescription,2,TRUE);

      CreateFunction(ANFunction,eActionCode,eActionDescription,50,TRUE);

      CreateFunction(ANFunction,eTextSnippetCode,eTextSnippetDescription,1,TRUE);
    END;

    PROCEDURE SetupActions@1000000003();
    VAR
      ANFunction@1000000001 : Record 9062521;
      ANAction@1000000000 : Record 9062520;
      ANRecordAlias@1000000002 : Record 9062505;
      eDebugCode@1000000003 : TextConst 'ENU=DEBUG;ENG=DEBUG';
      eDebugDescription@1000000004 : TextConst 'ENU=Show my workings;ENG=Show my workings';
      eGetFieldValueCode@1000000005 : TextConst 'ENU=GET FIELD VALUE;ENG=GET FIELD VALUE';
      eGetFieldValueDescription@1000000006 : TextConst 'ENU=Get Value of Field for Record in NAV;ENG=Get Value of Field for Record in NAV';
      eTellMeCode@1000000007 : TextConst 'ENU=TELL ME;ENG=TELL ME';
      eWhatIsTheCode@1000000008 : TextConst 'ENU=WHAT IS THE;ENG=WHAT IS THE';
      eWhatsTheCode@1000000009 : TextConst 'ENU=WHATS THE;ENG=WHATS THE';
      eHowManyCode@1000000010 : TextConst 'ENU=HOW MANY;ENG=HOW MANY';
      eHowMuchCode@1000000011 : TextConst 'ENU=HOW MUCH;ENG=HOW MUCH';
      eShowRecordCode@1000000012 : TextConst 'ENU=SHOW RECORD;ENG=SHOW RECORD';
      eShowRecordDescription@1000000013 : TextConst 'ENU=Showing a NAV record;ENG=Showing a NAV record';
      eShowCode@1000000014 : TextConst 'ENU=SHOW;ENG=SHOW';
      eOrderMeCode@1000000015 : TextConst 'ENU=ORDER ME;ENG=ORDER ME';
      eOrderMeDescription@1000000016 : TextConst 'ENU=Create a Purchase Order for an Item;ENG=Create a Purchase Order for an Item';
      eBuyCode@1000000017 : TextConst 'ENU=BUY;ENG=BUY';
      eOrderSomeCode@1000000018 : TextConst 'ENU=ORDER SOME;ENG=ORDER SOME';
      eGetDirectionsCode@1000000019 : TextConst 'ENU=GET DIRECTIONS;ENG=GET DIRECTIONS';
      eGetDirectionsDescription@1000000020 : TextConst 'ENU=Get Directions to a Contact, Customer or Vendor;ENG=Get Directions to a Contact, Customer or Vendor';
      eHowDoIGetToCode@1000000021 : TextConst 'ENU=HOW DO I GET TO;ENG=HOW DO I GET TO';
      eGiveDirectionsCode@1000000022 : TextConst 'ENU=GIVE DIRECTIONS;ENG=GIVE DIRECTIONS';
      eWikiCode@1000000023 : TextConst 'ENU=WIKI;ENG=WIKI';
      eWikiDescription@1000000024 : TextConst 'ENU=Search Wikipedia;ENG=Search Wikipedia';
      eWikipediaCode@1000000025 : TextConst 'ENU=WIKIPEDIA;ENG=WIKIPEDIA';
      eWolframCode@1000000026 : TextConst 'ENU=WOLFRAM;ENG=WOLFRAM';
      eWolframDescription@1000000027 : TextConst 'ENU=Search Wolfram Alpha;ENG=Search Wolfram Alpha';
      eWoflframAlphCode@1000000028 : TextConst 'ENU=WOLFRAM ALPH;ENG=WOLFRAM ALPH';
      eExchangeRateCode@1000000029 : TextConst 'ENU=EXCHANGE RATE;ENG=EXCHANGE RATE';
      eFindOutCode@1000000030 : TextConst 'ENU=FIND OUT;ENG=FIND OUT';
      eRemindMeCode@1000000031 : TextConst 'ENU=REMIND ME;ENG=REMIND ME';
      eRemindMeDescription@1000000032 : TextConst 'ENU=Create a Reminder;ENG=Create a Reminder';
      eRemindMeThatCode@1000000035 : TextConst 'ENU=REMIND ME THAT;ENG=REMIND ME THAT';
      eRemindMeToCode@1000000036 : TextConst 'ENU=REMIND ME TO;ENG=REMIND ME TO';
      eGetPanelCode@1000000033 : TextConst 'ENU=GET PANEL;ENG=GET PANEL';
      eGetPanelDescription@1000000034 : TextConst 'ENU=Get the values on a Panel;ENG=Get the values on a Panel';
      eWhatsOnCode@1000000037 : TextConst 'ENU=WHATS ON;ENG=WHATS ON';
      eWhatIsOnCode@1000000038 : TextConst 'ENU=WHAT IS ON;ENG=WHAT IS ON';
    BEGIN
      CreateAction(ANAction,eDebugCode,eDebugDescription,0,TRUE);

      CreateAction(ANAction,eGetFieldValueCode,eGetFieldValueDescription,0,FALSE);
      CreateAlias(DATABASE::"Ask nOra - Action",eTellMeCode,ANAction.GETPOSITION);
      CreateAlias(DATABASE::"Ask nOra - Action",eWhatIsTheCode,ANAction.GETPOSITION);
      CreateAlias(DATABASE::"Ask nOra - Action",eWhatsTheCode,ANAction.GETPOSITION);
      CreateAlias(DATABASE::"Ask nOra - Action",eHowManyCode,ANAction.GETPOSITION);
      CreateAlias(DATABASE::"Ask nOra - Action",eHowMuchCode,ANAction.GETPOSITION);

      CreateAction(ANAction,eShowRecordCode,eShowRecordDescription,0,FALSE);
      CreateAlias(DATABASE::"Ask nOra - Action",eShowCode,ANAction.GETPOSITION);

      CreateAction(ANAction,eOrderMeCode,eOrderMeDescription,0,TRUE);
      CreateAlias(DATABASE::"Ask nOra - Action",eBuyCode,ANAction.GETPOSITION);
      CreateAlias(DATABASE::"Ask nOra - Action",eOrderSomeCode,ANAction.GETPOSITION);

      CreateAction(ANAction,eGetDirectionsCode,eGetDirectionsDescription,0,TRUE);
      CreateAlias(DATABASE::"Ask nOra - Action",eHowDoIGetToCode,ANAction.GETPOSITION);
      CreateAlias(DATABASE::"Ask nOra - Action",eGiveDirectionsCode,ANAction.GETPOSITION);

      CreateAction(ANAction,eWikiCode,eWikiDescription,0,FALSE);
      CreateAlias(DATABASE::"Ask nOra - Action",eWikipediaCode,ANAction.GETPOSITION);

      CreateAction(ANAction,eWolframCode,eWolframDescription,0,FALSE);
      CreateAlias(DATABASE::"Ask nOra - Action",eWoflframAlphCode,ANAction.GETPOSITION);
      CreateAlias(DATABASE::"Ask nOra - Action",eExchangeRateCode,ANAction.GETPOSITION);
      CreateAlias(DATABASE::"Ask nOra - Action",eFindOutCode,ANAction.GETPOSITION);

      CreateAction(ANAction,eRemindMeCode,eRemindMeDescription,0,TRUE);
      CreateAlias(DATABASE::"Ask nOra - Action",eRemindMeThatCode,ANAction.GETPOSITION);
      CreateAlias(DATABASE::"Ask nOra - Action",eRemindMeToCode,ANAction.GETPOSITION);

      CreateAction(ANAction,eGetPanelCode,eGetPanelDescription,0,FALSE);
      CreateAlias(DATABASE::"Ask nOra - Action",eWhatsOnCode,ANAction.GETPOSITION);
      CreateAlias(DATABASE::"Ask nOra - Action",eWhatIsOnCode,ANAction.GETPOSITION);
    END;

    PROCEDURE SetupIgnoreWords@1000000002();
    VAR
      ANIgnoreWords@1000000000 : Record 9062519;
      eAbout@1000000001 : TextConst 'ENU=ABOUT;ENG=ABOUT';
      eAnd@1000000002 : TextConst 'ENU=AND;ENG=AND';
      eAre@1000000003 : TextConst 'ENU=ARE;ENG=ARE';
      eCan@1000000004 : TextConst 'ENU=CAN;ENG=CAN';
      eFor@1000000005 : TextConst 'ENU=FOR;ENG=FOR';
      eHave@1000000006 : TextConst 'ENU=HAVE;ENG=HAVE';
      eHello@1000000007 : TextConst 'ENU=HELLO;ENG=HELLO';
      eHi@1000000008 : TextConst 'ENU=HI;ENG=HI';
      eHow@1000000009 : TextConst 'ENU=HOW;ENG=HOW';
      eI@1000000010 : TextConst 'ENU=I;ENG=I';
      eIn@1000000011 : TextConst 'ENU=IN;ENG=IN';
      eIs@1000000012 : TextConst 'ENU=IS;ENG=IS';
      eMe@1000000013 : TextConst 'ENU=ME;ENG=ME';
      eNo@1000000014 : TextConst 'ENU=NO;ENG=NO';
      eNora@1000000015 : TextConst 'ENU=NORA;ENG=NORA';
      eOf@1000000016 : TextConst 'ENU=OF;ENG=OF';
      eOn@1000000017 : TextConst 'ENU=ON;ENG=ON';
      ePlease@1000000018 : TextConst 'ENU=PLEASE;ENG=PLEASE';
      eThe@1000000019 : TextConst 'ENU=THE;ENG=THE';
      eThey@1000000020 : TextConst 'ENU=THEY;ENG=THEY';
      eTo@1000000021 : TextConst 'ENU=TO;ENG=TO';
      eWant@1000000022 : TextConst 'ENU=WANT;ENG=WANT';
      eYou@1000000023 : TextConst 'ENU=YOU;ENG=YOU';
    BEGIN
      CreateIgnoreWord(eAbout,'');
      CreateIgnoreWord(eAnd,'');
      CreateIgnoreWord(eAre,'');
      CreateIgnoreWord(eCan,'');
      CreateIgnoreWord(eFor,'');
      CreateIgnoreWord(eHave,'');
      CreateIgnoreWord(eHello,'');
      CreateIgnoreWord(eHi,'');
      CreateIgnoreWord(eHow,'');
      CreateIgnoreWord(eI,'');
      CreateIgnoreWord(eIn,'');
      CreateIgnoreWord(eIs,'');
      CreateIgnoreWord(eMe,'');
      CreateIgnoreWord(eNo,'');
      CreateIgnoreWord(eNora,'');
      CreateIgnoreWord(eOf,'');
      CreateIgnoreWord(eOn,'');
      CreateIgnoreWord(ePlease,'');
      CreateIgnoreWord(eThe,'');
      CreateIgnoreWord(eThey,'');
      CreateIgnoreWord(eTo,'');
      CreateIgnoreWord(eWant,'');
      CreateIgnoreWord(eYou,'');
    END;

    PROCEDURE SetupTextSnippets@1000000040();
    VAR
      ANTextSnippet@1000000000 : Record 9062596;
      eHelpCode@1000000001 : TextConst 'ENU=HELP;ENG=HELP';
      eHelpDescription@1000000002 : TextConst 'ENU=Help Text;ENG=Help Text';
      eHelpLine0010@1000000003 : TextConst 'ENU=You can say to me things like...;ENG=You can say to me things like...';
      eHelpLine0020@1000000004 : TextConst 'ENU=''Hello'' .. it''s good to be polite;ENG=''Hello'' .. it''s good to be polite';
      eHelpLine0030@1000000005 : TextConst 'ENU=''What is the Inventory for Paris Chair'';ENG=''What is the Inventory for Paris Chair''';
      eHelpLine0040@1000000006 : TextConst 'ENU=''What is the Balance for Cannon group'';ENG=''What is the Balance for Cannon group''';
      eHelpLine0050@1000000007 : TextConst 'ENU=''What is the address of the cannon group'';ENG=''What is the address of the cannon group''';
      eHelpLine0060@1000000008 : TextConst 'ENU=i.e. you have given me a field name and the description of a customer, Item etc.;ENG=i.e. you have given me a field name and the description of a customer, Item etc.';
      eHelpLine0070@1000000009 : TextConst 'ENU=You could use any field name...;ENG=You could use any field name...';
      eHelpLine0080@1000000010 : TextConst 'ENU=(This can also be the name of an Enhanced field);ENG=(This can also be the name of an Enhanced field)';
      eHelpLine0090@1000000011 : TextConst 'ENU=''How do I get to Cannon'' (NB This will give you instructions from your address i.e. your contact address);ENG=''How do I get to Cannon'' (NB This will give you instructions from your address i.e. your contact address)';
      eHelpLine0100@1000000012 : TextConst 'ENU=''How do I get to Cannon from Bath'';ENG=''How do I get to Cannon from Bath''';
      eHelpLine0110@1000000013 : TextConst 'ENU=''How do I get to cannon from SN147DG'' NB Don''t put a space in your postcode;ENG=''How do I get to cannon from SN147DG'' NB Don''t put a space in your postcode';
      eHelpLine0120@1000000014 : TextConst 'ENU=''Can you show me a list of customers with balances'';ENG=''Can you show me a list of customers with balances''';
      eHelpLine0130@1000000015 : TextConst 'ENU=(NB customers with balances is a quick report, you could replace this with any quick report);ENG=(NB customers with balances is a quick report, you could replace this with any quick report)';
      eHelpLine0140@1000000016 : TextConst 'ENU=''Show me Cannon group'' will display the customer card or provide a link to it;ENG=''Show me Cannon group'' will display the customer card or provide a link to it';
      eHelpLine0150@1000000017 : TextConst 'ENU=i.e. Show me is a request to display a card .. this could be a customer, item, vendor etc.;ENG=i.e. Show me is a request to display a card .. this could be a customer, item, vendor etc.';
      eHelpLine0160@1000000018 : TextConst 'ENU=''WIKI cannon group'';ENG=''WIKI cannon group''';
      eHelpLine0170@1000000019 : TextConst 'ENU=This searches Wikipedia;ENG=This searches Wikipedia';
      eHelpLine0180@1000000020 : TextConst 'ENU=You can stay in a conversation about a particular piece of information;ENG=You can stay in a conversation about a particular piece of information';
      eHelpLine0190@1000000021 : TextConst 'ENU=''What is the balance for Cannon?'';ENG=''What is the balance for Cannon?''';
      eHelpLine0200@1000000022 : TextConst 'ENU=''What is the address ?'';ENG=''What is the address ?''';
      eHelpLine0210@1000000023 : TextConst 'ENU=''What is their sales this week?'' (NB this is an enhanced field)'';ENG=''What is their sales this week?'' (NB this is an enhanced field)''';
      eHelpLine0220@1000000024 : TextConst 'ENU=''Forget it'' - forgets the context of the conversation you were in;ENG=''Forget it'' - forgets the context of the conversation you were in';
      eHelpLine0230@1000000025 : TextConst 'ENU=(i.e. forget the customer or item we were discussing);ENG=(i.e. forget the customer or item we were discussing)';
      eHelpLine0240@1000000026 : TextConst 'ENU=''Find out the exchange rate for dollar'';ENG=''Find out the exchange rate for dollar''';
      eHelpLine0250@1000000027 : TextConst 'ENU=''Find out the population of Germany'';ENG=''Find out the population of Germany''';
      eHelpLine0260@1000000028 : TextConst 'ENU=(Uses Wolfram Alpha data source to get answers);ENG=(Uses Wolfram Alpha data source to get answers)';
      eHelpLine0270@1000000029 : TextConst 'ENU=''Rremind me to call John to get a quote'';ENG=''Rremind me to call John to get a quote''';
      eHelpLine0280@1000000030 : TextConst 'ENU=This creates a task for you to call John;ENG=This creates a task for you to call John';
      eThankYouCode@1000000031 : TextConst 'ENU=THANK YOU;ENG=THANK YOU';
      eThankYouDescription@1000000032 : TextConst 'ENU=Thank you;ENG=Thank you';
      eNoThankYouResponse@1000000033 : TextConst 'ENU=No, thank you;ENG=No, thank you';
      eThanksCode@1000000034 : TextConst 'ENU=THANKS;ENG=THANKS';
      eThanksDescription@1000000035 : TextConst 'ENU=Thanks;ENG=Thanks';
      eThanksResponse@1000000036 : TextConst 'ENU=No problem;ENG=No problem';
    BEGIN
      CreateTextSnippet(ANTextSnippet,eHelpCode,eHelpDescription);
      CreateTextSnippetLine(ANTextSnippet.Code,10000,eHelpLine0010,TRUE);
      CreateTextSnippetLine(ANTextSnippet.Code,20000,' ',TRUE);
      CreateTextSnippetLine(ANTextSnippet.Code,30000,eHelpLine0020,TRUE);
      CreateTextSnippetLine(ANTextSnippet.Code,40000,' ',TRUE);
      CreateTextSnippetLine(ANTextSnippet.Code,50000,eHelpLine0030,TRUE);
      CreateTextSnippetLine(ANTextSnippet.Code,60000,eHelpLine0040,TRUE);
      CreateTextSnippetLine(ANTextSnippet.Code,70000,eHelpLine0050,TRUE);
      CreateTextSnippetLine(ANTextSnippet.Code,80000,eHelpLine0060,TRUE);
      CreateTextSnippetLine(ANTextSnippet.Code,90000,eHelpLine0070,TRUE);
      CreateTextSnippetLine(ANTextSnippet.Code,100000,eHelpLine0080,TRUE);
      CreateTextSnippetLine(ANTextSnippet.Code,110000,' ',TRUE);
      CreateTextSnippetLine(ANTextSnippet.Code,120000,eHelpLine0090,TRUE);
      CreateTextSnippetLine(ANTextSnippet.Code,130000,eHelpLine0100,TRUE);
      CreateTextSnippetLine(ANTextSnippet.Code,140000,eHelpLine0110,TRUE);
      CreateTextSnippetLine(ANTextSnippet.Code,150000,' ',TRUE);
      CreateTextSnippetLine(ANTextSnippet.Code,160000,eHelpLine0120,TRUE);
      CreateTextSnippetLine(ANTextSnippet.Code,170000,eHelpLine0130,TRUE);
      CreateTextSnippetLine(ANTextSnippet.Code,180000,' ',TRUE);
      CreateTextSnippetLine(ANTextSnippet.Code,190000,eHelpLine0140,TRUE);
      CreateTextSnippetLine(ANTextSnippet.Code,200000,eHelpLine0150,TRUE);
      CreateTextSnippetLine(ANTextSnippet.Code,210000,' ',TRUE);
      CreateTextSnippetLine(ANTextSnippet.Code,220000,eHelpLine0160,TRUE);
      CreateTextSnippetLine(ANTextSnippet.Code,230000,eHelpLine0170,TRUE);
      CreateTextSnippetLine(ANTextSnippet.Code,240000,' ',TRUE);
      CreateTextSnippetLine(ANTextSnippet.Code,250000,eHelpLine0180,TRUE);
      CreateTextSnippetLine(ANTextSnippet.Code,260000,' ',TRUE);
      CreateTextSnippetLine(ANTextSnippet.Code,270000,eHelpLine0190,TRUE);
      CreateTextSnippetLine(ANTextSnippet.Code,280000,eHelpLine0200,TRUE);
      CreateTextSnippetLine(ANTextSnippet.Code,290000,eHelpLine0210,TRUE);
      CreateTextSnippetLine(ANTextSnippet.Code,300000,' ',TRUE);
      CreateTextSnippetLine(ANTextSnippet.Code,310000,eHelpLine0220,TRUE);
      CreateTextSnippetLine(ANTextSnippet.Code,320000,eHelpLine0230,TRUE);
      CreateTextSnippetLine(ANTextSnippet.Code,330000,' ',TRUE);
      CreateTextSnippetLine(ANTextSnippet.Code,340000,eHelpLine0240,TRUE);
      CreateTextSnippetLine(ANTextSnippet.Code,350000,eHelpLine0250,TRUE);
      CreateTextSnippetLine(ANTextSnippet.Code,360000,eHelpLine0260,TRUE);
      CreateTextSnippetLine(ANTextSnippet.Code,370000,' ',TRUE);
      CreateTextSnippetLine(ANTextSnippet.Code,380000,eHelpLine0270,TRUE);
      CreateTextSnippetLine(ANTextSnippet.Code,390000,eHelpLine0280,TRUE);

      CreateTextSnippet(ANTextSnippet,eThankYouCode,eThankYouDescription);
      CreateTextSnippetLine(ANTextSnippet.Code,10000,eNoThankYouResponse,TRUE);

      CreateTextSnippet(ANTextSnippet,eThanksCode,eThanksDescription);
      CreateTextSnippetLine(ANTextSnippet.Code,10000,eThanksResponse,TRUE);
    END;

    PROCEDURE "--- UTILS ---"@1000000011();
    BEGIN
    END;

    PROCEDURE CreateSearchTable@1000000022(VAR ANSearchTable@1000000000 : Record 9062515;TableNo@1000000001 : Integer;SystemTable@1000000002 : Boolean);
    BEGIN
      IF NOT ANSearchTable.GET(TableNo) THEN BEGIN
        ANSearchTable.INIT;
        ANSearchTable.VALIDATE("Table No.",TableNo);
        ANSearchTable.INSERT(TRUE);
      END;

      ANSearchTable.VALIDATE("System Table",SystemTable);
      ANSearchTable.MODIFY;
    END;

    PROCEDURE CreateSearchField@1000000023(TableNo@1000000001 : Integer;EnhancedField@1000000002 : Boolean;FieldNo@1000000003 : Integer);
    VAR
      SearchFieldType@1000000004 : 'Field,Enhanced Field';
      ANSearchField@1000000000 : Record 9062516;
    BEGIN
      IF EnhancedField THEN SearchFieldType := SearchFieldType::"Enhanced Field" ELSE SearchFieldType := SearchFieldType::Field;

      IF NOT ANSearchField.GET(TableNo,SearchFieldType,FieldNo) THEN BEGIN
        ANSearchField.INIT;
        ANSearchField.VALIDATE("Table No.",TableNo);
        ANSearchField.VALIDATE(Type,SearchFieldType);
        ANSearchField.VALIDATE("Field No.",FieldNo);
        ANSearchField.INSERT(TRUE);
      END;
    END;

    PROCEDURE CreateFunction@1000000012(VAR ANFunction@1000000004 : Record 9062521;Code@1000000001 : Code[20];Description@1000000002 : Text;Priority@1000000003 : Integer;DontRepeat@1000000000 : Boolean);
    BEGIN
      IF NOT ANFunction.GET(Code) THEN BEGIN
        ANFunction.INIT;
        ANFunction.VALIDATE(Code,Code);
        ANFunction.VALIDATE(Name,Description);
        ANFunction.VALIDATE(Priority,Priority);
        ANFunction.VALIDATE("Don't Repeat Function",DontRepeat);
        ANFunction.INSERT(TRUE);
      END;
    END;

    PROCEDURE CreateAction@1000000013(VAR ANAction@1000000000 : Record 9062520;Code@1000000001 : Code[20];Name@1000000002 : Text;CUtoRun@1000000003 : Integer;DontRepeat@1000000004 : Boolean);
    BEGIN
      IF NOT ANAction.GET(Code) THEN BEGIN
        ANAction.INIT;
        ANAction.VALIDATE(Code,Code);
        ANAction.VALIDATE(Name,Name);
        ANAction.VALIDATE("Codeunit to Run",CUtoRun);
        ANAction.VALIDATE("Don't Repeat Action",DontRepeat);
        ANAction.INSERT(TRUE);
      END;
    END;

    PROCEDURE CreateAlias@1000000014(TableNo@1000000000 : Integer;Code@1000000001 : Code[20];PosText@1000000002 : Text);
    VAR
      ANRecordAlias@1000000003 : Record 9062505;
    BEGIN
      IF NOT ANRecordAlias.GET(TableNo,Code) THEN BEGIN
        ANRecordAlias.INIT;
        ANRecordAlias.VALIDATE("Table No.",TableNo);
        ANRecordAlias.VALIDATE("Alias Code",Code);
        ANRecordAlias.INSERT(TRUE);
        ANRecordAlias.VALIDATE("Position Text",PosText);
        ANRecordAlias.SetPrimKeys;
        ANRecordAlias.MODIFY(TRUE);
      END;
    END;

    PROCEDURE CreateIgnoreWord@1000000028(Word@1000000000 : Code[250];IgnoreReason@1000000002 : Code[20]);
    VAR
      ANIgnoreWord@1000000001 : Record 9062519;
    BEGIN
      IF NOT ANIgnoreWord.GET(Word) THEN BEGIN
        ANIgnoreWord.INIT;
        ANIgnoreWord.VALIDATE(Word,Word);
        ANIgnoreWord.VALIDATE("Ignore Reason",IgnoreReason);
        ANIgnoreWord.INSERT(TRUE);
      END;
    END;

    PROCEDURE CreateTextSnippet@1000000035(VAR ANTextSnippet@1000000000 : Record 9062596;Code@1000000001 : Code[20];Description@1000000002 : Text);
    BEGIN
      IF NOT ANTextSnippet.GET(Code) THEN BEGIN
        ANTextSnippet.INIT;
        ANTextSnippet.VALIDATE(Code,Code);
        ANTextSnippet.VALIDATE(Description,Description);
        ANTextSnippet.INSERT(TRUE);
      END;
    END;

    PROCEDURE CreateTextSnippetLine@1000000036(SnippetCode@1000000004 : Code[20];LineNo@1000000001 : Integer;Text@1000000002 : Text;DeleteExistingLine@1000000003 : Boolean);
    VAR
      ANTextSnippetLine@1000000000 : Record 9062597;
    BEGIN
      IF ANTextSnippetLine.GET(SnippetCode,'',LineNo) THEN BEGIN
        IF DeleteExistingLine THEN ANTextSnippetLine.DELETE(TRUE) ELSE EXIT;
      END;

      ANTextSnippetLine.INIT;
      ANTextSnippetLine.VALIDATE("Snippet Code",SnippetCode);
      ANTextSnippetLine.VALIDATE("User ID",'');
      ANTextSnippetLine.VALIDATE("Line No.",LineNo);
      ANTextSnippetLine.VALIDATE("Line Text",Text);
      ANTextSnippetLine.INSERT(TRUE);
    END;

    BEGIN
    {
      //DOC NA2016.4  JH 28/08/2015 - Upgraded to 2016
      //DOC NA2016.15 JH 18/04/2016 - CfMD amendments
    }
    END.
  }
}

