OBJECT Table 1510 Notification Template
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               Default := NoDefaultExists(FALSE);
             END;

    OnDelete=VAR
               NotificationSetup@1000 : Record 1512;
             BEGIN
               IF Default THEN
                 ERROR(DefaultErr);

               NotificationSetup.SETRANGE("Notification Template Code",Code);
               IF NotificationSetup.FINDFIRST THEN BEGIN
                 IF NOT CONFIRM(DeleteTemplateQst) THEN
                   EXIT;
                 NotificationSetup.MODIFYALL("Notification Template Code",'');
               END;
             END;

    CaptionML=[ENU=Notification Template;
               ENG=Notification Template];
    LookupPageID=Page1510;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code20        ;CaptionML=[ENU=Code;
                                                              ENG=Code];
                                                   NotBlank=Yes }
    { 2   ;   ;Notification Body   ;BLOB          ;CaptionML=[ENU=Notification Body;
                                                              ENG=Notification Body] }
    { 3   ;   ;Notification Header ;BLOB          ;CaptionML=[ENU=Notification Header;
                                                              ENG=Notification Header] }
    { 4   ;   ;Notification Footer ;BLOB          ;CaptionML=[ENU=Notification Footer;
                                                              ENG=Notification Footer] }
    { 5   ;   ;Notification Method ;Option        ;OnValidate=BEGIN
                                                                IF ("Notification Method" <> xRec."Notification Method") AND IsUsed THEN
                                                                  ERROR(STRSUBSTNO(ModifyUsedTemplateErr,FIELDCAPTION("Notification Method")));

                                                                CALCFIELDS("Notification Body");
                                                                IF "Notification Body".HASVALUE THEN
                                                                  MESSAGE(STRSUBSTNO(WrongBodyMsg,FIELDCAPTION("Notification Method")))
                                                              END;

                                                   CaptionML=[ENU=Notification Method;
                                                              ENG=Notification Method];
                                                   OptionCaptionML=[ENU=E-mail,Note;
                                                                    ENG=E-mail,Note];
                                                   OptionString=E-mail,Note }
    { 6   ;   ;Description         ;Text100       ;CaptionML=[ENU=Description;
                                                              ENG=Description] }
    { 7   ;   ;Type                ;Option        ;OnValidate=BEGIN
                                                                IF Type <> xRec.Type THEN BEGIN
                                                                  Default := FALSE;
                                                                  IF IsUsed THEN
                                                                    ERROR(STRSUBSTNO(ModifyUsedTemplateErr,FIELDCAPTION(Type)));
                                                                END;

                                                                CALCFIELDS("Notification Body");
                                                                IF "Notification Body".HASVALUE THEN
                                                                  MESSAGE(STRSUBSTNO(WrongBodyMsg,FIELDCAPTION(Type)));
                                                              END;

                                                   CaptionML=[ENU=Type;
                                                              ENG=Type];
                                                   OptionCaptionML=[ENU=New Record,Approval,Overdue;
                                                                    ENG=New Record,Approval,Overdue];
                                                   OptionString=New Record,Approval,Overdue }
    { 8   ;   ;Default             ;Boolean       ;OnValidate=BEGIN
                                                                IF (NOT Default) AND NoDefaultExists(TRUE) THEN
                                                                  ERROR('');
                                                              END;

                                                   CaptionML=[ENU=Default;
                                                              ENG=Default] }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ReplaceBodyQst@1001 : TextConst 'ENU=Do you want to replace the existing notification template message body?;ENG=Do you want to replace the existing notification template message body?';
      DeleteBodyQst@1000 : TextConst 'ENU=Do you want to delete the notification template message body?;ENG=Do you want to delete the notification template message body?';
      DeleteTemplateQst@1005 : TextConst 'ENU=The notification template that you are about to delete is used in the notification setup by one or more users. \\Do you want to continue?;ENG=The notification template that you are about to delete is used in the notification setup by one or more users. \\Do you want to continue?';
      DefaultErr@1027 : TextConst 'ENU=You cannot delete the default template.;ENG=You cannot delete the default template.';
      ImportTxt@1004 : TextConst 'ENU=Select a file to import;ENG=Select a file to import';
      FileFilterTxt@1003 : TextConst '@@@=Do not translate the file extensions (e.g. .xml, .txt, .csv, etc);ENU="HTML Files(*.htm;*.html)|*.htm;*.html|XML Files(*.xml)|*.xml|Text Files(*.txt)|*.txt";ENG="HTML Files(*.htm;*.html)|*.htm;*.html|XML Files(*.xml)|*.xml|Text Files(*.txt)|*.txt"';
      FileFilterExtensionTxt@1002 : TextConst '@@@={Locked};ENU=txt,xml,htm,html;ENG=txt,xml,htm,html';
      IteratorStartTxt@1019 : TextConst '@@@={Locked};ENU=%IteratorStart%;ENG=%IteratorStart%';
      IteratorEndTxt@1006 : TextConst '@@@={Locked};ENU=%IteratorEnd%;ENG=%IteratorEnd%';
      TypeHelper@1007 : Codeunit 10;
      ModifyUsedTemplateErr@1022 : TextConst '@@@="%1 = Table Field";ENU=You cannot modify %1 when Notification Template is used.;ENG=You cannot modify %1 when Notification Template is used.';
      WrongBodyMsg@1023 : TextConst '@@@="%1 = Message Body ";ENU=If you change %1, the message body may be shown incorrectly. \\Check the new message body before you use the notification template.;ENG=If you change %1, the message body may be shown incorrectly. \\Check the new message body before you use the notification template.';
      MissingIteratorIdentifierErr@1008 : TextConst '@@@={Locked};ENU=You must either specify both start and end iteration identifiers or neither.;ENG=You must either specify both start and end iteration identifiers or neither.';
      NewRecordNotificationHeaderTxt@1010 : TextConst '@@@={Locked};ENU="<html><head><meta http-equiv=""Content-Type"" content=""text/html; charset=windows-1252""></head><body><p><span style=""font-size: 11.0pt; font-family: Calibri; font-weight: bold"">%SoftwareName% %Title%</span></p>";ENG="<html><head><meta http-equiv=""Content-Type"" content=""text/html; charset=windows-1252""></head><body><p><span style=""font-size: 11.0pt; font-family: Calibri; font-weight: bold"">%SoftwareName% %Title%</span></p>"';
      NewRecordNotificationBodyTxt@1009 : TextConst '@@@={Locked};ENU="<p><span style=""font-size: 11.0pt; font-family: Calibri"">%DocumentType% %DocumentNo%</span><span style=""font-size: 11.0pt; font-family: Calibri""> %Action%</span></p><p><span style=""font-size: 11.0pt; font-family: Calibri""><a href=""%RTCUrl%"">%RTCHyperlink%</a> (<a href=""%WebUrl%"">%WebHyperlink%</a>) %CustomUrl%</span></font></p>";ENG="<p><span style=""font-size: 11.0pt; font-family: Calibri"">%DocumentType% %DocumentNo%</span><span style=""font-size: 11.0pt; font-family: Calibri""> %Action%</span></p><p><span style=""font-size: 11.0pt; font-family: Calibri""><a href=""%RTCUrl%"">%RTCHyperlink%</a> (<a href=""%WebUrl%"">%WebHyperlink%</a>) %CustomUrl%</span></font></p>"';
      NewRecordNotificationFooterTxt@1011 : TextConst '@@@={Locked};ENU="<span style=""font-size: 11.0pt; font-family: Calibri""><a href=""%RTCChangeSettingsHyperLink%"">Change Notification Settings</a> <a href=""%WebChangeSettingsHyperLink%"">(Web client)</a></span></body></html>";ENG="<span style=""font-size: 11.0pt; font-family: Calibri""><a href=""%RTCChangeSettingsHyperLink%"">Change Notification Settings</a> <a href=""%WebChangeSettingsHyperLink%"">(Web client)</a></span></body></html>"';
      ApprovalNotificationHeaderTxt@1013 : TextConst '@@@={Locked};ENU="<html><head><meta http-equiv=""Content-Type"" content=""text/html; charset=windows-1252""><span style=""font-size: 12.0pt; font-family: Calibri; font-weight: bold"">%Title%</span></head><body>";ENG="<html><head><meta http-equiv=""Content-Type"" content=""text/html; charset=windows-1252""><span style=""font-size: 12.0pt; font-family: Calibri; font-weight: bold"">%Title%</span></head><body>"';
      ApprovalNotificationBodyPart1Txt@1012 : TextConst
        '@@@={Locked}',
        'ENU="<p><span style=""font-size: 11.0pt; font-family: Calibri"">%DocumentType% %DocumentNo%</span><span style=""font-size: 11.0pt; font-family: Calibri""> %Action%</span></p><p><span style=""font-size: 11.0pt; font-family: Calibri""><a href=""%RTCUrl%"">%RTCHyperlink%</a> (<a href=""%WebUrl%"">%WebHyperlink%</a>) %CustomUrl%</span></p><table border=""1"" width=""54%"" id=""table2"" cellspacing=""0"" cellpadding=""0"" style=""font-size: 11.0pt; font-family: Calibri""><tr><td width=""139"" colspan=""2"" valign=""top"" style=""width:1.45in;padding:0in 5.4pt 0in 5.4pt""><p class=""TableTextBold""><b>%DocumentType% %DocumentNo% %Details%</b></td></tr><tr><td width=""139"" valign=""top"" style=""width:1.45in;padding:0in 5.4pt 0in 5.4pt""><p class=""TableTextBold""><b>%AmountCaption%</b></td><td width=""494"" valign=""top"" style=""width:370.3pt;padding:0in 5.4pt 0in 5.4pt""><p class=""TableText"">%CurrencyCode% %Amount%</font></td></tr>"',
        'ENG="<p><span style=""font-size: 11.0pt; font-family: Calibri"">%DocumentType% %DocumentNo%</span><span style=""font-size: 11.0pt; font-family: Calibri""> %Action%</span></p><p><span style=""font-size: 11.0pt; font-family: Calibri""><a href=""%RTCUrl%"">%RTCHyperlink%</a> (<a href=""%WebUrl%"">%WebHyperlink%</a>) %CustomUrl%</span></p><table border=""1"" width=""54%"" id=""table2"" cellspacing=""0"" cellpadding=""0"" style=""font-size: 11.0pt; font-family: Calibri""><tr><td width=""139"" colspan=""2"" valign=""top"" style=""width:1.45in;padding:0in 5.4pt 0in 5.4pt""><p class=""TableTextBold""><b>%DocumentType% %DocumentNo% %Details%</b></td></tr><tr><td width=""139"" valign=""top"" style=""width:1.45in;padding:0in 5.4pt 0in 5.4pt""><p class=""TableTextBold""><b>%AmountCaption%</b></td><td width=""494"" valign=""top"" style=""width:370.3pt;padding:0in 5.4pt 0in 5.4pt""><p class=""TableText"">%CurrencyCode% %Amount%</font></td></tr>"';
      ApprovalNotificationBodyPart2Txt@1018 : TextConst
        '@@@={Locked}',
        'ENU="<tr><td width=""139"" valign=""top"" style=""width:1.45in;padding:0in 5.4pt 0in 5.4pt""><p class=""TableTextBold""><b>%AmountLCYCaption%</font></b></td><td width=""494"" valign=""top"" style=""width:370.3pt;padding:0in 5.4pt 0in 5.4pt""><p class=""TableText"">%AmountLCY%</font></td></tr><tr><td width=""139"" valign=""top"" style=""width:1.45in;padding:0in 5.4pt 0in 5.4pt""><p class=""TableTextBold""><b>%CustomerVendorCaption%</b></td><td width=""494"" valign=""top"" style=""width:370.3pt;padding:0in 5.4pt 0in 5.4pt""><p class=""TableText"">%CustomerVendorNo% %CustomerVendorName%</font></td></tr><tr><td width=""139"" valign=""top"" style=""width:1.45in;padding:0in 5.4pt 0in 5.4pt""><p class=""TableTextBold""><b>%DueDateCaption%</font></b></td><td width=""494"" valign=""top"" style=""width:370.3pt;padding:0in 5.4pt 0in 5.4pt""><p class=""TableText"">%DueDate%</font></td></tr>"',
        'ENG="<tr><td width=""139"" valign=""top"" style=""width:1.45in;padding:0in 5.4pt 0in 5.4pt""><p class=""TableTextBold""><b>%AmountLCYCaption%</font></b></td><td width=""494"" valign=""top"" style=""width:370.3pt;padding:0in 5.4pt 0in 5.4pt""><p class=""TableText"">%AmountLCY%</font></td></tr><tr><td width=""139"" valign=""top"" style=""width:1.45in;padding:0in 5.4pt 0in 5.4pt""><p class=""TableTextBold""><b>%CustomerVendorCaption%</b></td><td width=""494"" valign=""top"" style=""width:370.3pt;padding:0in 5.4pt 0in 5.4pt""><p class=""TableText"">%CustomerVendorNo% %CustomerVendorName%</font></td></tr><tr><td width=""139"" valign=""top"" style=""width:1.45in;padding:0in 5.4pt 0in 5.4pt""><p class=""TableTextBold""><b>%DueDateCaption%</font></b></td><td width=""494"" valign=""top"" style=""width:370.3pt;padding:0in 5.4pt 0in 5.4pt""><p class=""TableText"">%DueDate%</font></td></tr>"';
      ApprovalNotificationBodyPart3Txt@1021 : TextConst '@@@={Locked};ENU="<tr><td width=""139"" valign=""top"" style=""width:1.45in;padding:0in 5.4pt 0in 5.4pt""><p class=""TableTextBold""><b>%CreditLimitCaption%</font></b></td><td width=""494"" valign=""top"" style=""width:370.3pt;padding:0in 5.4pt 0in 5.4pt""><p class=""TableText"">%CreditLimit%</font></td></tr></table>%ApprovalComments%";ENG="<tr><td width=""139"" valign=""top"" style=""width:1.45in;padding:0in 5.4pt 0in 5.4pt""><p class=""TableTextBold""><b>%CreditLimitCaption%</font></b></td><td width=""494"" valign=""top"" style=""width:370.3pt;padding:0in 5.4pt 0in 5.4pt""><p class=""TableText"">%CreditLimit%</font></td></tr></table>%ApprovalComments%"';
      ApprovalNotificationFooterTxt@1014 : TextConst '@@@={Locked};ENU="<span style=""font-size: 11.0pt; font-family: Calibri""><a href=""%RTCChangeSettingsHyperLink%"">Change Notification Settings</a> <a href=""%WebChangeSettingsHyperLink%"">(Web client)</a></span></body></html>";ENG="<span style=""font-size: 11.0pt; font-family: Calibri""><a href=""%RTCChangeSettingsHyperLink%"">Change Notification Settings</a> <a href=""%WebChangeSettingsHyperLink%"">(Web client)</a></span></body></html>"';
      OverdueNotificationHeaderTxt@1016 : TextConst '@@@={Locked};ENU="<html><head><meta http-equiv=""Content-Type"" content=""text/html; charset=windows-1252""></head><body><p><span style=""font-family: Calibri; font-size: 11.0pt; font-weight: bold"">%Title%</span></p>";ENG="<html><head><meta http-equiv=""Content-Type"" content=""text/html; charset=windows-1252""></head><body><p><span style=""font-family: Calibri; font-size: 11.0pt; font-weight: bold"">%Title%</span></p>"';
      OverdueNotificationBodyTxt@1015 : TextConst '@@@={Locked};ENU="<p><span style=""font-size: 11.0pt; font-family: Calibri"">%DocumentType% %DocumentNo%</span><span style=""font-size: 11.0pt; font-family: Calibri""> %Action%</span></p><p><span style=""font-family: Calibri; font-size: 11.0pt""><a href=""%RTCUrl%"">%RTCHyperlink%</a> (<a href=""%WebUrl%"">%WebHyperlink%</a>) %CustomUrl%</span></p>";ENG="<p><span style=""font-size: 11.0pt; font-family: Calibri"">%DocumentType% %DocumentNo%</span><span style=""font-size: 11.0pt; font-family: Calibri""> %Action%</span></p><p><span style=""font-family: Calibri; font-size: 11.0pt""><a href=""%RTCUrl%"">%RTCHyperlink%</a> (<a href=""%WebUrl%"">%WebHyperlink%</a>) %CustomUrl%</span></p>"';
      OverdueNotificationFooterTxt@1017 : TextConst '@@@={Locked};ENU="<span style=""font-size: 11.0pt; font-family: Calibri""><a href=""%RTCChangeSettingsHyperLink%"">Change Notification Settings</a> <a href=""%WebChangeSettingsHyperLink%"">(Web client)</a></span></body></html>";ENG="<span style=""font-size: 11.0pt; font-family: Calibri""><a href=""%RTCChangeSettingsHyperLink%"">Change Notification Settings</a> <a href=""%WebChangeSettingsHyperLink%"">(Web client)</a></span></body></html>"';
      Environment@1020 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Environment";
      ApprNotifTempDescTxt@1025 : TextConst 'ENU=Generic notification for approvals;ENG=Generic notification for approvals';
      NewRecNotifTempDescTxt@1026 : TextConst 'ENU=Basic notification for a new record;ENG=Basic notification for a new record';
      OverdueNotifTempDescTxt@1024 : TextConst 'ENU=Generic notification for overdue approval requests;ENG=Generic notification for overdue approval requests';

    PROCEDURE CreateNewDefault@9(NotificationType@1000 : 'New Record,Approval,Overdue');
    BEGIN
      INIT;
      Code := FORMAT(NotificationType);
      "Notification Method" := "Notification Method"::"E-mail";
      Type := NotificationType;
      Default := TRUE;
      CASE NotificationType OF
        Type::"New Record":
          BEGIN
            Description := NewRecNotifTempDescTxt;
            WriteNotificationHeader(NewRecordNotificationHeaderTxt);
            WriteNotificationBody(NewRecordNotificationBodyTxt);
            WriteNotificationFooter(NewRecordNotificationFooterTxt);
          END;
        Type::Approval:
          BEGIN
            Description := ApprNotifTempDescTxt;
            WriteNotificationHeader(ApprovalNotificationHeaderTxt);
            WriteNotificationBody(ApprovalNotificationBodyPart1Txt +
              ApprovalNotificationBodyPart2Txt + ApprovalNotificationBodyPart3Txt);
            WriteNotificationFooter(ApprovalNotificationFooterTxt);
          END;
        Type::Overdue:
          BEGIN
            Description := OverdueNotifTempDescTxt;
            WriteNotificationHeader(OverdueNotificationHeaderTxt);
            WriteNotificationBody(OverdueNotificationBodyTxt);
            WriteNotificationFooter(OverdueNotificationFooterTxt);
          END;
      END;

      IF NOT INSERT THEN;
    END;

    PROCEDURE ExportNotification@5(UseDialog@1002 : Boolean) : Text;
    VAR
      TempBlob@1000 : Record 99008535;
      FileMgt@1001 : Codeunit 419;
      OutStream@1004 : OutStream;
      FileName@1003 : Text;
      NotificationBody@1005 : Text;
      NotificationHeader@1006 : Text;
      NotificationFooter@1007 : Text;
    BEGIN
      NotificationBody := GetNotificationBody;
      NotificationHeader := GetNotificationHeader;
      NotificationFooter := GetNotificationFooter;

      FileName := TABLECAPTION + ' ' + Code;
      CASE "Notification Method" OF
        "Notification Method"::"E-mail":
          FileName += '.htm';
        "Notification Method"::Note:
          FileName += '.txt';
        ELSE
          FileName += '.txt';
      END;
      TempBlob.Blob.CREATEOUTSTREAM(OutStream);
      OutStream.WRITETEXT(NotificationHeader);
      IF (NotificationHeader <> '') AND (NotificationFooter <> '') THEN
        NotificationBody := IteratorStartTxt + NotificationBody + IteratorEndTxt;
      OutStream.WRITETEXT(NotificationBody);
      OutStream.WRITETEXT(NotificationFooter);

      EXIT(FileMgt.BLOBExport(TempBlob,FileName,UseDialog));
    END;

    PROCEDURE ImportNotification@7();
    VAR
      TempBlob@1001 : Record 99008535;
      FileMgt@1000 : Codeunit 419;
      FileFilter@1002 : Text;
    BEGIN
      CALCFIELDS("Notification Body");
      IF "Notification Body".HASVALUE THEN
        IF NOT CONFIRM(ReplaceBodyQst,FALSE) THEN
          EXIT;

      CASE "Notification Method" OF
        "Notification Method"::"E-mail":
          FileFilter := FileFilterTxt;
        "Notification Method"::Note:
          FileFilter := FileMgt.GetToFilterText('','*.txt');
        ELSE
          FileFilter := FileFilterTxt;
      END;

      IF FileMgt.BLOBImportWithFilter(TempBlob,ImportTxt,'',FileFilter,FileFilterExtensionTxt) = '' THEN
        EXIT;

      ImportNotificationText(TempBlob.ReadAsText(Environment.NewLine,TEXTENCODING::MSDos));
    END;

    PROCEDURE ImportNotificationText@11(NotificationContent@1004 : Text);
    VAR
      NotificationHeader@1003 : Text;
      NotificationFooter@1002 : Text;
      NotificationBody@1001 : Text;
    BEGIN
      CLEAR("Notification Header");
      CLEAR("Notification Footer");
      CLEAR("Notification Body");

      SplitNotificationIntoParts(NotificationContent,NotificationHeader,NotificationFooter,NotificationBody);
      WriteNotificationHeader(NotificationHeader);
      WriteNotificationFooter(NotificationFooter);
      WriteNotificationBody(NotificationBody);
      MODIFY;
    END;

    PROCEDURE DeleteNotification@10();
    BEGIN
      CALCFIELDS("Notification Body");
      IF "Notification Body".HASVALUE THEN
        IF NOT CONFIRM(DeleteBodyQst,FALSE) THEN
          EXIT;

      CLEAR("Notification Header");
      CLEAR("Notification Footer");
      CLEAR("Notification Body");
      MODIFY;
    END;

    PROCEDURE GetNotificationBody@12() : Text;
    BEGIN
      EXIT(ReadBLOB(FIELDNO("Notification Body")));
    END;

    PROCEDURE GetNotificationHeader@1() : Text;
    BEGIN
      EXIT(ReadBLOB(FIELDNO("Notification Header")));
    END;

    PROCEDURE GetNotificationFooter@2() : Text;
    BEGIN
      EXIT(ReadBLOB(FIELDNO("Notification Footer")));
    END;

    LOCAL PROCEDURE ReadBLOB@3(FieldNo@1002 : Integer) : Text;
    VAR
      RecordRef@1001 : RecordRef;
      FieldRef@1003 : FieldRef;
    BEGIN
      RecordRef.GETTABLE(Rec);
      FieldRef := RecordRef.FIELD(FieldNo);
      EXIT(TypeHelper.ReadTextBlob(FieldRef,Environment.NewLine));
    END;

    LOCAL PROCEDURE SplitNotificationIntoParts@15(NotificationContent@1000 : Text;VAR NotificationHeader@1001 : Text;VAR NotificationFooter@1002 : Text;VAR NotificationBody@1003 : Text);
    VAR
      IteratorStartPos@1004 : Integer;
      IteratorEndPos@1005 : Integer;
    BEGIN
      IteratorStartPos := STRPOS(NotificationContent,IteratorStartTxt);
      IteratorEndPos := STRPOS(NotificationContent,IteratorEndTxt);
      IF (IteratorStartPos <> 0) AND (IteratorEndPos <> 0) THEN BEGIN
        NotificationHeader := COPYSTR(NotificationContent,1,IteratorStartPos - 1);
        NotificationBody :=
          COPYSTR(
            NotificationContent,IteratorStartPos + STRLEN(IteratorStartTxt),
            IteratorEndPos - (IteratorStartPos + STRLEN(IteratorStartTxt)));
        NotificationFooter := COPYSTR(NotificationContent,IteratorEndPos + STRLEN(IteratorEndTxt));
      END ELSE
        IF (IteratorStartPos = 0) AND (IteratorEndPos = 0) THEN
          NotificationBody := NotificationContent
        ELSE
          ERROR(MissingIteratorIdentifierErr);
    END;

    LOCAL PROCEDURE WriteNotificationBody@8(Content@1000 : Text);
    VAR
      OutStream@1001 : OutStream;
    BEGIN
      "Notification Body".CREATEOUTSTREAM(OutStream);
      OutStream.WRITETEXT(Content);
    END;

    LOCAL PROCEDURE WriteNotificationHeader@6(Content@1000 : Text);
    VAR
      OutStream@1001 : OutStream;
    BEGIN
      "Notification Header".CREATEOUTSTREAM(OutStream);
      OutStream.WRITETEXT(Content);
    END;

    LOCAL PROCEDURE WriteNotificationFooter@16(Content@1000 : Text);
    VAR
      OutStream@1001 : OutStream;
    BEGIN
      "Notification Footer".CREATEOUTSTREAM(OutStream);
      OutStream.WRITETEXT(Content);
    END;

    LOCAL PROCEDURE NoDefaultExists@4(ClearDefaults@1001 : Boolean) : Boolean;
    VAR
      NotificationTemplate@1000 : Record 1510;
    BEGIN
      NotificationTemplate.SETFILTER(Code,'<>%1',Code);
      NotificationTemplate.SETRANGE(Type,Type);
      NotificationTemplate.SETRANGE(Default,TRUE);
      IF ClearDefaults THEN
        NotificationTemplate.MODIFYALL(Default,FALSE);
      EXIT(NotificationTemplate.ISEMPTY);
    END;

    LOCAL PROCEDURE IsUsed@13() : Boolean;
    VAR
      NotificationSetup@1000 : Record 1512;
    BEGIN
      NotificationSetup.SETRANGE("Notification Template Code",Code);
      EXIT(NotificationSetup.FINDFIRST);
    END;

    BEGIN
    END.
  }
}

