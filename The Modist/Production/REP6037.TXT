OBJECT Report 6037 Change Customer in Contract
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Change Customer in Contract;
               ENG=Change Customer in Contract];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  IF NewCustomerNo = '' THEN
                    ERROR(Text000);
                  Cust.GET(NewCustomerNo);
                  IF NewShiptoCode <> '' THEN
                    ShipToAddr.GET(NewCustomerNo,NewShiptoCode);
                  IF (NewShiptoCode = ServContract."Ship-to Code") AND
                     (NewCustomerNo = ServContract."Customer No.")
                  THEN
                    ERROR(Text011);

                  IF NOT CONFIRM(Text002,FALSE) THEN BEGIN
                    CurrReport.QUIT;
                    EXIT;
                  END;

                  IF TempServContract.COUNT > 1 THEN
                    IF NOT CONFIRM(
                         Text009,FALSE,
                         TempServContract.COUNT,
                         TempServItem.COUNT)
                    THEN BEGIN
                      CurrReport.QUIT;
                      EXIT;
                    END;
                END;

    OnPostReport=VAR
                   ServItem@1006 : Record 5940;
                   Window@1005 : Dialog;
                   CounterTotal@1003 : Integer;
                   Counter@1002 : Integer;
                   CounterBreak@1000 : Integer;
                   ItemCounter@1004 : Integer;
                 BEGIN
                   ServItem.LOCKTABLE;
                   ServContractLine.LOCKTABLE;
                   ServContract.LOCKTABLE;
                   CLEAR(TempServContract);
                   CLEAR(TempServItem);
                   ServContractMgt.GetAffectedItemsOnCustChange(
                     ContractNo,
                     TempServContract,
                     TempServItem,
                     FALSE,
                     ServContractLine."Contract Type"::Contract);

                   Window.OPEN(
                     Text005 +
                     Text006 +
                     '#1###' +
                     Text007 +
                     '#2###  @3@@@@@@@@@\\' +
                     Text008 +
                     '#4###' +
                     Text007 +
                     '#5###  @6@@@@@@@@@\\');
                   Window.UPDATE(2,TempServContract.COUNT);
                   Window.UPDATE(5,TempServItem.COUNT);

                   CounterTotal := TempServContract.COUNT;
                   Counter := 0;
                   ItemCounter := 0;
                   CounterBreak := ROUND(CounterTotal / 100,1,'>');
                   IF TempServContract.FIND('-') THEN
                     REPEAT
                       Counter := Counter + 1;
                       ItemCounter := ItemCounter + 1;
                       IF Counter >= CounterBreak THEN BEGIN
                         Counter := 0;
                         Window.UPDATE(3,ROUND(ItemCounter / CounterTotal * 10000,1));
                       END;
                       Window.UPDATE(1,ItemCounter);
                       ServContract.GET(TempServContract."Contract Type",TempServContract."Contract No.");
                       ServContractMgt.ChangeCustNoOnServContract(NewCustomerNo,NewShiptoCode,ServContract)
                     UNTIL TempServContract.NEXT = 0
                   ELSE
                     Window.UPDATE(3,10000);

                   CounterTotal := TempServItem.COUNT;
                   Counter := 0;
                   ItemCounter := 0;
                   CounterBreak := ROUND(CounterTotal / 100,1,'>');
                   IF TempServItem.FIND('-') THEN
                     REPEAT
                       Counter := Counter + 1;
                       ItemCounter := ItemCounter + 1;
                       IF Counter >= CounterBreak THEN BEGIN
                         Counter := 0;
                         Window.UPDATE(6,ROUND(ItemCounter / CounterTotal * 10000,1));
                       END;
                       Window.UPDATE(4,ItemCounter);
                       ServItem.GET(TempServItem."No.");
                       ServContractMgt.ChangeCustNoOnServItem(NewCustomerNo,NewShiptoCode,ServItem)
                     UNTIL TempServItem.NEXT = 0
                   ELSE
                     Window.UPDATE(6,10000);
                 END;

  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnOpenPage=BEGIN
                   ServContractMgt.GetAffectedItemsOnCustChange(
                     ContractNo,
                     TempServContract,
                     TempServItem,
                     FALSE,
                     ServContractLine."Contract Type"::Contract);

                   IF TempServContract.COUNT > 1 THEN
                     ContractNoText := Text004
                   ELSE
                     ContractNoText := TempServContract."Contract No.";

                   IF TempServItem.COUNT > 1 THEN
                     ServiceItemNoText := Text004
                   ELSE
                     ServiceItemNoText := TempServItem."No.";
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ENG=Options] }

      { 1   ;2   ;Field     ;
                  DrillDown=Yes;
                  CaptionML=[ENU=Contract No.;
                             ENG=Contract No.];
                  SourceExpr=ContractNoText;
                  Editable=FALSE;
                  OnDrillDown=BEGIN
                                PAGE.RUNMODAL(PAGE::"Service Contract List",TempServContract);
                              END;
                               }

      { 11  ;2   ;Field     ;
                  DrillDown=Yes;
                  CaptionML=[ENU=Service Item No.;
                             ENG=Service Item No.];
                  SourceExpr=ServiceItemNoText;
                  Editable=FALSE;
                  OnDrillDown=BEGIN
                                PAGE.RUNMODAL(PAGE::"Service Item List",TempServItem);
                              END;
                               }

      { 3   ;2   ;Field     ;
                  CaptionML=[ENU=Existing Customer No.;
                             ENG=Existing Customer No.];
                  SourceExpr=ServContract."Customer No.";
                  Editable=FALSE }

      { 5   ;2   ;Field     ;
                  CaptionML=[ENU=Existing Ship-to Code;
                             ENG=Existing Ship-to Code];
                  SourceExpr=ServContract."Ship-to Code";
                  Editable=FALSE }

      { 7   ;2   ;Field     ;
                  CaptionML=[ENU=New Customer No.;
                             ENG=New Customer No.];
                  SourceExpr=NewCustomerNo;
                  OnValidate=BEGIN
                               IF NewCustomerNo <> '' THEN
                                 VerifyCustNo(NewCustomerNo,NewShiptoCode);
                             END;

                  OnLookup=BEGIN
                             CLEAR(Cust);
                             Cust."No." := NewCustomerNo;
                             Cust.SETFILTER(Blocked,'<>%1',Cust.Blocked::All);
                             IF PAGE.RUNMODAL(0,Cust) = ACTION::LookupOK THEN
                               IF Cust."No." <> '' THEN BEGIN
                                 VerifyCustNo(Cust."No.",NewShiptoCode);
                                 NewCustomerNo := Cust."No.";
                               END;
                           END;
                            }

      { 9   ;2   ;Field     ;
                  CaptionML=[ENU=New Ship-to Code;
                             ENG=New Ship-to Code];
                  SourceExpr=NewShiptoCode;
                  OnValidate=BEGIN
                               IF NewShiptoCode <> '' THEN
                                 ShipToAddr.GET(NewCustomerNo,NewShiptoCode);
                             END;

                  OnLookup=BEGIN
                             CLEAR(ShipToAddr);
                             ShipToAddr.SETRANGE("Customer No.",NewCustomerNo);
                             ShipToAddr.Code := NewShiptoCode;
                             IF PAGE.RUNMODAL(0,ShipToAddr) = ACTION::LookupOK THEN BEGIN
                               ShipToAddr.GET(ShipToAddr."Customer No.",ShipToAddr.Code);
                               NewShiptoCode := ShipToAddr.Code;
                             END;
                           END;
                            }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=You must fill in the New Customer No. field.;ENG=You must fill in the New Customer No. field.';
      ServContract@1002 : Record 5965;
      Cust@1005 : Record 18;
      ShipToAddr@1006 : Record 222;
      ServContractLine@1027 : Record 5964;
      TempServContract@1019 : TEMPORARY Record 5965;
      TempServItem@1018 : TEMPORARY Record 5940;
      ServContractMgt@1017 : Codeunit 5940;
      ContractNo@1009 : Code[20];
      NewCustomerNo@1011 : Code[20];
      NewShiptoCode@1012 : Code[10];
      Text002@1013 : TextConst 'ENU=If you change the customer number or the ship-to code, the related service orders and sales invoices will not be updated.\\Do you want to continue?;ENG=If you change the customer number or the ship-to code, the related service orders and sales invoices will not be updated.\\Do you want to continue?';
      Text004@1020 : TextConst 'ENU=(Multiple);ENG=(Multiple)';
      ContractNoText@1021 : Text[20];
      ServiceItemNoText@1022 : Text[20];
      Text005@1023 : TextConst 'ENU=Updating related objects...\\;ENG=Updating related objects...\\';
      Text006@1024 : TextConst 'ENU="Contract     ";ENG="Contract     "';
      Text007@1025 : TextConst 'ENU=" from ";ENG=" from "';
      Text008@1026 : TextConst 'ENU="Service item ";ENG="Service item "';
      Text009@1015 : TextConst 'ENU=Are you sure that you want to change the customer number in %1 related contracts/quotes and %2 related service items?;ENG=Are you sure that you want to change the customer number in %1 related contracts/quotes and %2 related service items?';
      Text010@1016 : TextConst 'ENU=You cannot select a customer with the status Blocked.;ENG=You cannot select a customer with the status Blocked.';
      Text011@1003 : TextConst 'ENU=The customer number and the ship-to code that you have selected are the same as the ones on this document.;ENG=The customer number and the ship-to code that you have selected are the same as the ones on this document.';

    PROCEDURE SetRecord@1(ContrNo@1000 : Code[20]);
    BEGIN
      ContractNo := ContrNo;
      ServContract.GET(ServContract."Contract Type"::Contract,ContractNo);
      ServContract.TESTFIELD("Change Status",ServContract."Change Status"::Open);
    END;

    LOCAL PROCEDURE VerifyCustNo@3(CustNo@1000 : Code[20];ShiptoCode@1001 : Code[20]);
    BEGIN
      IF CustNo <> '' THEN BEGIN
        Cust.GET(CustNo);
        IF Cust.Blocked = Cust.Blocked::All THEN
          ERROR(Text010);
        IF NOT ShipToAddr.GET(CustNo,ShiptoCode) THEN
          NewShiptoCode := '';
      END;
    END;

    PROCEDURE InitializeRequest@2(NewCustomerNoFrom@1000 : Code[20];NewShipToCodeFrom@1001 : Code[10]);
    BEGIN
      NewCustomerNo := NewCustomerNoFrom;
      NewShiptoCode := NewShipToCodeFrom;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

