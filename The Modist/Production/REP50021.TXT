OBJECT Report 50021 Move Inv. to New Company
{
  OBJECT-PROPERTIES
  {
    Date=22/04/18;
    Time=12:06:09 PM;
    Modified=Yes;
    Version List=;
  }
  PROPERTIES
  {
    OnPreReport=BEGIN
                  IF COMPANYNAME <> 'The Modist FZ LLC' THEN
                    ERROR('This process only runs in FZ Company');
                  SalesReceivablesSetup.GET;
                END;

  }
  DATASET
  {
    { 1000000000;;DataItem;                  ;
               DataItemTable=Table9087006;
               DataItemTableView=SORTING(Code);
               PrintOnlyIfDetail=Yes;
               OnPreDataItem=BEGIN
                               Item2.RESET;
                               Item2.SETCURRENTKEY("Brand Code");
                               ItemLedgerEntry.RESET;
                               ItemLedgerEntry.SETCURRENTKEY("Item No.","Entry Type","Variant Code","Drop Shipment","Location Code","Posting Date");
                             END;

               OnAfterGetRecord=BEGIN
                                  CreateSalesInvoice := FALSE;
                                  Item2.SETRANGE("Brand Code",Code);
                                  IF Item2.FINDSET THEN BEGIN
                                    REPEAT
                                      Item2.CALCFIELDS(Inventory);
                                      IF NOT CreateSalesInvoice THEN
                                        CreateSalesInvoice := Item2.Inventory > 0;
                                    UNTIL (Item2.NEXT=0) OR (CreateSalesInvoice);
                                  END;

                                  IF CreateSalesInvoice THEN BEGIN
                                    SalesHeader.INIT;
                                    SalesHeader.VALIDATE("Document Type",SalesHeader."Document Type"::Invoice);
                                    SalesHeader."No." :=  NoSeriesManagement.GetNextNo3(SalesReceivablesSetup."Invoice Nos.",TODAY,TRUE,FALSE);

                                    SalesHeader.INSERT(TRUE);
                                    SalesHeader.VALIDATE("Sell-to Customer No.",'TMOD FASHION');
                                    SalesHeader.VALIDATE("Posting Date",TODAY);
                                    SalesHeader.VALIDATE("Sell-to Customer Name",Brand.Name);
                                    SalesHeader.MODIFY(TRUE);

                                    SalesLine.INIT;
                                    SalesLine.VALIDATE("Document Type",SalesHeader."Document Type");
                                    SalesLine.VALIDATE("Document No.",SalesHeader."No.");
                                    LineNo := 1;
                                  END ELSE
                                    CurrReport.SKIP;
                                END;
                                 }

    { 1000000001;1;DataItem;                 ;
               DataItemTable=Table27;
               DataItemTableView=SORTING(Brand Code,Season Code);
               DataItemLink=Brand Code=FIELD(Code) }

    { 1000000002;2;DataItem;                 ;
               DataItemTable=Table5401;
               DataItemTableView=SORTING(Item No.,Code);
               OnAfterGetRecord=BEGIN
                                  Location.RESET;
                                  Location.FINDSET;
                                  REPEAT
                                    SETFILTER("Location Filter",Location.Code);
                                    CALCFIELDS(Inventory);
                                    IF Inventory > 0 THEN BEGIN

                                      ItemLedgerEntry.SETRANGE("Item No.","Item No.");
                                      ItemLedgerEntry.SETRANGE("Variant Code",Code);
                                      ItemLedgerEntry.SETRANGE("Entry Type",ItemLedgerEntry."Entry Type"::Purchase);
                                      ItemLedgerEntry.CALCSUMS("Remaining Quantity");
                                      IF ItemLedgerEntry."Remaining Quantity" > 0 THEN BEGIN
                                        SalesLine.INIT;
                                        SalesLine.VALIDATE("Line No.",LineNo);
                                        SalesLine.VALIDATE(Type,SalesLine.Type::Item);
                                        SalesLine.VALIDATE("No.","Item No.");
                                        SalesLine.VALIDATE("Variant Code",Code);
                                        SalesLine.VALIDATE("Location Code",Location.Code);
                                        SalesLine.VALIDATE(Quantity,ItemLedgerEntry."Remaining Quantity");
                                        SalesLine.VALIDATE("Unit Price",Item."Unit Cost");
                                        SalesLine.INSERT(TRUE);
                                        LineNo += 1
                                      END;
                                    END;
                                  UNTIL Location.NEXT=0;
                                END;

               DataItemLink=Item No.=FIELD(No.) }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      SalesHeader@1000000000 : Record 36;
      SalesLine@1000000001 : Record 37;
      Location@1000000003 : Record 14;
      SalesReceivablesSetup@1000000005 : Record 311;
      Item2@1000000006 : Record 27;
      ItemLedgerEntry@1000000008 : Record 32;
      NoSeriesManagement@1000000004 : Codeunit 396;
      LineNo@1000000002 : Integer;
      CreateSalesInvoice@1000000007 : Boolean;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns:cl="http://schemas.microsoft.com/sqlserver/reporting/2010/01/componentdefinition" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
        <Style />
      </Body>
      <Width>6.5in</Width>
      <Page>
        <Style />
      </Page>
    </ReportSection>
  </ReportSections>
  <Code>Public Function BlankZero(ByVal Value As Decimal)
    if Value = 0 then
        Return ""
    end if
    Return Value
End Function

Public Function BlankPos(ByVal Value As Decimal)
    if Value &gt; 0 then
        Return ""
    end if
    Return Value
End Function

Public Function BlankZeroAndPos(ByVal Value As Decimal)
    if Value &gt;= 0 then
        Return ""
    end if
    Return Value
End Function

Public Function BlankNeg(ByVal Value As Decimal)
    if Value &lt; 0 then
        Return ""
    end if
    Return Value
End Function

Public Function BlankNegAndZero(ByVal Value As Decimal)
    if Value &lt;= 0 then
        Return ""
    end if
    Return Value
End Function
</Code>
  <Language>=User!Language</Language>
  <ConsumeContainerWhitespace>true</ConsumeContainerWhitespace>
  <rd:ReportID>0eeb6585-38ae-40f1-885b-8d50088d51b4</rd:ReportID>
  <rd:ReportUnitType>Inch</rd:ReportUnitType>
</Report>
    END_OF_RDLDATA
  }
}

