OBJECT Codeunit 9062633 Catalogue Extension Logic
{
  OBJECT-PROPERTIES
  {
    Date=22/12/16;
    Time=10:35:05 AM;
    Modified=Yes;
    Version List=NH2016.12;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Catalogue@9062230 : Record 9062385;
      tCatalogueCodeIrrelevant@9062231 : TextConst 'ENU=Catalogue Code is only relevant if "Type" is "G/L Account".;ENG=Catalogue Code is only relevant if "Type" is "G/L Account".';

    LOCAL PROCEDURE "--- Sales Line ---"@9062235();
    BEGIN
    END;

    [EventSubscriber(Table,37,OnAfterValidateEvent,"Catalogue Code")]
    LOCAL PROCEDURE OnSalesLineValidate@9062237(VAR Rec@9062230 : Record 37;VAR xRec@9062231 : Record 37;CurrFieldNo@9062232 : Integer);
    BEGIN
      //DOC NH2016.12 - Event handler for sales line validation
      //  <> Rec: Sales line
      //  <> xRec: Sales line before validation
      //  -> CurrFieldNo: Field number

      IF (CurrFieldNo = Rec.FIELDNO("Catalogue Code")) THEN
        ValidateSalesLineCatalogueCode(Rec);
    END;

    LOCAL PROCEDURE ValidateSalesLineCatalogueCode@9062232(VAR pSalesLine@9062230 : Record 37);
    BEGIN
      //DOC NH2016.12 - Validating sales line catalogue code
      //  <> pSalesLine: The sales line

      IF (pSalesLine."Catalogue Code" = '') THEN
        EXIT;

      IF (pSalesLine.Type <> pSalesLine.Type::"G/L Account") THEN
        ERROR(tCatalogueCodeIrrelevant);

      Catalogue.GET(pSalesLine."Catalogue Code");
      Catalogue.TESTFIELD("G/L Account (Sales)");

      pSalesLine.VALIDATE("No.", Catalogue."G/L Account (Sales)");
      pSalesLine."Catalogue Code" := Catalogue.Code;
      IF (Catalogue.Description <> '') THEN
        pSalesLine.VALIDATE(Description, Catalogue.Description);
      IF (Catalogue."Gen. Prod. Posting Group" <> '') THEN
        pSalesLine.VALIDATE("Gen. Prod. Posting Group", Catalogue."Gen. Prod. Posting Group");
      IF (Catalogue."VAT Prod. Post Group (Sales)" <> '') THEN
        pSalesLine.VALIDATE("VAT Prod. Posting Group", Catalogue."VAT Prod. Post Group (Sales)");
      IF (Catalogue."Default Quantity" <> 0) THEN
        pSalesLine.VALIDATE(Quantity, Catalogue."Default Quantity");
      IF (Catalogue."Unit Price (Sales)" <> 0) THEN
        pSalesLine.VALIDATE("Unit Price", Catalogue."Unit Price (Sales)");
      pSalesLine.MODIFY(TRUE);
    END;

    LOCAL PROCEDURE "--- Purchase Line ---"@9062236();
    BEGIN
    END;

    [EventSubscriber(Table,39,OnAfterValidateEvent,"Catalogue Code")]
    LOCAL PROCEDURE OnPurchaseLineValidate@9062244(VAR Rec@9062230 : Record 39;VAR xRec@9062231 : Record 39;CurrFieldNo@9062232 : Integer);
    BEGIN
      //DOC NH2016.12 - Event handler for purchase line validation
      //  <> Rec: Purchase line
      //  <> xRec: Purchase line before validation
      //  -> CurrFieldNo: Field number

      IF (CurrFieldNo = Rec.FIELDNO("Catalogue Code")) THEN
        ValidatePurchaseLineCatalogueCode(Rec);
    END;

    PROCEDURE ValidatePurchaseLineCatalogueCode@9062231(VAR pPurchaseLine@9062230 : Record 39);
    BEGIN
      //DOC NH2016.12 - Validating purchase line catalogue code
      //  <> pPurchaseLine: The purchase line

      IF (pPurchaseLine."Catalogue Code" = '') THEN
        EXIT;

      IF (pPurchaseLine.Type <> pPurchaseLine.Type::"G/L Account") THEN
        ERROR(tCatalogueCodeIrrelevant);

      Catalogue.GET(pPurchaseLine."Catalogue Code");
      Catalogue.TESTFIELD("G/L Account (Purchase)");

      pPurchaseLine.VALIDATE("No.", Catalogue."G/L Account (Purchase)");
      pPurchaseLine."Catalogue Code" := Catalogue.Code;
      IF (Catalogue.Description <> '') THEN
        pPurchaseLine.VALIDATE(Description, Catalogue.Description);
      IF (Catalogue."Gen. Prod. Posting Group" <> '') THEN
        pPurchaseLine.VALIDATE("Gen. Prod. Posting Group", Catalogue."Gen. Prod. Posting Group");
      IF (Catalogue."VAT Prod. Post Group (Purch)" <> '') THEN
        pPurchaseLine.VALIDATE("VAT Prod. Posting Group", Catalogue."VAT Prod. Post Group (Purch)");
      IF (Catalogue."Default Quantity" <> 0) THEN
        pPurchaseLine.VALIDATE(Quantity, Catalogue."Default Quantity");
      IF (Catalogue."Unit Cost (Purchase)" <> 0) THEN
        pPurchaseLine.VALIDATE("Unit Cost", Catalogue."Unit Cost (Purchase)");
      IF pPurchaseLine.MODIFY(TRUE) THEN;
    END;

    BEGIN
    {
      //DOC NH2016.12 JH 22/10/2015 - Created
      //DOC NH2016.12 JH 10/11/2015 - Extensions split
    }
    END.
  }
}

