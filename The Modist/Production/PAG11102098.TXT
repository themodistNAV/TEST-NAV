OBJECT Page 11102098 OM - Rollback Objects
{
  OBJECT-PROPERTIES
  {
    Date=19/11/15;
    Time=12:00:00 PM;
    Version List=OMA10.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Rollback Objects;
               ENU=Rollback Objects;
               ESP=Rollback Objects;
               FRA=Rollback Objects;
               NLD=Objecten terugrollen;
               DEA=Rollback Objects];
    InsertAllowed=No;
    LinksAllowed=No;
    SourceTable=Table11102052;
    SourceTableView=SORTING(Object Type,Object No.);
    PageType=Worksheet;
    SourceTableTemporary=Yes;
    ShowFilter=No;
    OnOpenPage=BEGIN
                 SetEnabled;

                 IF RollbackNo <> '' THEN
                   GetObjects;
               END;

    ActionList=ACTIONS
    {
      { 1       ;0   ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 2       ;1   ;Action    ;
                      ShortCutKey=Ctrl+D;
                      CaptionML=[DEU=&Code;
                                 ENU=&Code;
                                 ESP=&Code;
                                 FRA=&Code;
                                 NLD=&Code;
                                 DEA=&Code];
                      Promoted=Yes;
                      Image=DesignCodeBehind;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowCode;
                               END;
                                }
      { 3       ;1   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[DEU=Export;
                                 ENU=Export;
                                 ESP=Export;
                                 FRA=Export;
                                 NLD=Exporteren;
                                 DEA=Export];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Export;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 CALHistoryObject@1000 : Record 11102052;
                                 Progressbar@1001 : Codeunit 11102044;
                                 SourceControl@1002 : Codeunit 11102050;
                                 CommonDialog@1003 : Codeunit 11102059;
                                 FileHandler@1004 : Codeunit 11102097;
                                 oFile@1005 : File;
                                 ServerFileName@1006 : Text;
                                 ctDefaultFileName@1007 : TextConst 'DEU=objects.txt;ENU=objects.txt;ESP=objects.txt;FRA=objects.txt;NLD=objects.txt;DEA=objects.txt';
                                 ctExportingObjects@1008 : TextConst 'DEU=Exporting objects...;ENU=Exporting objects...;ESP=Exporting objects...;FRA=Exporting objects...;NLD=Objecten exporteren...;DEA=Exporting objects...';
                               BEGIN
                                 CommonDialog.AddKnownExtension('txt-o');
                                 IF NOT CommonDialog.SaveFile(ExportFileName, ServerFileName, ctDefaultFileName) THEN
                                   EXIT;

                                 oFile.TEXTMODE(TRUE);
                                 oFile.WRITEMODE(TRUE);
                                 oFile.CREATE(ServerFileName);
                                 Progressbar.Open(ctExportingObjects, 2);

                                 GetSelectedRecords(CALHistoryObject);

                                 CALHistoryObject.SETRANGE("C/AL Code Present", TRUE);
                                 Progressbar.BarSize := CALHistoryObject.COUNT;
                                 IF CALHistoryObject.FINDSET THEN
                                   REPEAT
                                     Progressbar.AddToBar(1);
                                     SourceControl.AppendHistoryObjectToFile(oFile, CALHistoryObject."Entry No.");
                                   UNTIL CALHistoryObject.NEXT = 0;

                                 Progressbar.Close;
                                 oFile.CLOSE;

                                 FileHandler.DownloadToClient(ServerFileName, ExportFileName, ctDefaultFileName);
                               END;
                                }
      { 4       ;1   ;Action    ;
                      ShortCutKey=F9;
                      CaptionML=[DEU=Rollback;
                                 ENU=Rollback;
                                 ESP=Rollback;
                                 FRA=Rollback;
                                 NLD=Terugrollen;
                                 DEA=Rollback];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Restore;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 CALHistoryObject@1000 : Record 11102052;
                                 SourceControl@1001 : Codeunit 11102050;
                                 ctObjectsRestored@1002 : TextConst 'DEU=Objects restored.;ENU=Objects restored.;ESP=Objects restored.;FRA=Objects restored.;NLD=Objecten hersteld.;DEA=Objects restored.';
                               BEGIN
                                 GetSelectedRecords(CALHistoryObject);
                                 IF NOT SourceControl.RestoreObjects(CALHistoryObject) THEN
                                   EXIT;

                                 GetObjects;

                                 MESSAGE(ctObjectsRestored);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 5   ;0   ;Container ;
                ContainerType=ContentArea }

    { 6   ;1   ;Group      }

    { 7   ;2   ;Field     ;
                CaptionML=[DEU=Rollback Type;
                           ENU=Rollback Type;
                           ESP=Rollback Type;
                           FRA=Rollback Type;
                           NLD=Terugrolsoort;
                           DEA=Rollback Type];
                OptionCaptionML=[DEU=Date/Time,Project,Transport;
                                 ENU=Date/Time,Project,Transport;
                                 ESP=Date/Time,Project,Transport;
                                 FRA=Date/Time,Project,Transport;
                                 NLD=Datumtijd,Project,Transport;
                                 DEA=Date/Time,Project,Transport];
                SourceExpr=RollbackType;
                OnValidate=BEGIN
                             RollbackNo := '';
                             SetEnabled;
                           END;
                            }

    { 8   ;2   ;Field     ;
                CaptionML=[DEU=Rollback to;
                           ENU=Rollback to;
                           ESP=Rollback to;
                           FRA=Rollback to;
                           NLD=Terugrollen tot;
                           DEA=Rollback to];
                SourceExpr=RollbackDateTime;
                Enabled=NoFieldsEnabled;
                OnValidate=BEGIN
                             GetObjects;
                           END;
                            }

    { 9   ;2   ;Field     ;
                CaptionML=[DEU=No.;
                           ENU=No.;
                           ESP=No.;
                           FRA=No.;
                           NLD=Nr.;
                           DEA=No.];
                SourceExpr=RollbackNo;
                Enabled=NoFieldsEnabled;
                OnValidate=BEGIN
                             GetObjects;
                           END;

                OnLookup=VAR
                           Project@1000 : Record 11102036;
                           Transport@1001 : Record 11102043;
                         BEGIN
                           CASE RollbackType OF
                             RollbackType::Project :
                               BEGIN
                                 IF Project.GET(Text) THEN
                                   ;
                                 IF PAGE.RUNMODAL(0, Project) = ACTION::LookupOK THEN BEGIN
                                   Text := Project."No.";
                                   EXIT(TRUE);
                                 END;
                               END;

                             RollbackType::Transport :
                               BEGIN
                                 IF Transport.GET(Text) THEN
                                   ;
                                 IF PAGE.RUNMODAL(0, Transport) = ACTION::LookupOK THEN BEGIN
                                   Text := Transport."No.";
                                   EXIT(TRUE);
                                 END;
                               END;

                           END;
                         END;
                          }

    { 10  ;1   ;Group     ;
                GroupType=Repeater }

    { 11  ;2   ;Field     ;
                SourceExpr="Entry No.";
                Editable=FALSE }

    { 12  ;2   ;Field     ;
                SourceExpr="Import Entry No.";
                Visible=FALSE;
                Editable=FALSE }

    { 13  ;2   ;Field     ;
                SourceExpr="Object Type";
                Editable=FALSE }

    { 14  ;2   ;Field     ;
                SourceExpr="Object No.";
                Editable=FALSE;
                LookupPageID=OM - Object List }

    { 15  ;2   ;Field     ;
                SourceExpr="Object Name";
                Editable=FALSE }

    { 16  ;2   ;Field     ;
                DrillDown=No;
                SourceExpr="Object Caption";
                Visible=FALSE }

    { 17  ;2   ;Field     ;
                SourceExpr=Modified;
                Editable=FALSE }

    { 18  ;2   ;Field     ;
                SourceExpr=Compiled;
                Editable=FALSE }

    { 19  ;2   ;Field     ;
                SourceExpr="Version List";
                Editable=FALSE }

    { 20  ;2   ;Field     ;
                SourceExpr="Object Date";
                Editable=FALSE }

    { 21  ;2   ;Field     ;
                SourceExpr="Object Time";
                Editable=FALSE }

    { 22  ;2   ;Field     ;
                SourceExpr="Locked By";
                Visible=FALSE;
                Editable=FALSE }

    { 23  ;2   ;Field     ;
                CaptionML=[DEU=Assigned Projects;
                           ENU=Assigned Projects;
                           ESP=Assigned Projects;
                           FRA=Assigned Projects;
                           NLD=Toegewezen projecten;
                           DEA=Assigned Projects];
                SourceExpr=AssignedProjectsText;
                Visible=FALSE;
                Editable=FALSE;
                OnAssistEdit=BEGIN
                               DrillDownNoOfAssignedProject;
                             END;
                              }

    { 24  ;2   ;Field     ;
                SourceExpr="Action Type";
                Editable=FALSE }

    { 25  ;2   ;Field     ;
                SourceExpr="Added By";
                Visible=FALSE;
                Editable=FALSE }

    { 26  ;2   ;Field     ;
                SourceExpr="Added Date";
                Visible=FALSE;
                Editable=FALSE }

    { 27  ;2   ;Field     ;
                SourceExpr="Added Time";
                Visible=FALSE;
                Editable=FALSE }

    { 28  ;2   ;Field     ;
                SourceExpr="Added Date Time";
                Visible=FALSE;
                Editable=FALSE }

    { 29  ;1   ;Field     ;
                SourceExpr=ExportFileName;
                Visible=FALSE }

    { 30  ;1   ;Field     ;
                SourceExpr=ImportFileName;
                Visible=FALSE }

    { 31  ;0   ;Container ;
                ContainerType=FactBoxArea }

    { 32  ;1   ;Part      ;
                SubPageLink=Object Type=FIELD(Object Type),
                            Object No.=FIELD(Object No.);
                PagePartID=Page11175794;
                PartType=Page }

  }
  CODE
  {
    VAR
      RollbackDateTime@1000 : DateTime;
      ExportFileName@1001 : Text;
      ImportFileName@1002 : Text;
      RollbackNo@1003 : Code[20];
      RollbackType@1004 : 'DateTime,Project,Transport';
      NoFieldsEnabled@1005 : Boolean INDATASET;

    LOCAL PROCEDURE GetObjects@1();
    BEGIN
      CASE RollbackType OF

        RollbackType::DateTime :
          GetObjectsDateTime;

        RollbackType::Project :
          GetObjectProject;
          //GetObjectProjectCustomerDb;

        RollbackType::Transport :
          GetObjectTransport;
          //GetObjectTransportCustomerDb;

      END;
    END;

    LOCAL PROCEDURE GetObjectsDateTime@2();
    VAR
      CALHistoryObject@1000 : Record 11102052;
      CALHistoryCompiled@1001 : Record 11102077;
      Object@1002 : Record 2000000001;
    BEGIN
      RESET;
      DELETEALL;

      Object.SETFILTER(Type, '<>%1', Object.Type::TableData);
      Object.SETRANGE("Company Name", '');
      Object.SETFILTER(Date, '>=%1', DT2DATE(RollbackDateTime));
      IF Object.FINDSET THEN
        REPEAT
          IF (Object.Date > DT2DATE(RollbackDateTime)) OR (Object.Time > DT2TIME(RollbackDateTime)) THEN BEGIN

            CALHistoryObject.SETCURRENTKEY("Object Type", "Object No.", "Object Date", "Object Time");
            CALHistoryObject.SETRANGE("Object Type", Object.Type);
            CALHistoryObject.SETRANGE("Object No.", Object.ID);
            CALHistoryObject.SETFILTER("Object Date", '<%1', DT2DATE(RollbackDateTime));
            CALHistoryObject.SETRANGE("Object Time");
            CALHistoryObject.SETRANGE("BLOB Reference Present", TRUE);
            IF CALHistoryObject.FINDLAST THEN BEGIN
              CALHistoryObject.SETRANGE("Object Date", DT2DATE(RollbackDateTime));
              CALHistoryObject.SETFILTER("Object Time", '<=%1', DT2TIME(RollbackDateTime));
              IF CALHistoryObject.FINDLAST THEN
                ;

              CALHistoryCompiled.GET(CALHistoryObject."Entry No.");
              CALHistoryCompiled.CALCFIELDS("BLOB Reference");
              Rec := CALHistoryObject;
              INSERT;

            END;
          END;
        UNTIL Object.NEXT = 0;

      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE GetObjectProject@3();
    VAR
      ProjectObject@1000 : Record 11102037;
      Modification@1001 : Record 11102042;
      CALHistoryObject@1002 : Record 11102052;
      CALHistoryCompiled@1003 : Record 11102077;
    BEGIN
      RESET;
      DELETEALL;

      ProjectObject.SETRANGE("Project No.", RollbackNo);
      IF ProjectObject.FINDSET THEN
        REPEAT

          Modification.SETCURRENTKEY("Assigned to Project No.", "Object Type", "Object No.", "Object Date", "Object Time");
          Modification.SETRANGE("Assigned to Project No.", RollbackNo);
          Modification.SETRANGE("Object Type", ProjectObject."Object Type");
          Modification.SETRANGE("Object No.", ProjectObject."Object No.");
          Modification.SETFILTER("Object Date", '<>%1', 0D);
          IF Modification.FINDFIRST THEN BEGIN

            CALHistoryObject.SETCURRENTKEY("Object Type", "Object No.", "Object Date", "Object Time");
            CALHistoryObject.SETRANGE("Object Type", Modification."Object Type");
            CALHistoryObject.SETRANGE("Object No.", Modification."Object No.");
            CALHistoryObject.SETFILTER("Object Date", '<%1', Modification."Object Date");
            CALHistoryObject.SETRANGE("Object Time");
            CALHistoryObject.SETRANGE("BLOB Reference Present", TRUE);
            IF CALHistoryObject.FINDLAST THEN BEGIN
              CALHistoryObject.SETRANGE("Object Date", Modification."Object Date");
              CALHistoryObject.SETFILTER("Object Time", '<=%1', Modification."Object Time");
              IF CALHistoryObject.FINDLAST THEN
                ;

              CALHistoryCompiled.GET(CALHistoryObject."Entry No.");
              CALHistoryCompiled.CALCFIELDS("BLOB Reference");
              Rec := CALHistoryObject;
              INSERT;

            END;
          END;

        UNTIL ProjectObject.NEXT = 0;

      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE GetObjectProjectCustomerDb@4();
    VAR
      ProjectObject@1000 : Record 11102037;
      CALHistoryObject@1001 : Record 11102052;
      CALHistoryCompiled@1002 : Record 11102077;
    BEGIN
      RESET;
      DELETEALL;

      ProjectObject.SETRANGE("Project No.", RollbackNo);
      IF ProjectObject.FINDSET THEN
        REPEAT

          IF (ProjectObject."Rollback Date" <> 0D) AND (ProjectObject."Rollback Time" <> 0T) THEN BEGIN

            CALHistoryObject.SETCURRENTKEY("Object Type", "Object No.", "Object Date", "Object Time");
            CALHistoryObject.SETRANGE("Object Type", ProjectObject."Object Type");
            CALHistoryObject.SETRANGE("Object No.", ProjectObject."Object No.");
            CALHistoryObject.SETFILTER("Object Date", '<%1', ProjectObject."Rollback Date");
            CALHistoryObject.SETRANGE("Object Time");
            CALHistoryObject.SETRANGE("BLOB Reference Present", TRUE);
            IF CALHistoryObject.FINDLAST THEN BEGIN
              CALHistoryObject.SETRANGE("Object Date", ProjectObject."Rollback Date");
              CALHistoryObject.SETFILTER("Object Time", '<=%1', ProjectObject."Rollback Time");
              IF CALHistoryObject.FINDLAST THEN
                ;

              CALHistoryCompiled.GET(CALHistoryObject."Entry No.");
              CALHistoryCompiled.CALCFIELDS("BLOB Reference");
              Rec := CALHistoryObject;
              INSERT;

            END;
          END;

        UNTIL ProjectObject.NEXT = 0;

      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE GetObjectTransport@5();
    VAR
      Project@1000 : Record 11102036;
      ProjectObject@1001 : Record 11102037;
      Modification@1002 : Record 11102042;
      CALHistoryObject@1003 : Record 11102052;
      CALHistoryCompiled@1004 : Record 11102077;
      TmpObject@1005 : TEMPORARY Record 2000000001;
    BEGIN
      RESET;
      DELETEALL;

      Project.SETCURRENTKEY("Transport No.");
      Project.SETRANGE("Transport No.", RollbackNo);
      IF Project.FINDSET THEN
        REPEAT
          ProjectObject.SETRANGE("Project No.", Project."No.");
          IF ProjectObject.FINDSET THEN
            REPEAT

              Modification.SETCURRENTKEY("Assigned to Project No.", "Object Type", "Object No.", "Object Date", "Object Time");
              Modification.SETRANGE("Assigned to Project No.", Project."No.");
              Modification.SETRANGE("Object Type", ProjectObject."Object Type");
              Modification.SETRANGE("Object No.", ProjectObject."Object No.");
              Modification.SETFILTER("Object Date", '<>%1', 0D);
              IF Modification.FINDFIRST THEN
                IF TmpObject.GET(Modification."Object Type", '', Modification."Object No.") THEN BEGIN
                  IF (TmpObject.Date > Modification."Object Date") OR
                     ((TmpObject.Date = Modification."Object Date") AND (TmpObject.Time = Modification."Object Time"))
                  THEN BEGIN
                    TmpObject.Date := Modification."Object Date";
                    TmpObject.Time := Modification."Object Time";
                    TmpObject.MODIFY;
                  END;
                END ELSE BEGIN
                  TmpObject.Type := Modification."Object Type";
                  TmpObject.ID := Modification."Object No.";
                  TmpObject.Date := Modification."Object Date";
                  TmpObject.Time := Modification."Object Time";
                  TmpObject.INSERT;
                END;

            UNTIL ProjectObject.NEXT = 0;

        UNTIL Project.NEXT = 0;

      IF TmpObject.FINDSET THEN
        REPEAT
          CALHistoryObject.SETCURRENTKEY("Object Type", "Object No.", "Object Date", "Object Time");
          CALHistoryObject.SETRANGE("Object Type", TmpObject.Type);
          CALHistoryObject.SETRANGE("Object No.", TmpObject.ID);
          CALHistoryObject.SETFILTER("Object Date", '<%1', TmpObject.Date);
          CALHistoryObject.SETRANGE("Object Time");
          CALHistoryObject.SETRANGE("BLOB Reference Present", TRUE);
          IF CALHistoryObject.FINDLAST THEN BEGIN
            CALHistoryObject.SETRANGE("Object Date", TmpObject.Date);
            CALHistoryObject.SETFILTER("Object Time", '<=%1', TmpObject.Time);
            IF CALHistoryObject.FINDLAST THEN
              ;

            CALHistoryCompiled.GET(CALHistoryObject."Entry No.");
            CALHistoryCompiled.CALCFIELDS("BLOB Reference");
            Rec := CALHistoryObject;
            INSERT;

          END;
        UNTIL TmpObject.NEXT = 0;

      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE GetObjectTransportCustomerDb@6();
    VAR
      Project@1000 : Record 11102036;
      ProjectObject@1001 : Record 11102037;
      CALHistoryObject@1002 : Record 11102052;
      CALHistoryCompiled@1003 : Record 11102077;
      TmpObject@1004 : TEMPORARY Record 2000000001;
    BEGIN
      RESET;
      DELETEALL;

      Project.SETCURRENTKEY("Transport No.");
      Project.SETRANGE("Transport No.", RollbackNo);
      IF Project.FINDSET THEN
        REPEAT
          ProjectObject.SETRANGE("Project No.", Project."No.");
          IF ProjectObject.FINDSET THEN
            REPEAT

              IF (ProjectObject."Rollback Date" <> 0D) AND (ProjectObject."Rollback Time" <> 0T) THEN
                IF TmpObject.GET(ProjectObject."Object Type", '', ProjectObject."Object No.") THEN BEGIN
                  IF (TmpObject.Date > ProjectObject."Rollback Date") OR
                     ((TmpObject.Date = ProjectObject."Rollback Date") AND (TmpObject.Time = ProjectObject."Rollback Time"))
                  THEN BEGIN
                    TmpObject.Date := ProjectObject."Rollback Date";
                    TmpObject.Time := ProjectObject."Rollback Time";
                    TmpObject.MODIFY;
                  END;
                END ELSE BEGIN
                  TmpObject.Type := ProjectObject."Object Type";
                  TmpObject.ID := ProjectObject."Object No.";
                  TmpObject.Date := ProjectObject."Rollback Date";
                  TmpObject.Time := ProjectObject."Rollback Time";
                  TmpObject.INSERT;
                END;

            UNTIL ProjectObject.NEXT = 0;

        UNTIL Project.NEXT = 0;

      IF TmpObject.FINDSET THEN
        REPEAT
          CALHistoryObject.SETCURRENTKEY("Object Type", "Object No.", "Object Date", "Object Time");
          CALHistoryObject.SETRANGE("Object Type", TmpObject.Type);
          CALHistoryObject.SETRANGE("Object No.", TmpObject.ID);
          CALHistoryObject.SETFILTER("Object Date", '<%1', TmpObject.Date);
          CALHistoryObject.SETRANGE("Object Time");
          CALHistoryObject.SETRANGE("BLOB Reference Present", TRUE);
          IF CALHistoryObject.FINDLAST THEN BEGIN
            CALHistoryObject.SETRANGE("Object Date", TmpObject.Date);
            CALHistoryObject.SETFILTER("Object Time", '<=%1', TmpObject.Time);
            IF CALHistoryObject.FINDLAST THEN
              ;

            CALHistoryCompiled.GET(CALHistoryObject."Entry No.");
            CALHistoryCompiled.CALCFIELDS("BLOB Reference");
            Rec := CALHistoryObject;
            INSERT;

          END;
        UNTIL TmpObject.NEXT = 0;

      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE SetEnabled@7();
    BEGIN
      NoFieldsEnabled := RollbackType = RollbackType::DateTime;
    END;

    PROCEDURE SetRunType@8(NewType@1000 : ',Project,Transport';NewNo@1001 : Code[20]);
    BEGIN
      RollbackType := NewType;
      RollbackNo := NewNo;
    END;

    LOCAL PROCEDURE GetSelectedRecords@9(VAR CALHistoryObject@1000 : TEMPORARY Record 11102052);
    VAR
      OriginalRec@1001 : Record 11102052;
    BEGIN
      CurrPage.SETSELECTIONFILTER(CALHistoryObject);
      IF CALHistoryObject.COUNT = 1 THEN BEGIN

        CALHistoryObject.RESET;

        OriginalRec := Rec;
        IF FINDSET THEN
          REPEAT
            CALHistoryObject := Rec;
            CALHistoryObject.MARK(TRUE);
          UNTIL NEXT = 0;
        Rec := OriginalRec;

        CALHistoryObject.MARKEDONLY(TRUE);

      END;
    END;

    BEGIN
    END.
  }
}

