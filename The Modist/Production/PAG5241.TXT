OBJECT Page 5241 CRM Coupling Customer
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Microsoft Dynamics CRM Account Coupling;
               ENG=Microsoft Dynamics CRM Account Coupling];
    SourceTable=Table18;
    PageType=StandardDialog;
    OnInit=BEGIN
             SynchAction := SynchAction::PushToCRM;
             SetPushActionCheckboxes;
           END;

    OnAfterGetRecord=VAR
                       CRMIntegrationRecord@1000 : Record 5331;
                       CRMID@1001 : GUID;
                     BEGIN
                       IF CRMIntegrationRecord.FindIDFromRecordID(RECORDID,CRMID) THEN BEGIN
                         CRMAccount.GET(CRMID);
                         OriginalCRMAccount := CRMAccount;
                         SynchAction := SynchAction::DoNotSynch;
                         SetPushActionCheckboxes;
                       END;
                     END;

  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                CaptionML=[ENU=Coupling;
                           ENG=Coupling];
                GroupType=Group;
                Layout=Rows }

    { 3   ;2   ;Group     ;
                CaptionML=[ENU=Dynamics NAV;
                           ENG=Dynamics NAV];
                GroupType=Group }

    { 4   ;3   ;Field     ;
                CaptionML=[ENU=Customer;
                           ENG=Customer];
                SourceExpr=Name;
                Editable=FALSE }

    { 5   ;3   ;Field     ;
                Name=SynchActionControl;
                CaptionML=[ENU=Synchronize After Coupling;
                           ENG=Synchronise After Coupling];
                OptionCaptionML=[ENU=No,Yes - Use the Dynamics NAV data,Yes - Use the Dynamics CRM data;
                                 ENG=No,Yes - Use the Dynamics NAV data,Yes - Use the Dynamics CRM data];
                SourceExpr=SynchAction;
                Enabled=NOT CreateNewInCRM;
                OnValidate=BEGIN
                             SetPushActionCheckboxes;
                           END;
                            }

    { 6   ;2   ;Group     ;
                CaptionML=[ENU=Dynamics CRM;
                           ENG=Dynamics CRM];
                GroupType=Group }

    { 7   ;3   ;Field     ;
                Name=CRM Account Name;
                CaptionML=[ENU=Account;
                           ENG=Account];
                SourceExpr=CRMAccount.Name;
                Enabled=NOT CreateNewInCRM;
                OnValidate=VAR
                             ManualCRMAccount@1000 : Record 5341;
                             PreviouslySelectedCRMAccount@1001 : Record 5341;
                             CRMAccountFound@1002 : Boolean;
                           BEGIN
                             PreviouslySelectedCRMAccount := CRMAccount;
                             ManualCRMAccount.SETRANGE(Name,CRMAccount.Name);

                             IF ManualCRMAccount.FINDFIRST THEN
                               CRMAccountFound := TRUE
                             ELSE BEGIN
                               ManualCRMAccount.SETCURRENTKEY(Name);
                               ManualCRMAccount.SETFILTER(Name,'%1',CRMAccount.Name + '*');
                               IF ManualCRMAccount.FINDFIRST THEN
                                 CRMAccountFound := TRUE;
                             END;

                             IF CRMAccountFound THEN BEGIN
                               CRMAccount := ManualCRMAccount;
                               IF PreviouslySelectedCRMAccount.AccountId <> CRMAccount.AccountId THEN
                                 HandleNewCRMAccount;
                             END ELSE
                               ERROR(STRSUBSTNO(NoSuchCRMRecordErr,CRMAccount.Name));
                           END;

                OnLookup=VAR
                           PreviouslySelectedCRMAccount@1002 : Record 5341;
                           CRMAccountList@1000 : Page 5341;
                         BEGIN
                           CRMAccountList.SETRECORD(CRMAccount);
                           CRMAccountList.SetCurrentlyCoupledCRMAccount(OriginalCRMAccount);
                           CRMAccountList.LOOKUPMODE(TRUE);
                           PreviouslySelectedCRMAccount := CRMAccount;

                           IF CRMAccountList.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             CRMAccountList.GETRECORD(CRMAccount);
                             IF PreviouslySelectedCRMAccount.AccountId <> CRMAccount.AccountId THEN
                               HandleNewCRMAccount;
                           END;
                         END;
                          }

    { 8   ;3   ;Field     ;
                Name=CreateNewControl;
                CaptionML=[ENU=Create New Account;
                           ENG=Create New Account];
                SourceExpr=CreateNewInCRM;
                OnValidate=BEGIN
                             IF CreateNewInCRM THEN BEGIN
                               SavedCRMAccount := CRMAccount;
                               SavedSynchAction := SynchAction;
                               SynchAction := SynchAction::PushToCRM;
                               CRMAccount.INIT;
                             END ELSE BEGIN
                               CRMAccount := SavedCRMAccount;
                               SynchAction := SavedSynchAction;
                             END;

                             SetPushActionCheckboxes;
                           END;
                            }

    { 9   ;1   ;Group     ;
                CaptionML=[ENU=Coupled Records;
                           ENG=Coupled Records];
                Editable=FALSE;
                GroupType=Group }

    { 10  ;2   ;Group     ;
                GroupType=FixedLayout }

    { 11  ;3   ;Group     ;
                CaptionML=[ENU=Dynamics NAV Customer;
                           ENG=Dynamics NAV Customer];
                GroupType=Group;
                Layout=Columns }

    { 12  ;4   ;Field     ;
                Name=Name2;
                CaptionML=[ENU=Name;
                           ENG=Name];
                SourceExpr=Name }

    { 13  ;4   ;Field     ;
                SourceExpr=Contact }

    { 14  ;4   ;Field     ;
                SourceExpr=Address }

    { 15  ;4   ;Field     ;
                SourceExpr="Address 2" }

    { 16  ;4   ;Field     ;
                SourceExpr="Post Code" }

    { 17  ;4   ;Field     ;
                SourceExpr=City }

    { 18  ;4   ;Field     ;
                SourceExpr="Country/Region Code" }

    { 19  ;4   ;Field     ;
                Name=PushToCRMControl;
                CaptionML=[ENU=Use for Synchronization;
                           ENG=Use for Synchronisation];
                SourceExpr=PushToCRM }

    { 20  ;3   ;Group     ;
                CaptionML=[ENU=Dynamics CRM Account;
                           ENG=Dynamics CRM Account];
                GroupType=Group }

    { 21  ;4   ;Field     ;
                SourceExpr=CRMAccount.Name }

    { 22  ;4   ;Field     ;
                SourceExpr=CRMAccount.Address1_PrimaryContactName }

    { 23  ;4   ;Field     ;
                SourceExpr=CRMAccount.Address1_Line1 }

    { 24  ;4   ;Field     ;
                SourceExpr=CRMAccount.Address1_Line2 }

    { 25  ;4   ;Field     ;
                SourceExpr=CRMAccount.Address1_PostalCode }

    { 26  ;4   ;Field     ;
                SourceExpr=CRMAccount.Address1_City }

    { 27  ;4   ;Field     ;
                SourceExpr=CRMAccount.Address1_Country }

    { 28  ;4   ;Field     ;
                Name=PushToNAVControl;
                SourceExpr=PushToNAV }

  }
  CODE
  {
    VAR
      CRMAccount@1001 : Record 5341;
      OriginalCRMAccount@1010 : Record 5341;
      IntegrationTableMapping@1009 : Record 5335;
      SavedCRMAccount@1007 : Record 5341;
      CreateNewInCRM@1000 : Boolean;
      PushToCRM@1003 : Boolean;
      PushToNAV@1004 : Boolean;
      InitialSynchDisabledErr@1006 : TextConst 'ENU=No initial synchronization direction was specified because initial synchronization was disabled.;ENG=No initial synchronisation direction was specified because initial synchronisation was disabled.';
      NoSuchCRMRecordErr@1011 : TextConst '@@@="%1 = The Account name entered by the user";ENU=Account with name %1 does not exist in Microsoft Dynamics CRM.;ENG=Account with name %1 does not exist in Microsoft Dynamics CRM.';
      SynchAction@1012 : 'DoNotSynch,PushToCRM,PushToNAV';
      SavedSynchAction@1013 : Integer;

    LOCAL PROCEDURE SetPushActionCheckboxes@14();
    BEGIN
      IF SynchAction = SynchAction::DoNotSynch THEN BEGIN
        PushToCRM := FALSE;
        PushToNAV := FALSE;
      END ELSE BEGIN
        PushToCRM := SynchAction = SynchAction::PushToCRM;
        PushToNAV := NOT PushToCRM;
      END
    END;

    LOCAL PROCEDURE HandleNewCRMAccount@7();
    VAR
      CRMIntegrationRecord@1001 : Record 5331;
    BEGIN
      IF OriginalCRMAccount.AccountId <> CRMAccount.AccountId THEN
        CRMIntegrationRecord.AssertRecordIDCanBeCoupled(RECORDID,CRMAccount.AccountId);
    END;

    PROCEDURE GetCRMID@6() : GUID;
    BEGIN
      EXIT(CRMAccount.AccountId);
    END;

    PROCEDURE GetCreateNewInCRM@19() : Boolean;
    BEGIN
      EXIT(CreateNewInCRM);
    END;

    PROCEDURE GetPerformInitialSynchronization@3() : Boolean;
    BEGIN
      EXIT(SynchAction <> SynchAction::DoNotSynch);
    END;

    PROCEDURE GetInitialSynchronizationDirection@4() : Integer;
    BEGIN
      IF SynchAction = SynchAction::DoNotSynch THEN
        ERROR(InitialSynchDisabledErr);

      IF SynchAction = SynchAction::PushToCRM THEN
        EXIT(IntegrationTableMapping.Direction::ToIntegrationTable);

      EXIT(IntegrationTableMapping.Direction::FromIntegrationTable);
    END;

    BEGIN
    END.
  }
}

