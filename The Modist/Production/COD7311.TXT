OBJECT Codeunit 7311 Whse. Worksheet-Create
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      WhseMgt@1002 : Codeunit 5775;

    PROCEDURE FromWhseShptLine@9(WhseWkshTemplateName@1005 : Code[10];WhseWkshName@1001 : Code[10];WhseShptLine@1000 : Record 7321) : Boolean;
    VAR
      WhseWkshLine@1002 : Record 7326;
    BEGIN
      TransferFromWhseShptLine(WhseWkshLine,WhseWkshTemplateName,WhseWkshName,WhseShptLine);
      IF CreateWhseWkshLine(WhseWkshLine) THEN
        EXIT(TRUE);
    END;

    LOCAL PROCEDURE TransferFromWhseShptLine@10(VAR WhseWkshLine@1000 : Record 7326;WhseWkshTemplateName@1004 : Code[10];WhseWkshName@1003 : Code[10];WhseShptLine@1005 : Record 7321);
    VAR
      WhseShptHeader@1002 : Record 7320;
    BEGIN
      WITH WhseShptLine DO BEGIN
        WhseWkshLine.SETCURRENTKEY(
          "Whse. Document Type","Whse. Document No.","Whse. Document Line No.");
        WhseWkshLine.SETRANGE("Whse. Document Type",WhseWkshLine."Whse. Document Type"::Shipment);
        WhseWkshLine.SETRANGE("Whse. Document No.","No.");
        WhseWkshLine.SETRANGE("Whse. Document Line No.","Line No.");
        IF WhseWkshLine.FIND('-') THEN
          EXIT;

        FindLastWhseWkshLine(WhseWkshLine,WhseWkshTemplateName,WhseWkshName,"Location Code");
        WhseShptHeader.GET("No.");

        WhseWkshLine.INIT;
        WhseWkshLine.SetHideValidationDialog(TRUE);
        WhseWkshLine."Line No." := WhseWkshLine."Line No." + 10000;
        WhseWkshLine."Source Type" := "Source Type";
        WhseWkshLine."Source Subtype" := "Source Subtype";
        WhseWkshLine."Source No." := "Source No.";
        WhseWkshLine."Source Line No." := "Source Line No.";
        WhseWkshLine."Source Document" := WhseMgt.GetSourceDocument("Source Type","Source Subtype");
        WhseWkshLine."Location Code" := "Location Code";
        WhseWkshLine."Item No." := "Item No.";
        WhseWkshLine."Variant Code" := "Variant Code";
        WhseWkshLine."Unit of Measure Code" := "Unit of Measure Code";
        WhseWkshLine."Qty. per Unit of Measure" := "Qty. per Unit of Measure";
        WhseWkshLine.Description := Description;
        WhseWkshLine."Description 2" := "Description 2";
        WhseWkshLine."Due Date" := "Due Date";
        WhseWkshLine."Qty. Handled" := "Qty. Picked" + "Pick Qty.";
        WhseWkshLine."Qty. Handled (Base)" := "Qty. Picked (Base)" + "Pick Qty. (Base)";
        WhseWkshLine.VALIDATE(Quantity,Quantity);
        WhseWkshLine."To Zone Code" := "Zone Code";
        WhseWkshLine."To Bin Code" := "Bin Code";
        WhseWkshLine."Shelf No." := "Shelf No.";
        WhseWkshLine."Destination Type" := "Destination Type";
        WhseWkshLine."Destination No." := "Destination No.";
        IF WhseShptHeader."Shipment Date" = 0D THEN
          WhseWkshLine."Shipment Date" := "Shipment Date"
        ELSE
          WhseWkshLine."Shipment Date" := WhseShptHeader."Shipment Date";
        WhseWkshLine."Shipping Advice" := "Shipping Advice";
        WhseWkshLine."Shipping Agent Code" := WhseShptHeader."Shipping Agent Code";
        WhseWkshLine."Shipping Agent Service Code" := WhseShptHeader."Shipping Agent Service Code";
        WhseWkshLine."Shipment Method Code" := WhseShptHeader."Shipment Method Code";
        WhseWkshLine."Whse. Document Type" := WhseWkshLine."Whse. Document Type"::Shipment;
        WhseWkshLine."Whse. Document No." := "No.";
        WhseWkshLine."Whse. Document Line No." := "Line No.";
      END;
    END;

    PROCEDURE FromWhseInternalPickLine@1(WhseWkshTemplateName@1003 : Code[10];WhseWkshName@1001 : Code[10];LocationCode@1004 : Code[10];WhseInternalPickLine@1000 : Record 7334) : Boolean;
    VAR
      WhseWkshLine@1002 : Record 7326;
    BEGIN
      WITH WhseInternalPickLine DO BEGIN
        WhseWkshLine.SETCURRENTKEY(
          "Whse. Document Type","Whse. Document No.","Whse. Document Line No.");
        WhseWkshLine.SETRANGE("Whse. Document Type",WhseWkshLine."Whse. Document Type"::"Internal Pick");
        WhseWkshLine.SETRANGE("Whse. Document No.","No.");
        WhseWkshLine.SETRANGE("Whse. Document Line No.","Line No.");
        IF WhseWkshLine.FINDFIRST THEN
          EXIT;

        FindLastWhseWkshLine(WhseWkshLine,WhseWkshTemplateName,WhseWkshName,LocationCode);

        WhseWkshLine.INIT;
        WhseWkshLine.SetHideValidationDialog(TRUE);
        WhseWkshLine."Line No." := WhseWkshLine."Line No." + 10000;
        WhseWkshLine."Location Code" := "Location Code";
        WhseWkshLine."Item No." := "Item No.";
        WhseWkshLine."Variant Code" := "Variant Code";
        WhseWkshLine."Unit of Measure Code" := "Unit of Measure Code";
        WhseWkshLine."Qty. per Unit of Measure" := "Qty. per Unit of Measure";
        WhseWkshLine.Description := Description;
        WhseWkshLine."Description 2" := "Description 2";
        WhseWkshLine."Due Date" := "Due Date";
        WhseWkshLine."Qty. Handled" := "Qty. Picked" + "Pick Qty.";
        WhseWkshLine."Qty. Handled (Base)" := "Qty. Picked (Base)" + "Pick Qty. (Base)";
        WhseWkshLine.VALIDATE(Quantity,Quantity);
        WhseWkshLine."To Zone Code" := "To Zone Code";
        WhseWkshLine."To Bin Code" := "To Bin Code";
        WhseWkshLine."Shelf No." := "Shelf No.";
        WhseWkshLine."Whse. Document Type" := WhseWkshLine."Whse. Document Type"::"Internal Pick";
        WhseWkshLine."Whse. Document No." := "No.";
        WhseWkshLine."Whse. Document Line No." := "Line No.";
      END;
      IF CreateWhseWkshLine(WhseWkshLine) THEN
        EXIT(TRUE);
    END;

    PROCEDURE FromProdOrderCompLine@2(WhseWkshTemplateName@1005 : Code[10];WhseWkshName@1001 : Code[10];LocationCode@1004 : Code[10];ToBinCode@1006 : Code[20];ProdOrderCompLine@1000 : Record 5407) : Boolean;
    VAR
      Bin@1003 : Record 7354;
      WhseWkshLine@1002 : Record 7326;
    BEGIN
      WITH ProdOrderCompLine DO BEGIN
        WhseWkshLine.SETCURRENTKEY(
          "Source Type","Source Subtype","Source No.","Source Line No.","Source Subline No.");
        WhseWkshLine.SETRANGE("Source Type",DATABASE::"Prod. Order Component");
        WhseWkshLine.SETRANGE("Source Subtype",Status);
        WhseWkshLine.SETRANGE("Source No.","Prod. Order No.");
        WhseWkshLine.SETRANGE("Source Line No.","Prod. Order Line No.");
        WhseWkshLine.SETRANGE("Source Subline No.","Line No.");
        IF WhseWkshLine.FINDFIRST THEN
          EXIT;

        FindLastWhseWkshLine(WhseWkshLine,WhseWkshTemplateName,WhseWkshName,LocationCode);

        WhseWkshLine.INIT;
        WhseWkshLine.SetHideValidationDialog(TRUE);
        WhseWkshLine."Line No." := WhseWkshLine."Line No." + 10000;
        WhseWkshLine."Whse. Document Type" := WhseWkshLine."Whse. Document Type"::Production;
        WhseWkshLine."Whse. Document No." := "Prod. Order No.";
        WhseWkshLine."Whse. Document Line No." := "Prod. Order Line No.";
        WhseWkshLine."Source Type" := DATABASE::"Prod. Order Component";
        WhseWkshLine."Source Subtype" := Status;
        WhseWkshLine."Source No." := "Prod. Order No.";
        WhseWkshLine."Source Line No." := "Prod. Order Line No.";
        WhseWkshLine."Source Subline No." := "Line No.";
        WhseWkshLine."Source Document" := WhseMgt.GetSourceDocument(WhseWkshLine."Source Type",WhseWkshLine."Source Subtype");
        WhseWkshLine."Location Code" := "Location Code";
        WhseWkshLine."Item No." := "Item No.";
        WhseWkshLine."Variant Code" := "Variant Code";
        WhseWkshLine."Unit of Measure Code" := "Unit of Measure Code";
        WhseWkshLine."Qty. per Unit of Measure" := "Qty. per Unit of Measure";
        WhseWkshLine.Description := Description;
        WhseWkshLine."Due Date" := "Due Date";
        WhseWkshLine."Qty. Handled" := "Qty. Picked" + "Pick Qty.";
        WhseWkshLine."Qty. Handled (Base)" := "Qty. Picked (Base)" + "Pick Qty. (Base)";
        WhseWkshLine.VALIDATE(Quantity,"Expected Quantity");
        WhseWkshLine."To Bin Code" := ToBinCode;
        IF ("Location Code" <> '') AND (ToBinCode <> '') THEN BEGIN
          Bin.GET(LocationCode,ToBinCode);
          WhseWkshLine."To Zone Code" := Bin."Zone Code";
        END;
      END;
      IF CreateWhseWkshLine(WhseWkshLine) THEN
        EXIT(TRUE);
    END;

    PROCEDURE FromAssemblyLine@4(WhseWkshTemplateName@1005 : Code[10];WhseWkshName@1001 : Code[10];AssemblyLine@1000 : Record 901) : Boolean;
    VAR
      WhseWkshLine@1002 : Record 7326;
    BEGIN
      WITH AssemblyLine DO BEGIN
        IF WhseWkshLineForAsmLineExists(AssemblyLine) THEN
          EXIT;

        FindLastWhseWkshLine(WhseWkshLine,WhseWkshTemplateName,WhseWkshName,"Location Code");

        WhseWkshLine.INIT;
        TransferAllButWhseDocDetailsFromAssemblyLine(WhseWkshLine,AssemblyLine);
        WhseWkshLine."Whse. Document Type" := WhseWkshLine."Whse. Document Type"::Assembly;
        WhseWkshLine."Whse. Document No." := "Document No.";
        WhseWkshLine."Whse. Document Line No." := "Line No.";
      END;
      IF CreateWhseWkshLine(WhseWkshLine) THEN
        EXIT(TRUE);
    END;

    PROCEDURE FromAssemblyLineInATOWhseShpt@8(WhseWkshTemplateName@1003 : Code[10];WhseWkshName@1002 : Code[10];AssemblyLine@1005 : Record 901;WhseShptLine@1000 : Record 7321) : Boolean;
    VAR
      WhseWkshLine@1004 : Record 7326;
    BEGIN
      WhseShptLine.TESTFIELD("Assemble to Order",TRUE);

      IF WhseWkshLineForAsmLineExists(AssemblyLine) THEN
        EXIT;

      TransferFromWhseShptLine(WhseWkshLine,WhseWkshTemplateName,WhseWkshName,WhseShptLine);
      TransferAllButWhseDocDetailsFromAssemblyLine(WhseWkshLine,AssemblyLine);
      IF CreateWhseWkshLine(WhseWkshLine) THEN
        EXIT(TRUE);
    END;

    LOCAL PROCEDURE WhseWkshLineForAsmLineExists@7(AssemblyLine@1000 : Record 901) : Boolean;
    VAR
      WhseWkshLine@1001 : Record 7326;
    BEGIN
      WhseWkshLine.SETCURRENTKEY(
        "Source Type","Source Subtype","Source No.","Source Line No.","Source Subline No.");
      WhseWkshLine.SETRANGE("Source Type",DATABASE::"Assembly Line");
      WhseWkshLine.SETRANGE("Source Subtype",AssemblyLine."Document Type");
      WhseWkshLine.SETRANGE("Source No.",AssemblyLine."Document No.");
      WhseWkshLine.SETRANGE("Source Line No.",AssemblyLine."Line No.");
      WhseWkshLine.SETRANGE("Source Subline No.",0);
      EXIT(NOT WhseWkshLine.ISEMPTY);
    END;

    LOCAL PROCEDURE TransferAllButWhseDocDetailsFromAssemblyLine@17(VAR WhseWkshLine@1000 : Record 7326;AssemblyLine@1002 : Record 901);
    VAR
      WhseWkshLine1@1003 : Record 7326;
      Location@1001 : Record 14;
      Bin@1004 : Record 7354;
    BEGIN
      WITH AssemblyLine DO BEGIN
        WhseWkshLine.SetHideValidationDialog(TRUE);
        FindLastWhseWkshLine(WhseWkshLine1,WhseWkshLine."Worksheet Template Name",WhseWkshLine.Name,WhseWkshLine."Location Code");
        WhseWkshLine."Line No." := WhseWkshLine1."Line No." + 10000;
        WhseWkshLine."Source Type" := DATABASE::"Assembly Line";
        WhseWkshLine."Source Subtype" := "Document Type";
        WhseWkshLine."Source No." := "Document No.";
        WhseWkshLine."Source Line No." := "Line No.";
        WhseWkshLine."Source Subline No." := 0;
        WhseWkshLine."Source Document" := WhseMgt.GetSourceDocument(WhseWkshLine."Source Type",WhseWkshLine."Source Subtype");
        WhseWkshLine."Location Code" := "Location Code";
        TESTFIELD(Type,Type::Item);
        WhseWkshLine."Item No." := "No.";
        WhseWkshLine."Variant Code" := "Variant Code";
        WhseWkshLine."Unit of Measure Code" := "Unit of Measure Code";
        WhseWkshLine."Qty. per Unit of Measure" := "Qty. per Unit of Measure";
        WhseWkshLine.Description := Description;
        WhseWkshLine."Description 2" := "Description 2";
        WhseWkshLine."Due Date" := "Due Date";
        CALCFIELDS("Pick Qty.","Pick Qty. (Base)");
        WhseWkshLine."Qty. Handled" := "Qty. Picked" + "Pick Qty.";
        WhseWkshLine."Qty. Handled (Base)" := "Qty. Picked (Base)" + "Pick Qty. (Base)";
        Location.GET("Location Code");
        IF Location."Require Shipment" THEN
          WhseWkshLine.VALIDATE(Quantity,Quantity)
        ELSE
          WhseWkshLine.VALIDATE(Quantity,"Quantity to Consume");
        WhseWkshLine."To Bin Code" := "Bin Code";
        IF ("Location Code" <> '') AND ("Bin Code" <> '') THEN BEGIN
          Bin.GET("Location Code","Bin Code");
          WhseWkshLine."To Zone Code" := Bin."Zone Code";
        END;
      END;
    END;

    PROCEDURE FromWhseRcptLine@6(WhseWkshTemplateName@1003 : Code[10];WhseWkshName@1001 : Code[10];LocationCode@1004 : Code[10];PostedWhseRcptLine@1000 : Record 7319) : Boolean;
    VAR
      WhseWkshLine@1002 : Record 7326;
    BEGIN
      WITH PostedWhseRcptLine DO BEGIN
        IF "Qty. Put Away" = Quantity THEN
          EXIT;

        WhseWkshLine.SETCURRENTKEY(
          "Whse. Document Type","Whse. Document No.","Whse. Document Line No.");
        WhseWkshLine.SETRANGE(
          "Whse. Document Type",WhseWkshLine."Whse. Document Type"::Receipt);
        WhseWkshLine.SETRANGE("Whse. Document No.","No.");
        WhseWkshLine.SETRANGE("Whse. Document Line No.","Line No.");
        IF WhseWkshLine.FINDFIRST THEN
          EXIT;

        FindLastWhseWkshLine(WhseWkshLine,WhseWkshTemplateName,WhseWkshName,LocationCode);

        WhseWkshLine.INIT;
        WhseWkshLine."Line No." := WhseWkshLine."Line No." + 10000;
        WhseWkshLine."Source Type" := "Source Type";
        WhseWkshLine."Source Subtype" := "Source Subtype";
        WhseWkshLine."Source No." := "Source No.";
        WhseWkshLine."Source Line No." := "Source Line No.";
        WhseWkshLine."Source Document" := WhseMgt.GetSourceDocument("Source Type","Source Subtype");
        WhseWkshLine."Location Code" := "Location Code";
        WhseWkshLine."Item No." := "Item No.";
        WhseWkshLine."Variant Code" := "Variant Code";
        WhseWkshLine."Unit of Measure Code" := "Unit of Measure Code";
        WhseWkshLine."Qty. per Unit of Measure" := "Qty. per Unit of Measure";
        WhseWkshLine.Description := Description;
        WhseWkshLine."Description 2" := "Description 2";
        WhseWkshLine."Due Date" := "Due Date";
        WhseWkshLine.VALIDATE(Quantity,Quantity);
        WhseWkshLine.VALIDATE("Qty. Handled","Qty. Put Away" + "Put-away Qty.");
        WhseWkshLine."From Zone Code" := "Zone Code";
        WhseWkshLine."From Bin Code" := "Bin Code";
        WhseWkshLine."Shelf No." := "Shelf No.";
        WhseWkshLine."From Unit of Measure Code" := "Unit of Measure Code";
        WhseWkshLine."Qty. per From Unit of Measure" := "Qty. per Unit of Measure";
        WhseWkshLine."Whse. Document Type" := WhseWkshLine."Whse. Document Type"::Receipt;
        WhseWkshLine."Whse. Document No." := "No.";
        WhseWkshLine."Whse. Document Line No." := "Line No.";
      END;
      IF CreateWhseWkshLine(WhseWkshLine) THEN
        EXIT(TRUE);
    END;

    PROCEDURE FromWhseInternalPutawayLine@5(WhseWkshTemplateName@1003 : Code[10];WhseWkshName@1001 : Code[10];LocationCode@1004 : Code[10];WhseInternalPutawayLine@1000 : Record 7332) : Boolean;
    VAR
      WhseWkshLine@1002 : Record 7326;
    BEGIN
      WITH WhseInternalPutawayLine DO BEGIN
        IF "Qty. Put Away" = Quantity THEN
          EXIT;

        WhseWkshLine.SETCURRENTKEY(
          "Whse. Document Type","Whse. Document No.","Whse. Document Line No.");
        WhseWkshLine.SETRANGE(
          "Whse. Document Type",WhseWkshLine."Whse. Document Type"::"Internal Put-away");
        WhseWkshLine.SETRANGE("Whse. Document No.","No.");
        WhseWkshLine.SETRANGE("Whse. Document Line No.","Line No.");
        IF WhseWkshLine.FINDFIRST THEN
          EXIT;

        FindLastWhseWkshLine(WhseWkshLine,WhseWkshTemplateName,WhseWkshName,LocationCode);

        WhseWkshLine.INIT;
        WhseWkshLine."Line No." := WhseWkshLine."Line No." + 10000;
        WhseWkshLine."Location Code" := "Location Code";
        WhseWkshLine."Item No." := "Item No.";
        WhseWkshLine."Variant Code" := "Variant Code";
        WhseWkshLine."Unit of Measure Code" := "Unit of Measure Code";
        WhseWkshLine."Qty. per Unit of Measure" := "Qty. per Unit of Measure";
        WhseWkshLine.Description := Description;
        WhseWkshLine."Description 2" := "Description 2";
        WhseWkshLine."Due Date" := "Due Date";
        WhseWkshLine.VALIDATE(Quantity,Quantity);
        WhseWkshLine.VALIDATE("Qty. Handled","Qty. Put Away" + "Put-away Qty.");
        WhseWkshLine."From Zone Code" := "From Zone Code";
        WhseWkshLine."From Bin Code" := "From Bin Code";
        WhseWkshLine."Shelf No." := "Shelf No.";
        WhseWkshLine."From Unit of Measure Code" := "Unit of Measure Code";
        WhseWkshLine."Qty. per From Unit of Measure" := "Qty. per Unit of Measure";
        WhseWkshLine."Whse. Document Type" := WhseWkshLine."Whse. Document Type"::"Internal Put-away";
        WhseWkshLine."Whse. Document No." := "No.";
        WhseWkshLine."Whse. Document Line No." := "Line No.";
      END;
      IF CreateWhseWkshLine(WhseWkshLine) THEN
        EXIT(TRUE);
    END;

    LOCAL PROCEDURE CreateWhseWkshLine@3(VAR WhseWkshLine@1001 : Record 7326) Created@1000 : Boolean;
    VAR
      Item@1002 : Record 27;
      ItemTrackingMgt@1003 : Codeunit 6500;
      SNRequired@1004 : Boolean;
      LNRequired@1005 : Boolean;
    BEGIN
      WITH WhseWkshLine DO BEGIN
        IF "Shelf No." = '' THEN BEGIN
          Item."No." := "Item No.";
          Item.ItemSKUGet(Item,"Location Code","Variant Code");
          "Shelf No." := Item."Shelf No.";
        END;
        IF INSERT THEN BEGIN
          Created := TRUE;
          ItemTrackingMgt.CheckWhseItemTrkgSetup("Item No.",SNRequired,LNRequired,FALSE);
          IF SNRequired OR LNRequired THEN
            ItemTrackingMgt.InitTrackingSpecification(WhseWkshLine);
        END;
      END;
    END;

    LOCAL PROCEDURE FindLastWhseWkshLine@12(VAR WhseWkshLine@1000 : Record 7326;WkshTemplateName@1001 : Code[10];WkshName@1002 : Code[10];LocationCode@1003 : Code[10]);
    BEGIN
      WhseWkshLine.RESET;
      WhseWkshLine."Worksheet Template Name" := WkshTemplateName;
      WhseWkshLine.Name := WkshName;
      WhseWkshLine."Location Code" := LocationCode;
      WhseWkshLine.SETRANGE("Worksheet Template Name",WkshTemplateName);
      WhseWkshLine.SETRANGE(Name,WkshName);
      WhseWkshLine.SETRANGE("Location Code",LocationCode);
      WhseWkshLine.LOCKTABLE;
      IF WhseWkshLine.FINDLAST THEN;
    END;

    BEGIN
    END.
  }
}

