OBJECT Codeunit 9087009 Buying Sheet Summary Line Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=27/09/16;
    Time=[ 3:10:57 PM];
    Version List=NS2016.16;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      ItemVariant@1000000005 : Record 5401;
      BuyingSheetHeader@1000000004 : Record 9087020;
      BuyingSheetSummaryLine@1000000002 : Record 9087021;
      BuyingSheetLine@1000000000 : Record 9087022;
      SystemActivity@1000000001 : Boolean;
      NewItem@1000000003 : Boolean;

    PROCEDURE SetSystemActivity@1000000004(pSystemActivity@1000000000 : Boolean);
    BEGIN
      SystemActivity := pSystemActivity;
    END;

    PROCEDURE UpdateBuyingSheetLines@1000000005(pBuyingSheetSummaryLine@1000000000 : Record 9087021;pNewItem@1000000001 : Boolean);
    BEGIN
      //DOC NS2016.16 - Updating buying sheet lines for given summary line
      //  -> pBuyingSheetSummaryLine: The summary line
      //  -> pNewItem: New item indicator

      BuyingSheetSummaryLine := pBuyingSheetSummaryLine;
      NewItem := pNewItem;

      BuyingSheetHeader.GET(BuyingSheetSummaryLine."Buying Sheet No.");

      DeleteOldBuyingSheetLines();
      CreateNewBuyingSheetLines();
    END;

    LOCAL PROCEDURE DeleteOldBuyingSheetLines@1000000006();
    VAR
      lBuyingSheetLinesToDelete@1000000000 : Record 9087022;
    BEGIN
      //DOC NS2016.16 - Deleting old buying sheet lines

      BuyingSheetLine.RESET();
      BuyingSheetLine.SETCURRENTKEY("Buying Sheet No.", "Buying Sheet Summary Line No.");
      BuyingSheetLine.SETRANGE("Buying Sheet No.", BuyingSheetHeader."No.");
      BuyingSheetLine.SETRANGE("Buying Sheet Summary Line No.", BuyingSheetSummaryLine."Line No.");
      IF ((NewItem) OR (BuyingSheetSummaryLine."Item No." = '')) THEN
        BuyingSheetLine.DELETEALL(TRUE)
      ELSE
      BEGIN
        IF (BuyingSheetLine.FINDSET()) THEN
        REPEAT
          IF ( NOT (ItemVariant.GET(BuyingSheetLine."Item No.", BuyingSheetLine."Variant Code"))) THEN
          BEGIN
            lBuyingSheetLinesToDelete := BuyingSheetLine;
            lBuyingSheetLinesToDelete.INSERT();
          END;
        UNTIL (BuyingSheetLine.NEXT() = 0);
        IF (lBuyingSheetLinesToDelete.FINDSET()) THEN
        REPEAT
          BuyingSheetLine.GET(lBuyingSheetLinesToDelete."Buying Sheet No.", lBuyingSheetLinesToDelete."Line No.");
          BuyingSheetLine.DELETE(TRUE);
        UNTIL (lBuyingSheetLinesToDelete.NEXT() = 0);
      END;
    END;

    LOCAL PROCEDURE CreateNewBuyingSheetLines@1000000011();
    VAR
      lBuyingSheetLineNo@1000000000 : Integer;
    BEGIN
      //DOC NS2016.16 - Creating new buying sheet lines

      IF (BuyingSheetSummaryLine."Item No." = '') THEN
        EXIT;

      ItemVariant.RESET();
      ItemVariant.SETRANGE("Item No.", BuyingSheetSummaryLine."Item No.");
      IF (ItemVariant.FINDSET()) THEN
      BEGIN
        BuyingSheetLine.RESET();
        BuyingSheetLine.SETRANGE("Buying Sheet No.", BuyingSheetHeader."No.");
        IF (BuyingSheetLine.FINDLAST()) THEN
          lBuyingSheetLineNo := BuyingSheetLine."Line No."
        ELSE
          lBuyingSheetLineNo := 0;
        REPEAT
          BuyingSheetLine.RESET();
          BuyingSheetLine.SETCURRENTKEY("Buying Sheet No.", "Buying Sheet Summary Line No.");
          BuyingSheetLine.SETRANGE("Buying Sheet No.", BuyingSheetHeader."No.");
          BuyingSheetLine.SETRANGE("Buying Sheet Summary Line No.", BuyingSheetSummaryLine."Line No.");
          BuyingSheetLine.SETRANGE("Item No.", ItemVariant."Item No.");
          BuyingSheetLine.SETRANGE("Variant Code", ItemVariant.Code);
          IF (BuyingSheetLine.FINDFIRST()) THEN
          BEGIN
            BuyingSheetLine.UpdateFromBuyingSheetSummaryLine();
            BuyingSheetLine.MODIFY(TRUE);
          END
          ELSE
          BEGIN
            lBuyingSheetLineNo += 10000;
            CLEAR(BuyingSheetLine);
            BuyingSheetLine.VALIDATE("Buying Sheet No.", BuyingSheetHeader."No.");
            BuyingSheetLine.VALIDATE("Buying Sheet Summary Line No.", BuyingSheetSummaryLine."Line No.");
            BuyingSheetLine.VALIDATE("Line No.", lBuyingSheetLineNo);
            BuyingSheetLine.INSERT(TRUE);
            BuyingSheetLine.VALIDATE("Vendor Item No.",BuyingSheetSummaryLine."Vendor Item No.");  //DOC NS2016.16 PCM 27/09/2016
            BuyingSheetLine.VALIDATE("Item No.", ItemVariant."Item No.");
            BuyingSheetLine.VALIDATE("Variant Code", ItemVariant.Code);
            BuyingSheetLine.MODIFY(TRUE);
          END;
        UNTIL (ItemVariant.NEXT() = 0);
      END;
    END;

    BEGIN
    {
      //DOC NS2015.1  JH 24/02/2014 - Fixes
      //DOC NS2016.16 JH 07/09/2016 - nSemble 2016
      //DOC NS2016.16 PCM 27/09/2016  - Populate "Vendor Item No." on Buying Sheet Line.
    }
    END.
  }
}

