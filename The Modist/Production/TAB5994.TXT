OBJECT Table 5994 Service Cr.Memo Header
{
  OBJECT-PROPERTIES
  {
    Date=26/11/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00.00.43897;
  }
  PROPERTIES
  {
    Permissions=TableData 5950=rimd;
    DataCaptionFields=No.,Name;
    OnDelete=BEGIN
               TESTFIELD("No. Printed");
               LOCKTABLE;

               ServCrMemoLine.RESET;
               ServCrMemoLine.SETRANGE("Document No.","No.");
               ServCrMemoLine.DELETEALL;

               ServCommentLine.RESET;
               ServCommentLine.SETRANGE("Table Name",ServCommentLine."Table Name"::"Service Cr.Memo Header");
               ServCommentLine.SETRANGE("No.","No.");
               ServCommentLine.DELETEALL;
             END;

    CaptionML=[ENU=Service Cr.Memo Header;
               ENG=Service Cr.Memo Header];
    LookupPageID=Page5971;
    DrillDownPageID=Page5971;
  }
  FIELDS
  {
    { 2   ;   ;Customer No.        ;Code20        ;TableRelation=Customer;
                                                   CaptionML=[ENU=Customer No.;
                                                              ENG=Customer No.];
                                                   NotBlank=Yes }
    { 3   ;   ;No.                 ;Code20        ;CaptionML=[ENU=No.;
                                                              ENG=No.] }
    { 4   ;   ;Bill-to Customer No.;Code20        ;TableRelation=Customer;
                                                   CaptionML=[ENU=Bill-to Customer No.;
                                                              ENG=Bill-to Customer No.];
                                                   NotBlank=Yes }
    { 5   ;   ;Bill-to Name        ;Text50        ;CaptionML=[ENU=Bill-to Name;
                                                              ENG=Bill-to Name] }
    { 6   ;   ;Bill-to Name 2      ;Text50        ;CaptionML=[ENU=Bill-to Name 2;
                                                              ENG=Bill-to Name 2] }
    { 7   ;   ;Bill-to Address     ;Text50        ;CaptionML=[ENU=Bill-to Address;
                                                              ENG=Bill-to Address] }
    { 8   ;   ;Bill-to Address 2   ;Text50        ;CaptionML=[ENU=Bill-to Address 2;
                                                              ENG=Bill-to Address 2] }
    { 9   ;   ;Bill-to City        ;Text30        ;TableRelation="Post Code".City;
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Bill-to City;
                                                              ENG=Bill-to City] }
    { 10  ;   ;Bill-to Contact     ;Text50        ;CaptionML=[ENU=Bill-to Contact;
                                                              ENG=Bill-to Contact] }
    { 11  ;   ;Your Reference      ;Text35        ;CaptionML=[ENU=Your Reference;
                                                              ENG=Your Reference] }
    { 12  ;   ;Ship-to Code        ;Code10        ;TableRelation="Ship-to Address".Code WHERE (Customer No.=FIELD(Customer No.));
                                                   CaptionML=[ENU=Ship-to Code;
                                                              ENG=Ship-to Code] }
    { 13  ;   ;Ship-to Name        ;Text50        ;CaptionML=[ENU=Ship-to Name;
                                                              ENG=Ship-to Name] }
    { 14  ;   ;Ship-to Name 2      ;Text50        ;CaptionML=[ENU=Ship-to Name 2;
                                                              ENG=Ship-to Name 2] }
    { 15  ;   ;Ship-to Address     ;Text50        ;CaptionML=[ENU=Ship-to Address;
                                                              ENG=Ship-to Address] }
    { 16  ;   ;Ship-to Address 2   ;Text50        ;CaptionML=[ENU=Ship-to Address 2;
                                                              ENG=Ship-to Address 2] }
    { 17  ;   ;Ship-to City        ;Text30        ;TableRelation="Post Code".City;
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Ship-to City;
                                                              ENG=Ship-to City] }
    { 18  ;   ;Ship-to Contact     ;Text50        ;CaptionML=[ENU=Ship-to Contact;
                                                              ENG=Ship-to Contact] }
    { 20  ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              ENG=Posting/Tax Point Date] }
    { 22  ;   ;Posting Description ;Text50        ;CaptionML=[ENU=Posting Description;
                                                              ENG=Posting Description] }
    { 23  ;   ;Payment Terms Code  ;Code10        ;TableRelation="Payment Terms";
                                                   CaptionML=[ENU=Payment Terms Code;
                                                              ENG=Payment Terms Code] }
    { 24  ;   ;Due Date            ;Date          ;CaptionML=[ENU=Due Date;
                                                              ENG=Due Date] }
    { 25  ;   ;Payment Discount %  ;Decimal       ;CaptionML=[ENU=Payment Discount %;
                                                              ENG=Payment Discount %];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 26  ;   ;Pmt. Discount Date  ;Date          ;CaptionML=[ENU=Pmt. Discount Date;
                                                              ENG=Pmt. Discount Date] }
    { 28  ;   ;Location Code       ;Code10        ;TableRelation=Location WHERE (Use As In-Transit=CONST(No));
                                                   CaptionML=[ENU=Location Code;
                                                              ENG=Location Code] }
    { 29  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=[ENU=Shortcut Dimension 1 Code;
                                                              ENG=Shortcut Dimension 1 Code];
                                                   CaptionClass='1,2,1' }
    { 30  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=[ENU=Shortcut Dimension 2 Code;
                                                              ENG=Shortcut Dimension 2 Code];
                                                   CaptionClass='1,2,2' }
    { 31  ;   ;Customer Posting Group;Code10      ;TableRelation="Customer Posting Group";
                                                   CaptionML=[ENU=Customer Posting Group;
                                                              ENG=Customer Posting Group];
                                                   Editable=No }
    { 32  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=[ENU=Currency Code;
                                                              ENG=Currency Code];
                                                   Editable=No }
    { 33  ;   ;Currency Factor     ;Decimal       ;CaptionML=[ENU=Currency Factor;
                                                              ENG=Currency Factor];
                                                   DecimalPlaces=0:15;
                                                   MinValue=0;
                                                   Editable=No }
    { 34  ;   ;Customer Price Group;Code10        ;TableRelation="Customer Price Group";
                                                   CaptionML=[ENU=Customer Price Group;
                                                              ENG=Customer Price Group] }
    { 35  ;   ;Prices Including VAT;Boolean       ;CaptionML=[ENU=Prices Including VAT;
                                                              ENG=Prices Including VAT] }
    { 37  ;   ;Invoice Disc. Code  ;Code20        ;CaptionML=[ENU=Invoice Disc. Code;
                                                              ENG=Invoice Disc. Code] }
    { 40  ;   ;Customer Disc. Group;Code20        ;TableRelation="Customer Discount Group";
                                                   CaptionML=[ENU=Customer Disc. Group;
                                                              ENG=Customer Disc. Group] }
    { 41  ;   ;Language Code       ;Code10        ;TableRelation=Language;
                                                   CaptionML=[ENU=Language Code;
                                                              ENG=Language Code] }
    { 43  ;   ;Salesperson Code    ;Code10        ;TableRelation=Salesperson/Purchaser;
                                                   CaptionML=[ENU=Salesperson Code;
                                                              ENG=Salesperson Code] }
    { 46  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Service Comment Line" WHERE (Table Name=CONST(Service Cr.Memo Header),
                                                                                                   No.=FIELD(No.),
                                                                                                   Type=CONST(General)));
                                                   CaptionML=[ENU=Comment;
                                                              ENG=Comment];
                                                   Editable=No }
    { 47  ;   ;No. Printed         ;Integer       ;CaptionML=[ENU=No. Printed;
                                                              ENG=No. Printed];
                                                   Editable=No }
    { 52  ;   ;Applies-to Doc. Type;Option        ;CaptionML=[ENU=Applies-to Doc. Type;
                                                              ENG=Applies-to Doc. Type];
                                                   OptionCaptionML=[ENU=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund";
                                                                    ENG=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund"];
                                                   OptionString=[ ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund] }
    { 53  ;   ;Applies-to Doc. No. ;Code20        ;OnLookup=BEGIN
                                                              CustLedgEntry.SETCURRENTKEY("Document Type");
                                                              CustLedgEntry.SETRANGE("Document Type","Applies-to Doc. Type");
                                                              CustLedgEntry.SETRANGE("Document No.","Applies-to Doc. No.");
                                                              PAGE.RUN(0,CustLedgEntry);
                                                            END;

                                                   CaptionML=[ENU=Applies-to Doc. No.;
                                                              ENG=Applies-to Doc. No.] }
    { 55  ;   ;Bal. Account No.    ;Code20        ;TableRelation=IF (Bal. Account Type=CONST(G/L Account)) "G/L Account"
                                                                 ELSE IF (Bal. Account Type=CONST(Bank Account)) "Bank Account";
                                                   CaptionML=[ENU=Bal. Account No.;
                                                              ENG=Bal. Account No.] }
    { 61  ;   ;Amount Including VAT;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Service Cr.Memo Line"."Amount Including VAT" WHERE (Document No.=FIELD(No.)));
                                                   CaptionML=[ENU=Amount Including VAT;
                                                              ENG=Amount Including VAT];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 70  ;   ;VAT Registration No.;Text20        ;CaptionML=[ENU=VAT Registration No.;
                                                              ENG=VAT Registration No.] }
    { 73  ;   ;Reason Code         ;Code10        ;TableRelation="Reason Code";
                                                   CaptionML=[ENU=Reason Code;
                                                              ENG=Reason Code] }
    { 74  ;   ;Gen. Bus. Posting Group;Code10     ;TableRelation="Gen. Business Posting Group";
                                                   CaptionML=[ENU=Gen. Bus. Posting Group;
                                                              ENG=Gen. Bus. Posting Group] }
    { 75  ;   ;EU 3-Party Trade    ;Boolean       ;CaptionML=[ENU=EU 3-Party Trade;
                                                              ENG=EU 3-Party Trade] }
    { 76  ;   ;Transaction Type    ;Code10        ;TableRelation="Transaction Type";
                                                   CaptionML=[ENU=Transaction Type;
                                                              ENG=Transaction Nature Code] }
    { 77  ;   ;Transport Method    ;Code10        ;TableRelation="Transport Method";
                                                   CaptionML=[ENU=Transport Method;
                                                              ENG=Transport Method] }
    { 78  ;   ;VAT Country/Region Code;Code10     ;TableRelation=Country/Region;
                                                   CaptionML=[ENU=VAT Country/Region Code;
                                                              ENG=VAT Country/Region Code] }
    { 79  ;   ;Name                ;Text50        ;CaptionML=[ENU=Name;
                                                              ENG=Name] }
    { 80  ;   ;Name 2              ;Text50        ;CaptionML=[ENU=Name 2;
                                                              ENG=Name 2] }
    { 81  ;   ;Address             ;Text50        ;CaptionML=[ENU=Address;
                                                              ENG=Address] }
    { 82  ;   ;Address 2           ;Text50        ;CaptionML=[ENU=Address 2;
                                                              ENG=Address 2] }
    { 83  ;   ;City                ;Text30        ;TableRelation="Post Code".City;
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=City;
                                                              ENG=City] }
    { 84  ;   ;Contact Name        ;Text50        ;CaptionML=[ENU=Contact Name;
                                                              ENG=Contact Name] }
    { 85  ;   ;Bill-to Post Code   ;Code20        ;TableRelation="Post Code";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Bill-to Post Code;
                                                              ENG=Bill-to Post Code] }
    { 86  ;   ;Bill-to County      ;Text30        ;CaptionML=[ENU=Bill-to County;
                                                              ENG=Bill-to County] }
    { 87  ;   ;Bill-to Country/Region Code;Code10 ;TableRelation=Country/Region;
                                                   CaptionML=[ENU=Bill-to Country/Region Code;
                                                              ENG=Bill-to Country/Region Code] }
    { 88  ;   ;Post Code           ;Code20        ;TableRelation="Post Code";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Post Code;
                                                              ENG=Post Code] }
    { 89  ;   ;County              ;Text30        ;CaptionML=[ENU=County;
                                                              ENG=County] }
    { 90  ;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   CaptionML=[ENU=Country/Region Code;
                                                              ENG=Country/Region Code] }
    { 91  ;   ;Ship-to Post Code   ;Code20        ;TableRelation="Post Code";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Ship-to Post Code;
                                                              ENG=Ship-to Post Code] }
    { 92  ;   ;Ship-to County      ;Text30        ;CaptionML=[ENU=Ship-to County;
                                                              ENG=Ship-to County] }
    { 93  ;   ;Ship-to Country/Region Code;Code10 ;TableRelation=Country/Region;
                                                   CaptionML=[ENU=Ship-to Country/Region Code;
                                                              ENG=Ship-to Country/Region Code] }
    { 94  ;   ;Bal. Account Type   ;Option        ;CaptionML=[ENU=Bal. Account Type;
                                                              ENG=Bal. Account Type];
                                                   OptionCaptionML=[ENU=G/L Account,Bank Account;
                                                                    ENG=G/L Account,Bank Account];
                                                   OptionString=G/L Account,Bank Account }
    { 97  ;   ;Exit Point          ;Code10        ;TableRelation="Entry/Exit Point";
                                                   CaptionML=[ENU=Exit Point;
                                                              ENG=Exit Point] }
    { 98  ;   ;Correction          ;Boolean       ;CaptionML=[ENU=Correction;
                                                              ENG=Correction] }
    { 99  ;   ;Document Date       ;Date          ;CaptionML=[ENU=Document Date;
                                                              ENG=Document Date] }
    { 101 ;   ;Area                ;Code10        ;TableRelation=Area;
                                                   CaptionML=[ENU=Area;
                                                              ENG=Area] }
    { 102 ;   ;Transaction Specification;Code10   ;TableRelation="Transaction Specification";
                                                   CaptionML=[ENU=Transaction Specification;
                                                              ENG=Transaction Specification] }
    { 104 ;   ;Payment Method Code ;Code10        ;TableRelation="Payment Method";
                                                   CaptionML=[ENU=Payment Method Code;
                                                              ENG=Payment Method Code] }
    { 107 ;   ;Pre-Assigned No. Series;Code10     ;TableRelation="No. Series";
                                                   CaptionML=[ENU=Pre-Assigned No. Series;
                                                              ENG=Pre-Assigned No. Series] }
    { 108 ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              ENG=No. Series];
                                                   Editable=No }
    { 111 ;   ;Pre-Assigned No.    ;Code20        ;CaptionML=[ENU=Pre-Assigned No.;
                                                              ENG=Pre-Assigned No.] }
    { 112 ;   ;User ID             ;Code50        ;TableRelation=User."User Name";
                                                   OnLookup=VAR
                                                              UserMgt@1000 : Codeunit 418;
                                                            BEGIN
                                                              UserMgt.LookupUserID("User ID");
                                                            END;

                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=User ID;
                                                              ENG=User ID] }
    { 113 ;   ;Source Code         ;Code10        ;TableRelation="Source Code";
                                                   CaptionML=[ENU=Source Code;
                                                              ENG=Source Code] }
    { 114 ;   ;Tax Area Code       ;Code20        ;TableRelation="Tax Area";
                                                   CaptionML=[ENU=Tax Area Code;
                                                              ENG=VAT Area Code] }
    { 115 ;   ;Tax Liable          ;Boolean       ;CaptionML=[ENU=Tax Liable;
                                                              ENG=VAT Liable] }
    { 116 ;   ;VAT Bus. Posting Group;Code10      ;TableRelation="VAT Business Posting Group";
                                                   CaptionML=[ENU=VAT Bus. Posting Group;
                                                              ENG=VAT Bus. Posting Group] }
    { 119 ;   ;VAT Base Discount % ;Decimal       ;CaptionML=[ENU=VAT Base Discount %;
                                                              ENG=VAT Base Discount %];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDimensions;
                                                            END;

                                                   CaptionML=[ENU=Dimension Set ID;
                                                              ENG=Dimension Set ID];
                                                   Editable=No }
    { 710 ;   ;Document Exchange Identifier;Text50;CaptionML=[ENU=Document Exchange Identifier;
                                                              ENG=Document Exchange Identifier] }
    { 711 ;   ;Document Exchange Status;Option    ;CaptionML=[ENU=Document Exchange Status;
                                                              ENG=Document Exchange Status];
                                                   OptionCaptionML=[ENU=Not Sent,Sent to Document Exchange Service,Delivered to Recipient,Delivery Failed,Pending Connection to Recipient;
                                                                    ENG=Not Sent,Sent to Document Exchange Service,Delivered to Recipient,Delivery Failed,Pending Connection to Recipient];
                                                   OptionString=Not Sent,Sent to Document Exchange Service,Delivered to Recipient,Delivery Failed,Pending Connection to Recipient }
    { 712 ;   ;Doc. Exch. Original Identifier;Text50;
                                                   CaptionML=[ENU=Doc. Exch. Original Identifier;
                                                              ENG=Doc. Exch. Original Identifier] }
    { 5052;   ;Contact No.         ;Code20        ;TableRelation=Contact;
                                                   CaptionML=[ENU=Contact No.;
                                                              ENG=Contact No.] }
    { 5053;   ;Bill-to Contact No. ;Code20        ;TableRelation=Contact;
                                                   CaptionML=[ENU=Bill-to Contact No.;
                                                              ENG=Bill-to Contact No.] }
    { 5700;   ;Responsibility Center;Code10       ;TableRelation="Responsibility Center";
                                                   CaptionML=[ENU=Responsibility Center;
                                                              ENG=Responsibility Centre] }
    { 5902;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              ENG=Description] }
    { 5904;   ;Service Order Type  ;Code10        ;TableRelation="Service Order Type";
                                                   CaptionML=[ENU=Service Order Type;
                                                              ENG=Service Order Type] }
    { 5905;   ;Link Service to Service Item;Boolean;
                                                   CaptionML=[ENU=Link Service to Service Item;
                                                              ENG=Link Service to Service Item] }
    { 5907;   ;Priority            ;Option        ;CaptionML=[ENU=Priority;
                                                              ENG=Priority];
                                                   OptionCaptionML=[ENU=Low,Medium,High;
                                                                    ENG=Low,Medium,High];
                                                   OptionString=Low,Medium,High;
                                                   Editable=No }
    { 5911;   ;Allocated Hours     ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Service Order Allocation"."Allocated Hours" WHERE (Document Type=CONST(Order),
                                                                                                                       Document No.=FIELD(No.),
                                                                                                                       Resource No.=FIELD(Resource Filter),
                                                                                                                       Status=FILTER(Active|Finished),
                                                                                                                       Resource Group No.=FIELD(Resource Group Filter)));
                                                   CaptionML=[ENU=Allocated Hours;
                                                              ENG=Allocated Hours];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 5915;   ;Phone No.           ;Text30        ;ExtendedDatatype=Phone No.;
                                                   CaptionML=[ENU=Phone No.;
                                                              ENG=Phone No.] }
    { 5916;   ;E-Mail              ;Text80        ;ExtendedDatatype=E-Mail;
                                                   CaptionML=[ENU=E-Mail;
                                                              ENG=E-Mail] }
    { 5917;   ;Phone No. 2         ;Text30        ;ExtendedDatatype=Phone No.;
                                                   CaptionML=[ENU=Phone No. 2;
                                                              ENG=Phone No. 2] }
    { 5918;   ;Fax No.             ;Text30        ;CaptionML=[ENU=Fax No.;
                                                              ENG=Fax No.] }
    { 5921;   ;No. of Unallocated Items;Integer   ;FieldClass=FlowField;
                                                   CalcFormula=Count("Service Item Line" WHERE (Document Type=CONST(Order),
                                                                                                Document No.=FIELD(No.),
                                                                                                No. of Active/Finished Allocs=CONST(0)));
                                                   CaptionML=[ENU=No. of Unallocated Items;
                                                              ENG=No. of Unallocated Items];
                                                   Editable=No }
    { 5923;   ;Order Time          ;Time          ;CaptionML=[ENU=Order Time;
                                                              ENG=Order Time];
                                                   NotBlank=Yes }
    { 5924;   ;Default Response Time (Hours);Decimal;
                                                   CaptionML=[ENU=Default Response Time (Hours);
                                                              ENG=Default Response Time (Hours)];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 5925;   ;Actual Response Time (Hours);Decimal;
                                                   CaptionML=[ENU=Actual Response Time (Hours);
                                                              ENG=Actual Response Time (Hours)];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   Editable=No }
    { 5926;   ;Service Time (Hours);Decimal       ;CaptionML=[ENU=Service Time (Hours);
                                                              ENG=Service Time (Hours)];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 5927;   ;Response Date       ;Date          ;CaptionML=[ENU=Response Date;
                                                              ENG=Response Date];
                                                   Editable=No }
    { 5928;   ;Response Time       ;Time          ;CaptionML=[ENU=Response Time;
                                                              ENG=Response Time];
                                                   Editable=No }
    { 5929;   ;Starting Date       ;Date          ;CaptionML=[ENU=Starting Date;
                                                              ENG=Starting Date] }
    { 5930;   ;Starting Time       ;Time          ;CaptionML=[ENU=Starting Time;
                                                              ENG=Starting Time] }
    { 5931;   ;Finishing Date      ;Date          ;CaptionML=[ENU=Finishing Date;
                                                              ENG=Finishing Date] }
    { 5932;   ;Finishing Time      ;Time          ;CaptionML=[ENU=Finishing Time;
                                                              ENG=Finishing Time] }
    { 5933;   ;Contract Serv. Hours Exist;Boolean ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Service Hour" WHERE (Service Contract No.=FIELD(Contract No.)));
                                                   CaptionML=[ENU=Contract Serv. Hours Exist;
                                                              ENG=Contract Serv. Hours Exist];
                                                   Editable=No }
    { 5934;   ;Reallocation Needed ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Service Order Allocation" WHERE (Status=CONST(Reallocation Needed),
                                                                                                       Resource No.=FIELD(Resource Filter),
                                                                                                       Document Type=CONST(Order),
                                                                                                       Document No.=FIELD(No.),
                                                                                                       Resource Group No.=FIELD(Resource Group Filter)));
                                                   CaptionML=[ENU=Reallocation Needed;
                                                              ENG=Reallocation Needed];
                                                   Editable=No }
    { 5936;   ;Notify Customer     ;Option        ;CaptionML=[ENU=Notify Customer;
                                                              ENG=Notify Customer];
                                                   OptionCaptionML=[ENU=No,By Phone 1,By Phone 2,By Fax,By E-Mail;
                                                                    ENG=No,By Phone 1,By Phone 2,By Fax,By E-Mail];
                                                   OptionString=No,By Phone 1,By Phone 2,By Fax,By E-Mail }
    { 5937;   ;Max. Labor Unit Price;Decimal      ;CaptionML=[ENU=Max. Labor Unit Price;
                                                              ENG=Max. Labour Unit Price];
                                                   BlankZero=Yes;
                                                   AutoFormatType=2;
                                                   AutoFormatExpr="Currency Code" }
    { 5938;   ;Warning Status      ;Option        ;CaptionML=[ENU=Warning Status;
                                                              ENG=Warning Status];
                                                   OptionCaptionML=[ENU=" ,First Warning,Second Warning,Third Warning";
                                                                    ENG=" ,First Warning,Second Warning,Third Warning"];
                                                   OptionString=[ ,First Warning,Second Warning,Third Warning] }
    { 5939;   ;No. of Allocations  ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Service Order Allocation" WHERE (Document Type=CONST(Order),
                                                                                                       Document No.=FIELD(No.),
                                                                                                       Resource No.=FIELD(Resource Filter),
                                                                                                       Resource Group No.=FIELD(Resource Group Filter),
                                                                                                       Status=FILTER(Active|Finished)));
                                                   CaptionML=[ENU=No. of Allocations;
                                                              ENG=No. of Allocations];
                                                   Editable=No }
    { 5940;   ;Contract No.        ;Code20        ;TableRelation="Service Contract Header"."Contract No." WHERE (Contract Type=CONST(Contract),
                                                                                                                 Customer No.=FIELD(Customer No.),
                                                                                                                 Ship-to Code=FIELD(Ship-to Code),
                                                                                                                 Bill-to Customer No.=FIELD(Bill-to Customer No.));
                                                   CaptionML=[ENU=Contract No.;
                                                              ENG=Contract No.] }
    { 5951;   ;Type Filter         ;Option        ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Type Filter;
                                                              ENG=Type Filter];
                                                   OptionCaptionML=[ENU=" ,Resource,Item,Service Cost,Service Contract";
                                                                    ENG=" ,Resource,Item,Service Cost,Service Contract"];
                                                   OptionString=[ ,Resource,Item,Service Cost,Service Contract] }
    { 5952;   ;Customer Filter     ;Code20        ;FieldClass=FlowFilter;
                                                   TableRelation=Customer.No.;
                                                   CaptionML=[ENU=Customer Filter;
                                                              ENG=Customer Filter] }
    { 5953;   ;Resource Filter     ;Code20        ;FieldClass=FlowFilter;
                                                   TableRelation=Resource;
                                                   CaptionML=[ENU=Resource Filter;
                                                              ENG=Resource Filter] }
    { 5954;   ;Contract Filter     ;Code20        ;FieldClass=FlowFilter;
                                                   TableRelation="Service Contract Header"."Contract No." WHERE (Contract Type=CONST(Contract));
                                                   CaptionML=[ENU=Contract Filter;
                                                              ENG=Contract Filter] }
    { 5955;   ;Ship-to Fax No.     ;Text30        ;CaptionML=[ENU=Ship-to Fax No.;
                                                              ENG=Ship-to Fax No.] }
    { 5956;   ;Ship-to E-Mail      ;Text80        ;ExtendedDatatype=E-Mail;
                                                   CaptionML=[ENU=Ship-to E-Mail;
                                                              ENG=Ship-to E-Mail] }
    { 5957;   ;Resource Group Filter;Code20       ;FieldClass=FlowFilter;
                                                   TableRelation="Resource Group";
                                                   CaptionML=[ENU=Resource Group Filter;
                                                              ENG=Resource Group Filter] }
    { 5958;   ;Ship-to Phone       ;Text30        ;ExtendedDatatype=Phone No.;
                                                   CaptionML=[ENU=Ship-to Phone;
                                                              ENG=Ship-to Phone] }
    { 5959;   ;Ship-to Phone 2     ;Text30        ;ExtendedDatatype=Phone No.;
                                                   CaptionML=[ENU=Ship-to Phone 2;
                                                              ENG=Ship-to Phone 2] }
    { 5966;   ;Service Zone Filter ;Code10        ;FieldClass=FlowFilter;
                                                   TableRelation="Service Zone".Code;
                                                   CaptionML=[ENU=Service Zone Filter;
                                                              ENG=Service Zone Filter] }
    { 5968;   ;Service Zone Code   ;Code10        ;TableRelation="Service Zone".Code;
                                                   CaptionML=[ENU=Service Zone Code;
                                                              ENG=Service Zone Code];
                                                   Editable=No }
    { 5981;   ;Expected Finishing Date;Date       ;CaptionML=[ENU=Expected Finishing Date;
                                                              ENG=Expected Finishing Date] }
    { 7001;   ;Allow Line Disc.    ;Boolean       ;CaptionML=[ENU=Allow Line Disc.;
                                                              ENG=Allow Line Disc.] }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Customer No.                             }
    {    ;Contract No.,Posting Date                }
    {    ;Response Date,Response Time,Priority     }
    {    ;Priority,Response Date,Response Time     }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;No.,Customer No.,Bill-to Customer No.,Contract No.,Posting Date }
  }
  CODE
  {
    VAR
      CustLedgEntry@1001 : Record 21;
      ReportSelection@1007 : Record 77;
      ServCommentLine@1004 : Record 5906;
      ServCrMemoHeader@1003 : Record 5994;
      ServCrMemoLine@1005 : Record 5995;
      DimMgt@1006 : Codeunit 408;
      UserSetupMgt@1000 : Codeunit 5700;
      CheckLatestQst@1002 : TextConst '@@@=%1 is Document Exchange Status;ENU=Do you want to check the latest status of the electronic document?;ENG=Do you want to check the latest status of the electronic document?';
      CannotSendMultipleInvoicesElectronicallyErr@1008 : TextConst 'ENU=You can only send one electronic invoice at a time.;ENG=You can only send one electronic invoice at a time.';

    PROCEDURE Navigate@2();
    VAR
      NavigateForm@1000 : Page 344;
    BEGIN
      NavigateForm.SetDoc("Posting Date","No.");
      NavigateForm.RUN;
    END;

    PROCEDURE SendRecords@6();
    VAR
      DocumentSendingProfile@1001 : Record 60;
      TempDocumentSendingProfile@1000 : TEMPORARY Record 60;
      ReportDistributionManagement@1002 : Codeunit 452;
    BEGIN
      DocumentSendingProfile.GetDefaultForCustomer("Bill-to Customer No.",DocumentSendingProfile);
      COMMIT;

      TempDocumentSendingProfile.INIT;
      TempDocumentSendingProfile.Code := DocumentSendingProfile.Code;
      TempDocumentSendingProfile.VALIDATE("One Related Party Selected",IsSingleCustomerSelected);
      TempDocumentSendingProfile.SetDocumentUsage(Rec);
      TempDocumentSendingProfile.INSERT;

      IF PAGE.RUNMODAL(PAGE::"Select Sending Options",TempDocumentSendingProfile) = ACTION::LookupOK THEN BEGIN
        CheckDocumentSendingProfileIsSupported(TempDocumentSendingProfile);
        ReportDistributionManagement.SendDocumentReport(TempDocumentSendingProfile,Rec);
      END;
    END;

    PROCEDURE PrintRecords@1(ShowRequestForm@1000 : Boolean);
    BEGIN
      WITH ServCrMemoHeader DO BEGIN
        COPY(Rec);
        ReportSelection.SETRANGE(Usage,ReportSelection.Usage::"SM.Credit Memo");
        ReportSelection.SETFILTER("Report ID",'<>0');
        ReportSelection.FIND('-');
        REPEAT
          REPORT.RUNMODAL(ReportSelection."Report ID",ShowRequestForm,FALSE,ServCrMemoHeader);
        UNTIL ReportSelection.NEXT = 0;
      END;
    END;

    PROCEDURE LookupAdjmtValueEntries@3();
    VAR
      ValueEntry@1000 : Record 5802;
    BEGIN
      ValueEntry.SETCURRENTKEY("Document No.");
      ValueEntry.SETRANGE("Document No.","No.");
      ValueEntry.SETRANGE("Document Type",ValueEntry."Document Type"::"Service Credit Memo");
      ValueEntry.SETRANGE(Adjustment,TRUE);
      PAGE.RUNMODAL(0,ValueEntry);
    END;

    PROCEDURE ShowDimensions@4();
    BEGIN
      DimMgt.ShowDimensionSet("Dimension Set ID",STRSUBSTNO('%1 %2',TABLECAPTION,"No."));
    END;

    PROCEDURE SetSecurityFilterOnRespCenter@5();
    BEGIN
      IF UserSetupMgt.GetServiceFilter <> '' THEN BEGIN
        FILTERGROUP(2);
        SETRANGE("Responsibility Center",UserSetupMgt.GetServiceFilter);
        FILTERGROUP(0);
      END;
    END;

    PROCEDURE GetDocExchStatusStyle@13() : Text;
    BEGIN
      CASE "Document Exchange Status" OF
        "Document Exchange Status"::"Not Sent":
          EXIT('Standard');
        "Document Exchange Status"::"Sent to Document Exchange Service":
          EXIT('Ambiguous');
        "Document Exchange Status"::"Delivered to Recipient":
          EXIT('Favorable');
        ELSE
          EXIT('Unfavorable');
      END;
    END;

    PROCEDURE DocExchStatusDrillDown@8();
    VAR
      DocExchLinks@1001 : Codeunit 1411;
      DocExchServiceMgt@1000 : Codeunit 1410;
    BEGIN
      CASE "Document Exchange Status" OF
        "Document Exchange Status"::"Not Sent":
          EXIT;
        "Document Exchange Status"::"Sent to Document Exchange Service",
        "Document Exchange Status"::"Pending Connection to Recipient":
          IF CONFIRM(CheckLatestQst,TRUE) THEN
            DocExchLinks.CheckAndUpdateDocExchServiceCrMemoStatus(Rec);
        "Document Exchange Status"::"Delivered to Recipient":
          BEGIN
            HYPERLINK(DocExchServiceMgt.GetExternalDocURL("Document Exchange Identifier"));
            EXIT;
          END;
      END;

      ShowActivityLog;
    END;

    PROCEDURE ShowActivityLog@116();
    VAR
      ActivityLog@1000 : Record 710;
    BEGIN
      ActivityLog.ShowEntries(RECORDID);
    END;

    LOCAL PROCEDURE IsSingleCustomerSelected@7() : Boolean;
    VAR
      SelectedCount@1001 : Integer;
      CustomerCount@1000 : Integer;
      BillToCustomerNoFilter@1002 : Text;
    BEGIN
      SelectedCount := COUNT;

      IF SelectedCount < 1 THEN
        EXIT(FALSE);

      IF SelectedCount = 1 THEN
        EXIT(TRUE);

      BillToCustomerNoFilter := GETFILTER("Bill-to Customer No.");
      SETRANGE("Bill-to Customer No.","Bill-to Customer No.");
      CustomerCount := COUNT;
      SETFILTER("Bill-to Customer No.",BillToCustomerNoFilter);

      EXIT(SelectedCount = CustomerCount);
    END;

    LOCAL PROCEDURE CheckDocumentSendingProfileIsSupported@12(VAR TempDocumentSendingProfile@1000 : TEMPORARY Record 60);
    BEGIN
      IF (COUNT > 1) AND
         (TempDocumentSendingProfile."Electronic Document" <> TempDocumentSendingProfile."Electronic Document"::No)
      THEN
        ERROR(CannotSendMultipleInvoicesElectronicallyErr);
    END;

    BEGIN
    END.
  }
}

