OBJECT Table 9021687 Web Assembly
{
  OBJECT-PROPERTIES
  {
    Date=13/07/16;
    Time=[ 1:50:07 PM];
    Version List=EC2016.6;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               LabelRec.GET("Label Code");
               IF LabelRec."Used-in Company" <> COMPANYNAME THEN
                 ERROR(Text001);

               LabelRec.LOCKTABLE;
               LabelRec."Last Assembly Entry ID" := LabelRec."Last Assembly Entry ID" + 1;
               "Assembly GuID" := LabelRec."Last Assembly Entry ID";

               LabelRec."Assembly Configuration OK" := FALSE;
               LabelRec.MODIFY;

               DateTimeInsertedModified:=CURRENTDATETIME;
             END;

    OnModify=BEGIN
               LabelRec.GET("Label Code");
               IF LabelRec."Used-in Company" <> COMPANYNAME THEN
                 ERROR(Text001,"Label Code",COMPANYNAME);

               LabelRec.GET("Label Code");
               LabelRec."Configuration OK" := FALSE;
               LabelRec.MODIFY;
               MODIFY;  //needed to ensure we do not get "Another user has modified the database" error
               Resort("Label Code");

               DateTimeInsertedModified:=CURRENTDATETIME;
             END;

    OnDelete=BEGIN
               {
               LabelRec.GET("Label Code");
               IF LabelRec."Used-in Company" <> COMPANYNAME THEN
                 ERROR(Text001,"Label Code",COMPANYNAME);
               }

               CALCFIELDS("No. of Components");
               IF "No. of Components" <> 0 THEN BEGIN
                 IF CONFIRM(Text003) THEN BEGIN
                   WebCompRec.RESET;
                   WebCompRec.SETRANGE("Label Code","Label Code");
                   WebCompRec.SETRANGE("Assembly GuID","Assembly GuID");
                   WebCompRec.DELETEALL;
                 END;
               END;

               LabelRec.GET("Label Code");
               LabelRec."Assembly Configuration OK" := FALSE;
               LabelRec.MODIFY;
               DELETE;  //needed to ensure we do not get "Another user has modified the database" error
               Resort("Label Code");
             END;

    OnRename=BEGIN
               ERROR(Text010);
             END;

    CaptionML=[ENU=Web Assembly;
               ENG=Web Assembly];
    LookupPageID=Page9021750;
    DrillDownPageID=Page9021750;
  }
  FIELDS
  {
    { 1   ;   ;Label Code          ;Code10        ;TableRelation=Label;
                                                   CaptionML=[ENU=Label Code;
                                                              ENG=Label Code];
                                                   Editable=No }
    { 3   ;   ;Assembly GuID       ;Integer       ;CaptionML=[ENU=Assembly GuID;
                                                              ENG=Assembly GuID];
                                                   Editable=No }
    { 8   ;   ;Verified            ;Boolean       ;CaptionML=[ENU=Verified;
                                                              ENG=Verified];
                                                   Editable=No }
    { 10  ;   ;Assembly Name       ;Text150       ;CaptionML=[ENU=Assembly Name;
                                                              ENG=Assembly Name] }
    { 13  ;   ;DateTimeInsertedModified;DateTime  ;CaptionML=[ENU=DateTimeInsertedModified;
                                                              ENG=DateTimeInsertedModified] }
    { 15  ;   ;Blocked             ;Boolean       ;OnValidate=BEGIN
                                                                CycleBlocked("Label Code","Assembly GuID",Blocked);

                                                                //Error if you try to make the blocked status different from the Parent
                                                                IF ParentGuID <> 0 THEN BEGIN
                                                                  WebAss1.GET("Label Code",ParentGuID);
                                                                  IF WebAss1.Blocked THEN
                                                                    ERROR(Text004);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Blocked;
                                                              ENG=Blocked] }
    { 18  ;   ;Configuration OK    ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Label."Assembly Configuration OK" WHERE (Code=FIELD(Label Code)));
                                                   CaptionML=[ENU=Configuration OK;
                                                              ENG=Configuration OK];
                                                   Editable=No }
    { 20  ;   ;Level               ;Integer       ;CaptionML=[ENU=Level;
                                                              ENG=Level];
                                                   MinValue=0;
                                                   MaxValue=20;
                                                   Editable=No }
    { 30  ;   ;No. of Components   ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Web Assembly Component" WHERE (Label Code=FIELD(Label Code),
                                                                                                     Assembly GuID=FIELD(Assembly GuID)));
                                                   CaptionML=[ENU=No. of Components;
                                                              ENG=No. of Components] }
    { 35  ;   ;Min. Component Selection Count;Integer;
                                                   CaptionML=[ENU=Min. Component Selection Count;
                                                              ENG=Min. Component Selection Count];
                                                   Description=Used by web to ensure minimum number of items are included }
    { 36  ;   ;Max. Component Selection Count;Integer;
                                                   CaptionML=[ENU=Max. Component Selection Count;
                                                              ENG=Max. Component Selection Count];
                                                   Description=Used by web to ensure no more items are included than allowed }
    { 40  ;   ;Link No.            ;Code20        ;TableRelation=IF (Link Type=CONST(Item)) Item
                                                                 ELSE IF (Link Type=CONST(Resource)) Resource;
                                                   OnValidate=BEGIN
                                                                IF (ParentGuID <> 0) AND ("Link No." <> '') THEN
                                                                  ERROR(Text002);

                                                                IF "Link No." = '' THEN
                                                                  "Link Name" := ''
                                                                ELSE BEGIN
                                                                  IF "Link Type" = "Link Type"::Item THEN BEGIN
                                                                    ItemRec.GET("Link No.");
                                                                    "Link Name" := ItemRec.Description;
                                                                  END ELSE BEGIN
                                                                    ResourceRec.GET("Link No.");
                                                                    "Link Name" := ResourceRec.Name;
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Link No.;
                                                              ENG=Link No.] }
    { 41  ;   ;Link Name           ;Text50        ;CaptionML=[ENU=Link Name;
                                                              ENG=Link Name];
                                                   Editable=No }
    { 43  ;   ;Link Type           ;Option        ;CaptionML=[ENU=Link Type;
                                                              ENG=Link Type];
                                                   OptionCaptionML=[ENU=Item,Resource;
                                                                    ENG=Item,Resource];
                                                   OptionString=Item,Resource }
    { 100 ;   ;Order               ;Integer       ;CaptionML=[ENU=Order;
                                                              ENG=Order];
                                                   Editable=No }
    { 101 ;   ;New Order           ;Integer       ;CaptionML=[ENU=New Order;
                                                              ENG=New Order];
                                                   Editable=No }
    { 180 ;   ;Error Message       ;Text250       ;CaptionML=[ENU=Error Message;
                                                              ENG=Error Message];
                                                   Editable=No }
    { 200 ;   ;ParentGuID          ;Integer       ;CaptionML=[ENU=ParentGuID;
                                                              ENG=ParentGuID];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Label Code,Assembly GuID                ;Clustered=Yes }
    {    ;Label Code,Order                         }
    {    ;Label Code,ParentGuID                    }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      LabelRec@1000000004 : Record 9021618;
      WebAss1@1000000000 : Record 9021687;
      WebAss2@1000000001 : Record 9021687;
      WebCompRec@1000000010 : Record 9021688;
      ResourceRec@1000000015 : Record 156;
      ItemRec@1000000016 : Record 27;
      OrderNo@1000000002 : Integer;
      Text000@1000000009 : TextConst 'ENU=Assembly Resource can only be specified if ParentGuID is 0;ENG=Assembly Resource can only be specified if ParentGuID is 0';
      Text001@1000000005 : TextConst 'ENU=This Label is for a different company, select a different Label. (1);ENG=This Label is for a different company, select a different Label. (1)';
      Text002@1000000008 : TextConst 'ENU=You cannot specify the Assembly Resource No. unless the Parent GuID is 0.;ENG=You cannot specify the Assembly Resource No. unless the Parent GuID is 0.';
      Text003@1000000011 : TextConst 'ENU=If you continue the web components will be deleted. Are you sure you want to continue?;ENG=If you continue the web components will be deleted. Are you sure you want to continue?';
      Text004@1000000007 : TextConst 'ENU=You cannot unblock this as its parent is blocked. (4);ENG=You cannot unblock this as its parent is blocked. (4)';
      Text005@1000000012 : TextConst 'ENU=No components allowed cos got children;ENG=No components allowed cos got children';
      Text006@1000000013 : TextConst 'ENU=Needs components;ENG=Needs components';
      Text007@1000000003 : TextConst 'ENU=Has no parent;ENG=Has no parent';
      Text008@1000000014 : TextConst 'ENU=Assembly Resource must be specified if ParentGuID is 0;ENG=Assembly Resource must be specified if ParentGuID is 0';
      Text010@1000000006 : TextConst 'ENU=You can not rename a Web Product Assembly.;ENG=You can not rename a Web Product Assembly.';

    PROCEDURE Reorder@1000000000(LabelCode@1000000000 : Code[10]);
    VAR
      i1@1000000001 : Integer;
      i2@1000000002 : Integer;
    BEGIN
      WebAss1.RESET;
      WebAss1.SETRANGE("Label Code",LabelCode);
      WebAss1.SETCURRENTKEY("Label Code",Order);
      i1 := 0;
      IF WebAss1.FIND('-') THEN
      REPEAT
        IF i1 = 0 THEN BEGIN
          i1 := 1;
          i2 := 1;
          WebAss2 := WebAss1;
          WebAss2."New Order" := 1;
        END ELSE BEGIN
          WebAss2 := WebAss1;
          i2 := i2 + 1;
          WebAss2."New Order" := i2;
        END;
        WebAss2.MODIFY;
      UNTIL WebAss1.NEXT = 0;

      WebAss1.RESET;
      WebAss1.SETRANGE("Label Code",LabelCode);
      WebAss1.SETCURRENTKEY("Label Code",Order);
      IF WebAss1.FIND('-') THEN
      REPEAT
        WebAss2 := WebAss1;
        WebAss2.Order := WebAss2."New Order";
        WebAss2.MODIFY;
      UNTIL WebAss1.NEXT = 0;
    END;

    PROCEDURE MoveUp@1000000001(VAR LocalRec@1000000000 : Record 9021687);
    BEGIN
      WebAss1.RESET;
      WebAss1.GET(LocalRec."Label Code",LocalRec."Assembly GuID");
      OrderNo := WebAss1.Order;
      IF OrderNo = 1 THEN
        EXIT;

      WebAss1.RESET;
      WebAss1.SETRANGE("Label Code",LocalRec."Label Code");
      WebAss1.SETFILTER(Order,'%1',OrderNo - 1);
      WebAss1.SETCURRENTKEY("Label Code",Order);
      IF WebAss1.FIND('-') THEN BEGIN
        WebAss2 := WebAss1;
        WebAss2.Order := OrderNo;
        WebAss2.MODIFY;
      END;
      LocalRec.Order := OrderNo - 1;
    END;

    PROCEDURE MoveDown@1000000002(VAR LocalRec@1000000000 : Record 9021687);
    BEGIN
      WebAss1.RESET;
      WebAss1.GET(LocalRec."Label Code",LocalRec."Assembly GuID");
      OrderNo := WebAss1.Order;

      WebAss1.RESET;
      WebAss1.SETRANGE("Label Code",LocalRec."Label Code");
      WebAss1.SETFILTER(Order,'%1',OrderNo + 1);
      WebAss1.SETCURRENTKEY("Label Code",Order);
      IF WebAss1.FIND('-') THEN BEGIN
        WebAss2 := WebAss1;
        WebAss2.Order := OrderNo;
        WebAss2.MODIFY;
        LocalRec.Order := OrderNo + 1;
      END;
    END;

    PROCEDURE Demote@1000000004(VAR LocalRec@1000000000 : Record 9021687);
    BEGIN
      LocalRec.Level := LocalRec.Level + 1;
    END;

    PROCEDURE Promote@1000000003(VAR LocalRec@1000000000 : Record 9021687);
    BEGIN
      IF LocalRec.Level > 0 THEN BEGIN
        LocalRec.Level := LocalRec.Level - 1;
      END;
    END;

    PROCEDURE Resort@1040002(LabelCodeR@1040003 : Code[10]);
    VAR
      LocalLabelRecR1@1040008 : Record 9021618;
      LocalWebAssRecR1@1040000 : Record 9021687;
      LocalWebAssRecR2@1040001 : Record 9021687;
      LocalWebAssRecR3@1040002 : Record 9021687;
      ErrorText@1040004 : Text[250];
      ResortParentGuID@1040005 : Integer;
      FoundErrorR@1040006 : Boolean;
      NeedToModify@1040007 : Boolean;
    BEGIN
      //After Move Up or Down, Promote or Demote, Insert or Delete run this code
      //It first tries to rebuild the ParentGuIDs and marks with errors where
      //appropriate errors then sets the blocked flag.

      //Rebuilding the ParentGuIDs
      FoundErrorR := FALSE;
      LocalWebAssRecR1.RESET;
      LocalWebAssRecR1.SETRANGE("Label Code",LabelCodeR);
      LocalWebAssRecR1.SETCURRENTKEY("Label Code",Order);
      IF LocalWebAssRecR1.FIND('-') THEN
      REPEAT
        ErrorText := '';
        LocalWebAssRecR2 := LocalWebAssRecR1;
        LocalWebAssRecR2.Verified := TRUE;
        IF LocalWebAssRecR1.Level = 0 THEN BEGIN
          LocalWebAssRecR2.ParentGuID := 0
        END ELSE BEGIN
          ResortParentGuID:= FindParent(LabelCodeR,LocalWebAssRecR1.Order,LocalWebAssRecR1.Level);
          IF ResortParentGuID = 0 THEN
            ErrorText := AddToErrorText(ErrorText,Text007);
          LocalWebAssRecR2.ParentGuID := ResortParentGuID;
        END;
        IF (LocalWebAssRecR2."Link No." <> '') AND
           (LocalWebAssRecR2.ParentGuID <> 0) THEN
          ErrorText := AddToErrorText(ErrorText,Text000);
        IF (LocalWebAssRecR2."Link No." = '') AND
           (LocalWebAssRecR2.ParentGuID = 0) THEN
          ErrorText := AddToErrorText(ErrorText,Text008);
        IF ErrorText <> '' THEN BEGIN
          FoundErrorR := TRUE;
          LocalWebAssRecR2.Verified := FALSE;
        END;
        LocalWebAssRecR2."Error Message" := ErrorText;
        LocalWebAssRecR2.MODIFY;
      UNTIL LocalWebAssRecR1.NEXT = 0;

      //Checking the ParentGuIDs for valid or invalid links
      LocalWebAssRecR2.RESET;
      LocalWebAssRecR2.SETRANGE("Label Code",LabelCodeR);
      LocalWebAssRecR2.SETCURRENTKEY("Label Code",ParentGuID);
      LocalWebAssRecR1.RESET;
      LocalWebAssRecR1.SETRANGE("Label Code",LabelCodeR);
      LocalWebAssRecR1.SETCURRENTKEY("Label Code",Order);
      IF LocalWebAssRecR1.FIND('-') THEN
      REPEAT
        NeedToModify := FALSE;
        LocalWebAssRecR3 := LocalWebAssRecR1;
        LocalWebAssRecR1.CALCFIELDS("No. of Components");
        LocalWebAssRecR2.SETRANGE(ParentGuID,LocalWebAssRecR1."Assembly GuID");
        IF LocalWebAssRecR2.FIND('-') THEN BEGIN
          IF LocalWebAssRecR1."No. of Components" > 0 THEN BEGIN
            LocalWebAssRecR3."Error Message" := AddToErrorText(LocalWebAssRecR3."Error Message",Text005);
            NeedToModify := TRUE;
          END;
        END ELSE BEGIN
          IF LocalWebAssRecR1."No. of Components" = 0 THEN BEGIN
            LocalWebAssRecR3."Error Message" := AddToErrorText(LocalWebAssRecR3."Error Message",Text006);
            NeedToModify := TRUE;
          END;
        END;
        IF NeedToModify THEN BEGIN
          FoundErrorR := TRUE;
          LocalWebAssRecR3.MODIFY;
        END;
      UNTIL LocalWebAssRecR1.NEXT = 0;


      //Updating Label
      LocalLabelRecR1.GET(LabelCodeR);
      IF FoundErrorR THEN
        LocalLabelRecR1."Assembly Configuration OK" := FALSE
      ELSE
        LocalLabelRecR1."Assembly Configuration OK" := TRUE;
      LocalLabelRecR1.MODIFY;

      //Handling blocked
      LocalWebAssRecR3.RESET;
      LocalWebAssRecR3.SETRANGE("Label Code",LabelCodeR);
      LocalWebAssRecR3.SETCURRENTKEY("Label Code",ParentGuID);

      LocalWebAssRecR2.RESET;
      LocalWebAssRecR2.SETRANGE(Blocked,TRUE);
      LocalWebAssRecR2.SETRANGE("Label Code",LabelCodeR);
      IF LocalWebAssRecR2.FIND('-') THEN
      REPEAT
        LocalWebAssRecR3.SETRANGE(ParentGuID,LocalWebAssRecR2."Assembly GuID");
        IF LocalWebAssRecR3.FIND('-') THEN
        REPEAT
          IF LocalWebAssRecR3.Blocked <> LocalWebAssRecR2.Blocked THEN BEGIN
            LocalWebAssRecR3.Blocked := LocalWebAssRecR2.Blocked;
            LocalWebAssRecR3.MODIFY;
          END;
        UNTIL LocalWebAssRecR3.NEXT = 0;
      UNTIL LocalWebAssRecR2.NEXT = 0;
      //End handling blocked
    END;

    PROCEDURE FindParent@1040000(LabelCodeFP@1040000 : Code[10];VAR OrderFP@1040001 : Integer;VAR LevelFP@1040003 : Integer) ParentGuIDNo : Integer;
    VAR
      LocalWebAssRecFP1@1040002 : Record 9021687;
    BEGIN
      LocalWebAssRecFP1.RESET;
      LocalWebAssRecFP1.SETRANGE("Label Code",LabelCodeFP);
      LocalWebAssRecFP1.SETFILTER(Order,'<%1',OrderFP);
      LocalWebAssRecFP1.SETFILTER(Level,'<%1',LevelFP);
      LocalWebAssRecFP1.SETCURRENTKEY("Label Code",Order);
      IF LocalWebAssRecFP1.FINDLAST THEN BEGIN
        IF LocalWebAssRecFP1.Level = (LevelFP - 1) THEN
          ParentGuIDNo := LocalWebAssRecFP1."Assembly GuID"
        ELSE
          ParentGuIDNo := 0;
      END ELSE
        //If do not find a record then no suitable parent exists.
        ParentGuIDNo := 0;
    END;

    PROCEDURE AddToErrorText@1040003(CurrentErrorText@1040000 : Text[250];ErrorNo@1040001 : Text[250]) NewErrorText : Text[250];
    BEGIN
      IF CurrentErrorText = '' THEN
        NewErrorText := ErrorNo
      ELSE
        NewErrorText := CurrentErrorText + ', ' + ErrorNo;
    END;

    PROCEDURE CycleBlocked@1040001(LabelCode@1040002 : Code[10];ID@1040001 : Integer;FeedBlocked@1040003 : Boolean);
    VAR
      LocalConfigEntryCB1@1040000 : Record 9021687;
      LocalConfigEntryCB2@1040004 : Record 9021687;
    BEGIN
      LocalConfigEntryCB1.RESET;
      LocalConfigEntryCB1.SETRANGE("Label Code",LabelCode);
      LocalConfigEntryCB1.SETRANGE(ParentGuID,ID);
      LocalConfigEntryCB1.SETCURRENTKEY("Label Code",ParentGuID);
      IF LocalConfigEntryCB1.FIND('-') THEN
      REPEAT
        LocalConfigEntryCB2 := LocalConfigEntryCB1;
        LocalConfigEntryCB2.Blocked := FeedBlocked;
        LocalConfigEntryCB2.MODIFY;
        CycleBlocked(LabelCode,LocalConfigEntryCB1."Assembly GuID",FeedBlocked);
      UNTIL LocalConfigEntryCB1.NEXT = 0;
    END;

    BEGIN
    {
      //DOC EC2009.2 MA 13/01/2010 - Addition of fields: Min. Component Selection Count; Max. Component Selection Count
      //DOC EC2016.6 JH 05/10/2016 - ECom 2016
    }
    END.
  }
}

