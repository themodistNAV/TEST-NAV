OBJECT Page 10507 Calendar Overview
{
  OBJECT-PROPERTIES
  {
    Date=09/09/14;
    Time=12:00:00 PM;
    Version List=NAVGB8.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Calendar Overview;
               ENG=Calendar Overview];
    SourceTable=Table10560;
    PageType=Card;
    OnOpenPage=BEGIN
                 AccountingPeriod.RESET;
                 InitializeForm;

                 SETRANGE("Period Start",0D,WORKDATE);
                 IF FIND('+') THEN;
                 SETRANGE("Period Start");
               END;

    OnFindRecord=BEGIN
                   AccPeriodTemp := Rec;
                   IF NOT AccPeriodTemp.FIND(Which) THEN
                     EXIT(FALSE);
                   Rec := AccPeriodTemp;
                   EXIT(TRUE);
                 END;

    OnNextRecord=VAR
                   CurrentSteps@1000 : Integer;
                 BEGIN
                   AccPeriodTemp := Rec;
                   CurrentSteps := AccPeriodTemp.NEXT(Steps);
                   IF CurrentSteps <> 0 THEN
                     Rec := AccPeriodTemp;
                   EXIT(CurrentSteps);
                 END;

    OnAfterGetRecord=BEGIN
                       PeriodTypeIndent := 0;
                       PeriodTypeOnFormat;
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=[ENU=General;
                           ENG=General] }

    { 2   ;2   ;Field     ;
                CaptionML=[ENU=Year Filter;
                           ENG=Year Filter];
                SourceExpr=YearFilter;
                TableRelation="Accounting Period GB"."Period Start" WHERE (Period Type=CONST(Year));
                OnValidate=BEGIN
                             IF AccountingPeriod.GET(AccountingPeriod."Period Type"::Year,YearFilter) THEN
                               AccPeriodTemp.SETRANGE("Period Start",AccountingPeriod."Period Start",AccountingPeriod."Period End")
                             ELSE
                               AccPeriodTemp.SETRANGE("Period Start");
                             YearFilterOnAfterValidate;
                           END;
                            }

    { 1040022;2;Field     ;
                CaptionML=[ENU=Show;
                           ENG=Show];
                SourceExpr=Show;
                OnValidate=BEGIN
                             IF Show = Show::All THEN
                               AccPeriodTemp.SETRANGE("Period Type")
                             ELSE
                               AccPeriodTemp.SETRANGE("Period Type",Show - 1);
                             ShowOnAfterValidate;
                           END;
                            }

    { 1040000;1;Group     ;
                Editable=FALSE;
                IndentationColumnName=PeriodTypeIndent;
                IndentationControls=Period Type;
                GroupType=Repeater }

    { 1040005;2;Field     ;
                SourceExpr="Period Type" }

    { 1040007;2;Field     ;
                SourceExpr="Period Start" }

    { 1040009;2;Field     ;
                SourceExpr="Period End" }

    { 1040011;2;Field     ;
                SourceExpr="Period No." }

    { 1040013;2;Field     ;
                SourceExpr="Period Name" }

    { 1040020;2;Field     ;
                SourceExpr=Closed }

  }
  CODE
  {
    VAR
      AccountingPeriod@1040001 : Record 10560;
      AccPeriodTemp@1000 : TEMPORARY Record 10560;
      IndentationValue@1040003 : Integer;
      YearFilter@1002 : Date;
      Show@1040002 : 'All,Day,Week,Month,Quarter,Year';
      PeriodTypeIndent@19062880 : Integer INDATASET;

    PROCEDURE InsertAccPeriodTemp@25();
    BEGIN
      AccPeriodTemp := AccountingPeriod;
      AccPeriodTemp."Line No." := 5 - AccPeriodTemp."Period Type";
      AccPeriodTemp.INSERT;
    END;

    PROCEDURE InitializeForm@1040000();
    BEGIN
      AccPeriodTemp.RESET;
      AccPeriodTemp.DELETEALL;
      IF AccountingPeriod.FIND('-') THEN
        REPEAT
          InsertAccPeriodTemp;
        UNTIL AccountingPeriod.NEXT = 0;
      AccPeriodTemp.SETCURRENTKEY("Period Start","Line No.");
    END;

    LOCAL PROCEDURE YearFilterOnAfterValidate@19069161();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ShowOnAfterValidate@19007353();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE PeriodTypeOnFormat@19072459();
    BEGIN
      IndentationValue := 4 - "Period Type";
      PeriodTypeIndent := IndentationValue;
    END;

    BEGIN
    END.
  }
}

