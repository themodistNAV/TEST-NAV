OBJECT Table 9021657 Promotion Qualifying Line
{
  OBJECT-PROPERTIES
  {
    Date=13/07/16;
    Time=[ 1:50:05 PM];
    Version List=EC2016.6;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               GetPromoHeader;
               PromoHeader.TESTFIELD(Released,FALSE);
               PromoHeader.TESTFIELD("Label Code");
               "Label Code" :=  PromoHeader."Label Code";
             END;

    OnModify=BEGIN
               //DOC EC2015.5.01 -
               IF "Benefit Multipler" = 0 THEN
                 "Benefit Multipler" := 1;
               //DOC EC2015.5.01 +

               GetPromoHeader;
               PromoHeader.TESTFIELD(Released,FALSE);
               CheckLineCombinations;
             END;

    OnDelete=BEGIN
               GetPromoHeader;
               PromoHeader.TESTFIELD(Released,FALSE);
             END;

    CaptionML=[ENU=Promotion Qualifying Line;
               ENG=Promotion Qualifying Line];
    LookupPageID=Page9021673;
    DrillDownPageID=Page9021673;
  }
  FIELDS
  {
    { 1   ;   ;Promotion No.       ;Code20        ;TableRelation="Promotion Header";
                                                   CaptionML=[ENU=Promotion No.;
                                                              ENG=Promotion No.] }
    { 2   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              ENG=Line No.] }
    { 6   ;   ;Applies-to Type     ;Option        ;OnValidate=BEGIN
                                                                IF "Applies-to Type" <> xRec."Applies-to Type" THEN BEGIN
                                                                  "No." := '';
                                                                  ClearLineDetails;
                                                                END;

                                                                CASE "Applies-to Type" OF
                                                                  "Applies-to Type"::Item :
                                                                    BEGIN
                                                                      "Mark Line for Benefit" := FALSE;
                                                                      //"Qualify-by Type" := "Qualify-by Type"::Quantity;
                                                                    END;
                                                                  "Applies-to Type"::"Order Total":
                                                                    BEGIN
                                                                      "Qualify-by Type" := "Qualify-by Type"::Amount;
                                                                    END;
                                                                  "Applies-to Type"::Voucher:
                                                                    BEGIN
                                                                      "Mark Line for Benefit" := FALSE;
                                                                      //"Qualify-by Type" := "Qualify-by Type"::Quantity;
                                                                      "Qualifying Qty." := 1;
                                                                    END;
                                                                  //DOC EC2015.5.01 -
                                                                  //"Applies-to Type"::"Promotion Group":
                                                                  "Applies-to Type"::"Promotion Group", "Applies-to Type"::"Distinct Promo Group Items":
                                                                  //DOC EC2015.5.01 +
                                                                    BEGIN
                                                                      //"Qualify-by Type" := "Qualify-by Type"::Quantity;
                                                                      IF "Label Code" = '' THEN
                                                                        GetPromoHeader; //DOC EC2013.4.62
                                                                    END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Applies-to Type;
                                                              ENG=Applies-to Type];
                                                   OptionCaptionML=[ENU=Item,Order Total,Voucher,Promotion Group,Distinct Promo Group Items;
                                                                    ENG=Item,Order Total,Voucher,Promotion Group,Distinct Promo Group Items];
                                                   OptionString=Item,Order Total,Voucher,Promotion Group,Distinct Promo Group Items;
                                                   Description=EC2015.5.01 MQ 22/12/2014 - GW141222 add to Option String }
    { 10  ;   ;No.                 ;Code20        ;TableRelation=IF (Applies-to Type=CONST(Item)) Item
                                                                 ELSE IF (Applies-to Type=CONST(Promotion Group)) "Promotion Group".Code WHERE (Label Code=FIELD(Label Code))
                                                                 ELSE IF (Applies-to Type=CONST(Voucher)) "Voucher Scheme".Code WHERE (Voucher Type=CONST(Promotional),
                                                                                                                                       Promotion Code=FIELD(Promotion No.))
                                                                                                                                       ELSE IF (Applies-to Type=CONST(Distinct Promo Group Items)) "Promotion Group".Code WHERE (Label Code=FIELD(Label Code));
                                                   OnValidate=BEGIN
                                                                IF "No." <> xRec."No." THEN
                                                                  ClearLineDetails;
                                                                IF "No." <> '' THEN
                                                                  CASE TRUE OF
                                                                    "Applies-to Type" = "Applies-to Type"::Item:
                                                                      BEGIN
                                                                        Item.GET("No.");
                                                                        Description := Item.Description;
                                                                      END;
                                                                    "Applies-to Type" = "Applies-to Type"::"Order Total":
                                                                      ERROR(Text003);
                                                                    "Applies-to Type" = "Applies-to Type"::Voucher:
                                                                      BEGIN
                                                                        //DOC EC2013.4.60 -
                                                                        IF "No." <> '' THEN BEGIN
                                                                          VoucherScheme.GET("No.");
                                                                          Description := VoucherScheme.Description;
                                                                        END;
                                                                        {
                                                                        IF "No." <> '' THEN BEGIN
                                                                          VoucherEntry.RESET;
                                                                          VoucherEntry.SETCURRENTKEY("Customer No.","Voucher No.",Open);
                                                                          VoucherEntry.SETRANGE("Voucher Type",VoucherEntry."Voucher Type"::Promotional);
                                                                          VoucherEntry.SETRANGE(Open,TRUE);
                                                                          VoucherEntry.SETRANGE("Voucher No.","No.");
                                                                          VoucherEntry.FINDFIRST;
                                                                          VoucherScheme.GET(VoucherEntry."Voucher Scheme Code");
                                                                          Description := VoucherScheme.Description;
                                                                        END;
                                                                        }
                                                                        //DOC EC2013.4.60 +
                                                                      END;
                                                                    "Applies-to Type" = "Applies-to Type"::"Promotion Group":
                                                                      BEGIN
                                                                        IF "Label Code" = '' THEN
                                                                          GetPromoHeader;
                                                                        PromotionGroup.RESET;
                                                                        PromotionGroup.GET("Label Code","No.");
                                                                        Description := PromotionGroup.Description;
                                                                      END;
                                                                    //DOC EC2015.5.01 -
                                                                    "Applies-to Type" =  "Applies-to Type"::"Distinct Promo Group Items":
                                                                      BEGIN
                                                                        IF "Label Code" = '' THEN
                                                                          GetPromoHeader;
                                                                        PromotionGroup.RESET;
                                                                        PromotionGroup.GET("Label Code","No.");
                                                                        Description := PromotionGroup.Description;
                                                                      END;
                                                                    //DOC EC2015.5.01 +
                                                                  END;

                                                                {
                                                                //DOC EC2013.4.60 -
                                                                //if not used can delete function VersionCalls.LookupNoOnPromoQualLine
                                                                //has locals VersionsCalls CU Version Calls, NewNo Code 20
                                                                //DOC EC2013.4.00 - from OnLookup
                                                                //VALIDATE("No.",VersionCalls.LookupNoOnPromoQualLine(Rec));
                                                                NewNo := VersionCalls.LookupNoOnPromoQualLine(Rec);
                                                                IF NewNo <> '' THEN
                                                                  VALIDATE("No.",NewNo);
                                                                //DOC EC2013.4.60 +
                                                                }
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              ENG=No.] }
    { 12  ;   ;Label Code          ;Code10        ;TableRelation=Label;
                                                   CaptionML=[ENU=Label Code;
                                                              ENG=Label Code] }
    { 15  ;   ;Description         ;Text100       ;CaptionML=[ENU=Description;
                                                              ENG=Description];
                                                   Description=EC2015.5.01 MQ 22/12/2014 - GW141222 from T50 }
    { 18  ;   ;Extract             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Promotion Header".Extract WHERE (No.=FIELD(Promotion No.)));
                                                   CaptionML=[ENU=Extract;
                                                              ENG=Extract];
                                                   Description=flowfield }
    { 20  ;   ;Qualify-by Type     ;Option        ;OnValidate=BEGIN
                                                                IF ("Applies-to Type" = "Applies-to Type"::"Order Total") AND
                                                                   ("Qualify-by Type" = "Qualify-by Type"::Quantity) THEN
                                                                  ERROR(Text005);
                                                                //DOC EC2015.5.01 -
                                                                //IF ("Applies-to Type" = "Applies-to Type"::Voucher) AND
                                                                IF (("Applies-to Type" = "Applies-to Type"::Voucher) OR
                                                                  ("Applies-to Type" = "Applies-to Type"::"Distinct Promo Group Items")) AND
                                                                //DOC EC2015.5.01 +
                                                                   ("Qualify-by Type" = "Qualify-by Type"::Amount) THEN
                                                                  ERROR(Text002);

                                                                IF "Qualify-by Type" <> xRec."Qualify-by Type" THEN BEGIN
                                                                  "Qualifying Qty." := 0;
                                                                  "Qualifying Amount" := 0;
                                                                  //DOC EC2015.5.01 -
                                                                  "Max Qualifying Qty." := 0;
                                                                  "Max Qualifying Amount" := 0;
                                                                  //DOC EC2015.5.01 +
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Qualify-by Type;
                                                              ENG=Qualify-by Type];
                                                   OptionCaptionML=[ENU=Quantity,Amount;
                                                                    ENG=Quantity,Amount];
                                                   OptionString=Quantity,Amount }
    { 21  ;   ;Qualifying Qty.     ;Integer       ;OnValidate=BEGIN
                                                                IF ("Qualify-by Type" = "Qualify-by Type"::Amount) AND
                                                                   ("Qualifying Qty." <> 0) THEN
                                                                  ERROR(Text000);

                                                                IF "Qualifying Qty." <> xRec."Qualifying Qty." THEN
                                                                  "Qualifying Amount" := 0;

                                                                //DOC EC2015.5.01 -
                                                                IF "Max Qualifying Qty." < "Qualifying Qty." THEN
                                                                  "Max Qualifying Qty." := "Qualifying Qty.";
                                                                //DOC EC2015.5.01 +
                                                              END;

                                                   CaptionML=[ENU=Qualifying Qty.;
                                                              ENG=Qualifying Qty.];
                                                   MinValue=0 }
    { 22  ;   ;Qualifying Amount   ;Decimal       ;OnValidate=BEGIN
                                                                IF ("Qualify-by Type" = "Qualify-by Type"::Quantity) AND
                                                                   ("Qualifying Amount" <> 0) THEN
                                                                  ERROR(Text000);

                                                                IF "Qualifying Amount" <> xRec."Qualifying Amount" THEN
                                                                  "Qualifying Qty." := 0;

                                                                //DOC EC2015.5.01 -
                                                                IF "Max Qualifying Amount" < "Qualifying Amount" THEN
                                                                  "Max Qualifying Amount" := "Qualifying Amount";
                                                                //DOC EC2015.5.01 +
                                                              END;

                                                   CaptionML=[ENU=Qualifying Amount;
                                                              ENG=Qualifying Amount] }
    { 25  ;   ;Max Qualifying Qty. ;Integer       ;CaptionML=[ENU=Max Qualifying Qty.;
                                                              ENG=Max Qualifying Qty.];
                                                   Description=EC2015.5.01 MQ 22/12/2014 - GW141222 add field;
                                                   Editable=No }
    { 26  ;   ;Max Qualifying Amount;Decimal      ;CaptionML=[ENU=Max Qualifying Amount;
                                                              ENG=Max Qualifying Amount];
                                                   Description=EC2015.5.01 MQ 22/12/2014 - GW141222 add field;
                                                   Editable=No }
    { 29  ;   ;Benefit Multipler   ;Integer       ;InitValue=1;
                                                   CaptionML=[ENU=Benefit Multipler;
                                                              ENG=Benefit Multipler];
                                                   MinValue=1;
                                                   Description=EC2015.5.01 MQ 22/12/2014 - GW141222 add field }
    { 30  ;   ;Mark Line for Benefit;Boolean      ;OnValidate=BEGIN
                                                                IF (("Applies-to Type" = "Applies-to Type"::"Order Total") OR
                                                                  ("Applies-to Type" = "Applies-to Type"::Voucher)) AND
                                                                  ("Mark Line for Benefit" = TRUE) THEN
                                                                  ERROR(Text000);
                                                              END;

                                                   CaptionML=[ENU=Mark Line for Benefit;
                                                              ENG=Mark Line for Benefit];
                                                   Description=Promotion benefit(s) will be applied where this is set to "Yes" }
    { 49  ;   ;Promotion Released  ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Promotion Header".Released WHERE (No.=FIELD(Promotion No.)));
                                                   CaptionML=[ENU=Promotion Released;
                                                              ENG=Promotion Released];
                                                   Description=flowfield }
    { 100 ;   ;Temp Qualify for Apply To Line;Boolean;
                                                   CaptionML=[ENU=Temp Qualify for Apply To Line;
                                                              ENG=Temp Qualify for Apply To Line] }
    { 101 ;   ;Temp Qualify for Promo. Line;Boolean;
                                                   CaptionML=[ENU=Temp Qualify for Promo. Line;
                                                              ENG=Temp Qualify for Promo. Line] }
  }
  KEYS
  {
    {    ;Promotion No.,Line No.                  ;Clustered=Yes }
    {    ;Temp Qualify for Promo. Line             }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      PromoHeader@1040000 : Record 9021656;
      Text000@1000000006 : TextConst 'ENU=This is not valid.;ENG=This is not valid.';
      Text001@1040004 : TextConst 'ENU=%1 must not be %2;ENG=%1 must not be %2';
      Item@1000000005 : Record 27;
      VoucherScheme@1000000001 : Record 9021659;
      VoucherEntry@1000000000 : Record 9021672;
      Text002@1000000007 : TextConst 'ENU=The Qualify-by Type must be Quantity.;ENG=The Qualify-by Type must be Quantity.';
      PromotionGroup@1000000008 : Record 9021651;
      Text003@1000000009 : TextConst 'ENU=The No. field should be left blank for Order Total.;ENG=The No. field should be left blank for Order Total.';
      PromoQualLine@1000000002 : Record 9021657;
      Text004@1000000003 : TextConst 'ENU=You cannot have a line with Order Total and %1.;ENG=You cannot have a line with Order Total and %1.';
      Text005@1000000004 : TextConst 'ENU=The Qualify-by Type must be Amount.;ENG=The Qualify-by Type must be Amount.';

    PROCEDURE GetPromoHeader@1040003();
    BEGIN
      TESTFIELD("Promotion No.");
      IF "Promotion No." <> PromoHeader."No." THEN
        PromoHeader.GET("Promotion No.");
      IF "Label Code" = '' THEN BEGIN
        PromoHeader.TESTFIELD("Label Code");
        "Label Code" := PromoHeader."Label Code";
      END;
    END;

    PROCEDURE ClearLineDetails@1000000000();
    BEGIN
      Description := '';
      "Qualify-by Type" := "Qualify-by Type"::Quantity;
      "Qualifying Qty." := 0;
      "Qualifying Amount" := 0;
      "Mark Line for Benefit" := FALSE;
      "Promotion Released" := "Promotion Released"::"0";
      "Temp Qualify for Apply To Line" := FALSE;
      "Temp Qualify for Promo. Line" := FALSE;
    END;

    PROCEDURE CheckLineCombinations@1000000001();
    VAR
      TxtItem@1000000000 : TextConst 'ENU=Item;ENG=Item';
      TxtPromotionGroup@1000000001 : TextConst 'ENU=Promotion Group;ENG=Promotion Group';
      TxtDistinctPromoGroupItems@1000000002 : TextConst 'ENU=Distinct Promo Group Items;ENG=Distinct Promo Group Items';
    BEGIN
      MODIFY;
      PromoQualLine.RESET;
      PromoQualLine.SETRANGE("Promotion No.","Promotion No.");
      PromoQualLine.SETRANGE("Applies-to Type","Applies-to Type"::"Order Total");
      IF PromoQualLine.FINDFIRST THEN BEGIN
        PromoQualLine.SETRANGE("Applies-to Type","Applies-to Type"::Item);
        IF PromoQualLine.FINDFIRST THEN
          ERROR(Text004,TxtItem);
        PromoQualLine.SETRANGE("Applies-to Type","Applies-to Type"::"Promotion Group");
        IF PromoQualLine.FINDFIRST THEN
          ERROR(Text004,TxtPromotionGroup);
        //DOC EC2015.5.01 -
        PromoQualLine.SETRANGE("Applies-to Type","Applies-to Type"::"Distinct Promo Group Items");
        IF PromoQualLine.FINDFIRST THEN
          ERROR(Text004,TxtDistinctPromoGroupItems);
        //DOC EC2015.5.01 +
      END;
    END;

    BEGIN
    {
      //DOC EC2009.2.72 MA 13/02/2012 - MA120213  Mod to ensure Item lookup finds specified Item
      //DOC EC2009.2.74 MQ 01/05/2012 - GW120501 Promotion Header from C10 to C20 and put in table relation.
      //DOC EC2009.2.74 MQ 01/05/2012 - Put in table relation on No. so renaming of e.g. Items flows to Qualifying Lines
      //DOC EC2013.3.00 MQ 11/07/2012 - GW120711 Remove table relation for Voucher on No. as was causing an error.
      //DOC EC2013.4.00 MQ 05/11/2013 - GW131105 RTC
      //DOC EC2013.4.62 MQ 23/04/2014 - GW140423 Add Lookup / Drilldown form; Change No. table relation and code; Code in Applies-To Type
      //DOC EC2015.5.01 MQ 22/12/2014 - GW141222 Description from T50 to T100; Add to Applies-to Type option string "Distinct Promo Group Items; Code enhancements and add fields 25, 26 and 29
      //DOC EC2016.6    JH 05/10/2016 - ECom 2016
    }
    END.
  }
}

