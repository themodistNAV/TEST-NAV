OBJECT Codeunit 1560 Workflow Imp. / Exp. Mgt
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      MoreThanOneWorkflowImportErr@1005 : TextConst 'ENU=You cannot import more than one workflow.;ENG=You cannot import more than one workflow.';

    LOCAL PROCEDURE GetWorkflowCodeListFromXml@2(TempBlob@1000 : Record 99008535) WorkflowCodes : Text;
    VAR
      XMLDOMManagement@1003 : Codeunit 6224;
      XmlDocument@1001 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
      XmlNodeList@1004 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeList";
      XmlNode@1005 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      InStream@1002 : InStream;
    BEGIN
      TempBlob.Blob.CREATEINSTREAM(InStream);
      XmlDocument := XmlDocument.XmlDocument;
      XmlDocument.Load(InStream);

      XMLDOMManagement.FindNodes(XmlDocument.DocumentElement,'/Root/Workflow',XmlNodeList);

      FOREACH XmlNode IN XmlNodeList DO BEGIN
        IF WorkflowCodes = '' THEN
          WorkflowCodes := XMLDOMManagement.GetAttributeValue(XmlNode,'Code')
        ELSE
          WorkflowCodes := WorkflowCodes + ',' + XMLDOMManagement.GetAttributeValue(XmlNode,'Code');
      END;
    END;

    PROCEDURE ReplaceWorkflow@4(VAR Workflow@1000 : Record 1501;VAR TempBlob@1009 : Record 99008535);
    VAR
      FromWorkflow@1002 : Record 1501;
      CopyWorkflow@1001 : Report 1510;
      NewWorkflowCodes@1006 : Text;
      TempWorkflowCode@1007 : Text[20];
    BEGIN
      NewWorkflowCodes := GetWorkflowCodeListFromXml(TempBlob);
      IF TrySelectStr(2,NewWorkflowCodes,TempWorkflowCode) THEN
        ERROR(MoreThanOneWorkflowImportErr);

      FromWorkflow.INIT;
      FromWorkflow.Code := COPYSTR(FORMAT(CREATEGUID),1,MAXSTRLEN(Workflow.Code));
      FromWorkflow.ImportFromBlob(TempBlob);

      CopyWorkflow.InitCopyWorkflow(FromWorkflow,Workflow);
      CopyWorkflow.USEREQUESTPAGE(FALSE);
      CopyWorkflow.RUN;

      FromWorkflow.DELETE(TRUE);
    END;

    [TryFunction]
    LOCAL PROCEDURE TrySelectStr@10(Index@1000 : Integer;InputString@1001 : Text;VAR SelectedString@1002 : Text[20]);
    BEGIN
      SelectedString := SELECTSTR(Index,InputString);
    END;

    BEGIN
    END.
  }
}

