OBJECT Page 5832 Capacity Ledger Entries
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[ENU=Capacity Ledger Entries;
               ENG=Capacity Ledger Entries];
    SourceTable=Table5832;
    DataCaptionExpr=GetCaption;
    PageType=List;
    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 41      ;1   ;ActionGroup;
                      CaptionML=[ENU=Ent&ry;
                                 ENG=Ent&ry];
                      Image=Entry }
      { 42      ;2   ;Action    ;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 ENG=Dimensions];
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDimensions;
                               END;
                                }
      { 55      ;2   ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=[ENU=&Value Entries;
                                 ENG=&Value Entries];
                      RunObject=Page 5802;
                      RunPageView=SORTING(Capacity Ledger Entry No.,Entry Type);
                      RunPageLink=Capacity Ledger Entry No.=FIELD(Entry No.);
                      Image=ValueLedger }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 8       ;1   ;Action    ;
                      CaptionML=[ENU=&Navigate;
                                 ENG=&Navigate];
                      Promoted=Yes;
                      Image=Navigate;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 Navigate@1001 : Page 344;
                               BEGIN
                                 IF "Order Type" = "Order Type"::Production THEN
                                   Navigate.SetDoc("Posting Date","Order No.")
                                 ELSE
                                   Navigate.SetDoc("Posting Date",'');
                                 Navigate.RUN;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 6   ;2   ;Field     ;
                SourceExpr="Posting Date" }

    { 3   ;2   ;Field     ;
                SourceExpr="Order Type" }

    { 2   ;2   ;Field     ;
                SourceExpr="Order No." }

    { 19  ;2   ;Field     ;
                SourceExpr="Routing No.";
                Visible=FALSE }

    { 60  ;2   ;Field     ;
                SourceExpr="Routing Reference No.";
                Visible=FALSE }

    { 58  ;2   ;Field     ;
                SourceExpr="Work Center No.";
                Visible=FALSE }

    { 12  ;2   ;Field     ;
                SourceExpr=Type }

    { 14  ;2   ;Field     ;
                SourceExpr="No." }

    { 10  ;2   ;Field     ;
                SourceExpr="Document No.";
                Visible=FALSE }

    { 4   ;2   ;Field     ;
                SourceExpr="Operation No." }

    { 24  ;2   ;Field     ;
                SourceExpr="Item No." }

    { 71  ;2   ;Field     ;
                SourceExpr="Variant Code";
                Visible=FALSE }

    { 16  ;2   ;Field     ;
                SourceExpr=Description }

    { 49  ;2   ;Field     ;
                SourceExpr="Work Shift Code";
                Visible=FALSE }

    { 33  ;2   ;Field     ;
                SourceExpr="Starting Time";
                Visible=FALSE }

    { 35  ;2   ;Field     ;
                SourceExpr="Ending Time";
                Visible=FALSE }

    { 37  ;2   ;Field     ;
                SourceExpr="Concurrent Capacity";
                Visible=FALSE }

    { 20  ;2   ;Field     ;
                SourceExpr="Setup Time";
                Visible=FALSE }

    { 22  ;2   ;Field     ;
                SourceExpr="Run Time";
                Visible=FALSE }

    { 63  ;2   ;Field     ;
                SourceExpr="Stop Time";
                Visible=FALSE }

    { 65  ;2   ;Field     ;
                SourceExpr=Quantity }

    { 26  ;2   ;Field     ;
                SourceExpr="Output Quantity" }

    { 28  ;2   ;Field     ;
                SourceExpr="Scrap Quantity" }

    { 39  ;2   ;Field     ;
                SourceExpr="Direct Cost" }

    { 43  ;2   ;Field     ;
                SourceExpr="Overhead Cost" }

    { 45  ;2   ;Field     ;
                SourceExpr="Direct Cost (ACY)";
                Visible=FALSE }

    { 47  ;2   ;Field     ;
                SourceExpr="Overhead Cost (ACY)";
                Visible=FALSE }

    { 51  ;2   ;Field     ;
                SourceExpr="Global Dimension 1 Code";
                Visible=FALSE }

    { 53  ;2   ;Field     ;
                SourceExpr="Global Dimension 2 Code";
                Visible=FALSE }

    { 67  ;2   ;Field     ;
                SourceExpr="Stop Code";
                Visible=FALSE }

    { 69  ;2   ;Field     ;
                SourceExpr="Scrap Code";
                Visible=FALSE }

    { 9   ;2   ;Field     ;
                SourceExpr="Completely Invoiced";
                Visible=FALSE }

    { 56  ;2   ;Field     ;
                SourceExpr="Entry No." }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Machine Center;ENG=Machine Centre';

    LOCAL PROCEDURE GetCaption@3() : Text[250];
    VAR
      ObjTransl@1000 : Record 377;
      SourceTableName@1002 : Text[100];
      SourceFilter@1001 : Text[200];
      Description@1003 : Text[100];
      WorkCenter@1004 : Record 99000754;
      MachineCenter@1005 : Record 99000758;
      ProdOrder@1006 : Record 5405;
    BEGIN
      Description := '';

      CASE TRUE OF
        GETFILTER("Work Center No.") <> '':
          BEGIN
            SourceTableName := ObjTransl.TranslateObject(ObjTransl."Object Type"::Table,99000754);
            SourceFilter := GETFILTER("Work Center No.");
            IF MAXSTRLEN(WorkCenter."No.") >= STRLEN(SourceFilter) THEN
              IF WorkCenter.GET(SourceFilter) THEN
                Description := WorkCenter.Name;
          END;
        (GETFILTER("No.") <> '') AND (GETFILTER(Type) = Text000):
          BEGIN
            SourceTableName := ObjTransl.TranslateObject(ObjTransl."Object Type"::Table,99000758);
            SourceFilter := GETFILTER("No.");
            IF MAXSTRLEN(MachineCenter."No.") >= STRLEN(SourceFilter) THEN
              IF MachineCenter.GET(SourceFilter) THEN
                Description := MachineCenter.Name;
          END;
        (GETFILTER("Order No.") <> '') AND ("Order Type" = "Order Type"::Production):
          BEGIN
            SourceTableName := ObjTransl.TranslateObject(ObjTransl."Object Type"::Table,5405);
            SourceFilter := GETFILTER("Order No.");
            IF MAXSTRLEN(ProdOrder."No.") >= STRLEN(SourceFilter) THEN
              IF ProdOrder.GET(ProdOrder.Status::Released,SourceFilter) OR
                 ProdOrder.GET(ProdOrder.Status::Finished,SourceFilter)
              THEN BEGIN
                SourceTableName := STRSUBSTNO('%1 %2',ProdOrder.Status,SourceTableName);
                Description := ProdOrder.Description;
              END;
          END;
      END;
      EXIT(STRSUBSTNO('%1 %2 %3',SourceTableName,SourceFilter,Description));
    END;

    BEGIN
    END.
  }
}

