OBJECT Page 1100 Chart of Cost Types
{
  OBJECT-PROPERTIES
  {
    Date=07/09/12;
    Time=12:00:00 PM;
    Version List=NAVW17.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Chart of Cost Types;
               ENG=Chart of Cost Types];
    SourceTable=Table1103;
    PageType=List;
    CardPageID=Cost Type Card;
    RefreshOnActivate=Yes;
    OnAfterGetRecord=BEGIN
                       SetEmphasis;
                       SetIndent;
                     END;

    ActionList=ACTIONS
    {
      { 1       ;0   ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 2       ;1   ;ActionGroup;
                      CaptionML=[ENU=&Cost Type;
                                 ENG=&Cost Type];
                      Image=Costs }
      { 4       ;2   ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=[ENU=Cost E&ntries;
                                 ENG=Cost E&ntries];
                      RunObject=Page 1103;
                      RunPageLink=Cost Type No.=FIELD(No.);
                      Image=CostEntries }
      { 5       ;2   ;Action    ;
                      Name=CorrespondingGLAccounts;
                      CaptionML=[ENU=Corresponding &G/L Accounts;
                                 ENG=Corresponding &G/L Accounts];
                      Image=CompareCosttoCOA;
                      OnAction=VAR
                                 GLAccount@1000 : Record 15;
                               BEGIN
                                 IF "G/L Account Range" <> '' THEN
                                   GLAccount.SETFILTER("No.","G/L Account Range")
                                 ELSE
                                   GLAccount.SETRANGE("No.",'');
                                 IF PAGE.RUNMODAL(PAGE::"Chart of Accounts",GLAccount) = ACTION::OK THEN;
                               END;
                                }
      { 6       ;2   ;Separator  }
      { 7       ;2   ;Action    ;
                      ShortCutKey=F7;
                      CaptionML=[ENU=&Balance;
                                 ENG=&Balance];
                      RunObject=Page 1110;
                      RunPageOnRec=Yes;
                      Image=Balance }
      { 8       ;0   ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 9       ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 ENG=F&unctions];
                      Image=Action }
      { 10      ;2   ;Action    ;
                      Name=IndentCostType;
                      CaptionML=[ENU=I&ndent Cost Types;
                                 ENG=I&ndent Cost Types];
                      Promoted=Yes;
                      Image=IndentChartOfAccounts;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CostAccMgt.ConfirmIndentCostTypes;
                               END;
                                }
      { 11      ;2   ;Action    ;
                      Name=GetCostTypesFromChartOfAccounts;
                      CaptionML=[ENU=Get Cost Types from &Chart of Accounts;
                                 ENG=Get Cost Types from &Chart of Accounts];
                      Image=CopyFromChartOfAccounts;
                      OnAction=BEGIN
                                 CostAccMgt.GetCostTypesFromChartOfAccount;
                               END;
                                }
      { 12      ;2   ;Action    ;
                      Name=RegCostTypeInChartOfCostType;
                      CaptionML=[ENU=&Register Cost Types in Chart of Accounts;
                                 ENG=&Register Cost Types in Chart of Accounts];
                      Image=LinkAccount;
                      OnAction=BEGIN
                                 CostAccMgt.LinkCostTypesToGLAccountsYN;
                               END;
                                }
      { 13      ;1   ;Action    ;
                      CaptionML=[ENU=Cost Registers;
                                 ENG=Cost Registers];
                      RunObject=Page 1104;
                      Promoted=No;
                      Image=GLRegisters;
                      PromotedCategory=Process }
      { 14      ;1   ;Action    ;
                      CaptionML=[ENU=G/L Account;
                                 ENG=G/L Account];
                      RunObject=Page 16;
                      Promoted=Yes;
                      Image=ChartOfAccounts;
                      PromotedCategory=Process }
      { 15      ;0   ;ActionContainer;
                      ActionContainerType=Reports }
      { 17      ;1   ;Action    ;
                      CaptionML=[ENU=Cost Acctg. P/L Statement;
                                 ENG=Cost Acctg. P/L Statement];
                      RunObject=Report 1126;
                      Promoted=Yes;
                      Image=Report;
                      PromotedCategory=Report }
      { 18      ;1   ;Action    ;
                      CaptionML=[ENU=Cost Acctg. P/L Statement per Period;
                                 ENG=Cost Acctg. P/L Statement per Period];
                      RunObject=Report 1123;
                      Promoted=Yes;
                      Image=Report;
                      PromotedCategory=Report }
      { 19      ;1   ;Action    ;
                      CaptionML=[ENU=Cost Acctg. P/L Statement with Budget;
                                 ENG=Cost Acctg. P/L Statement with Budget];
                      RunObject=Report 1133;
                      Promoted=No;
                      Image=Report;
                      PromotedCategory=Report }
      { 20      ;1   ;Action    ;
                      CaptionML=[ENU=Cost Acctg. Analysis;
                                 ENG=Cost Acctg. Analysis];
                      RunObject=Report 1127;
                      Promoted=Yes;
                      Image=Report;
                      PromotedCategory=Report }
      { 22      ;1   ;Action    ;
                      CaptionML=[ENU=Account Details;
                                 ENG=Account Details];
                      RunObject=Report 1125;
                      Promoted=No;
                      Image=Report;
                      PromotedCategory=Report }
    }
  }
  CONTROLS
  {
    { 23  ;0   ;Container ;
                ContainerType=ContentArea }

    { 24  ;1   ;Group     ;
                IndentationColumnName=NameIndent;
                IndentationControls=Name;
                GroupType=Repeater }

    { 25  ;2   ;Field     ;
                SourceExpr="No.";
                Style=Strong;
                StyleExpr=Emphasize }

    { 26  ;2   ;Field     ;
                SourceExpr=Name;
                Style=Strong;
                StyleExpr=Emphasize }

    { 27  ;2   ;Field     ;
                SourceExpr=Type }

    { 28  ;2   ;Field     ;
                SourceExpr=Totaling }

    { 29  ;2   ;Field     ;
                SourceExpr="Cost Classification" }

    { 30  ;2   ;Field     ;
                SourceExpr="G/L Account Range" }

    { 31  ;2   ;Field     ;
                SourceExpr="Net Change" }

    { 32  ;2   ;Field     ;
                SourceExpr="Cost Center Code" }

    { 33  ;2   ;Field     ;
                SourceExpr="Cost Object Code" }

    { 34  ;2   ;Field     ;
                SourceExpr="Combine Entries" }

    { 35  ;2   ;Field     ;
                SourceExpr="Budget Amount" }

    { 36  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr=Balance;
                Visible=FALSE;
                Style=Strong;
                StyleExpr=Emphasize }

    { 37  ;2   ;Field     ;
                SourceExpr=Blocked }

    { 38  ;2   ;Field     ;
                SourceExpr="New Page" }

    { 39  ;2   ;Field     ;
                SourceExpr="Blank Line" }

    { 40  ;2   ;Field     ;
                SourceExpr="Balance to Allocate" }

    { 41  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Balance at Date";
                Visible=FALSE }

  }
  CODE
  {
    VAR
      CostAccMgt@1000 : Codeunit 1100;
      Emphasize@1001 : Boolean INDATASET;
      NameIndent@1003 : Integer INDATASET;

    LOCAL PROCEDURE SetEmphasis@1();
    BEGIN
      Emphasize := Type <> Type::"Cost Type";
    END;

    LOCAL PROCEDURE SetIndent@2();
    BEGIN
      NameIndent := Indentation;
    END;

    BEGIN
    END.
  }
}

