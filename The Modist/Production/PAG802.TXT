OBJECT Page 802 Online Map Address Selector
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Online Map Address Selector;
               ENG=Online Map Address Selector];
    PageType=StandardDialog;
    OnOpenPage=BEGIN
                 OnlineMapSetup.GET;
                 Distance := OnlineMapSetup."Distance In";
                 Route := OnlineMapSetup.Route;
               END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1020000;1;Group     ;
                CaptionML=[ENU=General;
                           ENG=General] }

    { 1020006;2;Field     ;
                Name=LookupSelection;
                CaptionML=[ENU=Table Selection;
                           ENG=Table Selection];
                OptionCaptionML=[ENU=" ,Bank,Contact,Customer,Employee,Job,Location,Resource,Vendor,Ship-to Address,Order Address";
                                 ENG=" ,Bank,Contact,Customer,Employee,Job,Location,Resource,Vendor,Ship-to Address,Order Address"];
                SourceExpr=LookupSelection;
                OnValidate=BEGIN
                             LookupSelectionOnAfterValidate;
                           END;
                            }

    { 1020001;2;Field     ;
                Name=LookupCode;
                CaptionML=[ENU=Lookup Code;
                           ENG=Lookup Code];
                SourceExpr=LookupCode;
                OnValidate=BEGIN
                             SelectedRecPosition := LoadLocationLookup(SelectedTableNo,LookupCode,FALSE);
                           END;

                OnLookup=BEGIN
                           SelectedRecPosition := LoadLocationLookup(SelectedTableNo,LookupCode,TRUE);
                         END;
                          }

    { 1   ;2   ;Field     ;
                CaptionML=[ENU=Distance In;
                           ENG=Distance In];
                OptionCaptionML=[ENU=Miles,Kilometers;
                                 ENG=Miles,Kilometers];
                SourceExpr=Distance }

    { 3   ;2   ;Field     ;
                CaptionML=[ENU=Route;
                           ENG=Route];
                OptionCaptionML=[ENU=Quickest,Shortest;
                                 ENG=Quickest,Shortest];
                SourceExpr=Route }

  }
  CODE
  {
    VAR
      OnlineMapSetup@1002 : Record 800;
      SelectedRecPosition@1004 : Text[1000];
      LookupCode@1020001 : Code[20];
      LookupSelection@1020003 : ' ,Bank,Contact,Customer,Employee,Job,Location,Resource,Vendor,Ship-to Address,Order Address';
      Text001@1020007 : TextConst 'ENU=The selection that was chosen is not valid.;ENG=The selection that was chosen is not valid.';
      Text003@1020004 : TextConst 'ENU=The value %1 from Table ID %2 could not be found.;ENG=The value %1 from Table ID %2 could not be found.';
      Distance@1000 : 'Miles,Kilometers';
      Route@1001 : 'Quickest,Shortest';
      SelectedTableNo@1007 : Integer;
      Text004@1009 : TextConst 'ENU=Table No. %1 is not set up.;ENG=Table No. %1 is not set up.';

    PROCEDURE GetTableNo@1020001() : Integer;
    BEGIN
      EXIT(SelectedTableNo);
    END;

    PROCEDURE GetRecPosition@1020002() : Text[1000];
    BEGIN
      EXIT(SelectedRecPosition);
    END;

    PROCEDURE SetTableNo@1020000();
    BEGIN
      CASE LookupSelection OF
        LookupSelection::" ":
          SelectedTableNo := 0;
        LookupSelection::Bank:
          SelectedTableNo := DATABASE::"Bank Account";
        LookupSelection::Contact:
          SelectedTableNo := DATABASE::Contact;
        LookupSelection::Customer:
          SelectedTableNo := DATABASE::Customer;
        LookupSelection::Employee:
          SelectedTableNo := DATABASE::Employee;
        LookupSelection::Job:
          SelectedTableNo := DATABASE::Job;
        LookupSelection::Location:
          SelectedTableNo := DATABASE::Location;
        LookupSelection::Resource:
          SelectedTableNo := DATABASE::Resource;
        LookupSelection::Vendor:
          SelectedTableNo := DATABASE::Vendor;
        LookupSelection::"Ship-to Address":
          SelectedTableNo := DATABASE::"Ship-to Address";
        LookupSelection::"Order Address":
          SelectedTableNo := DATABASE::"Order Address";
        ELSE
          ERROR(Text001);
      END;
    END;

    LOCAL PROCEDURE LoadLocationLookup@1020012(LoadTableNo@1020011 : Integer;VAR LookupCode@1020013 : Code[20];Lookup@1020014 : Boolean) : Text[1000];
    BEGIN
      CASE LoadTableNo OF
        DATABASE::"Bank Account":
          EXIT(LoadBankAccount(LookupCode,Lookup));
        DATABASE::Contact:
          EXIT(LoadContact(LookupCode,Lookup));
        DATABASE::Customer:
          EXIT(LoadCustomer(LookupCode,Lookup));
        DATABASE::Employee:
          EXIT(LoadEmployee(LookupCode,Lookup));
        DATABASE::Job:
          EXIT(LoadJob(LookupCode,Lookup));
        DATABASE::Location:
          EXIT(LoadLocation(LookupCode,Lookup));
        DATABASE::Resource:
          EXIT(LoadResource(LookupCode,Lookup));
        DATABASE::Vendor:
          EXIT(LoadVendor(LookupCode,Lookup));
        DATABASE::"Ship-to Address":
          EXIT(LoadShipTo(LookupCode,Lookup));
        DATABASE::"Order Address":
          EXIT(LoadOrderAddress(LookupCode,Lookup));
        ELSE
          ERROR(STRSUBSTNO(Text004,FORMAT(LoadTableNo)));
      END;
    END;

    LOCAL PROCEDURE LoadBankAccount@1020011(VAR LookUpCode@1020001 : Code[20];LookUp@1020000 : Boolean) : Text[1000];
    VAR
      BankAccount@1020002 : Record 270;
      Response@1020003 : Boolean;
    BEGIN
      IF LookUp THEN
        Response := PAGE.RUNMODAL(PAGE::"Bank Account List",BankAccount) = ACTION::LookupOK
      ELSE
        Response := BankAccount.GET(LookUpCode);

      IF Response THEN BEGIN
        LookUpCode := BankAccount."No.";
        EXIT(BankAccount.GETPOSITION);
      END;
      ERROR(Text003,LookUpCode,DATABASE::"Bank Account");
    END;

    LOCAL PROCEDURE LoadContact@1020010(VAR LookUpCode@1020000 : Code[20];LookUp@1020001 : Boolean) : Text[1000];
    VAR
      Contact@1020002 : Record 5050;
      Response@1020003 : Boolean;
    BEGIN
      IF LookUp THEN
        Response := PAGE.RUNMODAL(PAGE::"Contact List",Contact) = ACTION::LookupOK
      ELSE
        Response := Contact.GET(LookUpCode);

      IF Response THEN BEGIN
        LookUpCode := Contact."No.";
        EXIT(Contact.GETPOSITION);
      END;
      ERROR(Text003,LookUpCode,DATABASE::Contact);
    END;

    LOCAL PROCEDURE LoadCustomer@1020009(VAR LookUpCode@1020001 : Code[20];LookUp@1020000 : Boolean) : Text[1000];
    VAR
      Customer@1020002 : Record 18;
      Response@1020003 : Boolean;
    BEGIN
      IF LookUp THEN
        Response := PAGE.RUNMODAL(PAGE::"Customer List",Customer) = ACTION::LookupOK
      ELSE
        Response := Customer.GET(LookUpCode);

      IF Response THEN BEGIN
        LookUpCode := Customer."No.";
        EXIT(Customer.GETPOSITION);
      END;
      ERROR(Text003,LookUpCode,DATABASE::Customer);
    END;

    LOCAL PROCEDURE LoadEmployee@1020004(VAR LookUpCode@1020001 : Code[20];LookUp@1020000 : Boolean) : Text[1000];
    VAR
      Employee@1020002 : Record 5200;
      Response@1020003 : Boolean;
    BEGIN
      IF LookUp THEN
        Response := PAGE.RUNMODAL(PAGE::"Employee List",Employee) = ACTION::LookupOK
      ELSE
        Response := Employee.GET(LookUpCode);

      IF Response THEN BEGIN
        LookUpCode := Employee."No.";
        EXIT(Employee.GETPOSITION);
      END;
      ERROR(Text003,LookUpCode,DATABASE::Employee);
    END;

    LOCAL PROCEDURE LoadJob@1020006(VAR LookUpCode@1020001 : Code[20];LookUp@1020000 : Boolean) : Text[1000];
    VAR
      Job@1020002 : Record 167;
      Response@1020003 : Boolean;
    BEGIN
      IF LookUp THEN
        Response := PAGE.RUNMODAL(PAGE::"Job List",Job) = ACTION::LookupOK
      ELSE
        Response := Job.GET(LookUpCode);

      IF Response THEN BEGIN
        LookUpCode := Job."No.";
        EXIT(Job.GETPOSITION);
      END;
      ERROR(Text003,LookUpCode,DATABASE::Job);
    END;

    LOCAL PROCEDURE LoadLocation@1020007(VAR LookUpCode@1020001 : Code[20];LookUp@1020000 : Boolean) : Text[1000];
    VAR
      Location@1020002 : Record 14;
      Response@1020003 : Boolean;
    BEGIN
      IF LookUp THEN
        Response := PAGE.RUNMODAL(PAGE::"Location List",Location) = ACTION::LookupOK
      ELSE
        Response := Location.GET(LookUpCode);

      IF Response THEN BEGIN
        LookUpCode := Location.Code;
        EXIT(Location.GETPOSITION);
      END;
      ERROR(Text003,LookUpCode,DATABASE::Location);
    END;

    LOCAL PROCEDURE LoadResource@1020008(VAR LookUpCode@1020001 : Code[20];LookUp@1020000 : Boolean) : Text[1000];
    VAR
      Resource@1020002 : Record 156;
      Response@1020003 : Boolean;
    BEGIN
      IF LookUp THEN
        Response := PAGE.RUNMODAL(PAGE::"Resource List",Resource) = ACTION::LookupOK
      ELSE
        Response := Resource.GET(LookUpCode);

      IF Response THEN BEGIN
        LookUpCode := Resource."No.";
        EXIT(Resource.GETPOSITION);
      END;
      ERROR(Text003,LookUpCode,DATABASE::Resource);
    END;

    LOCAL PROCEDURE LoadVendor@1020015(VAR LookUpCode@1020001 : Code[20];LookUp@1020000 : Boolean) : Text[1000];
    VAR
      Vendor@1020002 : Record 23;
      Response@1020003 : Boolean;
    BEGIN
      IF LookUp THEN
        Response := PAGE.RUNMODAL(PAGE::"Vendor List",Vendor) = ACTION::LookupOK
      ELSE
        Response := Vendor.GET(LookUpCode);

      IF Response THEN BEGIN
        LookUpCode := Vendor."No.";
        EXIT(Vendor.GETPOSITION);
      END;
      ERROR(Text003,LookUpCode,DATABASE::Vendor);
    END;

    LOCAL PROCEDURE LoadShipTo@2(VAR LookUpCode@1020001 : Code[20];LookUp@1020000 : Boolean) : Text[1000];
    VAR
      ShipToAddress@1020002 : Record 222;
      Response@1020003 : Boolean;
    BEGIN
      IF LookUp THEN
        Response := PAGE.RUNMODAL(PAGE::"Ship-to Address List",ShipToAddress) = ACTION::LookupOK
      ELSE
        Response := ShipToAddress.GET(LookUpCode);

      IF Response THEN BEGIN
        LookUpCode := ShipToAddress.Code;
        EXIT(ShipToAddress.GETPOSITION);
      END;
      ERROR(Text003,LookUpCode,DATABASE::"Ship-to Address");
    END;

    LOCAL PROCEDURE LoadOrderAddress@4(VAR LookupCode@1000 : Code[20];LookUp@1001 : Boolean) : Text[1000];
    VAR
      OrderAddress@1003 : Record 224;
      Response@1002 : Boolean;
    BEGIN
      IF LookUp THEN
        Response := PAGE.RUNMODAL(PAGE::"Order Address List",OrderAddress) = ACTION::LookupOK
      ELSE
        Response := OrderAddress.GET(LookupCode);

      IF Response THEN BEGIN
        LookupCode := OrderAddress.Code;
        EXIT(OrderAddress.GETPOSITION);
      END;
      ERROR(Text003,LookupCode,DATABASE::"Order Address");
    END;

    PROCEDURE Getdefaults@1(VAR ActualDistance@1001 : 'Miles,Kilometers';VAR ActualRoute@1000 : 'Quickest,Shortest');
    BEGIN
      ActualDistance := Distance;
      ActualRoute := Route;
    END;

    LOCAL PROCEDURE LookupSelectionOnAfterValidate@19004184();
    BEGIN
      SetTableNo;
    END;

    BEGIN
    END.
  }
}

