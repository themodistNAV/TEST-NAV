OBJECT Table 9086971 nF. Text Buffer
{
  OBJECT-PROPERTIES
  {
    Date=30/10/16;
    Time=12:16:55 PM;
    Version List=NF2016.17;
  }
  PROPERTIES
  {
    CaptionML=[ENU=nForcement Text Buffer;
               ENG=nForcement Text Buffer];
  }
  FIELDS
  {
    { 1   ;   ;ID                  ;Integer       ;CaptionML=[ENU=ID;
                                                              ENG=ID] }
    { 10  ;   ;Text                ;Text250       ;CaptionML=[ENU=Text;
                                                              ENG=Text] }
    { 20  ;   ;Full Text           ;BLOB          ;CaptionML=[ENU=Full Text;
                                                              ENG=Full Text];
                                                   SubType=Memo }
  }
  KEYS
  {
    {    ;ID                                      ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      NfBlobToolkit@1000000001 : Codeunit 9086979;
      LastId@1000000000 : Integer;

    PROCEDURE GetText@1000000001() : Text;
    BEGIN
      ///<summary>Returning text</summary>
      ///<returns>The text</returns>

      EXIT(Rec.Text);
    END;

    PROCEDURE GetFullText@1000000004() : Text;
    VAR
      lBlob@1000000000 : Record 99008535;
    BEGIN
      ///<summary>Returning full text</summary>
      ///<returns>The text</returns>

      Rec.GetFullTextBlob(lBlob);
      EXIT(NfBlobToolkit.BlobToText(lBlob));
    END;

    PROCEDURE GetFullTextBlob@1000000005(VAR pBlob@1000000000 : Record 99008535);
    BEGIN
      ///<summary>Returning full text BLOB</summary>
      ///<param name="pBlob">Target BLOB</param>

      Rec.CALCFIELDS("Full Text");
      pBlob.Blob := Rec."Full Text";
    END;

    PROCEDURE SetText@1000000000(pText@1000000000 : Text);
    VAR
      lBlob@1000000001 : Record 99008535;
    BEGIN
      ///<summary>Setting text split into a number of fields</summary>
      ///<param name="pText">The text</param>

      Rec.Text := COPYSTR(pText, 1, 250);
      NfBlobToolkit.TextToBlob(pText, lBlob);
      Rec."Full Text" := lBlob.Blob;
    END;

    PROCEDURE Add@1000000002(pText@1000000000 : Text);
    BEGIN
      ///<summary>Adding another text using the last ID incremented automatically</summary>
      ///<param name="pText">The text</param>

      Rec.ID := LastId;
      Rec.SetText(pText);
      Rec.INSERT();

      LastId += 1;
    END;

    PROCEDURE AddAdvanced@1000000003(pId@1000000001 : Integer;pText@1000000000 : Text);
    BEGIN
      ///<summary>Adding another text with given ID</summary>
      ///<param name="pId">The ID</param>
      ///<param name="pText">The text</param>

      Rec.ID := pId;
      Rec.SetText(pText);
      Rec.INSERT();
    END;

    BEGIN
    {
      ///<summary>nForcement text buffer table used for any in-memory text manipulation</summary>
      ///<change version="NF2016.17" initials="JH" date="2016-10-09">Created</change>
    }
    END.
  }
}

