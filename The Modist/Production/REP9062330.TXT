OBJECT Report 9062330 Add NAV User
{
  OBJECT-PROPERTIES
  {
    Date=10/09/15;
    Time=[ 2:24:17 PM];
    Version List=NA2016.10;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Add NAV User;
               ENG=Add NAV User];
    ProcessingOnly=Yes;
    OnInitReport=BEGIN
                   Ok := FALSE;
                   NablementUserManagement.DefaultRelationshipsOnOff(TRUE, FALSE, Relationships);
                   OpenUserCardAfter := TRUE;
                   UpdateShortCodeText();
                 END;

    OnPreReport=BEGIN
                  Ok := TRUE;
                END;

  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1000000000;;Container;
                  ContainerType=ContentArea }

      { 1000000001;1;Group  ;
                  Name=GeneralGroup;
                  CaptionML=[ENU=General;
                             ENG=General];
                  GroupType=Group }

      { 1000000002;2;Field  ;
                  Name=UserNameField;
                  CaptionML=[ENU=User Name;
                             ENG=User ID];
                  SourceExpr=UserName;
                  OnValidate=BEGIN
                               UserNameValidate();
                             END;

                  OnLookup=BEGIN
                             UserNameLookup();
                           END;
                            }

      { 1000000013;2;Group  ;
                  Name=ShortCodeGroup;
                  CaptionML=[ENU=Short Code;
                             ENG=Short Code];
                  GroupType=Group }

      { 1000000011;3;Field  ;
                  Name=ShortCodeTextField;
                  CaptionML=[ENU=Short Code Text;
                             ENG=Short Code Text];
                  SourceExpr=ShortCodeText;
                  Enabled=ShortCodeNotUnique;
                  Editable=FALSE;
                  OnDrillDown=BEGIN
                                ShortCode := NablementUserManagement.ShortCodeToUniqueShortCode(ShortCode, '', TRUE);
                              END;

                  ShowCaption=No }

      { 1000000012;3;Field  ;
                  Name=ShortCodeField;
                  CaptionML=[ENU=Short Code;
                             ENG=Short Code];
                  SourceExpr=ShortCode;
                  OnValidate=BEGIN
                               ShortCodeValidate();
                             END;
                              }

      { 1000000010;1;Group  ;
                  Name=RelationshipsCreationGroup;
                  CaptionML=[ENU=Relationships Creation;
                             ENG=Relationships Creation];
                  GroupType=Group }

      { 1000000009;2;Field  ;
                  Name=CreateContactField;
                  CaptionML=ENU=Create Contact;
                  SourceExpr=Relationships[NablementUser.Relationship::Contact] }

      { 1000000008;2;Field  ;
                  Name=CreateSalespersonPurchaserField;
                  CaptionML=ENU=Create Salesperson/Purchaser;
                  SourceExpr=Relationships[NablementUser.Relationship::"Salesperson/Purchaser"] }

      { 1000000007;2;Field  ;
                  Name=CreateVendorField;
                  CaptionML=ENU=Create Vendor;
                  SourceExpr=Relationships[NablementUser.Relationship::Vendor] }

      { 1000000006;2;Field  ;
                  Name=CreateResource;
                  CaptionML=ENU=Create Resource;
                  SourceExpr=Relationships[NablementUser.Relationship::Resource] }

      { 1000000005;2;Field  ;
                  Name=CreateEmployee;
                  CaptionML=ENU=Create Employee;
                  SourceExpr=Relationships[NablementUser.Relationship::Employee] }

      { 1000000004;2;Field  ;
                  Name=CreateAllField;
                  CaptionML=[ENU=Create All;
                             ENG=Create All];
                  SourceExpr=tCreateAll;
                  Editable=FALSE;
                  OnDrillDown=BEGIN
                                CreateAllNone(TRUE);
                              END;

                  ShowCaption=No }

      { 1000000003;2;Field  ;
                  Name=CreateNoneField;
                  CaptionML=[ENU=Create None;
                             ENG=Create None];
                  SourceExpr=tCreateNone;
                  Editable=FALSE;
                  OnDrillDown=BEGIN
                                CreateAllNone(FALSE);
                              END;

                  ShowCaption=No }

      { 1000000015;1;Group  ;
                  Name=OptionsGroup;
                  CaptionML=[ENU=Options;
                             ENG=Options];
                  GroupType=Group }

      { 1000000014;2;Field  ;
                  Name=OpenUserCardAfterField;
                  CaptionML=[ENU=Open User Card After;
                             ENG=Open User Card After];
                  SourceExpr=OpenUserCardAfter }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      NablementUser@1000000004 : Record 9062729;
      User@1000000007 : Record 2000000120;
      NablementUserManagement@1000000003 : Codeunit 9062255;
      Ok@1000000001 : Boolean;
      UserName@1000000000 : Code[50];
      ShortCode@1000000011 : Code[10];
      ShortCodeNotUnique@1000000010 : Boolean INDATASET;
      ShortCodeText@1000000009 : Text;
      Relationships@1000000002 : ARRAY [20] OF Boolean;
      tCreateAll@1000000006 : TextConst 'ENU=Create All;ENG=Create All';
      tCreateNone@1000000005 : TextConst 'ENU=Create None;ENG=Create None';
      tUnknownUser@1000000008 : TextConst 'ENU=Unknown user: "%1".;ENG=Unknown user: "%1".';
      tPleaseEnterShortCode@1000000014 : TextConst 'ENU=Please enter the Short Code.;ENG=Please enter the Short Code.';
      tMakeShortCodeUnique@1000000013 : TextConst 'ENU=Make the Short Code unique;ENG=Make the Short Code unique';
      tShortCodeIsUnique@1000000012 : TextConst 'ENU=The Short Code is unique.;ENG=The Short Code is unique.';
      OpenUserCardAfter@1000000015 : Boolean;

    PROCEDURE GetOk@1000000000() : Boolean;
    BEGIN
      EXIT(Ok);
    END;

    PROCEDURE GetUserSecurityId@1000000003() : GUID;
    BEGIN
      EXIT(User."User Security ID");
    END;

    PROCEDURE GetShortCode@1000000002() : Code[10];
    BEGIN
      EXIT(ShortCode);
    END;

    PROCEDURE GetRelationships@1000000001(VAR pRelationships@1000000000 : ARRAY [20] OF Boolean);
    BEGIN
      COPYARRAY(pRelationships, Relationships, 1);
    END;

    PROCEDURE GetOpenUserCardAfter@1000000005() : Boolean;
    BEGIN
      EXIT(OpenUserCardAfter);
    END;

    LOCAL PROCEDURE ShortCodeValidate@1000000008();
    BEGIN
      ShortCodeNotUnique := ((ShortCode <> '') AND ( NOT (NablementUserManagement.ShortCodeIsUnique(ShortCode, ''))));
      UpdateShortCodeText();
    END;

    LOCAL PROCEDURE UpdateShortCodeText@1000000004();
    BEGIN
      IF (ShortCode = '') THEN
        ShortCodeText := tPleaseEnterShortCode
      ELSE IF (ShortCodeNotUnique) THEN
        ShortCodeText := tMakeShortCodeUnique
      ELSE
        ShortCodeText := tShortCodeIsUnique;
    END;

    LOCAL PROCEDURE CreateAllNone@1000000011(pCreate@1000000000 : Boolean);
    BEGIN
      RequestOptionsPage.UPDATE(TRUE);
      NablementUserManagement.AllRelationshipsOnOff(pCreate, FALSE, Relationships);
      RequestOptionsPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE UserNameValidate@1000000006();
    VAR
      lSearch@1000000000 : ARRAY [3] OF Code[100];
      lSearchIdx@1000000001 : Integer;
      lFound@1000000002 : Boolean;
    BEGIN
      IF (UserName <> '') THEN
      BEGIN
        lSearch[1] := UserName;
        lSearch[2] := UserName + '*';
        lSearch[3] := '*' + UserName + '*';

        lFound := FALSE;
        FOR lSearchIdx := 1 TO ARRAYLEN(lSearch) DO
        BEGIN
          User.RESET();
          User.SETCURRENTKEY("User Name");
          User.SETFILTER("User Name", lSearch[lSearchIdx]);
          lFound := User.FINDFIRST();
          IF (lFound) THEN
            lSearchIdx := ARRAYLEN(lSearch);
        END;

        IF ( NOT (lFound)) THEN
          ERROR(tUnknownUser, UserName);

        UserName := User."User Name";
      END
      ELSE
        CLEAR(User);
      ShortCode := NablementUserManagement.UserIdToShortCode(UserName);
      UpdateShortCodeText();
    END;

    LOCAL PROCEDURE UserNameLookup@1000000007() : Boolean;
    VAR
      lResult@1000000000 : Boolean;
    BEGIN
      User.RESET();
      User.SETCURRENTKEY("User Name");
      IF (UserName <> '') THEN
      BEGIN
        User.SETRANGE("User Name", UserName);
        IF (User.FINDFIRST()) THEN;
        User.SETRANGE("User Name");
      END;
      IF (PAGE.RUNMODAL(PAGE::Users, User) = ACTION::LookupOK) THEN
      BEGIN
        UserName := User."User Name";
        UpdateShortCodeText();
        lResult := TRUE;
      END;
      ShortCode := NablementUserManagement.UserIdToShortCode(UserName);
      EXIT(lResult);
    END;

    BEGIN
    {
      //DOC NA2016.10 JH 09/09/2015 - Created
    }
    END.
  }
  RDLDATA
  {
  }
}

