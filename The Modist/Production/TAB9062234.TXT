OBJECT Table 9062234 Web View Link
{
  OBJECT-PROPERTIES
  {
    Date=14/07/16;
    Time=12:00:00 PM;
    Version List=NA2016.16;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               Rec.TESTFIELD(Code);
             END;

    CaptionML=[ENU=Web View Link;
               ENG=Web View Link];
    LookupPageID=Page9062255;
    DrillDownPageID=Page9062255;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code20        ;OnValidate=BEGIN
                                                                TnpToolkit.CodeToName(Rec.Code, Rec.Description);
                                                                Rec.VALIDATE(Description);
                                                              END;

                                                   CaptionML=[ENU=Code;
                                                              ENG=Code] }
    { 2   ;   ;Description         ;Text100       ;CaptionML=[ENU=Description;
                                                              ENG=Description] }
    { 3   ;   ;URL                 ;Text250       ;CaptionML=[ENU=URL;
                                                              ENG=URL] }
    { 4   ;   ;Parameter 1         ;Text250       ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Parameter 1;
                                                              ENG=Parameter 1] }
    { 5   ;   ;Parameter 2         ;Text250       ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Parameter 2;
                                                              ENG=Parameter 2] }
    { 6   ;   ;Parameter 3         ;Text250       ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Parameter 3;
                                                              ENG=Parameter 3] }
    { 7   ;   ;Parameter 4         ;Text250       ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Parameter 4;
                                                              ENG=Parameter 4] }
    { 100 ;   ;Dashboard           ;Boolean       ;CaptionML=[ENU=Dashboard;
                                                              ENG=Dashboard] }
    { 101 ;   ;Local File          ;Boolean       ;CaptionML=[ENU=Local File;
                                                              ENG=Local File] }
    { 200 ;   ;Jet Report ID       ;Integer       ;TableRelation="Jet Report Header".ID;
                                                   CaptionML=[ENU=Jet Report ID;
                                                              ENG=Jet Report ID] }
    { 201 ;   ;Jet Report Description;Text100     ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Jet Report Header".Description WHERE (ID=FIELD(Jet Report ID)));
                                                   CaptionML=[ENU=Jet Report Description;
                                                              ENG=Jet Report Description];
                                                   Editable=No }
    { 202 ;   ;Jet Report Parameter 1;Text50      ;TableRelation="Jet Report Parameter".Name WHERE (Header ID=FIELD(Jet Report ID));
                                                   CaptionML=[ENU=Jet Report Parameter 1;
                                                              ENG=Jet Report Parameter 1] }
    { 203 ;   ;Jet Report Parameter 2;Text50      ;TableRelation="Jet Report Parameter".Name WHERE (Header ID=FIELD(Jet Report ID));
                                                   CaptionML=[ENU=Jet Report Parameter 2;
                                                              ENG=Jet Report Parameter 2] }
    { 204 ;   ;Jet Report Parameter 3;Text50      ;TableRelation="Jet Report Parameter".Name WHERE (Header ID=FIELD(Jet Report ID));
                                                   CaptionML=[ENU=Jet Report Parameter 3;
                                                              ENG=Jet Report Parameter 3] }
    { 205 ;   ;Jet Report Parameter 4;Text50      ;TableRelation="Jet Report Parameter".Name WHERE (Header ID=FIELD(Jet Report ID));
                                                   CaptionML=[ENU=Jet Report Parameter 4;
                                                              ENG=Jet Report Parameter 4] }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      String@1000000000 : Codeunit 9062236;
      TNLUtils@1000000005 : Codeunit 9062229;
      TnpToolkit@1000000006 : Codeunit 9062230;

    PROCEDURE GetCountOfParameters@1000000009() : Integer;
    BEGIN
      //DOC NA2015.4 - Returning number of parameters
      //  <- The number

      EXIT(4);
    END;

    PROCEDURE GetParameters@1000000003(VAR pParameters@1000000000 : ARRAY [4] OF Text);
    VAR
      lCount@1000000002 : Integer;
      lIndex@1000000001 : Integer;
    BEGIN
      //DOC NA2015.4 - Getting parameters
      //  <> pParameters: Target array of parameters

      lCount := GetCountOfParameters();

      Rec.FILTERGROUP(4);
      pParameters[1] := Rec.GETFILTER("Parameter 1");
      pParameters[2] := Rec.GETFILTER("Parameter 2");
      pParameters[3] := Rec.GETFILTER("Parameter 3");
      pParameters[4] := Rec.GETFILTER("Parameter 4");
      Rec.FILTERGROUP(0);

      FOR lIndex := 1 TO lCount DO
      BEGIN
        pParameters[lIndex] := DELCHR(pParameters[lIndex], '<>', '''');
        pParameters[lIndex] := DELCHR(pParameters[lIndex], '<>', ' ');
      END;
    END;

    PROCEDURE SetParameters@1000000004(pParameters@1000000000 : ARRAY [4] OF Text);
    BEGIN
      //DOC NA2015.4 - Setting parameters
      //  -> pParameter: Array of parameters

      Rec.FILTERGROUP(4);
      IF (pParameters[1] <> '') THEN
        Rec.SETFILTER("Parameter 1", pParameters[1])
      ELSE
        Rec.SETRANGE("Parameter 1");
      IF (pParameters[2] <> '') THEN
        Rec.SETFILTER("Parameter 2", pParameters[2])
      ELSE
        Rec.SETRANGE("Parameter 2");
      IF (pParameters[3] <> '') THEN
        Rec.SETFILTER("Parameter 3", pParameters[3])
      ELSE
        Rec.SETRANGE("Parameter 3");
      IF (pParameters[4] <> '') THEN
        Rec.SETFILTER("Parameter 4", pParameters[4])
      ELSE
        Rec.SETRANGE("Parameter 4");
      Rec.FILTERGROUP(0);
    END;

    PROCEDURE ClearParameters@1000000006();
    BEGIN
      //DOC NA2015.4 - Clearing parameters

      Rec.FILTERGROUP(4);
      Rec.SETRANGE("Parameter 1");
      Rec.SETRANGE("Parameter 2");
      Rec.SETRANGE("Parameter 3");
      Rec.SETRANGE("Parameter 4");
      Rec.FILTERGROUP(0);
    END;

    PROCEDURE AreParametersUsedInUrl@1000000001() : Boolean;
    VAR
      lParametersInUrl@1000000000 : ARRAY [4] OF Boolean;
    BEGIN
      //DOC NA2016.16 - Returning if any parameters are used in the URL
      //  <- The response

      GetParametersInUrl(lParametersInUrl);
      EXIT((lParametersInUrl[1]) OR (lParametersInUrl[2]) OR (lParametersInUrl[3]) OR (lParametersInUrl[4]));
    END;

    PROCEDURE GetParametersInUrl@1000000005(VAR pParametersInUrl@1000000000 : ARRAY [4] OF Boolean);
    VAR
      lCount@1000000002 : Integer;
      lIndex@1000000001 : Integer;
    BEGIN
      //DOC NA2016.16 - Returning if parameters are used in the URL
      //  <> pParametersInUrl: Target array of flags

      CLEAR(pParametersInUrl);

      lCount := GetCountOfParameters();
      FOR lIndex := 1 TO lCount DO
      BEGIN
        pParametersInUrl[lIndex] := (STRPOS(Rec.URL, STRSUBSTNO('{%1}', lIndex)) > 0);
        IF ( NOT (pParametersInUrl[lIndex])) THEN
          pParametersInUrl[lIndex] := (STRPOS(Rec.URL, STRSUBSTNO('ª%1', lIndex)) > 0);
      END;
    END;

    PROCEDURE GetParametersProvided@1000000007(VAR pParametersProvided@1000000000 : ARRAY [4] OF Boolean);
    VAR
      lParameters@1000000003 : ARRAY [4] OF Text;
      lCount@1000000002 : Integer;
      lIndex@1000000001 : Integer;
    BEGIN
      //DOC NA2016.16 - Returning if parameters have been provided
      //  <> pParametersProvided: Target flags

      GetParameters(lParameters);
      GetParametersProvidedInternal(lParameters, pParametersProvided);
    END;

    LOCAL PROCEDURE GetParametersProvidedInternal@1000000010(pParameters@1000000004 : ARRAY [4] OF Text;VAR pParametersProvided@1000000000 : ARRAY [4] OF Boolean);
    VAR
      lCount@1000000002 : Integer;
      lIndex@1000000001 : Integer;
    BEGIN
      //DOC NA2016.16 - Returning if parameters have been provided (internal version)
      //  -> pParameters: Array of parameters
      //  <> pParametersProvided: Target flags

      CLEAR(pParametersProvided);

      lCount := GetCountOfParameters();
      FOR lIndex := 1 TO lCount DO
        pParametersProvided[lIndex] := (pParameters[lIndex] <> '');
    END;

    PROCEDURE GetUrl@1000000000() : Text;
    VAR
      lUrl@1000000002 : Text;
      lParameters@1000000000 : ARRAY [4] OF Text[250];
      lParametersInUrl@1000000005 : ARRAY [4] OF Boolean;
      lParametersProvided@1000000003 : ARRAY [4] OF Boolean;
      lCount@1000000004 : Integer;
      lIndex@1000000001 : Integer;
    BEGIN
      //DOC NA2016.16 - Returning URL complemented by parameters
      //  <- The URL

      lCount := GetCountOfParameters();
      GetParameters(lParameters);
      GetParametersInUrl(lParametersInUrl);
      GetParametersProvidedInternal(lParameters, lParametersProvided);

      lUrl := Rec.URL;

      FOR lIndex := 1 TO lCount DO
        IF (lParametersInUrl[lIndex]) THEN
          IF ( NOT (lParametersProvided[lIndex])) THEN
          BEGIN
            lUrl := '';
            lIndex := lCount;
          END
          ELSE
          BEGIN
            lUrl := String.ReplaceAll(lUrl, STRSUBSTNO('{%1}', lIndex), lParameters[lIndex]);
            lUrl := String.ReplaceAll(lUrl, STRSUBSTNO('ª%1', lIndex), lParameters[lIndex]);
          END;

      lUrl := DELCHR(lUrl, '<>', '''');

      EXIT(lUrl);
    END;

    BEGIN
    {
      //DOC NA2015.1  JH 11/12/2012 - Migrated to 2013
      //DOC NA2015.3  JH 06/08/2014 - Fixes
      //DOC NA2015.4  JH 06/02/2015 - Upgraded to 2015, fixes and amendments
      //DOC NA2016.4  JH 27/08/2015 - Upgraded to 2016
      //DOC NA2016.12 JH 28/01/2016 - New string codeunit
      //DOC NA2016.16 JH 07/07/2016 - Web view
      //DOC NA2016.16 JH 13/07/2016 - Fixes
    }
    END.
  }
}

