OBJECT Table 9021702 Web Attribute Value
{
  OBJECT-PROPERTIES
  {
    Date=13/07/16;
    Time=[ 1:50:09 PM];
    Version List=EC2016.6;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               DateTimeInsertedModified := CURRENTDATETIME;

               //DOC EC2013.3.70 "Sync Log No." := SyncMgt.InsertModifyRenameMgt(9021702);
               //DOC EC2013.3.70 "Sync Version No." := CREATEGUID;
             END;

    OnModify=BEGIN
               DateTimeInsertedModified := CURRENTDATETIME;
               //DOC EC2013.3.70 "Sync Log No." := SyncMgt.InsertModifyRenameMgt(9021702);
               //DOC EC2013.3.70 "Sync Version No." := CREATEGUID;
             END;

    OnDelete=BEGIN
               //DOC EC2013.3.70 SyncMgt.DeletionMgt(9021702,FORMAT("Label Code"),FORMAT("Table ID"),"Attribute Code",
               //DOC EC2013.3.70                "Key Field String 1","Key Field String 2",FORMAT("Key Field Integer 1"),'','',
               //DOC EC2013.3.70                "Sync Log No.","Sync Version No.");
             END;

    OnRename=BEGIN
               ERROR(Text000);
             END;

    CaptionML=[ENU=Web Attribute Value;
               ENG=Web Attribute Value];
    LookupPageID=Page9021767;
    DrillDownPageID=Page9021767;
  }
  FIELDS
  {
    { 1   ;   ;Table ID            ;Integer       ;CaptionML=[ENU=Table ID;
                                                              ENG=Table ID];
                                                   NotBlank=Yes }
    { 2   ;   ;Label Code          ;Code10        ;TableRelation=Label;
                                                   OnValidate=BEGIN
                                                                LabelRec.GET("Label Code");
                                                                IF LabelRec."Used-in Company" <> COMPANYNAME THEN
                                                                  ERROR(Text002,"Label Code",LabelRec."Used-in Company");
                                                              END;

                                                   CaptionML=[ENU=Label Code;
                                                              ENG=Label Code];
                                                   NotBlank=Yes }
    { 3   ;   ;Attribute Code      ;Code50        ;TableRelation=IF (Global Code=FILTER('')) "Web Attribute".Code WHERE (Table ID=FIELD(Table ID),
                                                                                                                         Label Code=FIELD(Label Code))
                                                                                                                         ELSE IF (Global Code=FILTER(<>'')) "Web Attribute".Code WHERE (Table ID=FIELD(Table ID),
                                                                                                                                                                                        Global Code=FIELD(Global Code),
                                                                                                                                                                                        Label Code=FIELD(Label Code));
                                                   OnValidate=BEGIN
                                                                //DOC EC2013.3.20 -
                                                                IF "Attribute Code" = '' THEN BEGIN
                                                                  "Data Type" := "Data Type"::Integer;
                                                                  "Web Value Must be Listed" := FALSE;
                                                                  "Web Value Value Not Blank" := FALSE;
                                                                  "Link Table ID" := 0;
                                                                  "Link Attribute Code" := '';
                                                                  "Image URL":= '';
                                                                END ELSE BEGIN
                                                                //DOC EC2013.3.20 this code down was in OnInsert
                                                                  WebAttribute.GET("Label Code","Table ID","Attribute Code");
                                                                  "Data Type" := WebAttribute."Data Type";
                                                                  "Web Value Must be Listed" := WebAttribute."Values Must be Listed";
                                                                  "Web Value Value Not Blank" := WebAttribute."Value Must Not Be Blank";
                                                                  "Link Table ID" := WebAttribute."Link Table ID";
                                                                  "Link Attribute Code" := WebAttribute."Link Attribute Code";
                                                                  "Global Code" := WebAttribute."Global Code";
                                                                  "Image URL":= WebAttribute."Default Image URL";
                                                                END;
                                                                //DOC EC2013.3.20 +
                                                              END;

                                                   CaptionML=[ENU=Attribute Code;
                                                              ENG=Attribute Code];
                                                   NotBlank=Yes }
    { 5   ;   ;Key Field String 1  ;Code50        ;CaptionML=[ENU=Key Field String 1;
                                                              ENG=Key Field String 1] }
    { 7   ;   ;Key Field String 2  ;Code50        ;CaptionML=[ENU=Key Field String 2;
                                                              ENG=Key Field String 2] }
    { 9   ;   ;Key Field Integer 1 ;Integer       ;CaptionML=[ENU=Key Field Integer 1;
                                                              ENG=Key Field Integer 1] }
    { 10  ;   ;Language Code       ;Code10        ;TableRelation=Language;
                                                   CaptionML=[ENU=Language Code;
                                                              ENG=Language Code] }
    { 11  ;   ;Web Source Table Name;Text100      ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Sync Table"."Table Name" WHERE (Dynamics Table ID=FIELD(Table ID)));
                                                   CaptionML=[ENU=Web Source Table Name;
                                                              ENG=Web Source Table Name];
                                                   Editable=No }
    { 12  ;   ;Table Name          ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Object.Name WHERE (Type=CONST(Table),
                                                                                         ID=FIELD(Table ID)));
                                                   CaptionML=[ENU=Table Name;
                                                              ENG=Table Name];
                                                   Editable=No }
    { 13  ;   ;DateTimeInsertedModified;DateTime  ;CaptionML=[ENU=DateTimeInsertedModified;
                                                              ENG=DateTimeInsertedModified] }
    { 14  ;   ;Global Code         ;Code20        ;TableRelation=IF (Label Code=FILTER(<>'')) "Web Attribute Global".Code WHERE (Label Code=FIELD(Label Code),
                                                                                                                                 Dynamics Table ID=FIELD(Table ID))
                                                                                                                                 ELSE IF (Label Code=FILTER('')) "Web Attribute Global".Code WHERE (Dynamics Table ID=FIELD(Table ID));
                                                   OnValidate=BEGIN
                                                                //DOC EC2013.3.20 -
                                                                IF "Global Code" = '' THEN BEGIN
                                                                  ClearAllValues;
                                                                  VALIDATE("Attribute Code",'');
                                                                END ELSE BEGIN
                                                                  WebAttribGlobal.RESET;
                                                                  WebAttribGlobal.SETRANGE(Code,"Global Code");
                                                                  IF "Table ID" <> 0 THEN
                                                                    WebAttribGlobal.SETRANGE("Dynamics Table ID","Table ID");
                                                                  IF WebAttribGlobal.COUNT = 1 THEN BEGIN
                                                                    WebAttribGlobal.FINDFIRST;
                                                                    VALIDATE("Label Code",WebAttribGlobal."Label Code");
                                                                    //do not need to deal with Table ID as this is already OK.
                                                                  END;
                                                                END;
                                                                //DOC EC2013.3.20 +
                                                              END;

                                                   CaptionML=[ENU=Global Code;
                                                              ENG=Global Code];
                                                   NotBlank=Yes }
    { 18  ;   ;Attribute Name      ;Text80        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Web Attribute"."Attribute Name" WHERE (Label Code=FIELD(Label Code),
                                                                                                              Table ID=FIELD(Table ID),
                                                                                                              Code=FIELD(Attribute Code)));
                                                   CaptionML=[ENU=Attribute Name;
                                                              ENG=Attribute Name];
                                                   Editable=No }
    { 20  ;   ;Data Type           ;Option        ;OnValidate=BEGIN
                                                                IF "Data Type" <> xRec."Data Type" THEN
                                                                  ClearAllValues;
                                                              END;

                                                   CaptionML=[ENU=Data Type;
                                                              ENG=Data Type];
                                                   OptionCaptionML=[ENU=Integer,Text,Code,Decimal,Boolean,Date,Time,Any,Text+Dec;
                                                                    ENG=Integer,Text,Code,Decimal,Boolean,Date,Time,Any,Text+Dec];
                                                   OptionString=Integer,Text,Code,Decimal,Boolean,Date,Time,Any,Text+Dec }
    { 30  ;   ;Value               ;Text250       ;OnValidate=VAR
                                                                lValue@1000000000 : Text;
                                                                lTrueValue@1000000001 : Text;
                                                              BEGIN
                                                                IF ("Data Type" = "Data Type"::Any) THEN
                                                                  IF NOT CONFIRM(Text006) THEN
                                                                    ERROR(Text007);

                                                                IF (STRLEN(Value) > 30) AND ("Data Type" <> "Data Type"::Any) THEN
                                                                  ERROR(Text001);
                                                                CASE "Data Type" OF
                                                                  "Data Type"::Integer:
                                                                    BEGIN
                                                                      EVALUATE(IntegerVar,Value);
                                                                    END;
                                                                  "Data Type"::Text:
                                                                    BEGIN
                                                                      TextVar := Value;
                                                                    END;
                                                                  "Data Type"::Code:
                                                                    BEGIN
                                                                      EVALUATE(CodeVar,Value);
                                                                    END;
                                                                  "Data Type"::Decimal:
                                                                    BEGIN
                                                                      EVALUATE(DecimalVar,Value);
                                                                      //DOC EC2013.3.60 -
                                                                      PassedVar := Value;
                                                                      Value := '';
                                                                      FOR i := 1 TO STRLEN(PassedVar) DO
                                                                        IF COPYSTR(PassedVar,i,1) IN ['0'..'9','.'] THEN
                                                                          Value := Value + COPYSTR(PassedVar,i,1);
                                                                      //DOC EC2013.3.60 +
                                                                    END;
                                                                  "Data Type"::Boolean:
                                                                    BEGIN
                                                                      lValue := LOWERCASE(DELCHR(Value, '<>', ' '));
                                                                      IF (lValue <> '') THEN
                                                                      BEGIN
                                                                        lTrueValue := LOWERCASE(FORMAT(TRUE));
                                                                        BooleanVar := (COPYSTR(lTrueValue, 1, STRLEN(lValue)) = lValue);
                                                                      END
                                                                      ELSE
                                                                        BooleanVar := FALSE;
                                                                    END;
                                                                  "Data Type"::Date:
                                                                    BEGIN
                                                                      EVALUATE(DateVar,Value);
                                                                    END;
                                                                  "Data Type"::Time:
                                                                    BEGIN
                                                                      EVALUATE(TimeVar,Value);
                                                                    END;
                                                                  "Data Type"::"Text+Dec":
                                                                    BEGIN
                                                                      ERROR(Text003);
                                                                    END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Value;
                                                              ENG=Value] }
    { 40  ;   ;Web Value Must be Listed;Boolean   ;CaptionML=[ENU=Web Value Must be Listed;
                                                              ENG=Web Value Must be Listed];
                                                   Editable=No }
    { 42  ;   ;Web Value Value Not Blank;Boolean  ;CaptionML=[ENU=Web Value Value Not Blank;
                                                              ENG=Web Value Value Not Blank];
                                                   Editable=No }
    { 45  ;   ;Data Controlled Externally;Boolean ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Web Attribute Global"."Data Controlled Externally" WHERE (Label Code=FIELD(Label Code),
                                                                                                                                 Code=FIELD(Global Code)));
                                                   CaptionML=[ENU=Data Controlled Externally;
                                                              ENG=Data Controlled Externally];
                                                   Editable=No }
    { 50  ;   ;Link Table ID       ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Web Attribute"."Link Table ID" WHERE (Table ID=FIELD(Table ID),
                                                                                                             Label Code=FIELD(Label Code),
                                                                                                             Code=FIELD(Attribute Code)));
                                                   TableRelation="Web Attribute"."Table ID";
                                                   CaptionML=[ENU=Link Table ID;
                                                              ENG=Link Table ID];
                                                   Editable=No }
    { 51  ;   ;Link Attribute Code ;Code50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Web Attribute"."Link Attribute Code" WHERE (Table ID=FIELD(Table ID),
                                                                                                                   Label Code=FIELD(Label Code),
                                                                                                                   Code=FIELD(Attribute Code)));
                                                   TableRelation="Web Attribute".Code WHERE (Table ID=FIELD(Link Table ID));
                                                   CaptionML=[ENU=Link Attribute Code;
                                                              ENG=Link Attribute Code];
                                                   Editable=No }
    { 52  ;   ;Web Link Table Name ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Sync Table"."Table Name" WHERE (Dynamics Table ID=FIELD(Link Table ID)));
                                                   CaptionML=[ENU=Web Link Table Name;
                                                              ENG=Web Link Table Name];
                                                   Editable=No }
    { 56  ;   ;Sync Log No.        ;Integer       ;CaptionML=[ENU=Sync Log No.;
                                                              ENG=Sync Log No.] }
    { 57  ;   ;Sync Version No.    ;Text38        ;CaptionML=[ENU=Sync Version No.;
                                                              ENG=Sync Version No.] }
    { 100 ;   ;IntegerVar          ;Integer       ;OnValidate=VAR
                                                                TxtInteger@1000000000 : TextConst 'ENU=Integer;ENG=Integer';
                                                              BEGIN
                                                                IF ("Data Type" <> "Data Type"::Integer) AND
                                                                   ("Data Type" <> "Data Type"::Any) THEN
                                                                  ERROR(Text004,TxtInteger);
                                                                EVALUATE(PassedVar,FORMAT(IntegerVar));
                                                                UpdateValueFromVars(PassedVar);
                                                              END;

                                                   CaptionML=[ENU=IntegerVar;
                                                              ENG=IntegerVar] }
    { 101 ;   ;TextVar             ;Text250       ;OnValidate=VAR
                                                                TxtText@1000000000 : TextConst 'ENU=Text;ENG=Text';
                                                              BEGIN
                                                                IF ("Data Type" <> "Data Type"::Text) AND
                                                                   ("Data Type" <> "Data Type"::"Text+Dec") AND
                                                                   ("Data Type" <> "Data Type"::Any) THEN
                                                                    ERROR(Text005,TxtText);
                                                                UpdateValueFromVars(TextVar);
                                                              END;

                                                   CaptionML=[ENU=TextVar;
                                                              ENG=TextVar] }
    { 102 ;   ;CodeVar             ;Code30        ;OnValidate=VAR
                                                                TxtCode@1000000000 : TextConst 'ENU=Code;ENG=Code';
                                                              BEGIN
                                                                IF ("Data Type" <> "Data Type"::Code) AND
                                                                   ("Data Type" <> "Data Type"::Any) THEN
                                                                  ERROR(Text004,TxtCode);
                                                                EVALUATE(PassedVar,CodeVar);
                                                                UpdateValueFromVars(PassedVar);
                                                              END;

                                                   CaptionML=[ENU=CodeVar;
                                                              ENG=CodeVar] }
    { 103 ;   ;DecimalVar          ;Decimal       ;OnValidate=VAR
                                                                TxtDecimal@1000000000 : TextConst 'ENU=Decimal;ENG=Decimal';
                                                              BEGIN
                                                                IF ("Data Type" <> "Data Type"::Decimal) AND
                                                                   ("Data Type" <> "Data Type"::"Text+Dec") AND
                                                                   ("Data Type" <> "Data Type"::Any) THEN
                                                                    ERROR(Text005,TxtDecimal);

                                                                PassedVar := '';  //DOC EC2013.4.00
                                                                PassedVar1 := ''; //DOC EC2013.4.00

                                                                EVALUATE(PassedVar,FORMAT(DecimalVar));
                                                                //DOC EC2013.3.60 -
                                                                FOR i := 1 TO STRLEN(PassedVar) DO
                                                                  IF COPYSTR(PassedVar,i,1) IN ['0'..'9','.'] THEN
                                                                  PassedVar1 := PassedVar1 + COPYSTR(PassedVar,i,1);
                                                                //DOC EC2013.3.60 +
                                                                UpdateValueFromVars(PassedVar1);
                                                              END;

                                                   CaptionML=[ENU=DecimalVar;
                                                              ENG=DecimalVar];
                                                   DecimalPlaces=2:2 }
    { 104 ;   ;BooleanVar          ;Boolean       ;OnValidate=VAR
                                                                TxtBoolean@1000000000 : TextConst 'ENU=Boolean;ENG=Boolean';
                                                              BEGIN
                                                                IF ("Data Type" <> "Data Type"::Boolean) AND
                                                                   ("Data Type" <> "Data Type"::Any) THEN
                                                                  ERROR(Text004,TxtBoolean);

                                                                EVALUATE(PassedVar,FORMAT(BooleanVar));
                                                                UpdateValueFromVars(PassedVar);
                                                              END;

                                                   CaptionML=[ENU=BooleanVar;
                                                              ENG=BooleanVar] }
    { 105 ;   ;DateVar             ;Date          ;OnValidate=VAR
                                                                TxtDate@1000000000 : TextConst 'ENU=Date;ENG=Date';
                                                              BEGIN
                                                                IF ("Data Type" <> "Data Type"::Date) AND
                                                                   ("Data Type" <> "Data Type"::Any) THEN
                                                                  ERROR(Text004,TxtDate);

                                                                EVALUATE(PassedVar,FORMAT(DateVar));
                                                                UpdateValueFromVars(PassedVar);
                                                              END;

                                                   CaptionML=[ENU=DateVar;
                                                              ENG=DateVar] }
    { 106 ;   ;TimeVar             ;Time          ;OnValidate=VAR
                                                                TxtTime@1000000000 : TextConst 'ENU=Time;ENG=Time';
                                                              BEGIN
                                                                IF ("Data Type" <> "Data Type"::Time) AND
                                                                   ("Data Type" <> "Data Type"::Any) THEN
                                                                  ERROR(Text004,TxtTime);

                                                                EVALUATE(PassedVar,FORMAT(TimeVar));
                                                                UpdateValueFromVars(PassedVar);
                                                              END;

                                                   CaptionML=[ENU=TimeVar;
                                                              ENG=TimeVar] }
    { 140 ;   ;Blocked             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Web Attribute".Blocked WHERE (Table ID=FIELD(Table ID),
                                                                                                     Code=FIELD(Attribute Code),
                                                                                                     Label Code=FIELD(Label Code)));
                                                   CaptionML=[ENU=Blocked;
                                                              ENG=Blocked];
                                                   Editable=No }
    { 250 ;   ;Image URL           ;Text250       ;CaptionML=[ENU=Image URL;
                                                              ENG=Image URL];
                                                   Description=Used online to display images in place of text for attribute }
  }
  KEYS
  {
    {    ;Label Code,Table ID,Attribute Code,Key Field String 1,Key Field String 2,Key Field Integer 1;
                                                   Clustered=Yes }
    {    ;Label Code,Table ID,Key Field String 1,Key Field String 2,Key Field Integer 1,Global Code }
    {    ;Key Field String 1                       }
    {    ;Key Field Integer 1                      }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000000000 : TextConst 'ENU=Sorry, you cannot rename Web Attributes.  Please delete and insert a new one.;ENG=Sorry, you cannot rename Web Attributes.  Please delete and insert a new one.';
      LabelRec@1000000012 : Record 9021618;
      WebAttribValue@1000000001 : Record 9021702;
      WebAttribute@1000000002 : Record 9021701;
      WebAttribGlobal@1000000011 : Record 9021695;
      PassedVar@1000000003 : Text[250];
      Text001@1000000004 : TextConst 'ENU=Error.. Value cannot be longer than 30 characters.;ENG=Error.. Value cannot be longer than 30 characters.';
      Text002@1000000005 : TextConst 'ENU=The Label Code %1 can only be used in company %2.;ENG=The Label Code %1 can only be used in company %2.';
      Text003@1000000006 : TextConst 'ENU=Error.. The data type is Text + Decimal so you have to enter a text value then a decimal value.;ENG=Error.. The data type is Text + Decimal so you have to enter a text value then a decimal value.';
      Text004@1000000007 : TextConst 'ENU=Error.. You can only enter data here if the data type is either %1 or Any.;ENG=Error.. You can only enter data here if the data type is either %1 or Any.';
      Text005@1000000008 : TextConst 'ENU=Error.. You can only enter data here if the data type is either %1, Text+Decimal or Any.;ENG=Error.. You can only enter data here if the data type is either %1, Text+Decimal or Any.';
      Text006@1000000009 : TextConst 'ENU=If you type here, it will clear all the VARs.\\Do you wish to continue?;ENG=If you type here, it will clear all the VARs.\\Do you wish to continue?';
      Text007@1000000010 : TextConst 'ENU=Aborted.;ENG=Aborted.';
      PassedVar1@1000000013 : Text[250];
      i@1000000014 : Integer;

    PROCEDURE UpdateValueFromVars@1000000000(InputVar@1000000000 : Text[250]);
    BEGIN
      //DOC EC2013.3.80 changed InputVar from T100 to T250
      IF "Data Type" = "Data Type"::Any THEN BEGIN
        IF Value = '' THEN
          Value := InputVar
        ELSE
          Value := Value + ' ' + InputVar;
      END ELSE BEGIN
        IF "Data Type" = "Data Type"::"Text+Dec" THEN BEGIN
          Value := TextVar + ' ' + FORMAT(DecimalVar);
        END ELSE
          Value := InputVar;
      END;
    END;

    PROCEDURE ClearAllValues@1000000001();
    BEGIN
      Value := '';
      IntegerVar := 0;
      TextVar := '';
      CodeVar := '';
      DecimalVar := 0;
      BooleanVar := FALSE;
      DateVar := 0D;
      TimeVar := 0T;
    END;

    BEGIN
    {
      //DOC EC2013.3.20 MQ 29/10/2012 - GW121029 Enhanced Value input for Boolean. Moved a section of code from OnInsert to Attribute Code - OnValidate
      //DOC EC2013.3.20 MQ 29/10/2012 - Enhanced Table Relation on Global Code and Attribute Code; And code in Global Code OnValidate
      //DOC EC2013.3.60 MQ 16/05/2013 - GW130516 Stop commas in Value field when decimal is greater than 1000
      //DOC EC2013.3.70 MQ 01/08/2013 - GW130801 Take out update of Sync Log fields and removed secondary key
      //DOC EC2013.3.80 MQ 29/10/2013 - GW131029 change input string length on UpdateValueFromVars
      //DOC EC2013.4.00 MQ 25/11/2013 - GW131125
      //DOC EC2013.4.50 MQ 03/02/2014 - GW140203 Change DecimalPlaces property on DecimalVar to 2:2 so M&C RRP displays to 2 dec. places.
      //DOC EC2016.6    JH 05/10/2016 - ECom 2016
    }
    END.
  }
}

