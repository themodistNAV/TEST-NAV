OBJECT Page 9086507 Enhanced Customer Statistics
{
  OBJECT-PROPERTIES
  {
    Date=10/05/16;
    Time=12:00:00 PM;
    Version List=NA2016.15;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[ENU=Enhanced Customer Statistics;
               ENG=Enhanced Customer Statistics];
    SourceTable=Table18;
    PageType=Card;
    OnOpenPage=BEGIN
                 CurrPage.CustItemList.PAGE.SetDataSource(DATABASE::Customer);
               END;

    OnAfterGetRecord=VAR
                       CostCalcMgt@1000000000 : Codeunit 5836;
                     BEGIN
                       IF CurrentDate <> WORKDATE THEN BEGIN
                         CurrentDate := WORKDATE;
                         Calendar."Period Start" := CurrentDate;
                         PeriodFormMgt.SetCalendarSource(CalendarSource);
                         PeriodFormMgt.FindDate('',Calendar,2);
                         CustDateFilter[1] := PeriodFormMgt.BuildDateFilter(Calendar);
                         CustDateName[1] := Calendar."Period Name";
                         PeriodFormMgt.FindDate('',Calendar,4);
                         CustDateFilter[2] := PeriodFormMgt.BuildDateFilter(Calendar);
                         CustDateName[2] := Calendar."Period Name";
                         PeriodFormMgt.NextDate(-1,Calendar,4);
                         CustDateFilter[3] := PeriodFormMgt.BuildDateFilter(Calendar);
                         CustDateName[3] := Calendar."Period Name";
                       END;

                       SETRANGE("Date Filter",0D,CurrentDate);

                       FOR i := 1 TO 4 DO BEGIN
                         SETFILTER("Date Filter",CustDateFilter[i]);
                         CALCFIELDS(
                           "Sales (LCY)","Profit (LCY)","Inv. Discounts (LCY)","Inv. Amounts (LCY)","Pmt. Discounts (LCY)",
                           "Pmt. Disc. Tolerance (LCY)","Pmt. Tolerance (LCY)",
                           "Fin. Charge Memo Amounts (LCY)","Cr. Memo Amounts (LCY)","Payments (LCY)",
                           "Reminder Amounts (LCY)","Refunds (LCY)","Other Amounts (LCY)");
                         CustSalesLCY[i] := "Sales (LCY)";
                         CustProfit[i] := "Profit (LCY)" + CostCalcMgt.NonInvtblCostAmt(Rec);
                         AdjmtCostLCY[i] := CustSalesLCY[i] - CustProfit[i] + CostCalcMgt.CalcCustActualCostLCY(Rec);
                         AdjCustProfit[i] := CustProfit[i] + AdjmtCostLCY[i];

                         IF "Sales (LCY)" <> 0 THEN BEGIN
                           ProfitPct[i] := ROUND(100 * CustProfit[i] / "Sales (LCY)",0.1);
                           AdjProfitPct[i] := ROUND(100 * AdjCustProfit[i] / "Sales (LCY)",0.1);
                         END ELSE BEGIN
                           ProfitPct[i] := 0;
                           AdjProfitPct[i] := 0;
                         END;

                         InvAmountsLCY[i] := "Inv. Amounts (LCY)";
                         CustInvDiscAmountLCY[i] := "Inv. Discounts (LCY)";
                         CustPaymentDiscLCY[i] := "Pmt. Discounts (LCY)";
                         CustPaymentDiscTolLCY[i] := "Pmt. Disc. Tolerance (LCY)";
                         CustPaymentTolLCY[i] := "Pmt. Tolerance (LCY)";
                         CustReminderChargeAmtLCY[i] := "Reminder Amounts (LCY)";
                         CustFinChargeAmtLCY[i] := "Fin. Charge Memo Amounts (LCY)";
                         CustCrMemoAmountsLCY[i] := "Cr. Memo Amounts (LCY)";
                         CustPaymentsLCY[i] := "Payments (LCY)";
                         CustRefundsLCY[i] := "Refunds (LCY)";
                         CustOtherAmountsLCY[i] := "Other Amounts (LCY)";
                       END;
                       SETRANGE("Date Filter",0D,CurrentDate);
                     END;

    ActionList=ACTIONS
    {
      { 1000000009;  ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1000000010;1 ;Action    ;
                      CaptionML=[ENU=Customer Items;
                                 ENG=Customer Items];
                      RunObject=Page 9086506;
                      RunPageLink=Customer No.=FIELD(No.);
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ItemLines;
                      PromotedCategory=Process }
    }
  }
  CONTROLS
  {
    { 1000000000;0;Container;
                ContainerType=ContentArea }

    { 1000000001;1;Group  ;
                Name=General;
                CaptionML=[ENU=General;
                           ENG=General];
                GroupType=Group }

    { 1000000002;2;Field  ;
                SourceExpr="No." }

    { 1000000003;2;Field  ;
                SourceExpr=Name }

    { 1000000008;2;Field  ;
                SourceExpr="Balance (LCY)";
                OnDrillDown=VAR
                              DtldCustLedgEntry@1000 : Record 379;
                              CustLedgEntry@1001 : Record 21;
                            BEGIN
                              DtldCustLedgEntry.SETRANGE("Customer No.","No.");
                              COPYFILTER("Global Dimension 1 Filter",DtldCustLedgEntry."Initial Entry Global Dim. 1");
                              COPYFILTER("Global Dimension 2 Filter",DtldCustLedgEntry."Initial Entry Global Dim. 2");
                              COPYFILTER("Currency Filter",DtldCustLedgEntry."Currency Code");
                              CustLedgEntry.DrillDownOnEntries(DtldCustLedgEntry);
                            END;
                             }

    { 1000000006;2;Field  ;
                SourceExpr="Outstanding Orders (LCY)" }

    { 1000000005;2;Field  ;
                SourceExpr="Shipped Not Invoiced (LCY)" }

    { 1000000004;2;Field  ;
                SourceExpr="Outstanding Invoices (LCY)" }

    { 1000000007;1;Part   ;
                Name=CustItemList;
                CaptionML=[ENU=Items;
                           ENG=Items];
                SubPageLink=Customer No.=FIELD(No.);
                PagePartID=Page9086508;
                PartType=Page }

    { 1000000012;1;Group  ;
                CaptionML=[ENU=Charts;
                           ENG=Charts];
                GroupType=Group }

    { 1000000097;2;Part   ;
                CaptionML=[ENU=Customer Charts;
                           ENG=Customer Charts];
                SubPageLink=Source Table No.=CONST(18),
                            Hide Menu Bar Filter=CONST(Yes),
                            View Mode Filter=CONST(Chart);
                PagePartID=Page9086505;
                PartType=Page }

  }
  CODE
  {
    VAR
      Calendar@1000000022 : Record 2000000007;
      PeriodFormMgt@1000000023 : Codeunit 359;
      DateFilterCalc@1000000021 : Codeunit 358;
      CustDateFilter@1000000020 : ARRAY [4] OF Text[30];
      CustDateName@1000000019 : ARRAY [4] OF Text[30];
      CurrentDate@1000000018 : Date;
      CustSalesLCY@1000000017 : ARRAY [4] OF Decimal;
      AdjmtCostLCY@1000000016 : ARRAY [4] OF Decimal;
      CustProfit@1000000015 : ARRAY [4] OF Decimal;
      ProfitPct@1000000014 : ARRAY [4] OF Decimal;
      AdjCustProfit@1000000013 : ARRAY [4] OF Decimal;
      AdjProfitPct@1000000012 : ARRAY [4] OF Decimal;
      CustInvDiscAmountLCY@1000000011 : ARRAY [4] OF Decimal;
      CustPaymentDiscLCY@1000000010 : ARRAY [4] OF Decimal;
      CustPaymentDiscTolLCY@1000000009 : ARRAY [4] OF Decimal;
      CustPaymentTolLCY@1000000008 : ARRAY [4] OF Decimal;
      CustReminderChargeAmtLCY@1000000007 : ARRAY [4] OF Decimal;
      CustFinChargeAmtLCY@1000000006 : ARRAY [4] OF Decimal;
      CustCrMemoAmountsLCY@1000000005 : ARRAY [4] OF Decimal;
      CustPaymentsLCY@1000000004 : ARRAY [4] OF Decimal;
      CustRefundsLCY@1000000003 : ARRAY [4] OF Decimal;
      CustOtherAmountsLCY@1000000002 : ARRAY [4] OF Decimal;
      i@1000000001 : Integer;
      InvAmountsLCY@1000000000 : ARRAY [4] OF Decimal;
      CalendarSource@1000000024 : ' ,System,AccPeriod';
      Text000@1000000026 : TextConst 'ENU=Overdue Amounts ($) as of %1;ENG=Overdue Amounts ($) as of %1';
      Text001@1000000025 : TextConst 'ENU=Placeholder;ENG=Placeholder;ESM=Marcador de posici¢n;FRC=Paramätre substituable;ENC=Placeholder';

    BEGIN
    {
      //DOC NA2016.15 JH 25/04/2016 - CfMD amendments
    }
    END.
  }
}

