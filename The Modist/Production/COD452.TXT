OBJECT Codeunit 452 Report Distribution Management
{
  OBJECT-PROPERTIES
  {
    Date=23/03/16;
    Time=12:00:00 PM;
    Version List=NAVW19.00.00.45480;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      UnSupportedTableTypeErr@1003 : TextConst '@@@=%1 is the table;ENU=The %1 table is not supported.;ENG=The %1 table is not supported.';
      ServerSaveAsPdfFailedErr@1004 : TextConst 'ENU=An unexpected error occurred. Try the operation again or contact your system administrator.;ENG=An unexpected error occurred. Try the operation again or contact your system administrator.';
      ServerSaveAsPdfAbortedErr@1006 : TextConst 'ENU=You must select a sales invoice.;ENG=You must select a sales invoice.';
      HideDialog@1008 : Boolean;
      SuppresSendDialogQst@1000 : TextConst 'ENU=Do you want to suppress send dialog?;ENG=Do you want to suppress send dialogue?';

    PROCEDURE SendDocumentReport@2(VAR TempDocumentSendingProfile@1006 : TEMPORARY Record 60;PostedDocumentVariant@1000 : Variant);
    BEGIN
      IF TempDocumentSendingProfile."Electronic Document" <> TempDocumentSendingProfile."Electronic Document"::No THEN
        VANDocumentReport(PostedDocumentVariant,TempDocumentSendingProfile);

      IF TempDocumentSendingProfile.Printer <> TempDocumentSendingProfile.Printer::No THEN BEGIN
        HideDialog := TempDocumentSendingProfile.Printer = TempDocumentSendingProfile.Printer::"Yes (Use Default Settings)";
        PrintDocumentReport(PostedDocumentVariant);
      END;

      IF TempDocumentSendingProfile."E-Mail" <> TempDocumentSendingProfile."E-Mail"::No THEN BEGIN
        HideDialog := TempDocumentSendingProfile."E-Mail" = TempDocumentSendingProfile."E-Mail"::"Yes (Use Default Settings)";
        EmailDocumentReportWithElectronicOption(PostedDocumentVariant,TempDocumentSendingProfile);
      END;

      IF TempDocumentSendingProfile.Disk <> TempDocumentSendingProfile.Disk::No THEN
        SaveDocumentReport(PostedDocumentVariant,TempDocumentSendingProfile);
    END;

    PROCEDURE VANDocumentReport@5(HeaderDoc@1000 : Variant;TempDocumentSendingProfile@1002 : TEMPORARY Record 60);
    VAR
      ElectronicDocumentFormat@1003 : Record 61;
      DocExchServiceMgt@1005 : Codeunit 1410;
      RecordRef@1006 : RecordRef;
      SpecificRecordRef@1007 : RecordRef;
      XMLPath@1004 : Text[250];
      ClientFileName@1001 : Text[250];
    BEGIN
      RecordRef.GETTABLE(HeaderDoc);
      IF RecordRef.FINDSET THEN
        REPEAT
          SpecificRecordRef.GET(RecordRef.RECORDID);
          SpecificRecordRef.SETRECFILTER;
          ElectronicDocumentFormat.SendElectronically(
            XMLPath,ClientFileName,SpecificRecordRef,TempDocumentSendingProfile."Electronic Format");
          DocExchServiceMgt.SendDocument(SpecificRecordRef,XMLPath);
        UNTIL RecordRef.NEXT = 0;
    END;

    PROCEDURE SaveDocumentReport@11(HeaderDoc@1000 : Variant;TempDocumentSendingProfile@1002 : TEMPORARY Record 60);
    VAR
      DocumentSendingProfile@1001 : Record 60;
      ElectronicDocumentFormat@1003 : Record 61;
      XMLPath@1004 : Text[250];
      ClientFileName@1006 : Text[250];
    BEGIN
      IF TempDocumentSendingProfile.Disk = TempDocumentSendingProfile.Disk::PDF THEN
        HandleDocumentReport(HeaderDoc,DocumentSendingProfile."Send To"::Disk);

      IF TempDocumentSendingProfile.Disk = TempDocumentSendingProfile.Disk::"Electronic Document" THEN BEGIN
        ElectronicDocumentFormat.SendElectronically(XMLPath,ClientFileName,HeaderDoc,TempDocumentSendingProfile."Disk Format");
        SaveFileOnClient(XMLPath,ClientFileName);
      END;

      IF TempDocumentSendingProfile.Disk = TempDocumentSendingProfile.Disk::"PDF & Electronic Document" THEN
        SendZipFile(HeaderDoc,TempDocumentSendingProfile."Disk Format",TempDocumentSendingProfile."Send To"::Disk);
    END;

    PROCEDURE EmailDocumentReportWithElectronicOption@9(HeaderDoc@1000 : Variant;TempDocumentSendingProfile@1002 : TEMPORARY Record 60);
    VAR
      DocumentSendingProfile@1001 : Record 60;
    BEGIN
      IF TempDocumentSendingProfile."E-Mail Attachment" = TempDocumentSendingProfile."E-Mail Attachment"::PDF THEN
        HandleDocumentReport(HeaderDoc,DocumentSendingProfile."Send To"::"E-Mail");

      IF TempDocumentSendingProfile."E-Mail Attachment" = TempDocumentSendingProfile."E-Mail Attachment"::"Electronic Document" THEN
        SendXmlEmailAttachment(HeaderDoc,TempDocumentSendingProfile."E-Mail Format");

      IF TempDocumentSendingProfile."E-Mail Attachment" = TempDocumentSendingProfile."E-Mail Attachment"::"PDF & Electronic Document"
      THEN
        SendZipFile(HeaderDoc,TempDocumentSendingProfile."E-Mail Format",TempDocumentSendingProfile."Send To"::"E-Mail");
    END;

    PROCEDURE EmailDocumentReport@1(HeaderDoc@1000 : Variant);
    VAR
      DocumentSendingProfile@1001 : Record 60;
    BEGIN
      HandleDocumentReport(HeaderDoc,DocumentSendingProfile."Send To"::"E-Mail");
    END;

    PROCEDURE PrintDocumentReport@15(HeaderDoc@1000 : Variant);
    VAR
      DocumentSendingProfile@1001 : Record 60;
    BEGIN
      HandleDocumentReport(HeaderDoc,DocumentSendingProfile."Send To"::Print);
    END;

    PROCEDURE DownloadPdfOnClient@12(ServerPdfFilePath@1000 : Text) : Text;
    VAR
      FileManagement@1001 : Codeunit 419;
      ClientPdfFilePath@1002 : Text;
    BEGIN
      ClientPdfFilePath := FileManagement.DownloadTempFile(ServerPdfFilePath);
      ERASE(ServerPdfFilePath);
      EXIT(ClientPdfFilePath);
    END;

    PROCEDURE GetReportPDFAsBlob@20(HeaderDoc@1000 : Variant;VAR TempBlob@1001 : Record 99008535);
    VAR
      ReportSelections@1003 : Record 77;
      FileManagement@1004 : Codeunit 419;
      DocumentRecordRef@1002 : RecordRef;
      ServerAttachmentFilePath@1006 : Text[250];
    BEGIN
      DocumentRecordRef.GETTABLE(HeaderDoc);
      CASE DocumentRecordRef.NUMBER OF
        DATABASE::"Sales Invoice Header":
          ReportSelections.SETRANGE(Usage,ReportSelections.Usage::"S.Invoice");
        DATABASE::"Sales Cr.Memo Header":
          ReportSelections.SETRANGE(Usage,ReportSelections.Usage::"S.Cr.Memo");
        DATABASE::"Sales Header":
          ReportSelections.SETRANGE(Usage,ReportSelections.Usage::"S.Quote");
        ELSE
          ERROR(STRSUBSTNO(UnSupportedTableTypeErr,FORMAT(DocumentRecordRef.NAME)));
      END;

      IF ReportSelections.FINDLAST THEN ;
      ServerAttachmentFilePath := COPYSTR(FileManagement.ServerTempFileName('pdf'),1,250);

      IF NOT REPORT.SAVEASPDF(ReportSelections."Report ID",ServerAttachmentFilePath,HeaderDoc) THEN
        ERROR(ServerSaveAsPdfFailedErr);

      IF NOT EXISTS(ServerAttachmentFilePath) THEN
        ERROR(ServerSaveAsPdfAbortedErr);

      FileManagement.BLOBImportFromServerFile(TempBlob,ServerAttachmentFilePath);
    END;

    PROCEDURE InitializeFrom@10(NewHideDialog@1001 : Boolean);
    BEGIN
      HideDialog := NewHideDialog;
    END;

    LOCAL PROCEDURE GetDocumentType@7(DocumentVariant@1000 : Variant) : Text[50];
    VAR
      DummySalesHeader@1002 : Record 36;
      DummyServiceHeader@1003 : Record 5900;
      DocumentRecordRef@1001 : RecordRef;
    BEGIN
      DocumentRecordRef.GETTABLE(DocumentVariant);
      CASE DocumentRecordRef.NUMBER OF
        DATABASE::"Sales Invoice Header":
          EXIT(FORMAT(DummySalesHeader."Document Type"::Invoice));
        DATABASE::"Sales Cr.Memo Header":
          EXIT(FORMAT(DummySalesHeader."Document Type"::"Credit Memo"));
        DATABASE::"Service Invoice Header":
          EXIT(FORMAT(DummyServiceHeader."Document Type"::Invoice));
        DATABASE::"Service Cr.Memo Header":
          EXIT(FORMAT(DummyServiceHeader."Document Type"::"Credit Memo"));
        DATABASE::"Service Header":
          BEGIN
            DummyServiceHeader := DocumentVariant;
            IF DummyServiceHeader."Document Type" = DummyServiceHeader."Document Type"::Quote THEN
              EXIT(FORMAT(DummyServiceHeader."Document Type"::Quote));
          END;
        DATABASE::"Sales Header":
          BEGIN
            DummySalesHeader := DocumentVariant;
            IF DummySalesHeader."Document Type" = DummySalesHeader."Document Type"::Quote THEN
              EXIT(FORMAT(DummySalesHeader."Document Type"::Quote));
          END;
      END;
    END;

    LOCAL PROCEDURE GetBillToCustomer@16(VAR Customer@1000 : Record 18;DocumentVariant@1001 : Variant);
    VAR
      SalesInvoiceHeader@1003 : Record 112;
      SalesCrMemoHeader@1002 : Record 114;
      SalesHeader@1006 : Record 36;
      ServiceInvoiceHeader@1004 : Record 5992;
      ServiceCrMemoHeader@1007 : Record 5994;
      ServiceHeader@1008 : Record 5900;
      DocumentRecordRef@1005 : RecordRef;
    BEGIN
      DocumentRecordRef.GETTABLE(DocumentVariant);
      CASE DocumentRecordRef.NUMBER OF
        DATABASE::"Sales Invoice Header":
          BEGIN
            SalesInvoiceHeader := DocumentVariant;
            Customer.GET(SalesInvoiceHeader."Bill-to Customer No.");
          END;
        DATABASE::"Sales Cr.Memo Header":
          BEGIN
            SalesCrMemoHeader := DocumentVariant;
            Customer.GET(SalesCrMemoHeader."Bill-to Customer No.");
          END;
        DATABASE::"Service Invoice Header":
          BEGIN
            ServiceInvoiceHeader := DocumentVariant;
            Customer.GET(ServiceInvoiceHeader."Bill-to Customer No.");
          END;
        DATABASE::"Service Cr.Memo Header":
          BEGIN
            ServiceCrMemoHeader := DocumentVariant;
            Customer.GET(ServiceCrMemoHeader."Bill-to Customer No.");
          END;
        DATABASE::"Service Header":
          BEGIN
            ServiceHeader := DocumentVariant;
            Customer.GET(ServiceHeader."Bill-to Customer No.");
          END;
        DATABASE::"Sales Header":
          BEGIN
            SalesHeader := DocumentVariant;
            Customer.GET(SalesHeader."Bill-to Customer No.");
          END;
      END;
    END;

    LOCAL PROCEDURE GenerateReport@19(HeaderDoc@1001 : Variant;ReportID@1000 : Integer;CustomReportSelection@1003 : Record 9657) : Text[250];
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1004 : Record 9651;
      FileManagement@1008 : Codeunit 419;
      ServerAttachmentFilePath@1007 : Text[250];
    BEGIN
      ServerAttachmentFilePath := COPYSTR(FileManagement.ServerTempFileName('pdf'),1,250);

      IF CustomReportLayout.GET(CustomReportSelection."Custom Report Layout ID") THEN BEGIN
        ReportLayoutSelection.SetTempLayoutSelected(CustomReportLayout.ID);
        REPORT.RUNMODAL(CustomReportSelection."Report ID",NOT HideDialog,FALSE,HeaderDoc);
        ReportLayoutSelection.SetTempLayoutSelected(0);
      END ELSE
        IF NOT REPORT.SAVEASPDF(ReportID,ServerAttachmentFilePath,HeaderDoc) THEN
          ERROR(ServerSaveAsPdfFailedErr);

      IF NOT EXISTS(ServerAttachmentFilePath) THEN
        ERROR(ServerSaveAsPdfAbortedErr);
      COMMIT;
      EXIT(ServerAttachmentFilePath);
    END;

    LOCAL PROCEDURE SendReport@3(HeaderDoc@1001 : Variant;ReportID@1000 : Integer;SendTo@1004 : Option;VAR CustomReportSelection@1009 : Record 9657);
    VAR
      DocumentSendingProfile@1005 : Record 60;
      ReportLayoutSelection@1010 : Record 9651;
      CustomReportLayout@1011 : Record 9650;
      RecRef@1013 : RecordRef;
    BEGIN
      IF SendTo = DocumentSendingProfile."Send To"::Print THEN BEGIN
        IF CustomReportLayout.GET(CustomReportSelection."Custom Report Layout ID") THEN BEGIN
          ReportLayoutSelection.SetTempLayoutSelected(CustomReportLayout.ID);
          REPORT.RUNMODAL(CustomReportSelection."Report ID",NOT HideDialog,FALSE,HeaderDoc);
          ReportLayoutSelection.SetTempLayoutSelected(0);
        END ELSE
          REPORT.RUNMODAL(ReportID,NOT HideDialog,FALSE,HeaderDoc)
      END ELSE BEGIN
        RecRef.GETTABLE(HeaderDoc);
        IF RecRef.FINDSET THEN BEGIN
          IF (NOT HideDialog) AND (RecRef.COUNT > 1) THEN
            IF CONFIRM(SuppresSendDialogQst) THEN
              HideDialog := TRUE;
          REPEAT
            EmailDocument(HeaderDoc,RecRef.RECORDID,ReportID,SendTo,CustomReportSelection);
          UNTIL RecRef.NEXT = 0;
        END;
      END;
    END;

    LOCAL PROCEDURE EmailDocument@27(SourceRec@1012 : Variant;RecID@1000 : RecordID;ReportID@1009 : Integer;SendTo@1011 : Option;VAR CustomReportSelection@1010 : Record 9657);
    VAR
      Customer@1007 : Record 18;
      ElectronicDocumentFormat@1006 : Record 61;
      RecRef@1001 : RecordRef;
      HeaderDoc@1002 : Variant;
      ServerAttachmentFilePath@1008 : Text[250];
      DocumentType@1005 : Text[50];
      AttachmentFileName@1004 : Text[250];
      SalesDocumentNo@1003 : Code[20];
    BEGIN
      HeaderDoc := SourceRec; // to initialize Variant
      RecRef.GET(RecID);
      RecRef.SETRECFILTER;
      RecRef.SETTABLE(HeaderDoc);
      DocumentType := GetDocumentType(HeaderDoc);
      SalesDocumentNo := ElectronicDocumentFormat.GetDocumentNo(HeaderDoc);
      GetBillToCustomer(Customer,HeaderDoc);
      ServerAttachmentFilePath := GenerateReport(HeaderDoc,ReportID,CustomReportSelection);
      AttachmentFileName := ElectronicDocumentFormat.GetAttachmentFileName(SalesDocumentNo,DocumentType,'pdf');
      SendAttachment(
        SalesDocumentNo,Customer."No.",ServerAttachmentFilePath,AttachmentFileName,DocumentType,SendTo,CustomReportSelection);
    END;

    LOCAL PROCEDURE HandleDocumentReport@13(HeaderDoc@1000 : Variant;SendTo@1001 : Option);
    VAR
      ReportSelections@1006 : Record 77;
      CustomReportSelection@1002 : Record 9657;
      DocumentSendingProfile@1003 : Record 60;
      CustomReportID@1004 : Integer;
    BEGIN
      CustomReportID :=
        CustomReportSelection.PrintCustomReports(HeaderDoc,NOT (SendTo = DocumentSendingProfile."Send To"::Print),NOT HideDialog);

      IF CustomReportID = 0 THEN BEGIN
        CreateDocumentReport(HeaderDoc,ReportSelections);
        IF ReportSelections.FINDSET THEN
          REPEAT
            SendReport(HeaderDoc,ReportSelections."Report ID",SendTo,CustomReportSelection);
          UNTIL ReportSelections.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE CreateDocumentReport@23(HeaderDoc@1000 : Variant;VAR ReportSelections@1006 : Record 77);
    VAR
      SalesHeader@1003 : Record 36;
      ServiceHeader@1001 : Record 5900;
      HeaderRecRef@1002 : RecordRef;
    BEGIN
      HeaderRecRef.GETTABLE(HeaderDoc);

      CASE HeaderRecRef.NUMBER OF
        DATABASE::"Sales Invoice Header":
          ReportSelections.SETRANGE(Usage,ReportSelections.Usage::"S.Invoice");
        DATABASE::"Service Invoice Header":
          ReportSelections.SETRANGE(Usage,ReportSelections.Usage::"SM.Invoice");
        DATABASE::"Sales Cr.Memo Header":
          ReportSelections.SETRANGE(Usage,ReportSelections.Usage::"S.Cr.Memo");
        DATABASE::"Service Cr.Memo Header":
          ReportSelections.SETRANGE(Usage,ReportSelections.Usage::"SM.Credit Memo");
        DATABASE::"Sales Header":
          BEGIN
            HeaderRecRef.SETTABLE(SalesHeader);
            IF SalesHeader."Document Type" = SalesHeader."Document Type"::Quote THEN
              ReportSelections.SETRANGE(Usage,ReportSelections.Usage::"S.Quote")
            ELSE
              ERROR(STRSUBSTNO(UnSupportedTableTypeErr,FORMAT(SalesHeader."Document Type")));
          END;
        DATABASE::"Service Header":
          BEGIN
            HeaderRecRef.SETTABLE(ServiceHeader);
            IF ServiceHeader."Document Type" = ServiceHeader."Document Type"::Quote THEN
              ReportSelections.SETRANGE(Usage,ReportSelections.Usage::"SM.Quote")
            ELSE
              ERROR(STRSUBSTNO(UnSupportedTableTypeErr,FORMAT(ServiceHeader."Document Type")));
          END
        ELSE
          ERROR(STRSUBSTNO(UnSupportedTableTypeErr,''));
      END;
    END;

    LOCAL PROCEDURE SaveFileOnClient@14(ServerFilePath@1000 : Text;ClientFileName@1005 : Text);
    VAR
      FileManagement@1004 : Codeunit 419;
    BEGIN
      FileManagement.DownloadHandler(
        ServerFilePath,
        '',
        '',
        FileManagement.GetToFilterText('',ClientFileName),
        ClientFileName);
    END;

    LOCAL PROCEDURE SendAttachment@6(PostedDocumentNo@1000 : Code[20];SendEmaillToCustNo@1001 : Code[20];AttachmentFilePath@1002 : Text[250];AttachmentFileName@1004 : Text[250];DocumentType@1005 : Text[50];SendTo@1009 : Option;CustomReportSelection@1003 : Record 9657);
    VAR
      DocumentSendingProfile@1007 : Record 60;
      DocumentMailing@1008 : Codeunit 260;
    BEGIN
      IF SendTo = DocumentSendingProfile."Send To"::Disk THEN BEGIN
        SaveFileOnClient(AttachmentFilePath,AttachmentFileName);
        EXIT;
      END;

      DocumentMailing.EmailFile(
        AttachmentFilePath,AttachmentFileName,PostedDocumentNo,SendEmaillToCustNo,DocumentType,HideDialog,CustomReportSelection);
    END;

    LOCAL PROCEDURE SendXmlEmailAttachment@4(DocumentVariant@1000 : Variant;DocumentFormat@1008 : Code[20]);
    VAR
      ElectronicDocumentFormat@1001 : Record 61;
      Customer@1002 : Record 18;
      DocumentSendingProfile@1007 : Record 60;
      CustomReportSelection@1009 : Record 9657;
      XMLPath@1006 : Text[250];
      ClientFileName@1003 : Text[250];
    BEGIN
      GetBillToCustomer(Customer,DocumentVariant);

      CustomReportSelection.INIT;

      ElectronicDocumentFormat.SendElectronically(XMLPath,ClientFileName,DocumentVariant,DocumentFormat);
      SendAttachment(
        ElectronicDocumentFormat.GetDocumentNo(DocumentVariant),
        Customer."No.",
        XMLPath,
        ClientFileName,
        GetDocumentType(DocumentVariant),
        DocumentSendingProfile."Send To"::"Electronic Document",CustomReportSelection);
    END;

    LOCAL PROCEDURE CreateZipFile@8(VAR ZipPath@1004 : Text[250];VAR ClientZipFileName@1015 : Text[250];DocumentVariant@1001 : Variant;DocumentFormat@1000 : Code[20]);
    VAR
      Customer@1013 : Record 18;
      ElectronicDocumentFormat@1007 : Record 61;
      ReportSelections@1008 : Record 77;
      CustomReportSelection@1011 : Record 9657;
      FileManagement@1009 : Codeunit 419;
      PdfPath@1005 : Text[250];
      ServerFilePath@1006 : Text[250];
      ClientFileName@1012 : Text[250];
      DocumentType@1003 : Text[50];
      PostedDocumentNo@1002 : Code[20];
      CustomReportID@1010 : Integer;
    BEGIN
      GetBillToCustomer(Customer,DocumentVariant);

      PostedDocumentNo := ElectronicDocumentFormat.GetDocumentNo(DocumentVariant);
      DocumentType := GetDocumentType(DocumentVariant);

      // Generate XML
      ElectronicDocumentFormat.SendElectronically(ServerFilePath,ClientFileName,DocumentVariant,DocumentFormat);
      IF FileManagement.IsGZip(ServerFilePath) THEN BEGIN
        ZipPath := ServerFilePath;
        FileManagement.OpenZipFile(ZipPath);
        ClientZipFileName := ClientFileName;
      END ELSE BEGIN
        ZipPath := COPYSTR(FileManagement.CreateZipArchiveObject,1,250);
        FileManagement.AddFileToZipArchive(ServerFilePath,ClientFileName);
        ClientZipFileName := COPYSTR(FileManagement.GetFileNameWithoutExtension(ClientFileName) + '.zip',1,250);
      END;

      // Generate pdf(s) and add to archive
      CustomReportID :=
        CustomReportSelection.PrintCustomReports(DocumentVariant,FALSE,FALSE);

      IF CustomReportID = 0 THEN BEGIN
        CreateDocumentReport(DocumentVariant,ReportSelections);
        IF ReportSelections.FINDSET THEN
          REPEAT
            PdfPath := GenerateReport(DocumentVariant,ReportSelections."Report ID",CustomReportSelection);
            FileManagement.AddFileToZipArchive(
              PdfPath,
              ElectronicDocumentFormat.GetAttachmentFileName(PostedDocumentNo,DocumentType,'pdf'));
          UNTIL ReportSelections.NEXT = 0;
      END;

      FileManagement.CloseZipArchive;
    END;

    LOCAL PROCEDURE SendZipFile@18(DocumentVariant@1001 : Variant;DocumentFormat@1000 : Code[20];SendTo@1005 : Option);
    VAR
      Customer@1002 : Record 18;
      ElectronicDocumentFormat@1004 : Record 61;
      DocumentSendingProfile@1006 : Record 60;
      CustomReportSelection@1007 : Record 9657;
      DocumentMailing@1014 : Codeunit 260;
      DocumentType@1013 : Text[50];
      ZipPath@1003 : Text[250];
      ClientZipFileName@1008 : Text[250];
      PostedDocumentNo@1012 : Code[20];
    BEGIN
      CreateZipFile(ZipPath,ClientZipFileName,DocumentVariant,DocumentFormat);

      GetBillToCustomer(Customer,DocumentVariant);

      PostedDocumentNo := ElectronicDocumentFormat.GetDocumentNo(DocumentVariant);
      DocumentType := GetDocumentType(DocumentVariant);

      CustomReportSelection.INIT;

      IF SendTo = DocumentSendingProfile."Send To"::"E-Mail" THEN
        DocumentMailing.EmailFile(
          ZipPath,
          ClientZipFileName,
          PostedDocumentNo,
          Customer."No.",
          DocumentType,
          HideDialog,CustomReportSelection)
      ELSE
        SaveFileOnClient(
          ZipPath,
          ClientZipFileName);
    END;

    BEGIN
    END.
  }
}

