OBJECT Table 222 Ship-to Address
{
  OBJECT-PROPERTIES
  {
    Date=13/07/16;
    Time=[ 1:39:53 PM];
    Version List=NAVW18.00,EC2016.6;
  }
  PROPERTIES
  {
    DataCaptionFields=Customer No.,Name,Code;
    OnInsert=BEGIN
               Cust.GET("Customer No.");
               Name := Cust.Name;
               //DOC EC2009.2.64 -
               StdTableTriggerCode.T222OnInsert(Rec,Cust.Name,Cust."Country/Region Code",Cust."E-Mail"); //DOC EC2009.2.64
               //DOC EC2009.2.64 +
             END;

    OnModify=BEGIN
               "Last Date Modified" := TODAY;
             END;

    OnRename=BEGIN
               "Last Date Modified" := TODAY;
             END;

    CaptionML=[ENU=Ship-to Address;
               ENG=Ship-to Address];
    LookupPageID=Page301;
  }
  FIELDS
  {
    { 1   ;   ;Customer No.        ;Code20        ;TableRelation=Customer;
                                                   CaptionML=[ENU=Customer No.;
                                                              ENG=Customer No.];
                                                   NotBlank=Yes }
    { 2   ;   ;Code                ;Code10        ;CaptionML=[ENU=Code;
                                                              ENG=Code];
                                                   NotBlank=Yes }
    { 3   ;   ;Name                ;Text50        ;OnValidate=BEGIN
                                                                StdTableTriggerCode.T222NameOnVal(Rec); //DOC EC2009.2.64
                                                              END;

                                                   CaptionML=[ENU=Name;
                                                              ENG=Name] }
    { 4   ;   ;Name 2              ;Text50        ;OnValidate=BEGIN
                                                                VALIDATE(Name);  //DOC EC2016.1.1
                                                              END;

                                                   CaptionML=[ENU=Name 2;
                                                              ENG=Name 2] }
    { 5   ;   ;Address             ;Text50        ;CaptionML=[ENU=Address;
                                                              ENG=Address] }
    { 6   ;   ;Address 2           ;Text50        ;CaptionML=[ENU=Address 2;
                                                              ENG=Address 2] }
    { 7   ;   ;City                ;Text30        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code".City
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code".City WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidateCity(City,"Post Code",County,"Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=City;
                                                              ENG=City] }
    { 8   ;   ;Contact             ;Text50        ;CaptionML=[ENU=Contact;
                                                              ENG=Contact] }
    { 9   ;   ;Phone No.           ;Text30        ;ExtendedDatatype=Phone No.;
                                                   CaptionML=[ENU=Phone No.;
                                                              ENG=Phone No.] }
    { 10  ;   ;Telex No.           ;Text30        ;CaptionML=[ENU=Telex No.;
                                                              ENG=Telex No.] }
    { 30  ;   ;Shipment Method Code;Code10        ;TableRelation="Shipment Method";
                                                   CaptionML=[ENU=Shipment Method Code;
                                                              ENG=Shipment Method Code] }
    { 31  ;   ;Shipping Agent Code ;Code10        ;TableRelation="Shipping Agent";
                                                   OnValidate=BEGIN
                                                                IF "Shipping Agent Code" <> xRec."Shipping Agent Code" THEN
                                                                  VALIDATE("Shipping Agent Service Code",'');
                                                              END;

                                                   AccessByPermission=TableData 5790=R;
                                                   CaptionML=[ENU=Shipping Agent Code;
                                                              ENG=Shipping Agent Code] }
    { 32  ;   ;Place of Export     ;Code20        ;CaptionML=[ENU=Place of Export;
                                                              ENG=Place of Export] }
    { 35  ;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   CaptionML=[ENU=Country/Region Code;
                                                              ENG=Country/Region Code] }
    { 54  ;   ;Last Date Modified  ;Date          ;CaptionML=[ENU=Last Date Modified;
                                                              ENG=Last Date Modified];
                                                   Editable=No }
    { 83  ;   ;Location Code       ;Code10        ;TableRelation=Location WHERE (Use As In-Transit=CONST(No));
                                                   CaptionML=[ENU=Location Code;
                                                              ENG=Location Code] }
    { 84  ;   ;Fax No.             ;Text30        ;CaptionML=[ENU=Fax No.;
                                                              ENG=Fax No.] }
    { 85  ;   ;Telex Answer Back   ;Text20        ;CaptionML=[ENU=Telex Answer Back;
                                                              ENG=Telex Answer Back] }
    { 91  ;   ;Post Code           ;Code20        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code"
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code" WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidatePostCode(City,"Post Code",County,"Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Post Code;
                                                              ENG=Post Code] }
    { 92  ;   ;County              ;Text30        ;CaptionML=[ENU=County;
                                                              ENG=County] }
    { 102 ;   ;E-Mail              ;Text80        ;ExtendedDatatype=E-Mail;
                                                   CaptionML=[ENU=E-Mail;
                                                              ENG=E-Mail] }
    { 103 ;   ;Home Page           ;Text80        ;ExtendedDatatype=URL;
                                                   CaptionML=[ENU=Home Page;
                                                              ENG=Home Page] }
    { 108 ;   ;Tax Area Code       ;Code20        ;TableRelation="Tax Area";
                                                   CaptionML=[ENU=Tax Area Code;
                                                              ENG=VAT Area Code] }
    { 109 ;   ;Tax Liable          ;Boolean       ;CaptionML=[ENU=Tax Liable;
                                                              ENG=VAT Liable] }
    { 5792;   ;Shipping Agent Service Code;Code10 ;TableRelation="Shipping Agent Services".Code WHERE (Shipping Agent Code=FIELD(Shipping Agent Code));
                                                   CaptionML=[ENU=Shipping Agent Service Code;
                                                              ENG=Shipping Agent Service Code] }
    { 5900;   ;Service Zone Code   ;Code10        ;TableRelation="Service Zone";
                                                   CaptionML=[ENU=Service Zone Code;
                                                              ENG=Service Zone Code] }
    { 9021205;;Is An Internet Customer;Boolean    ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Customer."Is An Internet Customer" WHERE (No.=FIELD(Customer No.)));
                                                   CaptionML=[ENU=Is An Internet Customer;
                                                              ENG=Is An Internet Customer];
                                                   Description=MQ }
    { 9021253;;Country Code is Used Online;Boolean;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Country/Region."Use Online" WHERE (Code=FIELD(Country/Region Code)));
                                                   CaptionML=[ENU=Country Code is Used Online;
                                                              ENG=Country Code is Used Online];
                                                   Description=MQ }
    { 9021277;;Mobile Phone No.    ;Text80        ;CaptionML=[ENU=Mobile Phone No.;
                                                              ENG=Mobile Phone No.];
                                                   Description=MQ }
  }
  KEYS
  {
    {    ;Customer No.,Code                       ;Clustered=Yes }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Code,Name,Address,City,Post Code         }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=untitled;ENG=untitled';
      Cust@1001 : Record 18;
      PostCode@1002 : Record 225;
      Text001@1003 : TextConst 'ENU=Before you can use Online Map, you must fill in the Online Map Setup window.\See Setting Up Online Map in Help.;ENG=Before you can use Online Map, you must fill in the Online Map Setup window.\See Setting Up Online Map in Help.';
      xxMQ@1100000001 : Integer;
      StdTableTriggerCode@1200000000 : Codeunit 9021668;

    PROCEDURE Caption@1() : Text[130];
    BEGIN
      IF "Customer No." = '' THEN
        EXIT(Text000);
      Cust.GET("Customer No.");
      EXIT(STRSUBSTNO('%1 %2 %3 %4',Cust."No.",Cust.Name,Code,Name));
    END;

    PROCEDURE DisplayMap@8();
    VAR
      MapPoint@1001 : Record 800;
      MapMgt@1000 : Codeunit 802;
    BEGIN
      IF MapPoint.FINDFIRST THEN
        MapMgt.MakeSelection(DATABASE::"Ship-to Address",GETPOSITION)
      ELSE
        MESSAGE(Text001);
    END;

    BEGIN
    {
      //DOC EC2009.2.64 MQ 01/01/2012 - Add fields and Global; Add code in OnInsert, OnModify, OnRename, OnDelete, Name and Name 2; Add key Sync Log No.
      //DOC EC2009.2.69 MQ 15/09/2011 - GW110915 Add field Mobile Phone No.
      //DOC EC2013.4.00 MQ 10/01/2014 - GW140110 Need to remove Sync Log No. 9021251, Sync Version No. 9021252 and key
      //DOC EC2013.4.64 MQ 18/07/2014 - GW140718 Removed Sync fields - use CU 9021599 to clear out
      //DOC EC2015.5.03 MQ 05/05/2015 - GW150505 Removed field DateTimeInsertedModifed and code in OnModify, OnDelete and OnRename
      //DOC EC2016.6    JH 05/10/2016 - ECom 2016
    }
    END.
  }
}

