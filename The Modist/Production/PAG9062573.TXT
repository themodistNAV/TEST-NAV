OBJECT Page 9062573 P. Inv. Matching Batch Card
{
  OBJECT-PROPERTIES
  {
    Date=14/07/16;
    Time=12:00:00 PM;
    Version List=NH2016.16;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Purchase Invoice Matching Batch Card;
               ENG=Purchase Invoice Matching Batch Card];
    SourceTable=Table9062440;
    PageType=Card;
    OnOpenPage=BEGIN
                 ShowPDFDocument := FALSE;
                 "Show Complete Invoices" := TRUE;
                 "Show Incomplete Invoices" := TRUE;
                 InvoiceMatchingSetup.GET;
                 UseIncomingDocuments := InvoiceMatchingSetup."Use Incoming Documents";

                 IF Camera.IsAvailable THEN BEGIN
                   CameraAvailable := Camera.IsAvailable;
                   Camera := Camera.Create;
                 END;
               END;

    ActionList=ACTIONS
    {
      { 1000000007;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1000000021;1 ;Action    ;
                      Name=Process Batch;
                      CaptionML=[ENU=Process Batch;
                                 ENG=Process Batch];
                      ToolTipML=[ENU=Process batch will read scanned documents and post all matched invoices.;
                                 ENG=Process batch will read scanned documents and post all matched invoices.];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ExecuteAndPostBatch;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 Action_ProcessBatch();
                               END;
                                }
      { 9062230 ;1   ;Action    ;
                      Name=Get Incoming Documents;
                      CaptionML=[ENU=Get Incoming Documents;
                                 ENG=Get Incoming Documents];
                      Promoted=Yes;
                      Visible=UseIncomingDocuments;
                      PromotedIsBig=Yes;
                      Image=TransferToGeneralJournal;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 GetIncomingDocuments;
                               END;
                                }
      { 9062232 ;1   ;Action    ;
                      Name=Import From Camera;
                      CaptionML=[ENU=Import From Camera;
                                 ENG=Import From Camera];
                      Promoted=Yes;
                      Visible=CameraAvailable;
                      PromotedIsBig=Yes;
                      Image=Camera;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 GetDocumentFromCamera;
                               END;
                                }
      { 1000000026;1 ;Action    ;
                      Name=Read Documents;
                      CaptionML=[ENU=Read Documents;
                                 ENG=Read Documents];
                      ToolTipML=[ENU=Read Documents will OCR all scanned documents from the "Invoice Scanning Folder" and create an invoice matching line for each recognised document.;
                                 ENG=Read Documents will OCR all scanned documents from the "Invoice Scanning Folder" and create an invoice matching line for each recognised document.];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ViewPage;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 FileManagement@1000000000 : Codeunit 419;
                                 OCR@1000000001 : Codeunit 9062426;
                                 SessionId@1000000002 : Integer;
                                 Selection@1000000003 : Integer;
                                 Dialog@1000000004 : Dialog;
                                 WorkflowInterface@1000000005 : Codeunit 9062262;
                                 UserSetup@1000000006 : Record 91;
                                 NotifyContact@1000000007 : Code[30];
                                 SysBehaviour@1000000008 : Record 9062230;
                                 Obj@1000000013 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Object";
                                 Folder@1000000012 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Directory";
                                 Lst@1000000011 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Collections.Generic.List`1";
                                 File@1000000010 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.File";
                                 Path@1000000009 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Path";
                               BEGIN
                                 Action_ReadInvoices();
                               END;
                                }
      { 1000000018;1 ;Action    ;
                      Name=Match Lines;
                      ShortCutKey=F9;
                      CaptionML=[ENU=Match Lines;
                                 ENG=Match Lines];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ApplyEntries;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 Action_MatchLines();
                               END;
                                }
      { 1000000008;1 ;Action    ;
                      Name=Carry Out Actions;
                      CaptionML=[ENU=Carry Out Actions;
                                 ENG=Carry Out Actions];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=CarryOutActionMessage;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 Action_CarryOutActions();
                               END;
                                }
      { 1000000017;1 ;Action    ;
                      Name=Import Invoice Lines;
                      CaptionML=[ENU=Import Invoice Lines;
                                 ENG=Import Invoice Lines];
                      Promoted=Yes;
                      Visible=FALSE;
                      PromotedIsBig=Yes;
                      Image=Import;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 Action_ImportInvoiceLines()
                               END;
                                }
      { 1000000016;1 ;Action    ;
                      Name=Create MISC Invoices;
                      CaptionML=[ENU=Create MISC Invoices;
                                 ENG=Create MISC Invoices];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Invoice;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 Action_CreateMISCInvoices();
                               END;
                                }
      { 1000000012;1 ;Action    ;
                      Name=Post Matched Invoices;
                      CaptionML=[ENU=Post Matched Invoices;
                                 ENG=Post Matched Invoices];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostOrder;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 Action_PostMatchedInvoices();
                               END;
                                }
      { 1000000023;1 ;Action    ;
                      Name=Preview Document;
                      CaptionML=[ENU=Preview Document;
                                 ENG=Preview Document];
                      Promoted=Yes;
                      Visible=False;
                      PromotedIsBig=Yes;
                      Image=PreviewChecks;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 Action_PreviewDocument();
                               END;
                                }
      { 1000000027;1 ;Action    ;
                      Name=Setup;
                      CaptionML=[ENU=Setup;
                                 ENG=Setup];
                      RunObject=Page 9063064;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ServiceSetup;
                      PromotedCategory=Process }
    }
  }
  CONTROLS
  {
    { 1000000000;0;Container;
                ContainerType=ContentArea }

    { 1000000001;1;Group  ;
                Name=General;
                CaptionML=[ENU=General;
                           ENG=General];
                GroupType=Group }

    { 1000000002;2;Field  ;
                SourceExpr=Code }

    { 1000000003;2;Field  ;
                SourceExpr=Description }

    { 1000000013;2;Group  ;
                CaptionML=[ENU=Created;
                           ENG=Created];
                GroupType=Group }

    { 1000000004;3;Field  ;
                SourceExpr="Date Created";
                Importance=Additional }

    { 1000000005;3;Field  ;
                SourceExpr="Created By";
                Importance=Additional }

    { 1000000019;3;Field  ;
                CaptionML=[ENU=Scanning Folder;
                           ENG=Scanning Folder];
                SourceExpr="Invoice Scaning Folder";
                Importance=Additional;
                OnDrillDown=VAR
                              FileManagement@1000000000 : Codeunit 419;
                              SysBehaviour@1000000001 : Record 9062230;
                              eTitle@1000000002 : TextConst 'ENU=Purchase Invoice Folder';
                            BEGIN
                              "Invoice Scaning Folder" := FileManagement.BrowseForFolderDialog(eTitle,SysBehaviour.GetText('INV_M_SCAN_FOLDER'),FALSE);
                            END;

                OnAssistEdit=VAR
                               FileManagement@1000000000 : Codeunit 419;
                               SysBehaviour@1000000001 : Record 9062230;
                               eTitle@1000000002 : TextConst 'ENU=Purchase Invoice Folder';
                             BEGIN
                               "Invoice Scaning Folder" := FileManagement.BrowseForFolderDialog(eTitle,SysBehaviour.GetText('INV_M_SCAN_FOLDER'),FALSE);
                             END;
                              }

    { 1000000011;2;Group  ;
                CaptionML=[ENU=Stats;
                           ENG=Stats];
                GroupType=Group }

    { 1000000009;3;Field  ;
                SourceExpr="No. Matched Lines" }

    { 1000000010;3;Field  ;
                SourceExpr="No. UnMatched Lines" }

    { 1000000024;3;Field  ;
                SourceExpr="Batch Total" }

    { 1000000006;1;Part   ;
                SubPageLink=Batch Code=FIELD(Code);
                PagePartID=Page9062574;
                PartType=Page }

    { 1000000025;1;Part   ;
                SubPageLink=Batch Code=FIELD(Batch Code),
                            Batch Line=FIELD(Line No.);
                PagePartID=Page9063058;
                ProviderID=1000000006;
                Visible=FALSE;
                PartType=Page }

    { 1000000014;0;Container;
                ContainerType=FactBoxArea }

    { 9062231;1;Part      ;
                Description=NS2015.1;
                SubPageLink=Table No.=CONST(38),
                            Primary Key Value 1=CONST(2),
                            Primary Key Value 2=FIELD(Alocated Invoice No.);
                PagePartID=Page9063083;
                ProviderID=1000000006;
                Visible=TRUE;
                PartType=Page }

    { 1000000015;1;Part   ;
                SubPageLink=Batch Code=FIELD(Batch Code),
                            Line No.=FIELD(Line No.);
                PagePartID=Page9062575;
                ProviderID=1000000006;
                PartType=Page }

  }
  CODE
  {
    VAR
      ShowPDFDocument@1000000000 : Boolean;
      InvoiceMatchingSetup@9062230 : Record 9062762;
      UseIncomingDocuments@9062231 : Boolean;
      Camera@9062232 : DotNet "'Microsoft.Dynamics.Nav.ClientExtensions, Version=9.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.Capabilities.CameraProvider" WITHEVENTS RUNONCLIENT;
      CameraAvailable@9062233 : Boolean;

    PROCEDURE CheckFiles@1000000000(FolderPath@1000000005 : Text) NoFiles : Integer;
    VAR
      Obj@1000000004 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Object";
      Folder@1000000003 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Directory";
      Lst@1000000002 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Collections.Generic.List`1";
      File@1000000001 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.File";
      Path@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Path";
    BEGIN
      IF FolderPath = '' THEN EXIT(0);

      Obj := Folder.GetFiles(FolderPath,'*.pdf');
      Lst := Lst.List;
      Lst.AddRange(Obj);

      IF Lst.Count > 0 THEN EXIT(Lst.Count) ELSE EXIT(0);
    END;

    LOCAL PROCEDURE Action_ProcessBatch@1000000009();
    VAR
      PurchaseInvoiceMatching@1000000000 : Codeunit 9062349;
    BEGIN
      PurchaseInvoiceMatching.ProcessinvoiceMatchingBatch(Rec,TRUE);
    END;

    LOCAL PROCEDURE Action_ImportInvoiceLines@1000000001();
    BEGIN
    END;

    LOCAL PROCEDURE Action_MatchLines@1000000003();
    BEGIN
      MatchLines(FALSE);
    END;

    LOCAL PROCEDURE Action_PostMatchedInvoices@1000000004();
    BEGIN
      PostInvoices(FALSE);
    END;

    LOCAL PROCEDURE Action_CarryOutActions@1000000005();
    BEGIN
      CarryOutActions(FALSE);
    END;

    LOCAL PROCEDURE Action_ReadInvoices@1000000006();
    VAR
      FileManagement@1000000007 : Codeunit 419;
      OCR@1000000006 : Codeunit 9062426;
      SessionId@1000000005 : Integer;
      Selection@1000000004 : Integer;
      Dialog@1000000003 : Dialog;
      WorkflowInterface@1000000002 : Codeunit 9062262;
      nAblementUser@1000000001 : Record 9062729;
      SysBehaviour@1000000000 : Record 9062230;
      NotifyContact@1000000008 : Code[20];
      eTitle@1000000009 : TextConst 'ENU=Purchase Invoice Folder;ENG=Purchase Invoice Folder';
      eSelectionList@1000000010 : TextConst 'ENU=Read and notify me when finished,Read now;ENG=Read and notify me when finished,Read now';
      eSelectionTitle@1000000011 : TextConst 'ENU=Choose one of the following options:;ENG=Choose one of the following options:';
      eNoFilesFound@1000000012 : TextConst 'ENU=No files found on the scan folder!;ENG=No files found on the scan folder!';
      OCRFolder@1000000013 : Text;
    BEGIN
      //DOC NH2016.16 >>
      OCRFolder := SysBehaviour.GetText('INV_M_SCAN_FOLDER');
      IF ("Invoice Scaning Folder" = '') AND (OCRFolder <> '') THEN
        VALIDATE("Invoice Scaning Folder",OCRFolder);
      //DOC NH2016.16 <<
      IF "Invoice Scaning Folder" = '' THEN
      BEGIN
        "Invoice Scaning Folder" := FileManagement.BrowseForFolderDialog(eTitle,SysBehaviour.GetText('INV_M_SCAN_FOLDER'),FALSE);
      END;

      Selection := STRMENU(eSelectionList,1,eSelectionTitle);

      IF nAblementUser.GET(USERID) THEN NotifyContact := nAblementUser."Contact No.";
      CASE Selection OF
            1: BEGIN
                IF (CheckFiles("Invoice Scaning Folder")>0) THEN
                  STARTSESSION(SessionId, CODEUNIT::"OCR Management",COMPANYNAME, Rec)
                ELSE MESSAGE(eNoFilesFound);
              END;
            2: BEGIN
                 OCR.RUN(Rec)
               END;
            END;

      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE Action_PreviewDocument@1000000007();
    BEGIN
      IF ShowPDFDocument THEN
        ShowPDFDocument := FALSE
      ELSE
        ShowPDFDocument := TRUE;
    END;

    LOCAL PROCEDURE Action_CreateMISCInvoices@1000000008();
    BEGIN
      CreateMISCInv(FALSE);
    END;

    PROCEDURE GetDocumentFromCamera@9062231();
    VAR
      CameraOptions@9062231 : DotNet "'Microsoft.Dynamics.Nav.ClientExtensions, Version=9.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.Capabilities.CameraOptions";
    BEGIN
      IF NOT CameraAvailable THEN
        EXIT;
      CameraOptions := CameraOptions.CameraOptions;
      CameraOptions.AllowEdit := TRUE;
      CameraOptions.Quality := 100;
      Camera.RequestPictureAsync(CameraOptions);
    END;

    EVENT Camera@9062232::PictureAvailable@10(PictureName@9062231 : Text;PictureFilePath@9062230 : Text);
    BEGIN
      ImportFromCamera(PictureName,PictureFilePath);
    END;

    BEGIN
    {
      //DOC NH2015.4  JH 28/12/2014 - System behaviours renamed
      //DOC NH2015.4  JH 09/02/2015 - "File Attachments" part caption changed to standard
      //DOC NH2015.8  AP 03/07/2015 - Moved Action Code  to functions
      //DOC NH2015.8  AP 03/07/2015 - Added Process Batch function
      //DOC NH2015.9  AP 24/07/2015 - Added fields as Additional
      //DOC NH2016.10 JH 01/10/2015 - Upgraded to 2016
      //DOC NH2016.15 JH 25/04/2016 - CfMD amendments
      //DOC NH2016.16 AP 27/05/2016 - Default the Scanning Folder from the Setup
    }
    END.
  }
}

