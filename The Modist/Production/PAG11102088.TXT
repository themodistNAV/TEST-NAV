OBJECT Page 11102088 OM - Where Used In
{
  OBJECT-PROPERTIES
  {
    Date=04/02/15;
    Time=12:00:00 PM;
    Version List=OMA9.05;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[DEU=Where Used In;
               ENU=Where Used In;
               ESP=Where Used In;
               FRA=Where Used In;
               NLD=Waar-gebruikt in;
               DEA=Where Used In];
    SourceTable=Table11102061;
    PageType=List;
    PromotedActionCategoriesML=ENU=New,Process,Report,Object,Debugger,Where-Used;
    OnOpenPage=VAR
                 ctRunFormWithTemporaryTable@1000 : TextConst 'DEU=Form can only be run with temporary table.;ENU=Form can only be run with temporary table.;ESP=Form can only be run with temporary table.;FRA=Form can only be run with temporary table.;NLD=Form kan alleen geopend worden met een tijdelijke tabel.;DEA=Form can only be run with temporary table.';
               BEGIN
                 IF NOT ISEMPTY THEN
                   ERROR(ctRunFormWithTemporaryTable);

                 FILTERGROUP(2);
                 ViewType := ViewType::"Object Entry No.";
                 ObjectEntryNo := GETRANGEMIN("Object Entry No.");
                 ValidationFilter := GETFILTER(Validation);
                 FILTERGROUP(0);

                 RebuildRecordset;
               END;

    OnAfterGetRecord=BEGIN
                       Breakpoint := HasBreakPoint;
                     END;

    OnAfterGetCurrRecord=BEGIN
                           CALCFIELDS("Object Type", "Object No.");
                           CALCFIELDS(Name, "Object Name", "Version List", Caption);
                         END;

    ActionList=ACTIONS
    {
      { 1       ;0   ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 2       ;1   ;ActionGroup;
                      CaptionML=[DEU=F&unctions;
                                 ENU=F&unctions;
                                 ESP=F&unctions;
                                 FRA=F&unctions;
                                 NLD=F&uncties;
                                 DEA=F&unctions] }
      { 3       ;2   ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[DEU=Card;
                                 ENU=Card;
                                 ESP=Card;
                                 FRA=Card;
                                 NLD=Kaart;
                                 DEA=Card];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=EditLines;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 WhereUsedObject@1000 : Record 11102057;
                                 WhereUsedObjectCard@1001 : Page 11102085;
                               BEGIN
                                 WhereUsedObject.SETRANGE("Object Type", "Object Type");
                                 WhereUsedObject.SETRANGE("Object No.", "Object No.");

                                 WhereUsedObjectCard.SETTABLEVIEW(WhereUsedObject);
                                 WhereUsedObjectCard.RUN;
                               END;
                                }
      { 4       ;2   ;Action    ;
                      ShortCutKey=F5;
                      CaptionML=[DEU=Re&fresh;
                                 ENU=Re&fresh;
                                 ESP=Re&fresh;
                                 FRA=Re&fresh;
                                 NLD=Vernieuwen;
                                 DEA=Re&fresh];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Refresh;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 RebuildRecordset;
                               END;
                                }
      { 5       ;2   ;Action    ;
                      CaptionML=[DEU=Calculate Variable &Usage;
                                 ENU=Calculate Variable &Usage;
                                 ESP=Calculate Variable &Usage;
                                 FRA=Calculate Variable &Usage;
                                 NLD=Variabelen&gebruik berekenen;
                                 DEA=Calculate Variable &Usage];
                      Image=Calculate;
                      OnAction=VAR
                                 TmpWhereUsedObject@1000 : TEMPORARY Record 11102057;
                                 WhereUsedObject@1001 : Record 11102057;
                                 WhereUsedIn@1002 : Record 11102060;
                                 WhereUsedCrossTable@1003 : Record 11102061;
                                 Object@1004 : Record 2000000001;
                                 Progressbar@1005 : Codeunit 11102044;
                                 WhereUsedMgt@1006 : Codeunit 11102045;
                                 ctCalculatingVariableUsage@1007 : TextConst 'DEU=Calculating variable usage...;ENU=Calculating variable usage...;ESP=Calculating variable usage...;FRA=Calculating variable usage...;NLD=Variabelegebruik berekenen...;DEA=Calculating variable usage...';
                               BEGIN
                                 WhereUsedCrossTable := Rec;
                                 WhereUsedCrossTable.COPYFILTERS(Rec);

                                 CurrPage.SETSELECTIONFILTER(Rec);
                                 IF FINDSET THEN
                                   REPEAT
                                     IF WhereUsedIn.GET("In Entry No.") THEN
                                       IF WhereUsedObject.GET(WhereUsedIn."Object Type", WhereUsedIn."Object No.") THEN
                                         IF NOT WhereUsedObject."Variable Usage Calculated" THEN
                                           IF NOT TmpWhereUsedObject.GET(WhereUsedObject."Object Type", WhereUsedObject."Object No.") THEN BEGIN
                                             TmpWhereUsedObject := WhereUsedObject;
                                             TmpWhereUsedObject.INSERT;
                                           END;

                                   UNTIL NEXT = 0;

                                 CLEARMARKS;
                                 MARKEDONLY(FALSE);
                                 COPYFILTERS(WhereUsedCrossTable);
                                 Rec := WhereUsedCrossTable;

                                 Progressbar.Open(ctCalculatingVariableUsage, 1);
                                 Progressbar.BarSize := TmpWhereUsedObject.COUNT;

                                 IF TmpWhereUsedObject.FINDSET THEN
                                   REPEAT

                                     Progressbar.AddToBar(1);

                                     IF Object.GET(TmpWhereUsedObject."Object Type", '', TmpWhereUsedObject."Object No.") THEN BEGIN
                                       Progressbar.Text1Object := Object;

                                       WhereUsedMgt.SetRunType(2, Object, TRUE);
                                       WhereUsedMgt.RUN;

                                       COMMIT;
                                     END;

                                   UNTIL TmpWhereUsedObject.NEXT = 0;

                                 Progressbar.Close;

                                 RebuildRecordset;
                               END;
                                }
      { 6       ;2   ;Separator  }
      { 7       ;2   ;Action    ;
                      CaptionML=[DEU=Show in MenuSuite &Viewer;
                                 ENU=Show in MenuSuite &Viewer;
                                 ESP=Show in MenuSuite &Viewer;
                                 FRA=Show in MenuSuite &Viewer;
                                 NLD=In MenuSuite Viewer tonen;
                                 DEA=Show in MenuSuite &Viewer];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=SetupList;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 ShowMenuSuite;
                               END;
                                }
      { 8       ;2   ;Action    ;
                      ShortCutKey=Alt+F2;
                      CaptionML=[DEU=&What Used In;
                                 ENU=&What Used In;
                                 ESP=&What Used In;
                                 FRA=&What Used In;
                                 NLD=Wat gebruikt in;
                                 DEA=&What Used In];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=AnalysisView;
                      PromotedCategory=Category6;
                      OnAction=VAR
                                 WhereUsedMgt@1000 : Codeunit 11102045;
                               BEGIN
                                 WhereUsedMgt.WhatUsedInCALLine("Object Type", "Object No.", "C/AL Code Line No.", "C/AL Code Line No.");

                                 RebuildRecordset;
                               END;
                                }
      { 9       ;2   ;Action    ;
                      ShortCutKey=Ctrl+T;
                      CaptionML=[DEU=Edit in External Editor;
                                 ENU=Edit in External Editor;
                                 ESP=Edit in External Editor;
                                 FRA=Edit in External Editor;
                                 NLD=In externe &editor wijzigen;
                                 DEA=Edit in External Editor];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=DocumentEdit;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 WhereUsedObject@1000 : Record 11102057;
                                 WhereUsedIn@1001 : Record 11102060;
                                 WhereUsedCrossTable@1002 : Record 11102061;
                                 Object@1003 : Record 2000000001;
                                 TmpObject@1004 : TEMPORARY Record 2000000001;
                                 Progressbar@1005 : Codeunit 11102044;
                                 WhereUsedMgt@1006 : Codeunit 11102045;
                                 WhereUsedStatus@1007 : Codeunit 11102047;
                                 SourceControl@1008 : Codeunit 11102050;
                                 ctUpdateObjectLines@1009 : TextConst 'DEU=Updating Where Used Objects...;ENU=Updating Where Used Objects...;ESP=Updating Where Used Objects...;FRA=Updating Where Used Objects...;NLD=Waar-gebruikt objecten bijwerken...;DEA=Updating Where Used Objects...';
                                 ctUpdateWhereUsedIn@1010 : TextConst 'DEU=Updating Where Used In...;ENU=Updating Where Used In...;ESP=Updating Where Used In...;FRA=Updating Where Used In...;NLD=Waar-gebruikt in bijwerken...;DEA=Updating Where Used In...';
                                 ctUpdatingObject@1011 : TextConst 'DEU=Update object...;ENU=Update object...;ESP=Update object...;FRA=Update object...;NLD=Object opslaan...;DEA=Update object...';
                               BEGIN
                                 WhereUsedCrossTable := Rec;
                                 WhereUsedCrossTable.COPYFILTERS(Rec);

                                 CurrPage.SETSELECTIONFILTER(Rec);
                                 IF FINDSET THEN
                                   REPEAT
                                     IF WhereUsedIn.GET("In Entry No.") THEN
                                       IF Object.GET(WhereUsedIn."Object Type", '', WhereUsedIn."Object No.") THEN
                                         IF NOT TmpObject.GET(Object.Type, '', Object.ID) THEN BEGIN
                                           TmpObject := Object;
                                           TmpObject.INSERT;
                                         END;
                                   UNTIL NEXT = 0;

                                 CLEARMARKS;
                                 MARKEDONLY(FALSE);
                                 COPYFILTERS(WhereUsedCrossTable);
                                 Rec := WhereUsedCrossTable;

                                 IF SourceControl.EditObjectRange(TmpObject) THEN BEGIN

                                   Progressbar.Open('', 1);
                                   Progressbar.BarSize := 3 * TmpObject.COUNT + 1;

                                   IF TmpObject.FINDSET THEN
                                     REPEAT
                                       Progressbar.AddToBar(1);
                                       Progressbar.Text1 := ctUpdatingObject;

                                       IF Object.GET(TmpObject.Type, '', TmpObject.ID) THEN
                                         SourceControl.AddObject(Object, 0, FALSE, FALSE, 1, FALSE);
                                     UNTIL TmpObject.NEXT = 0;

                                   IF TmpObject.FINDSET THEN
                                     REPEAT
                                       Progressbar.Text1 := ctUpdateObjectLines;
                                       Progressbar.AddToBar(1);
                                       WhereUsedMgt.FillEntryNos;
                                       IF Object.GET(TmpObject.Type, '', TmpObject.ID) THEN
                                         WhereUsedMgt.UpdateObjectLines(Object);
                                     UNTIL TmpObject.NEXT = 0;

                                   IF TmpObject.FINDSET THEN BEGIN
                                     Progressbar.Text1 := ctUpdateWhereUsedIn;
                                     Progressbar.AddToBar(1);
                                     REPEAT
                                       IF Object.GET(TmpObject.Type, '', TmpObject.ID) THEN
                                         WhereUsedMgt.UpdateWhereInOfObject(Object);
                                     UNTIL TmpObject.NEXT = 0;
                                   END;

                                   COMMIT;

                                   IF WhereUsedStatus.SqlsAnswer <> '1' THEN
                                     IF TmpObject.FINDSET THEN
                                       REPEAT
                                         IF WhereUsedObject.GET(TmpObject.Type, TmpObject.ID) THEN BEGIN
                                           WhereUsedObject.Status := WhereUsedObject.Status::"Lines Updated";
                                           WhereUsedObject."Variable Usage Calculated" := FALSE;
                                           WhereUsedObject.MODIFY;
                                         END;
                                       UNTIL TmpObject.NEXT = 0;

                                   Progressbar.Text1 := ctUpdateWhereUsedIn;
                                   Progressbar.AddToBar(1);

                                   RebuildRecordset;

                                   Progressbar.Close;
                                 END;
                               END;
                                }
      { 10      ;2   ;Separator  }
      { 11      ;2   ;Action    ;
                      ShortCutKey=Ctrl+F2;
                      CaptionML=[DEU=Design;
                                 ENU=Design;
                                 ESP=Design;
                                 FRA=Design;
                                 NLD=Design;
                                 DEA=Design];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Design;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 Object@1000 : Record 2000000001;
                                 ObjectMgt@1001 : Codeunit 11102046;
                               BEGIN
                                 Object.GET("Object Type", '', "Object No.");
                                 ObjectMgt.DesignObject(Object);
                               END;
                                }
      { 12      ;2   ;Action    ;
                      ShortCutKey=Ctrl+R;
                      CaptionML=[DEU=Run;
                                 ENU=Run;
                                 ESP=Run;
                                 FRA=Run;
                                 NLD=Run;
                                 DEA=Run];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Start;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 Object@1000 : Record 2000000001;
                                 ObjectMgt@1001 : Codeunit 11102046;
                               BEGIN
                                 Object.GET("Object Type", '', "Object No.");
                                 ObjectMgt.RunObject(Object);
                               END;
                                }
      { 40      ;2   ;Action    ;
                      CaptionML=[DEU=Navigate;
                                 ENU=Navigate;
                                 ESP=Navigate;
                                 FRA=Navigate;
                                 NLD=Navigeren;
                                 DEA=Navigate];
                      Image=Navigate;
                      OnAction=VAR
                                 Object@1000 : Record 2000000001;
                                 ObjectMgt@1001 : Codeunit 11102046;
                               BEGIN
                                 Object.GET("Object Type", '', "Object No.");
                                 ObjectMgt.Navigate(Object);
                               END;
                                }
      { 13      ;2   ;Action    ;
                      ShortCutKey=Shift+Ctrl+H;
                      CaptionML=[DEU=C/AL &History;
                                 ENU=C/AL &History;
                                 ESP=C/AL &History;
                                 FRA=C/AL &History;
                                 NLD=C/AL Historie;
                                 DEA=C/AL &History];
                      RunObject=Page 11102072;
                      RunPageView=SORTING(Object Type,Object No.);
                      RunPageLink=Object Type=FIELD(Object Type),
                                  Object No.=FIELD(Object No.);
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=History;
                      PromotedCategory=Process }
      { 14      ;2   ;Separator  }
      { 15      ;2   ;ActionGroup;
                      CaptionML=[DEU=Mark Objects;
                                 ENU=Mark Objects;
                                 ESP=Mark Objects;
                                 FRA=Mark Objects;
                                 NLD=Objecten markeren;
                                 DEA=Mark Objects];
                      Image=EditFilter }
      { 16      ;3   ;Action    ;
                      ShortCutKey=Ctrl+M;
                      CaptionML=[DEU=Mark Objects;
                                 ENU=Mark Objects;
                                 ESP=Mark Objects;
                                 FRA=Mark Objects;
                                 NLD=Objecten markeren;
                                 DEA=Mark Objects];
                      Image=EditFilter;
                      OnAction=VAR
                                 WhereUsedIn@1000 : Record 11102060;
                                 WhereUsedCrossTable@1001 : Record 11102061;
                                 Object@1002 : Record 2000000001;
                                 VersionControl@1003 : Codeunit 11102040;
                               BEGIN
                                 VersionControl.CheckMarkLock;

                                 WhereUsedCrossTable := Rec;
                                 WhereUsedCrossTable.COPYFILTERS(Rec);

                                 CurrPage.SETSELECTIONFILTER(Rec);
                                 IF FINDSET THEN
                                   REPEAT
                                     IF WhereUsedIn.GET("In Entry No.") THEN
                                       IF Object.GET(WhereUsedIn."Object Type", '', WhereUsedIn."Object No.") THEN
                                         VersionControl.MarkObject(Object, TRUE);
                                   UNTIL NEXT = 0;

                                 CLEARMARKS;
                                 MARKEDONLY(FALSE);
                                 COPYFILTERS(WhereUsedCrossTable);
                                 Rec := WhereUsedCrossTable;
                               END;
                                }
      { 17      ;3   ;Action    ;
                      CaptionML=[DEU=Remove Marks;
                                 ENU=Remove Marks;
                                 ESP=Remove Marks;
                                 FRA=Remove Marks;
                                 NLD=Verwijder markeringen;
                                 DEA=Remove Marks];
                      Image=RemoveFilterLines;
                      OnAction=VAR
                                 WhereUsedIn@1000 : Record 11102060;
                                 WhereUsedCrossTable@1001 : Record 11102061;
                                 Object@1002 : Record 2000000001;
                                 VersionControl@1003 : Codeunit 11102040;
                               BEGIN
                                 WhereUsedCrossTable := Rec;
                                 WhereUsedCrossTable.COPYFILTERS(Rec);

                                 CurrPage.SETSELECTIONFILTER(Rec);
                                 IF FINDSET THEN
                                   REPEAT
                                     IF WhereUsedIn.GET("In Entry No.") THEN
                                       IF Object.GET(WhereUsedIn."Object Type", '', WhereUsedIn."Object No.") THEN
                                         VersionControl.RemoveObjectMark(Object);
                                   UNTIL NEXT = 0;

                                 CLEARMARKS;
                                 MARKEDONLY(FALSE);
                                 COPYFILTERS(WhereUsedCrossTable);
                                 Rec := WhereUsedCrossTable;

                                 VersionControl.RemoveMarkLock(TRUE);
                               END;
                                }
      { 18      ;3   ;Action    ;
                      ShortCutKey=Shift+Ctrl+M;
                      CaptionML=[DEU=Remove &all Marks;
                                 ENU=Remove &all Marks;
                                 ESP=Remove &all Marks;
                                 FRA=Remove &all Marks;
                                 NLD=Verwijder &alle markeringen;
                                 DEA=Remove &all Marks];
                      Image=ClearFilter;
                      OnAction=VAR
                                 VersionControl@1000 : Codeunit 11102040;
                               BEGIN
                                 VersionControl.RemoveObjectMarks(FALSE);
                               END;
                                }
      { 19      ;2   ;Separator  }
      { 20      ;2   ;Action    ;
                      ShortCutKey=Ctrl+D;
                      CaptionML=[DEU=&Code;
                                 ENU=&Code;
                                 ESP=&Code;
                                 FRA=&Code;
                                 NLD=&Code;
                                 DEA=&Code];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=DesignCodeBehind;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 WhereUsedIn@1000 : Record 11102060;
                                 WhereUsedCrossTable@1001 : Record 11102061;
                                 Object@1002 : Record 2000000001;
                                 TmpObject@1003 : TEMPORARY Record 2000000001;
                               BEGIN
                                 WhereUsedCrossTable := Rec;
                                 WhereUsedCrossTable.COPYFILTERS(Rec);

                                 CurrPage.SETSELECTIONFILTER(Rec);
                                 IF FINDSET THEN
                                   REPEAT
                                     IF WhereUsedIn.GET("In Entry No.") THEN
                                       IF Object.GET(WhereUsedIn."Object Type", '', WhereUsedIn."Object No.") THEN
                                         IF NOT TmpObject.GET(Object.Type, '', Object.ID) THEN BEGIN
                                           TmpObject := Object;
                                           TmpObject.INSERT;
                                         END;
                                   UNTIL NEXT = 0;

                                 CLEARMARKS;
                                 MARKEDONLY(FALSE);
                                 COPYFILTERS(WhereUsedCrossTable);
                                 Rec := WhereUsedCrossTable;

                                 ShowCode(TmpObject, ValidationFilter);
                               END;
                                }
      { 21      ;2   ;Action    ;
                      ShortCutKey=Ctrl+W;
                      CaptionML=[DEU=Where U&sed;
                                 ENU=Where U&sed;
                                 ESP=Where U&sed;
                                 FRA=Where U&sed;
                                 NLD=Waar-&gebruikt;
                                 DEA=Where U&sed];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Where-Used;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 ShowWhereUsed;
                               END;
                                }
      { 22      ;2   ;Separator  }
      { 23      ;2   ;Action    ;
                      CaptionML=[DEU=Debug;
                                 ENU=Debug;
                                 ESP=Debug;
                                 FRA=Debug;
                                 NLD=Foutopsporing;
                                 DEA=Debug];
                      RunObject=Codeunit 11102065;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Debug;
                      PromotedCategory=Category5 }
      { 24      ;2   ;Action    ;
                      ShortCutKey=F9;
                      CaptionML=[DEU=Toggle Breakpoint;
                                 ENU=Toggle Breakpoint;
                                 ESP=Toggle Breakpoint;
                                 FRA=Toggle Breakpoint;
                                 NLD=Onderbrekingspunt in/uitschakelen;
                                 DEA=Toggle Breakpoint];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ToggleBreakpoint;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 TmpWhereUsedCrossTable@1000 : TEMPORARY Record 11102061;
                                 WhereUsedCrossTable@1001 : Record 11102061;
                                 SetBreakPoint@1002 : Boolean;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(Rec);

                                 WhereUsedCrossTable := Rec;
                                 WhereUsedCrossTable.COPYFILTERS(Rec);

                                 SetBreakPoint := NOT HasBreakPoint;

                                 IF FINDSET THEN
                                   REPEAT
                                     TmpWhereUsedCrossTable := Rec;
                                     TmpWhereUsedCrossTable.INSERT;
                                   UNTIL NEXT = 0;
                                 CLEARMARKS;
                                 MARKEDONLY(FALSE);
                                 COPYFILTERS(WhereUsedCrossTable);
                                 Rec := WhereUsedCrossTable;

                                 WITH TmpWhereUsedCrossTable DO
                                   IF FINDSET THEN
                                     REPEAT

                                       CALCFIELDS("Object Type", "Object No.");

                                       BreakPointBuffer.RESET;
                                       BreakPointBuffer.SETRANGE("Object Type", "Object Type");
                                       BreakPointBuffer.SETRANGE("Object No.", "Object No.");
                                       BreakPointBuffer.SETRANGE("C/AL Line No.", "C/AL Code Line No.");
                                       IF NOT BreakPointBuffer.FINDFIRST THEN BEGIN
                                         BreakPointBufferEntryNo += 1;
                                         BreakPointBuffer."Entry No." := BreakPointBufferEntryNo;
                                         BreakPointBuffer."Object Type" := "Object Type";
                                         BreakPointBuffer."Object No." := "Object No.";
                                         BreakPointBuffer."C/AL Line No." := "C/AL Code Line No.";
                                         BreakPointBuffer.INSERT;
                                       END;

                                       IF SetBreakPoint THEN BEGIN
                                         DebugMgt.InsertBreakpoint("Object Type", "Object No.", "C/AL Code Line No.");
                                         BreakPointBuffer.Used := TRUE;
                                       END ELSE BEGIN
                                         DebugMgt.DeleteBreakpoint("Object Type", "Object No.", "C/AL Code Line No.");
                                         BreakPointBuffer.Used := FALSE;
                                       END;
                                       BreakPointBuffer.MODIFY;

                                     UNTIL NEXT = 0;

                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 25      ;2   ;Action    ;
                      ShortCutKey=Shift+Ctrl+F9;
                      CaptionML=[DEU=Remove Breakpoints;
                                 ENU=Remove Breakpoints;
                                 ESP=Remove Breakpoints;
                                 FRA=Remove Breakpoints;
                                 NLD=Onderbrekingspunten verwijderen;
                                 DEA=Remove Breakpoints];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=DeleteAllBreakpoints;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 DebugMgt.RemoveAllBreakpoints;
                                 BreakPointBuffer.DELETEALL;
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 26      ;2   ;Action    ;
                      CaptionML=[DEU=Set Breakpoint User;
                                 ENU=Set Breakpoint User;
                                 ESP=Set Breakpoint User;
                                 FRA=Set Breakpoint User;
                                 NLD=Zet Onderbrekingspunt gebruiker;
                                 DEA=Set Breakpoint User];
                      Image=BreakRulesOn;
                      OnAction=BEGIN
                                 DebugMgt.SetUser;
                                 BreakPointBuffer.RESET;
                                 BreakPointBuffer.DELETEALL;
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 27  ;0   ;Container ;
                ContainerType=ContentArea }

    { 28  ;1   ;Group     ;
                GroupType=Repeater }

    { 29  ;2   ;Field     ;
                DrillDown=No;
                SourceExpr="Object Type" }

    { 30  ;2   ;Field     ;
                DrillDown=No;
                SourceExpr="Object No." }

    { 31  ;2   ;Field     ;
                DrillDown=No;
                CaptionML=[DEU=Object Name;
                           ENU=Object Name;
                           ESP=Object Name;
                           FRA=Object Name;
                           NLD=Objectnaam;
                           DEA=Object Name];
                SourceExpr=ObjectName }

    { 32  ;2   ;Field     ;
                CaptionML=[DEU=Caption;
                           ENU=Caption;
                           ESP=Caption;
                           FRA=Caption;
                           NLD=Caption;
                           DEA=Caption];
                SourceExpr=ObjectCaption;
                Visible=FALSE }

    { 33  ;2   ;Field     ;
                CaptionML=[DEU=Version List;
                           ENU=Version List;
                           ESP=Version List;
                           FRA=Version List;
                           NLD=Versielijst;
                           DEA=Version List];
                SourceExpr=VersionList;
                Visible=FALSE }

    { 34  ;2   ;Field     ;
                DrillDown=No;
                SourceExpr=Type }

    { 35  ;2   ;Field     ;
                DrillDown=No;
                SourceExpr=Name }

    { 36  ;2   ;Field     ;
                CaptionML=[DEU=Breakpoint;
                           ENU=Breakpoint;
                           ESP=Breakpoint;
                           FRA=Breakpoint;
                           NLD=Breakpoint;
                           DEA=Breakpoint];
                SourceExpr=Breakpoint }

    { 37  ;2   ;Field     ;
                SourceExpr="Temporary Record" }

    { 38  ;2   ;Field     ;
                SourceExpr=Validation;
                Visible=FALSE }

    { 39  ;2   ;Field     ;
                CaptionML=[DEU=C/AL Code;
                           ENU=C/AL Code;
                           ESP=C/AL Code;
                           FRA=C/AL Code;
                           NLD=C/AL Code;
                           DEA=C/AL Code];
                SourceExpr=CALCode;
                OnValidate=BEGIN
                             PAGE.RUN(PAGE::"Session List");
                           END;
                            }

  }
  CODE
  {
    VAR
      BreakPointBuffer@1000 : TEMPORARY Record 11102062;
      DebugMgt@1001 : Codeunit 11102065;
      ValidationFilter@1002 : Text;
      BreakPointBufferEntryNo@1003 : Integer;
      ObjectEntryNo@1004 : Integer;
      ViewType@1005 : 'Object Entry No.';
      Breakpoint@1006 : Boolean INDATASET;

    LOCAL PROCEDURE RebuildRecordset@1();
    VAR
      TmpWhereUsedIn@1000 : TEMPORARY Record 11102060;
      WhereUsedIn@1001 : Record 11102060;
      WhereUsedCrossTable@1002 : Record 11102061;
      CurrEntryNo@1003 : Integer;
      EntryNo@1004 : Integer;
    BEGIN
      FILTERGROUP(2);
      RESET;
      DELETEALL;
      FILTERGROUP(0);

      CurrEntryNo := "Entry No.";

      CASE ViewType OF

        ViewType::"Object Entry No." :
          BEGIN
            WhereUsedCrossTable.SETCURRENTKEY("Object Entry No.");
            WhereUsedCrossTable.SETRANGE("Object Entry No.", ObjectEntryNo);
            IF ValidationFilter <> '' THEN
              WhereUsedCrossTable.SETFILTER(Validation, ValidationFilter);

            IF WhereUsedCrossTable.FINDSET THEN
              REPEAT
                IF WhereUsedIn.GET(WhereUsedCrossTable."In Entry No.") THEN
                  IF NOT TmpWhereUsedIn.GET(WhereUsedIn."Entry No.") THEN BEGIN
                    TmpWhereUsedIn := WhereUsedIn;
                    TmpWhereUsedIn.INSERT;
                  END;
              UNTIL WhereUsedCrossTable.NEXT = 0;

            TmpWhereUsedIn.SETCURRENTKEY("Object Type", "Object No.", Type, Name);
            IF TmpWhereUsedIn.FINDSET THEN
              REPEAT
                WhereUsedCrossTable.SETCURRENTKEY("Object Entry No.", "In Entry No.");
                WhereUsedCrossTable.SETRANGE("Object Entry No.", ObjectEntryNo);
                WhereUsedCrossTable.SETRANGE("In Entry No.", TmpWhereUsedIn."Entry No.");
                IF WhereUsedCrossTable.FINDSET THEN
                  REPEAT
                    EntryNo += 1;
                    Rec := WhereUsedCrossTable;
                    "Entry No." := EntryNo;
                    INSERT;

                    CheckCALCodeEntryNo;

                  UNTIL WhereUsedCrossTable.NEXT = 0;
              UNTIL TmpWhereUsedIn.NEXT = 0;
          END;

      END;

      IF FINDFIRST THEN
        ;

      IF GET(CurrEntryNo) THEN
        ;
    END;

    LOCAL PROCEDURE HasBreakPoint@2() : Boolean;
    VAR
      BreakPointOfObjectBuffer@1000 : TEMPORARY Record 11102053;
    BEGIN
      BreakPointBuffer.RESET;
      BreakPointBuffer.SETRANGE("Object Type", "Object Type");
      BreakPointBuffer.SETRANGE("Object No.", "Object No.");
      BreakPointBuffer.SETRANGE("C/AL Line No.", "C/AL Code Line No.");
      IF BreakPointBuffer.FINDFIRST THEN
        EXIT(BreakPointBuffer.Used);

      DebugMgt.GetBreakpoints("Object Type", "Object No.", BreakPointOfObjectBuffer);

      BreakPointBufferEntryNo += 1;

      BreakPointBuffer."Entry No." := BreakPointBufferEntryNo;
      BreakPointBuffer."Object Type" := "Object Type";
      BreakPointBuffer."Object No." := "Object No.";
      BreakPointBuffer."C/AL Line No." := "C/AL Code Line No.";
      IF BreakPointOfObjectBuffer.GET(0, "C/AL Code Line No.", 0) THEN
        BreakPointBuffer.Used := TRUE
      ELSE
        BreakPointBuffer.Used := BreakPointOfObjectBuffer.GET(0, "C/AL Code Line No.", 0);

      BreakPointBuffer.INSERT;

      EXIT(BreakPointBuffer.Used);
    END;

    BEGIN
    END.
  }
}

