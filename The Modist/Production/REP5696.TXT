OBJECT Report 5696 Date Compress FA Ledger
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    Permissions=TableData 87=rimd,
                TableData 355=imd,
                TableData 5601=rimd,
                TableData 5617=rimd;
    CaptionML=[ENU=Date Compress FA Ledger;
               ENG=Date Compress FA Ledger];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  DimSelectionBuf.CompareDimText(
                    3,REPORT::"Date Compress FA Ledger",'',RetainDimText,Text012);
                  FALedgEntryFilter := COPYSTR("FA Ledger Entry".GETFILTERS,1,MAXSTRLEN(DateComprReg.Filter));

                  WITH FALedgEntry2 DO BEGIN
                    COPY("FA Ledger Entry");
                    SETRANGE("FA No.");
                    SETRANGE("Depreciation Book Code");
                    IF GETFILTERS <> '' THEN
                      ERROR(
                        Text000,
                        FIELDCAPTION("FA No."),FIELDCAPTION("Depreciation Book Code"));
                    RESET;
                    CLEAR(FALedgEntry2);
                  END;
                END;

  }
  DATASET
  {
    { 9888;    ;DataItem;                    ;
               DataItemTable=Table5601;
               DataItemTableView=SORTING(FA No.,Depreciation Book Code,FA Posting Date);
               OnPreDataItem=VAR
                               GLSetup@1000 : Record 98;
                             BEGIN
                               IF NOT CONFIRM(Text001,FALSE) THEN
                                 CurrReport.BREAK;

                               IF EntrdDateComprReg."Ending Date" = 0D THEN
                                 ERROR(STRSUBSTNO(Text004,EntrdDateComprReg.FIELDCAPTION("Ending Date")));

                               Window.OPEN(
                                 Text005 +
                                 Text006 +
                                 Text007 +
                                 Text008 +
                                 Text009);

                               SourceCodeSetup.GET;
                               SourceCodeSetup.TESTFIELD("Compress FA Ledger");

                               SelectedDim.GetSelectedDim(
                                 USERID,3,REPORT::"Date Compress FA Ledger",'',TempSelectedDim);
                               FADimMgt.GetSelectedDim(TempSelectedDim);
                               GLSetup.GET;
                               Retain[4] :=
                                 TempSelectedDim.GET(
                                   USERID,3,REPORT::"Date Compress FA Ledger",'',GLSetup."Global Dimension 1 Code");
                               Retain[5] :=
                                 TempSelectedDim.GET(
                                   USERID,3,REPORT::"Date Compress FA Ledger",'',GLSetup."Global Dimension 2 Code");

                               NewFALedgEntry.LOCKTABLE;
                               FAReg.LOCKTABLE;
                               DateComprReg.LOCKTABLE;

                               IF FALedgEntry2.FIND('+') THEN;
                               LastEntryNo := FALedgEntry2."Entry No.";
                               SETRANGE("Entry No.",0,LastEntryNo);
                               SETRANGE("FA Posting Date",EntrdDateComprReg."Starting Date",EntrdDateComprReg."Ending Date");

                               InitRegisters;
                             END;

               OnAfterGetRecord=BEGIN
                                  IF "FA No." <> '' THEN BEGIN
                                    IF "FA Posting Category" <> "FA Posting Category"::" " THEN
                                      CurrReport.SKIP;
                                    CASE "FA Posting Type" OF
                                      "FA Posting Type"::"Proceeds on Disposal",
                                      "FA Posting Type"::"Gain/Loss":
                                        CurrReport.SKIP;
                                    END;
                                  END;
                                  FALedgEntry2 := "FA Ledger Entry";
                                  WITH FALedgEntry2 DO BEGIN
                                    SETCURRENTKEY("FA No.","Depreciation Book Code","FA Posting Date");
                                    COPYFILTERS("FA Ledger Entry");

                                    SETRANGE("FA No.","FA No.");
                                    SETRANGE("Depreciation Book Code","Depreciation Book Code");
                                    SETRANGE("FA Posting Category","FA Posting Category");
                                    SETRANGE("FA Posting Type","FA Posting Type");
                                    SETRANGE("Part of Book Value","Part of Book Value");
                                    SETRANGE("Part of Depreciable Basis","Part of Depreciable Basis");
                                    SETRANGE("FA Posting Group","FA Posting Group");
                                    SETRANGE("Document Type","Document Type");

                                    SETFILTER("FA Posting Date",DateComprMgt.GetDateFilter("FA Posting Date",EntrdDateComprReg,TRUE));

                                    LastEntryNo := LastEntryNo + 1;

                                    NewFALedgEntry.INIT;
                                    NewFALedgEntry."Entry No." := LastEntryNo;
                                    NewFALedgEntry."FA No." := "FA No.";
                                    NewFALedgEntry."Depreciation Book Code" := "Depreciation Book Code";
                                    NewFALedgEntry."FA Posting Category" := "FA Posting Category";
                                    NewFALedgEntry."FA Posting Type" := "FA Posting Type";
                                    NewFALedgEntry."Part of Book Value" := "Part of Book Value";
                                    NewFALedgEntry."Part of Depreciable Basis" := "Part of Depreciable Basis";
                                    NewFALedgEntry."FA Posting Group" := "FA Posting Group";
                                    NewFALedgEntry."Document Type" := "Document Type";
                                    NewFALedgEntry."FA Posting Date" := GETRANGEMIN("FA Posting Date");
                                    NewFALedgEntry."Posting Date" := GETRANGEMIN("FA Posting Date");
                                    NewFALedgEntry.Description := EntrdFALedgEntry.Description;
                                    NewFALedgEntry."Source Code" := SourceCodeSetup."Compress FA Ledger";
                                    NewFALedgEntry."User ID" := USERID;
                                    Window.UPDATE(1,NewFALedgEntry."FA No.");
                                    Window.UPDATE(2,NewFALedgEntry."FA Posting Date");
                                    DateComprReg."No. of New Records" := DateComprReg."No. of New Records" + 1;
                                    Window.UPDATE(3,DateComprReg."No. of New Records");

                                    IF RetainNo(FIELDNO("Document No.")) THEN BEGIN
                                      SETRANGE("Document No.","Document No.");
                                      NewFALedgEntry."Document No." := "Document No.";
                                    END;
                                    IF RetainNo(FIELDNO("Reclassification Entry")) THEN BEGIN
                                      SETRANGE("Reclassification Entry","Reclassification Entry");
                                      NewFALedgEntry."Reclassification Entry" := "Reclassification Entry";
                                    END;
                                    IF RetainNo(FIELDNO("Index Entry")) THEN BEGIN
                                      SETRANGE("Index Entry","Index Entry");
                                      NewFALedgEntry."Index Entry" := "Index Entry";
                                    END;
                                    IF RetainNo(FIELDNO("Global Dimension 1 Code")) THEN BEGIN
                                      SETRANGE("Global Dimension 1 Code","Global Dimension 1 Code");
                                      NewFALedgEntry."Global Dimension 1 Code" := "Global Dimension 1 Code";
                                    END;
                                    IF RetainNo(FIELDNO("Global Dimension 2 Code")) THEN BEGIN
                                      SETRANGE("Global Dimension 2 Code","Global Dimension 2 Code");
                                      NewFALedgEntry."Global Dimension 2 Code" := "Global Dimension 2 Code";
                                    END;
                                    IF Quantity >= 0 THEN
                                      SETFILTER(Quantity,'>=0')
                                    ELSE
                                      SETFILTER(Quantity,'<0');
                                    FADimMgt.GetFALedgEntryDimID(0,"Dimension Set ID");

                                    IF "FA No." <> '' THEN
                                      FindEqualPostingType(FALedgEntry2);
                                    REPEAT
                                      IF FALedgEntryTmp.GET("Entry No.") OR ("FA No." = '') THEN BEGIN
                                        EqualDim := FADimMgt.TestEqualFALedgEntryDimID("Dimension Set ID");
                                        IF EqualDim THEN
                                          SummarizeEntry(NewFALedgEntry,FALedgEntry2);
                                      END ELSE
                                        EqualDim := FALSE;
                                    UNTIL (NEXT = 0) OR NOT EqualDim;
                                    InsertNewEntry(NewFALedgEntry);
                                  END;

                                  IF DateComprReg."No. Records Deleted" >= NoOfDeleted + 10 THEN BEGIN
                                    NoOfDeleted := DateComprReg."No. Records Deleted";
                                    InsertRegisters(FAReg,DateComprReg);
                                  END;
                                END;

               OnPostDataItem=BEGIN
                                IF DateComprReg."No. Records Deleted" > NoOfDeleted THEN
                                  InsertRegisters(FAReg,DateComprReg);
                              END;

               ReqFilterFields=FA No.,Depreciation Book Code }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   IF EntrdDateComprReg."Ending Date" = 0D THEN
                     EntrdDateComprReg."Ending Date" := TODAY;
                   IF EntrdFALedgEntry.Description = '' THEN
                     EntrdFALedgEntry.Description := Text010;

                   WITH "FA Ledger Entry" DO BEGIN
                     InsertField(FIELDNO("Document No."),FIELDCAPTION("Document No."));
                     InsertField(FIELDNO("Reclassification Entry"),FIELDCAPTION("Reclassification Entry"));
                     InsertField(FIELDNO("Index Entry"),FIELDCAPTION("Index Entry"));
                     InsertField(FIELDNO("Global Dimension 1 Code"),FIELDCAPTION("Global Dimension 1 Code"));
                     InsertField(FIELDNO("Global Dimension 2 Code"),FIELDCAPTION("Global Dimension 2 Code"));
                   END;

                   RetainDimText := DimSelectionBuf.GetDimSelectionText(3,REPORT::"Date Compress FA Ledger",'');
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ENG=Options] }

      { 1   ;2   ;Field     ;
                  CaptionML=[ENU=Starting Date;
                             ENG=Starting Date];
                  SourceExpr=EntrdDateComprReg."Starting Date" }

      { 2   ;2   ;Field     ;
                  CaptionML=[ENU=Ending Date;
                             ENG=Ending Date];
                  SourceExpr=EntrdDateComprReg."Ending Date" }

      { 3   ;2   ;Field     ;
                  CaptionML=[ENU=Period Length;
                             ENG=Period Length];
                  OptionCaptionML=[ENU=Day,Week,Month,Quarter,Year,Period;
                                   ENG=Day,Week,Month,Quarter,Year,Period];
                  SourceExpr=EntrdDateComprReg."Period Length" }

      { 4   ;2   ;Field     ;
                  CaptionML=[ENU=Posting Description;
                             ENG=Posting Description];
                  SourceExpr=EntrdFALedgEntry.Description }

      { 1907651001;2;Group  ;
                  CaptionML=[ENU=Retain Field Contents;
                             ENG=Retain Field Contents] }

      { 5   ;3   ;Field     ;
                  CaptionML=[ENU=Document No.;
                             ENG=Document No.];
                  SourceExpr=Retain[1] }

      { 6   ;3   ;Field     ;
                  CaptionML=[ENU=Reclassification Entry;
                             ENG=Reclassification Entry];
                  SourceExpr=Retain[2] }

      { 7   ;3   ;Field     ;
                  CaptionML=[ENU=Index Entry;
                             ENG=Index Entry];
                  SourceExpr=Retain[3] }

      { 8   ;2   ;Field     ;
                  CaptionML=[ENU=Retain Dimensions;
                             ENG=Retain Dimensions];
                  SourceExpr=RetainDimText;
                  Editable=FALSE;
                  OnAssistEdit=BEGIN
                                 DimSelectionBuf.SetDimSelectionMultiple(3,REPORT::"Date Compress FA Ledger",RetainDimText);
                               END;
                                }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=You may set filters only on %1 and %2.;ENG=You may set filters only on %1 and %2.';
      Text001@1001 : TextConst 'ENU=This batch job deletes entries. Therefore, it is important that you make a backup of the database before you run the batch job.\\Do you want to date compress the entries?;ENG=This batch job deletes entries. Therefore, it is important that you make a backup of the database before you run the batch job.\\Do you want to date compress the entries?';
      Text004@1004 : TextConst 'ENU=%1 must be specified.;ENG=%1 must be specified.';
      Text005@1005 : TextConst 'ENU=Date compressing FA ledger entries...\\;ENG=Date compressing FA ledger entries...\\';
      Text006@1006 : TextConst 'ENU=FA No.               #1##########\;ENG=FA No.               #1##########\';
      Text007@1007 : TextConst 'ENU=Date                 #2######\\;ENG=Date                 #2######\\';
      Text008@1008 : TextConst 'ENU=No. of new entries   #3######\;ENG=No. of new entries   #3######\';
      Text009@1009 : TextConst 'ENU=No. of entries del.  #4######;ENG=No. of entries del.  #4######';
      Text010@1010 : TextConst 'ENU=Date Compressed;ENG=Date Compressed';
      Text011@1011 : TextConst 'ENU=The date compression has been interrupted. Another user changed the table %1.;ENG=The date compression has been interrupted. Another user changed the table %1.';
      Text012@1012 : TextConst 'ENU=Retain Dimensions;ENG=Retain Dimensions';
      SourceCodeSetup@1013 : Record 242;
      DateComprReg@1014 : Record 87;
      EntrdDateComprReg@1015 : Record 87;
      FAReg@1016 : Record 5617;
      EntrdFALedgEntry@1017 : Record 5601;
      NewFALedgEntry@1018 : Record 5601;
      FALedgEntry2@1019 : Record 5601;
      FALedgEntryTmp@1020 : TEMPORARY Record 5601;
      SelectedDim@1021 : Record 369;
      TempSelectedDim@1022 : TEMPORARY Record 369;
      DimSelectionBuf@1023 : Record 368;
      DateComprMgt@1024 : Codeunit 356;
      DimMgt@1025 : Codeunit 408;
      FACheckConsistency@1026 : Codeunit 5606;
      FADimMgt@1027 : Codeunit 5674;
      Window@1028 : Dialog;
      FALedgEntryFilter@1029 : Text[250];
      NoOfFields@1030 : Integer;
      Retain@1031 : ARRAY [10] OF Boolean;
      FieldNumber@1032 : ARRAY [10] OF Integer;
      FieldNameArray@1033 : ARRAY [10] OF Text[100];
      LastEntryNo@1034 : Integer;
      NoOfDeleted@1035 : Integer;
      FARegExists@1036 : Boolean;
      i@1037 : Integer;
      RetainDimText@1038 : Text[250];
      EqualDim@1039 : Boolean;

    LOCAL PROCEDURE InitRegisters@4();
    BEGIN
      IF FAReg.FIND('+') THEN;
      FAReg.INIT;
      FAReg."No." := FAReg."No." + 1;
      FAReg."Creation Date" := TODAY;
      FAReg."Journal Type" := FAReg."Journal Type"::"Fixed Asset";
      FAReg."Source Code" := SourceCodeSetup."Compress FA Ledger";
      FAReg."User ID" := USERID;
      FAReg."From Entry No." := LastEntryNo + 1;

      IF DateComprReg.FINDLAST THEN;
      DateComprReg.INIT;
      DateComprReg."No." := DateComprReg."No." + 1;
      DateComprReg."Table ID" := DATABASE::"FA Ledger Entry";
      DateComprReg."Creation Date" := TODAY;
      DateComprReg."Starting Date" := EntrdDateComprReg."Starting Date";
      DateComprReg."Ending Date" := EntrdDateComprReg."Ending Date";
      DateComprReg."Period Length" := EntrdDateComprReg."Period Length";
      FOR i := 1 TO NoOfFields DO
        IF Retain[i] THEN
          DateComprReg."Retain Field Contents" :=
            COPYSTR(
              DateComprReg."Retain Field Contents" + ',' + FieldNameArray[i],1,
              MAXSTRLEN(DateComprReg."Retain Field Contents"));
      DateComprReg."Retain Field Contents" := COPYSTR(DateComprReg."Retain Field Contents",2);
      DateComprReg.Filter := FALedgEntryFilter;
      DateComprReg."Register No." := FAReg."No.";
      DateComprReg."Source Code" := SourceCodeSetup."Compress FA Ledger";
      DateComprReg."User ID" := USERID;

      FARegExists := FALSE;
      NoOfDeleted := 0;
    END;

    LOCAL PROCEDURE InsertRegisters@1(VAR FAReg@1000 : Record 5617;VAR DateComprReg@1001 : Record 87);
    VAR
      FAReg2@1002 : Record 5617;
    BEGIN
      FAReg."To Entry No." := NewFALedgEntry."Entry No.";

      IF FARegExists THEN BEGIN
        FAReg.MODIFY;
        DateComprReg.MODIFY;
      END ELSE BEGIN
        FAReg.INSERT;
        DateComprReg.INSERT;
        FARegExists := TRUE;
      END;
      FALedgEntry2.RESET;
      IF FALedgEntry2.FIND('+') THEN;
      LastEntryNo := FALedgEntry2."Entry No.";
      COMMIT;

      NewFALedgEntry.LOCKTABLE;
      FAReg.LOCKTABLE;
      DateComprReg.LOCKTABLE;

      IF FALedgEntry2.FIND('+') THEN;
      IF LastEntryNo <> FALedgEntry2."Entry No." THEN
        ERROR(
          Text011,FALedgEntry2.TABLECAPTION);

      IF FAReg2.FINDLAST THEN ;
      IF FAReg."No." <> FAReg2."No." THEN
        ERROR(
          Text011,FAReg.TABLECAPTION);
    END;

    LOCAL PROCEDURE InsertField@2(Number@1000 : Integer;Name@1001 : Text[100]);
    BEGIN
      NoOfFields := NoOfFields + 1;
      FieldNumber[NoOfFields] := Number;
      FieldNameArray[NoOfFields] := Name;
    END;

    LOCAL PROCEDURE RetainNo@3(Number@1000 : Integer) : Boolean;
    BEGIN
      EXIT(Retain[Index(Number)]);
    END;

    LOCAL PROCEDURE Index@6(Number@1000 : Integer) : Integer;
    BEGIN
      FOR i := 1 TO NoOfFields DO
        IF Number = FieldNumber[i] THEN
          EXIT(i);
    END;

    LOCAL PROCEDURE FindEqualPostingType@5(VAR FALedgEntry2@1000 : Record 5601);
    VAR
      FALedgEntry@1001 : Record 5601;
      EqualPostingType@1002 : Boolean;
    BEGIN
      FALedgEntryTmp.DELETEALL;
      WITH FALedgEntry DO BEGIN
        SETCURRENTKEY("FA No.","Depreciation Book Code","FA Posting Date");
        SETRANGE("FA No.",FALedgEntry2."FA No.");
        SETRANGE("Depreciation Book Code",FALedgEntry2."Depreciation Book Code");
        SETRANGE("Entry No.",0,"FA Ledger Entry".GETRANGEMAX("Entry No."));
        GET(FALedgEntry2."Entry No.");
        REPEAT
          EqualPostingType :=
            (FALedgEntry2."FA Posting Category" = "FA Posting Category") AND
            (FALedgEntry2."FA Posting Type" = "FA Posting Type") AND
            (FALedgEntry2."Part of Book Value" = "Part of Book Value") AND
            (FALedgEntry2."Part of Depreciable Basis" = "Part of Depreciable Basis");
          IF EqualPostingType THEN BEGIN
            FALedgEntryTmp."Entry No." := "Entry No.";
            FALedgEntryTmp.INSERT;
          END;
        UNTIL (NEXT = 0) OR NOT EqualPostingType;
      END;
    END;

    LOCAL PROCEDURE SummarizeEntry@7(VAR NewFALedgEntry@1000 : Record 5601;FALedgEntry@1001 : Record 5601);
    BEGIN
      WITH FALedgEntry DO BEGIN
        NewFALedgEntry.Quantity := NewFALedgEntry.Quantity + Quantity;
        NewFALedgEntry.Amount := NewFALedgEntry.Amount + Amount;
        DELETE;
        DateComprReg."No. Records Deleted" := DateComprReg."No. Records Deleted" + 1;
        Window.UPDATE(4,DateComprReg."No. Records Deleted");
      END;
    END;

    LOCAL PROCEDURE InsertNewEntry@23(VAR NewFALedgEntry@1000 : Record 5601);
    VAR
      TempDimBuf@1001 : TEMPORARY Record 360;
      TempDimSetEntry@1004 : TEMPORARY Record 480;
      DimVal@1003 : Record 349;
    BEGIN
      TempDimBuf.DELETEALL;
      FADimMgt.GetDimensions(TempDimBuf);
      IF TempDimBuf.FINDSET THEN
        REPEAT
          DimVal.GET(TempDimBuf."Dimension Code",TempDimBuf."Dimension Value Code");
          TempDimSetEntry."Dimension Code" := TempDimBuf."Dimension Code";
          TempDimSetEntry."Dimension Value Code" := TempDimBuf."Dimension Value Code";
          TempDimSetEntry."Dimension Value ID" := DimVal."Dimension Value ID";
          TempDimSetEntry.INSERT;
        UNTIL TempDimBuf.NEXT = 0;
      NewFALedgEntry."Dimension Set ID" := DimMgt.GetDimensionSetID(TempDimSetEntry);
      NewFALedgEntry.INSERT;
      IF NewFALedgEntry."FA No." <> '' THEN
        FACheckConsistency.SetFAPostingDate(NewFALedgEntry,FALSE);
    END;

    PROCEDURE InitializeRequest@8(StartingDateFrom@1000 : Date;EndingDateFrom@1001 : Date;PeriodLengthFrom@1002 : Option;DescriptionFrom@1003 : Text[50];RetainDimTextFrom@1004 : Text[250]);
    BEGIN
      EntrdDateComprReg."Starting Date" := StartingDateFrom;
      EntrdDateComprReg."Ending Date" := EndingDateFrom;
      EntrdDateComprReg."Period Length" := PeriodLengthFrom;
      EntrdFALedgEntry.Description := DescriptionFrom;
      RetainDimText := RetainDimTextFrom;

      InsertField("FA Ledger Entry".FIELDNO("Reclassification Entry"),"FA Ledger Entry".FIELDCAPTION("Reclassification Entry"));
      InsertField("FA Ledger Entry".FIELDNO("Global Dimension 1 Code"),"FA Ledger Entry".FIELDCAPTION("Global Dimension 1 Code"));
      InsertField("FA Ledger Entry".FIELDNO("Global Dimension 2 Code"),"FA Ledger Entry".FIELDCAPTION("Global Dimension 2 Code"));
    END;

    PROCEDURE SetRetainDocumentNo@9(RetainValue@1000 : Boolean);
    BEGIN
      Retain[1] := RetainValue;
      InsertField("FA Ledger Entry".FIELDNO("Document No."),"FA Ledger Entry".FIELDCAPTION("Document No."));
    END;

    PROCEDURE SetRetainIndexEntry@10(RetainValue@1000 : Boolean);
    BEGIN
      Retain[3] := RetainValue;
      InsertField("FA Ledger Entry".FIELDNO("Index Entry"),"FA Ledger Entry".FIELDCAPTION("Index Entry"));
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

