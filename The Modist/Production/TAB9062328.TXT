OBJECT Table 9062328 Enhanced Field Value
{
  OBJECT-PROPERTIES
  {
    Date=10/05/16;
    Time=12:00:00 PM;
    Version List=NA2016.15;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Enhanced Field Value;
               ENG=Enhanced Field Value];
  }
  FIELDS
  {
    { 1   ;   ;Table No.           ;Integer       ;TableRelation=Object.ID WHERE (Type=CONST(Table));
                                                   CaptionML=[ENU=Table No.;
                                                              ENG=Table No.] }
    { 2   ;   ;Enhanced Field No.  ;Integer       ;TableRelation="Enhanced Field Definition"."Enhanced Field No." WHERE (Table No.=FIELD(Table No.));
                                                   CaptionML=[ENU=Enhanced Field No.;
                                                              ENG=Enhanced Field No.] }
    { 3   ;   ;Position Text       ;Text250       ;OnValidate=BEGIN
                                                                VALIDATE("Primary Key Value 1",COPYSTR(TNPUtils.GetPrimaryKey("Table No.","Position Text",1),1,MAXSTRLEN("Primary Key Value 1")));
                                                                VALIDATE("Primary Key Value 2",COPYSTR(TNPUtils.GetPrimaryKey("Table No.","Position Text",2),1,MAXSTRLEN("Primary Key Value 2")));
                                                                VALIDATE("Primary Key Value 3",COPYSTR(TNPUtils.GetPrimaryKey("Table No.","Position Text",3),1,MAXSTRLEN("Primary Key Value 3")));
                                                                VALIDATE("Primary Key Value 4",COPYSTR(TNPUtils.GetPrimaryKey("Table No.","Position Text",4),1,MAXSTRLEN("Primary Key Value 4")));
                                                                VALIDATE("Primary Key Value 5",COPYSTR(TNPUtils.GetPrimaryKey("Table No.","Position Text",5),1,MAXSTRLEN("Primary Key Value 5")));
                                                              END;

                                                   CaptionML=[ENU=Position Text;
                                                              ENG=Position Text] }
    { 4   ;   ;Primary Key Value 1 ;Text250       ;CaptionML=[ENU=Primary Key Value 1;
                                                              ENG=Primary Key Value 1] }
    { 5   ;   ;Primary Key Value 2 ;Text250       ;CaptionML=[ENU=Primary Key Value 2;
                                                              ENG=Primary Key Value 2] }
    { 6   ;   ;Primary Key Value 3 ;Text250       ;CaptionML=[ENU=Primary Key Value 3;
                                                              ENG=Primary Key Value 3] }
    { 7   ;   ;Primary Key Value 4 ;Text250       ;CaptionML=[ENU=Primary Key Value 4;
                                                              ENG=Primary Key Value 4] }
    { 8   ;   ;Primary Key Value 5 ;Text250       ;CaptionML=[ENU=Primary Key Value 5;
                                                              ENG=Primary Key Value 5] }
    { 9   ;   ;Value as Text       ;Text250       ;OnValidate=BEGIN
                                                                Value := FORMAT("Value as Text");
                                                              END;

                                                   CaptionML=[ENU=Value as Text;
                                                              ENG=Value as Text] }
    { 10  ;   ;Value as Code       ;Code250       ;OnValidate=BEGIN
                                                                Value := FORMAT("Value as Code");
                                                              END;

                                                   CaptionML=[ENU=Value as Code;
                                                              ENG=Value as Code] }
    { 11  ;   ;Value as Integer    ;Integer       ;OnValidate=BEGIN
                                                                Value := FORMAT("Value as Integer");
                                                              END;

                                                   CaptionML=[ENU=Value as Integer;
                                                              ENG=Value as Integer] }
    { 12  ;   ;Value as Decimal    ;Decimal       ;OnValidate=BEGIN
                                                                Value := FORMAT("Value as Decimal");
                                                              END;

                                                   CaptionML=[ENU=Value as Decimal;
                                                              ENG=Value as Decimal] }
    { 13  ;   ;Value as Date       ;Date          ;OnValidate=BEGIN
                                                                Value := FORMAT("Value as Date");
                                                              END;

                                                   CaptionML=[ENU=Value as Date;
                                                              ENG=Value as Date] }
    { 14  ;   ;Value as Time       ;Time          ;OnValidate=BEGIN
                                                                Value := FORMAT("Value as Time");
                                                              END;

                                                   CaptionML=[ENU=Value as Time;
                                                              ENG=Value as Time] }
    { 20  ;   ;Value               ;Text250       ;OnValidate=VAR
                                                                eLength@1000000000 : TextConst 'ENU=Sorry, the maximum length for the Field %1 is %2;ENG=Sorry, the maximum length for the Field %1 is %2';
                                                              BEGIN
                                                                ExtendedFieldMgt.SetValue(Rec);
                                                              END;

                                                   CaptionML=[ENU=Value;
                                                              ENG=Value] }
    { 30  ;   ;Field Name          ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Enhanced Field Definition".Name WHERE (Table No.=FIELD(Table No.),
                                                                                                              Enhanced Field No.=FIELD(Enhanced Field No.)));
                                                   CaptionML=[ENU=Field Name;
                                                              ENG=Field Name];
                                                   Editable=No }
    { 31  ;   ;Field Type          ;Option        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Enhanced Field Definition".Type WHERE (Table No.=FIELD(Table No.),
                                                                                                              Enhanced Field No.=FIELD(Enhanced Field No.)));
                                                   CaptionML=[ENU=Field Type;
                                                              ENG=Field Type];
                                                   OptionCaptionML=[ENU=Text,Code,Integer,Decimal,Date,Time,Boolean,Extended Text,Document,Image,Link,Dynamic Link;
                                                                    ENG=Text,Code,Integer,Decimal,Date,Time,Boolean,Extended Text,Document,Image,Link,Dynamic Link];
                                                   OptionString=Text,Code,Integer,Decimal,Date,Time,Boolean,Extended Text,Document,Image,Link,Dynamic Link;
                                                   Editable=No }
    { 32  ;   ;File                ;BLOB          ;CaptionML=[ENU=File;
                                                              ENG=File] }
    { 33  ;   ;Image               ;BLOB          ;CaptionML=[ENU=Image;
                                                              ENG=Image];
                                                   SubType=Bitmap }
    { 34  ;   ;Extended Text       ;BLOB          ;CaptionML=[ENU=Extended Text;
                                                              ENG=Extended Text];
                                                   SubType=Memo }
    { 35  ;   ;Link                ;Text250       ;CaptionML=[ENU=Link;
                                                              ENG=Link] }
    { 36  ;   ;Display Text        ;Text250       ;CaptionML=[ENU=Display Text;
                                                              ENG=Display Text] }
  }
  KEYS
  {
    {    ;Table No.,Enhanced Field No.,Position Text;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      EnhancedFieldDefinition@1000000002 : Record 9062327;
      TNPUtils@1000000000 : Codeunit 9062229;
      ExtendedFieldMgt@1000000001 : Codeunit 9062298;
      TnpToolkit@1000000003 : Codeunit 9062230;
      tUnknownType@1000000004 : TextConst 'ENU=Can''t get enhanced field value for type "%1".;ENG=Can''t get enhanced field value for type "%1".';

    PROCEDURE GetValueAsText@1000000000() : Text;
    VAR
      TxtExtMgt@1000000003 : Codeunit 9062250;
      InputStream@1000000001 : InStream;
      BigTextValue@1000000000 : BigText;
      TextValue@1000000002 : Text;
    BEGIN
      //DOC NA2016.12
      IF ("Field Type" IN ["Field Type"::"Extended Text", "Field Type"::Text]) THEN BEGIN
        TextValue := TxtExtMgt.GetFullText(DATABASE::"Enhanced Field Value", 20, Rec.GETPOSITION);
        IF (TextValue <> '') THEN
          EXIT(TextValue);
      END;

      EXIT(Value);
    END;

    PROCEDURE GetValue@1000000001(VAR pValue@1000000000 : Variant);
    BEGIN
      //DOC NA2016.14 - Returning value as variant
      //  <> pValue: The target value

      EnhancedFieldDefinition.GET(Rec."Table No.", Rec."Enhanced Field No.");

      CASE (EnhancedFieldDefinition.Type) OF
        EnhancedFieldDefinition.Type::Boolean:
          pValue := (Rec."Value as Integer" = 1);
        EnhancedFieldDefinition.Type::Integer:
          pValue := Rec."Value as Integer";
        EnhancedFieldDefinition.Type::Decimal:
          pValue := Rec."Value as Decimal";
        EnhancedFieldDefinition.Type::Date:
          pValue := Rec."Value as Date";
        EnhancedFieldDefinition.Type::Time:
          pValue := Rec."Value as Time";
        EnhancedFieldDefinition.Type::Code:
          pValue := Rec."Value as Code";
        EnhancedFieldDefinition.Type::Text,
        EnhancedFieldDefinition.Type::"Extended Text",
        EnhancedFieldDefinition.Type::Document,
        EnhancedFieldDefinition.Type::Image,
        EnhancedFieldDefinition.Type::Link,
        EnhancedFieldDefinition.Type::"Dynamic Link":
          pValue := Rec."Value as Text";
        ELSE
          ERROR(tUnknownType, FORMAT(EnhancedFieldDefinition.Type));
      END;
    END;

    PROCEDURE SetValue@1000000002(pValue@1000000000 : Variant);
    BEGIN
      //DOC NA2016.14 - Setting variant value
      //  -> pValue: The value

      EnhancedFieldDefinition.GET(Rec."Table No.", Rec."Enhanced Field No.");

      CASE (EnhancedFieldDefinition.Type) OF
        EnhancedFieldDefinition.Type::Boolean:
          Rec."Value as Integer" := TnpToolkit.IIFInteger(pValue, 1, 0);
        EnhancedFieldDefinition.Type::Integer:
          Rec."Value as Integer" := pValue;
        EnhancedFieldDefinition.Type::Decimal:
          Rec."Value as Decimal" := pValue;
        EnhancedFieldDefinition.Type::Date:
          Rec."Value as Date" := pValue;
        EnhancedFieldDefinition.Type::Time:
          Rec."Value as Time" := pValue;
        EnhancedFieldDefinition.Type::Code:
          Rec."Value as Code" := pValue;
        EnhancedFieldDefinition.Type::Text,
        EnhancedFieldDefinition.Type::"Extended Text",
        EnhancedFieldDefinition.Type::Document,
        EnhancedFieldDefinition.Type::Image,
        EnhancedFieldDefinition.Type::Link,
        EnhancedFieldDefinition.Type::"Dynamic Link":
          Rec."Value as Text" := pValue;
        ELSE
          ERROR(tUnknownType, FORMAT(EnhancedFieldDefinition.Type));
      END;
    END;

    BEGIN
    {
      //DOC NA2015.1  PC 01/03/2013 - Created
      //DOC NA2015.7  AP 26/05/2015 - Added "Boolean,Extended text,Document,Image,Link" to the "Field Type" options
      //DOC NA2015.7  AP 26/05/2015 - Added BLOB fields for File, Image and "Extended Text"
      //DOC NA2015.7  AP 26/05/2015 - Added Link field
      //DOC NA2015.8  JH 13/07/2015 - Versions sorted
      //DOC NA2016.8  JH 27/08/2015 - Upgraded to 2016
      //DOC NA2016.12 AZ 03/12/2015 - GetValueAsText function added
      //DOC NA2016.14 JH 16/03/2016 - "GetValue", "SetValue" functions added
      //DOC NA2016.15 JH 15/04/2016 - CfMD amendments
    }
    END.
  }
}

