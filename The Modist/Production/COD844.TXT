OBJECT Codeunit 844 Cash Flow Wksh.-Register Batch
{
  OBJECT-PROPERTIES
  {
    Date=07/09/12;
    Time=12:00:00 PM;
    Version List=NAVW17.00;
  }
  PROPERTIES
  {
    TableNo=846;
    Permissions=TableData 845=imd;
    OnRun=BEGIN
            CFWkshLine.COPY(Rec);
            Code;
            Rec := CFWkshLine;
          END;

  }
  CODE
  {
    VAR
      Text1002@1002 : TextConst 'ENU=Checking lines        #2######\;ENG=Checking lines         #2######\';
      Text1005@1005 : TextConst 'ENU=Register lines         #3###### @4@@@@@@@@@@@@@;ENG=Register lines         #3###### @4@@@@@@@@@@@@@';
      CFWkshLine@1010 : Record 846;
      LicPermission@1017 : Record 2000000043;
      CFWkshCheckLine@1018 : Codeunit 845;
      Window@1023 : Dialog;
      StartLineNo@1025 : Integer;
      NoOfRecords@1032 : Integer;

    LOCAL PROCEDURE Code@1000();
    VAR
      UpdateAnalysisView@1002 : Codeunit 410;
      Which@1000 : 'Ledger Entries,Budget Entries,Both';
    BEGIN
      WITH CFWkshLine DO BEGIN
        LOCKTABLE;

        IF NOT FIND('=><') THEN BEGIN
          "Line No." := 0;
          COMMIT;
          EXIT;
        END;

        CreateWindow;

        CheckLines;
        RegisterLines;

        DeleteLines;

        COMMIT;
      END;

      LicPermission.GET(
        LicPermission."Object Type"::Codeunit,
        CODEUNIT::"Update Analysis View");
      IF LicPermission."Execute Permission" = LicPermission."Execute Permission"::Yes THEN BEGIN
        UpdateAnalysisView.UpdateAll(Which::"Ledger Entries",TRUE);
        COMMIT;
      END;
    END;

    LOCAL PROCEDURE DeleteLines@1();
    VAR
      CFWkshLine2@1002 : Record 846;
    BEGIN
      CFWkshLine2.COPY(CFWkshLine);
      CFWkshLine2.DELETEALL;
    END;

    LOCAL PROCEDURE CreateWindow@2();
    BEGIN
      Window.OPEN(
        Text1002 +
        Text1005);
    END;

    LOCAL PROCEDURE CheckLines@4();
    VAR
      LineCount@1000 : Integer;
    BEGIN
      WITH CFWkshLine DO BEGIN
        LineCount := 0;
        StartLineNo := "Line No.";
        REPEAT
          LineCount := LineCount + 1;
          Window.UPDATE(2,LineCount);
          CFWkshCheckLine.RunCheck(CFWkshLine);
          IF NEXT = 0 THEN
            FIND('-');
        UNTIL "Line No." = StartLineNo;
        NoOfRecords := LineCount;
      END;
    END;

    LOCAL PROCEDURE RegisterLines@7();
    VAR
      LineCount@1000 : Integer;
    BEGIN
      WITH CFWkshLine DO BEGIN
        LineCount := 0;
        FIND('-');
        REPEAT
          LineCount := LineCount + 1;
          Window.UPDATE(3,LineCount);
          Window.UPDATE(4,ROUND(LineCount / NoOfRecords * 10000,1));
          CODEUNIT.RUN(CODEUNIT::"Cash Flow Wksh. -Register Line",CFWkshLine);
        UNTIL NEXT = 0;
      END;
    END;

    BEGIN
    END.
  }
}

