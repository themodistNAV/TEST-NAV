OBJECT Page 9062285 Enhanced Workflow Card
{
  OBJECT-PROPERTIES
  {
    Date=11/05/16;
    Time=[ 1:39:52 PM];
    Version List=NA2016.15;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Enhanced Workflow Card;
               ENG=Enhanced Workflow Card];
    SourceTable=Table9062258;
    PageType=Card;
    OnAfterGetRecord=BEGIN
                       OnStartTypeIsHardcoded := "On Start Set Field Value Type" = "On Start Set Field Value Type"::Hardcoded;
                       CanRelease := WFlowMgt.ReleaseRecordFunctionAvailable("Table ID");
                       CurrPage.UPDATE(FALSE);
                     END;

    OnAfterGetCurrRecord=BEGIN
                           UpdateGlobals();
                         END;

    ActionList=ACTIONS
    {
      { 1000000023;  ;ActionContainer;
                      Name=ActionItems;
                      CaptionML=[ENU=Action Items;
                                 ENG=Action Items];
                      ActionContainerType=ActionItems }
      { 9062239 ;1   ;ActionGroup;
                      CaptionML=[ENU=Standard Workflow;
                                 ENG=Standard Workflow] }
      { 9062240 ;2   ;Action    ;
                      Name=CreateUpdateStandardWorkflow;
                      CaptionML=[ENU=Create/Update Standard Workflow;
                                 ENG=Create/Update Standard Workflow];
                      Image=NewSparkle;
                      OnAction=BEGIN
                                 EnhancedWorkflowStdIntegration.CreateStandardWorkflowForEnhancedWorkflow(Rec);
                               END;
                                }
      { 9062242 ;2   ;Action    ;
                      Name=ViewStandardWorkflow;
                      CaptionML=[ENU=View Standard Workflow;
                                 ENG=View Standard Workflow];
                      RunObject=Page 1501;
                      RunPageLink=Code=FIELD(Standard Workflow Code);
                      Visible="Standard Workflow Code" <> '';
                      Image=Route }
      { 9062243 ;2   ;Action    ;
                      Name=DeleteStandardWorkflow;
                      CaptionML=[ENU=Delete Standard Workflow;
                                 ENG=Delete Standard Workflow];
                      Visible="Standard Workflow Code" <> '';
                      Image=Delete;
                      OnAction=VAR
                                 StandardWorkflow@9062230 : Record 1501;
                               BEGIN
                                 IF StandardWorkflow.GET("Standard Workflow Code") THEN
                                   IF NOT CONFIRM(STRSUBSTNO(tConfirm_DeleteStdWorkflow,"Standard Workflow Code")) THEN
                                     EXIT
                                   ELSE
                                     EnhancedWorkflowStdIntegration.DeleteStandardWorkflow(StandardWorkflow);

                                 "Standard Workflow Code" := '';
                                 MODIFY(TRUE);
                               END;
                                }
      { 1000000083;1 ;Separator ;
                      CaptionML=[ENU=----------------;
                                 ENG=----------------] }
      { 1000000024;1 ;Action    ;
                      Name=ImportHtmlTemplate;
                      CaptionML=[ENU=Import HTML Template;
                                 ENG=Import HTML Template];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=TransmitElectronicDoc;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 HTMLExists@1000000000 : Boolean;
                                 TTMgt@1000000002 : Codeunit 419;
                                 tblob@1000000003 : TEMPORARY Record 99008535;
                               BEGIN
                                 HTMLExists := "Email HTML Template".HASVALUE;
                                 tblob.Blob := "Email HTML Template";
                                 tblob.INSERT;
                                 //^^^ >> To be verified
                                 //IF TTMgt.BLOBImport(tblob,'',TRUE) = '' THEN EXIT;
                                 IF TTMgt.BLOBImport(tblob,'') = '' THEN EXIT;

                                 //^^^ <<
                                 IF HTMLExists THEN
                                   IF NOT CONFIRM(Text001,FALSE) THEN
                                     EXIT;

                                 "Email HTML Template" := tblob.Blob;
                                 CurrPage.SAVERECORD;
                               END;
                                }
      { 1000000025;1 ;Action    ;
                      Name=RemoveHtmlTemplate;
                      CaptionML=[ENU=Remove HTML Template;
                                 ENG=Remove HTML Template];
                      Promoted=Yes;
                      PromotedIsBig=No;
                      Image=VoidElectronicDocument;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IF NOT CONFIRM(Text002,FALSE) THEN BEGIN
                                   CALCFIELDS("Email HTML Template");
                                   CLEAR("Email HTML Template");
                                   CurrPage.SAVERECORD;
                                 END;
                               END;
                                }
      { 1000000026;1 ;Action    ;
                      Name=ExportHtmlTemplate;
                      CaptionML=[ENU=Export HTML Template;
                                 ENG=Export HTML Template];
                      Promoted=Yes;
                      PromotedIsBig=No;
                      Image=ElectronicDoc;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 TTMgt@1000000001 : Codeunit 419;
                                 tblob@1000000000 : TEMPORARY Record 99008535;
                               BEGIN
                                 CALCFIELDS("Email HTML Template");
                                 IF "Email HTML Template".HASVALUE THEN BEGIN
                                   tblob.Blob := "Email HTML Template";
                                   tblob.INSERT;
                                   TTMgt.BLOBExport(tblob,STRSUBSTNO('c:\%1 Email HTML Template.html',"No."),TRUE);
                                 END;
                               END;
                                }
      { 1000000034;1 ;Separator ;
                      CaptionML=[ENU=----------------;
                                 ENG=----------------] }
      { 1000000042;1 ;Action    ;
                      Name=UpdateResponseOptions;
                      CaptionML=[ENU=Update Response Options;
                                 ENG=Update Response Options];
                      OnAction=BEGIN
                                 WFlowMgt.PopulateWFlowResponseOption("No.");
                               END;
                                }
      { 1000000058;1 ;Separator ;
                      CaptionML=[ENU=----------------;
                                 ENG=----------------] }
      { 1000000066;1 ;Action    ;
                      Name=CopyWorkflow;
                      CaptionML=[ENU=Copy Workflow;
                                 ENG=Copy Workflow];
                      Promoted=Yes;
                      Image=Copy;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IF (WFlowMgt.CopyWorkflow(Rec."No.", '', TRUE)) THEN
                                   CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1000000062;1 ;Separator ;
                      CaptionML=[ENU=----------------;
                                 ENG=----------------] }
    }
  }
  CONTROLS
  {
    { 1000000000;0;Container;
                ContainerType=ContentArea }

    { 1000000001;1;Group  ;
                Name=General;
                CaptionML=[ENU=General setup for this workflow;
                           ENG=General setup for this workflow];
                GroupType=Group }

    { 1000000002;2;Field  ;
                SourceExpr="No." }

    { 1000000003;2;Field  ;
                SourceExpr=Enabled }

    { 1000000043;2;Field  ;
                SourceExpr="Notification Only" }

    { 1000000010;2;Field  ;
                SourceExpr="One Workflow Only";
                Importance=Additional }

    { 1000000006;2;Field  ;
                SourceExpr=Description }

    { 1000000008;2;Field  ;
                SourceExpr="Information Text";
                Importance=Additional }

    { 1000000082;2;Field  ;
                SourceExpr="Instruction Text";
                Importance=Additional;
                MultiLine=Yes }

    { 1000000044;2;Field  ;
                SourceExpr="Table ID";
                Visible=FALSE;
                OnValidate=BEGIN
                             CanRelease := WFlowMgt.ReleaseRecordFunctionAvailable("Table ID");
                             CurrPage.UPDATE;
                           END;
                            }

    { 1000000016;2;Field  ;
                Name=Table;
                DrillDown=No;
                CaptionML=[ENU=Table;
                           ENG=Table];
                SourceExpr=mTableName;
                OnValidate=BEGIN
                             mObjectFieldToolkit.ValidateTableName(Rec."Table ID", mTableName, FALSE);
                             IF (Rec."Table ID" <> xRec."Table ID") THEN
                             BEGIN
                               Rec.VALIDATE("Table ID");
                               UpdateGlobals();
                             END;
                           END;

                OnLookup=BEGIN
                           IF (mObjectFieldToolkit.TableLookup(Rec."Table ID")) THEN
                           BEGIN
                             Rec.VALIDATE("Table ID");
                             UpdateGlobals();
                           END;
                         END;
                          }

    { 9062238;2;Field     ;
                CaptionML=[ENU=Record Criteria;
                           ENG=Record Criteria];
                SourceExpr="Record Criteria Description";
                OnLookup=BEGIN
                           ShowRecordCriteria;
                           CALCFIELDS("Record Criteria Description");
                           CurrPage.UPDATE;
                         END;

                OnDrillDown=BEGIN
                              ShowRecordCriteria;
                              CALCFIELDS("Record Criteria Description");
                              CurrPage.UPDATE;
                            END;
                             }

    { 1000000014;2;Field  ;
                SourceExpr="Page ID";
                Visible=FALSE }

    { 1000000028;2;Field  ;
                Name=Page;
                DrillDown=No;
                CaptionML=[ENU=Page;
                           ENG=Page];
                SourceExpr=mPageName;
                OnValidate=BEGIN
                             mObjectFieldToolkit.ValidatePageName(Rec."Page ID", mPageName, FALSE);
                             IF (Rec."Page ID" <> xRec."Page ID") THEN
                             BEGIN
                               Rec.VALIDATE("Page ID");
                               UpdateGlobals();
                             END;
                           END;

                OnLookup=BEGIN
                           IF (mObjectFieldToolkit.PageLookup(Rec."Page ID")) THEN
                           BEGIN
                             Rec.VALIDATE("Page ID");
                             UpdateGlobals();
                           END;
                         END;
                          }

    { 1000000017;2;Field  ;
                SourceExpr="Where Used";
                Importance=Additional }

    { 9062241;2;Field     ;
                SourceExpr="Standard Workflow Code";
                Importance=Additional }

    { 1000000064;2;Field  ;
                SourceExpr="Dont Show in Factbox";
                Importance=Additional }

    { 1000000056;2;Group  ;
                Name=SLA;
                CaptionML=[ENU=SLA;
                           ENG=SLA];
                GroupType=Group }

    { 1000000030;3;Field  ;
                SourceExpr="Include Weekends";
                Importance=Additional }

    { 1000000031;3;Field  ;
                SourceExpr="Work Day Starts";
                Importance=Additional }

    { 1000000032;3;Field  ;
                SourceExpr="Work Day Ends";
                Importance=Additional }

    { 1000000033;3;Field  ;
                SourceExpr="Est. Duration" }

    { 1000000060;2;Group  ;
                Name=Grouping;
                CaptionML=[ENU=Grouping;
                           ENG=Grouping];
                GroupType=Group }

    { 1000000018;3;Field  ;
                SourceExpr="Workflow Grouping 1";
                Importance=Additional }

    { 1000000015;3;Field  ;
                SourceExpr="Workflow Grouping 2";
                Importance=Additional }

    { 1000000075;2;Group  ;
                Name=Responses;
                CaptionML=[ENU=Responses;
                           ENG=Responses];
                GroupType=Group }

    { 1000000045;3;Field  ;
                SourceExpr="Group Decision Method" }

    { 1000000046;3;Field  ;
                SourceExpr="Split Decision Contact No.";
                Importance=Additional }

    { 1000000009;3;Field  ;
                SourceExpr="All Responses Required";
                Importance=Additional }

    { 1000000011;3;Field  ;
                SourceExpr="Min. Responses Required";
                Importance=Additional }

    { 1000000004;3;Field  ;
                SourceExpr="Allow Override Next WFlow";
                Importance=Additional }

    { 1000000005;3;Field  ;
                SourceExpr="Close if Seq. Answer is Neg.";
                Importance=Additional }

    { 1000000078;1;Group  ;
                Name=Triggers;
                CaptionML=[ENU=Automatically Start This Workflow If;
                           ENG=Automatically Start This Workflow If];
                GroupType=Group }

    { 1000000079;2;Group  ;
                Name=Database Event;
                CaptionML=[ENU=Database Event;
                           ENG=Database Event];
                GroupType=Group }

    { 1000000097;3;Field  ;
                CaptionML=[ENU=New Record Inserted;
                           ENG=New Record Inserted];
                SourceExpr="DB Event - On Insert" }

    { 1000000103;3;Field  ;
                CaptionML=[ENU=Record Modified;
                           ENG=Record Modified];
                SourceExpr="DB Event - On Modify" }

    { 1000000071;1;Group  ;
                Name=Issue Handling;
                CaptionML=[ENU=What to do if there is a problem starting the workflow;
                           ENG=What to do if there is a problem starting the workflow];
                GroupType=Group }

    { 1000000072;2;Field  ;
                SourceExpr="Originator is Recipient Action" }

    { 1000000073;2;Group  ;
                Name=Errors;
                CaptionML=[ENU=Errors;
                           ENG=Errors];
                GroupType=Group }

    { 1000000070;3;Field  ;
                CaptionML=[ENU=On Error: Workflow Type Disabled;
                           ENG=On Error: Workflow Type Disabled];
                SourceExpr="OnErr: WFlow Disabled" }

    { 1000000068;3;Field  ;
                CaptionML=[ENU=On Error: Workflow System Disabled Response Code;
                           ENG=On Error: Workflow System Disabled Response Code];
                SourceExpr="OnErr: WFlow Disabled Resp." }

    { 1000000067;3;Field  ;
                CaptionML=[ENU=On Error: Workflow System Disabled Error Message;
                           ENG=On Error: Workflow System Disabled Error Message];
                SourceExpr="OnErr: WFlow Disabled Err. Msg" }

    { 1000000061;3;Field  ;
                CaptionML=[ENU=On Error: No Recipients Found;
                           ENG=On Error: No Recipients Found];
                SourceExpr="OnErr: No Recipients" }

    { 1000000059;3;Field  ;
                CaptionML=[ENU=On Error: No Recipients Found Response Code;
                           ENG=On Error: No Recipients Found Response Code];
                SourceExpr="OnErr: No Recipients Resp." }

    { 1000000069;3;Field  ;
                CaptionML=[ENU=On Error: No Recipients Found Error Message;
                           ENG=On Error: No Recipients Found Error Message];
                SourceExpr="OnErr: No Recipients Err. Msg" }

    { 1000000084;1;Group  ;
                CaptionML=[ENU=Things to do when the workflow is started;
                           ENG=Things to do when the workflow is started];
                GroupType=Group }

    { 1000000047;2;Group  ;
                CaptionML=[ENU=Get the Amount Parameter;
                           ENG=Get the Amount Parameter];
                GroupType=Group }

    { 1000000089;3;Field  ;
                CaptionML=[ENU=Field Type;
                           ENG=Field Type];
                SourceExpr="On Start Amount Field Type" }

    { 1000000090;3;Field  ;
                CaptionML=[ENU=Field No.;
                           ENG=Field No.];
                SourceExpr="On Start Amount Field No.";
                Visible=FALSE }

    { 1000000091;3;Field  ;
                CaptionML=[ENU=Field Name;
                           ENG=Field Name];
                SourceExpr="On Start Amount Field Name" }

    { 1000000095;2;Group  ;
                CaptionML=[ENU=Get the Routing Parameter;
                           ENG=Get the Routing Parameter];
                GroupType=Group }

    { 1000000092;3;Field  ;
                CaptionML=[ENU=Field Type;
                           ENG=Field Type];
                SourceExpr="On Start Routing Field Type" }

    { 1000000093;3;Field  ;
                CaptionML=[ENU=Field No.;
                           ENG=Field No.];
                SourceExpr="On Start Routing Field No.";
                Visible=FALSE }

    { 1000000094;3;Field  ;
                CaptionML=[ENU=Field Name;
                           ENG=Field Name];
                SourceExpr="On Start Routing Field Name" }

    { 1000000098;2;Group  ;
                CaptionML=[ENU=Get the Information Text;
                           ENG=Get the Information Text];
                GroupType=Group }

    { 1000000099;3;Field  ;
                CaptionML=[ENU=Field Type;
                           ENG=Field Type];
                SourceExpr="On Start InfoText Field Type" }

    { 1000000100;3;Field  ;
                CaptionML=[ENU=Field No.;
                           ENG=Field No.];
                SourceExpr="On Start InfoText Field No.";
                Visible=FALSE }

    { 1000000101;3;Field  ;
                CaptionML=[ENU=Field Name;
                           ENG=Field Name];
                SourceExpr="On Start InfoText Field Name" }

    { 1000000109;3;Field  ;
                CaptionML=[ENU=Concatenated Fields Formula;
                           ENG=Concatenated Fields Formula];
                SourceExpr="On Start InfoText Concat Def." }

    { 1000000102;2;Group  ;
                CaptionML=[ENU=Set the Value of This Field;
                           ENG=Set the Value of This Field];
                GroupType=Group }

    { 1000000027;3;Field  ;
                CaptionML=[ENU=Field Type;
                           ENG=Field Type];
                SourceExpr="On Start Set Field Type" }

    { 1000000096;3;Field  ;
                CaptionML=[ENU=Field No.;
                           ENG=Field No.];
                SourceExpr="On Start Set Field No.";
                Visible=FALSE;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 1000000088;3;Field  ;
                CaptionML=[ENU=Field Name;
                           ENG=Field Name];
                SourceExpr="On Start Set Field Name" }

    { 1000000086;3;Field  ;
                CaptionML=[ENU=To Type;
                           ENG=To Type];
                SourceExpr="On Start Set Field Value Type";
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 1000000087;3;Field  ;
                CaptionML=[ENU=To Value;
                           ENG=To Value];
                SourceExpr="On Start Set Field Value";
                Editable=OnStartTypeIsHardcoded }

    { 1000000021;2;Group  ;
                CaptionML=[ENU=Perform Other Functions;
                           ENG=Perform Other Functions];
                Visible=CanRelease;
                GroupType=Group }

    { 1000000085;3;Field  ;
                CaptionML=[ENU=Release Document;
                           ENG=Release Document];
                SourceExpr="On Start Release Record" }

    { 9062229;3;Field     ;
                CaptionML=[ENU=Restrict Record;
                           ENG=Restrict Record];
                SourceExpr="On Start Restrict Record" }

    { 9062233;1;Group     ;
                CaptionML=[ENU=Who to send the workflow to;
                           ENG=Who to send the workflow to];
                GroupType=Group }

    { 9062237;2;Group     ;
                CaptionML=[ENU=Add Person to Workflow from Field;
                           ENG=Add Person to Workflow from Field];
                GroupType=Group }

    { 9062236;3;Field     ;
                CaptionML=[ENU=Field Type;
                           ENG=Field Type];
                SourceExpr="On Start Person Field Type" }

    { 9062235;3;Field     ;
                CaptionML=[ENU=Field No.;
                           ENG=Field No.];
                SourceExpr="On Start Person Field No.";
                Visible=FALSE }

    { 9062234;3;Field     ;
                CaptionML=[ENU=Field Name;
                           ENG=Field Name];
                SourceExpr="On Start Person Field Name" }

    { 1000000057;2;Part   ;
                CaptionML=[ENU=Who to send the workflow to;
                           ENG=Who to send the workflow to];
                SubPageLink=Workflow No.=FIELD(No.);
                PagePartID=Page9062293;
                PartType=Page }

    { 1000000029;1;Group  ;
                CaptionML=[ENU=Actions to take;
                           ENG=Actions to take];
                GroupType=Group }

    { 1000000063;2;Group  ;
                CaptionML=[ENU=Ask people to complete a Checklist;
                           ENG=Ask people to complete a Checklist];
                GroupType=Group }

    { 1000000065;3;Field  ;
                SourceExpr="Checklist Type" }

    { 1000000074;3;Field  ;
                SourceExpr="Checklist Description" }

    { 1000000012;1;Part   ;
                CaptionML=[ENU=What responses can be given;
                           ENG=What responses can be given];
                SubPageLink=Workflow No.=FIELD(No.);
                PagePartID=Page9062288;
                PartType=Page }

    { 1000000019;1;Group  ;
                CaptionML=[ENU=Configure the e-mail notifications;
                           ENG=Configure the e-mail notifications];
                GroupType=Group }

    { 1000000020;2;Field  ;
                SourceExpr="Send E-Mail Notification" }

    { 1000000007;2;Field  ;
                SourceExpr="Enable Email Response" }

    { 1000000022;2;Field  ;
                Name=Email HTML Template Exists;
                CaptionML=[ENU=Email HTML Template Exists;
                           ENG=Email HTML Template Exists];
                SourceExpr=Rec."Email HTML Template".HASVALUE;
                Importance=Additional }

    { 1000000054;2;Group  ;
                CaptionML=[ENU=File Attachments;
                           ENG=File Attachments];
                GroupType=Group }

    { 1000000055;3;Field  ;
                SourceExpr="Send FAttachments with Not." }

    { 1000000053;3;Field  ;
                SourceExpr="FAttachment Type Filter" }

    { 1000000051;2;Group  ;
                CaptionML=[ENU=Jet Report;
                           ENG=Jet Report];
                GroupType=Group }

    { 1000000052;3;Field  ;
                SourceExpr="Jet Report ID";
                Visible=FALSE }

    { 1000000013;3;Field  ;
                Name=JetReportDescriptionField;
                CaptionML=[ENU=Jet Report Description;
                           ENG=Jet Report Description];
                SourceExpr=mJetReportDescription;
                OnValidate=BEGIN
                             mJetReportManagement.ValidateJetReportDescription(Rec."Jet Report ID", mJetReportDescription, FALSE);
                             Rec.VALIDATE("Jet Report ID");
                             CurrPage.UPDATE(TRUE);
                           END;

                OnLookup=BEGIN
                           IF (mJetReportManagement.JetReportLookup(Rec."Jet Report ID")) THEN
                           BEGIN
                             Rec.VALIDATE("Jet Report ID");
                             CurrPage.UPDATE(TRUE);
                           END;
                         END;
                          }

    { 1000000048;3;Field  ;
                SourceExpr="Jet Report Parameter 1" }

    { 1000000049;3;Field  ;
                SourceExpr="Jet Report Parameter 2" }

    { 1000000050;3;Field  ;
                SourceExpr="Jet Report Parameter 3" }

    { 1000000076;3;Field  ;
                SourceExpr="Generate Jet Report";
                Importance=Additional }

    { 1000000106;2;Group  ;
                CaptionML=[ENU=NAV Report;
                           ENG=NAV Report];
                GroupType=Group }

    { 1000000107;3;Field  ;
                SourceExpr="Report ID";
                Visible=FALSE;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 1000000108;3;Field  ;
                Name=ReportNameField;
                CaptionML=[ENU=Report Name;
                           ENG=Report Name];
                SourceExpr=mReportName;
                OnValidate=BEGIN
                             mObjectFieldToolkit.ValidateReportName(Rec."Report ID", mReportName, FALSE);
                             Rec.VALIDATE("Report ID");
                             CurrPage.UPDATE(TRUE);
                           END;

                OnLookup=BEGIN
                           IF (mObjectFieldToolkit.ReportLookup(Rec."Report ID")) THEN
                           BEGIN
                             Rec.VALIDATE("Report ID");
                             CurrPage.UPDATE(TRUE);
                           END;
                         END;
                          }

    { 9062232;2;Group     ;
                CaptionML=[ENU=Document Library;
                           ENG=Document Library];
                GroupType=Group }

    { 9062231;3;Field     ;
                CaptionML=[ENU=DOCS Entry ID to Send;
                           ENG=DOCS Entry ID to Send];
                SourceExpr="DOCS Entry ID to Send" }

    { 9062230;3;Field     ;
                CaptionML=[ENU=DOCS Entry Description;
                           ENG=DOCS Entry Description];
                SourceExpr="DOCS Entry Description" }

    { 1000000035;1;Group  ;
                Name=Advanced;
                CaptionML=[ENU=Advanced Options;
                           ENG=Advanced Options];
                GroupType=Group }

    { 1000000036;2;Field  ;
                SourceExpr="Insert Logic Codeunit ID";
                Visible=FALSE }

    { 1000000037;2;Field  ;
                Name=InsertLogicCodeunitNameField;
                DrillDown=No;
                CaptionML=[ENU=Insert Logic Codeunit Name;
                           ENG=Insert Logic Codeunit Name];
                SourceExpr=mInsertLogicCodeunitName;
                OnValidate=BEGIN
                             mObjectFieldToolkit.ValidateCodeunitName(Rec."Insert Logic Codeunit ID", mInsertLogicCodeunitName, FALSE);
                             Rec.VALIDATE("Insert Logic Codeunit ID");
                             CurrPage.UPDATE(TRUE);
                           END;

                OnLookup=BEGIN
                           IF (mObjectFieldToolkit.CodeunitLookup(Rec."Insert Logic Codeunit ID")) THEN
                           BEGIN
                             Rec.VALIDATE("Insert Logic Codeunit ID");
                             CurrPage.UPDATE(TRUE);
                           END;
                         END;
                          }

    { 1000000038;2;Field  ;
                SourceExpr="Insert Function Code" }

    { 1000000039;2;Field  ;
                SourceExpr="Resp. Logic Codeunit ID";
                Visible=FALSE }

    { 1000000040;2;Field  ;
                Name=RespLogicCodeunitNameFIeld;
                DrillDown=No;
                CaptionML=[ENU=Resp. Logic Codeunit Name;
                           ENG=Resp. Logic Codeunit Name];
                SourceExpr=mRespLogicCodeunitName;
                OnValidate=BEGIN
                             mObjectFieldToolkit.ValidateCodeunitName(Rec."Resp. Logic Codeunit ID", mRespLogicCodeunitName, FALSE);
                             Rec.VALIDATE("Resp. Logic Codeunit ID");
                             CurrPage.UPDATE(TRUE);
                           END;

                OnLookup=BEGIN
                           IF (mObjectFieldToolkit.CodeunitLookup(Rec."Resp. Logic Codeunit ID")) THEN
                           BEGIN
                             Rec.VALIDATE("Resp. Logic Codeunit ID");
                             CurrPage.UPDATE(TRUE);
                           END;
                         END;
                          }

    { 1000000041;2;Field  ;
                SourceExpr="Response Function Code" }

  }
  CODE
  {
    VAR
      Text001@1000000000 : TextConst 'ENU=Are you sure you wish to overwrite the existing Email HTML?;ENG=Are you sure you wish to overwrite the existing Email HTML?';
      Text002@1000000001 : TextConst 'ENU=Are you sure you wish to remove the existing Email HTML?;ENG=Are you sure you wish to remove the existing Email HTML?';
      WFlowMgt@1000000002 : Codeunit 9062258;
      Text003@1000000003 : TextConst 'ENU=Approval Workflow Type Implementation;ENG=Approval Workflow Type Implementation';
      Text004@1000000004 : TextConst 'ENU=Simple Workflow Implementation;ENG=Simple Workflow Implementation';
      OnStartTypeIsHardcoded@1000000005 : Boolean INDATASET;
      CanRelease@1000000006 : Boolean INDATASET;
      mObjectFieldToolkit@1000000016 : Codeunit 9062343;
      mJetReportManagement@1000000012 : Codeunit 9062347;
      mTableName@1000000007 : Text;
      mPageName@1000000008 : Text;
      mInsertLogicCodeunitName@1000000009 : Text;
      mRespLogicCodeunitName@1000000010 : Text;
      mJetReportDescription@1000000011 : Text;
      mReportName@1000000013 : Text;
      EnhancedWorkflowStdIntegration@9062230 : Codeunit 9062614;
      tConfirm_DeleteStdWorkflow@9062231 : TextConst 'ENU=Are you sure you want to delete the Standard Workflow "%1"?;ENG=Are you sure you want to delete the Standard Workflow "%1"?';

    PROCEDURE WorkflowImplementation@1000000000(Description@1000000000 : Text[30]) Result : Text[1024];
    VAR
      TextDesc01@1000000001 : TextConst 'ENU="""Additional Contact to send Workflow"", ";ENG="""Additional Contact to send Workflow"", "';
      TextDesc02@1000000002 : TextConst 'ENU="""WorkFlow Code"",";ENG="""WorkFlow Code"","';
      TextDesc03@1000000003 : TextConst 'ENU="""Record Primarykey Code"", ";ENG="""Record Primarykey Code"", "';
      TextDesc04@1000000004 : TextConst 'ENU=" ""GetPositionText"", ";ENG=" ""GetPositionText"", "';
      TextDesc05@1000000005 : TextConst 'ENU="""From current Workflow Status"", ";ENG="""From current Workflow Status"", "';
      TextDesc06@1000000006 : TextConst 'ENU="""To next Workflow Status"", ";ENG="""To next Workflow Status"", "';
      TextDesc07@1000000007 : TextConst 'ENU="""Document Amount if exists"", ";ENG="""Document Amount if exists"", "';
      TextDesc08@1000000008 : TextConst 'ENU="""Routing Parameter"", ";ENG="""Routing Parameter"", "';
      TextDesc09@1000000009 : TextConst 'ENU="""Wokflow description to user""";ENG="""Wokflow description to user"""';
      TextDesc10@1000000010 : TextConst 'ENU="""Group Code""";ENG="""Group Code"""';
      TextDesc11@1000000011 : TextConst 'ENU="""Sell-to Customer No."", ";ENG="""Sell-to Customer No."", "';
      TextDesc12@1000000012 : TextConst 'ENU="''S-ORD-APPR'', ";ENG="''S-ORD-APPR'', "';
      TextDesc13@1000000013 : TextConst 'ENU="GetPrimaryKeyCode(), ";ENG="GetPrimaryKeyCode(), "';
      TextDesc14@1000000014 : TextConst 'ENU="Rec.GETPOSITION(FALSE), ";ENG="Rec.GETPOSITION(FALSE), "';
      TextDesc15@1000000015 : TextConst 'ENU="xRec.""Approval Status"", ";ENG="xRec.""Approval Status"", "';
      TextDesc16@1000000016 : TextConst 'ENU="Rec.""Approval Status"", ";ENG="Rec.""Approval Status"", "';
      TextDesc17@1000000017 : TextConst 'ENU="Rec.Amount, ";ENG="Rec.Amount, "';
      TextDesc18@1000000018 : TextConst 'ENU='' '', >;ENG='' '', >';
      TextDesc19@1000000019 : TextConst 'ENU="GetDocumentName(FALSE), ";ENG="GetDocumentName(FALSE), "';
    BEGIN
      //DOC AP 240113

      IF UPPERCASE(Description) = 'APPROVAL' THEN
        EXIT('Desscription: \' + 'WorkflowInseration.ProcessRecordStatusChange(' + TextDesc01
                                                             + TextDesc02
                                                             + TextDesc03 + ''
                                                             + TextDesc04
                                                             + TextDesc05
                                                             + TextDesc06  + ''
                                                             + TextDesc07
                                                             + TextDesc08
                                                             + TextDesc09 +')       '
           + 'Example: \' + 'WorkflowInseration.ProcessRecordStatusChange(' + TextDesc11
                                                             + TextDesc12
                                                             + TextDesc13
                                                             + TextDesc14   + ''
                                                             + TextDesc15
                                                             + TextDesc16
                                                             + TextDesc17
                                                             + TextDesc18 + ')');

      IF UPPERCASE(Description) = 'SIMPLE' THEN
        EXIT('WorkflowInseration.Simple(' + TextDesc02
                                          + TextDesc04
                                          + TextDesc09 +')' )
    END;

    LOCAL PROCEDURE UpdateGlobals@1000000001();
    BEGIN
      Rec.CALCFIELDS("Table Name", "Page Name", "Insert Logic Codeunit Name", "Resp. Logic Codeunit Name", "Jet Report Description", "Report Name",
        "Insert Logic Codeunit Name", "Resp. Logic Codeunit Name");

      mTableName:= Rec."Table Name";
      mPageName:= Rec."Page Name";
      mInsertLogicCodeunitName:= Rec."Insert Logic Codeunit Name";
      mRespLogicCodeunitName:= Rec."Resp. Logic Codeunit Name";
      mJetReportDescription := Rec."Jet Report Description";
      mReportName := Rec."Report Name";
      mInsertLogicCodeunitName := Rec."Insert Logic Codeunit Name";
      mRespLogicCodeunitName := "Resp. Logic Codeunit Name";
    END;

    BEGIN
    {
      //DOC NA2015.1  JH 10/08/2012 - Migrated to 2013
      //DOC NA2015.1  JH 10/07/2013 - Workflows improvements and bugfixes
      //DOC NA2015.4  JH 24/11/2014 - Nice lookups
      //DOC NA2015.4  JH 10/02/2015 - Fixes, amendments
      //DOC NA2016.10 JH 28/08/2015 - Upgraded to 2016
      //DOC NA2016.10 PC 24/09/2015 - Added field "On Start Restrict Record"
      //DOC NA2016.10 PC 24/09/2015 - Added Document Library Group and Page
      //DOC NA2016.11 BM 01/11/2015 - Removed Questioniare fields
      //DOC NA2016.11 PC 12/11/2015 - Added support for integration to Standard Workflow
      //DOC NA2016.14 PC 02/03/2016 - Fixes
      //DOC NA2016.15 JH 10/05/2016 - CfMD amendments
      //DOC NA2016.15 PC 11/05/2016 - Added field "Generate Jet Report"
      //DOC NA2016.15 PC 11/05/2016 - Renamed group "nQuiry" to "Jet Report"
    }
    END.
  }
}

