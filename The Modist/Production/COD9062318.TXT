OBJECT Codeunit 9062318 Planning Board Relation Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=19/12/15;
    Time=[ 9:15:27 PM];
    Version List=NA2016.12;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      PlanningBoardTable@1000000002 : Record 9062338;
      PlanningBoardTableRelation@1000000000 : Record 9062341;
      RelationBuffer@1000000001 : TEMPORARY Record 9062730;
      PlanningBoardTableSet@1000000003 : Boolean;

    LOCAL PROCEDURE "--- General ---"@1000000002();
    BEGIN
    END;

    PROCEDURE SetPlanningBoardTable@1000000006(pPlanningBoardTable@1000000000 : Record 9062338);
    BEGIN
      //DOC NA2016.12 - Setting planning board table
      //  -> pPlanningBoardTable: The table

      PlanningBoardTable := pPlanningBoardTable;
      PlanningBoardTableSet := TRUE;
    END;

    PROCEDURE ClearPlanningBoardTable@1000000009();
    BEGIN
      //DOC NA2016.12 - Clearing planning board table

      CLEAR(PlanningBoardTable);
      PlanningBoardTableSet := FALSE;
    END;

    PROCEDURE ValidateRelationId@1000000001(pPlanningBoardCode@1000000002 : Code[20];pPlanningBoardTableType@1000000001 : Integer;pRelationId@1000000000 : Integer;VAR pTableId@1000000003 : Integer);
    BEGIN
      //DOC NA2016.12 - Validating relation ID
      //  -> pPlanningBoardCode: Planning board code
      //  -> pPlanningBoardTableType: Planning board table type
      //  -> pRelationId: Relation ID
      //  <> pTableId: Target table ID

      CLEAR(pTableId);
      IF (pRelationId <> 0) THEN
      BEGIN
        PlanningBoardTableRelation.GET(pPlanningBoardCode, pPlanningBoardTableType, pRelationId);
        pTableId := PlanningBoardTableRelation."Related Table ID";
      END
      ELSE
      BEGIN
        IF ( NOT (PlanningBoardTableSet)) THEN
          IF ( NOT (PlanningBoardTable.GET(pPlanningBoardCode, pPlanningBoardTableType))) THEN
            CLEAR(PlanningBoardTable);
        pTableId := PlanningBoardTable."Table ID";
      END;
    END;

    PROCEDURE RelationDescription@1000000011(pPlanningBoardCode@1000000002 : Code[20];pPlanningBoardTableType@1000000001 : Integer;pRelationId@1000000000 : Integer) : Text;
    VAR
      lDescription@1000000003 : Text;
      eRelation@1000000004 : TextConst 'ENU=Relation %1;ENG=Relation %1';
      eTable@1000000005 : TextConst 'ENU=%1 Table;ENG=%1 Table';
    BEGIN
      //DOC NA2016.12 - Returning relation description
      //  -> pPlanningBoardCode: Planning board code
      //  -> pPlanningBoardTableType: Planning board table type
      //  -> pRelationId: Relation ID
      //  <- The description

      CLEAR(lDescription);

      IF (PlanningBoardTableRelation.GET(pPlanningBoardCode, pPlanningBoardTableType, pRelationId)) THEN
      BEGIN
        lDescription := PlanningBoardTableRelation.Name;
        IF (lDescription = '') THEN
        BEGIN
          PlanningBoardTableRelation.CALCFIELDS("Related Table Caption");
          lDescription := PlanningBoardTableRelation."Related Table Caption";
        END;
        IF (lDescription = '') THEN
          lDescription := STRSUBSTNO(eRelation, pRelationId);
      END
      ELSE IF (PlanningBoardTable.GET(pPlanningBoardCode, pPlanningBoardTableType)) THEN
      BEGIN
        PlanningBoardTable.CALCFIELDS("Table Caption");
        lDescription := PlanningBoardTable."Table Caption";
        IF (lDescription = '') THEN
          lDescription := STRSUBSTNO(eTable, FORMAT(PlanningBoardTable."Table Type"));
      END;

      EXIT(lDescription);
    END;

    PROCEDURE RelationLookup@1000000000(pPlanningBoardCode@1000000000 : Code[20];pPlanningBoardTableType@1000000001 : Integer;VAR pRelationId@1000000003 : Integer) : Boolean;
    VAR
      lResult@1000000002 : Boolean;
    BEGIN
      //DOC NA2016.12 - Performing relation lookup
      //  -> pPlanningBoardCode: Planning board code
      //  -> pPlanningBoardTableType: Planning board table type
      //  <> pRelationId: Source / target relation ID
      //  <- Lookup result

      CLEAR(lResult);

      ClearRelationBuffer();

      PlanningBoardTable.GET(pPlanningBoardCode, pPlanningBoardTableType);
      PlanningBoardTable.CALCFIELDS("Table Caption");
      AddToRelationBuffer(0, PlanningBoardTable."Table Caption");

      PlanningBoardTableRelation.RESET();
      PlanningBoardTableRelation.SETRANGE("Planning Board Code", pPlanningBoardCode);
      PlanningBoardTableRelation.SETRANGE("Planning Board Table Type", pPlanningBoardTableType);
      IF (PlanningBoardTableRelation.FINDSET()) THEN
      REPEAT
        AddToRelationBuffer(PlanningBoardTableRelation.ID, PlanningBoardTableRelation.Name);
      UNTIL (PlanningBoardTableRelation.NEXT() = 0);

      SetRelationBufferPosition(pRelationId);

      RelationBuffer.RESET();
      IF (PAGE.RUNMODAL(PAGE::"Name Value Buffer", RelationBuffer) = ACTION::LookupOK) THEN
      BEGIN
        pRelationId := RelationBuffer.ID;
        lResult := TRUE;
      END;

      EXIT(lResult);
    END;

    LOCAL PROCEDURE "--- Tools ---"@1000000003();
    BEGIN
    END;

    LOCAL PROCEDURE ClearRelationBuffer@1000000004();
    BEGIN
      //DOC NA2016.12 - Clearing relation buffer

      RelationBuffer.RESET();
      RelationBuffer.DELETEALL();
    END;

    LOCAL PROCEDURE AddToRelationBuffer@1000000005(pRelationId@1000000000 : Integer;pRelationName@1000000001 : Text);
    BEGIN
      //DOC NA2016.12 - Adding to relation buffer
      //  -> pRelationId: Relation ID
      //  -> pRelationName: Relation name

      CLEAR(RelationBuffer);
      RelationBuffer.INIT();
      RelationBuffer.ID := pRelationId;
      RelationBuffer.Name := COPYSTR(pRelationName, 1, MAXSTRLEN(RelationBuffer.Name));
      RelationBuffer.INSERT(TRUE);
    END;

    LOCAL PROCEDURE SetRelationBufferPosition@1000000008(pRelationId@1000000000 : Integer);
    BEGIN
      //DOC NA2016.12 - Setting relation buffer position
      //  -> pRelationId: Relation ID

      IF ( NOT (RelationBuffer.GET(pRelationId))) THEN
        IF (RelationBuffer.FINDFIRST()) THEN;
    END;

    BEGIN
    {
      //DOC NA2016.12 JH 19/12/2015 - Created
    }
    END.
  }
}

