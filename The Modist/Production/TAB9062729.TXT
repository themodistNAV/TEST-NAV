OBJECT Table 9062729 Enablement User
{
  OBJECT-PROPERTIES
  {
    Date=10/05/16;
    Time=12:00:00 PM;
    Version List=NA2016.15;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               Rec.TESTFIELD("User ID");
               CheckShortCode();
               TnpToolkit.UpdateCreatedBy(Rec."Created By", Rec."Created Date Time");
             END;

    OnModify=BEGIN
               CheckShortCode();
               TnpToolkit.UpdateModifiedBy(Rec."Modified By", Rec."Modified Date Time");
             END;

    CaptionML=[ENU=Enablement User;
               ENG=Enablement User];
    LookupPageID=Page9063087;
    DrillDownPageID=Page9063087;
  }
  FIELDS
  {
    { 1   ;   ;User ID             ;Code50        ;CaptionML=[ENU=User ID;
                                                              ENG=User ID] }
    { 2   ;   ;Short Code          ;Code10        ;OnValidate=BEGIN
                                                                CheckShortCode();
                                                              END;

                                                   CaptionML=[ENU=Short Code;
                                                              ENG=Short Code] }
    { 3   ;   ;Name                ;Text50        ;CaptionML=[ENU=Name;
                                                              ENG=Name] }
    { 4   ;   ;Name 2              ;Text50        ;CaptionML=[ENU=Name 2;
                                                              ENG=Name 2] }
    { 5   ;   ;Address             ;Text50        ;CaptionML=[ENU=Address;
                                                              ENG=Address] }
    { 6   ;   ;Address 2           ;Text50        ;CaptionML=[ENU=Address 2;
                                                              ENG=Address 2] }
    { 7   ;   ;City                ;Text30        ;CaptionML=[ENU=City;
                                                              ENG=City] }
    { 8   ;   ;County              ;Text30        ;CaptionML=[ENU=County;
                                                              ENG=County] }
    { 9   ;   ;Post Code           ;Code20        ;CaptionML=[ENU=Post Code;
                                                              ENG=Post Code] }
    { 10  ;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   CaptionML=[ENU=Country/Region Code;
                                                              ENG=Country/Region Code] }
    { 11  ;   ;Phone No.           ;Text30        ;ExtendedDatatype=Phone No.;
                                                   CaptionML=[ENU=Phone No.;
                                                              ENG=Phone No.] }
    { 12  ;   ;Mobile Phone No.    ;Text30        ;ExtendedDatatype=Phone No.;
                                                   CaptionML=[ENU=Mobile Phone No.;
                                                              ENG=Mobile Phone No.] }
    { 13  ;   ;Fax No.             ;Text30        ;ExtendedDatatype=Phone No.;
                                                   CaptionML=[ENU=Fax No.;
                                                              ENG=Fax No.] }
    { 14  ;   ;E-Mail              ;Text80        ;ExtendedDatatype=E-Mail;
                                                   CaptionML=[ENU=E-Mail;
                                                              ENG=E-Mail] }
    { 15  ;   ;Home Page           ;Text80        ;ExtendedDatatype=URL;
                                                   CaptionML=[ENU=Home Page;
                                                              ENG=Home Page] }
    { 16  ;   ;Contact No.         ;Code20        ;TableRelation=Contact;
                                                   OnValidate=BEGIN
                                                                CheckContactNo();
                                                              END;

                                                   CaptionML=[ENU=Contact No.;
                                                              ENG=Contact No.] }
    { 17  ;   ;Salesperson/Purchaser Code;Code10  ;TableRelation=Salesperson/Purchaser;
                                                   OnValidate=BEGIN
                                                                CheckSalespersonPurchaserCode();
                                                              END;

                                                   CaptionML=[ENU=Salesperson/Purchaser Code;
                                                              ENG=Salesperson/Purchaser Code] }
    { 18  ;   ;Vendor No.          ;Code20        ;TableRelation=Vendor;
                                                   OnValidate=BEGIN
                                                                CheckVendorNo();
                                                              END;

                                                   CaptionML=[ENU=Vendor No.;
                                                              ENG=Vendor No.] }
    { 19  ;   ;Resource No.        ;Code20        ;TableRelation=Resource;
                                                   OnValidate=BEGIN
                                                                CheckResourceNo();
                                                              END;

                                                   CaptionML=[ENU=Resource No.;
                                                              ENG=Resource No.] }
    { 20  ;   ;Employee No.        ;Code20        ;TableRelation=Employee;
                                                   OnValidate=BEGIN
                                                                CheckEmployeeNo();
                                                              END;

                                                   CaptionML=[ENU=Employee No.;
                                                              ENG=Employee No.] }
    { 21  ;   ;Job Title           ;Text30        ;CaptionML=[ENU=Job Title;
                                                              ENG=Job Title] }
    { 22  ;   ;Team Filter         ;Code250       ;CaptionML=[ENU=Team Filter;
                                                              ENG=Team Filter] }
    { 23  ;   ;Location Code       ;Code10        ;TableRelation=Location;
                                                   CaptionML=[ENU=Location Code;
                                                              ENG=Location Code] }
    { 24  ;   ;Workflow Filter     ;Code250       ;TableRelation=Workflow;
                                                   CaptionML=[ENU=Workflow Filter;
                                                              ENG=Workflow Filter] }
    { 25  ;   ;Windows Security ID ;Text119       ;CaptionML=[ENU=Windows Security ID;
                                                              ENG=Windows Security ID] }
    { 26  ;   ;User Security ID    ;GUID          ;CaptionML=[ENU=User Security ID;
                                                              ENG=User Security ID];
                                                   Editable=No }
    { 27  ;   ;Relationship        ;Option        ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Relationship;
                                                              ENG=Relationship];
                                                   OptionCaptionML=[ENU=" ,User,User Setup,Contact,Salesperson/Purchaser,Vendor,Resource,Employee";
                                                                    ENG=" ,User,User Setup,Contact,Salesperson/Purchaser,Vendor,Resource,Employee"];
                                                   OptionString=[ ,User,User Setup,Contact,Salesperson/Purchaser,Vendor,Resource,Employee] }
    { 28  ;   ;Picture             ;BLOB          ;CaptionML=[ENU=Picture;
                                                              ENG=Picture];
                                                   SubType=Bitmap }
    { 29  ;   ;Thumbnail           ;BLOB          ;CaptionML=[ENU=Thumbnail;
                                                              ENG=Thumbnail];
                                                   SubType=Bitmap }
    { 30  ;   ;SMTP Mail Setup     ;Code10        ;TableRelation="SMTP Mail Setup";
                                                   CaptionML=[ENU=SMTP Mail Setup;
                                                              ENG=SMTP Mail Setup];
                                                   Description=NA2016.15 }
    { 1000;   ;Created By          ;Code50        ;OnLookup=BEGIN
                                                              TnpToolkit.UserLookup(Rec."Created By", FALSE);
                                                            END;

                                                   CaptionML=[ENU=Created By;
                                                              ENG=Created By] }
    { 1001;   ;Created Date Time   ;DateTime      ;CaptionML=[ENU=Created Date Time;
                                                              ENG=Created Date Time] }
    { 1002;   ;Modified By         ;Code50        ;OnLookup=BEGIN
                                                              TnpToolkit.UserLookup(Rec."Modified By", FALSE);
                                                            END;

                                                   CaptionML=[ENU=Modified By;
                                                              ENG=Modified By] }
    { 1003;   ;Modified Date Time  ;DateTime      ;CaptionML=[ENU=Modified Date Time;
                                                              ENG=Modified Date Time] }
  }
  KEYS
  {
    {    ;User ID                                 ;Clustered=Yes }
    {    ;Short Code                               }
    {    ;Contact No.                              }
    {    ;Salesperson/Purchaser Code               }
    {    ;Vendor No.                               }
    {    ;Resource No.                             }
    {    ;Employee No.                             }
    {    ;User Security ID                         }
    {    ;Windows Security ID                      }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      NablementUser@1000000001 : Record 9062729;
      NablementUserManagement@1000000003 : Codeunit 9062255;
      TnpToolkit@1000000000 : Codeunit 9062230;
      tAlreadyUsed@1000000002 : TextConst 'ENU="""%1"" ''%2'' has been already used for user ""%3"".";ENG="""%1"" ''%2'' has been already used for user ""%3""."';

    PROCEDURE "--- Checking ---"@1000000008();
    BEGIN
    END;

    PROCEDURE CheckShortCode@1000000000();
    BEGIN
      //DOC NA2016.10 - Checking if contact no. of the user is unique

      IF (Rec."Short Code" = '') THEN
        EXIT;

      NablementUser.RESET();
      NablementUser.SETCURRENTKEY("Short Code");
      NablementUser.SETRANGE("Short Code", Rec."Short Code");
      NablementUser.SETFILTER("User ID", '<>%1', Rec."User ID");
      IF (NablementUser.FINDFIRST()) THEN
        ERROR(tAlreadyUsed, Rec.FIELDCAPTION("Short Code"), Rec."Short Code", NablementUser."User ID");
    END;

    PROCEDURE CheckContactNo@1000000003();
    BEGIN
      //DOC NA2016.10 - Checking if contact no. of the user is unique

      IF (Rec."Contact No." = '') THEN
        EXIT;

      NablementUser.RESET();
      NablementUser.SETCURRENTKEY("Contact No.");
      NablementUser.SETRANGE("Contact No.", Rec."Contact No.");
      NablementUser.SETFILTER("User ID", '<>%1', Rec."User ID");
      IF (NablementUser.FINDFIRST()) THEN
        ERROR(tAlreadyUsed, Rec.FIELDCAPTION("Contact No."), Rec."Contact No.", NablementUser."User ID");
    END;

    PROCEDURE CheckSalespersonPurchaserCode@1000000007();
    BEGIN
      //DOC NA2016.10 - Checking if salesperson/purchaser code of the user is unique

      IF (Rec."Salesperson/Purchaser Code" = '') THEN
        EXIT;

      NablementUser.RESET();
      NablementUser.SETCURRENTKEY("Salesperson/Purchaser Code");
      NablementUser.SETRANGE("Salesperson/Purchaser Code", Rec."Salesperson/Purchaser Code");
      NablementUser.SETFILTER("User ID", '<>%1', Rec."User ID");
      IF (NablementUser.FINDFIRST()) THEN
        ERROR(tAlreadyUsed, Rec.FIELDCAPTION("Salesperson/Purchaser Code"), Rec."Salesperson/Purchaser Code", NablementUser."User ID");
    END;

    PROCEDURE CheckVendorNo@1000000006();
    BEGIN
      //DOC NA2016.10 - Checking if vendor no. of the user is unique

      IF (Rec."Vendor No." = '') THEN
        EXIT;

      NablementUser.RESET();
      NablementUser.SETCURRENTKEY("Vendor No.");
      NablementUser.SETRANGE("Vendor No.", Rec."Vendor No.");
      NablementUser.SETFILTER("User ID", '<>%1', Rec."User ID");
      IF (NablementUser.FINDFIRST()) THEN
        ERROR(tAlreadyUsed, Rec.FIELDCAPTION("Vendor No."), Rec."Vendor No.", NablementUser."User ID");
    END;

    PROCEDURE CheckResourceNo@1000000005();
    BEGIN
      //DOC NA2016.10 - Checking if resource no. of the user is unique

      IF (Rec."Resource No." = '') THEN
        EXIT;

      NablementUser.RESET();
      NablementUser.SETCURRENTKEY("Resource No.");
      NablementUser.SETRANGE("Resource No.", Rec."Resource No.");
      NablementUser.SETFILTER("User ID", '<>%1', Rec."User ID");
      IF (NablementUser.FINDFIRST()) THEN
        ERROR(tAlreadyUsed, Rec.FIELDCAPTION("Resource No."), Rec."Resource No.", NablementUser."User ID");
    END;

    PROCEDURE CheckEmployeeNo@1000000004();
    BEGIN
      //DOC NA2016.10 - Checking if employee no. of the user is unique

      IF (Rec."Employee No." = '') THEN
        EXIT;

      NablementUser.RESET();
      NablementUser.SETCURRENTKEY("Employee No.");
      NablementUser.SETRANGE("Employee No.", Rec."Employee No.");
      NablementUser.SETFILTER("User ID", '<>%1', Rec."User ID");
      IF (NablementUser.FINDFIRST()) THEN
        ERROR(tAlreadyUsed, Rec.FIELDCAPTION("Employee No."), Rec."Employee No.", NablementUser."User ID");
    END;

    PROCEDURE "--- Showing ---"@1000000009();
    BEGIN
    END;

    PROCEDURE ShowUser@1000000013();
    VAR
      lUser@1000000002 : Record 2000000120;
      lEmptyGuid@1000000000 : GUID;
      eConfirmation@1000000001 : TextConst 'ENU=%1 hasn''t been created for nAblement user "%2". Do you want to create it now?;ENG=%1 hasn''t been created for nAblement user "%2". Do you want to create it now?';
    BEGIN
      //DOC NA2016.10 - Showing user (or proposing to create it if it doesn't exist)

      IF (Rec."User Security ID" = lEmptyGuid) THEN
      BEGIN
        IF ( NOT (CONFIRM(eConfirmation, TRUE, lUser.TABLECAPTION(), Rec."User ID"))) THEN
          EXIT;
        NablementUserManagement.UpdateUser(Rec, FALSE);
      END;

      lUser.GET(Rec."User Security ID");
      PAGE.RUN(PAGE::"User Card", lUser);
    END;

    PROCEDURE ShowUserSetup@1000000014();
    VAR
      lUserSetup@1000000000 : Record 91;
      eConfirmation@1000000001 : TextConst 'ENU=%1 hasn''t been created for user "%2". Do you want to create it now?;ENG=%1 hasn''t been created for user "%2". Do you want to create it now?';
    BEGIN
      //DOC NA2016.10 - Showing user setup (or proposing to create it if it doesn't exist)

      IF ( NOT (lUserSetup.GET(Rec."User ID"))) THEN
      BEGIN
        IF ( NOT (CONFIRM(eConfirmation, TRUE, lUserSetup.TABLECAPTION(), Rec."User ID"))) THEN
          EXIT;
        NablementUserManagement.UpdateUserSetup(Rec, FALSE);
      END;

      lUserSetup.GET(Rec."User ID");
      PAGE.RUN(PAGE::"User Setup", lUserSetup);
    END;

    PROCEDURE ShowContact@1000000001();
    VAR
      eConfirmation@1000000000 : TextConst 'ENU=%1 hasn''t been created for user "%2". Do you want to create it now?;ENG=%1 hasn''t been created for user "%2". Do you want to create it now?';
      lContact@1000000001 : Record 5050;
    BEGIN
      //DOC NA2016.10 - Showing contact (or proposing to create it if it is empty)

      IF (Rec."Contact No." = '') THEN
      BEGIN
        IF ( NOT (CONFIRM(eConfirmation, TRUE, lContact.TABLECAPTION(), Rec."User ID"))) THEN
          EXIT;
        NablementUserManagement.UpdateContact(Rec, FALSE);
      END;

      lContact.GET(Rec."Contact No.");
      PAGE.RUN(PAGE::"Contact Card", lContact);
    END;

    PROCEDURE ShowSalespersonPurchaser@1000000002();
    VAR
      eConfirmation@1000000000 : TextConst 'ENU=%1 hasn''t been created for user "%2". Do you want to create it now?;ENG=%1 hasn''t been created for user "%2". Do you want to create it now?';
      lSalespersonPurchaser@1000000001 : Record 13;
    BEGIN
      //DOC NA2016.10 - Showing salesperson/purchaser (or proposing to create it if it is empty)

      IF (Rec."Salesperson/Purchaser Code" = '') THEN
      BEGIN
        IF ( NOT (CONFIRM(eConfirmation, TRUE, lSalespersonPurchaser.TABLECAPTION(), Rec."User ID"))) THEN
          EXIT;
        NablementUserManagement.UpdateSalespersonPurchaser(Rec, FALSE);
      END;

      lSalespersonPurchaser.GET(Rec."Salesperson/Purchaser Code");
      PAGE.RUN(PAGE::"Salesperson/Purchaser Card", lSalespersonPurchaser);
    END;

    PROCEDURE ShowVendor@1000000010();
    VAR
      eConfirmation@1000000000 : TextConst 'ENU=%1 hasn''t been created for user "%2". Do you want to create it now?;ENG=%1 hasn''t been created for user "%2". Do you want to create it now?';
      lVendor@1000000001 : Record 23;
    BEGIN
      //DOC NA2016.10 - Showing vendor (or proposing to create it if it is empty)

      IF (Rec."Vendor No." = '') THEN
      BEGIN
        IF ( NOT (CONFIRM(eConfirmation, TRUE, lVendor.TABLECAPTION(), Rec."User ID"))) THEN
          EXIT;
        NablementUserManagement.UpdateVendor(Rec, FALSE);
      END;

      lVendor.GET(Rec."Vendor No.");
      PAGE.RUN(PAGE::"Vendor Card", lVendor);
    END;

    PROCEDURE ShowResource@1000000011();
    VAR
      eConfirmation@1000000000 : TextConst 'ENU=%1 hasn''t been created for user "%2". Do you want to create it now?;ENG=%1 hasn''t been created for user "%2". Do you want to create it now?';
      lResource@1000000001 : Record 156;
    BEGIN
      //DOC NA2016.10 - Showing resource (or proposing to create it if it is empty)

      IF (Rec."Resource No." = '') THEN
      BEGIN
        IF ( NOT (CONFIRM(eConfirmation, TRUE, lResource.TABLECAPTION(), Rec."User ID"))) THEN
          EXIT;
        NablementUserManagement.UpdateResource(Rec, FALSE);
      END;

      lResource.GET(Rec."Resource No.");
      PAGE.RUN(PAGE::"Resource Card", lResource);
    END;

    PROCEDURE ShowEmployee@1000000012();
    VAR
      eConfirmation@1000000000 : TextConst 'ENU=%1 hasn''t been created for user "%2". Do you want to create it now?;ENG=%1 hasn''t been created for user "%2". Do you want to create it now?';
      lEmployee@1000000001 : Record 5200;
    BEGIN
      //DOC NA2016.10 - Showing employee (or proposing to create it if it is empty)

      IF (Rec."Employee No." = '') THEN
      BEGIN
        IF ( NOT (CONFIRM(eConfirmation, TRUE, lEmployee.TABLECAPTION(), Rec."User ID"))) THEN
          EXIT;
        NablementUserManagement.UpdateEmployee(Rec, FALSE);
      END;

      lEmployee.GET(Rec."Employee No.");
      PAGE.RUN(PAGE::"Employee Card", lEmployee);
    END;

    BEGIN
    {
      //DOC NA2016.10 JH 25/08/2015 - Created
      //DOC NA2016.11 JH 02/12/2015 - Keys added
      //DOC NA2016.12 JH 27/12/2015 - Thumbnail added
      //DOC NA2016.12 JH 28/01/2016 - Name changed, captions fixed
      //DOC NA2016.16 PC 05/02/2016 - Added "SMTP Mail Setup" field
      //DOC NA2016.15 JH 06/05/2016 - CfMD amendments
    }
    END.
  }
}

