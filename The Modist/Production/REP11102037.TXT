OBJECT Report 11102037 OM - Compare C/AL Code
{
  OBJECT-PROPERTIES
  {
    Date=01/10/13;
    Time=12:00:00 PM;
    Version List=OMA9.01;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Compare C/AL Code;
               ENU=Compare C/AL Code;
               ESP=Compare C/AL Code;
               FRA=Compare C/AL Code;
               NLD=C/AL Code vergelijken;
               DEA=Compare C/AL Code];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  Setup.CustomGet;
                END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table2000000001;
               DataItemTableView=SORTING(Type,Company Name,ID)
                                 WHERE(Type=FILTER(<>TableData),
                                       Company Name=FILTER(''));
               OnPreDataItem=VAR
                               CALHistoryObject@1000 : Record 11102052;
                               Object@1001 : Record 2000000001;
                               ObjectHistoryDateTime@1002 : DateTime;
                               ctCompareCALCode@1003 : TextConst 'DEU=Comparing C/AL Code...;ENU=Comparing C/AL Code...;ESP=Comparing C/AL Code...;FRA=Comparing C/AL Code...;NLD=C/AL code vergelijken...;DEA=Comparing C/AL Code...';
                               ctSelectingObjects@1004 : TextConst 'DEU=Selecting objects...;ENU=Selecting objects...;ESP=Selecting objects...;FRA=Selecting objects...;NLD=Objecten selecteren...;DEA=Selecting objects...';
                             BEGIN
                               IF PeilDateTime[2] = 0DT THEN
                                 PeilDateTime[2] := DefaultPeilDateTime2;

                               IF LeftSideBaseLine THEN BEGIN
                                 FromDate := 01011900D;
                                 FromTime := 000000T;
                               END ELSE BEGIN
                                 FromDate := DT2DATE(PeilDateTime[1]);
                                 FromTime := DT2TIME(PeilDateTime[1]);
                               END;

                               TillDate := DT2DATE(PeilDateTime[2]);
                               TillTime := DT2TIME(PeilDateTime[2]);

                               Progressbar.Open(ctCompareCALCode, 2);
                               Progressbar.Text1 := ctSelectingObjects;

                               IF OnlyChangedObjects THEN BEGIN
                                 CALHistoryObject.SETCURRENTKEY("Object Date", "Object Time");
                                 CALHistoryObject.SETFILTER("Object Date", '%1..%2', FromDate, TillDate);
                                 CALHistoryObject.SETRANGE("C/AL Code Present", TRUE);
                                 Progressbar.BarSize := CALHistoryObject.COUNT * 2;
                                 IF CALHistoryObject.FINDSET THEN
                                   REPEAT

                                     CALHistoryObject.FillObjectFields(Object);
                                     Progressbar.Text1Object := Object;
                                     Progressbar.AddToBar(1);

                                     ObjectHistoryDateTime := CREATEDATETIME(CALHistoryObject."Object Date", CALHistoryObject."Object Time");
                                     IF (ObjectHistoryDateTime >= PeilDateTime[1] - 1000) AND (ObjectHistoryDateTime <= PeilDateTime[2] + 1000) THEN BEGIN
                                       Type := CALHistoryObject."Object Type";
                                       "Company Name" := '';
                                       ID := CALHistoryObject."Object No.";
                                       MARK(TRUE);
                                     END;
                                   UNTIL CALHistoryObject.NEXT = 0;

                                 MARKEDONLY(TRUE);

                               END;

                               IF OnlyChangedObjects THEN BEGIN
                                 Progressbar.BarSize := COUNT * 2;
                                 Progressbar.BarPosition := COUNT;
                               END ELSE
                                 Progressbar.BarSize := COUNT;
                             END;

               OnAfterGetRecord=VAR
                                  SourceControl@1000 : Codeunit 11102050;
                                  ctSelectionCALHistory@1001 : TextConst 'DEU=Selecting C/AL...;ENU=Selecting C/AL...;ESP=Selecting C/AL...;FRA=Selecting C/AL...;NLD=C/AL selecteren...;DEA=Selecting C/AL...';
                                BEGIN
                                  Progressbar.Text1 := ctSelectionCALHistory;
                                  Progressbar.AddToBar(1);
                                  Progressbar.Text2Object := Object;

                                  SourceControl.GetCALHistoryFromTill(
                                    Type, ID,
                                    FromDate, FromTime, TillDate, TillTime,
                                    TmpCALHistoryObjLeftSide, TmpCALHistoryObjRightSide, TRUE);
                                END;

               OnPostDataItem=VAR
                                SourceControl@1000 : Codeunit 11102050;
                                ctExportingObjects@1001 : TextConst 'DEU=Exporting Objects...;ENU=Exporting Objects...;ESP=Exporting Objects...;FRA=Exporting Objects...;NLD=Objecten exporteren...;DEA=Exporting Objects...';
                              BEGIN
                                Progressbar.Text1 := ctExportingObjects;
                                Progressbar.Text2 := '';

                                CASE ActionType OF

                                  ActionType::"Compare in Directory" :
                                    SourceControl.ShowChangesRangeHistoryVersion(TmpCALHistoryObjLeftSide, TmpCALHistoryObjRightSide, FALSE);

                                  ActionType::"Compare in One File" :
                                    SourceControl.ShowChangesRangeHistoryVersion(TmpCALHistoryObjLeftSide, TmpCALHistoryObjRightSide, TRUE);
                                END;

                                Progressbar.Close;
                              END;

               ReqFilterFields=Type,ID,Date,Version List }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      CaptionML=[DEU=Compare C/AL Code;
                 ENU=Compare C/AL Code;
                 ESP=Compare C/AL Code;
                 FRA=Compare C/AL Code;
                 NLD=C/AL Code vergelijken;
                 DEA=Compare C/AL Code];
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   IF NOT RequestFormInititialized THEN BEGIN
                     ActionType := ActionType::"Compare in Directory";
                     RequestFormInititialized := TRUE;

                     OnlyChangedObjects := TRUE;

                   END;

                   FormatPeilDatum;
                 END;

    }
    CONTROLS
    {
      { 1   ;    ;Container ;
                  ContainerType=ContentArea }

      { 2   ;1   ;Field     ;
                  CaptionML=[DEU=Compare Mode;
                             ENU=Compare Mode;
                             ESP=Compare Mode;
                             FRA=Compare Mode;
                             NLD=Vergelijkmodus;
                             DEA=Compare Mode];
                  OptionCaptionML=[DEU=Compare in Directory,Compare in One File;
                                   ENU=Compare in Directory,Compare in One File;
                                   ESP=Compare in Directory,Compare in One File;
                                   FRA=Compare in Directory,Compare in One File;
                                   NLD=Vergelijken in map,Vergelijk in ‚‚n bestand;
                                   DEA=Compare in Directory,Compare in One File];
                  SourceExpr=ActionType }

      { 3   ;1   ;Field     ;
                  CaptionML=[DEU=Only Changed Objects;
                             ENU=Only Changed Objects;
                             ESP=Only Changed Objects;
                             FRA=Only Changed Objects;
                             NLD=Alleen gewijzigde objecten;
                             DEA=Only Changed Objects];
                  SourceExpr=OnlyChangedObjects }

      { 9   ;1   ;Field     ;
                  CaptionML=[DEU=Left Side Base Line;
                             ENU=Left Side Base Line;
                             ESP=Left Side Base Line;
                             FRA=Left Side Base Line;
                             NLD=Linkerkant baseline;
                             DEA=Left Side Base Line];
                  SourceExpr=LeftSideBaseLine }

      { 4   ;1   ;Field     ;
                  CaptionML=[DEU=Measure Date Left Side;
                             ENU=Measure Date Left Side;
                             ESP=Measure Date Left Side;
                             FRA=Measure Date Left Side;
                             NLD=Peildatum linkerkant;
                             DEA=Measure Date Left Side];
                  SourceExpr=DisplayPeilDateTime[1];
                  Enabled=NOT LeftSideBaseLine;
                  OnValidate=BEGIN
                               IF DisplayPeilDateTime[1] = '' THEN
                                 PeilDateTime[1] := 0DT
                               ELSE
                                 EVALUATE(PeilDateTime[1], DisplayPeilDateTime[1]);

                               FormatPeilDatum;
                             END;
                              }

      { 5   ;1   ;Field     ;
                  CaptionML=[DEU=Measure Date Right Side;
                             ENU=Measure Date Right Side;
                             ESP=Measure Date Right Side;
                             FRA=Measure Date Right Side;
                             NLD=Peildatum rechterkant;
                             DEA=Measure Date Right Side];
                  SourceExpr=DisplayPeilDateTime[2];
                  StyleExpr=PeilDateTimeStyle;
                  OnValidate=BEGIN
                               IF DisplayPeilDateTime[2] = '' THEN
                                 PeilDateTime[2] := 0DT
                               ELSE
                                 EVALUATE(PeilDateTime[2], DisplayPeilDateTime[2]);

                               FormatPeilDatum;
                             END;
                              }

      { 6   ;1   ;Field     ;
                  SourceExpr=RequestFormInititialized;
                  Visible=FALSE }

      { 7   ;1   ;Field     ;
                  SourceExpr=PeilDateTime[1];
                  Visible=FALSE }

      { 8   ;1   ;Field     ;
                  SourceExpr=PeilDateTime[2];
                  Visible=FALSE }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Setup@1000 : Record 11102035;
      TmpCALHistoryObjLeftSide@1001 : TEMPORARY Record 11102052;
      TmpCALHistoryObjRightSide@1002 : TEMPORARY Record 11102052;
      Progressbar@1003 : Codeunit 11102044;
      FromDate@1004 : Date;
      TillDate@1005 : Date;
      PeilDateTime@1006 : ARRAY [2] OF DateTime;
      FromTime@1007 : Time;
      TillTime@1008 : Time;
      DisplayPeilDateTime@1009 : ARRAY [2] OF Text;
      PeilDateTimeStyle@1010 : Text INDATASET;
      ActionType@1011 : 'Compare in Directory,Compare in One File';
      LeftSideBaseLine@1012 : Boolean INDATASET;
      OnlyChangedObjects@1013 : Boolean;
      RequestFormInititialized@1014 : Boolean;

    LOCAL PROCEDURE DefaultPeilDateTime2@1() : DateTime;
    VAR
      PeilDate1@1000 : Date;
      PeilTime1@1001 : Time;
    BEGIN
      PeilDate1 := DT2DATE(PeilDateTime[1]);
      PeilTime1 := DT2TIME(PeilDateTime[1]);

      IF PeilTime1 = 000000T THEN
        EXIT(CREATEDATETIME(PeilDate1, 235900T))
      ELSE
        EXIT(PeilDateTime[1]);
    END;

    LOCAL PROCEDURE FormatPeilDatum@2();
    BEGIN
      IF PeilDateTime[1] = 0DT THEN
        DisplayPeilDateTime[1] := ''
      ELSE
        DisplayPeilDateTime[1] := FORMAT(PeilDateTime[1]);

      IF PeilDateTime[2] = 0DT THEN BEGIN
        DisplayPeilDateTime[2] := '<' + FORMAT(DefaultPeilDateTime2) + '>';
        PeilDateTimeStyle := 'Subordinate';
      END ELSE BEGIN
        DisplayPeilDateTime[2] := FORMAT(PeilDateTime[2]);
        PeilDateTimeStyle := '';
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

