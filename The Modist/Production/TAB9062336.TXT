OBJECT Table 9062336 System Colour
{
  OBJECT-PROPERTIES
  {
    Date=10/05/16;
    Time=12:00:00 PM;
    Version List=NA2016.15;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               mTnpToolkit.UpdateCreatedBy(Rec."Created By", Rec."Created Date Time");
             END;

    OnModify=BEGIN
               mTnpToolkit.UpdateModifiedBy(Rec."Modified By", Rec."Modified Date Time");
             END;

    CaptionML=[ENU=System Colour;
               ENG=System Colour];
    LookupPageID=Page9062398;
    DrillDownPageID=Page9062398;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code20        ;OnValidate=BEGIN
                                                                IF ((Rec.Description = '') OR (COPYSTR(UPPERCASE(Rec.Description), 1, MAXSTRLEN(Rec.Code)) = xRec.Code)) THEN
                                                                  Rec.VALIDATE(Description, String.ToTitleCase(Rec.Code));
                                                              END;

                                                   CaptionML=[ENU=Code;
                                                              ENG=Code] }
    { 2   ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              ENG=Description] }
    { 3   ;   ;Red                 ;Integer       ;OnValidate=BEGIN
                                                                IF (Rec.Red <> 0) THEN
                                                                  Rec."Special Colour" := Rec."Special Colour"::" ";
                                                                UpdateRecord();
                                                              END;

                                                   CaptionML=[ENU=Red;
                                                              ENG=Red];
                                                   MinValue=0;
                                                   MaxValue=255 }
    { 4   ;   ;Green               ;Integer       ;OnValidate=BEGIN
                                                                IF (Rec.Green <> 0) THEN
                                                                  Rec."Special Colour" := Rec."Special Colour"::" ";
                                                                UpdateRecord();
                                                              END;

                                                   CaptionML=[ENU=Green;
                                                              ENG=Green];
                                                   MinValue=0;
                                                   MaxValue=255 }
    { 5   ;   ;Blue                ;Integer       ;OnValidate=BEGIN
                                                                IF (Rec.Blue <> 0) THEN
                                                                  Rec."Special Colour" := Rec."Special Colour"::" ";
                                                                UpdateRecord();
                                                              END;

                                                   CaptionML=[ENU=Blue;
                                                              ENG=Blue];
                                                   MinValue=0;
                                                   MaxValue=255 }
    { 6   ;   ;Value               ;Integer       ;CaptionML=[ENU=Value;
                                                              ENG=Value] }
    { 7   ;   ;Bitmap              ;BLOB          ;CaptionML=[ENU=Bitmap;
                                                              ENG=Bitmap];
                                                   SubType=Bitmap }
    { 8   ;   ;Sequence            ;Integer       ;CaptionML=[ENU=Sequence;
                                                              ENG=Sequence] }
    { 9   ;   ;Special Colour      ;Option        ;OnValidate=BEGIN
                                                                IF (Rec."Special Colour" <> xRec."Special Colour") THEN
                                                                BEGIN
                                                                  Rec.Red := 0;
                                                                  Rec.Green := 0;
                                                                  Rec.Blue := 0;
                                                                  UpdateRecord();
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Special Colour;
                                                              ENG=Special Colour];
                                                   OptionCaptionML=[ENU=" ,Transparent,Desktop,App Workspace,Window,Window Frame,Window Text,Active Caption,Control,Control Dark,Control Dark Dark,Control Light,Control Light Light,Control Text,Active Caption Text,Button Face,Button Highlight,Button Shadow,Gray Text,Highlight,Highlight Text,Hot Track,Inactive Border,Inactive Caption,Inactive Caption Text,Gradient Active Caption,Gradient Inactive Caption,Info,Info Text,Menu,Menu Text,Menu Bar,Menu Highlight,Scroll Bar";
                                                                    ENG=" ,Transparent,Desktop,App Workspace,Window,Window Frame,Window Text,Active Caption,Control,Control Dark,Control Dark Dark,Control Light,Control Light Light,Control Text,Active Caption Text,Button Face,Button Highlight,Button Shadow,Gray Text,Highlight,Highlight Text,Hot Track,Inactive Border,Inactive Caption,Inactive Caption Text,Gradient Active Caption,Gradient Inactive Caption,Info,Info Text,Menu,Menu Text,Menu Bar,Menu Highlight,Scroll Bar"];
                                                   OptionString=[ ,Transparent,Desktop,App Workspace,Window,Window Frame,Window Text,Active Caption,Control,Control Dark,Control Dark Dark,Control Light,Control Light Light,Control Text,Active Caption Text,Button Face,Button Highlight,Button Shadow,Gray Text,Highlight,Highlight Text,Hot Track,Inactive Border,Inactive Caption,Inactive Caption Text,Gradient Active Caption,Gradient Inactive Caption,Info,Info Text,Menu,Menu Text,Menu Bar,Menu Highlight,Scroll Bar] }
    { 10  ;   ;Name                ;Text50        ;CaptionML=[ENU=Name;
                                                              ENG=Name] }
    { 11  ;   ;Control Style       ;Option        ;CaptionML=[ENU=Control Style;
                                                              ENG=Control Style];
                                                   OptionCaptionML=[ENU=None,,,,,,,Favorable,Unfavorable,Ambiguous,Subordinate;
                                                                    ENG=None,,,,,,,Favorable,Unfavorable,Ambiguous,Subordinate];
                                                   OptionString=None,,,,,,,Favorable,Unfavorable,Ambiguous,Subordinate }
    { 12  ;   ;H                   ;Integer       ;CaptionML=[ENU=H;
                                                              ENG=H] }
    { 13  ;   ;S                   ;Integer       ;CaptionML=[ENU=S;
                                                              ENG=S] }
    { 14  ;   ;V                   ;Integer       ;CaptionML=[ENU=V;
                                                              ENG=V] }
    { 1000;   ;Created By          ;Code50        ;OnLookup=BEGIN
                                                              mLoginManagement.LookupUserID(Rec."Created By");
                                                            END;

                                                   CaptionML=[ENU=Created By;
                                                              ENG=Created By] }
    { 1001;   ;Created Date Time   ;DateTime      ;CaptionML=[ENU=Created Date Time;
                                                              ENG=Created Date Time] }
    { 1002;   ;Modified By         ;Code50        ;OnLookup=BEGIN
                                                              mLoginManagement.LookupUserID(Rec."Modified By");
                                                            END;

                                                   CaptionML=[ENU=Modified By;
                                                              ENG=Modified By] }
    { 1003;   ;Modified Date Time  ;DateTime      ;CaptionML=[ENU=Modified Date Time;
                                                              ENG=Modified Date Time] }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
    {    ;Sequence,Code                            }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      mSystemBehaviour@1000000000 : Record 9062230;
      mLoginManagement@1000000001 : Codeunit 418;
      mTnpToolkit@1000000002 : Codeunit 9062230;
      String@1000000003 : Codeunit 9062236;

    PROCEDURE UpdateRecord@1000000001();
    VAR
      lTempBlob@1000000001 : Record 99008535;
      lBitmapManagement@1000000000 : Codeunit 9062243;
      lColourBitmapWidth@1000000002 : Integer;
      lColourBitmapHeight@1000000003 : Integer;
    BEGIN
      //DOC NA2015.4 - Updating colour value and bitmap

      lColourBitmapWidth := mSystemBehaviour.GetInteger('COLOUR_BITMAP_WIDTH');
      lColourBitmapWidth := mTnpToolkit.IIFInteger(lColourBitmapWidth > 0, lColourBitmapWidth, 5);
      lColourBitmapHeight := mSystemBehaviour.GetInteger('COLOUR_BITMAP_HEIGHT');
      lColourBitmapHeight := mTnpToolkit.IIFInteger(lColourBitmapHeight > 0, lColourBitmapHeight, 5);

      IF (Rec."Special Colour" <> Rec."Special Colour"::" ") THEN
        lBitmapManagement.CreateBitmapAdv(lTempBlob, lColourBitmapHeight, lColourBitmapWidth, 0, 0, 0, TRUE, 255, 255, 255)
      ELSE
        lBitmapManagement.CreateBitmap(lTempBlob, lColourBitmapHeight, lColourBitmapWidth, Rec.Red, Rec.Green, Rec.Blue);
      Rec.Bitmap := lTempBlob.Blob;
      IF (Rec.MODIFY()) THEN;

      Rec.Value := (((Rec.Blue * 256) + Rec.Green) * 256) + Rec.Red;
      IF (Rec."Special Colour" <> Rec."Special Colour"::" ") THEN
        Rec.Name := DELCHR(FORMAT(Rec."Special Colour"), '<=>', ' ')
      ELSE
        Rec.Name := STRSUBSTNO('%1,%2,%3', Rec.Red, Rec.Green, Rec.Blue);
    END;

    PROCEDURE CopyFrom@1000000003(pWithModify@1000000000 : Boolean) : Boolean;
    VAR
      lSystemColour@1000000001 : Record 9062336;
      lResult@1000000002 : Boolean;
    BEGIN
      //DOC NA2015.4 - Copying a colour from another colour
      //  -> pWithModify: With the current colour modify
      //  <- TRUE: Copied, FALSE: Cancelled

      Rec.TESTFIELD(Code);

      lSystemColour.RESET();
      lSystemColour.FILTERGROUP(2);
      lSystemColour.SETFILTER(Code, '<>%1', Rec.Code);
      lSystemColour.FILTERGROUP(0);
      IF (PAGE.RUNMODAL(0, lSystemColour) = ACTION::LookupOK) THEN
      BEGIN
        Rec.TRANSFERFIELDS(lSystemColour, FALSE);
        IF (pWithModify) THEN
          Rec.MODIFY(TRUE);
        lResult := TRUE;
      END;

      EXIT(lResult);
    END;

    PROCEDURE ColourName@1000000004(pColourCode@1000000001 : Code[20]) : Text[50];
    VAR
      lColour@1000000000 : Record 9062336;
    BEGIN
      //DOC NA2015.1 - Returning color name
      //  -> pColourCode: Colour code
      //  <- Colour name

      IF ( NOT (lColour.GET(pColourCode))) THEN
        CLEAR(lColour);
      EXIT(lColour.Name);
    END;

    PROCEDURE HtmlColourName@1000000000(pColourCode@1000000000 : Code[20]) : Code[20];
    VAR
      lColour@1000000002 : Record 9062336;
      lName@1000000001 : Code[20];
    BEGIN
      //DOC NA2015.1 - Returning HTML colour name
      //  -> pColourCode: Colour code
      //  <- The name

      IF ( NOT (lColour.GET(pColourCode))) THEN
        CLEAR(lColour);

      lName := '#';
      lName := lName + HtmlColourPart(lColour.Red);
      lName := lName + HtmlColourPart(lColour.Green);
      lName := lName + HtmlColourPart(lColour.Blue);

      EXIT(lName);
    END;

    PROCEDURE HtmlColourPart@1000000002(pValue@1000000001 : Integer) : Code[10];
    VAR
      lPart@1000000000 : Code[10];
    BEGIN
      //DOC NA2015.1 - Returning HTML colour part
      //  -> pValue: Value to convert
      //  <- The part (value converted)

      lPart := '0' + mTnpToolkit.IntegerToHex(pValue, FALSE);
      lPart := COPYSTR(lPart, STRLEN(lPart) - 1, 2);
      EXIT(lPart);
    END;

    PROCEDURE Search@1000000005(pValue@1000000000 : Code[1024]) : Boolean;
    BEGIN
      //DOC NA2015.1 - Searching for colour using the value
      //  -> pValue: The value
      //  <- Colour found

      IF (Rec.GET(COPYSTR(pValue, 1, MAXSTRLEN(Rec.Code)))) THEN
        EXIT(TRUE);

      Rec.SETFILTER(Code, pValue + '*');
      IF (Rec.FINDFIRST()) THEN
      BEGIN
        Rec.SETRANGE(Code);
        EXIT(TRUE);
      END;

      Rec.SETFILTER(Code, '*' + pValue + '*');
      IF (Rec.FINDFIRST()) THEN
      BEGIN
        Rec.SETRANGE(Code);
        EXIT(TRUE);
      END;

      EXIT(FALSE);
    END;

    LOCAL PROCEDURE "--- Color Conversion ---"@1000000006();
    BEGIN
    END;

    PROCEDURE RgbToHsv@1000000007();
    VAR
      Temp@1000000000 : Integer;
      Value@1000000001 : Integer;
      Hue@1000000002 : Integer;
      Saturation@1000000003 : Integer;
    BEGIN
      Temp := Red;
      IF (Temp > Green) THEN
        Temp := Green;
      IF (Temp > Blue) THEN
        Temp := Blue;

      Value := Red;
      IF (Value < Green) THEN
        Value := Green;
      IF (Value < Blue) THEN
        Value := Blue;

      IF Temp = Value THEN
        Hue := 0
      ELSE BEGIN
        IF Red = Value THEN
          Hue := 0 + ((Green- Blue) * 60 DIV (Value - Temp));
        IF Green = Value THEN
          Hue := 120 + ((Blue - Red) * 60 DIV (Value-Temp));
        IF Blue = Value THEN
          Hue := 240 + ((Red - Green) * 60 DIV (Value-Temp));
      END;

      IF Hue<0 THEN
        Hue := Hue+360;

      IF (Value=0) THEN
        Saturation := 0
      ELSE
        Saturation := (Value-Temp)*100 DIV Value;

      Value := (100 * Value) DIV 255;

      H := Hue;
      S := Saturation;
      V := Value;
    END;

    LOCAL PROCEDURE HsvToRgb@1000000008();
    BEGIN
    END;

    BEGIN
    {
      //DOC NA2015.1  JH 19/06/2012 - Created
      //DOC NA2015.1  JH 09/10/2012 - Planning Board 2013
      //DOC NA2015.1  JH 04/10/2013 - Renamed to "Colour", special colours added
      //DOC NA2015.4  AZ 02/10/2014 - "Control Style" field added
      //DOC NA2015.4  JH 02/01/2015 - System behaviour used instead of nAblement setup
      //DOC NA2016.4  JH 01/09/2015 - Upgraded to 2016
      //DOC NA2016.12 AZ 27/01/2016 - HSV colour conversion added
      //DOC NA2016.12 JH 28/01/2016 - New string codeunit
      //DOC NA2016.15 JH 06/05/2016 - CfMD amendments
    }
    END.
  }
}

