OBJECT Table 9062578 Vendor Inv. Template
{
  OBJECT-PROPERTIES
  {
    Date=14/07/16;
    Time=12:39:54 PM;
    Version List=NH2016.16;
  }
  PROPERTIES
  {
    OnInsert=VAR
               NoSeriesMgt@1000000001 : Codeunit 396;
               eInvoiceText@1000000000 : TextConst 'ENU=Invoice|Document No.|Invoice No.;ENG=Invoice|Document No.|Invoice No.';
               eDocumentDateText@1000000002 : TextConst 'ENU=Date|Document Date;ENG=Date|Document Date';
               ePurchaseOrderText@1000000003 : TextConst 'ENU=Purchase Order|PO No.|Customer Ref.;ENG=Purchase Order|PO No.|Customer Ref.';
               eDueDateText@1000000004 : TextConst 'ENU=Due Date|Pay By;ENG=Due Date|Pay By';
               eTotalAmountText@1000000005 : TextConst 'ENU=Total Amount;ENG=Total Amount';
               eVendorDateFormat@1000000006 : TextConst 'ENU=dd/mm/yy;ENG=dd/mm/yy';
             BEGIN
               IF Code = '' THEN BEGIN
                 VerifyNoSeries();
                 Code := NoSeriesMgt.GetNextNo(tNoSeriesCode,TODAY,TRUE);
               END;

               "Invoice Text" := eInvoiceText;
               "Document Date Text" := eDocumentDateText;
               "Purchase Order Text" := ePurchaseOrderText;
               "Due Date Text" := eDueDateText;
               "Total Amount Text" := eTotalAmountText;
               "Vendor Date Format" := eVendorDateFormat;
               "Vendor Thousand Separator" := Rec."Vendor Thousand Separator"::Comma;
               IF "Template Type" = Rec."Template Type"::Vendor THEN
                TESTFIELD("Vendor No.");
             END;

    CaptionML=[ENU=Vendor Inv. Template;
               ENG=Vendor Inv. Template];
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code20        ;OnValidate=VAR
                                                                NoSeriesMgt@1000000000 : Codeunit 396;
                                                              BEGIN
                                                                IF Code = '' THEN BEGIN
                                                                  VerifyNoSeries();
                                                                  Code := NoSeriesMgt.GetNextNo('VENDINVTPL',TODAY,TRUE);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Code;
                                                              ENG=Code] }
    { 2   ;   ;Vendor No.          ;Code20        ;TableRelation=Vendor.No.;
                                                   OnValidate=VAR
                                                                Vendor@1000000000 : Record 23;
                                                              BEGIN
                                                                IF Vendor.GET("Vendor No.") THEN BEGIN
                                                                  "Text To Identify Invoice" := Vendor.Name;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Vendor No.;
                                                              ENG=Vendor No.] }
    { 3   ;   ;Vendor Name         ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Vendor.Name WHERE (No.=FIELD(Vendor No.)));
                                                   CaptionML=[ENU=Vendor Name;
                                                              ENG=Vendor Name];
                                                   Editable=No }
    { 4   ;   ;Text To Identify Invoice;Text250   ;CaptionML=[ENU=Text To Identify Invoice;
                                                              ENG=Text To Identify Invoice] }
    { 5   ;   ;Invoice Text        ;Text250       ;CaptionML=[ENU=Invoice Text;
                                                              ENG=Invoice Text] }
    { 6   ;   ;Document Date Text  ;Text250       ;CaptionML=[ENU=Document Date Text;
                                                              ENG=Document Date Text] }
    { 7   ;   ;Purchase Order Text ;Text250       ;CaptionML=[ENU=Purchase Order Text;
                                                              ENG=Purchase Order Text] }
    { 8   ;   ;Due Date Text       ;Text250       ;CaptionML=[ENU=Due Date Text;
                                                              ENG=Due Date Text] }
    { 9   ;   ;Total Amount Text   ;Text250       ;CaptionML=[ENU=Total Amount Text;
                                                              ENG=Total Amount Text] }
    { 10  ;   ;MISC G/L Account No.;Text250       ;TableRelation="G/L Account";
                                                   CaptionML=[ENU=MISC G/L Account No.;
                                                              ENG=MISC G/L Account No.] }
    { 11  ;   ;Vendor Date Format  ;Text250       ;CaptionML=[ENU=Vendor Date Format;
                                                              ENG=Vendor Date Format] }
    { 12  ;   ;Vendor Thousand Separator;Option   ;CaptionML=[ENU=Vendor Thousand Separator;
                                                              ENG=Vendor Thousand Separator];
                                                   OptionCaptionML=[ENU=Dot,Comma;
                                                                    ENG=Dot,Comma];
                                                   OptionString=Dot,Comma }
    { 13  ;   ;Due Date Rule       ;Option        ;CaptionML=[ENU=Due Date Rule;
                                                              ENG=Due Date Rule];
                                                   OptionCaptionML=[ENU=Latest Date,Entered Date,System Payment Terms;
                                                                    ENG=Latest Date,Entered Date,System Payment Terms];
                                                   OptionString=Latest Date,Entered Date,System Payment Terms }
    { 14  ;   ;Template Type       ;Option        ;CaptionML=[ENU=Template Type;
                                                              ENG=Template Type];
                                                   OptionCaptionML=[ENU=Vendor,Generic;
                                                                    ENG=Vendor,Generic];
                                                   OptionString=Vendor,Generic }
    { 15  ;   ;Invoice Tolerance % (LCY);Decimal  ;CaptionML=[ENU=Invoice Tolerance % (LCY);
                                                              ENG=Invoice Tolerance % (LCY)] }
    { 16  ;   ;Invoice Tolerance Amount (LCY);Decimal;
                                                   CaptionML=[ENU=Invoice Tolerance Amount (LCY);
                                                              ENG=Invoice Tolerance Amount (LCY)] }
    { 17  ;   ;Delivery Note Text  ;Text250       ;CaptionML=[ENU=Delivery Note Text;
                                                              ENG=Delivery Note Text] }
    { 18  ;   ;Date Format         ;Option        ;OnValidate=BEGIN
                                                                IF "Date Format" = "Date Format"::UK THEN
                                                                  VALIDATE("Vendor Date Format",'dd/mm/yy')
                                                                ELSE
                                                                  VALIDATE("Vendor Date Format",'mm/dd/yy');
                                                              END;

                                                   CaptionML=[ENU=Date Format;
                                                              ENG=Date Format];
                                                   OptionCaptionML=[ENU=UK,US;
                                                                    ENG=UK,US];
                                                   OptionString=UK,US }
    { 19  ;   ;Short Invoice Number (4-10);Boolean;CaptionML=[ENU=Short Invoice Number (4-10);
                                                              ENG=Short Invoice Number (4-10)] }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      tNoSeriesCode@1000000000 : TextConst 'ENU=VENDINVTPL;ENG=VENDINVTPL';
      tNoSeriesDescription@1000000001 : TextConst 'ENU=Vendor Invoice Matching Template;ENG=Vendor Invoice Matching Template';
      tNoSeriesStartingNo@1000000002 : TextConst 'ENU=INVTPL00001;ENG=INVTPL00001';

    LOCAL PROCEDURE VerifyNoSeries@9062229();
    VAR
      lNoSeriesToolkit@9062229 : Codeunit 9062598;
    BEGIN
      lNoSeriesToolkit.CreateNoSeriesAdv(tNoSeriesCode, tNoSeriesDescription, TRUE, FALSE, tNoSeriesStartingNo);
    END;

    BEGIN
    {
      //DOC NH2016.10 JH 01/10/2015 - Upgraded to 2016
      //DOC NH2016.15 JH 15/04/2016 - CfMD amendments
      //DOC NH2016.16 AP 20/06/2016 - Added new fields ['Delivery Note Text','Date Format','Short Invoice Number (4-10)']
    }
    END.
  }
}

