OBJECT Codeunit 1247 Process Gen. Journal  Lines
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    TableNo=81;
    Permissions=TableData 1220=rimd;
    OnRun=VAR
            DataExch@1001 : Record 1220;
            ProcessDataExch@1002 : Codeunit 1201;
            RecRef@1000 : RecordRef;
          BEGIN
            DataExch.GET("Data Exch. Entry No.");
            RecRef.GETTABLE(Rec);
            ProcessDataExch.ProcessAllLinesColumnMapping(DataExch,RecRef);
          END;

  }
  CODE
  {
    VAR
      ProgressWindowMsg@1000 : TextConst 'ENU=Please wait while the operation is being completed.;ENG=Please wait while the operation is being completed.';

    PROCEDURE ImportBankStatement@700(GenJnlLine@1004 : Record 81);
    VAR
      GenJnlBatch@1005 : Record 232;
      BankAcc@1000 : Record 270;
      BankExportImportSetup@1009 : Record 1200;
      DataExchDef@1001 : Record 1222;
      DataExchMapping@1002 : Record 1224;
      DataExchLineDef@1007 : Record 1227;
      DataExch@1003 : Record 1220;
      GenJnlLineTemplate@1006 : Record 81;
      ProgressWindow@1008 : Dialog;
    BEGIN
      GenJnlBatch.GET(GenJnlLine."Journal Template Name",GenJnlLine."Journal Batch Name");

      CASE GenJnlBatch."Bal. Account Type" OF
        GenJnlBatch."Bal. Account Type"::"Bank Account":
          BEGIN
            GenJnlBatch.TESTFIELD("Bal. Account No.");
            BankAcc.GET(GenJnlBatch."Bal. Account No.");
            BankAcc.GetDataExchDef(DataExchDef);
          END;
        GenJnlBatch."Bal. Account Type"::"G/L Account":
          BEGIN
            GenJnlBatch.TESTFIELD("Bank Statement Import Format");
            BankExportImportSetup.GET(GenJnlBatch."Bank Statement Import Format");
            BankExportImportSetup.TESTFIELD("Data Exch. Def. Code");
            DataExchDef.GET(BankExportImportSetup."Data Exch. Def. Code");
            DataExchDef.TESTFIELD(Type,DataExchDef.Type::"Bank Statement Import");
          END;
        ELSE
          GenJnlBatch.FIELDERROR("Bal. Account Type");
      END;
      CreateGeneralJournalLineTemplate(GenJnlLineTemplate,GenJnlLine);

      IF NOT DataExch.ImportToDataExch(DataExchDef)THEN
        EXIT;

      GenJnlLineTemplate."Data Exch. Entry No." := DataExch."Entry No.";

      ProgressWindow.OPEN(ProgressWindowMsg);

      DataExchLineDef.SETRANGE("Data Exch. Def Code",DataExchDef.Code);
      DataExchLineDef.FINDFIRST;

      DataExchMapping.GET(DataExchDef.Code,DataExchLineDef.Code,DATABASE::"Gen. Journal Line");
      DataExchMapping.TESTFIELD("Mapping Codeunit");
      CODEUNIT.RUN(DataExchMapping."Mapping Codeunit",GenJnlLineTemplate);

      UpdateGenJournalLines(GenJnlLineTemplate);

      ProgressWindow.CLOSE;
    END;

    LOCAL PROCEDURE CreateGeneralJournalLineTemplate@701(VAR GenJournalLineTemplate@1003 : Record 81;GenJournalLine@1002 : Record 81);
    BEGIN
      WITH GenJournalLineTemplate DO BEGIN
        "Journal Template Name" := GenJournalLine."Journal Template Name";
        "Journal Batch Name" := GenJournalLine."Journal Batch Name";
        SetUpNewLine(GenJournalLine,GenJournalLine."Balance (LCY)",TRUE);
        "Account Type" := "Account Type"::"G/L Account";

        GenJournalLine.SETRANGE("Journal Template Name",GenJournalLine."Journal Template Name");
        GenJournalLine.SETRANGE("Journal Batch Name",GenJournalLine."Journal Batch Name");
        IF GenJournalLine.FINDLAST THEN BEGIN
          "Line No." := GenJournalLine."Line No.";
          "Document No." := INCSTR(GenJournalLine."Document No.");
        END ELSE
          "Document No." := GenJournalLine."Document No.";
      END;
    END;

    LOCAL PROCEDURE UpdateGenJournalLines@702(VAR GenJournalLineTemplate@1000 : Record 81);
    VAR
      GenJournalLine@1002 : Record 81;
      DocNo@1001 : Code[20];
    BEGIN
      GenJournalLine.SETRANGE("Journal Template Name",GenJournalLineTemplate."Journal Template Name");
      GenJournalLine.SETRANGE("Journal Batch Name",GenJournalLineTemplate."Journal Batch Name");
      GenJournalLine.SETFILTER("Line No.",'>%1',GenJournalLineTemplate."Line No.");
      IF GenJournalLine.FINDSET THEN BEGIN
        DocNo := GenJournalLineTemplate."Document No.";
        REPEAT
          GenJournalLine.VALIDATE("Document No.",DocNo);
          GenJournalLine.MODIFY(TRUE);
          DocNo := INCSTR(DocNo);
        UNTIL GenJournalLine.NEXT = 0;
      END;
    END;

    BEGIN
    END.
  }
}

