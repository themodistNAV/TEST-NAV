OBJECT Codeunit 1420 Doc. Exch. Serv.- Doc. Status
{
  OBJECT-PROPERTIES
  {
    Date=26/11/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00.00.43897;
  }
  PROPERTIES
  {
    OnRun=BEGIN
            CheckPostedInvoices;
            CheckPostedCrMemos;
            CheckPostedServiceInvoices;
            CheckPostedServiceCrMemos;
          END;

  }
  CODE
  {
    VAR
      DocExchLinks@1000 : Codeunit 1411;

    LOCAL PROCEDURE CheckPostedInvoices@1();
    VAR
      SalesInvoiceHeader@1002 : Record 112;
    BEGIN
      WITH SalesInvoiceHeader DO BEGIN
        SETFILTER("Document Exchange Status",STRSUBSTNO('%1|%2',
            "Document Exchange Status"::"Sent to Document Exchange Service",
            "Document Exchange Status"::"Pending Connection to Recipient"));
        IF FINDSET THEN
          REPEAT
            DocExchLinks.CheckAndUpdateDocExchInvoiceStatus(SalesInvoiceHeader);
            COMMIT;
          UNTIL NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE CheckPostedCrMemos@2();
    VAR
      SalesCrMemoHeader@1000 : Record 114;
    BEGIN
      WITH SalesCrMemoHeader DO BEGIN
        SETFILTER("Document Exchange Status",STRSUBSTNO('%1|%2',
            "Document Exchange Status"::"Sent to Document Exchange Service",
            "Document Exchange Status"::"Pending Connection to Recipient"));
        IF FINDSET THEN
          REPEAT
            DocExchLinks.CheckAndUpdateDocExchCrMemoStatus(SalesCrMemoHeader);
            COMMIT;
          UNTIL NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE CheckPostedServiceInvoices@3();
    VAR
      ServiceInvoiceHeader@1002 : Record 5992;
    BEGIN
      WITH ServiceInvoiceHeader DO BEGIN
        SETFILTER("Document Exchange Status",STRSUBSTNO('%1|%2',
            "Document Exchange Status"::"Sent to Document Exchange Service",
            "Document Exchange Status"::"Pending Connection to Recipient"));
        IF FINDSET THEN
          REPEAT
            DocExchLinks.CheckAndUpdateDocExchServiceInvoiceStatus(ServiceInvoiceHeader);
            COMMIT;
          UNTIL NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE CheckPostedServiceCrMemos@4();
    VAR
      ServiceCrMemoHeader@1000 : Record 5994;
    BEGIN
      WITH ServiceCrMemoHeader DO BEGIN
        SETFILTER("Document Exchange Status",STRSUBSTNO('%1|%2',
            "Document Exchange Status"::"Sent to Document Exchange Service",
            "Document Exchange Status"::"Pending Connection to Recipient"));
        IF FINDSET THEN
          REPEAT
            DocExchLinks.CheckAndUpdateDocExchServiceCrMemoStatus(ServiceCrMemoHeader);
            COMMIT;
          UNTIL NEXT = 0;
      END;
    END;

    BEGIN
    END.
  }
}

