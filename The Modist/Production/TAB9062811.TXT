OBJECT Table 9062811 Html Control Event Args
{
  OBJECT-PROPERTIES
  {
    Date=24/05/16;
    Time=11:45:37 AM;
    Version List=NA2016.16;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Html Control Event Args;
               ENG=Html Control Event Args];
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;CaptionML=[ENU=Entry No.;
                                                              ENG=Entry No.] }
    { 2   ;   ;Source              ;Text250       ;CaptionML=[ENU=Source;
                                                              ENG=Source] }
    { 3   ;   ;Type                ;Text250       ;CaptionML=[ENU=Type;
                                                              ENG=Type] }
    { 10  ;   ;Handled             ;Boolean       ;CaptionML=[ENU=Handled;
                                                              ENG=Handled] }
    { 11  ;   ;Close Page          ;Boolean       ;CaptionML=[ENU=Close Page;
                                                              ENG=Close Page] }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ControlMessage@1000000000 : DotNet "'TheNavPeople.HtmlControlCommunication.9.0.0.0, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7c0c47cc7f65ff95'.TheNavPeople.HtmlControlCommunication.ControlMessage";

    PROCEDURE SetMessage@1000000030(Value@1000000000 : DotNet "'TheNavPeople.HtmlControlCommunication.9.0.0.0, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7c0c47cc7f65ff95'.TheNavPeople.HtmlControlCommunication.ControlMessage");
    BEGIN
      ControlMessage := Value;
      Rec.Handled := FALSE;
      Rec."Close Page" := FALSE;
      Rec.Source := ControlMessage.Source;
      Rec.Type := ControlMessage.Type;
    END;

    PROCEDURE GetMessage@1000000001(VAR Value@1000000000 : DotNet "'TheNavPeople.HtmlControlCommunication.9.0.0.0, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7c0c47cc7f65ff95'.TheNavPeople.HtmlControlCommunication.ControlMessage");
    BEGIN
      Value := ControlMessage;
    END;

    PROCEDURE CreateMessage@1000000031(MessageSource@1000000001 : Text;MessageType@1000000000 : Text);
    VAR
      NewMessage@1000000002 : DotNet "'TheNavPeople.HtmlControlCommunication.9.0.0.0, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7c0c47cc7f65ff95'.TheNavPeople.HtmlControlCommunication.ControlMessage";
    BEGIN
      NewMessage := NewMessage.ControlMessage();
      NewMessage.Source := MessageSource;
      NewMessage.Type := MessageType;
      SetMessage(NewMessage);
    END;

    PROCEDURE CreateMessageWithParam@1000000002(MessageSource@1000000001 : Text;MessageType@1000000000 : Text;ParameterValue@1000000002 : Variant);
    BEGIN
      CreateMessage(MessageSource, MessageType);
      AddParameter('Result', ParameterValue);
    END;

    LOCAL PROCEDURE "--- Message Parameters ---"@1000000000();
    BEGIN
    END;

    PROCEDURE AddParameter@1000000034(Name@1000000001 : Text;Value@1000000000 : Variant);
    BEGIN
      ControlMessage.Content.Add(Name, Value);
    END;

    PROCEDURE HasParameter@1000000039(Name@1000000000 : Text) : Boolean;
    BEGIN
      EXIT(ControlMessage.Content.ContainsKey(Name));
    END;

    PROCEDURE GetParameter@1000000035(Name@1000000000 : Text) : Text;
    BEGIN
      IF (ControlMessage.Content.ContainsKey(Name)) THEN
        EXIT(FORMAT(ControlMessage.Content.Item(Name)));
      EXIT('');
    END;

    PROCEDURE GetParameterInt@1000000036(Name@1000000000 : Text;DefaultValue@1000000001 : Integer) : Integer;
    VAR
      TextValue@1000000002 : Text;
      OutputValue@1000000003 : Integer;
    BEGIN
      TextValue := GetParameter(Name);
      IF (TextValue <> '') THEN
        IF (EVALUATE(OutputValue, TextValue)) THEN
          EXIT(OutputValue);
      EXIT(DefaultValue);
    END;

    PROCEDURE GetParameterDecimal@1000000037(Name@1000000001 : Text;DefaultValue@1000000000 : Decimal) : Decimal;
    VAR
      TextValue@1000000002 : Text;
      OutputValue@1000000003 : Decimal;
    BEGIN
      TextValue := GetParameter(Name);
      IF (TextValue <> '') THEN
        IF (EVALUATE(OutputValue, TextValue)) THEN
          EXIT(OutputValue);
      EXIT(DefaultValue);
    END;

    BEGIN
    {
      //DOC NA2016.15 AZ 13/04/2016 - Created
      //DOC NA2016.15 JH 06/05/2016 - CfMD amendments
      //DOC NA2016.16 AZ 24/05/2016 - CfMD amendments
    }
    END.
  }
}

