OBJECT Table 9062429 Table Filter Field
{
  OBJECT-PROPERTIES
  {
    Date=10/05/16;
    Time=12:00:00 PM;
    Version List=NA2016.15;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               Rec.TESTFIELD("Parent Table ID");
               Rec.TESTFIELD("Parent Position");
               Rec.TESTFIELD("Parent Field ID");
               IF (Rec.ID = 0) THEN
                 Rec.ID := NewId();
               UpdatePanelTimestamp();
               mTnpToolkit.UpdateCreatedBy(Rec."Created By", Rec."Created Date Time");
             END;

    OnModify=BEGIN
               UpdatePanelTimestamp();
               mTnpToolkit.UpdateModifiedBy(Rec."Modified By", Rec."Modified Date Time");
             END;

    OnDelete=BEGIN
               UpdatePanelTimestamp();
             END;

    CaptionML=[ENU=Table Filter Field;
               ENG=Table Filter Field];
    LookupPageID=Page9062236;
    DrillDownPageID=Page9062236;
  }
  FIELDS
  {
    { 1   ;   ;Parent Table ID     ;Integer       ;TableRelation=AllObj."Object ID" WHERE (Object Type=CONST(Table));
                                                   CaptionML=[ENU=Parent Table ID;
                                                              ENG=Parent Table ID] }
    { 2   ;   ;Parent Table Name   ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObj."Object Name" WHERE (Object Type=CONST(Table),
                                                                                                  Object ID=FIELD(Parent Table ID)));
                                                   CaptionML=[ENU=Parent Table Name;
                                                              ENG=Parent Table Name];
                                                   Editable=No }
    { 3   ;   ;Parent Position     ;Text250       ;CaptionML=[ENU=Parent Position;
                                                              ENG=Parent Position] }
    { 4   ;   ;Parent Field ID     ;Integer       ;CaptionML=[ENU=Parent Field ID;
                                                              ENG=Parent Field ID] }
    { 5   ;   ;Parent Field Name   ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Field.FieldName WHERE (TableNo=FIELD(Parent Table ID),
                                                                                             No.=FIELD(Parent Field ID)));
                                                   CaptionML=[ENU=Parent Field Name;
                                                              ENG=Parent Field Name];
                                                   Editable=No }
    { 6   ;   ;ID                  ;Integer       ;CaptionML=[ENU=ID;
                                                              ENG=ID] }
    { 7   ;   ;Sequence            ;Integer       ;CaptionML=[ENU=Sequence;
                                                              ENG=Sequence] }
    { 8   ;   ;Table ID            ;Integer       ;TableRelation=AllObj."Object ID" WHERE (Object Type=CONST(Table));
                                                   OnValidate=BEGIN
                                                                IF (Rec."Table ID" <> xRec."Table ID") THEN
                                                                  Rec.VALIDATE("Field ID", 0);
                                                                Rec.CALCFIELDS("Table Name");
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF (mObjectFieldLookups.TableLookup(Rec."Table ID")) THEN
                                                                Rec.VALIDATE("Table ID");
                                                            END;

                                                   CaptionML=[ENU=Table ID;
                                                              ENG=Table ID] }
    { 9   ;   ;Table Name          ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObj."Object Name" WHERE (Object Type=CONST(Table),
                                                                                                  Object ID=FIELD(Table ID)));
                                                   CaptionML=[ENU=Table Name;
                                                              ENG=Table Name];
                                                   Editable=No }
    { 10  ;   ;Field ID            ;Integer       ;OnValidate=BEGIN
                                                                Rec.CALCFIELDS("Field Name");
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF (mObjectFieldLookups.FieldLookup(Rec."Table ID", Rec."Field ID")) THEN
                                                                Rec.VALIDATE("Field ID");
                                                            END;

                                                   CaptionML=[ENU=Field ID;
                                                              ENG=Field ID] }
    { 11  ;   ;Field Name          ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Field.FieldName WHERE (TableNo=FIELD(Table ID),
                                                                                             No.=FIELD(Field ID)));
                                                   CaptionML=[ENU=Field Name;
                                                              ENG=Field Name];
                                                   Editable=No }
    { 12  ;   ;Filter              ;Text250       ;OnLookup=BEGIN
                                                              mTableFilterManagement.FilterLookup(Rec);
                                                            END;

                                                   CaptionML=[ENU=Filter;
                                                              ENG=Filter] }
    { 13  ;   ;Rec. Table ID       ;Integer       ;FieldClass=FlowFilter;
                                                   TableRelation=AllObj."Object ID" WHERE (Object Type=CONST(Table));
                                                   CaptionML=[ENU=Rec. Table ID;
                                                              ENG=Rec. Table ID] }
    { 1000;   ;Created By          ;Code50        ;OnLookup=BEGIN
                                                              mTnpToolkit.UserLookup(Rec."Created By", FALSE);
                                                            END;

                                                   CaptionML=[ENU=Created By;
                                                              ENG=Created By] }
    { 1001;   ;Created Date Time   ;DateTime      ;CaptionML=[ENU=Created Date Time;
                                                              ENG=Created Date Time] }
    { 1002;   ;Modified By         ;Code50        ;OnLookup=BEGIN
                                                              mTnpToolkit.UserLookup(Rec."Modified By", FALSE);
                                                            END;

                                                   CaptionML=[ENU=Modified By;
                                                              ENG=Modified By] }
    { 1003;   ;Modified Date Time  ;DateTime      ;CaptionML=[ENU=Modified Date Time;
                                                              ENG=Modified Date Time] }
  }
  KEYS
  {
    {    ;Parent Table ID,Parent Position,Parent Field ID,ID;
                                                   Clustered=Yes }
    {    ;Parent Table ID,Parent Position,Parent Field ID,Sequence,ID }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      mObjectFieldLookups@1000000000 : Codeunit 9062343;
      mPanelTimestampManagement@1000000003 : Codeunit 9062385;
      mPanelTools@1000000004 : Codeunit 9062320;
      mTableFilterManagement@1000000002 : Codeunit 9062238;
      mTnpToolkit@1000000001 : Codeunit 9062230;

    PROCEDURE NewId@1000000001() : Integer;
    VAR
      lTableFilterField@1000000000 : Record 9062429;
    BEGIN
      //DOC NA2015.1 - Returning new ID
      //  <- The ID

      Rec.TESTFIELD("Parent Table ID");
      Rec.TESTFIELD("Parent Position");
      Rec.TESTFIELD("Parent Field ID");

      lTableFilterField.RESET();
      lTableFilterField.SETRANGE("Parent Table ID", Rec."Parent Table ID");
      lTableFilterField.SETRANGE("Parent Position", Rec."Parent Position");
      lTableFilterField.SETRANGE("Parent Field ID", Rec."Parent Field ID");
      IF (lTableFilterField.FINDLAST()) THEN
        EXIT(lTableFilterField.ID + 1)
      ELSE
        EXIT(1);
    END;

    PROCEDURE NewSequence@1000000002() : Integer;
    VAR
      lTableFilterField@1000000000 : Record 9062429;
    BEGIN
      //DOC NA2015.1 - Returning new sequence
      //  <- The sequence

      Rec.TESTFIELD("Parent Table ID");
      Rec.TESTFIELD("Parent Position");
      Rec.TESTFIELD("Parent Field ID");

      lTableFilterField.RESET();
      lTableFilterField.SETCURRENTKEY("Parent Table ID", "Parent Position", "Parent Field ID", Sequence);
      lTableFilterField.SETRANGE("Parent Table ID", Rec."Parent Table ID");
      lTableFilterField.SETRANGE("Parent Position", Rec."Parent Position");
      lTableFilterField.SETRANGE("Parent Field ID", Rec."Parent Field ID");
      IF (lTableFilterField.FINDLAST()) THEN
        EXIT(lTableFilterField.Sequence + 10)
      ELSE
        EXIT(10);
    END;

    PROCEDURE InitRecord@1000000000();
    BEGIN
      //DOC NA2015.1 - Initialising the record

      Rec.FILTERGROUP(2);
      IF (Rec.GETFILTER("Table ID") <> '') THEN
        Rec."Table ID" := Rec.GETRANGEMIN("Table ID");
      Rec.FILTERGROUP(0);

      Rec.Sequence := NewSequence();
    END;

    LOCAL PROCEDURE UpdatePanelTimestamp@1000000003();
    BEGIN
      //DOC NA2015.1 - Updating panel timestamp

      IF (mPanelTools.PanelTable(Rec."Parent Table ID")) THEN
        mPanelTimestampManagement.Add(PanelCode());
    END;

    LOCAL PROCEDURE PanelCode@1000000006() : Code[20];
    VAR
      lPanel@1000000000 : Record 9062363;
      lPanelLink@1000000002 : Record 9062364;
      lTileGroup@1000000004 : Record 9062366;
      lTile@1000000005 : Record 9062367;
      lTileFrame@1000000006 : Record 9062368;
      lPanelEvent@1000000007 : Record 9062369;
      lPanelData@1000000008 : Record 9062432;
      lPanelProperty@1000000009 : Record 9062433;
      lPanelPropertyField@1000000010 : Record 9062443;
      lPanelPropertyValue@1000000011 : Record 9062444;
      lPanelCode@1000000001 : Code[20];
    BEGIN
      //DOC NA2015.1 - Returning panel code
      //  <- Panel code

      CASE (Rec."Parent Table ID") OF
        DATABASE::Panel:
          BEGIN
            lPanel.SETPOSITION(Rec."Parent Position");
            lPanelCode := lPanel.Code;
          END;
        DATABASE::"Panel Link":
          BEGIN
            lPanelLink.SETPOSITION(Rec."Parent Position");
            lPanelCode := lPanelLink."Panel Code";
          END;
        DATABASE::"Tile Group":
          BEGIN
            lTileGroup.SETPOSITION(Rec."Parent Position");
            lPanelCode := lTileGroup."Panel Code";
          END;
        DATABASE::Tile:
          BEGIN
            lTile.SETPOSITION(Rec."Parent Position");
            lPanelCode := lTile."Panel Code";
          END;
        DATABASE::"Tile Frame":
          BEGIN
            lTileFrame.SETPOSITION(Rec."Parent Position");
            lPanelCode := lTileFrame."Panel Code";
          END;
        DATABASE::"Panel Event":
          BEGIN
            lPanelEvent.SETPOSITION(Rec."Parent Position");
            lPanelCode := lPanelEvent."Panel Code";
          END;
        DATABASE::"Panel Data":
          BEGIN
            lPanelData.SETPOSITION(Rec."Parent Position");
            lPanelCode := lPanelData."Panel Code";
          END;
        DATABASE::"Panel Property":
          BEGIN
            lPanelProperty.SETPOSITION(Rec."Parent Position");
            IF (mPanelTools.PanelTable(lPanelProperty."Parent Table ID")) THEN
              lPanelCode := lPanelProperty."Parent Code";
          END;
        DATABASE::"Panel Property Field":
          BEGIN
            lPanelPropertyField.SETPOSITION(Rec."Parent Position");
            IF (mPanelTools.PanelTable(lPanelPropertyField."Parent Table ID")) THEN
              lPanelCode := lPanelPropertyField."Parent Code";
          END;
        DATABASE::"Panel Property Value":
          BEGIN
            lPanelPropertyValue.SETPOSITION(Rec."Parent Position");
            IF (mPanelTools.PanelTable(lPanelPropertyValue."Parent Table ID")) THEN
              lPanelCode := lPanelPropertyValue."Parent Code";
          END;
      END;

      EXIT(lPanelCode);
    END;

    BEGIN
    {
      //DOC NA2015.1  JH 04/10/2013 - Created
      //DOC NA2016.1  JH 28/08/2015 - Upgraded to 2016
      //DOC NA2016.15 JH 06/05/2016 - CfMD amendments
    }
    END.
  }
}

