OBJECT Codeunit 450 Job Queue - NAS Start Up
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
            JobQueueLoop(600000);
          END;

  }
  CODE
  {

    LOCAL PROCEDURE JobQueueLoop@3(MilisecondsBetweenPolls@1000 : Integer);
    VAR
      MaxMilisecondsSleep@1001 : Integer;
      Count@1002 : Integer;
    BEGIN
      WHILE TRUE DO BEGIN
        StartJobQueuesInCompanies;

        // This code runs on a NAS Session and therefore must react to possible Service termination.
        // To achieve this, we split up the lengthy time between polls into smaller SLEEPs.
        // 10000ms is the recommended maximum SLEEP time.
        MaxMilisecondsSleep := 10000;
        FOR Count := 1 TO MilisecondsBetweenPolls DIV MaxMilisecondsSleep DO
          SLEEP(MaxMilisecondsSleep);
        SLEEP(MilisecondsBetweenPolls MOD MaxMilisecondsSleep);
      END;
    END;

    LOCAL PROCEDURE StartJobQueuesInCompanies@1();
    VAR
      Company@1000 : Record 2000000006 SECURITYFILTERING(Filtered);
    BEGIN
      IF Company.FINDSET THEN
        REPEAT
          StartJobQueues(Company.Name);
        UNTIL Company.NEXT = 0;
    END;

    LOCAL PROCEDURE StartJobQueues@2(CompanyName@1000 : Text[30]);
    VAR
      JobQueue@1001 : Record 470 SECURITYFILTERING(Filtered);
    BEGIN
      IF NOT JobQueue.CHANGECOMPANY(CompanyName) THEN
        EXIT;
      IF NOT JobQueue.READPERMISSION THEN
        EXIT;
      JobQueue.SETRANGE("Start Automatically From NAS",TRUE);
      IF JobQueue.FINDSET THEN
        REPEAT
          JobQueue.StartQueue(CompanyName);
        UNTIL JobQueue.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

