OBJECT Table 9086965 nF. Matrix Buffer
{
  OBJECT-PROPERTIES
  {
    Date=30/10/16;
    Time=[ 6:14:51 PM];
    Version List=NF2016.17;
  }
  PROPERTIES
  {
    DataPerCompany=No;
    CaptionML=[ENU=nForcement Matrix Buffer;
               ENG=nForcement Matrix Buffer];
  }
  FIELDS
  {
    { 1   ;   ;ID                  ;Integer       ;CaptionML=[ENU=ID;
                                                              ENG=ID] }
    { 12  ;   ;Name                ;Text250       ;CaptionML=[ENU=Name;
                                                              ENG=Name] }
    { 13  ;   ;Type                ;Text100       ;CaptionML=[ENU=Type;
                                                              ENG=Type] }
    { 19  ;   ;Source Table ID     ;Integer       ;CaptionML=[ENU=Source Table ID;
                                                              ENG=Source Table ID] }
    { 20  ;   ;Source ID           ;Integer       ;CaptionML=[ENU=Source ID;
                                                              ENG=Source ID] }
    { 30  ;   ;Indentation         ;Integer       ;CaptionML=[ENU=Indentation;
                                                              ENG=Indentation] }
    { 40  ;   ;Checked Style       ;Text30        ;CaptionML=[ENU=Checked Style;
                                                              ENG=Checked Style] }
    { 41  ;   ;Unchecked Style     ;Text30        ;CaptionML=[ENU=Unchecked Style;
                                                              ENG=Unchecked Style] }
    { 50  ;   ;Tree                ;Boolean       ;CaptionML=[ENU=Tree;
                                                              ENG=Tree] }
    { 51  ;   ;Parent ID           ;Integer       ;CaptionML=[ENU=Parent ID;
                                                              ENG=Parent ID] }
    { 60  ;   ;Selected            ;Boolean       ;CaptionML=[ENU=Selected;
                                                              ENG=Selected] }
    { 70  ;   ;Index               ;Integer       ;CaptionML=[ENU=Index;
                                                              ENG=Index] }
    { 80  ;   ;In Filter           ;Option        ;CaptionML=[ENU=In Filter;
                                                              ENG=In Filter];
                                                   OptionCaptionML=[ENU=" ,Yes,Indirectly";
                                                                    ENG=" ,Yes,Indirectly"];
                                                   OptionString=[ ,Yes,Indirectly] }
    { 101 ;   ;Column 1 Value      ;Boolean       ;CaptionML=[ENU=Column 1 Value;
                                                              ENG=Column 1 Value] }
    { 102 ;   ;Column 2 Value      ;Boolean       ;CaptionML=[ENU=Column 2 Value;
                                                              ENG=Column 2 Value] }
    { 103 ;   ;Column 3 Value      ;Boolean       ;CaptionML=[ENU=Column 3 Value;
                                                              ENG=Column 3 Value] }
    { 104 ;   ;Column 4 Value      ;Boolean       ;CaptionML=[ENU=Column 4 Value;
                                                              ENG=Column 4 Value] }
    { 105 ;   ;Column 5 Value      ;Boolean       ;CaptionML=[ENU=Column 5 Value;
                                                              ENG=Column 5 Value] }
    { 106 ;   ;Column 6 Value      ;Boolean       ;CaptionML=[ENU=Column 6 Value;
                                                              ENG=Column 6 Value] }
    { 107 ;   ;Column 7 Value      ;Boolean       ;CaptionML=[ENU=Column 7 Value;
                                                              ENG=Column 7 Value] }
    { 108 ;   ;Column 8 Value      ;Boolean       ;CaptionML=[ENU=Column 8 Value;
                                                              ENG=Column 8 Value] }
    { 109 ;   ;Column 9 Value      ;Boolean       ;CaptionML=[ENU=Column 9 Value;
                                                              ENG=Column 9 Value] }
    { 110 ;   ;Column 10 Value     ;Boolean       ;CaptionML=[ENU=Column 10 Value;
                                                              ENG=Column 10 Value] }
    { 111 ;   ;Column 11 Value     ;Boolean       ;CaptionML=[ENU=Column 11 Value;
                                                              ENG=Column 11 Value] }
    { 112 ;   ;Column 12 Value     ;Boolean       ;CaptionML=[ENU=Column 12 Value;
                                                              ENG=Column 12 Value] }
    { 113 ;   ;Column 13 Value     ;Boolean       ;CaptionML=[ENU=Column 13 Value;
                                                              ENG=Column 13 Value] }
    { 114 ;   ;Column 14 Value     ;Boolean       ;CaptionML=[ENU=Column 14 Value;
                                                              ENG=Column 14 Value] }
    { 115 ;   ;Column 15 Value     ;Boolean       ;CaptionML=[ENU=Column 15 Value;
                                                              ENG=Column 15 Value] }
    { 116 ;   ;Column 16 Value     ;Boolean       ;CaptionML=[ENU=Column 16 Value;
                                                              ENG=Column 16 Value] }
    { 117 ;   ;Column 17 Value     ;Boolean       ;CaptionML=[ENU=Column 17 Value;
                                                              ENG=Column 17 Value] }
    { 118 ;   ;Column 18 Value     ;Boolean       ;CaptionML=[ENU=Column 18 Value;
                                                              ENG=Column 18 Value] }
    { 119 ;   ;Column 19 Value     ;Boolean       ;CaptionML=[ENU=Column 19 Value;
                                                              ENG=Column 19 Value] }
    { 120 ;   ;Column 20 Value     ;Boolean       ;CaptionML=[ENU=Column 20 Value;
                                                              ENG=Column 20 Value] }
  }
  KEYS
  {
    {    ;ID                                      ;Clustered=Yes }
    {    ;Name                                     }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    LOCAL PROCEDURE "--- Column Values ---"@1000000009();
    BEGIN
    END;

    PROCEDURE SetColumnValue@1000000015(pIndex@1000000000 : Integer;pValue@1000000001 : Boolean);
    VAR
      lRecordRef@1000000003 : RecordRef;
      lFieldRef@1000000002 : FieldRef;
    BEGIN
      ///<summary>Setting column value (with given index)</summary>
      ///<param name="pIndex">The index</param>
      ///<param name="pValue">The value</param>

      lRecordRef.GETTABLE(Rec);
      lFieldRef := lRecordRef.FIELD(Rec.FIELDNO("Column 1 Value") + pIndex - 1);
      lFieldRef.VALUE := pValue;
      lRecordRef.SETTABLE(Rec);
    END;

    PROCEDURE GetColumnValue@1000000014(pIndex@1000000000 : Integer) : Boolean;
    VAR
      lRecordRef@1000000002 : RecordRef;
      lFieldRef@1000000001 : FieldRef;
    BEGIN
      ///<summary>Returning column value (with given index)</summary>
      ///<param name="pIndex">The index</param>
      ///<returns>The value</returns>

      lRecordRef.GETTABLE(Rec);
      lFieldRef := lRecordRef.FIELD(Rec.FIELDNO("Column 1 Value") + pIndex - 1);
      EXIT(lFieldRef.VALUE);
    END;

    PROCEDURE ClearColumnValues@1000000013();
    VAR
      lValues@1000000000 : ARRAY [20] OF Boolean;
    BEGIN
      ///<summary>Clearing column values</summary>

      SetColumnValues(lValues);
    END;

    PROCEDURE SetColumnValues@1000000012(pValues@1000000000 : ARRAY [20] OF Boolean);
    VAR
      lRecordRef@1000000002 : RecordRef;
      lFieldRef@1000000001 : FieldRef;
      lIndex@1000000003 : Integer;
    BEGIN
      ///<summary>Setting column values (array)</summary>
      ///<param name="pValues">The source array</param>

      lRecordRef.GETTABLE(Rec);
      FOR lIndex := 1 TO 20 DO
      BEGIN
        lFieldRef := lRecordRef.FIELD(Rec.FIELDNO("Column 1 Value") + lIndex - 1);
        lFieldRef.VALUE := pValues[lIndex];
      END;
      lRecordRef.SETTABLE(Rec);
    END;

    PROCEDURE GetColumnValues@1000000011(VAR pValues@1000000000 : ARRAY [20] OF Boolean);
    VAR
      lRecordRef@1000000002 : RecordRef;
      lFieldRef@1000000001 : FieldRef;
      lIndex@1000000003 : Integer;
    BEGIN
      ///<summary>Returning column values (array)</summary>
      ///<param name="pValues">The destination array</param>

      lRecordRef.GETTABLE(Rec);
      FOR lIndex := 1 TO 20 DO
      BEGIN
        lFieldRef := lRecordRef.FIELD(Rec.FIELDNO("Column 1 Value") + lIndex - 1);
        pValues[lIndex] := lFieldRef.VALUE;
      END;
    END;

    LOCAL PROCEDURE "--- Miscellaneous ---"@1000000000();
    BEGIN
    END;

    PROCEDURE GetStyle@1000000001() : Text;
    BEGIN
      ///<summary>Returning style</summary>
      ///<returns>The style</returns>

      IF ((Rec."Column 1 Value") OR (Rec."Column 2 Value") OR (Rec."Column 3 Value") OR (Rec."Column 4 Value") OR
          (Rec."Column 5 Value") OR (Rec."Column 6 Value") OR (Rec."Column 7 Value") OR (Rec."Column 8 Value") OR
          (Rec."Column 9 Value") OR (Rec."Column 10 Value") OR (Rec."Column 11 Value") OR (Rec."Column 12 Value") OR
          (Rec."Column 13 Value") OR (Rec."Column 14 Value") OR (Rec."Column 15 Value") OR (Rec."Column 16 Value") OR
          (Rec."Column 17 Value") OR (Rec."Column 18 Value") OR (Rec."Column 19 Value") OR (Rec."Column 20 Value")) THEN
        EXIT(Rec."Checked Style")
      ELSE
        EXIT(Rec."Unchecked Style");
    END;

    PROCEDURE ShowDetails@1000000002();
    VAR
      lNfUser@1000000000 : Record 9086953;
      lNfUserGroup@1000000001 : Record 9086955;
      lNfCompany@1000000002 : Record 9086957;
      lNfPermissionGroup@1000000003 : Record 9086960;
    BEGIN
      ///<summary>Showing details (source)</summary>

      Rec.TESTFIELD("Source Table ID");
      Rec.TESTFIELD("Source ID");

      CASE (Rec."Source Table ID") OF
        DATABASE::"nF. User":
          BEGIN
            lNfUser.GET(Rec."Source ID");
            PAGE.RUN(PAGE::"nF. Users", lNfUser);
          END;
        DATABASE::"nF. User Group":
          BEGIN
            lNfUserGroup.GET(Rec."Source ID");
            PAGE.RUN(PAGE::"nF. User Groups", lNfUserGroup);
          END;
        DATABASE::"nF. Company":
          BEGIN
            lNfCompany.GET(Rec."Source ID");
            PAGE.RUN(PAGE::"nF. Companies", lNfCompany);
          END;
        DATABASE::"nF. Permission Group":
          BEGIN
            lNfPermissionGroup.GET(Rec."Source ID");
            PAGE.RUN(PAGE::"nF. Permission Groups", lNfPermissionGroup);
          END;
      END;
    END;

    BEGIN
    {
      ///<summary>Table used only as in-memory buffer for maitaining nForcement matrixes</summary>
      ///<change version="NF2016.17" initials="JH" date="2016-04-24">Created</change>
    }
    END.
  }
}

