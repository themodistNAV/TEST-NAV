OBJECT Table 11102093 OM - Branch
{
  OBJECT-PROPERTIES
  {
    Date=01/10/13;
    Time=12:00:00 PM;
    Version List=OMA9.01;
  }
  PROPERTIES
  {
    DataPerCompany=No;
    DataCaptionFields=No.,Description;
    OnInsert=VAR
               Setup@1000 : Record 11102035;
             BEGIN
               IF "No." = '' THEN
                 "No." := GetNextNo;

               TESTFIELD("No.");

               Setup.CustomGet;
               IF Description = '' THEN
                 VALIDATE(Description, FORMAT(WORKDATE, 0, STRSUBSTNO(Setup."Branch Description", "No.")));
             END;

    OnDelete=VAR
               DocumentLine@1000 : Record 11102046;
               CALHistoryObject@1001 : Record 11102052;
               Comment@1002 : Record 11102095;
             BEGIN
               CALHistoryObject.SETCURRENTKEY("Branch No.");
               CALHistoryObject.SETRANGE("Branch No.", "No.");
               CALHistoryObject.MODIFYALL("Branch No.", '');

               Comment.SETCURRENTKEY("Table Name", "No.");
               Comment.SETRANGE("Table Name", Comment."Table Name"::Branch);
               Comment.SETRANGE("No.", "No.");
               Comment.DELETEALL(TRUE);

               DocumentLine.SETCURRENTKEY("Table Name", "No.");
               DocumentLine.SETRANGE("Table Name", Comment."Table Name"::Branch);
               DocumentLine.SETRANGE("No.", "No.");
               DocumentLine.DELETEALL(TRUE);
             END;

    CaptionML=[DEU=Branch;
               ENU=Branch;
               ESP=Branch;
               FRA=Branch;
               NLD=Branch;
               DEA=Branch];
    LookupPageID=Page11102131;
    DrillDownPageID=Page11102131;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;AltSearchField=Search Description;
                                                   CaptionML=[DEU=No.;
                                                              ENU=No.;
                                                              ESP=No.;
                                                              FRA=No.;
                                                              NLD=Nr.;
                                                              DEA=No.] }
    { 2   ;   ;Description         ;Text100       ;OnValidate=BEGIN
                                                                IF ("Search Description" = UPPERCASE(xRec.Description)) OR ("Search Description" = '') THEN
                                                                  "Search Description" := Description;
                                                              END;

                                                   CaptionML=[DEU=Description;
                                                              ENU=Description;
                                                              ESP=Description;
                                                              FRA=Description;
                                                              NLD=Omschrijving;
                                                              DEA=Description] }
    { 3   ;   ;Search Description  ;Code100       ;CaptionML=[DEU=Search Description;
                                                              ENU=Search Description;
                                                              ESP=Search Description;
                                                              FRA=Search Description;
                                                              NLD=Zoeknaam;
                                                              DEA=Search Description] }
    { 4   ;   ;No. of Comments     ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("OM - Comment" WHERE (Table Name=CONST(Branch),
                                                                                           No.=FIELD(No.)));
                                                   CaptionML=[DEU=No. of Comments;
                                                              ENU=No. of Comments;
                                                              ESP=No. of Comments;
                                                              FRA=No. of Comments;
                                                              NLD=Aantal opmerkingen;
                                                              DEA=No. of Comments];
                                                   Editable=No }
    { 5   ;   ;No. of Documents    ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("OM - Document Line" WHERE (Table Name=CONST(Project),
                                                                                                 No.=FIELD(No.)));
                                                   CaptionML=[DEU=No. of Documents;
                                                              ENU=No. of Documents;
                                                              ESP=No. of Documents;
                                                              FRA=No. of Documents;
                                                              NLD=Aantal documenten;
                                                              DEA=No. of Documents];
                                                   Editable=No }
    { 6   ;   ;Active              ;Boolean       ;OnValidate=VAR
                                                                CALHistoryObject@1000 : Record 11102052;
                                                                ObjectLock@1001 : Record 11102054;
                                                                Branch@1002 : Record 11102093;
                                                                Object@1003 : Record 2000000001;
                                                                TmpObject@1004 : TEMPORARY Record 2000000001;
                                                                Mgt@1005 : Codeunit 11102035;
                                                                ctObjectActiveInOtherBranch@1006 : TextConst 'DEU="%1 %2 %3 already active in other branch.\\%4 %5=''%6''.";ENU="%1 %2 %3 already active in other branch.\\%4 %5=''%6''.";ESP="%1 %2 %3 already active in other branch.\\%4 %5=''%6''.";FRA="%1 %2 %3 already active in other branch.\\%4 %5=''%6''.";NLD="%1 %2 %3 reeds actief in andere branch.\\%4 %5=''%6''.";DEA="%1 %2 %3 already active in other branch.\\%4 %5=''%6''."';
                                                                ctObjectsOutdated@1007 : TextConst 'DEU=%1 %2 %3 is outdated.\Please get latest version or rollback branch version.;ENU=%1 %2 %3 is outdated.\Please get latest version or rollback branch version.;ESP=%1 %2 %3 is outdated.\Please get latest version or rollback branch version.;FRA=%1 %2 %3 is outdated.\Please get latest version or rollback branch version.;NLD=%1 %2 %3 is niet bijgewerkt.\Haal laatste versie op of rol branchversie terug.;DEA=%1 %2 %3 is outdated.\Please get latest version or rollback branch version.';
                                                                ctRemoveLocks@1008 : TextConst 'DEU=Do you want to remove your locks?;ENU=Do you want to remove your locks?;ESP=Do you want to remove your locks?;FRA=Do you want to remove your locks?;NLD=Wilt u uw objecten ontgrendelen?;DEA=Do you want to remove your locks?';
                                                              BEGIN
                                                                IF Active THEN BEGIN
                                                                  GetObjects(TmpObject);
                                                                  IF TmpObject.FINDSET THEN
                                                                    REPEAT

                                                                      Object.GET(TmpObject.Type, '', TmpObject.ID);

                                                                      CALHistoryObject.SETCURRENTKEY("Branch No.", "Object Type", "Object No.", "Branch Order");
                                                                      CALHistoryObject.SETRANGE("Branch No.", "No.");
                                                                      CALHistoryObject.SETRANGE("Object Type", Object.Type);
                                                                      CALHistoryObject.SETRANGE("Object No.", Object.ID);
                                                                      CALHistoryObject.FINDFIRST;

                                                                      IF CALHistoryObject.Outdated THEN
                                                                        ERROR(ctObjectsOutdated, Object.Type, Object.ID, Object.Name);

                                                                      IF ObjectLock.GET(Object.Type, Object.ID) THEN
                                                                        IF ObjectLock.ShortLockedBy <> Mgt.ShortUserId THEN
                                                                          ObjectLock.FIELDERROR("Locked By");

                                                                      IF NOT (ObjectLock."Branch No." IN ['', "No."]) THEN BEGIN

                                                                        IF Branch.GET(ObjectLock."Branch No.") THEN
                                                                          IF Branch.Active THEN
                                                                            ERROR(
                                                                              ctObjectActiveInOtherBranch,
                                                                              Object.Type, Object.ID, Object.Name,
                                                                              Branch.TABLECAPTION, Branch.FIELDCAPTION("No."), Branch."No.");

                                                                        ObjectLock.FIELDERROR("Branch No.");
                                                                      END;

                                                                    UNTIL TmpObject.NEXT = 0;

                                                                  IF TmpObject.FINDSET THEN
                                                                    REPEAT
                                                                      IF NOT ObjectLock.GET(TmpObject.Type, TmpObject.ID) THEN
                                                                        ObjectLock.InsertLock(TmpObject);

                                                                      ObjectLock."Branch No." := "No.";
                                                                      ObjectLock.MODIFY;

                                                                    UNTIL TmpObject.NEXT = 0;

                                                                END ELSE BEGIN

                                                                  ObjectLock.SETCURRENTKEY("Branch No.");
                                                                  ObjectLock.SETRANGE("Branch No.", "No.");
                                                                  ObjectLock.SETRANGE(Deleted, FALSE);
                                                                  ObjectLock.SETFILTER("Locked By", '<>@*\' + Mgt.ShortUserId);
                                                                  IF ObjectLock.FINDFIRST THEN
                                                                    ObjectLock.FIELDERROR("Locked By");

                                                                  MODIFY;

                                                                  IF NOT SkipRemoveLocksQuestion THEN BEGIN
                                                                    ObjectLock.SETFILTER("Locked By", '@*\' + Mgt.ShortUserId);
                                                                    IF NOT ObjectLock.ISEMPTY THEN
                                                                      IF CONFIRM(ctRemoveLocks, TRUE) THEN
                                                                        IF ObjectLock.FINDSET THEN
                                                                          REPEAT
                                                                            ObjectLock.AddObjectToBranch("No.");
                                                                            ObjectLock.DELETE(TRUE);
                                                                          UNTIL ObjectLock.NEXT = 0;
                                                                  END;

                                                                END;
                                                              END;

                                                   CaptionML=[DEU=Active;
                                                              ENU=Active;
                                                              ESP=Active;
                                                              FRA=Active;
                                                              NLD=Actief;
                                                              DEA=Active] }
    { 7   ;   ;User                ;Code50        ;TableRelation="OM - User";
                                                   CaptionML=[DEU=User;
                                                              ENU=User;
                                                              ESP=User;
                                                              FRA=User;
                                                              NLD=Gebruiker;
                                                              DEA=User] }
    { 8   ;   ;No. of History Objects;Integer     ;FieldClass=FlowField;
                                                   CalcFormula=Count("OM - C/AL History Object" WHERE (Branch No.=FIELD(No.)));
                                                   CaptionML=[DEU=No. of History Objects;
                                                              ENU=No. of History Objects;
                                                              ESP=No. of History Objects;
                                                              FRA=No. of History Objects;
                                                              NLD=Aantal historie objecten;
                                                              DEA=No. of History Objects];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      SkipRemoveLocksQuestion@1000 : Boolean;

    LOCAL PROCEDURE GetNextNo@1() : Code[20];
    VAR
      Setup@1000 : Record 11102035;
      Branch@1001 : Record 11102093;
      LastNo@1002 : Code[20];
      NewNo@1003 : Code[20];
      NosFormat@1004 : Code[20];
      SearchFilter@1005 : Code[20];
      EndPos@1006 : Integer;
      i@1007 : Integer;
      StartPos@1008 : Integer;
      IsDigit@1009 : Boolean;
      NoEnded@1010 : Boolean;
    BEGIN
      Setup.CustomGet;
      NosFormat := Setup."Branch Nos. Format";

      WITH Branch DO
        IF NosFormat <> '' THEN BEGIN
          i := STRLEN(NosFormat);
          REPEAT
            IsDigit := NosFormat[i] IN ['0'..'9'];
            IF IsDigit AND NOT NoEnded THEN BEGIN
              SearchFilter := '?' + SearchFilter;
              IF EndPos = 0 THEN
                EndPos := i;
              IF NOT NoEnded THEN
                StartPos := i;
            END ELSE BEGIN
              SearchFilter := FORMAT(NosFormat[i]) + SearchFilter;
              IF EndPos <> 0 THEN
                NoEnded := TRUE;
            END;
            i -= 1;
          UNTIL i = 0;
          SETFILTER("No.", SearchFilter);
          IF FINDLAST THEN BEGIN
            LastNo := COPYSTR("No.", StartPos, EndPos - StartPos + 1);
            NewNo := INCSTR(LastNo);
            EXIT(DELSTR("No.", StartPos) + NewNo + COPYSTR("No.", EndPos + 1));
          END ELSE
            EXIT(NosFormat);
        END;
    END;

    PROCEDURE AddObjects@2();
    VAR
      Object@1000 : Record 2000000001;
      ObjectList@1001 : Page 11102067;
    BEGIN
      Object.FILTERGROUP(2);
      Object.SETFILTER(Type, '<>%1', Object.Type::TableData);
      Object.FILTERGROUP(0);

      ObjectList.SETTABLEVIEW(Object);

      ObjectList.LOOKUPMODE := TRUE;

      IF ObjectList.RUNMODAL = ACTION::LookupOK THEN BEGIN

        ObjectList.GetSelectionFilter(Object);
        AddObjectRange(Object);

      END;
    END;

    PROCEDURE AddObjectRange@3(VAR TmpObject@1000 : TEMPORARY Record 2000000001);
    VAR
      CALHistoryObject@1001 : Record 11102052;
      ObjectLock@1002 : Record 11102054;
      Branch@1003 : Record 11102093;
      Object@1004 : Record 2000000001;
      Mgt@1005 : Codeunit 11102035;
      SourceControl@1006 : Codeunit 11102050;
      ctNoCopyPresent@1007 : TextConst 'DEU=Branch Error: C/AL history not found.;ENU=Branch Error: C/AL history not found.;ESP=Branch Error: C/AL history not found.;FRA=Branch Error: C/AL history not found.;NLD=Branch Error: C/AL historie niet gevonden.;DEA=Branch Error: C/AL history not found.';
      ctObjectActiveInOtherBranch@1008 : TextConst 'DEU="%1 %2 %3 already active in other branch.\\%4 %5=''%6''.";ENU="%1 %2 %3 already active in other branch.\\%4 %5=''%6''.";ESP="%1 %2 %3 already active in other branch.\\%4 %5=''%6''.";FRA="%1 %2 %3 already active in other branch.\\%4 %5=''%6''.";NLD="%1 %2 %3 reeds actief in andere branch.\\%4 %5=''%6''.";DEA="%1 %2 %3 already active in other branch.\\%4 %5=''%6''."';
      ctObjectLocked@1009 : TextConst 'DEU=%1 %2 %3 is locked by ''%4''.;ENU=%1 %2 %3 is locked by ''%4''.;ESP=%1 %2 %3 is locked by ''%4''.;FRA=%1 %2 %3 is locked by ''%4''.;NLD=%1 %2 %3 is vergrendeld door ''%4''.;DEA=%1 %2 %3 is locked by ''%4''.';
    BEGIN
      IF TmpObject.FINDSET THEN
        REPEAT

          Object.GET(TmpObject.Type, '', TmpObject.ID);

          IF SourceControl.ObjectHeaderIsOutdated(Object, FALSE) THEN
            SourceControl.AddObject(Object, 0, FALSE, FALSE, 1, FALSE);

          CALHistoryObject.GoToLastRecord(Object.Type, Object.ID);

          IF Active THEN
            IF ObjectLock.GET(Object.Type, Object.ID) THEN BEGIN
              IF ObjectLock.ShortLockedBy <> Mgt.ShortUserId THEN
                ERROR(ctObjectLocked, Object.Type, Object.ID, Object.Name, ObjectLock."Locked By");
              IF NOT (ObjectLock."Branch No." IN ['', "No."]) THEN
                IF Branch.GET(ObjectLock."Branch No.") THEN
                  IF Branch.Active THEN
                    ERROR(
                      ctObjectActiveInOtherBranch,
                      Object.Type, Object.ID, Object.Name,
                      Branch.TABLECAPTION, Branch.FIELDCAPTION("No."), Branch."No.");

            END;

          IF CALHistoryObject.FINDLAST THEN
            IF CALHistoryObject."Branch No." IN ['', "No."] THEN BEGIN
              CALHistoryObject.VALIDATE("Branch No.", "No.");
              CALHistoryObject.MODIFY;
            END ELSE BEGIN
              IF Branch.GET(CALHistoryObject."Branch No.") THEN
                IF Branch.Active THEN
                  ERROR(
                    ctObjectActiveInOtherBranch,
                    Object.Type, Object.ID, Object.Name,
                    Branch.TABLECAPTION, Branch.FIELDCAPTION("No."), Branch."No.");

              SourceControl.AddObject(Object, CALHistoryObject."Action Type"::"Branch Copy", FALSE, FALSE, 1, FALSE);
              CALHistoryObject.FINDLAST;
              CALHistoryObject.VALIDATE("Branch No.", "No.");
              CALHistoryObject.MODIFY;
            END
          ELSE
            ERROR(ctNoCopyPresent);

        UNTIL TmpObject.NEXT = 0;

      IF Active THEN
        IF TmpObject.FINDSET THEN
          REPEAT
            Object.GET(TmpObject.Type, '', TmpObject.ID);

            ObjectLock.InsertLock(Object);
            ObjectLock."Branch No." := "No.";
            ObjectLock.MODIFY;
          UNTIL TmpObject.NEXT = 0;
    END;

    PROCEDURE AddCALHistory@4();
    VAR
      CALHistoryObject@1000 : Record 11102052;
      CALHistoryObjects@1001 : Page 11102072;
    BEGIN
      CALHistoryObject.FILTERGROUP(2);
      CALHistoryObject.SETRANGE("Branch No.", '');
      CALHistoryObject.FILTERGROUP(0);

      CALHistoryObjects.SETTABLEVIEW(CALHistoryObject);

      CALHistoryObjects.LOOKUPMODE := TRUE;

      IF CALHistoryObjects.RUNMODAL = ACTION::LookupOK THEN BEGIN

        CALHistoryObjects.GetSelectionFilter(CALHistoryObject);
        IF CALHistoryObject.FINDSET THEN
          REPEAT
            CALHistoryObject.VALIDATE("Branch No.", "No.");
            CALHistoryObject.MODIFY;
          UNTIL CALHistoryObject.NEXT = 0;

      END;
    END;

    LOCAL PROCEDURE GetObjects@5(VAR TmpObject@1000 : TEMPORARY Record 2000000001);
    VAR
      CALHistoryObject@1001 : Record 11102052;
      Object@1002 : Record 2000000001;
      StopLoop@1003 : Boolean;
    BEGIN
      IF "No." <> '' THEN BEGIN
        CALHistoryObject.SETCURRENTKEY("Branch No.", "Object Type", "Object No.", "Branch Order");
        CALHistoryObject.SETRANGE("Branch No.", "No.");
        IF CALHistoryObject.FINDFIRST THEN
          REPEAT

            IF Object.GET(CALHistoryObject."Object Type", '', CALHistoryObject."Object No.") THEN
              IF NOT TmpObject.GET(CALHistoryObject."Object Type", '', CALHistoryObject."Object No.") THEN BEGIN
                TmpObject := Object;
                TmpObject.INSERT;
              END;

            CALHistoryObject.SETRANGE("Object Type", CALHistoryObject."Object Type");
            CALHistoryObject.SETFILTER("Object No.", '>%1', CALHistoryObject."Object No.");
            IF NOT CALHistoryObject.FINDFIRST THEN BEGIN
              CALHistoryObject.SETFILTER("Object Type", '>%1', CALHistoryObject."Object Type");
              CALHistoryObject.SETRANGE("Object No.");
              StopLoop := NOT CALHistoryObject.FINDFIRST;
            END;

          UNTIL StopLoop;
      END;
    END;

    LOCAL PROCEDURE GetOutdatedObjects@6(VAR TmpCALHistoryObject@1000 : TEMPORARY Record 11102052);
    VAR
      CALHistoryObject@1001 : Record 11102052;
      StopLoop@1002 : Boolean;
    BEGIN
      IF "No." <> '' THEN BEGIN
        CALHistoryObject.SETCURRENTKEY("Branch No.", "Object Type", "Object No.", "Branch Order");
        CALHistoryObject.SETRANGE("Branch No.", "No.");
        IF CALHistoryObject.FINDFIRST THEN
          REPEAT

            IF CALHistoryObject.Outdated THEN
              CALHistoryObject.AddToTempRecord(TmpCALHistoryObject);

            CALHistoryObject.SETRANGE("Object Type", CALHistoryObject."Object Type");
            CALHistoryObject.SETFILTER("Object No.", '>%1', CALHistoryObject."Object No.");
            IF NOT CALHistoryObject.FINDFIRST THEN BEGIN
              CALHistoryObject.SETFILTER("Object Type", '>%1', CALHistoryObject."Object Type");
              CALHistoryObject.SETRANGE("Object No.");
              StopLoop := NOT CALHistoryObject.FINDFIRST;
            END;

          UNTIL StopLoop;
      END;
    END;

    PROCEDURE GetLatestVersions@7();
    VAR
      TmpCALHistoryObject@1000 : TEMPORARY Record 11102052;
      Object@1001 : Record 2000000001;
      TmpObject@1002 : TEMPORARY Record 2000000001;
      ctNoOutdatedObjects@1003 : TextConst 'DEU=All objects up to date.;ENU=All objects up to date.;ESP=All objects up to date.;FRA=All objects up to date.;NLD=Alle objecten zijn bijgewerkt.;DEA=All objects up to date.';
    BEGIN
      GetOutdatedObjects(TmpCALHistoryObject);
      IF TmpCALHistoryObject.FINDSET THEN BEGIN
        REPEAT
          IF Object.GET(TmpCALHistoryObject."Object Type", '', TmpCALHistoryObject."Object No.") THEN
            IF NOT TmpObject.GET(TmpCALHistoryObject."Object Type", '', TmpCALHistoryObject."Object No.") THEN BEGIN
              TmpObject := Object;
              TmpObject.INSERT;
            END;
        UNTIL TmpCALHistoryObject.NEXT = 0;

        AddObjectRange(TmpObject);
      END ELSE
        MESSAGE(ctNoOutdatedObjects);
    END;

    PROCEDURE SetSkipRemoveLocksQuestion@8(NewValue@1000 : Boolean);
    BEGIN
      SkipRemoveLocksQuestion := NewValue;
    END;

    PROCEDURE LockObjects@9();
    VAR
      ObjectLock@1000 : Record 11102054;
      Object@1001 : Record 2000000001;
      TmpObject@1002 : TEMPORARY Record 2000000001;
      Mgt@1003 : Codeunit 11102035;
    BEGIN
      GetObjects(TmpObject);
      IF TmpObject.FINDSET THEN
        REPEAT

          Object.GET(TmpObject.Type, '', TmpObject.ID);

          IF ObjectLock.GET(Object.Type, Object.ID) THEN
            IF ObjectLock.ShortLockedBy <> Mgt.ShortUserId THEN
              ObjectLock.FIELDERROR("Locked By");

          ObjectLock.InsertLock(Object);

        UNTIL TmpObject.NEXT = 0;
    END;

    PROCEDURE UnlockObjects@10();
    VAR
      ObjectLock@1000 : Record 11102054;
      TmpObject@1001 : TEMPORARY Record 2000000001;
      Mgt@1002 : Codeunit 11102035;
    BEGIN
      GetObjects(TmpObject);
      IF TmpObject.FINDSET THEN
        REPEAT

          IF ObjectLock.GET(TmpObject.Type, TmpObject.ID) THEN BEGIN
            IF ObjectLock.ShortLockedBy <> Mgt.ShortUserId THEN
              ObjectLock.FIELDERROR("Locked By");

            ObjectLock.DELETE(TRUE);
          END;

        UNTIL TmpObject.NEXT = 0;
    END;

    PROCEDURE NoOfObjects@11() : Integer;
    VAR
      TmpObject@1000 : TEMPORARY Record 2000000001;
    BEGIN
      GetObjects(TmpObject);
      EXIT(TmpObject.COUNT);
    END;

    PROCEDURE DrillDownNoOfObjects@12();
    VAR
      TmpObject@1000 : TEMPORARY Record 2000000001;
    BEGIN
      GetObjects(TmpObject);
      IF TmpObject.FINDFIRST THEN
        ;

      PAGE.RUNMODAL(PAGE::"OM - Object List", TmpObject);
    END;

    PROCEDURE ShowOutdatedObjects@13();
    VAR
      TmpCALHistoryObject@1000 : TEMPORARY Record 11102052;
    BEGIN
      GetOutdatedObjects(TmpCALHistoryObject);

      IF TmpCALHistoryObject.FINDFIRST THEN
        ;

      PAGE.RUNMODAL(PAGE::"OM - C/AL History Objects", TmpCALHistoryObject);
    END;

    PROCEDURE ShowInititialVersions@14();
    VAR
      CALHistoryObject@1000 : Record 11102052;
      TmpCALHistoryObject@1001 : TEMPORARY Record 11102052;
      TmpObject@1002 : TEMPORARY Record 2000000001;
    BEGIN
      GetObjects(TmpObject);
      IF TmpObject.FINDSET THEN
        REPEAT
          CALHistoryObject.SETCURRENTKEY("Branch No.", "Object Type", "Object No.", "Entry No.");
          CALHistoryObject.SETRANGE("Branch No.", "No.");
          CALHistoryObject.SETRANGE("Object Type", TmpObject.Type);
          CALHistoryObject.SETRANGE("Object No.", TmpObject.ID);
          CALHistoryObject.SETRANGE("C/AL Code Present", TRUE);
          IF CALHistoryObject.FINDFIRST THEN
            CALHistoryObject.AddToTempRecord(TmpCALHistoryObject);
        UNTIL TmpObject.NEXT = 0;

      IF TmpCALHistoryObject.FINDFIRST THEN
        ;

      PAGE.RUNMODAL(PAGE::"OM - C/AL History Objects", TmpCALHistoryObject);
    END;

    PROCEDURE MarkObjects@15();
    VAR
      Object@1000 : Record 2000000001;
      TmpObject@1001 : TEMPORARY Record 2000000001;
      VersionControl@1002 : Codeunit 11102040;
    BEGIN
      VersionControl.CheckMarkLock;

      GetObjects(TmpObject);
      IF TmpObject.FINDSET THEN
        REPEAT
          Object.GET(TmpObject.Type, '', TmpObject.ID);
          VersionControl.MarkObject(Object, TRUE);
        UNTIL TmpObject.NEXT = 0;
    END;

    PROCEDURE RemoveMarks@16();
    VAR
      Object@1000 : Record 2000000001;
      TmpObject@1001 : TEMPORARY Record 2000000001;
      VersionControl@1002 : Codeunit 11102040;
    BEGIN
      GetObjects(TmpObject);
      IF TmpObject.FINDSET THEN
        REPEAT
          Object.GET(TmpObject.Type, '', TmpObject.ID);
          VersionControl.RemoveObjectMark(Object);
        UNTIL TmpObject.NEXT = 0;

      VersionControl.RemoveMarkLock(TRUE);
    END;

    BEGIN
    END.
  }
}

