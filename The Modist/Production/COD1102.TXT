OBJECT Codeunit 1102 CA Jnl.-Post Line
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    TableNo=1101;
    Permissions=TableData 1104=imd,
                TableData 1105=imd;
    OnRun=BEGIN
            CostAccSetup.GET;
            RunWithCheck(Rec);
          END;

  }
  CODE
  {
    VAR
      CostAccSetup@1017 : Record 1108;
      CostEntry@1018 : Record 1104;
      GlEntry@1019 : Record 17;
      CostJnlLine@1021 : Record 1101;
      CostRegister@1022 : Record 1105;
      CostBudgetRegister@1023 : Record 1111;
      CostAllocationSource@1024 : Record 1106;
      CostBudgetEntry@1025 : Record 1109;
      GLSetup@1000 : Record 98;
      CAJnlCheckLine@1026 : Codeunit 1101;
      PostBudget@1036 : Boolean;
      TotalDebit@1037 : Decimal;
      TotalCredit@1038 : Decimal;
      TotalBudgetAmount@1039 : Decimal;
      NextCostEntryNo@1027 : Integer;
      NextCostBudgetEntryNo@1028 : Integer;

    PROCEDURE RunWithCheck@7(VAR CostJnlLine2@1000 : Record 1101);
    BEGIN
      CostJnlLine.COPY(CostJnlLine2);
      Code;
      CostJnlLine2 := CostJnlLine;
    END;

    LOCAL PROCEDURE Code@8();
    BEGIN
      WITH CostJnlLine DO BEGIN
        IF EmptyLine THEN
          EXIT;

        CAJnlCheckLine.RunCheck(CostJnlLine);
        IF "Budget Name" <> '' THEN
          PostBudget := TRUE;

        IF PostBudget THEN BEGIN
          IF NextCostBudgetEntryNo = 0 THEN BEGIN
            CostBudgetEntry.LOCKTABLE;
            IF CostBudgetEntry.FINDLAST THEN
              NextCostBudgetEntryNo := CostBudgetEntry."Entry No.";
            NextCostBudgetEntryNo := NextCostBudgetEntryNo + 1;
          END;
        END ELSE
          IF NextCostEntryNo = 0 THEN BEGIN
            CostEntry.LOCKTABLE;
            IF CostEntry.FINDLAST THEN
              NextCostEntryNo := CostEntry."Entry No.";
            NextCostEntryNo := NextCostEntryNo + 1;
          END;
      END;
      PostLine;
    END;

    LOCAL PROCEDURE PostLine@4();
    BEGIN
      WITH CostJnlLine DO
        IF PostBudget THEN BEGIN
          IF "Cost Type No." <> '' THEN
            InsertBudgetEntries("Cost Type No.","Cost Center Code","Cost Object Code",Amount);

          IF "Bal. Cost Type No." <> '' THEN
            InsertBudgetEntries("Bal. Cost Type No.","Bal. Cost Center Code","Bal. Cost Object Code",-Amount);
        END ELSE BEGIN
          IF "Cost Type No." <> '' THEN
            InsertCostEntries("Cost Type No.","Cost Center Code","Cost Object Code",Amount);

          IF "Bal. Cost Type No." <> '' THEN
            InsertCostEntries("Bal. Cost Type No.","Bal. Cost Center Code","Bal. Cost Object Code",-Amount);
        END;
    END;

    LOCAL PROCEDURE CreateCostRegister@1();
    VAR
      SourceCodeSetup@1000 : Record 242;
    BEGIN
      SourceCodeSetup.GET;
      IF CostRegister."No." = 0 THEN BEGIN
        CostRegister.LOCKTABLE;
        IF (NOT CostRegister.FINDLAST) OR (CostRegister."To Cost Entry No." <> 0) THEN
          WITH CostJnlLine DO BEGIN
            CostRegister.INIT;
            CostRegister."Journal Batch Name" := "Journal Batch Name";
            CostRegister."No." := CostRegister."No." + 1;
            CostRegister."From Cost Entry No." := NextCostEntryNo;
            CostRegister."To Cost Entry No." := NextCostEntryNo;
            CostRegister."No. of Entries" := 1;
            CostRegister."Debit Amount" := TotalDebit;
            CostRegister."Credit Amount" := TotalCredit;
            CostRegister."Posting Date" := "Posting Date";  // from last journal line
            CostRegister."User ID" := USERID;
            CostRegister."Processed Date" := TODAY;

            CASE "Source Code" OF
              SourceCodeSetup."Cost Allocation":
                BEGIN
                  CostRegister.Source := CostRegister.Source::Allocation;
                  CostAllocationSource.GET("Allocation ID");
                  CostRegister.Level := CostAllocationSource.Level;
                END;
              SourceCodeSetup."G/L Entry to CA":
                BEGIN
                  CostRegister.Source := CostRegister.Source::"Transfer from G/L";
                  CostRegister."From G/L Entry No." := "G/L Entry No.";
                  CostRegister."To G/L Entry No." := "G/L Entry No.";
                END;
              SourceCodeSetup."Transfer Budget to Actual":
                CostRegister.Source := CostRegister.Source::"Transfer from Budget";
              ELSE
                CostRegister.Source := CostRegister.Source::"Cost Journal";
            END;
            CostRegister.INSERT;
          END;
      END ELSE BEGIN
        CostRegister."Debit Amount" := TotalDebit;
        CostRegister."Credit Amount" := TotalCredit;
        CostRegister."To G/L Entry No." := CostJnlLine."G/L Entry No.";
        CostRegister."To Cost Entry No." := NextCostEntryNo;
        CostRegister."No. of Entries" := CostRegister."To Cost Entry No." - CostRegister."From Cost Entry No." + 1;
        CostRegister.MODIFY;
      END;
    END;

    LOCAL PROCEDURE CreateCostBudgetRegister@2();
    BEGIN
      IF CostBudgetRegister."No." = 0 THEN BEGIN
        CostBudgetRegister.LOCKTABLE;
        IF (NOT CostBudgetRegister.FINDLAST) OR (CostBudgetRegister."To Cost Budget Entry No." <> 0) THEN
          WITH CostJnlLine DO BEGIN
            CostBudgetRegister.INIT;
            CostBudgetRegister."Journal Batch Name" := "Journal Batch Name";
            CostBudgetRegister."Cost Budget Name" := "Budget Name";
            CostBudgetRegister."No." := CostBudgetRegister."No." + 1;
            CostBudgetRegister."From Cost Budget Entry No." := NextCostBudgetEntryNo;
            CostBudgetRegister."To Cost Budget Entry No." := NextCostBudgetEntryNo;
            CostBudgetRegister."No. of Entries" := 1;
            CostBudgetRegister.Amount := TotalBudgetAmount;
            CostBudgetRegister."Posting Date" := "Posting Date";  // from last journal line
            CostBudgetRegister."User ID" := USERID;
            CostBudgetRegister."Processed Date" := TODAY;
            CostAccSetup.GET;
            IF "Allocation ID" <> '' THEN
              CostBudgetRegister.Source := CostBudgetRegister.Source::Allocation
            ELSE
              CostBudgetRegister.Source := CostBudgetRegister.Source::"Cost Journal";

            IF "Allocation ID" <> '' THEN BEGIN
              CostAllocationSource.GET("Allocation ID");
              CostBudgetRegister.Level := CostAllocationSource.Level;
            END;
            CostBudgetRegister.INSERT;
          END;
      END;
      CostBudgetRegister."To Cost Budget Entry No." := NextCostBudgetEntryNo;
      CostBudgetRegister."No. of Entries" := CostBudgetRegister."To Cost Budget Entry No." -
        CostBudgetRegister."From Cost Budget Entry No." + 1;
      CostBudgetRegister.MODIFY;
    END;

    LOCAL PROCEDURE InsertCostEntries@5(CT@1001 : Code[20];CC@1002 : Code[20];CO@1003 : Code[20];Amt@1004 : Decimal);
    BEGIN
      GLSetup.GET;
      WITH CostJnlLine DO BEGIN
        CostEntry.INIT;
        CostEntry."Entry No." := NextCostEntryNo;
        CostEntry."Cost Type No." := CT;
        CostEntry."Posting Date" := "Posting Date";
        CostEntry."Document No." := "Document No.";
        CostEntry.Description := Description;
        CostEntry."Cost Center Code" := CC;
        CostEntry."Cost Object Code" := CO;

        IF "System-Created Entry" THEN BEGIN
          CostEntry."Additional-Currency Amount" := "Additional-Currency Amount";
          CostEntry."Add.-Currency Debit Amount" := "Add.-Currency Debit Amount";
          CostEntry."Add.-Currency Credit Amount" := "Add.-Currency Credit Amount";
        END;

        CostEntry.Amount := Amt;
        IF Amt > 0 THEN BEGIN
          CostEntry."Debit Amount" := Amt;
          IF GLSetup."Additional Reporting Currency" <> '' THEN BEGIN
            CostEntry."Additional-Currency Amount" := CalcAddCurrAmount(Amt);
            CostEntry."Add.-Currency Debit Amount" := CostEntry."Additional-Currency Amount";
          END;
        END ELSE BEGIN
          CostEntry."Credit Amount" := -Amt;
          IF GLSetup."Additional Reporting Currency" <> '' THEN BEGIN
            CostEntry."Additional-Currency Amount" := CalcAddCurrAmount(Amt);
            CostEntry."Add.-Currency Credit Amount" := -CostEntry."Additional-Currency Amount";
          END;
        END;

        CostEntry."Reason Code" := "Reason Code";
        IF GlEntry.GET("G/L Entry No.") THEN
          CostEntry."G/L Account" := GlEntry."G/L Account No.";
        CostEntry."G/L Entry No." := "G/L Entry No.";
        CostEntry."Source Code" := "Source Code";
        CostEntry."System-Created Entry" := "System-Created Entry";
        CostEntry.Allocated := Allocated;
        CostEntry."User ID" := USERID;
        CostEntry."Batch Name" := "Journal Batch Name";
        CostEntry."Allocation Description" := "Allocation Description";
        CostEntry."Allocation ID" := "Allocation ID";
        CostEntry.INSERT;
      END;
      TotalCredit := TotalCredit + CostEntry."Credit Amount";
      TotalDebit := TotalDebit + CostEntry."Debit Amount";
      CreateCostRegister;
      NextCostEntryNo := NextCostEntryNo + 1;
    END;

    LOCAL PROCEDURE InsertBudgetEntries@6(CT@1001 : Code[20];CC@1002 : Code[20];CO@1003 : Code[20];Amt@1004 : Decimal);
    BEGIN
      WITH CostJnlLine DO BEGIN
        CostBudgetEntry.INIT;
        CostBudgetEntry."Entry No." := NextCostBudgetEntryNo;
        CostBudgetEntry."Budget Name" := "Budget Name";
        CostBudgetEntry."Cost Type No." := CT;
        CostBudgetEntry.Date := "Posting Date";
        CostBudgetEntry."Document No." := "Document No.";
        CostBudgetEntry.Description := Description;
        CostBudgetEntry."Cost Center Code" := CC;
        CostBudgetEntry."Cost Object Code" := CO;
        CostBudgetEntry.Amount := Amt;
        CostBudgetEntry."Source Code" := "Source Code";
        CostBudgetEntry."System-Created Entry" := "System-Created Entry";
        CostBudgetEntry.Allocated := Allocated;
        CostBudgetEntry."Last Modified By User" := USERID;
        CostBudgetEntry."Allocation Description" := "Allocation Description";
        CostBudgetEntry."Allocation ID" := "Allocation ID";
        CostBudgetEntry.INSERT;
      END;
      CreateCostBudgetRegister;
      NextCostBudgetEntryNo := NextCostBudgetEntryNo + 1;

      TotalBudgetAmount := TotalBudgetAmount + Amt
    END;

    LOCAL PROCEDURE CalcAddCurrAmount@3(Amount@1000 : Decimal) : Decimal;
    VAR
      AddCurrency@1001 : Record 4;
      CurrExchRate@1002 : Record 330;
    BEGIN
      GetAddCurrency(AddCurrency);
      EXIT(
        ROUND(
          CurrExchRate.ExchangeAmtLCYToFCY(CostJnlLine."Posting Date",GLSetup."Additional Reporting Currency",Amount,
            CurrExchRate.ExchangeRate(CostJnlLine."Posting Date",GLSetup."Additional Reporting Currency")),
          AddCurrency."Amount Rounding Precision"));
    END;

    LOCAL PROCEDURE GetAddCurrency@9(VAR AddCurrency@1000 : Record 4);
    BEGIN
      IF GLSetup."Additional Reporting Currency" <> '' THEN
        IF GLSetup."Additional Reporting Currency" <> AddCurrency.Code THEN BEGIN
          AddCurrency.GET(GLSetup."Additional Reporting Currency");
          AddCurrency.TESTFIELD("Amount Rounding Precision");
          AddCurrency.TESTFIELD("Residual Gains Account");
          AddCurrency.TESTFIELD("Residual Losses Account");
        END;
    END;

    BEGIN
    END.
  }
}

