OBJECT Page 634 Chart of Accounts Overview
{
  OBJECT-PROPERTIES
  {
    Date=07/09/12;
    Time=12:00:00 PM;
    Version List=NAVW17.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Chart of Accounts Overview;
               ENG=Chart of Accounts Overview];
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    SourceTable=Table15;
    PageType=List;
    SourceTableTemporary=Yes;
    OnOpenPage=BEGIN
                 ExpandAll
               END;

    OnAfterGetRecord=BEGIN
                       NameIndent := 0;
                       IF IsExpanded(Rec) THEN
                         ActualExpansionStatus := 1
                       ELSE
                         IF HasChildren(Rec) THEN
                           ActualExpansionStatus := 0
                         ELSE
                           ActualExpansionStatus := 2;
                       FormatLine;
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                IndentationColumnName=NameIndent;
                IndentationControls=Name;
                ShowAsTree=Yes;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                SourceExpr="No.";
                Editable=FALSE;
                Style=Strong;
                StyleExpr=Emphasize }

    { 4   ;2   ;Field     ;
                SourceExpr=Name;
                Editable=FALSE;
                Style=Strong;
                StyleExpr=Emphasize }

    { 6   ;2   ;Field     ;
                SourceExpr="Income/Balance";
                Editable=FALSE }

    { 8   ;2   ;Field     ;
                SourceExpr="Account Type";
                Editable=FALSE }

    { 10  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Net Change" }

    { 12  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Balance at Date";
                Visible=FALSE }

    { 23  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr=Balance }

    { 25  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Additional-Currency Net Change";
                Visible=FALSE }

    { 27  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Add.-Currency Balance at Date";
                Visible=FALSE }

    { 29  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Additional-Currency Balance";
                Visible=FALSE }

    { 21  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Budgeted Amount";
                Visible=FALSE;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      ActualExpansionStatus@1000 : Integer;
      Emphasize@19018670 : Boolean INDATASET;
      NameIndent@19079073 : Integer INDATASET;

    LOCAL PROCEDURE ExpandAll@12();
    BEGIN
      CopyGLAccToTemp(FALSE);
    END;

    LOCAL PROCEDURE CopyGLAccToTemp@3(OnlyRoot@1000 : Boolean);
    VAR
      GLAcc@1002 : Record 15;
    BEGIN
      RESET;
      DELETEALL;
      SETCURRENTKEY("No.");

      IF OnlyRoot THEN
        GLAcc.SETRANGE(Indentation,0);
      GLAcc.SETFILTER("Account Type",'<>%1',GLAcc."Account Type"::"End-Total");
      IF GLAcc.FIND('-') THEN
        REPEAT
          Rec := GLAcc;
          IF GLAcc."Account Type" = GLAcc."Account Type"::"Begin-Total" THEN
            Totaling := GetEndTotal(GLAcc);
          INSERT;
        UNTIL GLAcc.NEXT = 0;

      IF FINDFIRST THEN;
    END;

    LOCAL PROCEDURE GetEndTotal@7(VAR GLAcc@1000 : Record 15) : Text[250];
    VAR
      GLAcc2@1001 : Record 15;
    BEGIN
      GLAcc2.SETFILTER("No.",'>%1',GLAcc."No.");
      GLAcc2.SETRANGE(Indentation,GLAcc.Indentation);
      GLAcc2.SETRANGE("Account Type",GLAcc2."Account Type"::"End-Total");
      IF GLAcc2.FINDFIRST THEN
        EXIT(GLAcc2.Totaling);

      EXIT('');
    END;

    LOCAL PROCEDURE HasChildren@19(ActualGLAcc@1000 : Record 15) : Boolean;
    VAR
      GLAcc2@1001 : Record 15;
    BEGIN
      GLAcc2 := ActualGLAcc;
      IF GLAcc2.NEXT = 0 THEN
        EXIT(FALSE);

      EXIT(GLAcc2.Indentation > ActualGLAcc.Indentation);
    END;

    LOCAL PROCEDURE IsExpanded@20(ActualGLAcc@1000 : Record 15) : Boolean;
    VAR
      xGLAcc@1001 : Record 15;
      Found@1002 : Boolean;
    BEGIN
      xGLAcc := Rec;
      Rec := ActualGLAcc;
      Found := (NEXT <> 0);
      IF Found THEN
        Found := (Indentation > ActualGLAcc.Indentation);
      Rec := xGLAcc;
      EXIT(Found);
    END;

    LOCAL PROCEDURE FormatLine@19039177();
    BEGIN
      NameIndent := Indentation;
      Emphasize := "Account Type" <> "Account Type"::Posting;
    END;

    BEGIN
    END.
  }
}

