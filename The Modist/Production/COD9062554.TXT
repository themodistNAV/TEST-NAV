OBJECT Codeunit 9062554 PSM Powershell Wrapper
{
  OBJECT-PROPERTIES
  {
    Date=10/05/16;
    Time=12:00:00 PM;
    Version List=NA2016.15;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      RemoteRunspace@1000000002 : DotNet "'System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.System.Management.Automation.Runspaces.Runspace" SUPPRESSDISPOSE;
      PowerShellSession@1000000001 : DotNet "'System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.System.Management.Automation.PowerShell";
      DisableThrowException@1000000000 : Boolean;

    PROCEDURE OpenRunspace@1100084001(serverName@1100084006 : Text;userName@1100084009 : Text;password@1100084012 : Text);
    VAR
      text_schema@1100084000 : TextConst 'ENU=http://schemas.microsoft.com/powershell/Microsoft.PowerShell;ENG=http://schemas.microsoft.com/powershell/Microsoft.PowerShell';
      Uri@1100084001 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Uri";
      text_uriFormat@1100084002 : TextConst 'ENU=http://%1:5985/wsman;ENG=http://%1:5985/wsman';
      SecureString@1100084005 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Security.SecureString";
      PSCredential@1100084007 : DotNet "'System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.System.Management.Automation.PSCredential";
      WSManConnectionInfo@1100084010 : DotNet "'System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.System.Management.Automation.Runspaces.WSManConnectionInfo" SUPPRESSDISPOSE;
      AuthenticationMechanism@1100084008 : DotNet "'System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.System.Management.Automation.Runspaces.AuthenticationMechanism" SUPPRESSDISPOSE;
      RunspaceFactory@1100084011 : DotNet "'System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.System.Management.Automation.Runspaces.RunspaceFactory" SUPPRESSDISPOSE;
    BEGIN
      Uri     := Uri.Uri(STRSUBSTNO(text_uriFormat, serverName));

      CreateSecurePassword(password, SecureString);
      PSCredential := PSCredential.PSCredential(userName, SecureString);

      WSManConnectionInfo := WSManConnectionInfo.WSManConnectionInfo(Uri, text_schema, PSCredential);

      RemoteRunspace := RunspaceFactory.CreateRunspace(WSManConnectionInfo);
      RemoteRunspace.Open();

      PowerShellSession          := PowerShellSession.Create();
      PowerShellSession.Runspace := RemoteRunspace;
    END;

    LOCAL PROCEDURE CreateSecurePassword@1100084010(password@1100084000 : Text;VAR SecureString@1100084001 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Security.SecureString");
    VAR
      singleChar@1100084003 : Char;
      loop@1100084002 : Integer;
    BEGIN
      SecureString := SecureString.SecureString();
      FOR loop := 1 TO STRLEN(password) DO BEGIN
        EVALUATE(singleChar, COPYSTR(password, loop, 1));
        SecureString.AppendChar(singleChar);
      END;
    END;

    PROCEDURE CloseRunspace@1100084005();
    BEGIN
      RemoteRunspace.Close;
    END;

    PROCEDURE LoadModule@1100084009(Ps1Path@1100084000 : Text);
    VAR
      PSMPsObjectCollection@1100084001 : Codeunit 9062555;
    BEGIN
      SetThrowException(FALSE);

      AddCommand(Ps1Path);
      InvokeCommands(PSMPsObjectCollection);

      SetThrowException(TRUE);
    END;

    PROCEDURE AddCommand@1100084000(cmdlet@1100084000 : Text);
    BEGIN
      PowerShellSession.AddCommand(cmdlet);
    END;

    PROCEDURE AddParameter@1100084002(parameter@1100084000 : Text);
    BEGIN
      PowerShellSession.AddParameter(parameter);
    END;

    PROCEDURE AddParameterWithValue@1100084003(parameter@1100084000 : Text;value@1100084001 : Text);
    BEGIN
      PowerShellSession.AddParameter(parameter, value);
    END;

    PROCEDURE AddScript@1100084004(script@1100084000 : Text);
    BEGIN
      PowerShellSession.AddScript(script);
    END;

    PROCEDURE ClearCommands@1100084006();
    BEGIN
      PowerShellSession.Commands.Clear();
    END;

    PROCEDURE ClearErrors@1100084007();
    BEGIN
      PowerShellSession.Streams.Error.Clear();
    END;

    PROCEDURE InvokeCommands@1100084015(VAR PSMPsObjectCollection@1100084003 : Codeunit 9062555) Success : Boolean;
    VAR
      IAsyncResult@1100084002 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IAsyncResult";
      PSDataCollection@1100084005 : DotNet "'System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.System.Management.Automation.PSDataCollection`1" WITHEVENTS;
    BEGIN
      PowerShellSession.Streams.ClearStreams();
      ClearErrors();

      IAsyncResult     := PowerShellSession.BeginInvoke();
      PSDataCollection := PowerShellSession.EndInvoke(IAsyncResult);

      ClearCommands();

      IF (NOT DisableThrowException) THEN
        ProcessError();

      PSMPsObjectCollection.SetObjectCollection(PSDataCollection);
      EXIT(TRUE);
    END;

    LOCAL PROCEDURE ProcessError@1100084008();
    VAR
      ErrorCollection@1100084004 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Collections.IEnumerator";
      ErrorLoop@1100084001 : Integer;
      ErrorRecord@1100084002 : DotNet "'System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.System.Management.Automation.ErrorRecord" SUPPRESSDISPOSE;
      ErrorText@1100084003 : Text;
    BEGIN
      IF (PowerShellSession.Streams.Error.Count = 0) THEN
        EXIT;

      ErrorCollection := PowerShellSession.Streams.Error.ReadAll().GetEnumerator();
      WHILE (ErrorCollection.MoveNext) DO BEGIN
        ErrorRecord := ErrorCollection.Current;
        ErrorText := ErrorText + ErrorRecord.Exception.Message + '\\';
      END;

      ERROR(ErrorText);
    END;

    PROCEDURE SetThrowException@1100084011(Throw@1100084000 : Boolean);
    BEGIN
      DisableThrowException := NOT Throw;
    END;

    EVENT PowerShellSession@1000000001::InvocationStateChanged@54(sender@1000000001 : Variant;e@1000000000 : DotNet "'System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.System.Management.Automation.PSInvocationStateChangedEventArgs");
    BEGIN
    END;

    EVENT RemoteRunspace@1000000002::StateChanged@49(sender@1000000001 : Variant;e@1000000000 : DotNet "'System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.System.Management.Automation.Runspaces.RunspaceStateEventArgs");
    BEGIN
    END;

    EVENT RemoteRunspace@1000000002::AvailabilityChanged@50(sender@1000000001 : Variant;e@1000000000 : DotNet "'System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.System.Management.Automation.Runspaces.RunspaceAvailabilityEventArgs");
    BEGIN
    END;

    BEGIN
    {
      //DOC NA2015.7  AP 04/06/2015 - Created
      //DOC NA2016.7  JH 26/08/2015 - Upgraded to 2016
      //DOC NA2016.15 JH 18/04/2016 - CfMD amendments
    }
    END.
  }
}

