OBJECT Table 11102054 OM - Object Lock
{
  OBJECT-PROPERTIES
  {
    Date=10/10/13;
    Time=12:00:00 PM;
    Version List=OMA9.01;
  }
  PROPERTIES
  {
    DataPerCompany=No;
    OnInsert=BEGIN
               IniFields;

               INSERT;

               AfterInsert;

               DELETE;
             END;

    OnModify=VAR
               RepositorySetup@1000 : Record 11102085;
             BEGIN
               IF RepositorySetup.GET THEN
                 RepositorySetup.TESTFIELD("Use Repository", FALSE);
             END;

    OnDelete=VAR
               Setup@1000 : Record 11102035;
               CALHistoryObject@1001 : Record 11102052;
               RepositorySetup@1002 : Record 11102085;
               Branch@1003 : Record 11102093;
               Object@1004 : Record 2000000001;
               Mgt@1005 : Codeunit 11102035;
               SourceControl@1006 : Codeunit 11102050;
               RepositoryMgt@1007 : Codeunit 11102067;
               ctDeactivateBranch@1008 : TextConst 'DEU=Branch %1 will be deactivated.\Are you sure?;ENU=Branch %1 will be deactivated.\Are you sure?;ESP=Branch %1 will be deactivated.\Are you sure?;FRA=Branch %1 will be deactivated.\Are you sure?;NLD=Branch %1 zal worden gedeactiveerd.\Weet u het zeker?;DEA=Branch %1 will be deactivated.\Are you sure?';
               ctLockedByElseBranch@1009 : TextConst 'DEU=You cannot remove a lock from somebody else when object is active in a branch.;ENU=You cannot remove a lock from somebody else when object is active in a branch.;ESP=You cannot remove a lock from somebody else when object is active in a branch.;FRA=You cannot remove a lock from somebody else when object is active in a branch.;NLD=U kunt een object van iemand anders niet ontgrendelen als object actief in een branch is.;DEA=You cannot remove a lock from somebody else when object is active in a branch.';
               ctLockedByElseRepository@1010 : TextConst 'DEU=You cannot remove a lock from somebody else when repository is enabled.;ENU=You cannot remove a lock from somebody else when repository is enabled.;ESP=You cannot remove a lock from somebody else when repository is enabled.;FRA=You cannot remove a lock from somebody else when repository is enabled.;NLD=U kunt een object van iemand niet ontgrendelen als repository ingeschakeld is.;DEA=You cannot remove a lock from somebody else when repository is enabled.';
             BEGIN
               IF RepositorySetup.GET THEN
                 IF RepositorySetup."Use Repository" THEN
                   IF ShortLockedBy <> Mgt.ShortUserId THEN
                     ERROR(ctLockedByElseRepository);

               Deleted := TRUE;
               MODIFY;

               IF "Branch No." <> '' THEN BEGIN
                 IF ShortLockedBy <> Mgt.ShortUserId THEN
                   ERROR(ctLockedByElseBranch);
                 IF Branch.GET("Branch No.") THEN
                   IF Branch.Active THEN BEGIN
                     IF NOT CONFIRM(ctDeactivateBranch, TRUE, Branch."No.") THEN
                       ERROR('');
                     Branch.SetSkipRemoveLocksQuestion(TRUE);
                     Branch.VALIDATE(Active, FALSE);
                     Branch.MODIFY;

                     IF NOT FIND('=') THEN
                       INSERT;

                     AddObjectToBranch("Branch No.");

                   END;
               END;

               RemoveTagObject;

               IF Object.GET("Object Type", '', "Object No.") THEN BEGIN
                 Setup.CustomGet;
                 IF Setup."Save C/AL at Locking" <> Setup."Save C/AL at Locking"::No THEN
                   SourceControl.AddObject(
                     Object,
                     CALHistoryObject."Action Type"::Unlocking,
                     Setup."Save C/AL at Locking" = Setup."Save C/AL at Locking"::"If Changed", TRUE, 2, FALSE);
               END;

               IF RepositorySetup."Use Repository" THEN
                 RepositoryMgt.CheckInObject(Rec);
             END;

    OnRename=VAR
               RepositorySetup@1000 : Record 11102085;
             BEGIN
               IF RepositorySetup.GET THEN
                 RepositorySetup.TESTFIELD("Use Repository", FALSE);
             END;

    CaptionML=[DEU=Object Lock;
               ENU=Object Lock;
               ESP=Object Lock;
               FRA=Object Lock;
               NLD=Objectvergrendeling;
               DEA=Object Lock];
    LookupPageID=Page11102074;
    DrillDownPageID=Page11102074;
  }
  FIELDS
  {
    { 1   ;   ;Object Type         ;Option        ;OnValidate=BEGIN
                                                                VALIDATE("Object No.", 0);
                                                              END;

                                                   CaptionML=[DEU=Object Type;
                                                              ENU=Object Type;
                                                              ESP=Object Type;
                                                              FRA=Object Type;
                                                              NLD=Objecttype;
                                                              DEA=Object Type];
                                                   OptionCaptionML=[DEU=,Table,,Report,,Codeunit,XMLport,MenuSuite,Page,Query;
                                                                    ENU=,Table,,Report,,Codeunit,XMLport,MenuSuite,Page,Query;
                                                                    ESP=,Table,,Report,,Codeunit,XMLport,MenuSuite,Page,Query;
                                                                    FRA=,Table,,Report,,Codeunit,XMLport,MenuSuite,Page,Query;
                                                                    NLD=,Table,,Report,,Codeunit,XMLport,MenuSuite,Page,Query;
                                                                    DEA=,Table,,Report,,Codeunit,XMLport,MenuSuite,Page,Query];
                                                   OptionString=,Table,,Report,,Codeunit,XMLport,MenuSuite,Page,Query;
                                                   NotBlank=Yes;
                                                   BlankZero=Yes }
    { 2   ;   ;Object No.          ;Integer       ;TableRelation=Object.ID WHERE (Type=FIELD(Object Type));
                                                   OnValidate=BEGIN
                                                                CALCFIELDS(Name);
                                                              END;

                                                   CaptionML=[DEU=Object No.;
                                                              ENU=Object No.;
                                                              ESP=Object No.;
                                                              FRA=Object No.;
                                                              NLD=Objectnr.;
                                                              DEA=Object No.];
                                                   NotBlank=Yes;
                                                   BlankZero=Yes }
    { 3   ;   ;Name                ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Object.Name WHERE (Type=FIELD(Object Type),
                                                                                         Company Name=FILTER(''),
                                                                                         ID=FIELD(Object No.)));
                                                   CaptionML=[DEU=Name;
                                                              ENU=Name;
                                                              ESP=Name;
                                                              FRA=Name;
                                                              NLD=Naam;
                                                              DEA=Name];
                                                   Editable=No }
    { 4   ;   ;Locked By           ;Text132       ;TableRelation="OM - User";
                                                   OnValidate=VAR
                                                                RepositorySetup@1000 : Record 11102085;
                                                              BEGIN
                                                                IF RepositorySetup.GET THEN
                                                                  RepositorySetup.TESTFIELD("Use Repository", FALSE);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[DEU=Locked By;
                                                              ENU=Locked By;
                                                              ESP=Locked By;
                                                              FRA=Locked By;
                                                              NLD=Vergrendeld door;
                                                              DEA=Locked By] }
    { 5   ;   ;Lock Date           ;Date          ;CaptionML=[DEU=Lock Date;
                                                              ENU=Lock Date;
                                                              ESP=Lock Date;
                                                              FRA=Lock Date;
                                                              NLD=Vergrendeldatum;
                                                              DEA=Lock Date] }
    { 6   ;   ;Lock Time           ;Time          ;CaptionML=[DEU=Lock Time;
                                                              ENU=Lock Time;
                                                              ESP=Lock Time;
                                                              FRA=Lock Time;
                                                              NLD=Vergrendeltijd;
                                                              DEA=Lock Time] }
    { 7   ;   ;Deleted             ;Boolean       ;CaptionML=[DEU=Deleted;
                                                              ENU=Deleted;
                                                              ESP=Deleted;
                                                              FRA=Deleted;
                                                              NLD=Verwijderd;
                                                              DEA=Deleted] }
    { 8   ;   ;Token No.           ;Integer       ;CaptionML=[DEU=Token No.;
                                                              ENU=Token No.;
                                                              ESP=Token No.;
                                                              FRA=Token No.;
                                                              NLD=Tokennr.;
                                                              DEA=Token No.] }
    { 9   ;   ;Object Caption      ;Text249       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObjWithCaption."Object Caption" WHERE (Object Type=FIELD(Object Type),
                                                                                                                Object ID=FIELD(Object No.)));
                                                   CaptionML=[DEU=Object Caption;
                                                              ENU=Object Caption;
                                                              ESP=Object Caption;
                                                              FRA=Object Caption;
                                                              NLD=Object caption;
                                                              DEA=Object Caption];
                                                   Editable=No }
    { 10  ;   ;Branch No.          ;Code20        ;TableRelation="OM - Branch";
                                                   OnValidate=BEGIN
                                                                IF "Branch No." = '' THEN
                                                                  AddObjectToBranch(xRec."Branch No.");
                                                              END;

                                                   CaptionML=[DEU=Branch No.;
                                                              ENU=Branch No.;
                                                              ESP=Branch No.;
                                                              FRA=Branch No.;
                                                              NLD=Branchnr.;
                                                              DEA=Branch No.] }
  }
  KEYS
  {
    {    ;Object Type,Object No.                  ;Clustered=Yes }
    {    ;Locked By                                }
    {    ;Branch No.                               }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE InsertLock@1(VAR Object@1000 : Record 2000000001);
    VAR
      RepositorySetup@1001 : Record 11102085;
      Mgt@1002 : Codeunit 11102035;
      SourceControl@1003 : Codeunit 11102050;
    BEGIN
      IF GET(Object.Type, Object.ID) THEN BEGIN
        IF ShortLockedBy <> Mgt.ShortUserId THEN BEGIN
          IF RepositorySetup.GET THEN
            ;
          IF RepositorySetup."Use Repository" THEN
            FIELDERROR("Locked By")
          ELSE
            IF NOT SourceControl.ConfirmObjectLock(Object) THEN
              ERROR('');
        END ELSE
          EXIT;
        DELETE(TRUE);
      END;

      "Object Type" := Object.Type;
      "Object No." := Object.ID;
      IniFields;

      INSERT;

      FIND('=');
      AfterInsert;
    END;

    PROCEDURE CheckDeleteLock@2(VAR Object@1000 : Record 2000000001) : Boolean;
    VAR
      Modification@1001 : Record 11102042;
      ObjectLock@1002 : Record 11102054;
      TmpObjectLockToAssign@1003 : TEMPORARY Record 11102054;
      RepositorySetup@1004 : Record 11102085;
      AssignModifications@1005 : Page 11102050;
      ctPendingModifications@1006 : TextConst 'DEU=Not all modifications have been assigned to a project.\Would you like to assign them now?;ENU=Not all modifications have been assigned to a project.\Would you like to assign them now?;ESP=Not all modifications have been assigned to a project.\Would you like to assign them now?;FRA=Not all modifications have been assigned to a project.\Would you like to assign them now?;NLD=Niet alle wijzigingen zijn aan een project toegewezen.\Wilt u deze nu toewijzen?;DEA=Not all modifications have been assigned to a project.\Would you like to assign them now?';
    BEGIN
      IF RepositorySetup.GET THEN
        IF NOT RepositorySetup."Assign Mods. before Check-in" THEN
          EXIT(TRUE);

      IF Object.FINDSET THEN
        REPEAT
          IF ObjectLock.GET(Object.Type, Object.ID) THEN
            IF ObjectLock."Token No." <> 0 THEN BEGIN
              Modification.SETCURRENTKEY("Token No.");
              Modification.SETRANGE("Token No.", ObjectLock."Token No.");
              Modification.SETRANGE(Status, Modification.Status::Inserted);
              IF NOT Modification.ISEMPTY THEN BEGIN
                TmpObjectLockToAssign := ObjectLock;
                TmpObjectLockToAssign.INSERT;
              END;
            END;
        UNTIL Object.NEXT = 0;

      IF NOT TmpObjectLockToAssign.ISEMPTY THEN
        IF CONFIRM(ctPendingModifications, TRUE) THEN BEGIN
          AssignModifications.SetLockRange(TmpObjectLockToAssign);
          AssignModifications.RUN;
          EXIT(FALSE);
        END ELSE
          ERROR('');

      EXIT(TRUE);
    END;

    LOCAL PROCEDURE IniFields@3();
    VAR
      Mgt@1000 : Codeunit 11102035;
    BEGIN
      IF "Locked By" = '' THEN
        "Locked By" := Mgt.CapitalizedUserId;

      IF "Lock Date" = 0D THEN
        "Lock Date" := TODAY;

      IF "Lock Time" = 0T THEN
        "Lock Time" := TIME;
    END;

    LOCAL PROCEDURE AfterInsert@4();
    VAR
      Setup@1000 : Record 11102035;
    BEGIN
      TagObject;
      CheckOut;
      SaveVersion;

      Setup.CustomGet;
    END;

    LOCAL PROCEDURE CheckOut@5();
    VAR
      RepositorySetup@1000 : Record 11102085;
      RepositoryMgt@1001 : Codeunit 11102067;
    BEGIN
      IF RepositorySetup.GET THEN
        IF RepositorySetup."Use Repository" THEN
          RepositoryMgt.CheckOutObject(Rec);
    END;

    LOCAL PROCEDURE SaveVersion@6();
    VAR
      Setup@1000 : Record 11102035;
      CALHistoryObject@1001 : Record 11102052;
      Object@1002 : Record 2000000001;
      SourceControl@1003 : Codeunit 11102050;
    BEGIN
      Setup.CustomGet;
      IF Setup."Save C/AL at Locking" <> Setup."Save C/AL at Locking"::No THEN
        IF Object.GET("Object Type", '', "Object No.") THEN
          SourceControl.AddObject(
            Object,
            CALHistoryObject."Action Type"::Locking,
            Setup."Save C/AL at Locking" = Setup."Save C/AL at Locking"::"If Changed", TRUE, 2, FALSE);
    END;

    PROCEDURE AddObjectToBranch@7(BranchNo@1000 : Code[20]);
    VAR
      Branch@1001 : Record 11102093;
      Object@1002 : Record 2000000001;
    BEGIN
      IF Object.GET("Object Type", '', "Object No.") THEN
        IF Branch.GET(BranchNo) THEN BEGIN
          Object.SETRECFILTER;
          Branch.AddObjectRange(Object);
        END;
    END;

    PROCEDURE InsertQuietly@8(ObjectType2@1000 : Integer;ObjectNo@1001 : Integer;LockedBy@1002 : Text;LockDate@1003 : Date;LockTime@1004 : Time);
    BEGIN
      "Object Type" := ObjectType2;
      "Object No." := ObjectNo;
      "Locked By" := LockedBy;
      "Lock Date" := LockDate;
      "Lock Time" := LockTime;
      INSERT;

      TagObject;
    END;

    PROCEDURE DeleteQuietly@9();
    BEGIN
      DELETE;
      RemoveTagObject;
    END;

    PROCEDURE TagObject@10();
    VAR
      Object@1000 : Record 2000000001;
      ObjectMgt@1001 : Codeunit 11102046;
    BEGIN
      IF Object.GET("Object Type", '', "Object No.") THEN BEGIN
        Object.Locked := TRUE;
        Object."Locked By" := "Locked By";
        ObjectMgt.UpdateObjectLock(Object, FALSE);
      END;
    END;

    LOCAL PROCEDURE RemoveTagObject@11();
    VAR
      Object@1000 : Record 2000000001;
      ObjectMgt@1001 : Codeunit 11102046;
    BEGIN
      IF Object.GET("Object Type", '', "Object No.") THEN
        IF Object.Locked THEN BEGIN
          Object.Locked := FALSE;
          Object."Locked By" := '';
          ObjectMgt.UpdateObjectLock(Object, FALSE);
        END;
    END;

    PROCEDURE ShortLockedBy@12() ExitValue : Code[1024];
    VAR
      SlashPos@1000 : Integer;
    BEGIN
      ExitValue := UPPERCASE("Locked By");

      SlashPos := STRPOS(ExitValue, '\');
      IF SlashPos > 0 THEN
        ExitValue := COPYSTR(ExitValue, SlashPos + 1);
    END;

    BEGIN
    END.
  }
}

