OBJECT Table 9087002 Size
{
  OBJECT-PROPERTIES
  {
    Date=17/10/18;
    Time=[ 3:46:42 PM];
    Modified=Yes;
    Version List=NS2016.16;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               Rec.TESTFIELD("Size Group Code");
               Rec.TESTFIELD(Code);
               UpdateFromSizeGroup();
               TnpToolkit.UpdateCreatedBy(Rec."Created By", Rec."Created Date Time");
             END;

    OnModify=BEGIN
               TnpToolkit.UpdateModifiedBy(Rec."Modified By", Rec."Modified Date Time");
             END;

    OnDelete=BEGIN
               CheckOnDeletion();
             END;

    CaptionML=[ENU=Size;
               ENG=Size];
    LookupPageID=Page9087004;
    DrillDownPageID=Page9087004;
  }
  FIELDS
  {
    { 1   ;   ;Size Group Code     ;Code20        ;TableRelation="Size Group";
                                                   OnValidate=BEGIN
                                                                IF (Rec."Size Group Code" <> xRec."Size Group Code") THEN
                                                                  UpdateFromSizeGroup();
                                                              END;

                                                   CaptionML=[ENU=Size Group Code;
                                                              ENG=Size Group Code] }
    { 2   ;   ;Code                ;Code20        ;OnValidate=BEGIN
                                                                TnpToolkit.CodeToName(Rec.Code, Rec.Name);
                                                                Rec.VALIDATE(Name);
                                                              END;

                                                   CaptionML=[ENU=Code;
                                                              ENG=Code] }
    { 10  ;   ;Name                ;Text50        ;CaptionML=[ENU=Name;
                                                              ENG=Name] }
    { 20  ;   ;Sequence            ;Integer       ;OnValidate=BEGIN
                                                                IF (Rec.Sequence <> xRec.Sequence) THEN
                                                                  UpdateItemVariants(Rec.FIELDNO(Sequence));
                                                              END;

                                                   CaptionML=[ENU=Sequence;
                                                              ENG=Sequence];
                                                   MinValue=0;
                                                   BlankZero=Yes }
    { 30  ;   ;Standard Size Group Code;Code20    ;TableRelation="Size Group";
                                                   OnValidate=BEGIN
                                                                IF (Rec."Standard Size Group Code" <> xRec."Standard Size Group Code") THEN
                                                                  Rec.VALIDATE("Standard Size Code", '');
                                                              END;

                                                   CaptionML=[ENU=Standard Size Group Code;
                                                              ENG=Standard Size Group Code] }
    { 31  ;   ;Standard Size Code  ;Code20        ;TableRelation=Size.Code WHERE (Size Group Code=FIELD(Standard Size Group Code));
                                                   CaptionML=[ENU=Standard Size Code;
                                                              ENG=Standard Size Code] }
    { 40  ;   ;Blocked             ;Boolean       ;CaptionML=[ENU=Blocked;
                                                              ENG=Blocked] }
    { 1000;   ;Created By          ;Code50        ;OnLookup=BEGIN
                                                              TnpToolkit.UserLookup(Rec."Created By", FALSE);
                                                            END;

                                                   CaptionML=[ENU=Created By;
                                                              ENG=Created By] }
    { 1001;   ;Created Date Time   ;DateTime      ;CaptionML=[ENU=Created Date Time;
                                                              ENG=Created Date Time] }
    { 1002;   ;Modified By         ;Code50        ;OnLookup=BEGIN
                                                              TnpToolkit.UserLookup(Rec."Modified By", FALSE);
                                                            END;

                                                   CaptionML=[ENU=Modified By;
                                                              ENG=Modified By] }
    { 1003;   ;Modified Date Time  ;DateTime      ;CaptionML=[ENU=Modified Date Time;
                                                              ENG=Modified Date Time] }
    { 50000;  ;Hide in BS          ;Boolean        }
  }
  KEYS
  {
    {    ;Size Group Code,Code                    ;Clustered=Yes }
    {    ;Size Group Code,Sequence,Code            }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Code,Size Group Code                     }
  }
  CODE
  {
    VAR
      SizeGroup@1000000001 : Record 9087001;
      TnpToolkit@1000000000 : Codeunit 9062230;

    LOCAL PROCEDURE CheckOnDeletion@1000000003();
    VAR
      lDeletionCheck@1000000000 : Codeunit 9062384;
    BEGIN
      lDeletionCheck.AddTable(DATABASE::"Style Colour Size");
      lDeletionCheck.AddTable(DATABASE::"Item Variant");
      lDeletionCheck.AddTable(DATABASE::"Buying Sheet Line");
      lDeletionCheck.AddTable(DATABASE::"Purchase Line");
      lDeletionCheck.AddTable(DATABASE::"Item Ledger Entry");
      lDeletionCheck.AddTable(DATABASE::"Value Entry");
      lDeletionCheck.AddTable(DATABASE::"Purch. Rcpt. Line");
      lDeletionCheck.AddTable(DATABASE::"Purch. Inv. Line");
      lDeletionCheck.AddTable(DATABASE::"Purch. Cr. Memo Line");
      lDeletionCheck.AddTable(DATABASE::"Buying Sheet Arch. Line");
      lDeletionCheck.CheckMultipleTables(DATABASE::Size, Rec.Code, 'Size Code');
    END;

    PROCEDURE UpdateFromSizeGroup@1000000000();
    BEGIN
      IF ( NOT (SizeGroup.GET(Rec."Size Group Code"))) THEN
        CLEAR(SizeGroup);
      Rec.VALIDATE("Standard Size Group Code", SizeGroup."Standard Size Group Code");
    END;

    LOCAL PROCEDURE UpdateItemVariants@1000000002(pFieldId@1000000001 : Integer);
    VAR
      lItemVariant@1000000000 : Record 5401;
    BEGIN
      //DOC NS2015.1 - Updating item variants
      //  -> pFieldId: Field ID to update

      lItemVariant.RESET();
      lItemVariant.SETCURRENTKEY("Size Group Code", "Size Code");
      lItemVariant.SETRANGE("Size Group Code", Rec."Size Group Code");
      lItemVariant.SETRANGE("Size Code", Rec.Code);
      IF (lItemVariant.FINDSET(TRUE)) THEN
      REPEAT
        CASE (pFieldId) OF
          Rec.FIELDNO(Sequence):
            lItemVariant.VALIDATE(Sequence, Rec.Sequence);
        END;
        lItemVariant.MODIFY(TRUE);
      UNTIL (lItemVariant.NEXT() = 0);
    END;

    PROCEDURE ShowSizeGroup@1000000001();
    VAR
      lSizeGroup@1000000000 : Record 9087001;
    BEGIN
      Rec.TESTFIELD("Size Group Code");
      lSizeGroup.GET(Rec."Size Group Code");
      PAGE.RUN(PAGE::"Size Group List", lSizeGroup);
    END;

    BEGIN
    {
      //DOC NS2015.1  JH 08/01/2014 - Created
      //DOC NS2015.3  JH 30/07/2014 - "Blocked" added
      //DOC NS2016.16 JH 05/09/2016 - nSemble 2016
    }
    END.
  }
}

