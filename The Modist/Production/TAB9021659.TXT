OBJECT Table 9021659 Voucher Scheme
{
  OBJECT-PROPERTIES
  {
    Date=13/07/16;
    Time=[ 1:50:06 PM];
    Version List=EC2016.6;
  }
  PROPERTIES
  {
    DataCaptionFields=Code,Description,Expiry Date;
    OnInsert=BEGIN
               IF Code = '' THEN BEGIN
                 InternetSetup.GET;
                 InternetSetup.TESTFIELD("Voucher Nos.");
                 NoSeriesMgt.InitSeries(InternetSetup."Voucher Nos.",xRec."No. Series",0D,Code,"No. Series");
               END;
             END;

    OnDelete=BEGIN
               VoucherLedgerEntry.RESET;
               VoucherLedgerEntry.SETCURRENTKEY("Voucher Scheme Code","Voucher Type");
               VoucherLedgerEntry.SETRANGE("Voucher Scheme Code",Code);
               IF VoucherLedgerEntry.FINDFIRST THEN
                 ERROR(
                   Text001,
                   TABLECAPTION,Code,VoucherLedgerEntry."Entry No.");

               EComCommentLine.RESET;
               EComCommentLine.SETRANGE("Table Name",EComCommentLine."Table Name"::Voucher);
               EComCommentLine.SETRANGE("No.",Code);
               EComCommentLine.DELETEALL;
             END;

    CaptionML=[ENU=Voucher Scheme;
               ENG=Voucher Scheme];
    LookupPageID=Page9021685;
    DrillDownPageID=Page9021685;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code20        ;OnValidate=BEGIN
                                                                IF Code <> xRec.Code THEN BEGIN
                                                                  InternetSetup.GET;
                                                                  NoSeriesMgt.TestManual(InternetSetup."Voucher Nos.");
                                                                  "No. Series" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Code;
                                                              ENG=Code] }
    { 2   ;   ;Description         ;Text30        ;CaptionML=[ENU=Description;
                                                              ENG=Description] }
    { 5   ;   ;Voucher Type        ;Option        ;InitValue=Promotional;
                                                   OnValidate=BEGIN
                                                                VALIDATE("Promotion Code");
                                                              END;

                                                   CaptionML=[ENU=Voucher Type;
                                                              ENG=Voucher Type];
                                                   OptionCaptionML=[ENU=Amount,Promotional,External;
                                                                    ENG=Amount,Promotional,External];
                                                   OptionString=Amount,Promotional,External }
    { 6   ;   ;Promotion Code      ;Code20        ;TableRelation=IF (Voucher Type=CONST(Promotional)) "Promotion Header";
                                                   OnValidate=BEGIN
                                                                IF ("Voucher Type" <> "Voucher Type"::Promotional) AND
                                                                   ("Promotion Code" <> '') THEN
                                                                  ERROR(Text002);
                                                                IF "Expiry Date" = 0D THEN BEGIN
                                                                  IF "Promotion Code" <> '' THEN BEGIN
                                                                   PromoHeader.GET("Promotion Code");
                                                                   IF PromoHeader."End Date" <> 0D THEN
                                                                     VALIDATE("Expiry Date",PromoHeader."End Date");
                                                                 END;
                                                                END;

                                                                //DOC EC2013.4.60 -
                                                                IF ("Promotion Code" <> xRec."Promotion Code") AND
                                                                  (VoucherLedEntsExist = TRUE) THEN BEGIN
                                                                  IF NOT CONFIRM(Text005,FALSE) THEN
                                                                    ERROR(Text006);
                                                                  VoucherLedgerEntry.RESET;
                                                                  VoucherLedgerEntry.SETCURRENTKEY("Voucher Scheme Code","Voucher Type");
                                                                  VoucherLedgerEntry.SETRANGE("Voucher Scheme Code",Code);
                                                                  VoucherLedgerEntry.SETRANGE("Entry Type",VoucherLedgerEntry."Entry Type"::Issued);
                                                                  VoucherLedgerEntry.SETRANGE(Open,TRUE);
                                                                  VoucherLedgerEntry.MODIFYALL("Promotion Code","Promotion Code",TRUE);
                                                                END;
                                                                //DOC EC2013.4.60 +
                                                              END;

                                                   CaptionML=[ENU=Promotion Code;
                                                              ENG=Promotion Code] }
    { 8   ;   ;Post Voucher Redemp. Res. No;Code20;TableRelation=Resource.No.;
                                                   CaptionML=[ENU=Post Voucher Redemption to Resource No.;
                                                              ENG=Post Voucher Redemption to Resource No.] }
    { 9   ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("ECommerce Comment Line" WHERE (Table Name=CONST(Voucher),
                                                                                                     No.=FIELD(Code)));
                                                   CaptionML=[ENU=Comment;
                                                              ENG=Comment];
                                                   Editable=No }
    { 10  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              ENG=No. Series] }
    { 12  ;   ;No. of Entries      ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Voucher Ledger Entry" WHERE (Voucher Scheme Code=FIELD(Code)));
                                                   CaptionML=[ENU=No. of Entries;
                                                              ENG=No. of Entries];
                                                   Editable=No }
    { 13  ;   ;No. of Open Entries ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Voucher Ledger Entry" WHERE (Voucher Scheme Code=FIELD(Code),
                                                                                                   Open=CONST(Yes)));
                                                   CaptionML=[ENU=No. of Open Entries;
                                                              ENG=No. of Open Entries];
                                                   Editable=No }
    { 14  ;   ;Remaining Amount    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Voucher Ledger Entry"."Remaining Amount" WHERE (Voucher Scheme Code=FIELD(Code),
                                                                                                                    Voucher Type=FILTER(Amount)));
                                                   CaptionML=[ENU=Remaining Amount;
                                                              ENG=Remaining Amount];
                                                   Description=flowfield MQ 01/04/2014 - GW140401 renamed from Amount;
                                                   Editable=No }
    { 15  ;   ;Expiry Date         ;Date          ;OnValidate=BEGIN
                                                                //DOC EC2009.2.74 -
                                                                VoucherLedgerEntry.RESET;
                                                                VoucherLedgerEntry.SETCURRENTKEY("Voucher Scheme Code","Voucher Type");
                                                                VoucherLedgerEntry.SETRANGE("Voucher Scheme Code",Code);
                                                                VoucherLedgerEntry.SETRANGE(Open,TRUE);
                                                                IF VoucherLedgerEntry.FINDFIRST THEN BEGIN
                                                                  IF GUIALLOWED THEN BEGIN
                                                                    IF CONFIRM(Text004,TRUE) THEN BEGIN
                                                                      VoucherLedgerEntry.MODIFYALL("Expiry Date","Expiry Date");
                                                                      IF "Expiry Date" > TODAY THEN
                                                                        VoucherLedgerEntry.MODIFYALL(Expired,FALSE)
                                                                      ELSE
                                                                        VoucherLedgerEntry.MODIFYALL(Expired,TRUE);
                                                                    END;
                                                                  END;
                                                                END;
                                                                //DOC EC2009.2.74 +
                                                              END;

                                                   CaptionML=[ENU=Expiry Date;
                                                              ENG=Expiry Date] }
    { 16  ;   ;One Off             ;Boolean       ;CaptionML=[ENU=One Off;
                                                              ENG=One Off] }
    { 18  ;   ;Non-Segment Voucher ;Boolean       ;OnValidate=BEGIN
                                                                VALIDATE("Non-Segment Voucher Code");
                                                              END;

                                                   CaptionML=[ENU=Non-Segment Voucher;
                                                              ENG=Non-Segment Voucher] }
    { 19  ;   ;Non-Segment Voucher Code;Code20    ;OnValidate=BEGIN
                                                                IF ("Non-Segment Voucher" = FALSE) AND
                                                                   ("Non-Segment Voucher Code" <> '') THEN
                                                                  ERROR(Text003);
                                                              END;

                                                   CaptionML=[ENU=Non-Segment Voucher Code;
                                                              ENG=Non-Segment Voucher Code] }
    { 20  ;   ;Voucher Amount      ;Decimal       ;CaptionML=[ENU=Voucher Amount;
                                                              ENG=Voucher Amount] }
    { 50  ;   ;Activated           ;Boolean       ;CaptionML=[ENU=Activated;
                                                              ENG=Activated];
                                                   Editable=No }
    { 51  ;   ;DateTime Activated  ;DateTime      ;CaptionML=[ENU=DateTime Activated;
                                                              ENG=DateTime Activated];
                                                   Editable=No }
    { 52  ;   ;Activated By User   ;Code40        ;CaptionML=[ENU=Activated By User;
                                                              ENG=Activated By User];
                                                   Description=MQ 10/01/2014 - GW140110 from C20;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      InternetSetup@1040001 : Record 9021609;
      Text001@1040002 : TextConst 'ENU=You cannot delete %1 %2 because there is at least one voucher entry %3 for this voucher scheme.;ENG=You cannot delete %1 %2 because there is at least one voucher entry %3 for this voucher scheme.';
      VoucherScheme@1000000000 : Record 9021659;
      VoucherLedgerEntry@1000000002 : Record 9021672;
      EComCommentLine@1000000001 : Record 9021680;
      Text002@1040003 : TextConst 'ENU=If there is a promotion code, the Voucher Type must be Promotion.;ENG=If there is a promotion code, the Voucher Type must be Promotion.';
      Text003@1040004 : TextConst 'ENU=The Non-Segment Voucher Code must be blank unless Non-Segment Voucher is true.;ENG=The Non-Segment Voucher Code must be blank unless Non-Segment Voucher is true.';
      Text004@1190000005 : TextConst 'ENU=Voucher Ledger Entries exist.  Do you wish to update the Expiry Date on these?;ENG=Voucher Ledger Entries exist.  Do you wish to update the Expiry Date on these?';
      PromoHeader@1000000003 : Record 9021656;
      NoSeriesMgt@1000000004 : Codeunit 396;
      Text005@1000000005 : TextConst 'ENU=Voucher Ledger Entries exist.  Are you sure as we would have to update the Promotion Code on these?;ENG=Voucher Ledger Entries exist.  Are you sure as we would have to update the Promotion Code on these?';
      Text006@1000000006 : TextConst 'ENU=Change abandonned.;ENG=Change abandonned.';

    PROCEDURE AssistEdit@1040016(OldVoucherScheme@1040000 : Record 9021659) : Boolean;
    BEGIN
      WITH VoucherScheme DO BEGIN
        VoucherScheme := Rec;
        InternetSetup.GET;
        InternetSetup.TESTFIELD("Voucher Nos.");
        IF NoSeriesMgt.SelectSeries(InternetSetup."Voucher Nos.",OldVoucherScheme."No. Series","No. Series") THEN BEGIN
          NoSeriesMgt.SetSeries(Code);
          Rec := VoucherScheme;
          EXIT(TRUE);
        END;
      END;
    END;

    PROCEDURE Activate@1040000();
    BEGIN
      IF Activated = TRUE THEN
        EXIT;

      TESTFIELD(Code);
      TESTFIELD("Expiry Date");
      TESTFIELD("Post Voucher Redemp. Res. No");
      IF "Voucher Type" = "Voucher Type"::Promotional THEN
        TESTFIELD("Promotion Code")
      ELSE
        IF "Voucher Type" = "Voucher Type"::Amount THEN
          TESTFIELD("Voucher Amount");

      IF "Non-Segment Voucher" THEN
        TESTFIELD("Non-Segment Voucher Code")
      ELSE
        TESTFIELD("Non-Segment Voucher Code",'');

      VALIDATE(Activated,TRUE);
      VALIDATE("DateTime Activated",CURRENTDATETIME);
      VALIDATE("Activated By User",USERID);
      MODIFY(TRUE);

      IF "Non-Segment Voucher" THEN BEGIN
        VoucherLedgerEntry.RESET;
        VoucherLedgerEntry.SETRANGE("Entry Type",VoucherLedgerEntry."Entry Type"::Issued);
        VoucherLedgerEntry.SETRANGE("Voucher Scheme Code",Code);
        VoucherLedgerEntry.SETRANGE("Voucher Type","Voucher Type");
        VoucherLedgerEntry.SETRANGE("Voucher No.","Non-Segment Voucher Code");
        VoucherLedgerEntry.SETRANGE("Customer No.",Code);
        IF NOT VoucherLedgerEntry.FINDFIRST THEN BEGIN
          VoucherLedgerEntry.INIT;
          VoucherLedgerEntry."Entry Type" := VoucherLedgerEntry."Entry Type"::Issued;
          VoucherLedgerEntry."Posting Date" := TODAY;
          VoucherLedgerEntry."Voucher Scheme Code" := Code;
          VoucherLedgerEntry."Voucher Type" := "Voucher Type";
          VoucherLedgerEntry."Voucher No." := "Non-Segment Voucher Code";
          VoucherLedgerEntry."Customer No." := Code;
          CASE "Voucher Type" OF
            "Voucher Type"::Amount: BEGIN
                VoucherLedgerEntry."Original Amount" := "Voucher Amount";
                VoucherLedgerEntry."Remaining Amount" := "Voucher Amount";
              END;
            "Voucher Type"::Promotional:
              VoucherLedgerEntry."Promotion Code" := "Promotion Code";
          END;
          VoucherLedgerEntry.Open := TRUE;
          VoucherLedgerEntry."Start Date" := TODAY;
          VoucherLedgerEntry."Expiry Date" := "Expiry Date";
          VoucherLedgerEntry."User ID" := USERID;
          VoucherLedgerEntry."One Off" := "One Off";
          VoucherLedgerEntry."Non-Segment" := TRUE;
          VoucherLedgerEntry.INSERT(TRUE);
        END;
      END;
    END;

    PROCEDURE DeActivate@1040001();
    BEGIN
      IF Activated = FALSE THEN
        EXIT;

      VALIDATE(Activated,FALSE);
      VALIDATE("DateTime Activated",CURRENTDATETIME);
      VALIDATE("Activated By User",USERID);
      MODIFY(TRUE);
    END;

    PROCEDURE VoucherLedEntsExist@1000000000() : Boolean;
    BEGIN
      VoucherLedgerEntry.RESET;
      VoucherLedgerEntry.SETCURRENTKEY("Voucher Scheme Code");
      VoucherLedgerEntry.SETRANGE("Voucher Scheme Code",Code);
      IF VoucherLedgerEntry.FINDFIRST THEN
        EXIT(TRUE)
      ELSE
        EXIT(FALSE);
    END;

    BEGIN
    {
      //DOC EC2009.2.61 MQ 26/01/2011 - GW110126 Comments now linked to Ecommerce Comment Line table
      //DOC EC2009.2.67 MQ 06/07/2011 - GW110706 Delete Voucher, delete Ecommerce Comment Line not Comment Line
      //DOC EC2009.2.70 MA 25/10/2011 - MA111025 Changed Voucher Type InitValue to 1 (Promotional) and added error to OnValidate
      //DOC EC2009.2.74 MQ 01/01/2012 - If change expiry date, change on Voucher Ledger Entries
      //DOC EC2013.4.00 MQ 10/01/2014 - GW140110 Made USERID fields C40
      //DOC EC2013.4.60 MQ 04/04/2014 - GW140404 Renamed flowfield field 14 from Amount to Remaining Amount and add Caption fields; Add code to Promotion Code
      //DOC EC2013.4.60 MQ 18/04/2014 - GW140418 Enhanced code in Promotion Code
      //DOC EC2016.6    JH 05/10/2016 - ECom 2016
    }
    END.
  }
}

