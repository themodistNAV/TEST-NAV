OBJECT Table 113 Sales Invoice Line
{
  OBJECT-PROPERTIES
  {
    Date=17/12/18;
    Time=[ 1:45:51 PM];
    Modified=Yes;
    Version List=NAVW19.00.00.45243,NAVGB9.00.00.45243,NH2016.12,NS2016.16,EC2016.6,M0063,M0062,OP9031,TM0020,TM0033;
  }
  PROPERTIES
  {
    Permissions=TableData 32=r,
                TableData 5802=r;
    OnInsert=BEGIN
               HistoryTablesTriggerCode.T113OnInsert(Rec); //DOC EC2009.2.64
             END;

    OnDelete=VAR
               SalesDocLineComments@1000 : Record 44;
               PostedDeferralHeader@1001 : Record 1704;
             BEGIN
               SalesDocLineComments.SETRANGE("Document Type",SalesDocLineComments."Document Type"::"Posted Invoice");
               SalesDocLineComments.SETRANGE("No.","Document No.");
               SalesDocLineComments.SETRANGE("Document Line No.","Line No.");
               IF NOT SalesDocLineComments.ISEMPTY THEN
                 SalesDocLineComments.DELETEALL;

               PostedDeferralHeader.DeleteHeader(DeferralUtilities.GetSalesDeferralDocType,'','',
                 SalesDocLineComments."Document Type"::"Posted Invoice","Document No.","Line No.");

               HistoryTablesTriggerCode.T113OnDelete(Rec); //DOC EC2009.2.64
             END;

    CaptionML=[ENU=Sales Invoice Line;
               ENG=Sales Invoice Line];
    LookupPageID=Page526;
    DrillDownPageID=Page526;
  }
  FIELDS
  {
    { 2   ;   ;Sell-to Customer No.;Code20        ;TableRelation=Customer;
                                                   CaptionML=[ENU=Sell-to Customer No.;
                                                              ENG=Sell-to Customer No.];
                                                   Editable=No }
    { 3   ;   ;Document No.        ;Code20        ;TableRelation="Sales Invoice Header";
                                                   CaptionML=[ENU=Document No.;
                                                              ENG=Document No.] }
    { 4   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              ENG=Line No.] }
    { 5   ;   ;Type                ;Option        ;CaptionML=[ENU=Type;
                                                              ENG=Type];
                                                   OptionCaptionML=[ENU=" ,G/L Account,Item,Resource,Fixed Asset,Charge (Item)";
                                                                    ENG=" ,G/L Account,Item,Resource,Fixed Asset,Charge (Item)"];
                                                   OptionString=[ ,G/L Account,Item,Resource,Fixed Asset,Charge (Item)] }
    { 6   ;   ;No.                 ;Code20        ;TableRelation=IF (Type=CONST(G/L Account)) "G/L Account"
                                                                 ELSE IF (Type=CONST(Item)) Item
                                                                 ELSE IF (Type=CONST(Resource)) Resource
                                                                 ELSE IF (Type=CONST(Fixed Asset)) "Fixed Asset"
                                                                 ELSE IF (Type=CONST("Charge (Item)")) "Item Charge";
                                                   CaptionML=[ENU=No.;
                                                              ENG=No.] }
    { 7   ;   ;Location Code       ;Code10        ;TableRelation=Location WHERE (Use As In-Transit=CONST(No));
                                                   CaptionML=[ENU=Location Code;
                                                              ENG=Location Code] }
    { 8   ;   ;Posting Group       ;Code10        ;TableRelation=IF (Type=CONST(Item)) "Inventory Posting Group"
                                                                 ELSE IF (Type=CONST(Fixed Asset)) "FA Posting Group";
                                                   CaptionML=[ENU=Posting Group;
                                                              ENG=Posting Group];
                                                   Editable=No }
    { 10  ;   ;Shipment Date       ;Date          ;CaptionML=[ENU=Shipment Date;
                                                              ENG=Shipment Date] }
    { 11  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              ENG=Description] }
    { 12  ;   ;Description 2       ;Text50        ;CaptionML=[ENU=Description 2;
                                                              ENG=Description 2] }
    { 13  ;   ;Unit of Measure     ;Text10        ;CaptionML=[ENU=Unit of Measure;
                                                              ENG=Unit of Measure] }
    { 15  ;   ;Quantity            ;Decimal       ;CaptionML=[ENU=Quantity;
                                                              ENG=Quantity];
                                                   DecimalPlaces=0:5 }
    { 22  ;   ;Unit Price          ;Decimal       ;CaptionML=[ENU=Unit Price;
                                                              ENG=Unit Price];
                                                   AutoFormatType=2;
                                                   AutoFormatExpr=GetCurrencyCode;
                                                   CaptionClass=GetCaptionClass(FIELDNO("Unit Price")) }
    { 23  ;   ;Unit Cost (LCY)     ;Decimal       ;CaptionML=[ENU=Unit Cost (LCY);
                                                              ENG=Unit Cost (LCY)];
                                                   AutoFormatType=2 }
    { 25  ;   ;VAT %               ;Decimal       ;CaptionML=[ENU=VAT %;
                                                              ENG=VAT %];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 27  ;   ;Line Discount %     ;Decimal       ;CaptionML=[ENU=Line Discount %;
                                                              ENG=Line Discount %];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 28  ;   ;Line Discount Amount;Decimal       ;CaptionML=[ENU=Line Discount Amount;
                                                              ENG=Line Discount Amount];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 29  ;   ;Amount              ;Decimal       ;CaptionML=[ENU=Amount;
                                                              ENG=Amount];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 30  ;   ;Amount Including VAT;Decimal       ;CaptionML=[ENU=Amount Including VAT;
                                                              ENG=Amount Including VAT];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 32  ;   ;Allow Invoice Disc. ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Allow Invoice Disc.;
                                                              ENG=Allow Invoice Disc.] }
    { 34  ;   ;Gross Weight        ;Decimal       ;CaptionML=[ENU=Gross Weight;
                                                              ENG=Gross Weight];
                                                   DecimalPlaces=0:5 }
    { 35  ;   ;Net Weight          ;Decimal       ;CaptionML=[ENU=Net Weight;
                                                              ENG=Net Weight];
                                                   DecimalPlaces=0:5 }
    { 36  ;   ;Units per Parcel    ;Decimal       ;CaptionML=[ENU=Units per Parcel;
                                                              ENG=Units per Parcel];
                                                   DecimalPlaces=0:5 }
    { 37  ;   ;Unit Volume         ;Decimal       ;CaptionML=[ENU=Unit Volume;
                                                              ENG=Unit Volume];
                                                   DecimalPlaces=0:5 }
    { 38  ;   ;Appl.-to Item Entry ;Integer       ;AccessByPermission=TableData 27=R;
                                                   CaptionML=[ENU=Appl.-to Item Entry;
                                                              ENG=Appl.-to Item Entry] }
    { 40  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=[ENU=Shortcut Dimension 1 Code;
                                                              ENG=Shortcut Dimension 1 Code];
                                                   CaptionClass='1,2,1' }
    { 41  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=[ENU=Shortcut Dimension 2 Code;
                                                              ENG=Shortcut Dimension 2 Code];
                                                   CaptionClass='1,2,2' }
    { 42  ;   ;Customer Price Group;Code10        ;TableRelation="Customer Price Group";
                                                   CaptionML=[ENU=Customer Price Group;
                                                              ENG=Customer Price Group] }
    { 45  ;   ;Job No.             ;Code20        ;TableRelation=Job;
                                                   CaptionML=[ENU=Job No.;
                                                              ENG=Job No.] }
    { 52  ;   ;Work Type Code      ;Code10        ;TableRelation="Work Type";
                                                   CaptionML=[ENU=Work Type Code;
                                                              ENG=Work Type Code] }
    { 63  ;   ;Shipment No.        ;Code20        ;CaptionML=[ENU=Shipment No.;
                                                              ENG=Shipment No.];
                                                   Editable=No }
    { 64  ;   ;Shipment Line No.   ;Integer       ;CaptionML=[ENU=Shipment Line No.;
                                                              ENG=Shipment Line No.];
                                                   Editable=No }
    { 68  ;   ;Bill-to Customer No.;Code20        ;TableRelation=Customer;
                                                   CaptionML=[ENU=Bill-to Customer No.;
                                                              ENG=Bill-to Customer No.];
                                                   Editable=No }
    { 69  ;   ;Inv. Discount Amount;Decimal       ;CaptionML=[ENU=Inv. Discount Amount;
                                                              ENG=Inv. Discount Amount];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 73  ;   ;Drop Shipment       ;Boolean       ;AccessByPermission=TableData 223=R;
                                                   CaptionML=[ENU=Drop Shipment;
                                                              ENG=Drop Shipment] }
    { 74  ;   ;Gen. Bus. Posting Group;Code10     ;TableRelation="Gen. Business Posting Group";
                                                   CaptionML=[ENU=Gen. Bus. Posting Group;
                                                              ENG=Gen. Bus. Posting Group] }
    { 75  ;   ;Gen. Prod. Posting Group;Code10    ;TableRelation="Gen. Product Posting Group";
                                                   CaptionML=[ENU=Gen. Prod. Posting Group;
                                                              ENG=Gen. Prod. Posting Group] }
    { 77  ;   ;VAT Calculation Type;Option        ;CaptionML=[ENU=VAT Calculation Type;
                                                              ENG=VAT Calculation Type];
                                                   OptionCaptionML=[ENU=Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax;
                                                                    ENG=Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax];
                                                   OptionString=Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax }
    { 78  ;   ;Transaction Type    ;Code10        ;TableRelation="Transaction Type";
                                                   CaptionML=[ENU=Transaction Type;
                                                              ENG=Transaction Nature Code] }
    { 79  ;   ;Transport Method    ;Code10        ;TableRelation="Transport Method";
                                                   CaptionML=[ENU=Transport Method;
                                                              ENG=Transport Method] }
    { 80  ;   ;Attached to Line No.;Integer       ;TableRelation="Sales Invoice Line"."Line No." WHERE (Document No.=FIELD(Document No.));
                                                   CaptionML=[ENU=Attached to Line No.;
                                                              ENG=Attached to Line No.] }
    { 81  ;   ;Exit Point          ;Code10        ;TableRelation="Entry/Exit Point";
                                                   CaptionML=[ENU=Exit Point;
                                                              ENG=Exit Point] }
    { 82  ;   ;Area                ;Code10        ;TableRelation=Area;
                                                   CaptionML=[ENU=Area;
                                                              ENG=Area] }
    { 83  ;   ;Transaction Specification;Code10   ;TableRelation="Transaction Specification";
                                                   CaptionML=[ENU=Transaction Specification;
                                                              ENG=Transaction Specification] }
    { 84  ;   ;Tax Category        ;Code10        ;CaptionML=[ENU=Tax Category;
                                                              ENG=Tax Category] }
    { 85  ;   ;Tax Area Code       ;Code20        ;TableRelation="Tax Area";
                                                   CaptionML=[ENU=Tax Area Code;
                                                              ENG=VAT Area Code] }
    { 86  ;   ;Tax Liable          ;Boolean       ;CaptionML=[ENU=Tax Liable;
                                                              ENG=VAT Liable] }
    { 87  ;   ;Tax Group Code      ;Code10        ;TableRelation="Tax Group";
                                                   CaptionML=[ENU=Tax Group Code;
                                                              ENG=VAT Group Code] }
    { 88  ;   ;VAT Clause Code     ;Code10        ;TableRelation="VAT Clause";
                                                   CaptionML=[ENU=VAT Clause Code;
                                                              ENG=VAT Clause Code] }
    { 89  ;   ;VAT Bus. Posting Group;Code10      ;TableRelation="VAT Business Posting Group";
                                                   CaptionML=[ENU=VAT Bus. Posting Group;
                                                              ENG=VAT Bus. Posting Group] }
    { 90  ;   ;VAT Prod. Posting Group;Code10     ;TableRelation="VAT Product Posting Group";
                                                   CaptionML=[ENU=VAT Prod. Posting Group;
                                                              ENG=VAT Prod. Posting Group] }
    { 97  ;   ;Blanket Order No.   ;Code20        ;TableRelation="Sales Header".No. WHERE (Document Type=CONST(Blanket Order));
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Blanket Order No.;
                                                              ENG=Blanket Order No.] }
    { 98  ;   ;Blanket Order Line No.;Integer     ;TableRelation="Sales Line"."Line No." WHERE (Document Type=CONST(Blanket Order),
                                                                                                Document No.=FIELD(Blanket Order No.));
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Blanket Order Line No.;
                                                              ENG=Blanket Order Line No.] }
    { 99  ;   ;VAT Base Amount     ;Decimal       ;CaptionML=[ENU=VAT Base Amount;
                                                              ENG=VAT Base Amount];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 100 ;   ;Unit Cost           ;Decimal       ;CaptionML=[ENU=Unit Cost;
                                                              ENG=Unit Cost];
                                                   Editable=No;
                                                   AutoFormatType=2;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 101 ;   ;System-Created Entry;Boolean       ;CaptionML=[ENU=System-Created Entry;
                                                              ENG=System-Created Entry];
                                                   Editable=No }
    { 103 ;   ;Line Amount         ;Decimal       ;CaptionML=[ENU=Line Amount;
                                                              ENG=Line Amount];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode;
                                                   CaptionClass=GetCaptionClass(FIELDNO("Line Amount")) }
    { 104 ;   ;VAT Difference      ;Decimal       ;CaptionML=[ENU=VAT Difference;
                                                              ENG=VAT Difference];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 106 ;   ;VAT Identifier      ;Code10        ;CaptionML=[ENU=VAT Identifier;
                                                              ENG=VAT Identifier];
                                                   Editable=No }
    { 107 ;   ;IC Partner Ref. Type;Option        ;CaptionML=[ENU=IC Partner Ref. Type;
                                                              ENG=IC Partner Ref. Type];
                                                   OptionCaptionML=[ENU=" ,G/L Account,Item,,,Charge (Item),Cross reference,Common Item No.";
                                                                    ENG=" ,G/L Account,Item,,,Charge (Item),Cross reference,Common Item No."];
                                                   OptionString=[ ,G/L Account,Item,,,Charge (Item),Cross reference,Common Item No.] }
    { 108 ;   ;IC Partner Reference;Code20        ;CaptionML=[ENU=IC Partner Reference;
                                                              ENG=IC Partner Reference] }
    { 123 ;   ;Prepayment Line     ;Boolean       ;CaptionML=[ENU=Prepayment Line;
                                                              ENG=Prepayment Line];
                                                   Editable=No }
    { 130 ;   ;IC Partner Code     ;Code20        ;TableRelation="IC Partner";
                                                   CaptionML=[ENU=IC Partner Code;
                                                              ENG=IC Partner Code] }
    { 131 ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              ENG=Posting Date] }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDimensions;
                                                            END;

                                                   CaptionML=[ENU=Dimension Set ID;
                                                              ENG=Dimension Set ID];
                                                   Editable=No }
    { 1001;   ;Job Task No.        ;Code20        ;TableRelation="Job Task"."Job Task No." WHERE (Job No.=FIELD(Job No.));
                                                   CaptionML=[ENU=Job Task No.;
                                                              ENG=Job Task No.];
                                                   Editable=No }
    { 1002;   ;Job Contract Entry No.;Integer     ;CaptionML=[ENU=Job Contract Entry No.;
                                                              ENG=Job Contract Entry No.];
                                                   Editable=No }
    { 1700;   ;Deferral Code       ;Code10        ;TableRelation="Deferral Template"."Deferral Code";
                                                   CaptionML=[ENU=Deferral Code;
                                                              ENG=Deferral Code] }
    { 5402;   ;Variant Code        ;Code10        ;TableRelation=IF (Type=CONST(Item)) "Item Variant".Code WHERE (Item No.=FIELD(No.));
                                                   CaptionML=[ENU=Variant Code;
                                                              ENG=Variant Code] }
    { 5403;   ;Bin Code            ;Code20        ;TableRelation=Bin.Code WHERE (Location Code=FIELD(Location Code),
                                                                                 Item Filter=FIELD(No.),
                                                                                 Variant Filter=FIELD(Variant Code));
                                                   CaptionML=[ENU=Bin Code;
                                                              ENG=Bin Code] }
    { 5404;   ;Qty. per Unit of Measure;Decimal   ;CaptionML=[ENU=Qty. per Unit of Measure;
                                                              ENG=Qty. per Unit of Measure];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 5407;   ;Unit of Measure Code;Code10        ;TableRelation=IF (Type=CONST(Item)) "Item Unit of Measure".Code WHERE (Item No.=FIELD(No.))
                                                                 ELSE "Unit of Measure";
                                                   CaptionML=[ENU=Unit of Measure Code;
                                                              ENG=Unit of Measure Code] }
    { 5415;   ;Quantity (Base)     ;Decimal       ;CaptionML=[ENU=Quantity (Base);
                                                              ENG=Quantity (Base)];
                                                   DecimalPlaces=0:5 }
    { 5600;   ;FA Posting Date     ;Date          ;CaptionML=[ENU=FA Posting Date;
                                                              ENG=FA Posting Date] }
    { 5602;   ;Depreciation Book Code;Code10      ;TableRelation="Depreciation Book";
                                                   CaptionML=[ENU=Depreciation Book Code;
                                                              ENG=Depreciation Book Code] }
    { 5605;   ;Depr. until FA Posting Date;Boolean;CaptionML=[ENU=Depr. until FA Posting Date;
                                                              ENG=Depr. until FA Posting Date] }
    { 5612;   ;Duplicate in Depreciation Book;Code10;
                                                   TableRelation="Depreciation Book";
                                                   CaptionML=[ENU=Duplicate in Depreciation Book;
                                                              ENG=Duplicate in Depreciation Book] }
    { 5613;   ;Use Duplication List;Boolean       ;CaptionML=[ENU=Use Duplication List;
                                                              ENG=Use Duplication List] }
    { 5700;   ;Responsibility Center;Code10       ;TableRelation="Responsibility Center";
                                                   CaptionML=[ENU=Responsibility Center;
                                                              ENG=Responsibility Centre] }
    { 5705;   ;Cross-Reference No. ;Code20        ;AccessByPermission=TableData 5717=R;
                                                   CaptionML=[ENU=Cross-Reference No.;
                                                              ENG=Cross-Reference No.] }
    { 5706;   ;Unit of Measure (Cross Ref.);Code10;TableRelation=IF (Type=CONST(Item)) "Item Unit of Measure".Code WHERE (Item No.=FIELD(No.));
                                                   CaptionML=[ENU=Unit of Measure (Cross Ref.);
                                                              ENG=Unit of Measure (Cross Ref.)] }
    { 5707;   ;Cross-Reference Type;Option        ;CaptionML=[ENU=Cross-Reference Type;
                                                              ENG=Cross-Reference Type];
                                                   OptionCaptionML=[ENU=" ,Customer,Vendor,Bar Code";
                                                                    ENG=" ,Customer,Vendor,Bar Code"];
                                                   OptionString=[ ,Customer,Vendor,Bar Code] }
    { 5708;   ;Cross-Reference Type No.;Code30    ;CaptionML=[ENU=Cross-Reference Type No.;
                                                              ENG=Cross-Reference Type No.] }
    { 5709;   ;Item Category Code  ;Code10        ;TableRelation=IF (Type=CONST(Item)) "Item Category";
                                                   CaptionML=[ENU=Item Category Code;
                                                              ENG=Item Category Code] }
    { 5710;   ;Nonstock            ;Boolean       ;CaptionML=[ENU=Nonstock;
                                                              ENG=Nonstock] }
    { 5711;   ;Purchasing Code     ;Code10        ;TableRelation=Purchasing;
                                                   CaptionML=[ENU=Purchasing Code;
                                                              ENG=Purchasing Code] }
    { 5712;   ;Product Group Code  ;Code10        ;TableRelation="Product Group".Code WHERE (Item Category Code=FIELD(Item Category Code));
                                                   CaptionML=[ENU=Product Group Code;
                                                              ENG=Product Group Code] }
    { 5811;   ;Appl.-from Item Entry;Integer      ;AccessByPermission=TableData 27=R;
                                                   CaptionML=[ENU=Appl.-from Item Entry;
                                                              ENG=Appl.-from Item Entry];
                                                   MinValue=0 }
    { 6608;   ;Return Reason Code  ;Code10        ;TableRelation="Return Reason";
                                                   CaptionML=[ENU=Return Reason Code;
                                                              ENG=Return Reason Code] }
    { 7001;   ;Allow Line Disc.    ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Allow Line Disc.;
                                                              ENG=Allow Line Disc.] }
    { 7002;   ;Customer Disc. Group;Code20        ;TableRelation="Customer Discount Group";
                                                   CaptionML=[ENU=Customer Disc. Group;
                                                              ENG=Customer Disc. Group] }
    { 10500;  ;Reverse Charge Item ;Boolean       ;CaptionML=[ENU=Reverse Charge Item;
                                                              ENG=Reverse Charge Item];
                                                   Editable=No }
    { 10501;  ;Reverse Charge      ;Decimal       ;CaptionML=[ENU=Reverse Charge;
                                                              ENG=Reverse Charge] }
    { 50002;  ;Parent Line No.     ;Integer       ;Description=OP9031 }
    { 50010;  ;Shipment ID         ;Code30        ;CaptionML=[ENU=Shipment ID;
                                                              ENG=Shipment ID];
                                                   Description=OP9031 }
    { 50015;  ;Duty Amount         ;Decimal       ;Description=OP9031;
                                                   Editable=No }
    { 50016;  ;Total Duty Amount   ;Decimal       ;Description=OP9031;
                                                   Editable=No }
    { 50020;  ;Line Status         ;Option        ;CaptionML=[ENU=Line Status;
                                                              ENG=Line Status];
                                                   OptionCaptionML=[ENU=" ,Processing,Picked,Shipped,Cancelled";
                                                                    ENG=" ,Processing,Picked,Shipped,Cancelled"];
                                                   OptionString=[ ,Processing,Picked,Shipped,Cancelled];
                                                   Description=OP9031 }
    { 50022;  ;Product Tax Amount  ;Decimal       ;CaptionML=[ENU=Product Tax Amount;
                                                              ENG=Product Tax Amount];
                                                   Description=OP11536 }
    { 50100;  ;Exahange Order      ;Boolean       ;Description=TM0020;
                                                   Editable=No }
    { 50101;  ;Origianl Order No.  ;Code20        ;Description=TM0020;
                                                   Editable=No }
    { 50710;  ;Campaign            ;Text50        ;Description=M0063 DD 26/10/16 }
    { 50720;  ;Coupon Code         ;Code30        ;Description=M0063 DD 26/10/16 }
    { 50730;  ;Gift                ;Boolean       ;Description=M0062 DD 27/10/16 }
    { 50740;  ;Gift Message        ;Text250       ;Description=M0062 DD 27/10/16 }
    { 50800;  ;Main Line No.       ;Integer        }
    { 50801;  ;Is Returnable       ;Boolean       ;Description=TM0033;
                                                   Editable=No }
    { 50900;  ;Order No.           ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Sales Invoice Header"."Order No." WHERE (No.=FIELD(Document No.)));
                                                   Editable=No }
    { 71000;  ;Intercompany        ;Boolean        }
    { 71001;  ;Correction          ;Boolean        }
    { 9021200;;Label Code          ;Code10        ;CaptionML=[ENU=Label Code;
                                                              ENG=Label Code];
                                                   Description=MQ;
                                                   Editable=No }
    { 9021205;;Is An Internet Customer;Boolean    ;CaptionML=[ENU=Is An Internet Customer;
                                                              ENG=Is An Internet Customer];
                                                   Description=MQ }
    { 9021207;;DateTimeInsertedModified;DateTime  ;CaptionML=[ENU=DateTimeInsertedModified;
                                                              ENG=DateTimeInsertedModified];
                                                   Description=MQ }
    { 9021818;;Order GuID          ;Text38        ;CaptionML=[ENU=Order GuID;
                                                              ENG=Order GuID];
                                                   Description=MQ }
    { 9022517;;BOM Quantity        ;Decimal       ;CaptionML=[ENU=BOM Quantity;
                                                              ENG=BOM Quantity];
                                                   Description=MQ }
    { 9022518;;BOM Item No.        ;Code20        ;TableRelation=Item;
                                                   CaptionML=[ENU=BOM Item No.;
                                                              ENG=BOM Item No.];
                                                   Description=MQ }
    { 9062254;;Catalogue Code      ;Code20        ;TableRelation=Catalogue;
                                                   CaptionML=[ENU=Catalogue Code;
                                                              ENG=Catalogue Code];
                                                   Description=NH2016.12 }
    { 9087000;;Style No.           ;Code20        ;TableRelation=Style;
                                                   CaptionML=[ENU=Style No.;
                                                              ENG=Style No.];
                                                   Description=NS2015.1 }
    { 9087001;;Season Code         ;Code20        ;TableRelation=Season;
                                                   CaptionML=[ENU=Season Code;
                                                              ENG=Season Code];
                                                   Description=NS2015.1 }
    { 9087002;;Sub-Season Code     ;Code20        ;TableRelation=Sub-Season.Code WHERE (Season Code=FIELD(Season Code));
                                                   CaptionML=[ENU=Sub-Season Code;
                                                              ENG=Sub-Season Code];
                                                   Description=NS2015.1 }
    { 9087003;;Brand Code          ;Code20        ;TableRelation=Brand;
                                                   CaptionML=[ENU=Brand Code;
                                                              ENG=Brand Code];
                                                   Description=NS2015.1 }
    { 9087004;;Division Code       ;Code20        ;TableRelation="Item Hierarchy".Code WHERE (Type=CONST(Division));
                                                   CaptionML=[ENU=Division Code;
                                                              ENG=Division Code];
                                                   Description=NS2015.1 }
    { 9087005;;Department Code     ;Code20        ;TableRelation="Item Hierarchy".Code WHERE (Type=CONST(Department),
                                                                                              Division Code=FIELD(Division Code));
                                                   CaptionML=[ENU=Department Code;
                                                              ENG=Department Code];
                                                   Description=NS2015.1 }
    { 9087006;;Group Code          ;Code20        ;TableRelation="Item Hierarchy".Code WHERE (Type=CONST(Group),
                                                                                              Division Code=FIELD(Division Code),
                                                                                              Department Code=FIELD(Department Code));
                                                   CaptionML=[ENU=Group Code;
                                                              ENG=Group Code];
                                                   Description=NS2015.1 }
    { 9087007;;Category Code       ;Code20        ;TableRelation="Item Hierarchy".Code WHERE (Type=CONST(Category),
                                                                                              Division Code=FIELD(Division Code),
                                                                                              Department Code=FIELD(Department Code),
                                                                                              Group Code=FIELD(Group Code));
                                                   CaptionML=[ENU=Category Code;
                                                              ENG=Category Code];
                                                   Description=NS2015.1 }
    { 9087008;;Sub-Category Code   ;Code20        ;TableRelation="Item Hierarchy".Code WHERE (Type=CONST(Category),
                                                                                              Division Code=FIELD(Division Code),
                                                                                              Department Code=FIELD(Department Code),
                                                                                              Group Code=FIELD(Group Code),
                                                                                              Category Code=FIELD(Category Code));
                                                   CaptionML=[ENU=Sub-Category Code;
                                                              ENG=Sub-Category Code];
                                                   Description=NS2015.1 }
    { 9087011;;Size Group Code     ;Code20        ;TableRelation="Size Group";
                                                   CaptionML=[ENU=Size Group Code;
                                                              ENG=Size Group Code];
                                                   Description=NS2015.1 }
    { 9087012;;Size Code           ;Code20        ;TableRelation=Size.Code WHERE (Size Group Code=FIELD(Size Group Code));
                                                   CaptionML=[ENU=Size Code;
                                                              ENG=Size Code];
                                                   Description=NS2015.1 }
    { 9087013;;Standard Size Group Code;Code20    ;TableRelation="Size Group";
                                                   CaptionML=[ENU=Standard Size Group Code;
                                                              ENG=Standard Size Group Code];
                                                   Description=NS2015.1 }
    { 9087014;;Standard Size Code  ;Code20        ;TableRelation=Size.Code WHERE (Size Group Code=FIELD(Standard Size Group Code));
                                                   CaptionML=[ENU=Standard Size Code;
                                                              ENG=Standard Size Code];
                                                   Description=NS2015.1 }
  }
  KEYS
  {
    {    ;Document No.,Line No.                   ;SumIndexFields=Amount,Amount Including VAT;
                                                   MaintainSIFTIndex=No;
                                                   Clustered=Yes }
    {    ;Blanket Order No.,Blanket Order Line No. }
    {    ;Sell-to Customer No.                     }
    {    ;Sell-to Customer No.,Type,Document No.  ;MaintainSQLIndex=No }
    {    ;Shipment No.,Shipment Line No.           }
    {    ;Job Contract Entry No.                   }
    {    ;Bill-to Customer No.                     }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      DimMgt@1001 : Codeunit 408;
      DeferralUtilities@1000 : Codeunit 1720;
      xxMQ@1110000001 : Integer;
      HistoryTablesTriggerCode@1011000000 : Codeunit 9021673;

    PROCEDURE GetCurrencyCode@1() : Code[10];
    VAR
      SalesInvHeader@1000 : Record 112;
    BEGIN
      IF "Document No." = SalesInvHeader."No." THEN
        EXIT(SalesInvHeader."Currency Code");
      IF SalesInvHeader.GET("Document No.") THEN
        EXIT(SalesInvHeader."Currency Code");
      EXIT('');
    END;

    PROCEDURE ShowDimensions@25();
    BEGIN
      DimMgt.ShowDimensionSet("Dimension Set ID",STRSUBSTNO('%1 %2 %3',TABLECAPTION,"Document No.","Line No."));
    END;

    PROCEDURE ShowItemTrackingLines@3();
    VAR
      ItemTrackingDocMgt@1000 : Codeunit 6503;
    BEGIN
      ItemTrackingDocMgt.ShowItemTrackingForInvoiceLine(RowID1);
    END;

    PROCEDURE CalcVATAmountLines@2(VAR SalesInvHeader@1000 : Record 112;VAR VATAmountLine@1001 : Record 290);
    BEGIN
      VATAmountLine.DELETEALL;
      SETRANGE("Document No.",SalesInvHeader."No.");
      IF FIND('-') THEN
        REPEAT
          VATAmountLine.INIT;
          VATAmountLine."VAT Identifier" := "VAT Identifier";
          VATAmountLine."VAT Calculation Type" := "VAT Calculation Type";
          VATAmountLine."Tax Group Code" := "Tax Group Code";
          VATAmountLine."VAT %" := "VAT %";
          VATAmountLine."VAT Base" := Amount;
          VATAmountLine."VAT Amount" := "Amount Including VAT" - Amount;
          VATAmountLine."Amount Including VAT" := "Amount Including VAT";
          VATAmountLine."Line Amount" := "Line Amount";
          IF "Allow Invoice Disc." THEN
            VATAmountLine."Inv. Disc. Base Amount" := "Line Amount";
          VATAmountLine."Invoice Discount Amount" := "Inv. Discount Amount";
          VATAmountLine.Quantity := "Quantity (Base)";
          VATAmountLine."Calculated VAT Amount" := "Amount Including VAT" - Amount - "VAT Difference";
          VATAmountLine."VAT Difference" := "VAT Difference";
          VATAmountLine.InsertLine;
        UNTIL NEXT = 0;
    END;

    LOCAL PROCEDURE GetFieldCaption@31(FieldNumber@1000 : Integer) : Text[100];
    VAR
      Field@1001 : Record 2000000041;
    BEGIN
      Field.GET(DATABASE::"Sales Invoice Line",FieldNumber);
      EXIT(Field."Field Caption");
    END;

    LOCAL PROCEDURE GetCaptionClass@34(FieldNumber@1000 : Integer) : Text[80];
    VAR
      SalesInvHeader@1001 : Record 112;
    BEGIN
      IF NOT SalesInvHeader.GET("Document No.") THEN
        SalesInvHeader.INIT;
      IF SalesInvHeader."Prices Including VAT" THEN
        EXIT('2,1,' + GetFieldCaption(FieldNumber));

      EXIT('2,0,' + GetFieldCaption(FieldNumber));
    END;

    PROCEDURE RowID1@44() : Text[250];
    VAR
      ItemTrackingMgt@1000 : Codeunit 6500;
    BEGIN
      EXIT(ItemTrackingMgt.ComposeRowID(DATABASE::"Sales Invoice Line",
          0,"Document No.",'',0,"Line No."));
    END;

    LOCAL PROCEDURE GetSalesShptLines@4(VAR TempSalesShptLine@1000 : TEMPORARY Record 111);
    VAR
      SalesShptLine@1003 : Record 111;
      ItemLedgEntry@1002 : Record 32;
      ValueEntry@1001 : Record 5802;
    BEGIN
      TempSalesShptLine.RESET;
      TempSalesShptLine.DELETEALL;

      IF Type <> Type::Item THEN
        EXIT;

      FilterPstdDocLineValueEntries(ValueEntry);
      IF ValueEntry.FINDSET THEN
        REPEAT
          ItemLedgEntry.GET(ValueEntry."Item Ledger Entry No.");
          IF ItemLedgEntry."Document Type" = ItemLedgEntry."Document Type"::"Sales Shipment" THEN
            IF SalesShptLine.GET(ItemLedgEntry."Document No.",ItemLedgEntry."Document Line No.") THEN BEGIN
              TempSalesShptLine.INIT;
              TempSalesShptLine := SalesShptLine;
              IF TempSalesShptLine.INSERT THEN;
            END;
        UNTIL ValueEntry.NEXT = 0;
    END;

    PROCEDURE CalcShippedSaleNotReturned@5(VAR ShippedQtyNotReturned@1006 : Decimal;VAR RevUnitCostLCY@1004 : Decimal;ExactCostReverse@1003 : Boolean) : Decimal;
    VAR
      TempItemLedgEntry@1002 : TEMPORARY Record 32;
      TotalCostLCY@1009 : Decimal;
      TotalQtyBase@1007 : Decimal;
    BEGIN
      ShippedQtyNotReturned := 0;
      IF (Type <> Type::Item) OR (Quantity <= 0) THEN BEGIN
        RevUnitCostLCY := "Unit Cost (LCY)";
        EXIT;
      END;

      RevUnitCostLCY := 0;
      GetItemLedgEntries(TempItemLedgEntry,FALSE);
      IF TempItemLedgEntry.FINDSET THEN
        REPEAT
          ShippedQtyNotReturned := ShippedQtyNotReturned - TempItemLedgEntry."Shipped Qty. Not Returned";
          IF ExactCostReverse THEN BEGIN
            TempItemLedgEntry.CALCFIELDS("Cost Amount (Expected)","Cost Amount (Actual)");
            TotalCostLCY :=
              TotalCostLCY + TempItemLedgEntry."Cost Amount (Expected)" + TempItemLedgEntry."Cost Amount (Actual)";
            TotalQtyBase := TotalQtyBase + TempItemLedgEntry.Quantity;
          END;
        UNTIL TempItemLedgEntry.NEXT = 0;

      IF ExactCostReverse AND (ShippedQtyNotReturned <> 0) AND (TotalQtyBase <> 0) THEN
        RevUnitCostLCY := ABS(TotalCostLCY / TotalQtyBase) * "Qty. per Unit of Measure"
      ELSE
        RevUnitCostLCY := "Unit Cost (LCY)";
      ShippedQtyNotReturned := CalcQty(ShippedQtyNotReturned);

      IF ShippedQtyNotReturned > Quantity THEN
        ShippedQtyNotReturned := Quantity;
    END;

    LOCAL PROCEDURE CalcQty@11(QtyBase@1000 : Decimal) : Decimal;
    BEGIN
      IF "Qty. per Unit of Measure" = 0 THEN
        EXIT(QtyBase);
      EXIT(ROUND(QtyBase / "Qty. per Unit of Measure",0.00001));
    END;

    PROCEDURE GetItemLedgEntries@6(VAR TempItemLedgEntry@1000 : TEMPORARY Record 32;SetQuantity@1003 : Boolean);
    VAR
      ItemLedgEntry@1002 : Record 32;
      ValueEntry@1001 : Record 5802;
    BEGIN
      IF SetQuantity THEN BEGIN
        TempItemLedgEntry.RESET;
        TempItemLedgEntry.DELETEALL;

        IF Type <> Type::Item THEN
          EXIT;
      END;

      FilterPstdDocLineValueEntries(ValueEntry);
      ValueEntry.SETFILTER("Invoiced Quantity",'<>0');
      IF ValueEntry.FINDSET THEN
        REPEAT
          ItemLedgEntry.GET(ValueEntry."Item Ledger Entry No.");
          TempItemLedgEntry := ItemLedgEntry;
          IF SetQuantity THEN BEGIN
            TempItemLedgEntry.Quantity := ValueEntry."Invoiced Quantity";
            IF ABS(TempItemLedgEntry."Shipped Qty. Not Returned") > ABS(TempItemLedgEntry.Quantity) THEN
              TempItemLedgEntry."Shipped Qty. Not Returned" := TempItemLedgEntry.Quantity;
          END;
          IF TempItemLedgEntry.INSERT THEN;
        UNTIL ValueEntry.NEXT = 0;
    END;

    PROCEDURE FilterPstdDocLineValueEntries@7(VAR ValueEntry@1000 : Record 5802);
    BEGIN
      ValueEntry.RESET;
      ValueEntry.SETCURRENTKEY("Document No.");
      ValueEntry.SETRANGE("Document No.","Document No.");
      ValueEntry.SETRANGE("Document Type",ValueEntry."Document Type"::"Sales Invoice");
      ValueEntry.SETRANGE("Document Line No.","Line No.");
    END;

    LOCAL PROCEDURE ShowItemLedgEntries@10();
    VAR
      TempItemLedgEntry@1000 : TEMPORARY Record 32;
    BEGIN
      IF Type = Type::Item THEN BEGIN
        GetItemLedgEntries(TempItemLedgEntry,FALSE);
        PAGE.RUNMODAL(0,TempItemLedgEntry);
      END;
    END;

    PROCEDURE ShowItemShipmentLines@9();
    VAR
      TempSalesShptLine@1000 : TEMPORARY Record 111;
    BEGIN
      IF Type = Type::Item THEN BEGIN
        GetSalesShptLines(TempSalesShptLine);
        PAGE.RUNMODAL(0,TempSalesShptLine);
      END;
    END;

    PROCEDURE ShowLineComments@8();
    VAR
      SalesDocLineComments@1000 : Record 44;
      SalesDocCommentSheet@1001 : Page 67;
    BEGIN
      SalesDocLineComments.SETRANGE("Document Type",SalesDocLineComments."Document Type"::"Posted Invoice");
      SalesDocLineComments.SETRANGE("No.","Document No.");
      SalesDocLineComments.SETRANGE("Document Line No.","Line No.");
      SalesDocCommentSheet.SETTABLEVIEW(SalesDocLineComments);
      SalesDocCommentSheet.RUNMODAL;
    END;

    PROCEDURE InitFromSalesLine@12(SalesInvHeader@1002 : Record 112;SalesLine@1001 : Record 37);
    BEGIN
      INIT;
      TRANSFERFIELDS(SalesLine);
      "Posting Date" := SalesInvHeader."Posting Date";
      "Document No." := SalesInvHeader."No.";
      Quantity := SalesLine."Qty. to Invoice";
      "Quantity (Base)" := SalesLine."Qty. to Invoice (Base)";
    END;

    PROCEDURE ShowDeferrals@13();
    BEGIN
      DeferralUtilities.OpenLineScheduleView(
        "Deferral Code",DeferralUtilities.GetSalesDeferralDocType,'','',
        GetDocumentType,"Document No.","Line No.");
    END;

    PROCEDURE GetDocumentType@14() : Integer;
    VAR
      SalesCommentLine@1000 : Record 44;
    BEGIN
      EXIT(SalesCommentLine."Document Type"::"Posted Invoice")
    END;

    BEGIN
    {
      //DOC NH2016.12   JH 18/11/2015 - "Catalogue Code" field added
      //DOC NS2015.1    JH 23/01/2014 - nSemble fields
      //DOC NS2015.1    JH 21/03/2014 - New nSemble fields
      //DOC EC2009.2.64 MQ 01/01/2012 - Add fields with no OnValidate code and Global; Add key Sync Log No.; Code in OnInsert and OnDelete
      //DOC EC2013.3.70 MQ 15/07/2013 - GW130715 Add fields 9022517/8 - only needed if use expand BOM.
      //DOC EC2013.3.80 MQ 06/09/2013 - GW130906 Remove Sync fields 9021251 and 9021252 and key
      //DOC EC2016.6    JH 05/10/2016 - ECom 2016
      //DOC M0063 DD 26/10/16 - Added fields Campaign and "Coupon Code".
      //DOC M0062 DD 27/10/16 - Added fields Gift and "Gift Message".
      //DOC OP9031 LF 20/10/2016 - Added field "Shipment ID"
      //DOC OP9031 LF 02/11/2016 - Added field "Line Status"
      //DOC OP9031 RK 04/01/16 - 'Duty Amount' and 'Total Duty Amount' fields to store duty amount imported from Demandware for line.
      //DOC TM0020 AW 10/09/17 - New Fields for Returns & Exchange Process
    }
    END.
  }
}

