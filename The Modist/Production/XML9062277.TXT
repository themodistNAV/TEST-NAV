OBJECT XMLport 9062277 Export Web Tiles
{
  OBJECT-PROPERTIES
  {
    Date=10/05/16;
    Time=12:00:00 PM;
    Version List=NA2016.15;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Export Web Tiles;
               ENG=Export Web Tiles];
    Encoding=UTF-8;
    Format/Evaluate=XML Format/Evaluate;
    OnPreXMLport=BEGIN
                   div_01_class := 'metro';
                   nav_class := 'vertical-menu compact';
                   panel_class := 'tnppanel';
                   link_class := 'tnplink';

                   panelLink_style := 'margin: 0;padding: 0;';
                 END;

  }
  ELEMENTS
  {
    { [{C2FBCC8B-9865-44F0-BD9F-E6BFB4B09DF0}];  ;div                 ;Element ;Text    ;
                                                  VariableName=div_01 }

    { [{EDA83480-1756-495D-8C60-CE9C9DA35FD3}];1 ;class               ;Attribute;Text   ;
                                                  VariableName=div_01_class }

    { [{994BE448-5E72-4BED-9DEE-07B5F28C3B5C}];1 ;div                 ;Element ;Table   ;
                                                  SourceTable=Table9062363;
                                                  Export::OnAfterGetRecord=VAR
                                                                             lTile@1000000000 : Record 9062367;
                                                                             lTileGroup@1000000001 : Record 9062366;
                                                                           BEGIN
                                                                             menupanel_style :=
                                                                               'overflow: hidden; margin: 0; padding: 0px 5px; width: ' + FormatSize(Panel."Links Width") +
                                                                               '; right: 0px; position: absolute;';
                                                                             tilepanel_style := 'float: left; overflow: auto; margin-right: ' + FormatSize(Panel."Links Width" + 5) + '; padding: 0;';

                                                                             first_tile_group := TRUE;

                                                                             //collect tole groups
                                                                             lTileGroup.RESET();
                                                                             lTileGroup.SETRANGE("Panel Code", Panel.Code);
                                                                             IF (lTileGroup.FINDSET()) THEN BEGIN
                                                                               REPEAT
                                                                                 TileGroup := lTileGroup;
                                                                                 TileGroup.INSERT();
                                                                               UNTIL (lTileGroup.NEXT() = 0);
                                                                             END;

                                                                             //collect tiles and apply user personalization
                                                                             //Tile.RESET();
                                                                             //Tile.DELETEALL();

                                                                             lTile.RESET();
                                                                             lTile.SETRANGE("Panel Code", Panel.Code);
                                                                             IF (lTile.FINDSET()) THEN BEGIN
                                                                               REPEAT
                                                                                 Tile := lTile;
                                                                                 Tile.Sequence := lTile.GetSequence();
                                                                                 Tile."Tile Group ID" := lTile.GetTileGroupId();
                                                                                 Tile.INSERT();

                                                                                 //insert empty tile
                                                                                 IF (NOT(TileGroup.GET(Tile."Panel Code", Tile."Tile Group ID"))) THEN BEGIN
                                                                                   TileGroup.INIT();
                                                                                   TileGroup."Panel Code" := Tile."Panel Code";
                                                                                   TileGroup.ID := Tile."Tile Group ID";
                                                                                   TileGroup.Text := txtEmptyTile;
                                                                                   TileGroup.INSERT();
                                                                                 END;

                                                                               UNTIL (lTile.NEXT() = 0);
                                                                             END;

                                                                             //collect panel menus
                                                                             BuildMenu(Panel."Menu Code", '#' + Panel."Control Name");
                                                                             BuildMenu(Panel."Tile Menu Code", '.tile');
                                                                             BuildMenu(Panel."Link Menu Code", '.' + link_class);

                                                                             //data efects
                                                                             tile_data_effect := '';
                                                                             CASE (Panel."Tile Animation Type") OF
                                                                               Panel."Tile Animation Type"::Fade,
                                                                               Panel."Tile Animation Type"::"Random Segmented Fade",
                                                                               Panel."Tile Animation Type"::"Segmented Fade",
                                                                               Panel."Tile Animation Type"::Default,
                                                                               Panel."Tile Animation Type"::"Scroll Down":
                                                                                 tile_data_effect := 'slideDown';
                                                                               Panel."Tile Animation Type"::"Scroll Top":
                                                                                 tile_data_effect := 'slideUp';
                                                                               Panel."Tile Animation Type"::"Scroll Left":
                                                                                 tile_data_effect := 'slideLeft';
                                                                               Panel."Tile Animation Type"::"Scroll Right":
                                                                                 tile_data_effect := 'slideRight';
                                                                             END;

                                                                             //global panel settings
                                                                             gs_tileSize := Panel."Tile Size";
                                                                             IF (gs_tileSize = 0) THEN
                                                                               gs_tileSize := 120;
                                                                             gs_tileMargin := Panel."Space Between Tiles";
                                                                             gs_tileHalfSize := (gs_tileSize / 2) - (gs_tileMargin / 2);
                                                                             gs_tileDoubleSize := (gs_tileSize * 2) + gs_tileMargin;
                                                                             gs_tileTripleSize := gs_tileSize * 3 + gs_tileMargin * 2;
                                                                             gs_tileQuadroSize := gs_tileSize * 4 + gs_tileMargin * 3;

                                                                             gs_tileIconSize := 56;
                                                                             gs_tileIconFontSize := 48;

                                                                             //gs_panelTextStyle := Panel."Text Style";
                                                                             //gs_panelTextStyle :=

                                                                             //tilearea_class := 'tile-area tile-area-dark';
                                                                             tilegroup_class := 'tile-group';
                                                                             tile_data_click := 'transform';
                                                                             //!!!tile_status_class := 'tile-status';
                                                                             //!!!frame_status_class := tile_status_class;

                                                                             //!!!tile_info_class := 'text-right padding10 ntp';
                                                                             //!!!tile_info_text_class := 'fg-white no-margin';

                                                                             //!!!frame_info_class := tile_info_class;
                                                                             //!!!frame_info_text_class := tile_info_text_class;

                                                                             panel_style := '';
                                                                             IF (Panel.Margin <> '') THEN
                                                                               panel_style := panel_style + Format4Sizes('margin', Panel.Margin);
                                                                             IF (Panel.Padding <> '') THEN
                                                                               panel_style := panel_style + Format4Sizes('padding', Panel.Padding);

                                                                             tilegroup_title_style := 'padding: 2px; margin: 0;';
                                                                             IF (Panel."Group Header Colour Code" <> '') THEN
                                                                               ColourText := SystemColor.HtmlColourName(Panel."Group Header Colour Code");
                                                                             IF (ColourText <> '') THEN
                                                                               tilegroup_title_style := tilegroup_title_style + 'color: ' + ColourText + ';';
                                                                             IF (Panel."Group Header Font Size" <> 0) THEN
                                                                               tilegroup_title_style := tilegroup_title_style + 'font-size: ' + FormatTextSize(Panel."Group Header Font Size") + ';';
                                                                             IF (Panel."Group Header Font Style" <> 0) THEN
                                                                               tilegroup_title_style := tilegroup_title_style + FormatTextStyle(Panel."Group Header Font Style");

                                                                             IF (Panel."Tile Padding" = '') THEN
                                                                               Panel."Tile Padding" := '0,0,0,0';

                                                                             IF (Panel."Update Caption") THEN
                                                                               script.ADDTEXT('UpdateSubpageCaption(''' + ConvertTextToJSText(Panel.Caption) + ''');');

                                                                             IF ((Panel."Maximum Height" > 0) OR (Panel."Minimum Height" > 0) OR (Panel."Preferred Height" > 0)) THEN BEGIN
                                                                               script.ADDTEXT('if (window.frameElement != null) {');

                                                                               IF (Panel."Minimum Height" > 0) THEN
                                                                                 script.ADDTEXT('window.frameElement.style.minHeight = '''  + FormatSize(Panel."Minimum Height") + ''';')
                                                                               ELSE IF (Panel."Preferred Height" > 0) THEN
                                                                                 script.ADDTEXT('window.frameElement.style.minHeight = '''  + FormatSize(Panel."Preferred Height") + ''';');

                                                                               IF (Panel."Preferred Height" > 0) THEN
                                                                                 script.ADDTEXT('window.frameElement.style.height = '''  + FormatSize(Panel."Preferred Height") + ''';');

                                                                               IF (Panel."Maximum Height" > 0) THEN
                                                                                 script.ADDTEXT('window.frameElement.style.maxHeight = '''  + FormatSize(Panel."Maximum Height") + ''';');

                                                                               script.ADDTEXT('}');
                                                                             END;
                                                                           END;
                                                                            }

    { [{0D9A1A63-CD4F-4AC4-BA66-C54BC068A0BB}];2 ;id                  ;Attribute;Field  ;
                                                  DataType=Text;
                                                  SourceField=Panel::Control Name }

    { [{387BD712-C333-4495-929D-0D718381C94E}];2 ;class               ;Attribute;Text   ;
                                                  VariableName=panel_class }

    { [{001514E5-3EF3-4A3C-BE41-2F6F6D39C074}];2 ;style               ;Attribute;Text   ;
                                                  VariableName=panel_style;
                                                  Occurrence=Optional;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 IF (panel_style = '') THEN
                                                                                   currXMLport.SKIP();
                                                                               END;
                                                                                }

    { [{4AE9241F-85E7-4D7E-AEC2-AA0C98574A76}];2 ;div                 ;Element ;Text    ;
                                                  VariableName=tilepanel }

    { [{0D2E7BCA-94BA-4BD0-B755-6169AB1FF612}];3 ;style               ;Attribute;Text   ;
                                                  VariableName=tilepanel_style }

    { [{52F9CCC0-9D40-495A-95C8-88AC62109B06}];3 ;div                 ;Element ;Text    ;
                                                  VariableName=tilearea }

    { [{10BC2C4F-C8A8-4D4F-8C1E-58DD3FBCA4E7}];4 ;class               ;Attribute;Text   ;
                                                  VariableName=tilearea_class }

    { [{898ADCC1-4915-4CED-B728-6CA284401015}];4 ;div                 ;Element ;Table   ;
                                                  VariableName=TileGroup;
                                                  SourceTable=Table9062366;
                                                  SourceTableView=SORTING(Field1,Field7,Field3)
                                                                  WHERE(Field6=CONST(No));
                                                  LinkFields=Field1=FIELD(Field1);
                                                  LinkTable=Panel;
                                                  Temporary=Yes;
                                                  MinOccurs=Zero;
                                                  Export::OnAfterGetRecord=BEGIN
                                                                             tilegroup_style := 'padding: 0;';
                                                                             IF (first_tile_group) THEN
                                                                               tilegroup_style := tilegroup_style + STRSUBSTNO('margin: 0 %1 0 0;', FormatSize(gs_tileMargin))
                                                                             ELSE
                                                                               tilegroup_style := tilegroup_style + STRSUBSTNO('margin: 0 %1 0 0;', FormatSize(Panel."Space Between Groups"));

                                                                             first_tile_group := FALSE;
                                                                           END;
                                                                            }

    { [{87696C00-4C7F-4019-B873-29FA74B5D11D}];5 ;id                  ;Attribute;Field  ;
                                                  DataType=Text;
                                                  SourceField=TileGroup::Control Name }

    { [{D9EDA4FD-B093-453B-9A97-71D62F37194D}];5 ;class               ;Attribute;Text   ;
                                                  VariableName=tilegroup_class }

    { [{41D35F3F-F98C-491D-A219-370B633DF9CC}];5 ;style               ;Attribute;Text   ;
                                                  VariableName=tilegroup_style;
                                                  Occurrence=Optional;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 IF (tilegroup_style = '') THEN
                                                                                   currXMLport.SKIP();
                                                                               END;
                                                                                }

    { [{6127C249-0B64-4A38-A4E6-D9653C39F502}];5 ;div                 ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=TileGroup::Text;
                                                  MinOccurs=Zero;
                                                  Export::OnBeforePassField=BEGIN
                                                                              IF (NOT(Panel."Show Group Headers")) THEN
                                                                                currXMLport.SKIP();

                                                                              tilegroup_title_class := 'tile-group-title';
                                                                            END;
                                                                             }

    { [{D7E7454E-ABE7-4D37-82BD-683E789DDE70}];6 ;class               ;Attribute;Text   ;
                                                  VariableName=tilegroup_title_class }

    { [{D03EE5A4-B2A3-4338-A83E-BA14A2518D3A}];6 ;style               ;Attribute;Text   ;
                                                  VariableName=tilegroup_title_style }

    { [{2713EBDC-EDAD-42BD-B38B-5AFAF00828D2}];5 ;a                   ;Element ;Table   ;
                                                  VariableName=Tile;
                                                  SourceTable=Table9062367;
                                                  SourceTableView=SORTING(Field1,Field4,Field16,Field3)
                                                                  WHERE(Field19=CONST(No));
                                                  LinkFields=Field1=FIELD(Field1),
                                                             Field4=FIELD(Field3);
                                                  LinkTable=TileGroup;
                                                  Temporary=Yes;
                                                  MinOccurs=Zero;
                                                  Export::OnAfterGetRecord=VAR
                                                                             InputStream@1000000000 : InStream;
                                                                           BEGIN
                                                                             CLEAR(tile_content_style);
                                                                             PanelRequest.SetTileProperties(Tile);

                                                                             g_currentTileHeight := 0;
                                                                             tile_style := '';
                                                                             CASE (Tile.Size) OF
                                                                               Tile.Size::" ":
                                                                                 BEGIN
                                                                                   tile_class := 'tile';
                                                                                   g_currentTileHeight := gs_tileSize;
                                                                                   tile_style := STRSUBSTNO('width: %1;height: %2;margin: 0 %3 %3 0;', FormatSize(gs_tileSize), FormatSize(g_currentTileHeight), FormatSize(gs_tileMargin));
                                                                                 END;
                                                                               Tile.Size::Large:
                                                                                 BEGIN
                                                                                   tile_class := 'tile double double-vertical';
                                                                                   g_currentTileHeight := gs_tileDoubleSize;
                                                                                   tile_style := STRSUBSTNO('width: %1;height: %2;margin: 0 %3 %3 0;', FormatSize(gs_tileDoubleSize), FormatSize(g_currentTileHeight), FormatSize(gs_tileMargin));
                                                                                 END;
                                                                               Tile.Size::Medium:
                                                                                 BEGIN
                                                                                   tile_class := 'tile';
                                                                                   g_currentTileHeight := gs_tileSize;
                                                                                   tile_style := STRSUBSTNO('width: %1;height: %2;margin: 0 %3 %3 0;', FormatSize(gs_tileSize), FormatSize(g_currentTileHeight), FormatSize(gs_tileMargin));
                                                                                 END;
                                                                               Tile.Size::Small:
                                                                                 BEGIN
                                                                                   tile_class := 'tile half';
                                                                                   g_currentTileHeight := gs_tileHalfSize;
                                                                                   tile_style := STRSUBSTNO('width: %1;height: %2;margin: 0 %3 %3 0;', FormatSize(gs_tileHalfSize), FormatSize(g_currentTileHeight), FormatSize(gs_tileMargin / 2));
                                                                                 END;
                                                                               Tile.Size::Wide:
                                                                                 BEGIN
                                                                                   tile_class := 'tile double';
                                                                                   g_currentTileHeight := gs_tileSize;
                                                                                   tile_style := STRSUBSTNO('width: %1;height: %2;margin: 0 %3 %3 0;', FormatSize(gs_tileDoubleSize), FormatSize(g_currentTileHeight), FormatSize(gs_tileMargin));
                                                                                 END;
                                                                             END;

                                                                             //update tile settings
                                                                             CASE (Tile.Size) OF
                                                                               Tile.Size::" ",
                                                                               Tile.Size::Medium,
                                                                               Tile.Size::Wide:
                                                                                 BEGIN
                                                                                   IF (Tile."Text Font Size" = 0) THEN
                                                                                     Tile."Text Font Size" := GetValue(Panel."Tile Text Font Size", Panel."Text Font Size");
                                                                                   IF (Tile."Text Font Style" = 0) THEN
                                                                                     Tile."Text Font Style" := GetIntValue(Panel."Tile Text Font Style", Panel."Text Font Style");
                                                                                   IF (Tile."Text Colour Code" = '') THEN
                                                                                     Tile."Text Colour Code" := GetText(Panel."Tile Text Colour Code", Panel."Text Colour Code");
                                                                                   IF (Tile."Info Font Size" = 0) THEN
                                                                                     Tile."Info Font Size" := Panel."Tile Info Font Size";
                                                                                   IF (Tile."Info Font Style" = 0) THEN
                                                                                     Tile."Info Font Style" := Panel."Tile Info Font Style";
                                                                                   IF (Tile."Info Colour Code" = '') THEN
                                                                                     Tile."Info Colour Code" := Panel."Tile Info Colour Code"
                                                                                 END;
                                                                               Tile.Size::Large:
                                                                                 BEGIN
                                                                                   IF (Tile."Text Font Size" = 0) THEN
                                                                                     Tile."Text Font Size" := GetValue(Panel."Large Tile Text Font Size", Panel."Text Font Size");
                                                                                   IF (Tile."Text Font Style" = 0) THEN
                                                                                     Tile."Text Font Style" := GetIntValue(Panel."Large Tile Text Font Style", Panel."Text Font Style");
                                                                                   IF (Tile."Text Colour Code" = '') THEN
                                                                                     Tile."Text Colour Code" := GetText(Panel."Large Tile Text Colour Code", Panel."Text Colour Code");
                                                                                   IF (Tile."Info Font Size" = 0) THEN
                                                                                     Tile."Info Font Size" := Panel."Large Tile Info Font Size";
                                                                                   IF (Tile."Info Font Style" = 0) THEN
                                                                                     Tile."Info Font Style" := Panel."Large Tile Info Font Style";
                                                                                   IF (Tile."Info Colour Code" = '') THEN
                                                                                     Tile."Info Colour Code" := Panel."Large Tile Info Colour Code";
                                                                                 END;
                                                                               Tile.Size::Small:
                                                                                 BEGIN
                                                                                   IF (Tile."Text Font Size" = 0) THEN
                                                                                     Tile."Text Font Size" := GetValue(Panel."Small Tile Text Font Size", Panel."Text Font Size");
                                                                                   IF (Tile."Text Font Style" = 0) THEN
                                                                                     Tile."Text Font Style" := GetIntValue(Panel."Small Tile Text Font Style", Panel."Text Font Style");
                                                                                   IF (Tile."Text Colour Code" = '') THEN
                                                                                     Tile."Text Colour Code" := GetText(Panel."Small Tile Text Colour Code", Panel."Text Colour Code");
                                                                                   IF (Tile."Info Font Size" = 0) THEN
                                                                                     Tile."Info Font Size" := Panel."Small Tile Info Font Size";
                                                                                   IF (Tile."Info Font Style" = 0) THEN
                                                                                     Tile."Info Font Style" := Panel."Small Tile Info Font Style";
                                                                                   IF (Tile."Info Colour Code" = '') THEN
                                                                                     Tile."Info Colour Code" := Panel."Small Tile Info Colour Code";
                                                                                 END;
                                                                             END;

                                                                             DatabaseTile.GET(Tile."Panel Code", Tile.ID);
                                                                             DatabaseTile.CALCFIELDS(Image);
                                                                             tile_has_image := DatabaseTile.Image.HASVALUE;
                                                                             tile_content_class := 'tile-content';
                                                                             CLEAR(tile_content_style);
                                                                             IF (tile_has_image) THEN BEGIN
                                                                               DatabaseTile.Image.CREATEINSTREAM(InputStream);
                                                                               MemoryStream := MemoryStream.MemoryStream();
                                                                               COPYSTREAM(MemoryStream, InputStream);

                                                                               tile_content_style.ADDTEXT('background-repeat:no-repeat;background-position: center center;background-image: url(''');
                                                                               tile_content_style.ADDTEXT('data:image/jpg;base64,');
                                                                               tile_content_style.ADDTEXT(Convert.ToBase64String(MemoryStream.GetBuffer()));
                                                                               tile_content_style.ADDTEXT(''');');

                                                                               MemoryStream.Close();
                                                                               MemoryStream.Dispose();
                                                                               CLEAR(MemoryStream);
                                                                             END;

                                                                             //tile_onclick := 'javascript:ClickEvent(''tile,' + FORMAT(Tile.ID, 0, 9) + ''')';
                                                                             tile_href := 'javascript:void(0)';
                                                                             tile_onclick := 'TileClick(''' + Tile."Control Name" + ''', ''' + FORMAT(Tile.ID, 0, 9) + ''');';

                                                                             IF (Tile."Background Colour Code" <> '') THEN BEGIN
                                                                               ColourText := SystemColor.HtmlColourName(Tile."Background Colour Code");
                                                                               IF (ColourText <> '') THEN
                                                                                 tile_style := tile_style + 'background-color: ' + ColourText + ';';
                                                                             END;

                                                                             //status style
                                                                             tile_status_container_style := 'margin:0;padding:0;z-index:10;position:absolute;display:table;';
                                                                             tile_status_container_style := tile_status_container_style + 'height:' + FormatSize(g_currentTileHeight) + ';';
                                                                             tile_status_style := 'margin: 0;display:table-cell;';
                                                                             ColourText := '';
                                                                             IF (Tile."Text Colour Code" <> '') THEN
                                                                               ColourText := SystemColor.HtmlColourName(Tile."Text Colour Code");
                                                                             IF (ColourText = '') THEN
                                                                               ColourText := '#ffffff';
                                                                             tile_status_style := tile_status_style + 'color: ' + ColourText + ';';
                                                                             IF (Tile."Text Font Size" <> 0) THEN
                                                                               tile_status_style := tile_status_style + 'font-size: ' + FormatTextSize(Tile."Text Font Size") + ';';
                                                                             IF (Tile."Text Font Style" <> 0) THEN
                                                                               tile_status_style := tile_status_style + FormatTextStyle(Tile."Text Font Style");
                                                                             tile_status_style := tile_status_style + FormatTextAlignment(Panel."Tile Text Alignment");
                                                                             IF (Panel."Tile Padding" <> '') THEN
                                                                               tile_status_style := tile_status_style + Format4Sizes('padding', Panel."Tile Padding");

                                                                             //info style
                                                                             tile_info_container_style := 'margin:0;padding:0;z-index:99;position:absolute;display:table;';
                                                                             tile_info_container_style := tile_info_container_style + 'height: ' + FormatSize(g_currentTileHeight) + ';';
                                                                             tile_info_style := 'margin: 0;display:table-cell;';
                                                                             ColourText := '';
                                                                             IF (Tile."Info Colour Code" <> '') THEN
                                                                               ColourText := SystemColor.HtmlColourName(Tile."Info Colour Code");
                                                                             IF (ColourText = '') THEN
                                                                               ColourText := '#ffffff;';
                                                                             tile_info_style := tile_info_style + 'color: ' + ColourText + ';';
                                                                             IF (Tile."Info Font Size" <> 0) THEN
                                                                               tile_info_style := tile_info_style + 'font-size: ' + FormatTextSize(Tile."Info Font Size") + ';';
                                                                             IF (Tile."Info Font Style" <> 0) THEN
                                                                               tile_info_style := tile_info_style + FormatTextStyle(Tile."Info Font Style");
                                                                             tile_info_style := tile_info_style + FormatTextAlignment(Panel."Tile Info Alignment");
                                                                             IF (Panel."Tile Padding" <> '') THEN
                                                                               tile_info_style := tile_info_style + Format4Sizes('padding', Panel."Tile Padding");

                                                                             Frame.RESET();
                                                                             Frame.SETRANGE("Panel Code", Tile."Panel Code");
                                                                             Frame.SETRANGE("Tile ID", Tile.ID);
                                                                             tile_has_frames := NOT(Frame.ISEMPTY);

                                                                             //tile_has_frames := TRUE;
                                                                           END;
                                                                            }

    { [{23F63475-5AD6-4CBC-9171-5BE607A319C7}];6 ;id                  ;Attribute;Field  ;
                                                  DataType=Text;
                                                  SourceField=Tile::Control Name }

    { [{26C7E464-B95A-4284-8D22-CCEA8200BFBA}];6 ;class               ;Attribute;Text   ;
                                                  VariableName=tile_class }

    { [{B9BBD9F4-F80E-46BC-8C19-88CCDB70DCDD}];6 ;style               ;Attribute;Text   ;
                                                  VariableName=tile_style;
                                                  Occurrence=Optional;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 IF (tile_style = '') THEN
                                                                                   currXMLport.SKIP();
                                                                               END;
                                                                                }

    { [{B4C5EFE0-53AD-434B-847B-22D260BE51A1}];6 ;data-click          ;Attribute;Text   ;
                                                  VariableName=tile_data_click }

    { [{C3D46BA0-5E09-48BF-92D5-219336566690}];6 ;href                ;Attribute;Text   ;
                                                  VariableName=tile_href }

    { [{A26D6C60-DB39-4676-9099-2FB175E7F9B5}];6 ;onclick             ;Attribute;Text   ;
                                                  VariableName=tile_onclick }

    { [{0FA8C9DF-7459-4DE9-BAFC-A9CBF5426598}];6 ;data-role           ;Attribute;Text   ;
                                                  VariableName=tile_data_role;
                                                  Occurrence=Optional;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 IF (NOT(tile_has_frames)) THEN
                                                                                   currXMLport.SKIP()
                                                                                 ELSE
                                                                                   tile_data_role := 'live-tile';
                                                                               END;
                                                                                }

    { [{301140F9-5C30-4C50-85AC-49F5F2570B3D}];6 ;data-effect         ;Attribute;Text   ;
                                                  VariableName=tile_data_effect;
                                                  Occurrence=Optional;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 IF (NOT(tile_has_frames)) THEN
                                                                                   currXMLport.SKIP();
                                                                               END;
                                                                                }

    { [{04783DAE-1770-4C36-B6BD-CE120BE524DE}];6 ;div                 ;Element ;Text    ;
                                                  VariableName=tile_content }

    { [{77A46039-AD5C-4944-8490-86322174DA36}];7 ;class               ;Attribute;Text   ;
                                                  VariableName=tile_content_class }

    { [{1D97EEBB-5E23-4F78-A951-BF6CCB30B3DE}];7 ;style               ;Attribute;Text   ;
                                                  VariableName=tile_content_style;
                                                  TextType=BigText }

    { [{EDCC0161-8B4C-4C48-B90A-7998D80EA1F8}];7 ;div                 ;Element ;Text    ;
                                                  VariableName=tile_info_container }

    { [{69CD6D0F-7E1A-4936-93C9-F43717649C10}];8 ;style               ;Attribute;Text   ;
                                                  VariableName=tile_info_container_style }

    { [{30043E7C-06F2-4DC5-881F-B0C2512E791F}];8 ;div                 ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=Tile::Info;
                                                  MinOccurs=Zero;
                                                  MaxOccurs=Once;
                                                  Export::OnBeforePassField=BEGIN
                                                                              IF (Tile.Info = '') OR (NOT(Tile."Show Info")) THEN
                                                                                currXMLport.SKIP();
                                                                            END;
                                                                             }

    { [{34D792A5-8842-471B-81A3-85F7738C8381}];9 ;style               ;Attribute;Text   ;
                                                  VariableName=tile_info_style }

    { [{57382DBC-8013-4644-B886-81D45BEF7095}];7 ;div                 ;Element ;Text    ;
                                                  VariableName=tile_status_container }

    { [{C37B8750-DD62-4578-B013-6F574BEEC5F9}];8 ;style               ;Attribute;Text   ;
                                                  VariableName=tile_status_container_style }

    { [{2B563771-4A4D-4863-ABA2-E36A7BF294F1}];8 ;div                 ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=Tile::Text;
                                                  MinOccurs=Zero;
                                                  Export::OnBeforePassField=BEGIN
                                                                              IF ((Tile.Text = '') OR (NOT(Tile."Show Text"))) THEN
                                                                                currXMLport.SKIP();
                                                                            END;
                                                                             }

    { [{057B380C-E711-4002-9E37-01D7F3C8B4AA}];9 ;style               ;Attribute;Text   ;
                                                  VariableName=tile_status_style }

    { [{A8655088-EF98-4BDC-AB8E-D8ED56174774}];6 ;div                 ;Element ;Table   ;
                                                  VariableName=TileFrame;
                                                  SourceTable=Table9062368;
                                                  SourceTableView=SORTING(Field1,Field3,Field10,Field4)
                                                                  WHERE(Field14=CONST(No));
                                                  LinkFields=Field1=FIELD(Field1),
                                                             Field3=FIELD(Field3);
                                                  LinkTable=Tile;
                                                  MinOccurs=Zero;
                                                  Export::OnAfterGetRecord=VAR
                                                                             InputStream@1000000000 : InStream;
                                                                           BEGIN
                                                                             IF (NOT(Panel."Animate Tiles")) THEN
                                                                               currXMLport.SKIP();

                                                                             //text
                                                                             IF (TileFrame.Info <> '') THEN
                                                                               frame_info_text := TileFrame.Info
                                                                             ELSE
                                                                               frame_info_text := Tile.Info;
                                                                             IF (TileFrame.Text <> '') THEN
                                                                               frame_status_text := TileFrame.Text
                                                                             ELSE
                                                                               frame_status_text := Tile.Text;

                                                                             //image and style
                                                                             TileFrame.CALCFIELDS(Image);
                                                                             frame_has_image := TileFrame.Image.HASVALUE;
                                                                             frame_class := 'tile-content';
                                                                             CLEAR(frame_style);

                                                                             IF (frame_has_image) THEN BEGIN
                                                                               TileFrame.Image.CREATEINSTREAM(InputStream);
                                                                               MemoryStream := MemoryStream.MemoryStream();
                                                                               COPYSTREAM(MemoryStream, InputStream);

                                                                               frame_style.ADDTEXT('background-repeat:no-repeat;background-position: center center;background-image: url(''');
                                                                               frame_style.ADDTEXT('data:image/jpg;base64,');
                                                                               frame_style.ADDTEXT(Convert.ToBase64String(MemoryStream.GetBuffer()));
                                                                               frame_style.ADDTEXT(''');');

                                                                               MemoryStream.Close();
                                                                               MemoryStream.Dispose();
                                                                               CLEAR(MemoryStream);
                                                                             END;

                                                                             //status style
                                                                             frame_status_container_style := 'margin:0;padding:0;z-index:10;position:absolute;display:table;';
                                                                             frame_status_container_style := frame_status_container_style + 'height:' + FormatSize(g_currentTileHeight) + ';';
                                                                             frame_status_style := 'margin:0;display:table-cell;';
                                                                             ColourText := '';
                                                                             IF (TileFrame."Text Colour Code" <> '') THEN
                                                                               ColourText := SystemColor.HtmlColourName(TileFrame."Text Colour Code")
                                                                             ELSE IF (Tile."Text Colour Code" <> '') THEN
                                                                               ColourText := SystemColor.HtmlColourName(Tile."Text Colour Code");
                                                                             IF (ColourText = '') THEN
                                                                               ColourText := '#ffffff';
                                                                             frame_status_style := frame_status_style + 'color: ' + ColourText + ';';

                                                                             g_textSize := GetValue(TileFrame."Text Font Size", Tile."Text Font Size");
                                                                             IF (g_textSize <> 0) THEN
                                                                               frame_status_style := frame_status_style + 'font-size: ' + FormatTextSize(g_textSize) + ';';
                                                                             g_textStyle := GetIntValue(TileFrame."Text Font Style", Tile."Text Font Style");
                                                                             IF (g_textStyle <> 0) THEN
                                                                               frame_status_style := frame_status_style + FormatTextStyle(g_textStyle);
                                                                             frame_status_style := frame_status_style + FormatTextAlignment(Panel."Tile Text Alignment");
                                                                             IF (Panel."Tile Padding" <> '') THEN
                                                                               frame_status_style := frame_status_style + Format4Sizes('padding', Panel."Tile Padding");

                                                                             //info style
                                                                             frame_info_container_style := 'margin:0;padding:0;z-index:99;position:absolute;display:table;';
                                                                             frame_info_container_style := frame_info_container_style + 'height:' + FormatSize(g_currentTileHeight) + ';';
                                                                             frame_info_style := 'margin:0;display:table-cell;';
                                                                             ColourText := '';
                                                                             IF (TileFrame."Info Colour Code" <> '') THEN
                                                                               ColourText := SystemColor.HtmlColourName(TileFrame."Info Colour Code")
                                                                             ELSE IF (Tile."Info Colour Code" <> '') THEN
                                                                               ColourText := SystemColor.HtmlColourName(Tile."Info Colour Code");
                                                                             IF (ColourText = '') THEN
                                                                               ColourText := '#ffffff;';
                                                                             frame_info_style := frame_info_style + 'color: ' + ColourText + ';';

                                                                             g_textSize := GetValue(TileFrame."Info Font Size", Tile."Info Font Size");
                                                                             IF (g_textSize <> 0) THEN
                                                                               frame_info_style := frame_info_style + 'font-size: ' + FormatTextSize(g_textSize) + ';';
                                                                             g_textStyle := GetIntValue(TileFrame."Info Font Style", Tile."Info Font Style");
                                                                             IF (g_textStyle <> 0) THEN
                                                                               frame_info_style := frame_info_style + FormatTextStyle(g_textStyle);
                                                                             frame_info_style := frame_info_style + FormatTextAlignment(Panel."Tile Info Alignment");
                                                                             IF (Panel."Tile Padding" <> '') THEN
                                                                               frame_info_style := frame_info_style + Format4Sizes('padding', Panel."Tile Padding");
                                                                           END;
                                                                            }

    { [{8E24C859-4CF7-448D-A3AE-FB5B3B407699}];7 ;class               ;Attribute;Text   ;
                                                  VariableName=frame_class }

    { [{65B60095-95C0-4E65-9A67-390DC5EB7FB1}];7 ;style               ;Attribute;Text   ;
                                                  VariableName=frame_style;
                                                  TextType=BigText }

    { [{6811EBED-6D03-4602-ACA1-39A82DA0EBFE}];7 ;div                 ;Element ;Text    ;
                                                  VariableName=frame_info_container;
                                                  MinOccurs=Zero;
                                                  MaxOccurs=Once;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 IF ((frame_info_text = '') OR (NOT(Tile."Show Info"))) THEN
                                                                                   currXMLport.SKIP();
                                                                               END;
                                                                                }

    { [{05F06665-7D53-4455-A9D3-16C1CDCD6B8D}];8 ;style               ;Attribute;Text   ;
                                                  VariableName=frame_info_container_style;
                                                  Occurrence=Optional }

    { [{2F2D5F7B-0DA4-47E6-A853-AB253FCEBBE3}];8 ;div                 ;Element ;Text    ;
                                                  VariableName=frame_info_text;
                                                  DataType=Text;
                                                  MinOccurs=Zero }

    { [{A9E442E1-04EC-43F3-9A66-F715B0ACC141}];9 ;style               ;Attribute;Text   ;
                                                  VariableName=frame_info_style }

    { [{5DAFBC45-F4A3-4C3F-9052-6F4B418DBF13}];7 ;div                 ;Element ;Text    ;
                                                  VariableName=frame_status_container }

    { [{F4D970A4-2CA2-4922-9D09-B0CE5424F6B1}];8 ;style               ;Attribute;Text   ;
                                                  VariableName=frame_status_container_style }

    { [{981EC943-EDEB-4272-9845-09AED5EEE970}];8 ;div                 ;Element ;Text    ;
                                                  VariableName=frame_status_text;
                                                  DataType=Text;
                                                  MinOccurs=Zero;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 IF ((frame_status_text = '') OR (NOT(Tile."Show Text"))) THEN
                                                                                   currXMLport.SKIP();
                                                                               END;
                                                                                }

    { [{11126EFB-D7C0-4975-866C-F8A250980F6B}];9 ;style               ;Attribute;Text   ;
                                                  VariableName=frame_status_style }

    { [{36E64192-DC2F-4C82-B4F6-AB1A6B99EEBF}];2 ;div                 ;Element ;Text    ;
                                                  VariableName=menupanel;
                                                  MinOccurs=Zero;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 IF (NOT(Panel."Show Links")) THEN
                                                                                   currXMLport.SKIP();
                                                                               END;
                                                                                }

    { [{B3185620-0E2F-4C34-BA5C-BF6B1BE12B9B}];3 ;style               ;Attribute;Text   ;
                                                  VariableName=menupanel_style;
                                                  Occurrence=Optional;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 IF (menupanel_style = '') THEN
                                                                                   currXMLport.SKIP();
                                                                               END;
                                                                                }

    { [{3F6E3A0C-0CBB-4F11-9425-AF85ED0A281B}];3 ;nav                 ;Element ;Text    ;
                                                  VariableName=nav }

    { [{D2D59178-CB74-4A31-95DA-EB00B56A0AC1}];4 ;class               ;Attribute;Text   ;
                                                  VariableName=nav_class }

    { [{FB9ACD53-087C-412F-9D81-78EB460F6204}];4 ;ul                  ;Element ;Text    ;
                                                  VariableName=nav_ul }

    { [{F2C686D2-CEC9-421B-8141-91E8C583CD7C}];5 ;style               ;Attribute;Text   ;
                                                  VariableName=nav_ul_style;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 nav_ul_style := 'padding: 0;margin:0;';
                                                                               END;
                                                                                }

    { [{BBF2F725-8E70-463B-87A9-2E7E5EF5A577}];5 ;li                  ;Element ;Table   ;
                                                  VariableName=PanelLink;
                                                  SourceTable=Table9062364;
                                                  SourceTableView=SORTING(Field1,Field8,Field2)
                                                                  WHERE(Field13=CONST(No));
                                                  LinkFields=Field1=FIELD(Field1);
                                                  LinkTable=Panel;
                                                  Export::OnAfterGetRecord=BEGIN
                                                                             link_style := '';

                                                                             IF (PanelLink."Font Size" = 0) THEN
                                                                               PanelLink."Font Size" := Panel."Link Font Size";
                                                                             IF (PanelLink."Font Style" = 0) THEN
                                                                               PanelLink."Font Style" := Panel."Link Font Style";
                                                                             IF (PanelLink."Colour Code" = '') THEN
                                                                               PanelLink."Colour Code" := Panel."Link Colour Code";

                                                                             IF (PanelLink."Colour Code" <> '') THEN BEGIN
                                                                               ColourText := SystemColor.HtmlColourName(PanelLink."Colour Code");
                                                                               IF (ColourText <> '') THEN
                                                                                 link_style := link_style + 'color: ' + ColourText + ';';
                                                                             END;
                                                                             IF (PanelLink."Font Size" <> 0) THEN
                                                                               link_style := link_style + 'font-size: ' + FormatTextSize(PanelLink."Font Size") + ';';
                                                                             IF (PanelLink."Font Style" <> 0) THEN
                                                                               link_style := link_style + FormatTextStyle(PanelLink."Font Style");

                                                                             IF (Panel."Link Margin" <> '') THEN
                                                                               link_style := link_style + Format4Sizes('margin', Panel."Link Margin");
                                                                             IF (Panel."Link Padding" <> '') THEN
                                                                               link_style := link_style + Format4Sizes('padding', Panel."Link Padding");

                                                                             //link_href := 'javascript:ClickEvent(''link,' + FORMAT(PanelLink.ID, 0, 9) + ''')';
                                                                             link_href := 'javascript:void(0)';
                                                                             link_onclick := 'InvokeEvent(''' + PanelLink."Control Name" + ''',''link'',''' + FORMAT(PanelLink.ID, 0, 9) + ''');';
                                                                           END;
                                                                            }

    { [{0AFC0C3F-2E95-4062-A846-85AC7644F3B7}];6 ;style               ;Attribute;Text   ;
                                                  VariableName=panelLink_style;
                                                  Occurrence=Optional;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 IF (panelLink_style = '') THEN
                                                                                   currXMLport.SKIP();
                                                                               END;
                                                                                }

    { [{8D3DEEDF-B722-4FF7-B565-0EFC43048CFE}];6 ;a                   ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=PanelLink::Text }

    { [{B24313AB-ED96-4027-9417-C771016E698C}];7 ;id                  ;Attribute;Field  ;
                                                  DataType=Text;
                                                  SourceField=PanelLink::Control Name }

    { [{1FF8F774-8B47-4FB4-9D96-80F99C248C4E}];7 ;class               ;Attribute;Text   ;
                                                  VariableName=link_class }

    { [{F6AFA788-C5E2-46EC-8931-5260299833CC}];7 ;href                ;Attribute;Text   ;
                                                  VariableName=link_href }

    { [{150D8FF4-A90D-4B24-84FA-1C5F71A1EE5E}];7 ;onclick             ;Attribute;Text   ;
                                                  VariableName=link_onclick }

    { [{8826B17D-4A45-4AEA-BE57-978705886B8E}];7 ;style               ;Attribute;Text   ;
                                                  VariableName=link_style;
                                                  Occurrence=Optional;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 IF (link_style = '') THEN
                                                                                   currXMLport.SKIP();
                                                                               END;
                                                                                }

    { [{E409634C-02E3-40AB-A692-1B117CD2ED2D}];1 ;script              ;Element ;Text    ;
                                                  VariableName=script;
                                                  TextType=BigText;
                                                  MinOccurs=Zero;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 IF (script.LENGTH = 0) THEN
                                                                                   currXMLport.SKIP();
                                                                               END;
                                                                                }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      SystemColor@1000000001 : Record 9062336;
      Frame@1000000008 : Record 9062368;
      DatabaseTile@1000000010 : Record 9062367;
      PanelRequest@1000000000 : Codeunit 9062321;
      Convert@1000000007 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Convert";
      MemoryStream@1000000006 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.MemoryStream";
      ColourText@1000000002 : Text[50];
      tile_has_image@1000000003 : Boolean;
      tile_has_frames@1000000004 : Boolean;
      frame_has_image@1000000005 : Boolean;
      first_tile_group@1000000009 : Boolean;
      gs_tileSize@1000000012 : Decimal;
      gs_tileHalfSize@1000000016 : Decimal;
      gs_tileDoubleSize@1000000017 : Decimal;
      gs_tileTripleSize@1000000018 : Decimal;
      gs_tileQuadroSize@1000000019 : Decimal;
      gs_tileMargin@1000000013 : Decimal;
      gs_tileIconSize@1000000014 : Decimal;
      gs_tileIconFontSize@1000000015 : Decimal;
      g_textSize@1000000020 : Decimal;
      g_textStyle@1000000021 : Integer;
      g_tileTextAlignment@1000000022 : Integer;
      g_tileInfoAlignment@1000000023 : Integer;
      g_currentTileHeight@1000000024 : Decimal;
      txtEmptyTile@1000000011 : TextConst 'ENU=General;ENG=General';

    PROCEDURE BuildMenu@1000000002(MenuCode@1000000000 : Code[20];Selector@1000000003 : Text);
    VAR
      Menu@1000000001 : Record 9062446;
      MenuItem@1000000002 : Record 9062445;
      FirstItem@1000000004 : Boolean;
    BEGIN
      IF (MenuCode = '') THEN
        EXIT;

      MenuItem.RESET();
      MenuItem.SETRANGE("Panel Menu Code", MenuCode);
      MenuItem.SETFILTER("Item Type", '<>%1', MenuItem."Item Type"::" ");
      MenuItem.SETRANGE(Additional, FALSE);
      IF (MenuItem.FINDSET()) THEN BEGIN
        script.ADDTEXT('$.contextMenu({selector: ''' + Selector + ''',');
        script.ADDTEXT('  callback: function (key, options) {');
        script.ADDTEXT('    InvokeEvent(key, ''menu'', key + '','' + options.$trigger.attr(''id''));');
        script.ADDTEXT('  },');
        script.ADDTEXT('  items: {');
        FirstItem := TRUE;
        REPEAT
          IF (NOT(FirstItem)) THEN
            script.ADDTEXT(',');
          FirstItem := FALSE;

          CASE (MenuItem."Item Type") OF
            MenuItem."Item Type"::"Menu Item":
              script.ADDTEXT('"' + MenuItem."Control Name" + '": { name: "' + MenuItem.Text + '" }');
            MenuItem."Item Type"::Separator:
              script.ADDTEXT('"' + MenuItem."Control Name" + '": "---------"');
          END;
        UNTIL (MenuItem.NEXT() = 0);

        MenuItem.SETRANGE(Additional, TRUE);
        IF (MenuItem.FINDSET()) THEN BEGIN
          script.ADDTEXT(',');
          script.ADDTEXT('"mnuItem_Additional": { name: "Additional",');
          script.ADDTEXT('  items: {');
          FirstItem := TRUE;
          REPEAT
            IF (NOT(FirstItem)) THEN
              script.ADDTEXT(',');
            FirstItem := FALSE;
            CASE (MenuItem."Item Type") OF
              MenuItem."Item Type"::"Menu Item":
                script.ADDTEXT('"' + MenuItem."Control Name" + '": { name: "' + MenuItem.Text + '" }');
              MenuItem."Item Type"::Separator:
                script.ADDTEXT('"' + MenuItem."Control Name" + '": "---------"');
            END;
          UNTIL (MenuItem.NEXT() = 0);
          script.ADDTEXT(' }}');
        END;

        script.ADDTEXT('  }');
        script.ADDTEXT('});');
      END;
    END;

    PROCEDURE BuildStyles@1000000000(VAR Style@1000000014 : BigText);
    VAR
      tileSize@1000000015 : Decimal;
      tileMargin@1000000016 : Decimal;
      tileSizeSmall@1000000000 : Decimal;
      tileSizeMeduim@1000000001 : Decimal;
      tileSizeLarge@1000000002 : Decimal;
      tileGroupMargin@1000000003 : Decimal;
      tileGroupSize@1000000004 : Decimal;
      tileGroupDoubleSize@1000000005 : Decimal;
      tileGroupTripleSize@1000000006 : Decimal;
      tileGroupQuadroSize@1000000007 : Decimal;
      tileHalfSize@1000000008 : Decimal;
      tileDoubleSize@1000000009 : Decimal;
      tileTripleSize@1000000010 : Decimal;
      tileQuadroSize@1000000011 : Decimal;
      tileIconSize@1000000012 : Decimal;
      tileIconSizeFont@1000000013 : Decimal;
    BEGIN
      CLEAR(Style);

      //@tileMargin:            10px;
      //@tileSize:              120px;
      //@tilePart:              60px;
      //@tileOutlineSize:       3px;
      //@tileHalfSize:          @tileSize / 2 - @tileMargin / 2;
      //@tileDoubleSize:        @tileSize * 2 + @tileMargin;
      //@tileTripleSize:        @tileSize * 3 + @tileMargin * 2;
      //@tileQuadroSize:        @tileSize * 4 + @tileMargin * 3;
      //@tileGroupMargin:       46px;
      //@tileGroupDoubleSize:   @tileDoubleSize+@tileMargin;
      //@tileGroupTripleSize:   @tileTripleSize+@tileMargin;
      //@tileGroupQuadroSize:   @tileQuadroSize+@tileMargin;

      //initialize variables
      tileSize := 120;
      tileSizeSmall := 80;
      tileMargin  := 10;
      tileSizeMeduim := 20;
      tileSizeLarge := 150;
      tileGroupMargin := 46;
      tileIconSize := 56;
      tileIconSizeFont := 48;

      tileHalfSize := tileSize / 2 - tileMargin / 2;
      tileDoubleSize := tileSize * 2 + tileMargin;
      tileTripleSize := tileSize * 3 + tileMargin * 2;
      tileQuadroSize := tileSize * 4 + tileMargin * 3;

      tileGroupSize := tileSize + tileMargin;
      tileGroupDoubleSize := tileDoubleSize + tileMargin;
      tileGroupTripleSize := tileTripleSize + tileMargin;
      tileGroupQuadroSize := tileQuadroSize + tileMargin;


      //build styles
      Style.ADDTEXT('#tile {');
      Style.ADDTEXT('    .small-size {');
      Style.ADDTEXT('        .square(' + FORMAT(tileSizeSmall) + 'px) !important;');
      Style.ADDTEXT('        margin: 0 (' + FORMAT(tileMargin) + 'px / 2) (' + FORMAT(tileMargin) + 'px / 2) 0 !important;');
      Style.ADDTEXT('    }');
      Style.ADDTEXT('');
      Style.ADDTEXT('    .meduim-size {');
      Style.ADDTEXT('        .square(' + FORMAT(tileSizeMeduim) + 'px) !important;');
      Style.ADDTEXT('        margin: 0 ' + FORMAT(tileMargin) + 'px ' + FORMAT(tileMargin) + 'px 0 !Important;');
      Style.ADDTEXT('    }');
      Style.ADDTEXT('');
      Style.ADDTEXT('    .large-size {');
      Style.ADDTEXT('        .square(' + FORMAT(tileSizeLarge) + 'px);');
      Style.ADDTEXT('        margin: 0 (' + FORMAT(tileMargin) + 'px * 1.5) (' + FORMAT(tileMargin) + 'px * 1.5) 0;');
      Style.ADDTEXT('    }');
      Style.ADDTEXT('}');
      Style.ADDTEXT('');
      Style.ADDTEXT('.tile-group {');
      Style.ADDTEXT('    margin-right: ' + FORMAT(tileGroupMargin) + 'px;');
      Style.ADDTEXT('    min-width: ' + FORMAT(tileGroupSize) + 'px;');
      Style.ADDTEXT('');
      Style.ADDTEXT('    &.one {');
      Style.ADDTEXT('        width: ' + FORMAT(tileGroupSize) + 'px;');
      Style.ADDTEXT('    }');
      Style.ADDTEXT('');
      Style.ADDTEXT('    &.two, &.double {');
      Style.ADDTEXT('        width: ' + FORMAT(tileGroupDoubleSize) + 'px;');
      Style.ADDTEXT('    }');
      Style.ADDTEXT('');
      Style.ADDTEXT('    &.three, &.triple {');
      Style.ADDTEXT('        width: ' + FORMAT(tileGroupTripleSize) + 'px;');
      Style.ADDTEXT('    }');
      Style.ADDTEXT('');
      Style.ADDTEXT('    &.four, &.quadro {');
      Style.ADDTEXT('        width: ' + FORMAT(tileGroupQuadroSize) + 'px;');
      Style.ADDTEXT('    }');
      Style.ADDTEXT('');
      Style.ADDTEXT('    &.five {');
      Style.ADDTEXT('        width: ' + FORMAT(tileGroupDoubleSize) + 'px + ' + FORMAT(tileGroupTripleSize) + 'px;');
      Style.ADDTEXT('    }');
      Style.ADDTEXT('');
      Style.ADDTEXT('    &.six {');
      Style.ADDTEXT('        width: ' + FORMAT(tileGroupTripleSize) + 'px * 2;');
      Style.ADDTEXT('    }');
      Style.ADDTEXT('');
      Style.ADDTEXT('    &.seven {');
      Style.ADDTEXT('        width: ' + FORMAT(tileGroupTripleSize) + 'px * 2) + ' + FORMAT(tileGroupSize) + 'px;');
      Style.ADDTEXT('    }');
      Style.ADDTEXT('}');
      Style.ADDTEXT('');
      Style.ADDTEXT('.tile {');
      Style.ADDTEXT('    margin: 0 ' + FORMAT(tileMargin) + 'px ' + FORMAT(tileMargin) + 'px 0;');
      Style.ADDTEXT('}');
      Style.ADDTEXT('');
      Style.ADDTEXT('.tile {');
      Style.ADDTEXT('    #tile > .meduim-size;');
      Style.ADDTEXT('');
      Style.ADDTEXT('    &.half {');
      Style.ADDTEXT('        width: ' + FORMAT(tileHalfSize) + 'px !important;');
      Style.ADDTEXT('        height: ' + FORMAT(tileHalfSize) + 'px !important;');
      Style.ADDTEXT('    }');
      Style.ADDTEXT('');
      Style.ADDTEXT('    &.double {');
      Style.ADDTEXT('        width: ' + FORMAT(tileDoubleSize) + 'px !important;');
      Style.ADDTEXT('    }');
      Style.ADDTEXT('');
      Style.ADDTEXT('    &.double-vertical {');
      Style.ADDTEXT('        height: ' + FORMAT(tileDoubleSize) + 'px;');
      Style.ADDTEXT('    }');
      Style.ADDTEXT('');
      Style.ADDTEXT('    &.triple {');
      Style.ADDTEXT('        width: ' + FORMAT(tileTripleSize) + 'px;');
      Style.ADDTEXT('    }');
      Style.ADDTEXT('');
      Style.ADDTEXT('    &.triple-vertical {');
      Style.ADDTEXT('        height: ' + FORMAT(tileTripleSize) + 'px;');
      Style.ADDTEXT('    }');
      Style.ADDTEXT('');
      Style.ADDTEXT('    &.quadro {');
      Style.ADDTEXT('        width: ' + FORMAT(tileQuadroSize) + 'px;');
      Style.ADDTEXT('    }');
      Style.ADDTEXT('');
      Style.ADDTEXT('    &.quadro-vertical {');
      Style.ADDTEXT('        height: ' + FORMAT(tileQuadroSize) + 'px;');
      Style.ADDTEXT('    }');
      Style.ADDTEXT('}');
      Style.ADDTEXT('');
      Style.ADDTEXT('// Tile Content');
      Style.ADDTEXT('.tile {');
      Style.ADDTEXT('    .tile-content {');
      Style.ADDTEXT('        &.icon {');
      Style.ADDTEXT('            [class*="icon-"], img {');
      Style.ADDTEXT('                line-height: ' + FORMAT(tileIconSize) + 'px;');
      Style.ADDTEXT('                height: ' + FORMAT(tileIconSize) + 'px;');
      Style.ADDTEXT('                width: ' + FORMAT(tileIconSize) + 'px;');
      Style.ADDTEXT('                font-size: ' + FORMAT(tileIconSize) + 'pxFont;');
      Style.ADDTEXT('                margin-top: -' + FORMAT(tileIconSize) + 'px/2;');
      Style.ADDTEXT('                margin-left: -' + FORMAT(tileIconSize) + 'px/2;');
      Style.ADDTEXT('            }');
      Style.ADDTEXT('        }');
      Style.ADDTEXT('    }');
      Style.ADDTEXT('}');
      Style.ADDTEXT('');
      Style.ADDTEXT('.tile {');
      Style.ADDTEXT('    &.half {');
      Style.ADDTEXT('        .tile-content.icon {');
      Style.ADDTEXT('            [class*="icon-"], img {');
      Style.ADDTEXT('                line-height: ' + FORMAT(tileIconSize) + 'px/1.5;');
      Style.ADDTEXT('                height: ' + FORMAT(tileIconSize) + 'px/1.5;');
      Style.ADDTEXT('                width: ' + FORMAT(tileIconSize) + 'px/1.5;');
      Style.ADDTEXT('                font-size: ' + FORMAT(tileIconSize) + 'pxFont/1.5;');
      Style.ADDTEXT('                margin-top: -' + FORMAT(tileIconSize) + 'px/3;');
      Style.ADDTEXT('                margin-left: -' + FORMAT(tileIconSize) + 'px/3;');
      Style.ADDTEXT('            }');
      Style.ADDTEXT('        }');
      Style.ADDTEXT('    }');
      Style.ADDTEXT('}');
    END;

    PROCEDURE FormatSize@1000000008(size@1000000000 : Decimal) : Text;
    BEGIN
      EXIT(FORMAT(size, 0, 9) + 'px');
    END;

    PROCEDURE Format4Sizes@1000000042(propertyName@1000000000 : Text;propertyValues@1000000001 : Text) : Text;
    VAR
      leftVal@1000000002 : Text;
      topVal@1000000003 : Text;
      rightVal@1000000004 : Text;
      bottomVal@1000000005 : Text;
    BEGIN
      IF (propertyValues = '') THEN
        EXIT('');

      leftVal := SELECTSTR(1, propertyValues);
      topVal := SELECTSTR(2, propertyValues);
      rightVal := SELECTSTR(3, propertyValues);
      bottomVal := SELECTSTR(4, propertyValues);

      IF ((leftVal = '') OR (topVal = '') OR (rightVal = '') OR (bottomVal = '')) THEN
        EXIT('');

      EXIT(STRSUBSTNO('%1: %2px %3px %4px %5px;', propertyName, topVal, leftVal, bottomVal, rightVal));
    END;

    PROCEDURE FormatTextSize@1000000009(size@1000000000 : Decimal) : Text;
    BEGIN
      EXIT(FORMAT(size, 0, 9) + 'pt');
    END;

    PROCEDURE FormatTextStyle@1000000010(style@1000000000 : Integer) : Text;
    VAR
      textStyle@1000000001 : Text;
    BEGIN
      textStyle := '';

      IF (style IN [Panel."Text Font Style"::Bold, Panel."Text Font Style"::"Bold + Italic", Panel."Text Font Style"::"Bold + Underline",
        Panel."Text Font Style"::"Bold + Italic + Underline"])
      THEN
        textStyle := textStyle + 'font-weight: bold;';

      IF (style IN [Panel."Text Font Style"::Italic, Panel."Text Font Style"::"Bold + Italic", Panel."Text Font Style"::"Italic + Underline",
        Panel."Text Font Style"::"Bold + Italic + Underline"])
      THEN
        textStyle := textStyle + 'font-style: italic;';

      IF (style IN [Panel."Text Font Style"::Underline, Panel."Text Font Style"::"Italic + Underline", Panel."Text Font Style"::"Bold + Underline",
        Panel."Text Font Style"::"Bold + Italic + Underline"])
      THEN
        textStyle := textStyle + 'text-decoration: underline;';

      EXIT(textStyle);
    END;

    PROCEDURE FormatTextAlignment@1000000039(alignment@1000000000 : Integer) : Text;
    VAR
      textStyle@1000000001 : Text;
    BEGIN
      textStyle := '';

      CASE (alignment) OF
        Panel."Tile Text Alignment"::" ",
        Panel."Tile Text Alignment"::"Top Left",
        Panel."Tile Text Alignment"::"Middle Left",
        Panel."Tile Text Alignment"::"Bottom Left":
          textStyle := textStyle + 'text-align: left;';
        Panel."Tile Text Alignment"::"Top Center",
        Panel."Tile Text Alignment"::"Middle Center",
        Panel."Tile Text Alignment"::"Bottom Center":
          textStyle := textStyle + 'text-align: center;';
        Panel."Tile Text Alignment"::"Top Right",
        Panel."Tile Text Alignment"::"Middle Right",
        Panel."Tile Text Alignment"::"Bottom Right":
          textStyle := textStyle + 'text-align: right;';
      END;

      CASE (alignment) OF
        Panel."Tile Text Alignment"::" ",
        Panel."Tile Text Alignment"::"Top Left",
        Panel."Tile Text Alignment"::"Top Center",
        Panel."Tile Text Alignment"::"Top Right":
          textStyle := textStyle + 'vertical-align: top;';
        Panel."Tile Text Alignment"::"Middle Left",
        Panel."Tile Text Alignment"::"Middle Center",
        Panel."Tile Text Alignment"::"Middle Right":
          textStyle := textStyle + 'vertical-align: middle;';
        Panel."Tile Text Alignment"::"Bottom Left",
        Panel."Tile Text Alignment"::"Bottom Center",
        Panel."Tile Text Alignment"::"Bottom Right":
          textStyle := textStyle + 'vertical-align: bottom;';
      END;

      EXIT(textStyle);
    END;

    PROCEDURE GetValue@1000000004(Value1@1000000000 : Decimal;Value2@1000000001 : Decimal) : Decimal;
    BEGIN
      IF (Value1 <> 0) THEN
        EXIT(Value1);
      IF (Value2 <> 0) THEN
        EXIT(Value2);
      EXIT(0);
    END;

    PROCEDURE GetIntValue@1000000006(Value1@1000000000 : Integer;Value2@1000000001 : Integer) : Integer;
    BEGIN
      IF (Value1 <> 0) THEN
        EXIT(Value1);
      IF (Value2 <> 0) THEN
        EXIT(Value2);
      EXIT(0);
    END;

    PROCEDURE GetText@1000000005(Value1@1000000000 : Text;Value2@1000000001 : Text) : Text;
    BEGIN
      IF (Value1 <> '') THEN
        EXIT(Value1);
      IF (Value2 <> '') THEN
        EXIT(Value2);
      EXIT('');
    END;

    PROCEDURE ConvertTextToJSText@1000000001(text@1000000000 : Text) : Text;
    VAR
      outVal@1000000001 : Text;
      i@1000000002 : Integer;
    BEGIN
      outVal := '';
      IF (STRLEN(text) > 0) THEN BEGIN
        FOR i:=1 TO STRLEN(text) DO BEGIN
          IF (COPYSTR(text, i, 1) = '\') THEN
            outVal := outVal + '\\'
          ELSE IF (COPYSTR(text, i, 1) = '''') THEN
            outVal := outVal + '\'''
          ELSE
            outVal := outVal + COPYSTR(text, i, 1);
        END;
      END;

      EXIT(outVal);
    END;

    BEGIN
    {
      //DOC NA2016.9  JH 11/09/2015 - Upgraded to 2016
      //DOC NA2016.15 JH 10/05/2016 - CfMD amendments
    }
    END.
  }
}

