OBJECT Codeunit 5618 Table Depr. Calculation
{
  OBJECT-PROPERTIES
  {
    Date=07/09/12;
    Time=12:00:00 PM;
    Version List=NAVW17.00,NAVGB7.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU="There are no lines defined for %1 %2 = %3.";ENG="There are no lines defined for %1 %2 = %3."';
      Text002@1002 : TextConst 'ENU=must be an unbroken sequence;ENG=must be an unbroken sequence';
      Text003@1003 : TextConst 'ENU=Period must be specified in %1.;ENG=Period must be specified in %1.';
      Text004@1004 : TextConst 'ENU=The number of days in an accounting period must not be less than 5.;ENG=The number of days in an accounting period must not be less than 5.';
      AccountingPeriod@1005 : Record 10560;
      DeprBook@1006 : Record 5611;
      DeprTableHeader@1007 : Record 5642;
      DeprTableBufferTmp@1008 : TEMPORARY Record 5646;
      DeprTableLine@1009 : Record 5643;
      DepreciationCalc@1010 : Codeunit 5616;
      DaysInFiscalYear@1011 : Integer;
      StartingLimit@1012 : Integer;
      EndingLimit@1013 : Integer;
      FirstPointer@1014 : Integer;
      LastPointer@1015 : Integer;
      NumberOfDays@1016 : Integer;
      Percentage@1017 : Decimal;
      Year365Days@1018 : Boolean;
      Text005@1019 : TextConst 'ENU=cannot be %1 when %2 is %3 in %4 %5;ENG=cannot be %1 when %2 is %3 in %4 %5';
      Text1040000@1040000 : TextConst 'ENU="%1 = %2 and %3 %4 = %5 for %6 %7 must not be different.";ENG="%1 = %2 and %3 %4 = %5 for %6 %7 must not be different."';

    PROCEDURE GetTablePercent@1(DeprBookCode@1000 : Code[10];DeprTableCode@1001 : Code[10];FirstUserDefinedDeprDate@1002 : Date;StartingDate@1003 : Date;EndingDate@1004 : Date) : Decimal;
    BEGIN
      CLEARALL;
      IF (StartingDate = 0D) OR (EndingDate = 0D) THEN
        EXIT(0);
      IF (StartingDate > EndingDate) OR (FirstUserDefinedDeprDate > StartingDate) THEN
        EXIT(0);
      DeprBook.GET(DeprBookCode);
      DaysInFiscalYear := DeprBook."No. of Days in Fiscal Year";
      IF DaysInFiscalYear = 0 THEN
        DaysInFiscalYear := 360;
      DeprTableHeader.GET(DeprTableCode);
      Year365Days := DeprBook."Fiscal Year 365 Days";
      IF Year365Days THEN BEGIN
        IF (DeprTableHeader."Period Length" = DeprTableHeader."Period Length"::Month) OR
           (DeprTableHeader."Period Length" = DeprTableHeader."Period Length"::Quarter)
        THEN
          DeprTableHeader.FIELDERROR(
            "Period Length",
            STRSUBSTNO(
              Text005,
              DeprTableHeader."Period Length",
              DeprBook.FIELDCAPTION("Fiscal Year 365 Days"),
              DeprBook."Fiscal Year 365 Days",
              DeprBook.TABLECAPTION,DeprBook.Code));
        DaysInFiscalYear := 365;
      END;
      StartingLimit := DepreciationCalc.DeprDays(FirstUserDefinedDeprDate,StartingDate,Year365Days,DeprBook."Use Accounting Period");
      EndingLimit := DepreciationCalc.DeprDays(FirstUserDefinedDeprDate,EndingDate,Year365Days,DeprBook."Use Accounting Period");
      IF NOT Year365Days THEN BEGIN
        IF DATE2DMY(StartingDate,2) = 2 THEN
          IF DATE2DMY(StartingDate + 1,1) = 1 THEN
            StartingLimit := StartingLimit - (30 - DATE2DMY(StartingDate,1));
      END;
      CreateTableBuffer(FirstUserDefinedDeprDate);
      EXIT(CalculatePercent);
    END;

    LOCAL PROCEDURE CalculatePercent@12() : Decimal;
    BEGIN
      DeprTableBufferTmp.FIND('-');
      LastPointer := 0;
      Percentage := 0;

      REPEAT
        FirstPointer := LastPointer + 1;
        LastPointer := FirstPointer + DeprTableBufferTmp."No. of Days in Period" - 1;
        NumberOfDays := 0;
        IF NOT ((StartingLimit > LastPointer) OR (EndingLimit < FirstPointer)) THEN BEGIN
          IF (StartingLimit < FirstPointer) AND (EndingLimit <= LastPointer) THEN
            NumberOfDays := EndingLimit - FirstPointer + 1;
          IF (StartingLimit < FirstPointer) AND (EndingLimit > LastPointer) THEN
            NumberOfDays := DeprTableBufferTmp."No. of Days in Period";
          IF (StartingLimit >= FirstPointer) AND (EndingLimit <= LastPointer) THEN
            NumberOfDays := EndingLimit - StartingLimit + 1;
          IF (StartingLimit >= FirstPointer) AND (EndingLimit > LastPointer) THEN
            NumberOfDays := LastPointer - StartingLimit + 1;
          Percentage :=
            Percentage + DeprTableBufferTmp."Period Depreciation %" * NumberOfDays /
            DeprTableBufferTmp."No. of Days in Period";
        END;
      UNTIL DeprTableBufferTmp.NEXT = 0;
      EXIT(Percentage / 100);
    END;

    LOCAL PROCEDURE CreateTableBuffer@8(FirstUserDefinedDeprDate@1000 : Date);
    VAR
      FADeprBook@1001 : Record 5612;
      DepreciationCalc@1002 : Codeunit 5616;
      DaysInPeriod@1003 : Integer;
      TotalNoOfDays@1004 : Integer;
      PeriodNo@1005 : Integer;
    BEGIN
      DeprTableLine.SETRANGE("Depreciation Table Code",DeprTableHeader.Code);
      IF NOT DeprTableLine.FIND('-') THEN
        ERROR(
          Text000,
          DeprTableHeader.TABLECAPTION,DeprTableHeader.FIELDCAPTION(Code),DeprTableHeader.Code);

      IF DeprTableHeader."Period Length" = DeprTableHeader."Period Length"::Period THEN BEGIN
        AccountingPeriod.SETRANGE("Period Type",AccountingPeriod."Period Type"::Month);
        AccountingPeriod.SETFILTER("Period Start",'>=%1',FirstUserDefinedDeprDate);
        IF AccountingPeriod.FIND('-') THEN ;
        IF AccountingPeriod."Period Start" <> FirstUserDefinedDeprDate THEN
          ERROR(
            Text1040000,
            FADeprBook.FIELDCAPTION("First User-Defined Depr. Date"),FirstUserDefinedDeprDate,
            AccountingPeriod.TABLECAPTION,AccountingPeriod.FIELDCAPTION("Period Start"),
            AccountingPeriod."Period Start",AccountingPeriod.FIELDCAPTION("Period Type"),
            FORMAT(AccountingPeriod."Period Type"));
      END;
      CASE DeprTableHeader."Period Length" OF
        DeprTableHeader."Period Length"::Period:
          DaysInPeriod := 0;
        DeprTableHeader."Period Length"::Month:
          DaysInPeriod := 30;
        DeprTableHeader."Period Length"::Quarter:
          DaysInPeriod := 90;
        DeprTableHeader."Period Length"::Year:
          DaysInPeriod := DaysInFiscalYear;
      END;
      REPEAT
        PeriodNo := PeriodNo + 1;
        IF PeriodNo <> DeprTableLine."Period No." THEN
          DeprTableLine.FIELDERROR("Period No.",Text002);
        IF DeprTableHeader."Period Length" = DeprTableHeader."Period Length"::Period THEN BEGIN
          AccountingPeriod.SETRANGE("Period Type",AccountingPeriod."Period Type"::Month);
          AccountingPeriod."Period Type" := AccountingPeriod."Period Type"::Month;
          FirstUserDefinedDeprDate := AccountingPeriod."Period Start";
          IF AccountingPeriod.NEXT <> 0 THEN
            DaysInPeriod :=
              DepreciationCalc.DeprDays(
                FirstUserDefinedDeprDate,
                DepreciationCalc.Yesterday(AccountingPeriod."Period Start",Year365Days,DeprBook."Use Accounting Period"),
                Year365Days,DeprBook."Use Accounting Period");
          IF DaysInPeriod = 0 THEN
            ERROR(Text003,AccountingPeriod.TABLECAPTION);
          IF DaysInPeriod <= 5 THEN
            ERROR(
              Text004);
        END;
        InsertTableBuffer(DeprTableLine,TotalNoOfDays,DaysInPeriod,PeriodNo);
      UNTIL (DeprTableLine.NEXT = 0) OR (TotalNoOfDays > EndingLimit);

      WHILE TotalNoOfDays < EndingLimit DO BEGIN
        DeprTableBufferTmp."Entry No." := DeprTableBufferTmp."Entry No." + 1;
        DeprTableBufferTmp.INSERT;
        TotalNoOfDays := TotalNoOfDays + DaysInPeriod;
      END;
    END;

    LOCAL PROCEDURE InsertTableBuffer@4(VAR DeprTableLine@1000 : Record 5643;VAR TotalNoOfDays@1001 : Integer;DaysInPeriod@1002 : Integer;PeriodNo@1003 : Integer);
    BEGIN
      TotalNoOfDays := TotalNoOfDays + DaysInPeriod;
      DeprTableBufferTmp."Entry No." := PeriodNo;
      DeprTableBufferTmp."No. of Days in Period" := DaysInPeriod;
      IF DeprTableHeader."Total No. of Units" > 0 THEN
        DeprTableBufferTmp."Period Depreciation %" :=
          DeprTableLine."No. of Units in Period" * 100 / DeprTableHeader."Total No. of Units"
      ELSE
        DeprTableBufferTmp."Period Depreciation %" := DeprTableLine."Period Depreciation %";
      DeprTableBufferTmp.INSERT;
    END;

    BEGIN
    END.
  }
}

