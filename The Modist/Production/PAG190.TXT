OBJECT Page 190 Incoming Documents
{
  OBJECT-PROPERTIES
  {
    Date=23/10/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00.00.43402;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[ENU=Incoming Documents;
               ENG=Incoming Documents];
    SourceTable=Table130;
    DataCaptionFields=Description;
    PageType=List;
    CardPageID=Incoming Document;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Release;
                                ENG=New,Process,Report,Release];
    OnOpenPage=BEGIN
                 IsDataExchTypeEditable := TRUE;
                 HasCamera := CameraProvider.IsAvailable;
                 IF HasCamera THEN
                   CameraProvider := CameraProvider.Create;
                 EnableReceiveFromOCR := WaitingToReceiveFromOCR;
               END;

    OnAfterGetRecord=BEGIN
                       URL := GetURL;
                       StatusStyleText := GetStatusStyleText;
                     END;

    OnNewRecord=BEGIN
                  URL := '';
                  StatusStyleText := GetStatusStyleText;
                END;

    OnAfterGetCurrRecord=BEGIN
                           IsDataExchTypeEditable := NOT (Status IN [Status::Created,Status::Posted]);
                           StatusStyleText := GetStatusStyleText;
                           SetControlVisibility;
                           CurrPage.IncomingDocAttachFactBox.PAGE.LoadDataFromIncomingDocument(Rec);
                         END;

    ActionList=ACTIONS
    {
      { 22      ;    ;ActionContainer;
                      CaptionML=[ENU=New;
                                 ENG=New];
                      ActionContainerType=NewDocumentItems }
      { 56      ;1   ;Action    ;
                      Name=CreateFromCamera;
                      CaptionML=[ENU=Create from Camera;
                                 ENG=Create from Camera];
                      Promoted=Yes;
                      Visible=HasCamera;
                      PromotedIsBig=Yes;
                      Image=Camera;
                      OnAction=VAR
                                 CameraOptions@1000 : DotNet "'Microsoft.Dynamics.Nav.ClientExtensions, Version=9.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.Capabilities.CameraOptions";
                               BEGIN
                                 IF NOT HasCamera THEN
                                   EXIT;
                                 CameraOptions := CameraOptions.CameraOptions;
                                 CameraOptions.Quality := 100; // 100%
                                 CameraProvider.RequestPictureAsync(CameraOptions);
                               END;
                                }
      { 50      ;1   ;Action    ;
                      Name=CreateFromAttachment;
                      CaptionML=[ENU=Create from File;
                                 ENG=Create from File];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ExportAttachment;
                      OnAction=BEGIN
                                 CreateFromAttachment;
                               END;
                                }
      { 33      ;    ;ActionContainer;
                      CaptionML=[ENU=Related Information;
                                 ENG=Related Information];
                      ActionContainerType=RelatedInformation }
      { 28      ;1   ;ActionGroup;
                      CaptionML=[ENU=Setup;
                                 ENG=Setup] }
      { 32      ;2   ;Action    ;
                      Name=Setup;
                      CaptionML=[ENU=Setup;
                                 ENG=Setup];
                      RunObject=Page 191;
                      Image=Setup;
                      PromotedCategory=Category5 }
      { 42      ;2   ;Action    ;
                      Name=DataExchangeTypes;
                      CaptionML=[ENU=Data Exchange Types;
                                 ENG=Data Exchange Types];
                      RunObject=Page 1213;
                      Image=Entries;
                      PromotedCategory=Category5 }
      { 46      ;2   ;Action    ;
                      Name=OCRSetup;
                      CaptionML=[ENU=OCR Service Setup;
                                 ENG=OCR Service Setup];
                      RunObject=Page 1270;
                      Image=ServiceSetup }
      { 29      ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 54      ;1   ;ActionGroup;
                      CaptionML=[ENU=Process;
                                 ENG=Process] }
      { 45      ;2   ;Action    ;
                      Name=CreateDocument;
                      CaptionML=[ENU=Create Document;
                                 ENG=Create Document];
                      PromotedIsBig=Yes;
                      Image=CreateDocument;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IncomingDocumentMultiSelectAction(MultiSelectAction::CreateDocument);
                                 CurrPage.UPDATE;
                               END;
                                }
      { 51      ;2   ;Action    ;
                      Name=CreateGenJnlLine;
                      CaptionML=[ENU=Create Journal Line;
                                 ENG=Create Journal Line];
                      PromotedIsBig=Yes;
                      Image=TransferToGeneralJournal;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IncomingDocumentMultiSelectAction(MultiSelectAction::CreateGenJnlLineWithDataExchange);
                                 CurrPage.UPDATE;
                               END;
                                }
      { 63      ;2   ;Action    ;
                      Name=CreateManually;
                      CaptionML=[ENU=Create Manually;
                                 ENG=Create Manually];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=CreateCreditMemo;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IncomingDocumentMultiSelectAction(MultiSelectAction::CreateManually);
                               END;
                                }
      { 39      ;2   ;Action    ;
                      Name=AttachFile;
                      CaptionML=[ENU=Attach File;
                                 ENG=Attach File];
                      Image=Attach;
                      PromotedCategory=Process;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 ImportAttachment;
                               END;
                                }
      { 49      ;2   ;Action    ;
                      Name=TextToAccountMapping;
                      CaptionML=[ENU=Map Text to Account;
                                 ENG=Map Text to Account];
                      RunObject=Page 1254;
                      Image=MapAccounts;
                      PromotedCategory=Category5 }
      { 53      ;1   ;ActionGroup;
                      CaptionML=[ENU=Release;
                                 ENG=Release] }
      { 30      ;2   ;Action    ;
                      Name=Release;
                      CaptionML=[ENU=Release;
                                 ENG=Release];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Approve;
                      PromotedCategory=Category4;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 IncomingDocumentMultiSelectAction(MultiSelectAction::Release);
                               END;
                                }
      { 67      ;2   ;Action    ;
                      Name=Reopen;
                      CaptionML=[ENU=Reopen;
                                 ENG=Reopen];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ReOpen;
                      PromotedCategory=Category4;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 IncomingDocumentMultiSelectAction(MultiSelectAction::Reopen);
                               END;
                                }
      { 31      ;2   ;Action    ;
                      Name=Reject;
                      CaptionML=[ENU=Reject;
                                 ENG=Reject];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Reject;
                      PromotedCategory=Category4;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 IncomingDocumentMultiSelectAction(MultiSelectAction::Reject);
                               END;
                                }
      { 61      ;1   ;ActionGroup;
                      CaptionML=[ENU=Request Approval;
                                 ENG=Request Approval];
                      Image=SendApprovalRequest }
      { 60      ;2   ;Action    ;
                      Name=SendApprovalRequest;
                      CaptionML=[ENU=Send A&pproval Request;
                                 ENG=Send A&pproval Request];
                      Enabled=NOT OpenApprovalEntriesExist;
                      Image=SendApprovalRequest;
                      Scope=Repeater;
                      OnAction=VAR
                                 ApprovalsMgmt@1001 : Codeunit 1535;
                               BEGIN
                                 IF ApprovalsMgmt.CheckIncomingDocApprovalsWorkflowEnabled(Rec) THEN
                                   ApprovalsMgmt.OnSendIncomingDocForApproval(Rec);
                               END;
                                }
      { 59      ;2   ;Action    ;
                      Name=CancelApprovalRequest;
                      CaptionML=[ENU=Cancel Approval Re&quest;
                                 ENG=Cancel Approval Re&quest];
                      Enabled=OpenApprovalEntriesExist;
                      Image=Cancel;
                      Scope=Repeater;
                      OnAction=VAR
                                 ApprovalsMgmt@1001 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.OnCancelIncomingDocApprovalRequest(Rec);
                               END;
                                }
      { 57      ;1   ;ActionGroup;
                      CaptionML=[ENU=Incoming Documents;
                                 ENG=Incoming Documents] }
      { 58      ;2   ;Action    ;
                      Name=OpenDocument;
                      CaptionML=[ENU=Open Record;
                                 ENG=Open Record];
                      Image=ViewDetails;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 ShowNAVRecord;
                               END;
                                }
      { 40      ;2   ;Action    ;
                      Name=RemoveReferencedRecord;
                      CaptionML=[ENU=Remove Reference to Record;
                                 ENG=Remove Reference to Record];
                      PromotedIsBig=Yes;
                      Image=ClearLog;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 RemoveReferencedRecords;
                               END;
                                }
      { 55      ;2   ;Action    ;
                      Name=Navigate;
                      CaptionML=[ENU=Navigate;
                                 ENG=Navigate];
                      PromotedIsBig=Yes;
                      Image=Navigate;
                      Scope=Repeater;
                      OnAction=VAR
                                 NavigatePage@1000 : Page 344;
                               BEGIN
                                 TESTFIELD(Posted);
                                 NavigatePage.SetDoc("Posting Date","Document No.");
                                 NavigatePage.RUN;
                               END;
                                }
      { 52      ;2   ;ActionGroup;
                      Name=Document;
                      CaptionML=[ENU=Record;
                                 ENG=Record];
                      Visible=FALSE;
                      Enabled=FALSE;
                      Image=Document }
      { 23      ;3   ;Action    ;
                      Name=Journal;
                      CaptionML=[ENU=Journal Line;
                                 ENG=Journal Line];
                      Image=Journal;
                      Scope=Repeater;
                      OnAction=VAR
                                 GenJournalBatch@1001 : Record 232;
                                 GenJnlManagement@1002 : Codeunit 230;
                               BEGIN
                                 IncomingDocumentMultiSelectAction(MultiSelectAction::CreateGenJnlLine);
                                 IncomingDocumentsSetup.Fetch;
                                 GenJournalBatch.GET(IncomingDocumentsSetup."General Journal Template Name",IncomingDocumentsSetup."General Journal Batch Name");
                                 GenJnlManagement.TemplateSelectionFromBatch(GenJournalBatch);
                               END;
                                }
      { 26      ;3   ;Action    ;
                      Name=PurchaseInvoice;
                      CaptionML=[ENU=Purchase Invoice;
                                 ENG=Purchase Invoice];
                      Image=Purchase;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 IncomingDocumentMultiSelectAction(MultiSelectAction::CreatePurchInvoice);
                               END;
                                }
      { 27      ;3   ;Action    ;
                      Name=PurchaseCreditMemo;
                      CaptionML=[ENU=Purchase Credit Memo;
                                 ENG=Purchase Credit Memo];
                      Image=CreditMemo;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 IncomingDocumentMultiSelectAction(MultiSelectAction::CreatePurchCreditMemo);
                               END;
                                }
      { 24      ;3   ;Action    ;
                      Name=SalesInvoice;
                      CaptionML=[ENU=Sales Invoice;
                                 ENG=Sales Invoice];
                      Image=Sales;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 IncomingDocumentMultiSelectAction(MultiSelectAction::CreateSalesInvoice);
                               END;
                                }
      { 25      ;3   ;Action    ;
                      Name=SalesCreditMemo;
                      CaptionML=[ENU=Sales Credit Memo;
                                 ENG=Sales Credit Memo];
                      Image=CreditMemo;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 IncomingDocumentMultiSelectAction(MultiSelectAction::CreateSalesCreditMemo);
                               END;
                                }
      { 44      ;1   ;ActionGroup;
                      CaptionML=[ENU=OCR;
                                 ENG=OCR] }
      { 41      ;2   ;Action    ;
                      Name=SetReadyForOCR;
                      CaptionML=[ENU=Send to Job Queue;
                                 ENG=Send to Job Queue];
                      Image=Translation;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 IncomingDocumentMultiSelectAction(MultiSelectAction::SetReadyForOcr);
                               END;
                                }
      { 43      ;2   ;Action    ;
                      Name=UndoSetReadyForOCR;
                      CaptionML=[ENU=Remove from Job Queue;
                                 ENG=Remove from Job Queue];
                      Image=Translation;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 IncomingDocumentMultiSelectAction(MultiSelectAction::UndoReadyForOcr);
                               END;
                                }
      { 12      ;2   ;Action    ;
                      Name=SendToOcr;
                      CaptionML=[ENU=Send to OCR Service;
                                 ENG=Send to OCR Service];
                      Image=Translations;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 IncomingDocumentMultiSelectAction(MultiSelectAction::SendToOcr);
                               END;
                                }
      { 47      ;2   ;Action    ;
                      Name=ReceiveFromOCR;
                      CaptionML=[ENU=Receive from OCR Service;
                                 ENG=Receive from OCR Service];
                      Enabled=EnableReceiveFromOCR;
                      PromotedIsBig=Yes;
                      Image=Import;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 CODEUNIT.RUN(CODEUNIT::"OCR - Receive from Service");
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=Group;
                GroupType=Repeater }

    { 3   ;2   ;Field     ;
                SourceExpr="Entry No.";
                Visible=false }

    { 4   ;2   ;Field     ;
                SourceExpr=Description }

    { 35  ;2   ;Field     ;
                SourceExpr="Vendor Name" }

    { 36  ;2   ;Field     ;
                SourceExpr="Document Date" }

    { 37  ;2   ;Field     ;
                SourceExpr="Vendor Invoice No." }

    { 38  ;2   ;Field     ;
                SourceExpr="Currency Code" }

    { 48  ;2   ;Field     ;
                SourceExpr="Amount Incl. VAT" }

    { 34  ;2   ;Field     ;
                ExtendedDatatype=URL;
                CaptionML=[ENU=Link to Document;
                           ENG=Link to Document];
                SourceExpr=URL;
                Importance=Additional;
                Visible=FALSE;
                OnValidate=BEGIN
                             SetURL(URL);
                           END;
                            }

    { 140 ;2   ;Field     ;
                SourceExpr="Data Exchange Type";
                Visible=FALSE;
                Editable=IsDataExchTypeEditable }

    { 17  ;2   ;Field     ;
                DrillDown=Yes;
                SourceExpr=Status;
                StyleExpr=StatusStyleText;
                OnDrillDown=VAR
                              ErrorMessage@1000 : Record 700;
                            BEGIN
                              ErrorMessage.SetContext(RECORDID);
                              ErrorMessage.ShowErrorMessages(FALSE);
                            END;
                             }

    { 62  ;2   ;Field     ;
                SourceExpr="OCR Status";
                OnDrillDown=VAR
                              OCRServiceSetup@1000 : Record 1270;
                            BEGIN
                              IF NOT OCRServiceSetup.FINDFIRST THEN
                                EXIT;

                              IF OCRServiceSetup.Enabled AND (OCRServiceSetup."Login URL" <> '') THEN
                                HYPERLINK(OCRServiceSetup."Login URL");
                            END;
                             }

    { 5   ;2   ;Field     ;
                SourceExpr="Created Date-Time";
                Visible=FALSE }

    { 6   ;2   ;Field     ;
                SourceExpr="Created By User Name";
                Visible=false }

    { 8   ;2   ;Field     ;
                SourceExpr="Released Date-Time";
                Visible=false }

    { 9   ;2   ;Field     ;
                SourceExpr="Released By User Name";
                Visible=false }

    { 10  ;2   ;Field     ;
                SourceExpr="Last Date-Time Modified";
                Visible=false }

    { 11  ;2   ;Field     ;
                SourceExpr="Last Modified By User Name";
                Visible=false }

    { 13  ;2   ;Field     ;
                SourceExpr="Posted Date-Time";
                Visible=false }

    { 14  ;2   ;Field     ;
                SourceExpr="Document Type" }

    { 15  ;2   ;Field     ;
                SourceExpr="Document No." }

    { 16  ;2   ;Field     ;
                SourceExpr="Posting Date";
                Visible=false }

    { 18  ;0   ;Container ;
                ContainerType=FactBoxArea }

    { 7   ;1   ;Part      ;
                Name=IncomingDocAttachFactBox;
                PagePartID=Page193;
                PartType=Page;
                ShowFilter=No }

    { 19  ;1   ;Part      ;
                Visible=false;
                PartType=System;
                SystemPartID=Notes }

    { 20  ;1   ;Part      ;
                Visible=false;
                PartType=System;
                SystemPartID=MyNotes }

    { 21  ;1   ;Part      ;
                Visible=false;
                PartType=System;
                SystemPartID=RecordLinks }

  }
  CODE
  {
    VAR
      IncomingDocumentsSetup@1001 : Record 131;
      AutomaticProcessingQst@1005 : TextConst 'ENU=The Data Exchange Type field is filled on at least one of the selected Incoming Documents.\\Are you sure you want to create documents manually?;ENG=The Data Exchange Type field is filled on at least one of the selected Incoming Documents.\\Are you sure you want to create documents manually?';
      CameraProvider@1008 : DotNet "'Microsoft.Dynamics.Nav.ClientExtensions, Version=9.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.Capabilities.CameraProvider" WITHEVENTS RUNONCLIENT;
      HasCamera@1003 : Boolean;
      URL@1006 : Text;
      StatusStyleText@1004 : Text;
      MultiSelectAction@1002 : 'CreateGenJnlLine,CreatePurchInvoice,CreatePurchCreditMemo,CreateSalesInvoice,CreateSalesCreditMemo,Release,Reopen,Reject,CreateDocument,SetReadyForOcr,UndoReadyForOcr,SendToOcr,CreateGenJnlLineWithDataExchange,CreateManually';
      IsDataExchTypeEditable@1000 : Boolean;
      OpenApprovalEntriesExist@1009 : Boolean;
      EnableReceiveFromOCR@1007 : Boolean;

    LOCAL PROCEDURE IncomingDocumentMultiSelectAction@10(ActionName@1000 : Option);
    VAR
      IncomingDocument@1001 : Record 130;
      ReleaseIncomingDocument@1002 : Codeunit 132;
    BEGIN
      IF NOT AskUserPermission(ActionName) THEN
        EXIT;

      CurrPage.SETSELECTIONFILTER(IncomingDocument);
      IF IncomingDocument.FINDSET THEN
        REPEAT
          CASE ActionName OF
            MultiSelectAction::CreateDocument:
              IncomingDocument.CreateDocumentWithDataExchange;
            MultiSelectAction::CreateManually:
              IncomingDocument.CreateManually;
            MultiSelectAction::CreateGenJnlLine:
              IncomingDocument.CreateGenJnlLine;
            MultiSelectAction::CreateGenJnlLineWithDataExchange:
              IncomingDocument.CreateGeneralJournalLineWithDataExchange;
            MultiSelectAction::CreatePurchInvoice:
              IncomingDocument.CreatePurchInvoice;
            MultiSelectAction::CreatePurchCreditMemo:
              IncomingDocument.CreatePurchCreditMemo;
            MultiSelectAction::CreateSalesInvoice:
              IncomingDocument.CreateSalesInvoice;
            MultiSelectAction::CreateSalesCreditMemo:
              IncomingDocument.CreateSalesCreditMemo;
            MultiSelectAction::Release:
              ReleaseIncomingDocument.PerformManualRelease(IncomingDocument);
            MultiSelectAction::Reopen:
              ReleaseIncomingDocument.PerformManualReopen(IncomingDocument);
            MultiSelectAction::Reject:
              ReleaseIncomingDocument.PerformManualReject(IncomingDocument);
            MultiSelectAction::SetReadyForOcr:
              IncomingDocument.SendToJobQueue(FALSE);
            MultiSelectAction::UndoReadyForOcr:
              IncomingDocument.RemoveFromJobQueue(FALSE);
            MultiSelectAction::SendToOcr:
              IncomingDocument.SendToOCR(FALSE);
          END;
        UNTIL IncomingDocument.NEXT = 0;
    END;

    LOCAL PROCEDURE AskUserPermission@7(ActionName@1000 : Option) : Boolean;
    VAR
      IncomingDocument@1001 : Record 130;
    BEGIN
      CurrPage.SETSELECTIONFILTER(IncomingDocument);
      IF ActionName IN [MultiSelectAction::Reject,
                        MultiSelectAction::Release,
                        MultiSelectAction::SetReadyForOcr,
                        MultiSelectAction::CreateDocument]
      THEN
        EXIT(TRUE);

      IF Status <> Status::New THEN
        EXIT(TRUE);

      IncomingDocument.SETFILTER("Data Exchange Type",'<>%1','');
      IF IncomingDocument.ISEMPTY THEN
        EXIT(TRUE);

      EXIT(CONFIRM(AutomaticProcessingQst));
    END;

    LOCAL PROCEDURE SetControlVisibility@9();
    VAR
      ApprovalsMgmt@1000 : Codeunit 1535;
    BEGIN
      OpenApprovalEntriesExist := ApprovalsMgmt.HasOpenApprovalEntries(RECORDID);
      EnableReceiveFromOCR := WaitingToReceiveFromOCR;
    END;

    EVENT CameraProvider@1008::PictureAvailable@11(PictureName@1001 : Text;PictureFilePath@1000 : Text);
    BEGIN
      CreateIncomingDocumentFromServerFile(PictureName,PictureFilePath);
    END;

    BEGIN
    END.
  }
}

