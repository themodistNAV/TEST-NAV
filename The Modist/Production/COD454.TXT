OBJECT Codeunit 454 Job Queue - Send Notification
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    TableNo=472;
    OnRun=VAR
            RecordLink@1000 : Record 2000000068;
            JobQueueEntries@1003 : Page 672;
          BEGIN
            RecordLink."Link ID" := 0;
            RecordLink."Record ID" := "Record ID to Process";
            RecordLink.Description := JobQueueEntries.CAPTION;
            SetURL(Rec,RecordLink);
            RecordLink.Type := RecordLink.Type::Note;
            RecordLink.Created := CURRENTDATETIME;
            RecordLink."User ID" := USERID;
            RecordLink.Company := COMPANYNAME;
            RecordLink.Notify := TRUE;
            RecordLink."To User ID" := "User ID";
            SetText(Rec,RecordLink);
            RecordLink.INSERT;
          END;

  }
  CODE
  {
    VAR
      ErrorText1@1002 : TextConst 'ENU=Error when processing ''%1''.;ENG=Error when processing ''%1''.';
      ErrorText2@1000 : TextConst 'ENU=Error message:;ENG=Error message:';
      Text001@1001 : TextConst '@@@="%1 = job description, e.g. ''Post Sales Order 1234''";ENU=''%1'' finished successfully.;ENG=''%1'' finished successfully.';

    LOCAL PROCEDURE SetURL@3(VAR JobQueueEntry@1002 : Record 472;VAR RecordLink@1000 : Record 2000000068);
    VAR
      Link@1001 : Text;
    BEGIN
      WITH JobQueueEntry DO BEGIN
        // Generates a URL such as dynamicsnav://host:port/instance/company/runpage?page=672&$filter=
        // The intent is to open up the Job Queue Entries page and show the list of "my errors".
        // TODO: Leverage parameters ",JobQueueEntry,TRUE)" to take into account the filters, which will add the
        // following to the Url: &$filter=JobQueueEntry.Status IS 2 AND JobQueueEntry."User ID" IS <UserID>.
        // This will also require setting the filters on the record, such as:
        // SETFILTER(Status,'=2');
        // SETFILTER("User ID",'=%1',"User ID");
        Link := GETURL(DEFAULTCLIENTTYPE,COMPANYNAME,OBJECTTYPE::Page,PAGE::"Job Queue Entries") +
          STRSUBSTNO('&$filter=''%1''.''%2''%20IS%20''2''%20AND%20''%1''.''%3''%20IS%20''%4''&mode=View',
            HtmlEncode(TABLENAME),HtmlEncode(FIELDNAME(Status)),HtmlEncode(FIELDNAME("User ID")),HtmlEncode("User ID"));

        RecordLink.URL1 := COPYSTR(Link,1,MAXSTRLEN(RecordLink.URL1));
        IF STRLEN(Link) > MAXSTRLEN(RecordLink.URL1) THEN
          RecordLink.URL2 := COPYSTR(Link,MAXSTRLEN(RecordLink.URL1) + 1,MAXSTRLEN(RecordLink.URL2));
      END;
    END;

    LOCAL PROCEDURE SetText@4(VAR JobQueueEntry@1001 : Record 472;VAR RecordLink@1000 : Record 2000000068);
    VAR
      SystemUTF8Encoder@1011 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Text.UTF8Encoding";
      SystemByteArray@1010 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array";
      OStr@1008 : OutStream;
      s@1007 : Text;
      lf@1006 : Text;
      c1@1005 : Byte;
      c2@1004 : Byte;
      x@1003 : Integer;
      y@1002 : Integer;
      i@1009 : Integer;
    BEGIN
      WITH JobQueueEntry DO BEGIN
        c1 := 13;
        lf[1] := c1;

        IF Status = Status::Error THEN
          s := STRSUBSTNO(ErrorText1,Description) + lf + ErrorText2 + ' ' + GetErrorMessage
        ELSE
          s := STRSUBSTNO(Text001,Description);

        SystemUTF8Encoder := SystemUTF8Encoder.UTF8Encoding;
        SystemByteArray := SystemUTF8Encoder.GetBytes(s);

        RecordLink.Note.CREATEOUTSTREAM(OStr);
        x := SystemByteArray.Length DIV 128;
        IF x > 1 THEN
          y := SystemByteArray.Length - 128 * (x - 1)
        ELSE
          y := SystemByteArray.Length;
        c1 := y;
        OStr.WRITE(c1);
        IF x > 0 THEN BEGIN
          c2 := x;
          OStr.WRITE(c2);
        END;
        FOR i := 0 TO SystemByteArray.Length - 1 DO BEGIN
          c1 := SystemByteArray.GetValue(i);
          OStr.WRITE(c1);
        END;
      END;
    END;

    LOCAL PROCEDURE HtmlEncode@20(InText@1000 : Text[1024]) : Text[1024];
    VAR
      SystemWebHttpUtility@1001 : DotNet "'System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.Web.HttpUtility";
    BEGIN
      SystemWebHttpUtility := SystemWebHttpUtility.HttpUtility;
      EXIT(SystemWebHttpUtility.HtmlEncode(InText));
    END;

    BEGIN
    END.
  }
}

