OBJECT Page 9062328 AutoNAV Task Queue List Tasks
{
  OBJECT-PROPERTIES
  {
    Date=29/11/18;
    Time=12:20:19 PM;
    Modified=Yes;
    Version List=NA2016.12;
  }
  PROPERTIES
  {
    CaptionML=[ENU=AutoNAV Task Queue List Tasks;
               ENG=AutoNAV Task Queue List Tasks];
    SourceTable=Table9062734;
    PopulateAllFields=Yes;
    SourceTableView=SORTING(AutoNAV Task Queue Code,Priority);
    PageType=ListPart;
    CardPageID=AutoNAV Task Card;
    OnAfterGetRecord=BEGIN
                       AutoNavTaskPageManagement.AutoNavTaskImage(Rec, ImageBuffer);
                     END;

    ActionList=ACTIONS
    {
      { 1000000013;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1000000004;1 ;Action    ;
                      Name=EditAction;
                      CaptionML=[ENU=Edit;
                                 ENG=Edit];
                      RunObject=Page 9063090;
                      RunPageOnRec=Yes;
                      Promoted=Yes;
                      Image=Edit;
                      PromotedCategory=Process }
      { 1000000011;1 ;Action    ;
                      Name=SetReadyAction;
                      CaptionML=[ENU=Set Ready;
                                 ENG=Set Ready];
                      Promoted=Yes;
                      Image=ResetStatus;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SetManualAction(TRUE);
                                 SetStatus(Status::Ready);
                                 SetManualAction(FALSE);
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1000000010;1 ;Action    ;
                      Name=SetOnHoldAction;
                      CaptionML=[ENU=Set On Hold;
                                 ENG=Set On Hold];
                      Promoted=Yes;
                      Image=Pause;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SetManualAction(TRUE);
                                 SetStatus(Status::"On Hold");
                                 SetManualAction(FALSE);
                               END;
                                }
      { 1000000009;1 ;Action    ;
                      Name=ShowErrorAction;
                      CaptionML=[ENU=Show Error;
                                 ENG=Show Error];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Error;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowErrorMessage();
                               END;
                                }
      { 9062232 ;1   ;Action    ;
                      Name=LogAction;
                      CaptionML=[ENU=Log;
                                 ENG=Log];
                      RunObject=Page 9062330;
                      RunPageLink=AutoNAV Task Queue Code=FIELD(AutoNAV Task Queue Code),
                                  AutoNAV Task ID=FIELD(ID);
                      Promoted=Yes;
                      Image=Log;
                      PromotedCategory=Process }
      { 9062231 ;1   ;Separator  }
      { 9062230 ;1   ;Action    ;
                      Name=UpAction;
                      CaptionML=[ENU=Up;
                                 ENG=Up];
                      Promoted=Yes;
                      Image=MoveUp;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IF (AutoNavTaskPageManagement.AutoNavTaskUp(Rec)) THEN
                                   CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 9062229 ;1   ;Action    ;
                      Name=DownAction;
                      CaptionML=[ENU=Down;
                                 ENG=Down];
                      Promoted=Yes;
                      Image=MoveDown;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IF (AutoNavTaskPageManagement.AutoNavTaskDown(Rec)) THEN
                                   CurrPage.UPDATE(FALSE);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1000000000;0;Container;
                ContainerType=ContentArea }

    { 1000000001;1;Group  ;
                Name=Group;
                CaptionML=[ENU=Group;
                           ENG=Group];
                GroupType=Repeater }

    { 1000000027;2;Field  ;
                Name=Health;
                CaptionML=[ENU=Health;
                           ENG=Health];
                SourceExpr=ImageBuffer.Picture }

    { 1000000002;2;Field  ;
                SourceExpr=Description;
                Editable=FALSE }

    { 1000000006;2;Field  ;
                SourceExpr=Status }

    { 1000000003;2;Field  ;
                SourceExpr="No. of Minutes between Runs" }

    { 1000000005;2;Field  ;
                SourceExpr="Last Ready State" }

    { 1000000007;2;Field  ;
                SourceExpr="Earliest Start Date/Time" }

    { 1000000012;2;Field  ;
                SourceExpr="No. of Failures";
                Editable=FALSE;
                Style=Unfavorable;
                StyleExpr=TRUE;
                OnDrillDown=BEGIN
                              ShowErrorMessage();
                            END;
                             }

  }
  CODE
  {
    VAR
      ImageBuffer@1000000000 : Record 9062717;
      AutoNavTaskPageManagement@9062229 : Codeunit 9062601;

    BEGIN
    {
      //DOC NA2015.1  JH 10/04/2013 - Created
      //DOC NA2015.4  JH 02/01/2015 - Improvements
      //DOC NA2016.10 JH 01/09/2015 - Completely rebuilt for 2016
      //DOC NA2016.12 JH 17/12/2015 - Bugfixes
      //DOC MOD001  PCM 08/02/17 - Added field "No. of Minutes between Runs".
    }
    END.
  }
}

