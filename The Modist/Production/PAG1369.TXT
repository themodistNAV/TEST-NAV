OBJECT Page 1369 Mini Purchase Credit Memo
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00,NAVGB9.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Purchase Credit Memo;
               ENG=Purchase Credit Memo];
    SourceTable=Table38;
    SourceTableView=WHERE(Document Type=FILTER(Credit Memo));
    PageType=Document;
    RefreshOnActivate=Yes;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Invoice,Posting,View;
                                ENG=New,Process,Report,Invoice,Posting,View];
    OnInit=BEGIN
             ShowPayToShipToTab := FALSE;
             ShowCurrencyTab := FALSE;
             SetExtDocNoMandatoryCondition;
           END;

    OnOpenPage=VAR
                 FileManagement@1000 : Codeunit 419;
               BEGIN
                 IF UserSetupManagement.GetPurchasesFilter <> '' THEN BEGIN
                   FILTERGROUP(2);
                   SETRANGE("Responsibility Center",UserSetupManagement.GetPurchasesFilter);
                   FILTERGROUP(0);
                 END;

                 AllowDotNetAddIn := FileManagement.CanRunDotNetOnClient;
               END;

    OnAfterGetRecord=BEGIN
                       HasIncomingDocument := "Incoming Document Entry No." <> 0;
                       SetExtDocNoMandatoryCondition;
                     END;

    OnNewRecord=BEGIN
                  "Responsibility Center" := UserSetupManagement.GetPurchasesFilter;
                END;

    OnDeleteRecord=BEGIN
                     CurrPage.SAVERECORD;
                     EXIT(ConfirmDeletion);
                   END;

    ActionList=ACTIONS
    {
      { 1900000003;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 2       ;1   ;ActionGroup;
                      Name=Manage;
                      CaptionML=[ENU=Manage;
                                 ENG=Manage] }
      { 64      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Copy Document;
                                 ENG=Copy Document];
                      ToolTipML=[ENU=Copy document lines and header information from another purchase document to this document. You can copy a posted purchase invoice into a new purchase invoice to quickly create a similar document.;
                                 ENG=Copy document lines and header information from another purchase document to this document. You can copy a posted purchase invoice into a new purchase invoice to quickly create a similar document.];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=CopyDocument;
                      PromotedCategory=New;
                      OnAction=VAR
                                 CopyPurchDoc@1000 : Report 492;
                               BEGIN
                                 CopyPurchDoc.SetPurchHeader(Rec);
                                 CopyPurchDoc.RUNMODAL;
                               END;
                                }
      { 57      ;1   ;ActionGroup;
                      Name=Invoice;
                      CaptionML=[ENU=&Credit Memo;
                                 ENG=&Credit Memo];
                      Image=CreditMemo }
      { 60      ;2   ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Vendor;
                                 ENG=Vendor];
                      ToolTipML=[ENU=View or edit detailed information about the vendor on the purchase document.;
                                 ENG=View or edit detailed information about the vendor on the purchase document.];
                      RunObject=Page 1330;
                      RunPageLink=No.=FIELD(Buy-from Vendor No.);
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Vendor;
                      PromotedCategory=Category4 }
      { 10      ;2   ;Action    ;
                      Name=Dimensions;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 ENG=Dimensions];
                      ToolTipML=[ENU=View or edit the dimension sets that are set up for the vendor on the purchase document.;
                                 ENG=View or edit the dimension sets that are set up for the vendor on the purchase document.];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Dimensions;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 ShowDocDim;
                                 CurrPage.SAVERECORD;
                               END;
                                }
      { 46      ;2   ;ActionGroup;
                      Name=IncomingDocument;
                      CaptionML=[ENU=Incoming Document;
                                 ENG=Incoming Document];
                      ActionContainerType=NewDocumentItems;
                      Image=Documents }
      { 32      ;3   ;Action    ;
                      Name=IncomingDocCard;
                      CaptionML=[ENU=View Incoming Document;
                                 ENG=View Incoming Document];
                      ToolTipML=;
                      Enabled=HasIncomingDocument;
                      Image=ViewOrder;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record 130;
                               BEGIN
                                 IncomingDocument.ShowCardFromEntryNo("Incoming Document Entry No.");
                               END;
                                }
      { 29      ;3   ;Action    ;
                      Name=SelectIncomingDoc;
                      AccessByPermission=TableData 130=R;
                      CaptionML=[ENU=Select Incoming Document;
                                 ENG=Select Incoming Document];
                      ToolTipML=;
                      Image=SelectLineToApply;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record 130;
                               BEGIN
                                 VALIDATE("Incoming Document Entry No.",IncomingDocument.SelectIncomingDocument("Incoming Document Entry No."));
                               END;
                                }
      { 27      ;3   ;Action    ;
                      Name=IncomingDocAttachFile;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Create Incoming Document from File;
                                 ENG=Create Incoming Document from File];
                      ToolTipML=;
                      Enabled=NOT HasIncomingDocument;
                      Image=Attach;
                      OnAction=VAR
                                 IncomingDocumentAttachment@1000 : Record 133;
                               BEGIN
                                 IncomingDocumentAttachment.NewAttachmentFromPurchaseDocument(Rec);
                               END;
                                }
      { 25      ;3   ;Action    ;
                      Name=RemoveIncomingDoc;
                      CaptionML=[ENU=Remove Incoming Document;
                                 ENG=Remove Incoming Document];
                      ToolTipML=;
                      Enabled=HasIncomingDocument;
                      Image=RemoveLine;
                      OnAction=BEGIN
                                 "Incoming Document Entry No." := 0;
                               END;
                                }
      { 41      ;1   ;ActionGroup;
                      Name=Apply;
                      CaptionML=[ENU=Apply;
                                 ENG=Apply] }
      { 45      ;2   ;Action    ;
                      Name=ApplyEntries;
                      ShortCutKey=Shift+F11;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Apply Entries;
                                 ENG=Apply Entries];
                      ToolTipML=[ENU=Select one or more posted purchase documents that you want the purchase credit memo to be applied to.;
                                 ENG=Select one or more posted purchase documents that you want the purchase credit memo to be applied to.];
                      RunObject=Codeunit 402;
                      Promoted=No;
                      Image=ApplyEntries;
                      PromotedCategory=Process }
      { 69      ;1   ;ActionGroup;
                      Name=Posting;
                      CaptionML=[ENU=P&osting;
                                 ENG=P&osting];
                      Image=Post }
      { 71      ;2   ;Action    ;
                      Name=Post;
                      ShortCutKey=F9;
                      CaptionML=[ENU=P&ost;
                                 ENG=P&ost];
                      ToolTipML=[ENU=Finalize the purchase document. Posting updates your books with the document's amounts and quantities.;
                                 ENG=Finalise the purchase document. Posting updates your books with the document's amounts and quantities.];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostOrder;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 Post(CODEUNIT::"Purch.-Post (Yes/No)");
                               END;
                                }
      { 47      ;2   ;Action    ;
                      Name=Preview;
                      CaptionML=[ENU=Preview Posting;
                                 ENG=Preview Posting];
                      Image=ViewPostedOrder;
                      OnAction=VAR
                                 PurchPostYesNo@1000 : Codeunit 91;
                               BEGIN
                                 PurchPostYesNo.Preview(Rec);
                               END;
                                }
      { 31      ;2   ;Action    ;
                      Name=Print;
                      Ellipsis=Yes;
                      CaptionML=[ENU=&Print;
                                 ENG=&Print];
                      ToolTipML=[ENU=Print a copy of the purchase credit memo.;
                                 ENG=Print a copy of the purchase credit memo.];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Print;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 PostAndPrint(CODEUNIT::"Purch.-Post");
                               END;
                                }
      { 3       ;1   ;ActionGroup;
                      Name=View;
                      CaptionML=[ENU=View;
                                 ENG=View] }
      { 4       ;2   ;Action    ;
                      Name=Pay-to and Ship-to Address;
                      CaptionML=[ENU=Ship-to and Pay-to Address;
                                 ENG=Ship-to and Pay-to Address];
                      ToolTipML=[ENU=Show fields for the vendor's payment and shipping addresses. The shipping address is used when you return items to the vendor. You can specify a different address where the item or service is delivered or specify a different address where the document is sent.;
                                 ENG=Show fields for the vendor's payment and shipping addresses. The shipping address is used when you return items to the vendor. You can specify a different address where the item or service is delivered or specify a different address where the document is sent.];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ShipAddress;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 ShowPayToShipToTab := NOT ShowPayToShipToTab;
                               END;
                                }
      { 5       ;2   ;Action    ;
                      Name=Currency;
                      CaptionML=[ENU=Currency;
                                 ENG=Currency];
                      ToolTipML=[ENU=Show a field to specify an alternate currency. You can specify a currency that is different than your local currency for amounts on this purchase document.;
                                 ENG=Show a field to specify an alternate currency. You can specify a currency that is different than your local currency for amounts on this purchase document.];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Currency;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 ShowCurrencyTab := NOT ShowCurrencyTab;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=General;
                CaptionML=[ENU=General;
                           ENG=General];
                GroupType=Group }

    { 13  ;2   ;Group     ;
                Name=VendorDetails;
                CaptionML=[ENU=Vendor Details;
                           ENG=Vendor Details];
                GroupType=Group }

    { 6   ;3   ;Field     ;
                CaptionML=[ENU=Vendor Name;
                           ENG=Vendor Name];
                ToolTipML=[ENU=Specifies the name of the vendor who ships the items.;
                           ENG=Specifies the name of the vendor who ships the items.];
                NotBlank=Yes;
                SourceExpr="Buy-from Vendor Name";
                TableRelation=Vendor.Name;
                LookupPageID=Mini Vendor List;
                DrillDownPageID=Mini Vendor List;
                OnValidate=VAR
                             NewVendNo@1000 : Code[20];
                           BEGIN
                             IF "No." = '' THEN
                               InitRecord;
                             IF "Buy-from Vendor Name" <> xRec."Buy-from Vendor Name" THEN BEGIN
                               NewVendNo := MiniVendorMgt.GetVendorNoByName("Buy-from Vendor Name");
                               VALIDATE("Buy-from Vendor No.",NewVendNo);
                             END;
                             CurrPage.UPDATE;
                             MiniPurchCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);
                           END;

                ShowMandatory=TRUE }

    { 75  ;3   ;Field     ;
                CaptionML=[ENU=Address;
                           ENG=Address];
                ToolTipML=[ENU=Specifies the address of the vendor who ships the items.;
                           ENG=Specifies the address of the vendor who ships the items.];
                SourceExpr="Buy-from Address" }

    { 11  ;3   ;Field     ;
                CaptionML=[ENU=Address 2;
                           ENG=Address 2];
                ToolTipML=[ENU=Specifies an additional part of the address of the vendor who ships the items.;
                           ENG=Specifies an additional part of the address of the vendor who ships the items.];
                SourceExpr="Buy-from Address 2" }

    { 80  ;3   ;Field     ;
                CaptionML=[ENU=Post Code;
                           ENG=Post Code];
                ToolTipML=[ENU=Specifies the post code of the vendor's address that items are purchased from.;
                           ENG=Specifies the post code of the vendor's address that items are purchased from.];
                SourceExpr="Buy-from Post Code" }

    { 79  ;3   ;Field     ;
                CaptionML=[ENU=City;
                           ENG=City];
                ToolTipML=[ENU=Specifies the city name of the vendor who ships the items.;
                           ENG=Specifies the city name of the vendor who ships the items.];
                SourceExpr="Buy-from City" }

    { 1040000;3;Field     ;
                CaptionML=[ENU=County;
                           ENG=County];
                ToolTipML=[ENU=Specifies the county of the vendor's address that the items are purchased from.;
                           ENG=Specifies the county of the vendor's address that the items are purchased from.];
                SourceExpr="Buy-from County" }

    { 8   ;3   ;Field     ;
                CaptionML=[ENU=Contact;
                           ENG=Contact];
                ToolTipML=[ENU=Specifies the name of the person to contact about shipment of the item from this vendor.;
                           ENG=Specifies the name of the person to contact about shipment of the item from this vendor.];
                SourceExpr="Buy-from Contact" }

    { 15  ;2   ;Group     ;
                Name=InvoiceDetails;
                CaptionML=[ENU=Invoice Details;
                           ENG=Invoice Details];
                GroupType=Group }

    { 12  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the date when the posting of the purchase document will be recorded. By default, today's date is entered.;
                           ENG=Specifies the date when the posting of the purchase document will be recorded. By default, today's date is entered.];
                SourceExpr="Posting Date";
                Importance=Promoted }

    { 43  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the date on which the vendor created the purchase document (the date of the vendor's invoice).;
                           ENG=Specifies the date on which the vendor created the purchase document (the date of the vendor's invoice).];
                SourceExpr="Document Date" }

    { 33  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the date you expect to receive the items on the purchase document.;
                           ENG=Specifies the date you expect to receive the items on the purchase document.];
                SourceExpr="Expected Receipt Date" }

    { 121 ;3   ;Field     ;
                ToolTipML=[ENU=Specifies whether the unit price on the line should be displayed including or excluding VAT.;
                           ENG=Specifies whether the unit price on the line should be displayed including or excluding VAT.];
                SourceExpr="Prices Including VAT";
                Visible=FALSE;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                             CALCFIELDS("Invoice Discount Amount");
                             MiniPurchCalcDiscByType.ApplyDefaultInvoiceDiscount("Invoice Discount Amount",Rec);
                           END;
                            }

    { 156 ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the vendor's VAT specification to link transactions made for this vendor with the appropriate general ledger account according to the VAT posting setup.;
                           ENG=Specifies the vendor's VAT specification to link transactions made for this vendor with the appropriate general ledger account according to the VAT posting setup.];
                SourceExpr="VAT Bus. Posting Group";
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                             MiniPurchCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);
                           END;
                            }

    { 112 ;3   ;Field     ;
                ToolTipML=[ENU=Specifies whether the record is open, is waiting to be approved, has been invoiced for prepayment, or has been released to the next stage of processing.;
                           ENG=Specifies whether the record is open, is waiting to be approved, has been invoiced for prepayment, or has been released to the next stage of processing.];
                SourceExpr=Status;
                Importance=Promoted;
                Visible=FALSE }

    { 30  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the number that the vendor uses for the credit memo you are creating in this purchase credit memo header.;
                           ENG=Specifies the number that the vendor uses for the credit memo you are creating in this purchase credit memo header.];
                SourceExpr="Vendor Cr. Memo No.";
                ShowMandatory=VendorCreditMemoNoMandatory }

    { 23  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the number for the transaction type, for the purpose of reporting to INTRASTAT.;
                           ENG=Specifies the number for the transaction type, for the purpose of reporting to INTRASTAT.];
                SourceExpr="Transaction Type" }

    { 17  ;2   ;Group     ;
                Name=PaymentDetails;
                CaptionML=[ENU=Payment Details;
                           ENG=Payment Details];
                GroupType=Group }

    { 26  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies a formula that calculates the payment due date, payment discount date, and payment discount amount on the purchase document. By default, the payment term from the vendor card is entered.;
                           ENG=Specifies a formula that calculates the payment due date, payment discount date, and payment discount amount on the purchase document. By default, the payment term from the vendor card is entered.];
                SourceExpr="Payment Terms Code";
                Importance=Promoted }

    { 28  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies when the invoice is due. The program calculates the date using the Payment Terms Code and Document Date fields.;
                           ENG=Specifies when the invoice is due. The program calculates the date using the Payment Terms Code and Document Date fields.];
                SourceExpr="Due Date";
                Importance=Promoted }

    { 101 ;3   ;Field     ;
                ToolTipML=[ENU=Specifies how payment for the purchase document must be submitted, such as bank transfer or check. By default, the payment method from the vendor card is entered.;
                           ENG=Specifies how payment for the purchase document must be submitted, such as bank transfer or cheque. By default, the payment method from the vendor card is entered.];
                SourceExpr="Payment Method Code" }

    { 35  ;2   ;Group     ;
                Name=Application;
                CaptionML=[ENU=Application Details;
                           ENG=Application Details];
                GroupType=Group }

    { 37  ;3   ;Field     ;
                ToolTipML=[ENU=You can use this field when you post the purchase header, to have the program apply it to a document that has already been posted. In this case, enter here the type of document that you want it to be applied to.;
                           ENG=You can use this field when you post the purchase header, to have the program apply it to a document that has already been posted. In this case, enter here the type of document that you want it to be applied to.];
                SourceExpr="Applies-to Doc. Type" }

    { 39  ;3   ;Field     ;
                ToolTipML=[ENU=You can use this field if you want to apply the purchase header to a document that has already been posted. If so, enter the number of the document that the purchase header should be applied to.;
                           ENG=You can use this field if you want to apply the purchase header to a document that has already been posted. If so, enter the number of the document that the purchase header should be applied to.];
                SourceExpr="Applies-to Doc. No." }

    { 40  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the applies-to ID of entries that will be applied to by the purchase document if you use the Apply Entries function.;
                           ENG=Specifies the applies-to ID of entries that will be applied to by the purchase document if you use the Apply Entries function.];
                SourceExpr="Applies-to ID" }

    { 7   ;2   ;Group     ;
                Name=Currency;
                CaptionML=[ENU=Currency;
                           ENG=Currency];
                Visible=ShowCurrencyTab;
                GroupType=Group }

    { 107 ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the code of the currency of the amounts on the purchase lines.;
                           ENG=Specifies the code of the currency of the amounts on the purchase lines.];
                SourceExpr="Currency Code";
                Importance=Promoted;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                             MiniPurchCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);
                           END;

                OnAssistEdit=VAR
                               ChangeExchangeRate@1000 : Page 511;
                             BEGIN
                               IF "Posting Date" <> 0D THEN
                                 ChangeExchangeRate.SetParameter("Currency Code","Currency Factor","Posting Date")
                               ELSE
                                 ChangeExchangeRate.SetParameter("Currency Code","Currency Factor",WORKDATE);
                               IF ChangeExchangeRate.RUNMODAL = ACTION::OK THEN BEGIN
                                 VALIDATE("Currency Factor",ChangeExchangeRate.GetParameter);
                                 CurrPage.UPDATE;
                               END;
                             END;
                              }

    { 56  ;1   ;Part      ;
                Name=PurchLines;
                SubPageLink=Document No.=FIELD(No.);
                PagePartID=Page1370 }

    { 1905885101;1;Group  ;
                Name=PaytoandShiptoAddresses;
                CaptionML=[ENU=Pay-to and Ship-to Addresses;
                           ENG=Pay-to and Ship-to Addresses];
                Visible=ShowPayToShipToTab;
                GroupType=Group }

    { 19  ;2   ;Group     ;
                Name=PayToVendor;
                CaptionML=[ENU=Pay-to Vendor;
                           ENG=Pay-to Vendor];
                GroupType=Group }

    { 14  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the vendor who is sending the invoice.;
                           ENG=Specifies the vendor who is sending the invoice.];
                SourceExpr="Pay-to Vendor No.";
                Importance=Promoted;
                LookupPageID=Mini Vendor List;
                DrillDownPageID=Mini Vendor List;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                             MiniPurchCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);
                           END;
                            }

    { 16  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the vendor sending the invoice.;
                           ENG=Specifies the name of the vendor sending the invoice.];
                SourceExpr="Pay-to Name" }

    { 18  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the address of the vendor sending the invoice.;
                           ENG=Specifies the address of the vendor sending the invoice.];
                SourceExpr="Pay-to Address" }

    { 9   ;3   ;Field     ;
                ToolTipML=[ENU=Contains another line of the address of the vendor who sends the invoice.;
                           ENG=Contains another line of the address of the vendor who sends the invoice.];
                SourceExpr="Pay-to Address 2" }

    { 85  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the post code of the vendor's address that payment is made to.;
                           ENG=Specifies the post code of the vendor's address that payment is made to.];
                SourceExpr="Pay-to Post Code" }

    { 22  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the city name of the vendor sending the invoice.;
                           ENG=Specifies the city name of the vendor sending the invoice.];
                SourceExpr="Pay-to City" }

    { 1040001;3;Field     ;
                CaptionML=[ENU=County;
                           ENG=County];
                ToolTipML=[ENU=Specifies the county of the vendor's address that payment is made to.;
                           ENG=Specifies the county of the vendor's address that payment is made to.];
                SourceExpr="Pay-to County" }

    { 24  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the person to contact about an invoice from this vendor.;
                           ENG=Specifies the name of the person to contact about an invoice from this vendor.];
                SourceExpr="Pay-to Contact" }

    { 21  ;2   ;Group     ;
                Name=Shiptoaddress;
                CaptionML=[ENU=Ship-to address;
                           ENG=Ship-to address];
                GroupType=Group }

    { 34  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies a ship-to code if you want a different shipment address from the one that has been automatically entered. To see the ship-to codes that have been set up in the Ship-to Address table, click the field.;
                           ENG=Specifies a ship-to code if you want a different shipment address from the one that has been automatically entered. To see the ship-to codes that have been set up in the Ship-to Address table, click the field.];
                SourceExpr="Ship-to Code";
                Importance=Promoted }

    { 36  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the company at the address to which you want the items in the purchase order to be shipped.;
                           ENG=Specifies the name of the company at the address to which you want the items in the purchase order to be shipped.];
                SourceExpr="Ship-to Name" }

    { 38  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the address that you want the items in the purchase order to be shipped to.;
                           ENG=Specifies the address that you want the items in the purchase order to be shipped to.];
                SourceExpr="Ship-to Address" }

    { 20  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies an additional part of the address to which you want the items in the purchase order to be shipped.;
                           ENG=Specifies an additional part of the address to which you want the items in the purchase order to be shipped.];
                SourceExpr="Ship-to Address 2" }

    { 93  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the post code of the shipping address.;
                           ENG=Specifies the post code of the shipping address.];
                SourceExpr="Ship-to Post Code" }

    { 42  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the city name of the address thta the items in the purchase order will be shipped to.;
                           ENG=Specifies the city name of the address thta the items in the purchase order will be shipped to.];
                SourceExpr="Ship-to City" }

    { 1040002;3;Field     ;
                CaptionML=[ENU=County;
                           ENG=County];
                ToolTipML=[ENU=Specifies the county of the shipping address.;
                           ENG=Specifies the county of the shipping address.];
                SourceExpr="Ship-to County" }

    { 44  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the name of a contact person for the address where the items in the purchase order should be shipped.;
                           ENG=Specifies the name of a contact person for the address where the items in the purchase order should be shipped.];
                SourceExpr="Ship-to Contact" }

  }
  CODE
  {
    VAR
      UserSetupManagement@1004 : Codeunit 5700;
      MiniPurchCalcDiscByType@1002 : Codeunit 1310;
      MiniVendorMgt@1000 : Codeunit 1312;
      MiniLinesInstructionMgt@1001 : Codeunit 1320;
      HasIncomingDocument@1010 : Boolean;
      ShowPayToShipToTab@1005 : Boolean;
      ShowCurrencyTab@1007 : Boolean;
      OpenPostedPurchCrMemoQst@1006 : TextConst 'ENU=The credit memo has been posted and archived.\\Do you want to open the posted credit memo from the Posted Purchase Credit Memo list?;ENG=The credit memo has been posted and archived.\\Do you want to open the posted credit memo from the Posted Purchase Credit Memo list?';
      PostAndPrintQst@1003 : TextConst 'ENU=Do you want to post and print the credit memo?;ENG=Do you want to post and print the credit memo?';
      AllowDotNetAddIn@1008 : Boolean INDATASET;
      VendorCreditMemoNoMandatory@1009 : Boolean;

    LOCAL PROCEDURE Post@4(PostingCodeunitID@1000 : Integer);
    VAR
      PreAssignedNo@1001 : Code[20];
    BEGIN
      MiniLinesInstructionMgt.PurchaseCheckAllLinesHaveQuantityAssigned(Rec);
      PreAssignedNo := "No.";
      SendToPosting(PostingCodeunitID);
      IF "Job Queue Status" = "Job Queue Status"::"Scheduled for Posting" THEN
        CurrPage.CLOSE
      ELSE
        ShowPostedConfirmationMessage(PreAssignedNo);
    END;

    LOCAL PROCEDURE PostAndPrint@1(PostingCodeunitID@1000 : Integer);
    VAR
      PurchCrMemoHdr@1001 : Record 124;
      DocumentNo@1002 : Code[20];
      PreAssignedNo@1003 : Code[20];
    BEGIN
      MiniLinesInstructionMgt.PurchaseCheckAllLinesHaveQuantityAssigned(Rec);

      IF NOT CONFIRM(PostAndPrintQst,FALSE) THEN
        EXIT;

      PreAssignedNo := "No.";
      SendToPosting(PostingCodeunitID);

      IF "Last Posting No." = '' THEN
        DocumentNo := "No."
      ELSE
        DocumentNo := "Last Posting No.";

      IF PurchCrMemoHdr.GET(DocumentNo) THEN BEGIN
        PurchCrMemoHdr.SETRECFILTER;
        COMMIT;
        PurchCrMemoHdr.PrintRecords(NOT AllowDotNetAddIn);
        ShowPostedConfirmationMessage(PreAssignedNo);
      END;
    END;

    LOCAL PROCEDURE ShowPostedConfirmationMessage@7(PreAssignedNo@1001 : Code[20]);
    VAR
      PurchCrMemoHdr@1000 : Record 124;
    BEGIN
      PurchCrMemoHdr.SETRANGE("Pre-Assigned No.",PreAssignedNo);
      IF PurchCrMemoHdr.FINDFIRST THEN
        IF DIALOG.CONFIRM(OpenPostedPurchCrMemoQst,FALSE) THEN
          PAGE.RUN(PAGE::"Mini Posted Purch. Credit Memo",PurchCrMemoHdr);
    END;

    LOCAL PROCEDURE SetExtDocNoMandatoryCondition@3();
    VAR
      PurchasesPayablesSetup@1000 : Record 312;
    BEGIN
      PurchasesPayablesSetup.GET;
      VendorCreditMemoNoMandatory := PurchasesPayablesSetup."Ext. Doc. No. Mandatory"
    END;

    BEGIN
    END.
  }
}

