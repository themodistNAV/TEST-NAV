OBJECT Codeunit 1704 Exp. Pre-Mapping Det Pos. Pay
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    TableNo=1220;
    Permissions=TableData 1241=rimd;
    OnRun=VAR
            CheckLedgerEntry@1000 : Record 272;
            LineNo@1001 : Integer;
          BEGIN
            CheckLedgerEntry.SETRANGE("Data Exch. Entry No.","Entry No.");
            PreparePosPayDetails(CheckLedgerEntry,"Entry No.",LineNo);

            // Reset filters and set it on the Data Exch. Voided Entry No.
            CheckLedgerEntry.RESET;
            CheckLedgerEntry.SETRANGE("Data Exch. Voided Entry No.","Entry No.");
            PreparePosPayDetails(CheckLedgerEntry,"Entry No.",LineNo);
          END;

  }
  CODE
  {
    VAR
      ProgressMsg@1000 : TextConst 'ENU=Preprocessing line no. #1######.;ENG=Preprocessing line no. #1######.';

    LOCAL PROCEDURE PreparePosPayDetails@2(VAR CheckLedgerEntry@1000 : Record 272;DataExchangeEntryNo@1002 : Integer;VAR LineNo@1001 : Integer);
    VAR
      Window@1003 : Dialog;
    BEGIN
      IF CheckLedgerEntry.FINDSET THEN BEGIN
        Window.OPEN(ProgressMsg);
        REPEAT
          LineNo += 1;
          Window.UPDATE(1,LineNo);
          PreparePosPayDetail(CheckLedgerEntry,DataExchangeEntryNo,LineNo);
        UNTIL CheckLedgerEntry.NEXT = 0;
        Window.CLOSE;
      END;
    END;

    LOCAL PROCEDURE PreparePosPayDetail@1(CheckLedgerEntry@1000 : Record 272;DataExchangeEntryNo@1001 : Integer;LineNo@1002 : Integer);
    VAR
      BankAccount@1003 : Record 270;
      PosPayDetail@1004 : Record 1241;
    BEGIN
      BankAccount.GET(CheckLedgerEntry."Bank Account No.");

      WITH PosPayDetail DO BEGIN
        INIT;
        "Data Exch. Entry No." := DataExchangeEntryNo;
        "Entry No." := LineNo;
        "Account Number" := BankAccount."Bank Account No.";
        IF DataExchangeEntryNo = CheckLedgerEntry."Data Exch. Voided Entry No." THEN BEGIN
          // V for Void legend
          "Record Type Code" := 'V';
          "Void Check Indicator" := 'V';
        END ELSE BEGIN
          // O for Open legend
          "Record Type Code" := 'O';
          "Void Check Indicator" := '';
        END;
        "Check Number" := CheckLedgerEntry."Check No.";
        Amount := CheckLedgerEntry.Amount;
        Payee := CheckLedgerEntry.GetPayee;
        "Issue Date" := CheckLedgerEntry."Check Date";
        IF BankAccount."Currency Code" <> '' THEN
          "Currency Code" := BankAccount."Currency Code";

        INSERT(TRUE);
      END;
    END;

    BEGIN
    END.
  }
}

