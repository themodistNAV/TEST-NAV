OBJECT Page 5786 Source Document Filter Card
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Source Document Filter Card;
               ENG=Source Document Filter Card];
    LinksAllowed=No;
    SourceTable=Table5771;
    PageType=Card;
    OnInit=BEGIN
             ShippingAgentServiceFilterEnab := TRUE;
             ShippingAgentCodeFilterEnable := TRUE;
             "Inbound TransfersEnable" := TRUE;
             "Sales Return OrdersEnable" := TRUE;
             "Purchase OrdersEnable" := TRUE;
             "Outbound TransfersEnable" := TRUE;
             "Purchase Return OrdersEnable" := TRUE;
             "Sales OrdersEnable" := TRUE;
           END;

    OnOpenPage=BEGIN
                 DataCaption := CurrPage.CAPTION;
                 FILTERGROUP := 2;
                 IF GETFILTER(Type) <> '' THEN
                   DataCaption := DataCaption + ' - ' + GETFILTER(Type);
                 FILTERGROUP := 0;
                 CurrPage.CAPTION(DataCaption);

                 EnableControls;
               END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 17      ;1   ;Action    ;
                      Name=Run;
                      CaptionML=[ENU=&Run;
                                 ENG=&Run];
                      Promoted=Yes;
                      Image=Start;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 GetSourceBatch@1001 : Report 5753;
                               BEGIN
                                 "Planned Delivery Date" := COPYSTR(GETFILTER("Planned Delivery Date Filter"),1,MAXSTRLEN("Planned Delivery Date"));
                                 "Planned Shipment Date" := COPYSTR(GETFILTER("Planned Shipment Date Filter"),1,MAXSTRLEN("Planned Shipment Date"));
                                 "Sales Shipment Date" := COPYSTR(GETFILTER("Sales Shipment Date Filter"),1,MAXSTRLEN("Sales Shipment Date"));
                                 "Planned Receipt Date" := COPYSTR(GETFILTER("Planned Receipt Date Filter"),1,MAXSTRLEN("Planned Receipt Date"));
                                 "Expected Receipt Date" := COPYSTR(GETFILTER("Expected Receipt Date Filter"),1,MAXSTRLEN("Expected Receipt Date"));
                                 "Shipment Date" := COPYSTR(GETFILTER("Shipment Date Filter"),1,MAXSTRLEN("Shipment Date"));
                                 "Receipt Date" := COPYSTR(GETFILTER("Receipt Date Filter"),1,MAXSTRLEN("Receipt Date"));

                                 CASE RequestType OF
                                   RequestType::Receive:
                                     BEGIN
                                       GetSourceBatch.SetOneCreatedReceiptHeader(WhseReceiptHeader);
                                       SetFilters(GetSourceBatch,WhseReceiptHeader."Location Code");
                                     END;
                                   RequestType::Ship:
                                     BEGIN
                                       GetSourceBatch.SetOneCreatedShptHeader(WhseShptHeader);
                                       SetFilters(GetSourceBatch,WhseShptHeader."Location Code");
                                     END;
                                 END;

                                 GetSourceBatch.USEREQUESTPAGE("Show Filter Request");
                                 GetSourceBatch.RUNMODAL;
                                 IF GetSourceBatch.NotCancelled THEN
                                   CurrPage.CLOSE;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=[ENU=General;
                           ENG=General] }

    { 2   ;2   ;Field     ;
                SourceExpr=Code }

    { 4   ;2   ;Field     ;
                SourceExpr=Description }

    { 70  ;2   ;Field     ;
                SourceExpr="Source No. Filter" }

    { 6   ;2   ;Field     ;
                SourceExpr="Item No. Filter" }

    { 8   ;2   ;Field     ;
                SourceExpr="Variant Code Filter" }

    { 10  ;2   ;Field     ;
                SourceExpr="Unit of Measure Filter" }

    { 32  ;2   ;Field     ;
                SourceExpr="Shipment Method Code Filter" }

    { 18  ;2   ;Field     ;
                SourceExpr="Show Filter Request" }

    { 26  ;2   ;Field     ;
                SourceExpr="Sales Return Orders";
                Enabled="Sales Return OrdersEnable" }

    { 28  ;2   ;Field     ;
                SourceExpr="Purchase Orders";
                Enabled="Purchase OrdersEnable" }

    { 54  ;2   ;Field     ;
                SourceExpr="Inbound Transfers";
                Enabled="Inbound TransfersEnable";
                OnValidate=BEGIN
                             InboundTransfersOnAfterValidat;
                           END;
                            }

    { 34  ;2   ;Field     ;
                SourceExpr="Shipping Agent Code Filter";
                Enabled=ShippingAgentCodeFilterEnable }

    { 40  ;2   ;Field     ;
                SourceExpr="Shipping Agent Service Filter";
                Enabled=ShippingAgentServiceFilterEnab }

    { 22  ;2   ;Field     ;
                SourceExpr="Do Not Fill Qty. to Handle" }

    { 52  ;2   ;Group     ;
                CaptionML=[ENU=Source Document:;
                           ENG=Source Document:] }

    { 15  ;3   ;Field     ;
                SourceExpr="Sales Orders";
                Enabled="Sales OrdersEnable";
                OnValidate=BEGIN
                             SalesOrdersOnAfterValidate;
                           END;
                            }

    { 3   ;3   ;Field     ;
                SourceExpr="Service Orders" }

    { 38  ;3   ;Field     ;
                SourceExpr="Purchase Return Orders";
                Enabled="Purchase Return OrdersEnable" }

    { 56  ;3   ;Field     ;
                SourceExpr="Outbound Transfers";
                Enabled="Outbound TransfersEnable";
                OnValidate=BEGIN
                             OutboundTransfersOnAfterValida;
                           END;
                            }

    { 36  ;2   ;Group     ;
                CaptionML=[ENU=Shipping Advice Filter:;
                           ENG=Shipping Advice Filter:] }

    { 37  ;3   ;Field     ;
                SourceExpr=Partial }

    { 60  ;3   ;Field     ;
                SourceExpr=Complete }

    { 1904305601;1;Group  ;
                CaptionML=[ENU=Sales;
                           ENG=Sales] }

    { 12  ;2   ;Field     ;
                SourceExpr="Sell-to Customer No. Filter" }

    { 1904412501;1;Group  ;
                CaptionML=[ENU=Purchase;
                           ENG=Purchase] }

    { 20  ;2   ;Field     ;
                SourceExpr="Buy-from Vendor No. Filter" }

    { 1905090301;1;Group  ;
                CaptionML=[ENU=Transfer;
                           ENG=Transfer] }

    { 42  ;2   ;Field     ;
                SourceExpr="In-Transit Code Filter" }

    { 44  ;2   ;Field     ;
                SourceExpr="Transfer-from Code Filter" }

    { 46  ;2   ;Field     ;
                SourceExpr="Transfer-to Code Filter" }

    { 5   ;1   ;Group     ;
                CaptionML=[ENU=Service;
                           ENG=Service];
                GroupType=Group }

    { 7   ;2   ;Field     ;
                SourceExpr="Customer No. Filter" }

  }
  CODE
  {
    VAR
      WhseShptHeader@1000 : Record 7320;
      WhseReceiptHeader@1004 : Record 7316;
      DataCaption@1001 : Text[250];
      RequestType@1005 : 'Receive,Ship';
      "Sales OrdersEnable"@19007621 : Boolean INDATASET;
      "Purchase Return OrdersEnable"@19041519 : Boolean INDATASET;
      "Outbound TransfersEnable"@19050668 : Boolean INDATASET;
      "Purchase OrdersEnable"@19062116 : Boolean INDATASET;
      "Sales Return OrdersEnable"@19013468 : Boolean INDATASET;
      "Inbound TransfersEnable"@19065012 : Boolean INDATASET;
      ShippingAgentCodeFilterEnable@19010383 : Boolean INDATASET;
      ShippingAgentServiceFilterEnab@19072944 : Boolean INDATASET;

    PROCEDURE SetOneCreatedShptHeader@1(WhseShptHeader2@1000 : Record 7320);
    BEGIN
      RequestType := RequestType::Ship;
      WhseShptHeader := WhseShptHeader2;
    END;

    PROCEDURE SetOneCreatedReceiptHeader@4(WhseReceiptHeader2@1000 : Record 7316);
    BEGIN
      RequestType := RequestType::Receive;
      WhseReceiptHeader := WhseReceiptHeader2;
    END;

    LOCAL PROCEDURE EnableControls@2();
    BEGIN
      CASE Type OF
        Type::Inbound:
          BEGIN
            "Sales OrdersEnable" := FALSE;
            "Purchase Return OrdersEnable" := FALSE;
            "Outbound TransfersEnable" := FALSE;
          END;
        Type::Outbound:
          BEGIN
            "Purchase OrdersEnable" := FALSE;
            "Sales Return OrdersEnable" := FALSE;
            "Inbound TransfersEnable" := FALSE;
          END;
      END;
      IF "Sales Orders" OR "Inbound Transfers" OR "Outbound Transfers" THEN BEGIN
        ShippingAgentCodeFilterEnable := TRUE;
        ShippingAgentServiceFilterEnab := TRUE;
      END ELSE BEGIN
        ShippingAgentCodeFilterEnable := FALSE;
        ShippingAgentServiceFilterEnab := FALSE;
      END;
    END;

    LOCAL PROCEDURE SalesOrdersOnAfterValidate@19022893();
    BEGIN
      EnableControls;
    END;

    LOCAL PROCEDURE InboundTransfersOnAfterValidat@19067194();
    BEGIN
      EnableControls;
    END;

    LOCAL PROCEDURE OutboundTransfersOnAfterValida@19031431();
    BEGIN
      EnableControls;
    END;

    BEGIN
    END.
  }
}

