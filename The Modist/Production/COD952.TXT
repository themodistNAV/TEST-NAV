OBJECT Codeunit 952 Time Sheet Chart Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=07/09/12;
    Time=12:00:00 PM;
    Version List=NAVW17.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      TimeSheetMgt@1001 : Codeunit 950;
      Text001@1002 : TextConst 'ENU=Time Sheet Resource;ENG=Time Sheet Resource';
      MeasureType@1003 : 'Open,Submitted,Rejected,Approved,Scheduled,Posted,Not Posted,Resource,Job,Service,Absence,Assembly Order';

    PROCEDURE OnOpenPage@2(VAR TimeSheetChartSetup@1000 : Record 959);
    BEGIN
      WITH TimeSheetChartSetup DO
        IF NOT GET(USERID) THEN BEGIN
          "User ID" := USERID;
          "Starting Date" := TimeSheetMgt.FindNearestTimeSheetStartDate(WORKDATE);
          INSERT;
        END;
    END;

    PROCEDURE UpdateData@6(VAR BusChartBuf@1004 : Record 485);
    VAR
      TimeSheetChartSetup@1001 : Record 959;
      BusChartMapColumn@1005 : Record 486;
      BusChartMapMeasure@1003 : Record 486;
    BEGIN
      TimeSheetChartSetup.GET(USERID);

      WITH BusChartBuf DO BEGIN
        Initialize;
        SetXAxis(Text001,"Data Type"::String);

        AddColumns(BusChartBuf);
        AddMeasures(BusChartBuf,TimeSheetChartSetup);

        IF FindFirstMeasure(BusChartMapMeasure) THEN
          REPEAT
            IF FindFirstColumn(BusChartMapColumn) THEN
              REPEAT
                SetValue(
                  BusChartMapMeasure.Name,
                  BusChartMapColumn.Index,
                  CalcAmount(
                    TimeSheetChartSetup,
                    BusChartMapColumn.Name,
                    TimeSheetChartSetup.MeasureIndex2MeasureType(BusChartMapMeasure.Index)));
              UNTIL NOT NextColumn(BusChartMapColumn);

          UNTIL NOT NextMeasure(BusChartMapMeasure);
      END;
    END;

    PROCEDURE DrillDown@4(VAR BusChartBuf@1002 : Record 485);
    VAR
      TimeSheetChartSetup@1006 : Record 959;
      ResCapacityEntry@1005 : Record 160;
      TimeSheetHeader@1001 : Record 950;
      TimeSheetLine@1003 : Record 951;
      TimeSheetPostingEntry@1008 : Record 958;
      Value@1004 : Variant;
      ResourceNo@1000 : Code[20];
      CurrMeasureType@1007 : Integer;
    BEGIN
      BusChartBuf.GetXValue(BusChartBuf."Drill-Down X Index",Value);
      ResourceNo := FORMAT(Value);
      TimeSheetChartSetup.GET(USERID);

      CurrMeasureType := TimeSheetChartSetup.MeasureIndex2MeasureType(BusChartBuf."Drill-Down Measure Index");
      IF CurrMeasureType = MeasureType::Scheduled THEN BEGIN
        ResCapacityEntry.SETRANGE("Resource No.",ResourceNo);
        ResCapacityEntry.SETRANGE(Date,TimeSheetChartSetup."Starting Date",TimeSheetChartSetup.GetEndingDate);
        PAGE.RUN(PAGE::"Res. Capacity Entries",ResCapacityEntry);
      END ELSE BEGIN
        TimeSheetHeader.SETRANGE("Starting Date",TimeSheetChartSetup."Starting Date");
        TimeSheetHeader.SETRANGE("Resource No.",ResourceNo);
        IF TimeSheetHeader.FINDFIRST THEN
          IF CurrMeasureType = MeasureType::Posted THEN BEGIN
            TimeSheetPostingEntry.FILTERGROUP(2);
            TimeSheetPostingEntry.SETRANGE("Time Sheet No.",TimeSheetHeader."No.");
            TimeSheetPostingEntry.FILTERGROUP(0);
            PAGE.RUN(PAGE::"Time Sheet Posting Entries",TimeSheetPostingEntry);
          END ELSE BEGIN
            TimeSheetMgt.SetTimeSheetNo(TimeSheetHeader."No.",TimeSheetLine);
            CASE TimeSheetChartSetup."Show by" OF
              TimeSheetChartSetup."Show by"::Status:
                TimeSheetLine.SETRANGE(Status,CurrMeasureType);
              TimeSheetChartSetup."Show by"::Type:
                TimeSheetLine.SETRANGE(Type,BusChartBuf."Drill-Down Measure Index" + 1);
            END;
            PAGE.RUN(PAGE::"Manager Time Sheet",TimeSheetLine);
          END;
      END;
    END;

    LOCAL PROCEDURE AddColumns@3(VAR BusChartBuf@1000 : Record 485);
    VAR
      UserSetup@1003 : Record 91;
      Resource@1001 : Record 156;
    BEGIN
      IF NOT UserSetup.GET(USERID) THEN
        EXIT;

      Resource.SETRANGE("Use Time Sheet",TRUE);
      IF NOT UserSetup."Time Sheet Admin." THEN
        Resource.SETRANGE("Time Sheet Approver User ID",USERID);
      IF Resource.FINDSET THEN
        REPEAT
          BusChartBuf.AddColumn(Resource."No.");
        UNTIL Resource.NEXT = 0;
    END;

    LOCAL PROCEDURE AddMeasures@7(VAR BusChartBuf@1000 : Record 485;TimeSheetChartSetup@1001 : Record 959);
    BEGIN
      WITH BusChartBuf DO BEGIN
        CASE TimeSheetChartSetup."Show by" OF
          TimeSheetChartSetup."Show by"::Status:
            BEGIN
              AddMeasure(GetMeasureCaption(MeasureType::Open),'',"Data Type"::Decimal,"Chart Type"::StackedColumn);
              AddMeasure(GetMeasureCaption(MeasureType::Submitted),'',"Data Type"::Decimal,"Chart Type"::StackedColumn);
              AddMeasure(GetMeasureCaption(MeasureType::Rejected),'',"Data Type"::Decimal,"Chart Type"::StackedColumn);
              AddMeasure(GetMeasureCaption(MeasureType::Approved),'',"Data Type"::Decimal,"Chart Type"::StackedColumn);
            END;
          TimeSheetChartSetup."Show by"::Type:
            BEGIN
              AddMeasure(GetMeasureCaption(MeasureType::Resource),'',"Data Type"::Decimal,"Chart Type"::StackedColumn);
              AddMeasure(GetMeasureCaption(MeasureType::Job),'',"Data Type"::Decimal,"Chart Type"::StackedColumn);
              AddMeasure(GetMeasureCaption(MeasureType::Service),'',"Data Type"::Decimal,"Chart Type"::StackedColumn);
              AddMeasure(GetMeasureCaption(MeasureType::Absence),'',"Data Type"::Decimal,"Chart Type"::StackedColumn);
              AddMeasure(GetMeasureCaption(MeasureType::"Assembly Order"),'',"Data Type"::Decimal,"Chart Type"::StackedColumn);
            END;
          TimeSheetChartSetup."Show by"::Posted:
            BEGIN
              AddMeasure(GetMeasureCaption(MeasureType::Posted),'',"Data Type"::Decimal,"Chart Type"::StackedColumn);
              AddMeasure(GetMeasureCaption(MeasureType::"Not Posted"),'',"Data Type"::Decimal,"Chart Type"::StackedColumn);
            END;
        END;
        AddMeasure(GetMeasureCaption(MeasureType::Scheduled),'',"Data Type"::Decimal,"Chart Type"::Point);
      END;
    END;

    PROCEDURE CalcAmount@10(TimeSheetChartSetup@1001 : Record 959;ResourceNo@1000 : Code[249];MType@1002 : Integer) : Decimal;
    VAR
      Resource@1003 : Record 156;
      TimeSheetHeader@1005 : Record 950;
      TimeSheetPostingEntry@1004 : Record 958;
    BEGIN
      IF MType = MeasureType::Scheduled THEN BEGIN
        Resource.GET(ResourceNo);
        Resource.SETRANGE("Date Filter",TimeSheetChartSetup."Starting Date",TimeSheetChartSetup.GetEndingDate);
        Resource.CALCFIELDS(Capacity);
        EXIT(Resource.Capacity);
      END;

      TimeSheetHeader.SETRANGE("Starting Date",TimeSheetChartSetup."Starting Date");
      TimeSheetHeader.SETRANGE("Resource No.",ResourceNo);
      IF NOT TimeSheetHeader.FINDFIRST THEN
        EXIT(0);

      CASE TimeSheetChartSetup."Show by" OF
        TimeSheetChartSetup."Show by"::Status:
          BEGIN
            // status option is the same with MType here
            TimeSheetHeader.SETRANGE("Status Filter",MType);
            TimeSheetHeader.CALCFIELDS(Quantity);
            EXIT(TimeSheetHeader.Quantity);
          END;
        TimeSheetChartSetup."Show by"::Type:
          BEGIN
            TimeSheetHeader.SETRANGE("Type Filter",MType - 6);
            TimeSheetHeader.CALCFIELDS(Quantity);
            EXIT(TimeSheetHeader.Quantity);
          END;
        TimeSheetChartSetup."Show by"::Posted:
          BEGIN
            TimeSheetPostingEntry.SETCURRENTKEY("Time Sheet No.","Time Sheet Line No.");
            TimeSheetPostingEntry.SETRANGE("Time Sheet No.",TimeSheetHeader."No.");
            TimeSheetPostingEntry.CALCSUMS(Quantity);
            TimeSheetHeader.CALCFIELDS(Quantity);
            CASE MType OF
              MeasureType::Posted:
                EXIT(TimeSheetPostingEntry.Quantity);
              MeasureType::"Not Posted":
                EXIT(TimeSheetHeader.Quantity - TimeSheetPostingEntry.Quantity);
            END;
          END;
      END;
    END;

    PROCEDURE GetMeasureCaption@15(Type@1000 : Option) : Text;
    VAR
      TimeSheetChartSetup@1001 : Record 959;
    BEGIN
      TimeSheetChartSetup.INIT;
      TimeSheetChartSetup."Measure Type" := Type;
      EXIT(FORMAT(TimeSheetChartSetup."Measure Type"));
    END;

    BEGIN
    END.
  }
}

