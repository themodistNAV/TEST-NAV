OBJECT Report 794 Adjust Item Costs/Prices
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Adjust Item Costs/Prices;
               ENG=Adjust Item Costs/Prices];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  RoundingMethod.SETRANGE(Code,RoundingMethod.Code);

                  IF Item.GETFILTERS <> '' THEN
                    FilteredItem.COPYFILTERS(Item);
                END;

  }
  DATASET
  {
    { 8129;    ;DataItem;                    ;
               DataItemTable=Table27;
               DataItemTableView=SORTING(No.);
               OnPreDataItem=BEGIN
                               IF AdjustCard = AdjustCard::"Stockkeeping Unit Card" THEN
                                 CurrReport.BREAK;

                               Window.OPEN(Text000);
                             END;

               OnAfterGetRecord=BEGIN
                                  Window.UPDATE(1,"No.");

                                  CASE Selection OF
                                    Selection::"Unit Price":
                                      OldFieldValue := "Unit Price";
                                    Selection::"Profit %":
                                      OldFieldValue := "Profit %";
                                    Selection::"Indirect Cost %":
                                      OldFieldValue := "Indirect Cost %";
                                    Selection::"Last Direct Cost":
                                      OldFieldValue := "Last Direct Cost";
                                    Selection::"Standard Cost":
                                      OldFieldValue := "Standard Cost";
                                  END;
                                  NewFieldValue := OldFieldValue * AdjFactor;

                                  GetGLSetup;
                                  PriceIsRnded := FALSE;
                                  IF RoundingMethod.Code <> '' THEN BEGIN
                                    RoundingMethod."Minimum Amount" := NewFieldValue;
                                    IF RoundingMethod.FIND('=<') THEN BEGIN
                                      NewFieldValue := NewFieldValue + RoundingMethod."Amount Added Before";
                                      IF RoundingMethod.Precision > 0 THEN BEGIN
                                        NewFieldValue := ROUND(NewFieldValue,RoundingMethod.Precision,COPYSTR('=><',RoundingMethod.Type + 1,1));
                                        PriceIsRnded := TRUE;
                                      END;
                                      NewFieldValue := NewFieldValue + RoundingMethod."Amount Added After";
                                    END;
                                  END;
                                  IF NOT PriceIsRnded THEN
                                    NewFieldValue := ROUND(NewFieldValue,GLSetup."Unit-Amount Rounding Precision");

                                  CASE Selection OF
                                    Selection::"Unit Price":
                                      VALIDATE("Unit Price",NewFieldValue);
                                    Selection::"Profit %":
                                      VALIDATE("Profit %",NewFieldValue);
                                    Selection::"Indirect Cost %":
                                      VALIDATE("Indirect Cost %",NewFieldValue);
                                    Selection::"Last Direct Cost":
                                      VALIDATE("Last Direct Cost",NewFieldValue);
                                    Selection::"Standard Cost":
                                      VALIDATE("Standard Cost",NewFieldValue);
                                  END;
                                  MODIFY;
                                END;

               ReqFilterFields=No.,Vendor No.,Inventory Posting Group,Costing Method }

    { 5605;    ;DataItem;                    ;
               DataItemTable=Table5700;
               DataItemTableView=SORTING(Item No.,Location Code,Variant Code);
               OnPreDataItem=BEGIN
                               IF AdjustCard = AdjustCard::"Item Card" THEN
                                 CurrReport.BREAK;

                               Item.COPYFILTER("No.","Item No.");
                               Item.COPYFILTER("Location Filter","Location Code");
                               Item.COPYFILTER("Variant Filter","Variant Code");

                               Window.OPEN(
                                 Text002 +
                                 Text003 +
                                 Text004);
                             END;

               OnAfterGetRecord=BEGIN
                                  SkipNoneExistingItem("Item No.");

                                  Window.UPDATE(1,"Item No.");
                                  Window.UPDATE(2,"Location Code");
                                  Window.UPDATE(3,"Variant Code");

                                  CASE Selection OF
                                    Selection::"Last Direct Cost":
                                      OldFieldValue := "Last Direct Cost";
                                    Selection::"Standard Cost":
                                      OldFieldValue := "Standard Cost";
                                  END;
                                  NewFieldValue := OldFieldValue * AdjFactor;

                                  PriceIsRnded := FALSE;
                                  IF RoundingMethod.Code <> '' THEN BEGIN
                                    RoundingMethod."Minimum Amount" := NewFieldValue;
                                    IF RoundingMethod.FIND('=<') THEN BEGIN
                                      NewFieldValue := NewFieldValue + RoundingMethod."Amount Added Before";
                                      IF RoundingMethod.Precision > 0 THEN BEGIN
                                        NewFieldValue := ROUND(NewFieldValue,RoundingMethod.Precision,COPYSTR('=><',RoundingMethod.Type + 1,1));
                                        PriceIsRnded := TRUE;
                                      END;
                                      NewFieldValue := NewFieldValue + RoundingMethod."Amount Added After";
                                    END;
                                  END;
                                  IF NOT PriceIsRnded THEN
                                    NewFieldValue := ROUND(NewFieldValue,0.00001);

                                  CASE Selection OF
                                    Selection::"Last Direct Cost":
                                      VALIDATE("Last Direct Cost",NewFieldValue);
                                    Selection::"Standard Cost":
                                      VALIDATE("Standard Cost",NewFieldValue);
                                  END;
                                  MODIFY;
                                END;
                                 }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnInit=BEGIN
               Selection3Enable := TRUE;
               Selection2Enable := TRUE;
               Selection1Enable := TRUE;
             END;

      OnOpenPage=BEGIN
                   IF AdjFactor = 0 THEN
                     AdjFactor := 1;
                   UpdateEnabled;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ENG=Options] }

      { 6   ;2   ;Field     ;
                  Name=Adjust;
                  CaptionML=[ENU=Adjust;
                             ENG=Adjust];
                  OptionCaptionML=[ENU=Item Card,Stockkeeping Unit Card;
                                   ENG=Item Card,Stockkeeping Unit Card];
                  SourceExpr=AdjustCard;
                  OnValidate=BEGIN
                               UpdateEnabled;
                             END;
                              }

      { 4   ;2   ;Field     ;
                  Name=AdjustField;
                  CaptionML=[ENU=Adjust Field;
                             ENG=Adjust Field];
                  OptionCaptionML=[ENU=Unit Price,Profit %,Indirect Cost %,Last Direct Cost,Standard Cost;
                                   ENG=Unit Price,Profit %,Indirect Cost %,Last Direct Cost,Standard Cost];
                  SourceExpr=Selection;
                  OnValidate=BEGIN
                               IF Selection = Selection::"Indirect Cost %" THEN
                                 IndirectCost37SelectionOnValid;
                               IF Selection = Selection::"Profit %" THEN
                                 Profit37SelectionOnValidate;
                               IF Selection = Selection::"Unit Price" THEN
                                 UnitPriceSelectionOnValidate;
                             END;
                              }

      { 7   ;2   ;Field     ;
                  Name=AdjustmentFactor;
                  CaptionML=[ENU=Adjustment Factor;
                             ENG=Adjustment Factor];
                  DecimalPlaces=0:5;
                  SourceExpr=AdjFactor;
                  MinValue=0 }

      { 8   ;2   ;Field     ;
                  Name=Rounding_Method;
                  CaptionML=[ENU=Rounding Method;
                             ENG=Rounding Method];
                  SourceExpr=RoundingMethod.Code;
                  TableRelation="Rounding Method" }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Processing items  #1##########;ENG=Processing items     #1##########';
      Text002@1001 : TextConst 'ENU=Processing items     #1##########\;ENG=Processing items     #1##########\';
      Text003@1002 : TextConst 'ENU=Processing locations #2##########\;ENG=Processing locations #2##########\';
      Text004@1003 : TextConst 'ENU=Processing variants  #3##########;ENG=Processing variants  #3##########';
      RoundingMethod@1004 : Record 42;
      GLSetup@1012 : Record 98;
      FilteredItem@1016 : Record 27;
      Window@1005 : Dialog;
      NewFieldValue@1006 : Decimal;
      OldFieldValue@1007 : Decimal;
      PriceIsRnded@1008 : Boolean;
      GLSetupRead@1013 : Boolean;
      AdjFactor@1009 : Decimal;
      Selection@1010 : 'Unit Price,Profit %,Indirect Cost %,Last Direct Cost,Standard Cost';
      AdjustCard@1011 : 'Item Card,Stockkeeping Unit Card';
      Selection1Enable@19032709 : Boolean INDATASET;
      Selection2Enable@19007109 : Boolean INDATASET;
      Selection3Enable@19016581 : Boolean INDATASET;
      SelectionErr@19003950 : TextConst 'ENU=%1 is not a valid selection.;ENG=%1 is not a valid selection.';
      SelectionTxt@1014 : TextConst 'ENU=Unit Price,Profit %,Indirect Cost %,Last Direct Cost,Standard Cost;ENG=Unit Price,Profit %,Indirect Cost %,Last Direct Cost,Standard Cost';

    LOCAL PROCEDURE UpdateEnabled@1();
    BEGIN
      PageUpdateEnabled;
    END;

    LOCAL PROCEDURE GetGLSetup@14();
    BEGIN
      IF NOT GLSetupRead THEN
        GLSetup.GET;
      GLSetupRead := TRUE;
    END;

    LOCAL PROCEDURE PageUpdateEnabled@19050232();
    BEGIN
      IF AdjustCard = AdjustCard::"Stockkeeping Unit Card" THEN
        IF Selection < 3 THEN
          Selection := 3;
    END;

    LOCAL PROCEDURE UnitPriceSelectionOnValidate@19034063();
    BEGIN
      IF NOT Selection1Enable THEN
        ERROR(SelectionErr,SELECTSTR(Selection + 1,SelectionTxt));
    END;

    LOCAL PROCEDURE Profit37SelectionOnValidate@19033633();
    BEGIN
      IF NOT Selection2Enable THEN
        ERROR(SelectionErr,SELECTSTR(Selection + 1,SelectionTxt));
    END;

    LOCAL PROCEDURE IndirectCost37SelectionOnValid@19020400();
    BEGIN
      IF NOT Selection3Enable THEN
        ERROR(SelectionErr,SELECTSTR(Selection + 1,SelectionTxt));
    END;

    LOCAL PROCEDURE SkipNoneExistingItem@2(ItemNo@1000 : Code[20]);
    BEGIN
      IF Item.GETFILTERS <> '' THEN BEGIN
        FilteredItem.SETRANGE("No.",ItemNo);
        IF FilteredItem.ISEMPTY THEN
          CurrReport.SKIP;
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

