OBJECT Table 9086956 nF. User Group Member
{
  OBJECT-PROPERTIES
  {
    Date=30/10/16;
    Time=11:23:44 AM;
    Version List=NF2016.17;
  }
  PROPERTIES
  {
    DataPerCompany=No;
    OnInsert=BEGIN
               Rec.TESTFIELD("nF. User Group ID");
               Rec.TESTFIELD("nF. User ID");
               MarkUserAsPending();
               NfRecordAuditToolkit.UpdateCreated(Rec."Created By", Rec."Created Date Time");
             END;

    OnModify=BEGIN
               MarkUserAsPending();
               NfRecordAuditToolkit.UpdateModified(Rec."Modified By", Rec."Modified Date Time");
             END;

    OnDelete=BEGIN
               MarkUserAsPending();
             END;

    CaptionML=[ENU=nForcement User Group Member;
               ENG=nForcement User Group Member];
  }
  FIELDS
  {
    { 1   ;   ;nF. User Group ID   ;Integer       ;TableRelation="nF. User Group";
                                                   CaptionML=[ENU=nForcement User Group ID;
                                                              ENG=nForcement User Group ID] }
    { 2   ;   ;nF. User ID         ;Integer       ;TableRelation="nF. User";
                                                   CaptionML=[ENU=nForcement User ID;
                                                              ENG=nForcement User ID] }
    { 3   ;   ;nF. Company ID      ;Integer       ;TableRelation="nF. Company";
                                                   CaptionML=[ENU=nForcement Company ID;
                                                              ENG=nForcement Company ID] }
    { 11  ;   ;nF. User Group Name ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("nF. User Group".Name WHERE (ID=FIELD(nF. User Group ID)));
                                                   CaptionML=[ENU=nForcement User Group Name;
                                                              ENG=nForcement User Group Name];
                                                   Editable=No }
    { 20  ;   ;User Security ID    ;GUID          ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("nF. User"."User Security ID" WHERE (ID=FIELD(nF. User ID)));
                                                   CaptionML=[ENU=User Security ID;
                                                              ENG=User Security ID];
                                                   Editable=No }
    { 21  ;   ;User ID             ;Code50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("nF. User"."User ID" WHERE (ID=FIELD(nF. User ID)));
                                                   CaptionML=[ENU=User ID;
                                                              ENG=User ID];
                                                   Editable=No }
    { 22  ;   ;User Name           ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("nF. User"."User Name" WHERE (ID=FIELD(nF. User ID)));
                                                   CaptionML=[ENU=User Name;
                                                              ENG=User Name];
                                                   Editable=No }
    { 30  ;   ;Company Name        ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("nF. Company".Name WHERE (ID=FIELD(nF. Company ID)));
                                                   CaptionML=[ENU=Company Name;
                                                              ENG=Company Name];
                                                   Editable=No }
    { 40  ;   ;System Activity     ;Boolean       ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=System Activity;
                                                              ENG=System Activity] }
    { 1000;   ;Created By          ;Code50        ;OnLookup=BEGIN
                                                              NfRecordAuditToolkit.UserLookup(Rec."Created By", FALSE);
                                                            END;

                                                   CaptionML=[ENU=Created By;
                                                              ENG=Created By] }
    { 1001;   ;Created Date Time   ;DateTime      ;CaptionML=[ENU=Created Date Time;
                                                              ENG=Created Date Time] }
    { 1002;   ;Modified By         ;Code50        ;OnLookup=BEGIN
                                                              NfRecordAuditToolkit.UserLookup(Rec."Modified By", FALSE);
                                                            END;

                                                   CaptionML=[ENU=Modified By;
                                                              ENG=Modified By] }
    { 1003;   ;Modified Date Time  ;DateTime      ;CaptionML=[ENU=Modified Date Time;
                                                              ENG=Modified Date Time] }
  }
  KEYS
  {
    {    ;nF. User Group ID,nF. User ID,nF. Company ID;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      NfUser@1000000000 : Record 9086953;
      NfRecordAuditToolkit@1000000001 : Codeunit 9086951;

    PROCEDURE MarkUserAsPending@1000000000();
    BEGIN
      ///<summary>Marking user as pending</summary>

      IF (GetSystemActivity()) THEN
        EXIT;

      IF (NfUser.GET(Rec."nF. User ID")) THEN
        NfUser.MarkAsPending();
    END;

    PROCEDURE GetSystemActivity@1000000003() : Boolean;
    BEGIN
      ///<summary>Returning if system activity is enabled</summary>
      ///<returns>The answer</returns>

      Rec.FILTERGROUP(2);
      IF (Rec.GETFILTER("System Activity") <> '') THEN
        EXIT(Rec.GETRANGEMIN("System Activity"))
      ELSE
        EXIT(FALSE);
      Rec.FILTERGROUP(0);
    END;

    PROCEDURE SetSystemActivity@1000000004(pSystemActivity@1000000000 : Boolean);
    BEGIN
      ///<summary>Enabling / disabling system activity</summary>
      ///<param name="pSystemActivity">The flag</param>

      Rec.FILTERGROUP(2);
      IF (pSystemActivity) THEN
        Rec.SETRANGE("System Activity", TRUE)
      ELSE
        Rec.SETRANGE("System Activity");
      Rec.FILTERGROUP(0);
    END;

    BEGIN
    {
      ///<summary>Table with members (nForcement users) of users group</summary>
      ///<change version="NF2016.17" initials="JH" date="2016-04-23">Created</change>
    }
    END.
  }
}

