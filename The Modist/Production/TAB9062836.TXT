OBJECT Table 9062836 Vendor Import Worksheet Line
{
  OBJECT-PROPERTIES
  {
    Date=24/05/16;
    Time=12:00:00 PM;
    Version List=NH2016.16;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               Rec.TESTFIELD("Batch No.");
               Rec.VALIDATE("Postion Text", Rec.GETPOSITION(FALSE));
             END;

    OnModify=BEGIN
               IF ( NOT (GetSystemActivity())) THEN
                 Rec.Status := Rec.Status::Loaded;
             END;

    OnDelete=BEGIN
               ImportErrorManagement.DeleteErrorsAndWarnings(DATABASE::"Vendor Import Worksheet Line",Rec.GETPOSITION(FALSE));
               ImportToolkit.DeleteEnhancedFields(Rec);
             END;

    CaptionML=[ENU=Vendor Import Worksheet Line;
               ENG=Vendor Import Worksheet Line];
    LookupPageID=Page9086461;
    DrillDownPageID=Page9086461;
  }
  FIELDS
  {
    { 1   ;   ;Batch No.           ;Code50        ;TableRelation="Vendor Import Worksheet Hdr.";
                                                   CaptionML=[ENU=Batch No.;
                                                              ENG=Batch No.] }
    { 3   ;   ;Status              ;Option        ;InitValue=Loaded;
                                                   CaptionML=[ENU=Status;
                                                              ENG=Status];
                                                   OptionCaptionML=[ENU=" ,Loaded,Ready,Warning,Processed,Error";
                                                                    ENG=" ,Loaded,Ready,Warning,Processed,Error"];
                                                   OptionString=[ ,Loaded,Ready,Warning,Processed,Error] }
    { 4   ;   ;No. of Warnings     ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Import Error Line" WHERE (Type=CONST(Warning),
                                                                                                Table ID=CONST(9062836),
                                                                                                Table Position=FIELD(Postion Text)));
                                                   CaptionML=[ENU=No. of Warnings;
                                                              ENG=No. of Warnings] }
    { 5   ;   ;No. of Errors       ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Import Error Line" WHERE (Type=CONST(Error),
                                                                                                Table ID=CONST(9062836),
                                                                                                Table Position=FIELD(Postion Text)));
                                                   CaptionML=[ENU=No. of Errors;
                                                              ENG=No. of Errors] }
    { 6   ;   ;Postion Text        ;Text250       ;CaptionML=[ENU=Postion Text;
                                                              ENG=Postion Text] }
    { 99  ;   ;System Activity     ;Boolean       ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=System Activity;
                                                              ENG=System Activity] }
    { 100 ;   ;No.                 ;Code20        ;CaptionML=[ENU=No.;
                                                              ENG=No.];
                                                   NotBlank=Yes }
    { 101 ;   ;Name                ;Text50        ;CaptionML=[ENU=Name;
                                                              ENG=Name] }
    { 102 ;   ;Name 2              ;Text50        ;CaptionML=[ENU=Name 2;
                                                              ENG=Name 2] }
    { 103 ;   ;Address             ;Text50        ;CaptionML=[ENU=Address;
                                                              ENG=Address] }
    { 104 ;   ;Address 2           ;Text50        ;CaptionML=[ENU=Address 2;
                                                              ENG=Address 2] }
    { 105 ;   ;City                ;Text30        ;CaptionML=[ENU=City;
                                                              ENG=City] }
    { 106 ;   ;Phone No.           ;Text30        ;ExtendedDatatype=Phone No.;
                                                   CaptionML=[ENU=Phone No.;
                                                              ENG=Phone No.] }
    { 108 ;   ;Our Account No.     ;Text20        ;CaptionML=[ENU=Our Account No.;
                                                              ENG=Our Account No.] }
    { 109 ;   ;Territory Code      ;Code10        ;ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Territory Code;
                                                              ENG=Territory Code] }
    { 110 ;   ;Vendor Posting Group;Code10        ;TableRelation="Vendor Posting Group";
                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=Vendor Posting Group;
                                                              ENG=Vendor Posting Group] }
    { 111 ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Currency Code;
                                                              ENG=Currency Code] }
    { 112 ;   ;Language Code       ;Code10        ;TableRelation=Language;
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Language Code;
                                                              ENG=Language Code] }
    { 113 ;   ;Payment Terms Code  ;Code10        ;TableRelation="Payment Terms";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Payment Terms Code;
                                                              ENG=Payment Terms Code] }
    { 114 ;   ;Purchaser Code      ;Code10        ;TableRelation=Salesperson/Purchaser;
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Purchaser Code;
                                                              ENG=Purchaser Code] }
    { 115 ;   ;Shipment Method Code;Code10        ;TableRelation="Shipment Method";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Shipment Method Code;
                                                              ENG=Shipment Method Code] }
    { 116 ;   ;Shipping Agent Code ;Code10        ;TableRelation="Shipping Agent";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Shipping Agent Code;
                                                              ENG=Shipping Agent Code] }
    { 118 ;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Country/Region Code;
                                                              ENG=Country/Region Code] }
    { 119 ;   ;Gen. Bus. Posting Group;Code10     ;TableRelation="Gen. Business Posting Group";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Gen. Bus. Posting Group;
                                                              ENG=Gen. Bus. Posting Group] }
    { 120 ;   ;Payment Method Code ;Code10        ;TableRelation="Payment Method";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Payment Method Code;
                                                              ENG=Payment Method Code] }
    { 121 ;   ;Prices Including VAT;Boolean       ;CaptionML=[ENU=Prices Including VAT;
                                                              ENG=Prices Including VAT] }
    { 122 ;   ;Fax No.             ;Text30        ;CaptionML=[ENU=Fax No.;
                                                              ENG=Fax No.] }
    { 123 ;   ;Post Code           ;Code20        ;CaptionML=[ENU=Post Code;
                                                              ENG=Post Code] }
    { 124 ;   ;County              ;Text30        ;CaptionML=[ENU=County;
                                                              ENG=County] }
    { 125 ;   ;E-Mail              ;Text80        ;ExtendedDatatype=E-Mail;
                                                   CaptionML=[ENU=E-Mail;
                                                              ENG=E-Mail] }
    { 126 ;   ;Home Page           ;Text80        ;ExtendedDatatype=URL;
                                                   CaptionML=[ENU=Home Page;
                                                              ENG=Home Page] }
    { 127 ;   ;VAT Bus. Posting Group;Code10      ;TableRelation="VAT Business Posting Group";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=VAT Bus. Posting Group;
                                                              ENG=VAT Bus. Posting Group] }
    { 131 ;   ;VAT Registration No.;Text20        ;OnValidate=VAR
                                                                VATRegNoFormat@1000 : Record 381;
                                                                VATRegistrationLogMgt@1002 : Codeunit 249;
                                                              BEGIN
                                                              END;

                                                   CaptionML=[ENU=VAT Registration No.;
                                                              ENG=VAT Registration No.] }
    { 201 ;   ;Bank Account Code   ;Code10        ;CaptionML=[ENU=Bank Account Code;
                                                              ENG=Bank Account Code] }
    { 202 ;   ;Bank Name           ;Text50        ;CaptionML=[ENU=Bank Name;
                                                              ENG=Bank Name] }
    { 203 ;   ;Bank Name 2         ;Text50        ;CaptionML=[ENU=Bank Name 2;
                                                              ENG=Bank Name 2] }
    { 204 ;   ;Bank Address        ;Text50        ;CaptionML=[ENU=Bank Address;
                                                              ENG=Bank Address] }
    { 205 ;   ;Bank Address 2      ;Text50        ;CaptionML=[ENU=Bank Address 2;
                                                              ENG=Bank Address 2] }
    { 206 ;   ;Bank City           ;Text30        ;CaptionML=[ENU=Bank City;
                                                              ENG=Bank City] }
    { 207 ;   ;Bank County         ;Text30        ;CaptionML=[ENU=Bank County;
                                                              ENG=Bank County] }
    { 208 ;   ;Bank Country/Region Code;Code10    ;CaptionML=[ENU=Bank Country/Region Code;
                                                              ENG=Bank Country/Region Code] }
    { 209 ;   ;Bank Post Code      ;Code20        ;ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Bank Post Code;
                                                              ENG=Bank Post Code] }
    { 219 ;   ;Bank Account Language Code;Code10  ;CaptionML=[ENU=Bank Account Language Code;
                                                              ENG=Bank Account Language Code] }
    { 220 ;   ;Bank Phone No.      ;Text30        ;ExtendedDatatype=Phone No.;
                                                   CaptionML=[ENU=Bank Phone No.;
                                                              ENG=Bank Phone No.] }
    { 221 ;   ;Bank Home Page      ;Text80        ;ExtendedDatatype=URL;
                                                   CaptionML=[ENU=Bank Home Page;
                                                              ENG=Bank Home Page] }
    { 230 ;   ;Bank Branch No.     ;Text20        ;CaptionML=[ENU=Bank Branch No.;
                                                              ENG=Bank Branch No.] }
    { 231 ;   ;Bank Account No.    ;Text30        ;CaptionML=[ENU=Bank Account No.;
                                                              ENG=Bank Account No.] }
    { 232 ;   ;Bank Account Transit No.;Text20    ;CaptionML=[ENU=Bank Account Transit No.;
                                                              ENG=Bank Account Transit No.] }
    { 233 ;   ;Bank Account Currency Code;Code10  ;CaptionML=[ENU=Bank Account Currency Code;
                                                              ENG=Bank Account Currency Code] }
    { 234 ;   ;Bank Account IBAN   ;Code50        ;OnValidate=VAR
                                                                CompanyInfo@1000 : Record 79;
                                                              BEGIN
                                                                CompanyInfo.CheckIBAN("Bank Account IBAN");
                                                              END;

                                                   CaptionML=[ENU=Bank Account IBAN;
                                                              ENG=Bank Account IBAN] }
    { 235 ;   ;Bank Account SWIFT Code;Code20     ;CaptionML=[ENU=Bank Account SWIFT Code;
                                                              ENG=Bank Account SWIFT Code] }
    { 236 ;   ;Bank Account Clearing Code;Text50  ;CaptionML=[ENU=Bank Account Clearing Code;
                                                              ENG=Bank Account Clearing Code] }
    { 237 ;   ;Bank Account Clearing Standard;Text50;
                                                   CaptionML=[ENU=Bank Account Clearing Standard;
                                                              ENG=Bank Account Clearing Standard] }
    { 238 ;   ;Bank Account Reference No.;Text30  ;CaptionML=[ENU=Bank Account Reference No.;
                                                              ENG=Bank Account Reference No.] }
    { 240 ;   ;Bank Contact        ;Text50        ;CaptionML=[ENU=Bank Contact;
                                                              ENG=Bank Contact] }
    { 241 ;   ;Bank E-Mail         ;Text80        ;ExtendedDatatype=E-Mail;
                                                   CaptionML=[ENU=Bank E-Mail;
                                                              ENG=Bank E-Mail] }
    { 250 ;   ;Bank Fax No.        ;Text30        ;CaptionML=[ENU=Bank Fax No.;
                                                              ENG=Bank Fax No.] }
    { 260 ;   ;Global Dimension 1 Code;Code20     ;OnValidate=BEGIN
                                                                ImportToolkit.ValidateDimensionValue(1, Rec."Global Dimension 1 Code");
                                                              END;

                                                   OnLookup=BEGIN
                                                              ImportToolkit.DimensionValueLookup(1, Rec."Global Dimension 1 Code");
                                                            END;

                                                   CaptionML=[ENU=Global Dimension 1 Code;
                                                              ENG=Global Dimension 1 Code];
                                                   CaptionClass='1,1,1' }
    { 261 ;   ;Global Dimension 2 Code;Code20     ;OnValidate=BEGIN
                                                                ImportToolkit.ValidateDimensionValue(2, Rec."Global Dimension 2 Code");
                                                              END;

                                                   OnLookup=BEGIN
                                                              ImportToolkit.DimensionValueLookup(2, Rec."Global Dimension 2 Code");
                                                            END;

                                                   CaptionML=[ENU=Global Dimension 2 Code;
                                                              ENG=Global Dimension 2 Code];
                                                   CaptionClass='1,1,2' }
    { 262 ;   ;Shortcut Dimension 3 Code;Code20   ;OnValidate=BEGIN
                                                                ImportToolkit.ValidateDimensionValue(3, Rec."Shortcut Dimension 3 Code");
                                                              END;

                                                   OnLookup=BEGIN
                                                              ImportToolkit.DimensionValueLookup(3, Rec."Shortcut Dimension 3 Code");
                                                            END;

                                                   CaptionML=[ENU=Shortcut Dimension 3 Code;
                                                              ENG=Shortcut Dimension 3 Code];
                                                   CaptionClass='1,1,3' }
    { 263 ;   ;Shortcut Dimension 4 Code;Code20   ;OnValidate=BEGIN
                                                                ImportToolkit.ValidateDimensionValue(4, Rec."Shortcut Dimension 4 Code");
                                                              END;

                                                   OnLookup=BEGIN
                                                              ImportToolkit.DimensionValueLookup(4, Rec."Shortcut Dimension 4 Code");
                                                            END;

                                                   CaptionML=[ENU=Shortcut Dimension 4 Code;
                                                              ENG=Shortcut Dimension 4 Code];
                                                   CaptionClass='1,1,4' }
    { 264 ;   ;Shortcut Dimension 5 Code;Code20   ;OnValidate=BEGIN
                                                                ImportToolkit.ValidateDimensionValue(5, Rec."Shortcut Dimension 5 Code");
                                                              END;

                                                   OnLookup=BEGIN
                                                              ImportToolkit.DimensionValueLookup(5, Rec."Shortcut Dimension 5 Code");
                                                            END;

                                                   CaptionML=[ENU=Shortcut Dimension 5 Code;
                                                              ENG=Shortcut Dimension 5 Code];
                                                   CaptionClass='1,1,5' }
    { 265 ;   ;Shortcut Dimension 6 Code;Code20   ;OnValidate=BEGIN
                                                                ImportToolkit.ValidateDimensionValue(6, Rec."Shortcut Dimension 6 Code");
                                                              END;

                                                   OnLookup=BEGIN
                                                              ImportToolkit.DimensionValueLookup(6, Rec."Shortcut Dimension 6 Code");
                                                            END;

                                                   CaptionML=[ENU=Shortcut Dimension 6 Code;
                                                              ENG=Shortcut Dimension 6 Code];
                                                   CaptionClass='1,1,6' }
    { 266 ;   ;Shortcut Dimension 7 Code;Code20   ;OnValidate=BEGIN
                                                                ImportToolkit.ValidateDimensionValue(7, Rec."Shortcut Dimension 7 Code");
                                                              END;

                                                   OnLookup=BEGIN
                                                              ImportToolkit.DimensionValueLookup(7, Rec."Shortcut Dimension 7 Code");
                                                            END;

                                                   CaptionML=[ENU=Shortcut Dimension 7 Code;
                                                              ENG=Shortcut Dimension 7 Code];
                                                   CaptionClass='1,1,7' }
    { 267 ;   ;Shortcut Dimension 8 Code;Code20   ;OnValidate=BEGIN
                                                                ImportToolkit.ValidateDimensionValue(8, Rec."Shortcut Dimension 8 Code");
                                                              END;

                                                   OnLookup=BEGIN
                                                              ImportToolkit.DimensionValueLookup(8, Rec."Shortcut Dimension 8 Code");
                                                            END;

                                                   CaptionML=[ENU=Shortcut Dimension 8 Code;
                                                              ENG=Shortcut Dimension 8 Code];
                                                   CaptionClass='1,1,8' }
    { 300 ;   ;No. of Import VAT Reg. Nos.;Integer;FieldClass=FlowField;
                                                   CalcFormula=Count("Vendor Import Worksheet Line" WHERE (No.=FIELD(FILTER(No. Filter)),
                                                                                                           VAT Registration No.=FIELD(VAT Registration No.)));
                                                   CaptionML=[ENU=No. of Import VAT Reg. Nos.;
                                                              ENG=No. of Import VAT Reg. Nos.] }
    { 301 ;   ;No. of Vendor VAT Reg. Nos.;Integer;FieldClass=FlowField;
                                                   CalcFormula=Count(Vendor WHERE (No.=FIELD(FILTER(No. Filter)),
                                                                                   VAT Registration No.=FIELD(VAT Registration No.)));
                                                   CaptionML=[ENU=No. of Vendor VAT Reg. Nos.;
                                                              ENG=No. of Vendor VAT Reg. Nos.] }
    { 302 ;   ;No. Filter          ;Code20        ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=No. Filter;
                                                              ENG=No. Filter] }
  }
  KEYS
  {
    {    ;Batch No.,No.                           ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      VendorImportWorksheetHdr@1000000004 : Record 9062835;
      ImportErrorManagement@1000000002 : Codeunit 9062708;
      ImportToolkit@1000000001 : Codeunit 9062701;
      VendorImport@1000000003 : Codeunit 9062704;

    PROCEDURE GetSystemActivity@1000000004() : Boolean;
    VAR
      lSystemActivity@1000000000 : Boolean;
    BEGIN
      Rec.FILTERGROUP(2);
      IF (Rec.GETFILTER("System Activity") <> '') THEN
        lSystemActivity := Rec.GETRANGEMIN("System Activity");
      Rec.FILTERGROUP(0);
      EXIT(lSystemActivity);
    END;

    PROCEDURE SetSystemActivity@1000000002(pSystemActivity@1000000000 : Boolean);
    BEGIN
      Rec.FILTERGROUP(2);
      IF (pSystemActivity) THEN
        Rec.SETRANGE("System Activity", TRUE)
      ELSE
        Rec.SETRANGE("System Activity");
      Rec.FILTERGROUP(0);
    END;

    PROCEDURE GetErrorMessage@1000000000() : Text;
    BEGIN
      EXIT(ImportErrorManagement.GetErrorMessage(DATABASE::"Vendor Import Worksheet Line", Rec.GETPOSITION(FALSE)));
    END;

    PROCEDURE ShowErrors@1000000001();
    BEGIN
      ImportErrorManagement.ShowErrors(DATABASE::"Vendor Import Worksheet Line", Rec.GETPOSITION(FALSE), TRUE);
    END;

    PROCEDURE FilterSimpleFields@1000000005(VAR pField@1000000000 : Record 2000000041);
    VAR
      lFilterToolkit@1000000001 : Codeunit 9062251;
      lFilter@1000000002 : Text;
    BEGIN
      //DOC NH2016.14 - Filtering simple fields
      //  <> pField: Target recordset

      lFilterToolkit.AddIntegerValue(Rec.FIELDNO("No."));
      lFilterToolkit.AddIntegerValue(Rec.FIELDNO(Name));
      lFilterToolkit.AddIntegerValue(Rec.FIELDNO(Address));
      lFilterToolkit.AddIntegerValue(Rec.FIELDNO("Address 2"));
      lFilterToolkit.AddIntegerValue(Rec.FIELDNO(City));
      lFilterToolkit.AddIntegerValue(Rec.FIELDNO("Post Code"));
      lFilterToolkit.AddIntegerValue(Rec.FIELDNO(County));
      lFilterToolkit.AddIntegerValue(Rec.FIELDNO("Country/Region Code"));
      lFilterToolkit.AddIntegerValue(Rec.FIELDNO("Phone No."));
      lFilterToolkit.AddIntegerValue(Rec.FIELDNO("E-Mail"));
      lFilterToolkit.AddIntegerValue(Rec.FIELDNO("Home Page"));
      lFilterToolkit.AddIntegerValue(Rec.FIELDNO("Currency Code"));
      lFilterToolkit.AddIntegerValue(Rec.FIELDNO("Payment Terms Code"));
      lFilterToolkit.AddIntegerValue(Rec.FIELDNO("Payment Method Code"));
      lFilterToolkit.AddIntegerValue(Rec.FIELDNO("Global Dimension 1 Code"));
      lFilterToolkit.AddIntegerValue(Rec.FIELDNO("Global Dimension 2 Code"));
      lFilterToolkit.AddIntegerValue(Rec.FIELDNO("VAT Registration No."));

      lFilter := lFilterToolkit.GetIntegerFilter();
      IF (lFilter <> '') THEN
        pField.SETFILTER("No.", lFilter)
      ELSE
        pField.SETRANGE("No.");
    END;

    BEGIN
    {
      //DOC NH2016.14 JH 24/03/2016 - Bugfixes
      //DOC NH2016.15 JH 06/05/2016 - CfMD amendments
      //DOC NH2016.16 JH 24/05/2016 - Bugfixes
    }
    END.
  }
}

