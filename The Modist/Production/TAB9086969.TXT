OBJECT Table 9086969 nF. Cues
{
  OBJECT-PROPERTIES
  {
    Date=30/10/16;
    Time=11:30:52 AM;
    Version List=NF2016.17;
  }
  PROPERTIES
  {
    DataPerCompany=No;
    CaptionML=[ENU=nForcement Cues;
               ENG=nForcement Cues];
  }
  FIELDS
  {
    { 1   ;   ;ID                  ;Integer       ;AutoIncrement=Yes;
                                                   CaptionML=[ENU=ID;
                                                              ENG=ID] }
    { 100 ;   ;Users               ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count(User);
                                                   CaptionML=[ENU=Users;
                                                              ENG=Users];
                                                   Editable=No }
    { 101 ;   ;Profiles            ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count(Profile);
                                                   CaptionML=[ENU=Profiles;
                                                              ENG=Profiles];
                                                   Editable=No }
    { 102 ;   ;User Personalisations;Integer      ;FieldClass=FlowField;
                                                   CalcFormula=Count("User Personalization");
                                                   CaptionML=[ENU=User Personalisations;
                                                              ENG=User Personalisations];
                                                   Editable=No }
    { 103 ;   ;Permission Sets     ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Permission Set");
                                                   CaptionML=[ENU=Permission Sets;
                                                              ENG=Permission Sets];
                                                   Editable=No }
    { 200 ;   ;nF. Users           ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("nF. User");
                                                   CaptionML=[ENU=nForcement Users;
                                                              ENG=nForcement Users];
                                                   Editable=No }
    { 201 ;   ;nF. User Groups     ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("nF. User Group" WHERE (Hidden=CONST(No)));
                                                   CaptionML=[ENU=nForcement User Groups;
                                                              ENG=nForcement User Groups];
                                                   Editable=No }
    { 202 ;   ;nF. Companies       ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("nF. Company");
                                                   CaptionML=[ENU=nForcement Companies;
                                                              ENG=nForcement Companies];
                                                   Editable=No }
    { 203 ;   ;nF. Permission Groups;Integer      ;FieldClass=FlowField;
                                                   CalcFormula=Count("nF. Permission Group" WHERE (Give Everything=CONST(No),
                                                                                                   Hidden=CONST(No)));
                                                   CaptionML=[ENU=nForcement Permission Groups;
                                                              ENG=nForcement Permission Groups];
                                                   Editable=No }
    { 210 ;   ;New nF. Users       ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("nF. User" WHERE (New=CONST(Yes)));
                                                   CaptionML=[ENU=New nForcement Users;
                                                              ENG=New nForcement Users];
                                                   Editable=No }
    { 211 ;   ;Pending nF. Users   ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("nF. User" WHERE (Pending=CONST(Yes)));
                                                   CaptionML=[ENU=Pending nForcement Users;
                                                              ENG=Pending nForcement Users];
                                                   Editable=No }
    { 220 ;   ;Warning Log Entries ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("nF. Log" WHERE (Result=CONST(Warning),
                                                                                      Confirmed=CONST(No)));
                                                   CaptionML=[ENU=Warning Log Entries;
                                                              ENG=Warning Log Entries];
                                                   Editable=No }
    { 221 ;   ;Error Log Entries   ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("nF. Log" WHERE (Result=CONST(Error),
                                                                                      Confirmed=CONST(No)));
                                                   CaptionML=[ENU=Error Log Entries;
                                                              ENG=Error Log Entries];
                                                   Editable=No }
    { 230 ;   ;Job Queue Category Filter;Code10   ;FieldClass=FlowFilter;
                                                   TableRelation="Job Queue Category";
                                                   CaptionML=[ENU=Job Queue Category Filter;
                                                              ENG=Job Queue Category Filter] }
    { 231 ;   ;Job Queue Entries   ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Job Queue Entry" WHERE (Job Queue Category Code=FIELD(Job Queue Category Filter)));
                                                   CaptionML=[ENU=Job Queue Entries;
                                                              ENG=Job Queue Entries] }
    { 232 ;   ;Job Queue Entries Errors;Integer   ;FieldClass=FlowField;
                                                   CalcFormula=Count("Job Queue Entry" WHERE (Job Queue Category Code=FIELD(Job Queue Category Filter),
                                                                                              Status=CONST(Error)));
                                                   CaptionML=[ENU=Job Queue Entries Errors;
                                                              ENG=Job Queue Entries Errors] }
    { 233 ;   ;Job Queue Entries On Hold;Integer  ;FieldClass=FlowField;
                                                   CalcFormula=Count("Job Queue Entry" WHERE (Job Queue Category Code=FIELD(Job Queue Category Filter),
                                                                                              Status=CONST(On Hold)));
                                                   CaptionML=[ENU=Job Queue Entries On Hold;
                                                              ENG=Job Queue Entries On Hold] }
    { 234 ;   ;Job Queue Entries In Process;Integer;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Count("Job Queue Entry" WHERE (Job Queue Category Code=FIELD(Job Queue Category Filter),
                                                                                              Status=CONST(In Process)));
                                                   CaptionML=[ENU=Job Queue Entries In Process;
                                                              ENG=Job Queue Entries In Process] }
    { 240 ;   ;User Status         ;Option        ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=User Status;
                                                              ENG=User Status];
                                                   OptionCaptionML=[ENU=" ,All Users,Superusers,New Users,Pending Users,Hidden Users,Disabled Users";
                                                                    ENG=" ,All Users,Superusers,New Users,Pending Users,Hidden Users,Disabled Users"];
                                                   OptionString=[ ,All Users,Superusers,New Users,Pending Users,Hidden Users,Disabled Users] }
  }
  KEYS
  {
    {    ;ID                                      ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      NfIif@1000000000 : Codeunit 9086975;

    PROCEDURE GetNewNfUsersStyle@1000000000() : Text;
    BEGIN
      ///<summary>Returning new nFocement users style</summary>
      ///<returns>The style</returns>

      EXIT(GetWarningStyle(Rec."New nF. Users" > 0));
    END;

    PROCEDURE GetPendingNfUsersStyle@1000000001() : Text;
    BEGIN
      ///<summary>Returning pending nFocement users style</summary>
      ///<returns>The style</returns>

      EXIT(GetErrorStyle(Rec."Pending nF. Users" > 0));
    END;

    PROCEDURE GetWarningLogEntriesStyle@1000000002() : Text;
    BEGIN
      ///<summary>Returning warning log entries style</summary>
      ///<returns>The style</returns>

      EXIT(GetWarningStyle(Rec."Warning Log Entries" > 0));
    END;

    PROCEDURE GetErrorLogEntriesStyle@1000000003() : Text;
    BEGIN
      ///<summary>Returning error log entries style</summary>
      ///<returns>The style</returns>

      EXIT(GetErrorStyle(Rec."Error Log Entries" > 0));
    END;

    PROCEDURE GetJobQueueEntriesErrorsStyle@1000000004() : Text;
    BEGIN
      ///<summary>Returning job queue entries errors style</summary>
      ///<returns>The style</returns>

      EXIT(GetErrorStyle(Rec."Job Queue Entries Errors" > 0));
    END;

    PROCEDURE GetJobQueueEntriesOnHoldStyle@1000000005() : Text;
    BEGIN
      ///<summary>Returning job queue entries on hold style</summary>
      ///<returns>The style</returns>

      EXIT(GetWarningStyle(Rec."Job Queue Entries On Hold" > 0));
    END;

    PROCEDURE GetJobQueueEntriesInProcess@1000000006() : Text;
    BEGIN
      ///<summary>Returning job queue entries in process style</summary>
      ///<returns>The style</returns>

      EXIT(GetWarningStyle(Rec."Job Queue Entries In Process" > 0));
    END;

    LOCAL PROCEDURE GetErrorStyle@1000000011(pCondition@1000000000 : Boolean) : Text;
    BEGIN
      ///<summary>Returning error style</summary>
      ///<param name="pCondition">Condition</param>
      ///<returns>The style</returns>

      EXIT(NfIif.Text(pCondition, 'Unfavorable', 'Favorable'));
    END;

    LOCAL PROCEDURE GetWarningStyle@1000000010(pCondition@1000000000 : Boolean) : Text;
    BEGIN
      ///<summary>Returning warning style</summary>
      ///<param name="pCondition">Condition</param>
      ///<returns>The style</returns>

      EXIT(NfIif.Text(pCondition, 'Ambiguous', 'Favorable'));
    END;

    BEGIN
    {
      ///<summary>Table used as base for nForcement role centre</summary>
      ///<change version="NF2016.17" initials="JH" date="2016-07-03">Created</change>
    }
    END.
  }
}

