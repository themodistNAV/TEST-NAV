OBJECT Codeunit 9086952 nF. Dialog Management
{
  OBJECT-PROPERTIES
  {
    Date=20/10/16;
    Time=[ 3:04:13 PM];
    Version List=NF2016.17;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      NfDialogControl@1000000002 : TEMPORARY Record 9086968;
      NfToolkit@1000000005 : Codeunit 9086951;
      Dlg@1000000000 : Dialog;
      DlgOpened@1000000001 : Boolean;
      CaptionLength@1000000003 : Integer;
      ValueLength@1000000004 : Integer;

    LOCAL PROCEDURE "--- General ---"@1000000006();
    BEGIN
    END;

    PROCEDURE Open@1000000002(pTitle@1000000000 : Text);
    VAR
      lDialogText@1000000001 : Text;
      lControlText@1000000002 : Text;
      lControlCaptionText@1000000003 : Text;
      lControlValueText@1000000004 : Text;
      lControlValueChar@1000000005 : Text;
    BEGIN
      ///<summary>Opening a dialog</summary>
      ///<param name="pTitle">Dialog title</param>

      IF (DlgOpened) THEN
        Close();

      IF (pTitle <> '') THEN
        lDialogText := pTitle;

      NfDialogControl.RESET();
      IF (NfDialogControl.FINDSET()) THEN
      BEGIN
        IF (lDialogText <> '') THEN
          lDialogText := lDialogText + '\';
        REPEAT
          IF (NfDialogControl."Show Caption") THEN
          BEGIN
            lControlCaptionText := COPYSTR(NfDialogControl.Caption, 1, NfDialogControl."Caption Length");
            lControlCaptionText := PADSTR(lControlCaptionText, NfDialogControl."Caption Length", ' ');
          END;
          IF (NfDialogControl."Show Value") THEN
          BEGIN
            IF (NfDialogControl.Type = NfDialogControl.Type::Progress) THEN
              lControlValueChar := '@'
            ELSE
              lControlValueChar := '#';
            lControlValueText := lControlValueChar + FORMAT(NfDialogControl.ID, 0, 1);
            lControlValueText := PADSTR(lControlValueText, NfDialogControl."Value Length", lControlValueChar);
          END;
          lControlText := '';
          IF (NfDialogControl."Show Caption") THEN
            lControlText := lControlText + lControlCaptionText;
          IF (NfDialogControl."Show Value") THEN
          BEGIN
            IF (NfDialogControl."Show Caption") THEN
              lControlText := lControlText + ' ';
            lControlText := lControlText + lControlValueText;
          END;
          IF (lDialogText <> '') THEN
            lDialogText := lDialogText + '\';
          lDialogText := lDialogText + lControlText;
        UNTIL (NfDialogControl.NEXT() = 0);
      END;

      Dlg.OPEN(lDialogText);
      DlgOpened := TRUE;
    END;

    PROCEDURE Close@1000000003();
    BEGIN
      ///<summary>Closing a dialog</summary>

      IF ( NOT (DlgOpened)) THEN
        EXIT;
      Dlg.CLOSE();
      DlgOpened := FALSE;
    END;

    LOCAL PROCEDURE "--- Properties ---"@1000000010();
    BEGIN
    END;

    PROCEDURE GetCaptionLength@1000000011() : Integer;
    BEGIN
      ///<summary>Returning caption length</summary>
      ///<returns>The length</returns>

      EXIT(CaptionLength);
    END;

    PROCEDURE SetCaptionLength@1000000012(pCaptionLength@1000000000 : Integer);
    BEGIN
      ///<summary>Setting caption length</summary>
      ///<param name="pCaptionLength">The length</param>

      CaptionLength := pCaptionLength;
    END;

    PROCEDURE GetValueLength@1000000013() : Integer;
    BEGIN
      ///<summary>Returning value length</summary>
      ///<returns>The length</returns>

      EXIT(ValueLength);
    END;

    PROCEDURE SetValueLength@1000000014(pValueLength@1000000000 : Integer);
    BEGIN
      ///<summary>Setting value length</summary>
      ///<param name="pValueLength">The length</param>

      ValueLength := pValueLength;
    END;

    LOCAL PROCEDURE "--- Adding Controls ---"@1000000007();
    BEGIN
    END;

    PROCEDURE AddCaptionControl@1000000009(pId@1000000000 : Integer;pCaption@1000000001 : Text);
    BEGIN
      ///<summary>Adding caption control</summary>
      ///<param name="pId">ID</param>
      ///<param name="pCaption">Caption</param>

      AddControl(pId, NfDialogControl.Type::" ", TRUE, pCaption, FALSE);
    END;

    PROCEDURE AddTextControl@1000000027(pId@1000000000 : Integer;pCaption@1000000001 : Text);
    BEGIN
      ///<summary>Adding text control</summary>
      ///<param name="pId">ID</param>
      ///<param name="pCaption">Caption</param>

      AddControl(pId, NfDialogControl.Type::Text, TRUE, pCaption, TRUE);
    END;

    PROCEDURE AddTextControlNoCaption@1000000029(pId@1000000000 : Integer);
    BEGIN
      ///<summary>Adding text control without caption</summary>
      ///<param name="pId">ID</param>

      AddControl(pId, NfDialogControl.Type::Text, FALSE, '', TRUE);
    END;

    PROCEDURE AddIntegerControl@1000000032(pId@1000000000 : Integer;pCaption@1000000001 : Text);
    BEGIN
      ///<summary>Adding integer control</summary>
      ///<param name="pId">ID</param>
      ///<param name="pCaption">Caption</param>

      AddControl(pId, NfDialogControl.Type::Integer, TRUE, pCaption, TRUE);
    END;

    PROCEDURE AddIntegerControlNoCaption@1000000031(pId@1000000000 : Integer);
    BEGIN
      ///<summary>Adding integer control without caption</summary>
      ///<param name="pId">ID</param>

      AddControl(pId, NfDialogControl.Type::Integer, FALSE, '', TRUE);
    END;

    PROCEDURE AddDecimalControl@1000000034(pId@1000000000 : Integer;pCaption@1000000001 : Text);
    BEGIN
      ///<summary>Adding decimal control</summary>
      ///<param name="pId">ID</param>
      ///<param name="pCaption">Caption</param>

      AddControl(pId, NfDialogControl.Type::Decimal, TRUE, pCaption, TRUE);
    END;

    PROCEDURE AddDecimalControlNoCaption@1000000033(pId@1000000000 : Integer);
    BEGIN
      ///<summary>Adding decimal control without caption</summary>
      ///<param name="pId">ID</param>

      AddControl(pId, NfDialogControl.Type::Decimal, FALSE, '', TRUE);
    END;

    PROCEDURE AddProgressControl@1000000036(pId@1000000000 : Integer;pCaption@1000000001 : Text);
    BEGIN
      ///<summary>Adding progress control</summary>
      ///<param name="pId">ID</param>
      ///<param name="pCaption">Caption</param>

      AddControl(pId, NfDialogControl.Type::Progress, TRUE, pCaption, TRUE);
    END;

    PROCEDURE AddProgressControlNoCaption@1000000035(pId@1000000000 : Integer);
    BEGIN
      ///<summary>Adding progress control without caption</summary>
      ///<param name="pId">ID</param>

      AddControl(pId, NfDialogControl.Type::Progress, FALSE, '', TRUE);
    END;

    LOCAL PROCEDURE AddControl@1000000017(pId@1000000000 : Integer;pType@1000000003 : Option;pShowCaption@1000000001 : Boolean;pCaption@1000000002 : Text;pShowValue@1000000004 : Boolean);
    VAR
      lTextValue@1000000006 : Text;
    BEGIN
      ///<summary>Adding a control</summary>
      ///<param name="pId">ID</param>
      ///<param name="pType">Type</param>
      ///<param name="pShowCaption">Flag to show caption</param>
      ///<param name="pCaption">Caption</param>
      ///<param name="pShowValue">Flag to show value</param>
      ///<param name="pValue">Value</param>

      NfDialogControl.INIT();
      NfDialogControl.ID := pId;
      NfDialogControl.Type := pType;
      NfDialogControl."Show Caption" := pShowCaption;
      NfDialogControl.Caption := COPYSTR(pCaption, 1, MAXSTRLEN(NfDialogControl.Caption));
      IF (CaptionLength > 0) THEN
        NfDialogControl."Caption Length":= CaptionLength;
      NfDialogControl."Show Value" := pShowValue;
      IF (ValueLength > 0) THEN
        NfDialogControl."Value Length" := ValueLength;
      NfDialogControl.INSERT();
    END;

    LOCAL PROCEDURE "--- Manipulating Value ---"@1000000004();
    BEGIN
    END;

    PROCEDURE ClearValue@1000000019(pId@1000000000 : Integer);
    BEGIN
      ///<summary>Clearing value</summary>
      ///<param name="pId">ID</param>

      NfDialogControl.GET(pId);
      CLEAR(NfDialogControl."Text Value");
      CLEAR(NfDialogControl.Value);
      CLEAR(NfDialogControl."Progress Value");
      NfDialogControl.MODIFY();

      UpdateControl(pId);
    END;

    PROCEDURE GetTextValue@1000000008(pId@1000000000 : Integer) : Text;
    BEGIN
      ///<summary>Returning text value</summary>
      ///<param name="pId">ID</param>
      ///<returns>The value</returns>

      NfDialogControl.GET(pId);
      NfDialogControl.TESTFIELD(Type, NfDialogControl.Type::Text);
      EXIT(NfDialogControl."Text Value");
    END;

    PROCEDURE GetIntegerValue@1000000015(pId@1000000000 : Integer) : Integer;
    BEGIN
      ///<summary>Returning integer value</summary>
      ///<param name="pId">ID</param>
      ///<returns>The value</returns>

      NfDialogControl.GET(pId);
      NfDialogControl.TESTFIELD(Type, NfDialogControl.Type::Integer);
      EXIT(NfDialogControl.Value);
    END;

    PROCEDURE GetDecimalValue@1000000016(pId@1000000000 : Integer) : Decimal;
    BEGIN
      ///<summary>Returning decimal value</summary>
      ///<param name="pId">ID</param>
      ///<returns>The value</returns>

      NfDialogControl.GET(pId);
      IF ( NOT (NfDialogControl.Type IN [NfDialogControl.Type::Decimal, NfDialogControl.Type::Progress])) THEN
        NfDialogControl.FIELDERROR(Type);
      EXIT(NfDialogControl.Value);
    END;

    PROCEDURE SetValue@1000000018(pId@1000000000 : Integer;pValue@1000000001 : Variant);
    BEGIN
      ///<summary>Setting value</summary>
      ///<param name="pId">ID</param>
      ///<param name="pValue">The value</param>
      ///<returns>The value</returns>

      NfDialogControl.GET(pId);
      CASE (NfDialogControl.Type) OF
        NfDialogControl.Type::Text:
          NfDialogControl."Text Value" := pValue;
        NfDialogControl.Type::Integer:
          NfDialogControl.Value := ROUND(pValue, 1);
        NfDialogControl.Type::Decimal,
        NfDialogControl.Type::Progress:
          NfDialogControl.Value := pValue;
        ELSE
          NfDialogControl.FIELDERROR(Type);
      END;
      NfDialogControl.MODIFY();

      UpdateControl(pId);
    END;

    LOCAL PROCEDURE "--- Progress ---"@1000000024();
    BEGIN
    END;

    PROCEDURE SetCount@1000000030(pId@1000000001 : Integer;pCount@1000000000 : Integer);
    BEGIN
      ///<summary>Setting count for progress control</summary>
      ///<param name="pId">ID</param>
      ///<param name="pCount">The count</param>

      ClearValue(pId);

      NfDialogControl.GET(pId);
      NfDialogControl.TESTFIELD(Type, NfDialogControl.Type::Progress);
      IF (pCount <> 0) THEN
        NfDialogControl."Progress Step" := 10000 / ABS(pCount)
      ELSE
        NfDialogControl."Progress Step" := 0;
      NfDialogControl.MODIFY();

      UpdateControl(pId);
    END;

    PROCEDURE Step@1000000026(pId@1000000000 : Integer);
    BEGIN
      ///<summary>Stepping progress control</summary>
      ///<param name="pId">ID</param>

      Move(pId, 1);
    END;

    PROCEDURE Move@1000000028(pId@1000000000 : Integer;pSteps@1000000001 : Integer);
    VAR
      lProgressValue@1000000002 : Integer;
      lUpdate@1000000003 : Boolean;
    BEGIN
      ///<summary>Moving progress control (stepping N times)</summary>
      ///<param name="pId">ID</param>
      ///<param name="pSteps">Number of steps</param>

      NfDialogControl.GET(pId);
      NfDialogControl.TESTFIELD(Type, NfDialogControl.Type::Progress);
      NfDialogControl.Value += NfDialogControl."Progress Step" * pSteps;
      lProgressValue := ROUND(NfDialogControl.Value, 100);
      lUpdate := (lProgressValue <> NfDialogControl."Progress Value");
      IF (lUpdate) THEN
        NfDialogControl."Progress Value" := lProgressValue;
      NfDialogControl.MODIFY();
      IF (lUpdate) THEN
        UpdateControl(pId);
    END;

    PROCEDURE MoveToEnd@1000000000(pId@1000000000 : Integer);
    BEGIN
      ///<summary>Moving progress control to its end (100%)</summary>
      ///<param name="pId">ID</param>

      NfDialogControl.GET(pId);
      NfDialogControl.TESTFIELD(Type, NfDialogControl.Type::Progress);
      NfDialogControl.Value := 10000;
      NfDialogControl."Progress Value" := 10000;
      NfDialogControl.MODIFY();
      UpdateControl(pId);
    END;

    LOCAL PROCEDURE "--- Tools ---"@1000000048();
    BEGIN
    END;

    LOCAL PROCEDURE UpdateControl@1000000049(pId@1000000000 : Integer);
    BEGIN
      ///<summary>Updating control with given ID</summary>
      ///<param name="pId">ID</param>

      IF ( NOT (DlgOpened)) THEN
        EXIT;

      NfDialogControl.GET(pId);
      CASE (NfDialogControl.Type) OF
        NfDialogControl.Type::Text:
          Dlg.UPDATE(NfDialogControl.ID, NfDialogControl."Text Value");
        NfDialogControl.Type::Integer,
        NfDialogControl.Type::Decimal:
          Dlg.UPDATE(NfDialogControl.ID, NfDialogControl.Value);
        NfDialogControl.Type::Progress:
          Dlg.UPDATE(NfDialogControl.ID, NfDialogControl."Progress Value");
      END;
    END;

    BEGIN
    {
      ///<summary>Smart NAV dialog management engine</summary>
      ///<change version="NF2016.17" initials="JH" date="2016-06-27">Created</change>
    }
    END.
  }
}

