OBJECT Codeunit 9062234 TNP Numbering
{
  OBJECT-PROPERTIES
  {
    Date=10/05/16;
    Time=12:00:00 PM;
    Version List=NA2016.12;
  }
  PROPERTIES
  {
    OnRun=VAR
            CreatedBy@1000000000 : 'System,Customisation,Reseller,DrinkIT,LSRetail,System Migration';
          BEGIN
          END;

  }
  CODE
  {
    VAR
      eNoNumLeft@1000000000 : TextConst 'ENU=There are no numbers left in the range %1 to %2 for entries Created By %3;ENG=There are no numbers left in the range %1 to %2 for entries Created By %3';
      eNotAlphaNum@1000000001 : TextConst 'ENU=The Character "%1" at Position %2 is not Alpha Numeric (A..B or 0..9) and therefore cannot be used;ENG=The Character "%1" at Position %2 is not Alpha Numeric (A..B or 0..9) and therefore cannot be used';
      String@1000000003 : Codeunit 9062236;
      TNPUtils@1000000002 : Codeunit 9062229;

    PROCEDURE "***** Numbers *****"@1000000002();
    BEGIN
    END;

    PROCEDURE GetNumRange@1000000001(CreatedBy@1000000000 : 'System,Customisation,Reseller,DrinkIT,LSRetail,System Migration';VAR StartNum@1000000002 : Integer;VAR EndNum@1000000001 : Integer);
    BEGIN
      CASE CreatedBy OF
        CreatedBy::System :
          BEGIN
            StartNum := 1;
            EndNum := 49999;
          END;
        CreatedBy::Customisation :
          BEGIN
            StartNum := 50000;
            EndNum := 59999;
          END;
        CreatedBy::Reseller :
          BEGIN
            StartNum := 70000;
            EndNum := 79999;
          END;
        CreatedBy::DrinkIT :
          BEGIN
            StartNum := 80000;
            EndNum := 89999;
          END;
        CreatedBy::LSRetail :
          BEGIN
            StartNum := 90000;
            EndNum := 99999;
          END;
        CreatedBy::"System Migration" :
          BEGIN
            StartNum := 100000;
            EndNum := 109999;
          END;
      END;
    END;

    PROCEDURE GetNextNum_EnhField@1000000000(CreatedBy@1000000000 : 'System,Customisation,Reseller,DrinkIT,LSRetail,System Migration';TableNo@1000000004 : Integer) FieldNo : Integer;
    VAR
      StartNum@1000000001 : Integer;
      EndNum@1000000002 : Integer;
      EnhFieldDef@1000000003 : Record 9062327;
    BEGIN
      GetNumRange(CreatedBy,StartNum,EndNum);
      EnhFieldDef.SETRANGE("Table No.",TableNo);
      EnhFieldDef.SETFILTER("Enhanced Field No.",'%1..%2',StartNum,EndNum);

      IF NOT EnhFieldDef.FINDLAST THEN EXIT(StartNum);
      IF EnhFieldDef."Enhanced Field No." = EndNum THEN ERROR(eNoNumLeft,StartNum,EndNum,CreatedBy);
      EXIT(EnhFieldDef."Enhanced Field No." + 1);
    END;

    PROCEDURE GetNextNum_JetAutopilot@1000000004(CreatedBy@1000000001 : 'System,Customisation,Reseller,DrinkIT,LSRetail,System Migration') JetAutoID : Integer;
    VAR
      StartNum@1000000004 : Integer;
      EndNum@1000000003 : Integer;
      JetAutoPilot@1000000005 : Record 9062296;
      tmpInt@1000000002 : Integer;
    BEGIN
      GetNumRange(CreatedBy,StartNum,EndNum);
      JetAutoPilot.SETFILTER(ID,'%1..%2',StartNum,EndNum);
      IF NOT JetAutoPilot.FINDLAST THEN EXIT(StartNum);
      IF JetAutoPilot.ID = EndNum THEN ERROR(eNoNumLeft,StartNum,EndNum,CreatedBy);
      EXIT(JetAutoPilot.ID + 1);
    END;

    PROCEDURE "***** Codes ******"@1000000005();
    BEGIN
    END;

    PROCEDURE GetCodeAppendage@1000000007(CreatedBy@1000000002 : 'System,Customisation,Reseller,DrinkIT,LSRetail,System Migration') Appendage : Code[10];
    BEGIN
      CASE CreatedBy OF
        CreatedBy::System  : EXIT('.');
        CreatedBy::Customisation : EXIT('');
        CreatedBy::Reseller : EXIT('_');
        CreatedBy::DrinkIT : EXIT(':');
        CreatedBy::LSRetail : EXIT('-');
        CreatedBy::"System Migration" : EXIT(';');
      END;
    END;

    PROCEDURE HandleNonAlphaNumeric@1000000010(CurrentCode@1000000001 : Code[20]) NewCode : Code[50];
    VAR
      i@1000000002 : Integer;
      currChar@1000000003 : Char;
      tmpInt@1000000004 : Integer;
      NewCodeText@1000000000 : Text;
    BEGIN
      FOR i := 1 TO STRLEN(CurrentCode) DO BEGIN
        EVALUATE(currChar,COPYSTR(CurrentCode,i,1));
        IF String.IsCharAlphaNumericOrSpace(currChar) THEN BEGIN
          NewCodeText := NewCodeText + FORMAT(currChar);
        END ELSE BEGIN
          IF i <> STRLEN(CurrentCode) THEN BEGIN
            ERROR(eNotAlphaNum,currChar,i);
          END;
        END;
      END;

      EXIT(NewCodeText);
    END;

    PROCEDURE GetCode@1000000006(CreatedBy@1000000000 : 'System,Customisation,Reseller,DrinkIT,LSRetail,System Migration';CurrentCode@1000000001 : Code[20]) NewCode : Code[20];
    VAR
      i@1000000002 : Integer;
      currChar@1000000003 : Char;
      tmpInt@1000000004 : Integer;
      Appendage@1000000005 : Code[10];
    BEGIN
      //Either error if theres a non alphanumeric char in the code, or strip it from the end
      NewCode := HandleNonAlphaNumeric(CurrentCode);

      //Append the relevant char
      Appendage := GetCodeAppendage(CreatedBy);
      IF (STRLEN(NewCode) + STRLEN(Appendage)) > MAXSTRLEN(NewCode) THEN BEGIN
        NewCode := COPYSTR(NewCode,1, MAXSTRLEN(NewCode)-STRLEN(Appendage));
      END;

      NewCode := NewCode + Appendage;
    END;

    BEGIN
    {
      //DOC NA2015.1  PC 15/08/2013 - Created
      //DOC NA2016.1  JH 26/08/2015 - Upgraded to 2016
      //DOC NA2016.12 JH 28/01/2016 - New string codeunit used
      //DOC NA2016.15 JH 09/05/2016 - CfMD modifications
    }
    END.
  }
}

