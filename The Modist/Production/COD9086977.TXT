OBJECT Codeunit 9086977 nF. No. Series Toolkit
{
  OBJECT-PROPERTIES
  {
    Date=30/10/16;
    Time=11:16:20 AM;
    Version List=NF2016.17;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      NoSeries@1000000000 : Record 308;
      NoSeriesLine@1000000001 : Record 309;
      NfString@1000000002 : Codeunit 9086971;

    PROCEDURE CreateNoSeries@1000000002(pCode@1000000000 : Code[10];pStartingNo@1000000001 : Code[20]) : Boolean;
    BEGIN
      ///<summary>Creating no. series</summary>
      ///<param name="pCode">No. series code</param>
      ///<param name="pStartingNo">Starting number</param>
      ///<returns>TRUE = Created, FALSE = Already exists</returns>

      EXIT(CreateNoSeriesAdv(pCode, '', TRUE, FALSE, pStartingNo));
    END;

    PROCEDURE CreateNoSeriesAdv@1000000004(pCode@1000000000 : Code[10];pDescription@1000000001 : Text;pDefaultNos@1000000002 : Boolean;pManualNos@1000000003 : Boolean;pStartingNo@1000000004 : Code[20]) : Boolean;
    BEGIN
      ///<summary>Creating no. series (advanced version)</summary>
      ///<param name="pCode">No. series code</param>
      ///<param name="pDescription">Description</param>
      ///<param name="pDefaultNos">Default no. series flag</param>
      ///<param name="pManualNos">Manual no. series flag</param>
      ///<param name="pStartingNo">Starting number</param>
      ///<returns>TRUE = Created, FALSE = Already exists</returns>

      IF (NoSeries.GET(pCode)) THEN
        EXIT(FALSE);

      IF (pDescription = '') THEN
        NfString.CodeToName(pCode, pDescription);
      IF (pStartingNo = '') THEN
        pStartingNo := COPYSTR(pCode, 1, 3) + '000001';

      CLEAR(NoSeries);
      NoSeries.INIT();
      NoSeries.VALIDATE(Code, pCode);
      NoSeries.VALIDATE(Description, COPYSTR(pDescription, 1, MAXSTRLEN(NoSeries.Description)));
      NoSeries.VALIDATE("Default Nos.", pDefaultNos);
      NoSeries.VALIDATE("Manual Nos.", pManualNos);
      NoSeries.INSERT(TRUE);

      CLEAR(NoSeriesLine);
      NoSeriesLine.VALIDATE("Series Code", NoSeries.Code);
      NoSeriesLine.VALIDATE("Line No.", 10000);
      NoSeriesLine.VALIDATE("Starting No.", pStartingNo);
      NoSeriesLine.INSERT(TRUE);

      EXIT(TRUE);
    END;

    PROCEDURE GetNoSeries@1000000000(pRecord@1000000000 : Variant;pFieldId@1000000001 : Integer;pCode@1000000003 : Code[10];pStartingNo@1000000002 : Code[20]) : Boolean;
    BEGIN
      ///<summary>Getting no. series from given record</summary>
      ///<param name="pRecord">Record to get the field from / to</param>
      ///<param name="pFieldId">Field ID</param>
      ///<param name="pCode">No. series code</param>
      ///<param name="pStartingNo">Starting number</param>
      ///<returns>TRUE = Field amended, FALSE = Field was already there</returns>

      EXIT(GetNoSeriesAdv(pRecord, pFieldId, pCode, '', TRUE, FALSE, pStartingNo));
    END;

    PROCEDURE GetNoSeriesAdv@1000000001(VAR pRecord@1000000001 : Variant;pFieldId@1000000000 : Integer;pCode@1000000006 : Code[10];pDescription@1000000005 : Text;pDefaultNos@1000000004 : Boolean;pManualNos@1000000003 : Boolean;pStartingNo@1000000002 : Code[20]) : Boolean;
    VAR
      lRecordRef@1000000007 : RecordRef;
      lFieldRef@1000000008 : FieldRef;
      lFieldValue@1000000010 : Text;
      lResult@1000000009 : Boolean;
    BEGIN
      ///<summary>Getting no. series from given record (advanced version)</summary>
      ///<param name="pRecord">Record to get the field from / to</param>
      ///<param name="pFieldId">Field ID</param>
      ///<param name="pCode">No. series code</param>
      ///<param name="pDescription">Description</param>
      ///<param name="pDefaultNos">Default no. series flag</param>
      ///<param name="pManualNos">Manual no. series flag</param>
      ///<param name="pStartingNo">Starting number</param>
      ///<returns>TRUE = Field amended, FALSE = Field was already there</returns>

      lResult := FALSE;
      lRecordRef.GETTABLE(pRecord);
      lFieldRef := lRecordRef.FIELD(pFieldId);
      lFieldValue := lFieldRef.VALUE();
      IF (lFieldValue = '') THEN
      BEGIN
        CreateNoSeriesAdv(pCode, pDescription, pDefaultNos, pManualNos, pStartingNo);
        lFieldRef.VALIDATE(pCode);
        lResult := TRUE;
      END;
      lRecordRef.SETTABLE(pRecord);
      EXIT(lResult);
    END;

    BEGIN
    {
      ///<summary>Toolkit to manipulate no. series information</summary>
      ///<change version="NF2016.17" initials="JH" date="2016-10-30">Created</change>
    }
    END.
  }
}

