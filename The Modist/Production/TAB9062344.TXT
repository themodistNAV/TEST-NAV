OBJECT Table 9062344 Planning Board Action
{
  OBJECT-PROPERTIES
  {
    Date=10/05/16;
    Time=12:00:00 PM;
    Version List=NA2016.15;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               Rec.TESTFIELD("Planning Board Code");
               Rec.TESTFIELD("Parent Table");
               Rec.TESTFIELD("Parent ID");
               CheckModifyPermission();
               TnpToolkit.UpdateCreatedBy(Rec."Created By", Rec."Created Date Time");
             END;

    OnModify=BEGIN
               CheckModifyPermission();
               TnpToolkit.UpdateModifiedBy(Rec."Modified By", Rec."Modified Date Time");
             END;

    OnDelete=BEGIN
               CheckModifyPermission();
             END;

    OnRename=BEGIN
               CheckModifyPermission();
             END;

    CaptionML=[ENU=Planning Board Action Buffer;
               ENG=Planning Board Action Buffer];
  }
  FIELDS
  {
    { 1   ;   ;Planning Board Code ;Code20        ;TableRelation="Planning Board Header";
                                                   CaptionML=[ENU=Planning Board Code;
                                                              ENG=Planning Board Code] }
    { 2   ;   ;Parent Table        ;Option        ;CaptionML=[ENU=Parent Table;
                                                              ENG=Parent Table];
                                                   OptionCaptionML=[ENU=" ,Planning Board Menu Item,Planning Board Event";
                                                                    ENG=" ,Planning Board Menu Item,Planning Board Event"];
                                                   OptionString=[ ,Planning Board Menu Item,Planning Board Event] }
    { 3   ;   ;Parent Table Type   ;Option        ;CaptionML=[ENU=Parent Table Type;
                                                              ENG=Parent Table Type];
                                                   OptionCaptionML=[ENU=" ,Resource,Entry";
                                                                    ENG=" ,Resource,Entry"];
                                                   OptionString=[ ,Resource,Entry] }
    { 4   ;   ;Parent ID           ;Integer       ;CaptionML=[ENU=Parent ID;
                                                              ENG=Parent ID] }
    { 10  ;   ;Action Type         ;Option        ;OnValidate=BEGIN
                                                                IF (Rec."Action Type" <> Rec."Action Type"::"Run Object") THEN
                                                                BEGIN
                                                                  Rec.VALIDATE("Run Object Type", Rec."Run Object Type"::" ");
                                                                  Rec.VALIDATE("Run Object ID", 0);
                                                                END;
                                                                IF (Rec."Action Type" <> Rec."Action Type"::"Open Panel") THEN
                                                                  Rec.VALIDATE("Open Panel Code", '');
                                                                IF (Rec."Action Type" <> Rec."Action Type"::"Open Planning Board") THEN
                                                                  Rec.VALIDATE("Open Planning Board Code", '');
                                                                IF (Rec."Action Type" <> Rec."Action Type"::Custom) THEN
                                                                  Rec.VALIDATE("Action Code", '');
                                                                UpdateChangeToTableId();
                                                                UpdateDescription(FALSE);
                                                              END;

                                                   CaptionML=[ENU=Action Type;
                                                              ENG=Action Type];
                                                   OptionCaptionML=[ENU=" ,Refresh,,,,,,,,,,View Resource,Edit Resource,New Resource,Delete Resource,,,,,,,View Entry,Edit Entry,New Entry,Delete Entry,,,,,,,Drag Entry,Resize Entry,Clone Entry,,,,,,,,Run Object,Open Planning Board,Open Panel,Run Quick Report,Hyperlink,Change Field,,,,,,Custom";
                                                                    ENG=" ,Refresh,,,,,,,,,,View Resource,Edit Resource,New Resource,Delete Resource,,,,,,,View Entry,Edit Entry,New Entry,Delete Entry,,,,,,,Drag Entry,Resize Entry,Clone Entry,,,,,,,,Run Object,Open Planning Board,Open Panel,Run Quick Report,Hyperlink,Change Field,,,,,,Custom"];
                                                   OptionString=[ ,Refresh,,,,,,,,,,View Resource,Edit Resource,New Resource,Delete Resource,,,,,,,View Entry,Edit Entry,New Entry,Delete Entry,,,,,,,Drag Entry,Resize Entry,Clone Entry,,,,,,,,Run Object,Open Planning Board,Open Panel,Run Quick Report,Hyperlink,Change Field,,,,,,Custom] }
    { 20  ;   ;Description         ;Text100       ;CaptionML=[ENU=Description;
                                                              ENG=Description] }
    { 30  ;   ;Run Object Type     ;Option        ;OnValidate=BEGIN
                                                                IF (Rec."Run Object Type" <> xRec."Run Object Type") THEN
                                                                  Rec.VALIDATE("Run Object ID", 0);
                                                                UpdateDescription(FALSE);
                                                              END;

                                                   CaptionML=[ENU=Run Object Type;
                                                              ENG=Run Object Type];
                                                   OptionCaptionML=[ENU=" ,,,Report,,Codeunit,XMLport,,Page";
                                                                    ENG=" ,,,Report,,Codeunit,XMLport,,Page"];
                                                   OptionString=[ ,,,Report,,Codeunit,XMLport,,Page] }
    { 31  ;   ;Run Object ID       ;Integer       ;TableRelation=Object.ID WHERE (Type=FIELD(Run Object Type));
                                                   OnValidate=BEGIN
                                                                Rec.CALCFIELDS("Run Object Name");
                                                                UpdateDescription(FALSE);
                                                              END;

                                                   CaptionML=[ENU=Run Object ID;
                                                              ENG=Run Object ID] }
    { 32  ;   ;Run Object Name     ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObjWithCaption."Object Name" WHERE (Object Type=FIELD(Run Object Type),
                                                                                                             Object ID=FIELD(Run Object ID)));
                                                   OnLookup=BEGIN
                                                              IF (ObjectFieldToolkit.CodeunitLookup(Rec."Run Object ID")) THEN
                                                                Rec.VALIDATE("Run Object ID");
                                                            END;

                                                   CaptionML=[ENU=Run Object Name;
                                                              ENG=Run Object Name];
                                                   Editable=No }
    { 40  ;   ;Open Panel Code     ;Code20        ;TableRelation=Panel;
                                                   OnValidate=BEGIN
                                                                Rec.CALCFIELDS("Open Panel Description");
                                                                UpdateDescription(FALSE);
                                                              END;

                                                   CaptionML=[ENU=Open Panel Code;
                                                              ENG=Open Panel Code] }
    { 41  ;   ;Open Panel Description;Text50      ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Panel.Description WHERE (Code=FIELD(Open Panel Code)));
                                                   CaptionML=[ENU=Open Panel Description;
                                                              ENG=Open Panel Description];
                                                   Editable=No }
    { 50  ;   ;Open Planning Board Code;Code20    ;TableRelation="Planning Board Header";
                                                   OnValidate=BEGIN
                                                                Rec.CALCFIELDS("Open Planning Board Name");
                                                                UpdateDescription(FALSE);
                                                              END;

                                                   CaptionML=[ENU=Open Planning Board Code;
                                                              ENG=Open Planning Board Code] }
    { 51  ;   ;Open Planning Board Name;Text50    ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Planning Board Header".Name WHERE (Code=FIELD(Open Planning Board Code)));
                                                   CaptionML=[ENU=Open Planning Board Name;
                                                              ENG=Open Planning Board Name];
                                                   Editable=No }
    { 60  ;   ;Run Quick Report Code;Code20       ;TableRelation="Quick Report Header";
                                                   OnValidate=BEGIN
                                                                Rec.CALCFIELDS("Run Quick Report Name");
                                                                UpdateDescription(FALSE);
                                                              END;

                                                   CaptionML=[ENU=Run Quick Report Code;
                                                              ENG=Run Quick Report Code] }
    { 61  ;   ;Run Quick Report Name;Text50       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Quick Report Header".Name WHERE (Code=FIELD(Run Quick Report Code)));
                                                   CaptionML=[ENU=Run Quick Report Name;
                                                              ENG=Run Quick Report Name];
                                                   Editable=No }
    { 70  ;   ;Hyperlink URL       ;Text250       ;OnValidate=BEGIN
                                                                UpdateDescription(FALSE);
                                                              END;

                                                   CaptionML=[ENU=Hyperlink URL;
                                                              ENG=Hyperlink URL] }
    { 82  ;   ;Change Table ID     ;Integer       ;TableRelation=AllObj."Object ID" WHERE (Object Type=CONST(Table));
                                                   OnValidate=BEGIN
                                                                IF (Rec."Change Table ID" <> xRec."Change Table ID") THEN
                                                                BEGIN
                                                                  Rec.VALIDATE("Change Field Type", Rec."Change Field Type"::Field);
                                                                  Rec.VALIDATE("Change Field ID", 0);
                                                                END;
                                                                Rec.CALCFIELDS("Change Table Caption");
                                                                UpdateDescription(FALSE);
                                                              END;

                                                   CaptionML=[ENU=Change Table ID;
                                                              ENG=Change Table ID] }
    { 83  ;   ;Change Table Caption;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObjWithCaption."Object Caption" WHERE (Object Type=CONST(Table),
                                                                                                                Object ID=FIELD(Change Table ID)));
                                                   CaptionML=[ENU=Change Table Caption;
                                                              ENG=Change Table Caption] }
    { 84  ;   ;Change Field Type   ;Option        ;OnValidate=BEGIN
                                                                IF (Rec."Change Field Type" <> xRec."Change Field Type") THEN
                                                                  Rec.VALIDATE("Change Field ID", 0);
                                                                UpdateDescription(FALSE);
                                                              END;

                                                   CaptionML=[ENU=Change Field Type;
                                                              ENG=Change Field Type];
                                                   OptionCaptionML=[ENU=" ,Field,Enhanced Field";
                                                                    ENG=" ,Field,Enhanced Field"];
                                                   OptionString=[ ,Field,Enhanced Field] }
    { 85  ;   ;Change Field ID     ;Integer       ;TableRelation=Field.No. WHERE (TableNo=FIELD(Change Table ID));
                                                   OnValidate=BEGIN
                                                                IF (Rec."Change Field ID" <> xRec."Change Field ID") THEN
                                                                BEGIN
                                                                  Rec.VALIDATE("Change Field to Decimal", 0);
                                                                  Rec.VALIDATE("Change Field to Text", '');
                                                                  Rec.VALIDATE("Change Field to DateTime", 0DT);
                                                                END;
                                                                UpdateDescription(FALSE);
                                                              END;

                                                   CaptionML=[ENU=Change Field ID;
                                                              ENG=Change Field ID] }
    { 86  ;   ;Change Field to Decimal;Decimal    ;CaptionML=[ENU=Change Field to Decimal;
                                                              ENG=Change Field to Decimal] }
    { 87  ;   ;Change Field to Text;Text250       ;CaptionML=[ENU=Change Field to Text;
                                                              ENG=Change Field to Text] }
    { 88  ;   ;Change Field to DateTime;DateTime  ;CaptionML=[ENU=Change Field to DateTime;
                                                              ENG=Change Field to DateTime] }
    { 89  ;   ;Change Field Message;Boolean       ;CaptionML=[ENU=Change Field Message;
                                                              ENG=Change Field Message] }
    { 90  ;   ;Action Code         ;Code20        ;OnValidate=BEGIN
                                                                UpdateDescription(FALSE);
                                                              END;

                                                   CaptionML=[ENU=Action Code;
                                                              ENG=Action Code] }
    { 1000;   ;Created By          ;Code50        ;OnLookup=BEGIN
                                                              TnpToolkit.UserLookup(Rec."Created By", FALSE);
                                                            END;

                                                   CaptionML=[ENU=Created By;
                                                              ENG=Created By] }
    { 1001;   ;Created Date Time   ;DateTime      ;CaptionML=[ENU=Created Date Time;
                                                              ENG=Created Date Time] }
    { 1002;   ;Modified By         ;Code50        ;OnLookup=BEGIN
                                                              TnpToolkit.UserLookup(Rec."Modified By", FALSE);
                                                            END;

                                                   CaptionML=[ENU=Modified By;
                                                              ENG=Modified By] }
    { 1003;   ;Modified Date Time  ;DateTime      ;CaptionML=[ENU=Modified Date Time;
                                                              ENG=Modified Date Time] }
  }
  KEYS
  {
    {    ;Planning Board Code,Parent Table,Parent Table Type,Parent ID;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      PlanningBoardHeader@1000000006 : Record 9062337;
      PlanningBoardTable@1000000001 : Record 9062338;
      TableFieldBuffer@1000000003 : Record 9062231;
      Convert@1000000004 : Codeunit 9062683;
      ObjectFieldToolkit@1000000000 : Codeunit 9062343;
      TableFieldManagement@1000000005 : Codeunit 9062248;
      TnpToolkit@9062230 : Codeunit 9062230;
      tDataTypeNotSupported@1000000002 : TextConst 'ENU=Data type "%1" is not supported for planning board "Change Field" functionality.;ENG=Data type "%1" is not supported for planning board "Change Field" functionality.';

    LOCAL PROCEDURE "--- General ---"@1000000003();
    BEGIN
    END;

    LOCAL PROCEDURE CheckModifyPermission@1000000039();
    VAR
      lEnhancedPermissionsMgt@1000000000 : Codeunit 9062277;
    BEGIN
      //DOC NA2016.15 - Checking modify permission for the planning board

      IF ( NOT (PlanningBoardHeader.GET(Rec."Planning Board Code"))) THEN
        EXIT;
      lEnhancedPermissionsMgt.CheckPlanningBoardModifyPermission(PlanningBoardHeader, USERID());
    END;

    LOCAL PROCEDURE "--- Updates ---"@1000000004();
    BEGIN
    END;

    LOCAL PROCEDURE UpdateChangeToTableId@1000000001();
    VAR
      lTableId@1000000000 : Integer;
      eChangeFieldNotPossible@1000000001 : TextConst 'ENU="""%1"" action type is not possible when action is not attached to a planning board table.";ENG="""%1"" action type is not possible when action is not attached to a planning board table."';
    BEGIN
      //DOC NA2016.12 - Updating "Change to Table ID" field

      CLEAR(lTableId);

      IF (Rec."Action Type" = Rec."Action Type"::"Change Field") THEN
      BEGIN
        IF (Rec."Parent Table Type" = Rec."Parent Table Type"::" ") THEN
          ERROR(eChangeFieldNotPossible, Rec."Action Type");
        PlanningBoardTable.GET(Rec."Planning Board Code", Rec."Parent Table Type");
        lTableId := PlanningBoardTable."Table ID";
      END;

      Rec.VALIDATE("Change Table ID", lTableId);
    END;

    LOCAL PROCEDURE UpdateDescription@1000000000(pModify@1000000002 : Boolean);
    VAR
      lAllObj@1000000001 : Record 2000000038;
      lDescription@1000000000 : Text;
      eRunObject@9062230 : TextConst 'ENU=Run %1 "%2";ENG=Run %1 "%2"';
      eChangeFieldTo@1000000003 : TextConst 'ENU="""%1"" to %2";ENG="""%1"" to %2"';
      lFieldCaption@1000000006 : Text;
      lDataType@1000000005 : Integer;
      lValue@1000000004 : Variant;
    BEGIN
      //DOC NA2016.12 - Updating description
      //  -> pModify: Modify flag

      lDescription := FORMAT(Rec."Action Type");

      IF (Rec."Action Type" <> Rec."Action Type"::" ") THEN
      BEGIN
        CASE (Rec."Action Type") OF
          Rec."Action Type"::"Run Object":
            BEGIN
              lAllObj."Object Type" := Rec."Run Object Type";
              Rec.CALCFIELDS("Run Object Name");
              lDescription := STRSUBSTNO(eRunObject, LOWERCASE(FORMAT(lAllObj."Object Type")), Rec."Run Object Name");
            END;
          Rec."Action Type"::"Open Panel":
            BEGIN
              Rec.CALCFIELDS("Open Panel Description");
              lDescription := lDescription + ' ' + STRSUBSTNO('"%1"', Rec."Open Panel Description");
            END;
          Rec."Action Type"::"Open Planning Board":
            BEGIN
              Rec.CALCFIELDS("Open Planning Board Name");
              lDescription := lDescription + ' ' + STRSUBSTNO('"%1"', Rec."Open Planning Board Name");
            END;
          Rec."Action Type"::"Run Quick Report":
            BEGIN
              Rec.CALCFIELDS("Run Quick Report Name");
              lDescription := lDescription + ' ' + STRSUBSTNO('"%1"', Rec."Run Quick Report Name");
            END;
          Rec."Action Type"::Hyperlink:
            lDescription := lDescription + ' ' + STRSUBSTNO('"%1"', Rec."Hyperlink URL");
          Rec."Action Type"::"Change Field":
            BEGIN
              lFieldCaption := Rec.GetChangeFieldCaption();
              IF (lFieldCaption <> '') THEN
              BEGIN
                lDataType := Rec.GetChangeFieldDataType();
                Convert.GetDtdValue(lDataType, Rec."Change Field to Decimal", Rec."Change Field to DateTime", Rec."Change Field to Text", lValue);
                lDescription := lDescription + ' ' +STRSUBSTNO(eChangeFieldTo, lFieldCaption, FORMAT(lValue, 0, 1));
              END;
            END;
          Rec."Action Type"::Custom:
            lDescription := lDescription + ' ' + Rec."Action Code";
        END;
      END;

      Rec.VALIDATE(Description, lDescription);
      IF (pModify) THEN
        Rec.MODIFY(TRUE);
    END;

    LOCAL PROCEDURE "--- Change Field ---"@1000000005();
    BEGIN
    END;

    PROCEDURE GetChangeFieldCaption@1000000011() : Text;
    BEGIN
      //DOC NA2016.12 - Returning "Change Field" caption
      //  <- The caption

      EXIT(ObjectFieldToolkit.GetFieldNameAdv(Rec."Change Table ID", Rec."Change Field Type", Rec."Change Field ID"));
    END;

    PROCEDURE ValidateChangeFieldCaption@1000000012(pChangeFieldCaption@1000000000 : Text) : Boolean;
    VAR
      lChangeFieldId@1000000001 : Integer;
      lResult@1000000002 : Boolean;
    BEGIN
      //DOC NA2016.12 - Validating change field caption
      //  -> pChangeFieldCaption: The caption
      //  <- TRUE = Field ID changed, FALSE = Not

      lResult := FALSE;

      lChangeFieldId := Rec."Change Field ID";
      ObjectFieldToolkit.ValidateFieldNameAdv(Rec."Change Table ID", Rec."Change Field Type", Rec."Change Field ID", pChangeFieldCaption);
      IF (Rec."Change Field ID" <> lChangeFieldId) THEN
      BEGIN
        Rec.VALIDATE("Change Field ID");
        lResult := TRUE;
      END;

      EXIT(lResult);
    END;

    PROCEDURE ChangeFieldLookup@1000000015() : Boolean;
    VAR
      lResult@1000000000 : Boolean;
    BEGIN
      //DOC NA2016.12 - Lookup for "Change Field"
      //  <- Lookup result

      lResult := ObjectFieldToolkit.FieldLookupAdv(Rec."Change Table ID", Rec."Change Field Type", Rec."Change Field ID");
      Rec.VALIDATE("Change Table ID");
      EXIT(lResult);
    END;

    PROCEDURE GetChangeFieldDataType@1000000007() : Integer;
    VAR
      lField@1000000003 : Record 2000000041;
      lEnhancedFieldDefinition@1000000002 : Record 9062327;
      lTableFieldBuffer@1000000001 : Record 9062231;
      lDataType@1000000000 : Integer;
    BEGIN
      //DOC NA2016.12 - Returning data type (as defined in "Table Field Buffer" table) for "Change Field" functionality
      //  <- The data type

      CLEAR(lDataType);
      IF (Rec."Change Field ID" <> 0) THEN
      BEGIN
        Rec.TESTFIELD("Change Table ID");
        Rec.TESTFIELD("Change Field Type");
        CASE (Rec."Change Field Type") OF
          Rec."Change Field Type"::Field:
            BEGIN
              lField.GET(Rec."Change Table ID", Rec."Change Field ID");
              lDataType := TableFieldManagement.FieldTypeToDataType(lField.Type);
            END;
          Rec."Change Field Type"::"Enhanced Field":
            BEGIN
              lEnhancedFieldDefinition.GET(Rec."Change Table ID", Rec."Change Field ID");
              lDataType := TableFieldManagement.EnhancedFieldTypeToDataType(lEnhancedFieldDefinition.Type);
            END;
        END;
      END;
      EXIT(lDataType);
    END;

    PROCEDURE FormatChangeFieldValue@1000000002() : Text;
    VAR
      lDataType@1000000001 : Integer;
      lText@1000000000 : Text;
    BEGIN
      //DOC NA2016.12 - Formatting change field value
      //  <- The text

      CLEAR(lText);
      IF ((Rec."Change Table ID" <> 0) AND (Rec."Change Field Type" <> Rec."Change Field Type"::" ") AND (Rec."Change Field ID" <> 0)) THEN
      BEGIN
        lDataType := Rec.GetChangeFieldDataType();
        lText := Convert.FormatDdt(lDataType, Rec."Change Field to Decimal", Rec."Change Field to DateTime", Rec."Change Field to Text");
      END;
      EXIT(lText);
    END;

    PROCEDURE GetChangeFieldValue@1000000019(VAR pValue@1000000000 : Variant);
    VAR
      lDataType@1000000001 : Integer;
    BEGIN
      //DOC NA2016.12 - Returning change field value
      //  <> pValue: Target value (variant)

      CLEAR(pValue);
      IF ((Rec."Change Table ID" <> 0) AND (Rec."Change Field Type" <> Rec."Change Field Type"::" ") AND (Rec."Change Field ID" <> 0)) THEN
      BEGIN
        lDataType := Rec.GetChangeFieldDataType();
        Convert.GetDtdValue(lDataType, Rec."Change Field to Decimal", Rec."Change Field to DateTime", Rec."Change Field to Text", pValue);
      END;
    END;

    PROCEDURE ValidateChangeFieldValue@1000000018(pValue@1000000000 : Text);
    VAR
      lDataType@1000000001 : Integer;
      lVariantValue@1000000002 : Variant;
    BEGIN
      //DOC NA2016.12 - Validating "Change Field" value
      //  -> pValue: The value

      Rec.TESTFIELD("Change Table ID");
      Rec.TESTFIELD("Change Field Type");
      Rec.TESTFIELD("Change Field ID");
      lDataType := Rec.GetChangeFieldDataType();
      Convert.ParseToDdt(pValue, lDataType, Rec."Change Field to Decimal", Rec."Change Field to DateTime", Rec."Change Field to Text");
      UpdateDescription(FALSE);
    END;

    BEGIN
    {
      //DOC NA2016.12 JH 28/10/2015 - Created
      //DOC NA2016.14 JH 18/02/2016 - Custom action added
      //DOC NA2016.14 JH 14/03/2016 - Fixes
      //DOC NA2016.15 JH 05/05/2016 - Enhanced permissions
    }
    END.
  }
}

