OBJECT Page 5856 Get Post.Doc - P.RcptLn Sbfrm
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[ENU=Lines;
               ENG=Lines];
    SaveValues=Yes;
    LinksAllowed=No;
    SourceTable=Table121;
    PageType=ListPart;
    OnFindRecord=BEGIN
                   IF NOT Visible THEN
                     EXIT(FALSE);

                   IF FIND(Which) THEN BEGIN
                     PurchRcptLine := Rec;
                     WHILE TRUE DO BEGIN
                       ShowRec := IsShowRec(Rec);
                       IF ShowRec THEN
                         EXIT(TRUE);
                       IF NEXT(1) = 0 THEN BEGIN
                         Rec := PurchRcptLine;
                         IF FIND(Which) THEN
                           WHILE TRUE DO BEGIN
                             ShowRec := IsShowRec(Rec);
                             IF ShowRec THEN
                               EXIT(TRUE);
                             IF NEXT(-1) = 0 THEN
                               EXIT(FALSE);
                           END;
                       END;
                     END;
                   END;
                   EXIT(FALSE);
                 END;

    OnNextRecord=VAR
                   RealSteps@1001 : Integer;
                   NextSteps@1000 : Integer;
                 BEGIN
                   IF Steps = 0 THEN
                     EXIT;

                   PurchRcptLine := Rec;
                   REPEAT
                     NextSteps := NEXT(Steps / ABS(Steps));
                     ShowRec := IsShowRec(Rec);
                     IF ShowRec THEN BEGIN
                       RealSteps := RealSteps + NextSteps;
                       PurchRcptLine := Rec;
                     END;
                   UNTIL (NextSteps = 0) OR (RealSteps = Steps);
                   Rec := PurchRcptLine;
                   FIND;
                   EXIT(RealSteps);
                 END;

    OnAfterGetRecord=BEGIN
                       "Document No.HideValue" := FALSE;
                       DocumentNoOnFormat;
                     END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1907935204;1 ;ActionGroup;
                      CaptionML=[ENU=&Line;
                                 ENG=&Line];
                      Image=Line }
      { 1902759804;2 ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Show Document;
                                 ENG=Show Document];
                      Image=View;
                      OnAction=BEGIN
                                 ShowDocument;
                               END;
                                }
      { 1900206204;2 ;Action    ;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 ENG=Dimensions];
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDimensions;
                               END;
                                }
      { 1901652604;2 ;Action    ;
                      ShortCutKey=Shift+Ctrl+I;
                      CaptionML=[ENU=Item &Tracking Lines;
                                 ENG=Item &Tracking Lines];
                      Image=ItemTrackingLines;
                      OnAction=BEGIN
                                 ItemTrackingLines;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                Lookup=No;
                SourceExpr="Document No.";
                HideValue="Document No.HideValue";
                StyleExpr='Strong' }

    { 78  ;2   ;Field     ;
                SourceExpr="Expected Receipt Date" }

    { 50  ;2   ;Field     ;
                SourceExpr="Pay-to Vendor No.";
                Visible=FALSE }

    { 4   ;2   ;Field     ;
                SourceExpr="Buy-from Vendor No.";
                Visible=FALSE }

    { 6   ;2   ;Field     ;
                SourceExpr=Type }

    { 8   ;2   ;Field     ;
                SourceExpr="No." }

    { 28  ;2   ;Field     ;
                SourceExpr="Cross-Reference No.";
                Visible=FALSE }

    { 10  ;2   ;Field     ;
                SourceExpr="Variant Code";
                Visible=FALSE }

    { 42  ;2   ;Field     ;
                SourceExpr=Nonstock;
                Visible=FALSE }

    { 12  ;2   ;Field     ;
                SourceExpr=Description }

    { 44  ;2   ;Field     ;
                SourceExpr="Return Reason Code";
                Visible=FALSE }

    { 48  ;2   ;Field     ;
                SourceExpr="Location Code";
                Visible=FALSE }

    { 54  ;2   ;Field     ;
                SourceExpr="Bin Code";
                Visible=FALSE }

    { 14  ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=FALSE }

    { 16  ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 2 Code";
                Visible=FALSE }

    { 58  ;2   ;Field     ;
                SourceExpr="Unit of Measure Code" }

    { 60  ;2   ;Field     ;
                SourceExpr=Quantity }

    { 26  ;2   ;Field     ;
                SourceExpr="Qty. Rcd. Not Invoiced" }

    { 18  ;2   ;Field     ;
                CaptionML=[ENU=Remaining Quantity;
                           ENG=Remaining Quantity];
                DecimalPlaces=0:5;
                SourceExpr=RemainingQty }

    { 22  ;2   ;Field     ;
                CaptionML=[ENU=Applied Quantity;
                           ENG=Applied Quantity];
                DecimalPlaces=0:5;
                SourceExpr=CalcAppliedQty }

    { 64  ;2   ;Field     ;
                SourceExpr="Unit of Measure";
                Visible=FALSE }

    { 66  ;2   ;Field     ;
                SourceExpr="Unit Cost (LCY)";
                Visible=FALSE }

    { 20  ;2   ;Field     ;
                CaptionML=[ENU=Reverse Unit Cost (LCY);
                           ENG=Reverse Unit Cost (LCY)];
                SourceExpr=RevUnitCostLCY;
                AutoFormatType=2;
                Visible=FALSE }

    { 72  ;2   ;Field     ;
                SourceExpr="Job No.";
                Visible=FALSE }

    { 80  ;2   ;Field     ;
                SourceExpr="Blanket Order No.";
                Visible=FALSE }

    { 82  ;2   ;Field     ;
                SourceExpr="Blanket Order Line No.";
                Visible=FALSE }

  }
  CODE
  {
    VAR
      ToPurchHeader@1009 : Record 38;
      PurchRcptLine@1003 : Record 121;
      TempPurchRcptLine@1002 : TEMPORARY Record 121;
      RemainingQty@1004 : Decimal;
      RevUnitCostLCY@1000 : Decimal;
      RevQtyFilter@1005 : Boolean;
      FillExactCostReverse@1007 : Boolean;
      Visible@1010 : Boolean;
      ShowRec@1001 : Boolean;
      "Document No.HideValue"@19020538 : Boolean INDATASET;

    LOCAL PROCEDURE IsFirstDocLine@2() : Boolean;
    VAR
      PurchRcptLine2@1000 : Record 121;
      RemainingQty2@1001 : Decimal;
      RevUnitCostLCY2@1002 : Decimal;
    BEGIN
      TempPurchRcptLine.RESET;
      TempPurchRcptLine.COPYFILTERS(Rec);
      TempPurchRcptLine.SETRANGE("Document No.","Document No.");
      IF NOT TempPurchRcptLine.FINDFIRST THEN BEGIN
        RemainingQty2 := RemainingQty;
        RevUnitCostLCY2 := RevUnitCostLCY;
        PurchRcptLine2.COPYFILTERS(Rec);
        PurchRcptLine2.SETRANGE("Document No.","Document No.");
        IF NOT PurchRcptLine2.FINDSET THEN
          EXIT(FALSE);
        REPEAT
          ShowRec := IsShowRec(PurchRcptLine2);
          IF ShowRec THEN BEGIN
            TempPurchRcptLine := PurchRcptLine2;
            TempPurchRcptLine.INSERT;
          END;
        UNTIL (PurchRcptLine2.NEXT = 0) OR ShowRec;
        RemainingQty := RemainingQty2;
        RevUnitCostLCY := RevUnitCostLCY2;
      END;

      EXIT("Line No." = TempPurchRcptLine."Line No.");
    END;

    LOCAL PROCEDURE IsShowRec@3(PurchRcptLine2@1000 : Record 121) : Boolean;
    BEGIN
      WITH PurchRcptLine2 DO BEGIN
        RemainingQty := 0;
        IF RevQtyFilter AND (Type = Type::" ") THEN
          EXIT("Attached to Line No." = 0);
        IF Type <> Type::Item THEN
          EXIT(TRUE);
        IF ("Job No." <> '') OR ("Prod. Order No." <> '') THEN
          EXIT(NOT RevQtyFilter);
        CalcReceivedPurchNotReturned(RemainingQty,RevUnitCostLCY,FillExactCostReverse);
        IF NOT RevQtyFilter THEN
          EXIT(TRUE);
        EXIT(RemainingQty > 0);
      END;
    END;

    LOCAL PROCEDURE CalcAppliedQty@6() : Decimal;
    BEGIN
      IF (Type = Type::Item) AND (Quantity - RemainingQty > 0) THEN
        EXIT(Quantity - RemainingQty);
      EXIT(0);
    END;

    PROCEDURE Initialize@4(NewToPurchHeader@1002 : Record 38;NewRevQtyFilter@1000 : Boolean;NewFillExactCostReverse@1001 : Boolean;NewVisible@1003 : Boolean);
    BEGIN
      ToPurchHeader := NewToPurchHeader;
      RevQtyFilter := NewRevQtyFilter;
      FillExactCostReverse := NewFillExactCostReverse;
      Visible := NewVisible;

      IF Visible THEN BEGIN
        TempPurchRcptLine.RESET;
        TempPurchRcptLine.DELETEALL;
      END;
    END;

    PROCEDURE GetSelectedLine@1(VAR FromPurchRcptLine@1000 : Record 121);
    BEGIN
      FromPurchRcptLine.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(FromPurchRcptLine);
    END;

    LOCAL PROCEDURE ShowDocument@5();
    VAR
      PurchRcptHeader@1000 : Record 120;
    BEGIN
      IF NOT PurchRcptHeader.GET("Document No.") THEN
        EXIT;
      PAGE.RUN(PAGE::"Posted Purchase Receipt",PurchRcptHeader);
    END;

    LOCAL PROCEDURE ItemTrackingLines@8();
    VAR
      FromPurchRcptLine@1000 : Record 121;
    BEGIN
      GetSelectedLine(FromPurchRcptLine);
      FromPurchRcptLine.ShowItemTrackingLines;
    END;

    LOCAL PROCEDURE DocumentNoOnFormat@19001080();
    BEGIN
      IF NOT IsFirstDocLine THEN
        "Document No.HideValue" := TRUE;
    END;

    BEGIN
    END.
  }
}

