OBJECT Table 9062371 Panel Selection
{
  OBJECT-PROPERTIES
  {
    Date=10/05/16;
    Time=12:00:00 PM;
    Version List=NA2016.15;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               Rec.TESTFIELD("Page ID");
               TnpToolkit.UpdateCreatedBy(Rec."Created By", Rec."Created Date Time");
             END;

    OnModify=BEGIN
               TnpToolkit.UpdateModifiedBy(Rec."Modified By", Rec."Modified Date Time");
             END;

    CaptionML=[ENU=Panel Selection;
               ENG=Panel Selection];
    LookupPageID=Page9062460;
    DrillDownPageID=Page9062460;
  }
  FIELDS
  {
    { 1   ;   ;Page ID             ;Integer       ;TableRelation=AllObj."Object ID" WHERE (Object Type=CONST(Page));
                                                   CaptionML=[ENU=Page ID;
                                                              ENG=Page ID] }
    { 2   ;   ;User ID             ;Code50        ;TableRelation="Enablement User";
                                                   CaptionML=[ENU=User ID;
                                                              ENG=User ID] }
    { 3   ;   ;Page Name           ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObj."Object Name" WHERE (Object Type=CONST(Page),
                                                                                                  Object ID=FIELD(Page ID)));
                                                   CaptionML=[ENU=Page Name;
                                                              ENG=Page Name];
                                                   Editable=No }
    { 4   ;   ;Panel Index         ;Integer       ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Panel Index;
                                                              ENG=Panel Index] }
    { 5   ;   ;Panel Control Type  ;Option        ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Panel Control Type;
                                                              ENG=Panel Control Type];
                                                   OptionCaptionML=[ENU=" ,Windows,Web,Tablet";
                                                                    ENG=" ,Windows,Web,Tablet"];
                                                   OptionString=[ ,Windows,Web,Tablet] }
    { 6   ;   ;User Name           ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Enablement User".Name WHERE (User ID=FIELD(User ID)));
                                                   CaptionML=[ENU=User Name;
                                                              ENG=User Name];
                                                   Editable=No }
    { 7   ;   ;My Panel Selection  ;Boolean       ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=My Panel Selection;
                                                              ENG=My Panel Selection] }
    { 11  ;   ;Panel Code 1        ;Code20        ;TableRelation=Panel;
                                                   CaptionML=[ENU=Panel Code 1;
                                                              ENG=Panel Code 1] }
    { 12  ;   ;Panel Code 2        ;Code20        ;TableRelation=Panel;
                                                   CaptionML=[ENU=Panel Code 2;
                                                              ENG=Panel Code 2] }
    { 13  ;   ;Panel Code 3        ;Code20        ;TableRelation=Panel;
                                                   CaptionML=[ENU=Panel Code 3;
                                                              ENG=Panel Code 3] }
    { 14  ;   ;Panel Code 4        ;Code20        ;TableRelation=Panel;
                                                   CaptionML=[ENU=Panel Code 4;
                                                              ENG=Panel Code 4] }
    { 15  ;   ;Panel Code 5        ;Code20        ;TableRelation=Panel;
                                                   CaptionML=[ENU=Panel Code 5;
                                                              ENG=Panel Code 5] }
    { 16  ;   ;Panel Code 6        ;Code20        ;TableRelation=Panel;
                                                   CaptionML=[ENU=Panel Code 6;
                                                              ENG=Panel Code 6] }
    { 17  ;   ;Panel Code 7        ;Code20        ;TableRelation=Panel;
                                                   CaptionML=[ENU=Panel Code 7;
                                                              ENG=Panel Code 7] }
    { 18  ;   ;Panel Code 8        ;Code20        ;TableRelation=Panel;
                                                   CaptionML=[ENU=Panel Code 8;
                                                              ENG=Panel Code 8] }
    { 19  ;   ;Panel Code 9        ;Code20        ;TableRelation=Panel;
                                                   CaptionML=[ENU=Panel Code 9;
                                                              ENG=Panel Code 9] }
    { 20  ;   ;Panel Code 10       ;Code20        ;TableRelation=Panel;
                                                   CaptionML=[ENU=Panel Code 10;
                                                              ENG=Panel Code 10] }
    { 30  ;   ;Panel Code          ;Code20        ;FieldClass=FlowFilter;
                                                   TableRelation=Panel;
                                                   CaptionML=[ENU=Panel Code;
                                                              ENG=Panel Code] }
    { 1000;   ;Created By          ;Code50        ;OnLookup=BEGIN
                                                              TnpToolkit.UserLookup(Rec."Created By", FALSE);
                                                            END;

                                                   CaptionML=[ENU=Created By;
                                                              ENG=Created By] }
    { 1001;   ;Created Date Time   ;DateTime      ;CaptionML=[ENU=Created Date Time;
                                                              ENG=Created Date Time] }
    { 1002;   ;Modified By         ;Code50        ;OnLookup=BEGIN
                                                              TnpToolkit.UserLookup(Rec."Modified By", FALSE);
                                                            END;

                                                   CaptionML=[ENU=Modified By;
                                                              ENG=Modified By] }
    { 1003;   ;Modified Date Time  ;DateTime      ;CaptionML=[ENU=Modified Date Time;
                                                              ENG=Modified Date Time] }
  }
  KEYS
  {
    {    ;Page ID,User ID                         ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      TnpToolkit@1000000000 : Codeunit 9062230;

    PROCEDURE GetPanelCode@1000000001(pIndex@1000000000 : Integer) : Code[20];
    BEGIN
      //DOC NA2015.4 - Returning panel code with given index
      //  -> pIndex: The index
      //  <- Panel code

      CASE (pIndex) OF
        1: EXIT(Rec."Panel Code 1");
        2: EXIT(Rec."Panel Code 2");
        3: EXIT(Rec."Panel Code 3");
        4: EXIT(Rec."Panel Code 4");
        5: EXIT(Rec."Panel Code 5");
        6: EXIT(Rec."Panel Code 6");
        7: EXIT(Rec."Panel Code 7");
        8: EXIT(Rec."Panel Code 8");
        9: EXIT(Rec."Panel Code 9");
        10: EXIT(Rec."Panel Code 10");
      END;

      EXIT('');
    END;

    PROCEDURE SetPanelCode@1000000005(pIndex@1000000000 : Integer;pPanelCode@1000000001 : Code[20]);
    BEGIN
      //DOC NA2015.4 - Setting panel code with given index
      //  -> pIndex: The index
      //  -> pPanelCode: The panel code

      CASE (pIndex) OF
        1: Rec.VALIDATE("Panel Code 1", pPanelCode);
        2: Rec.VALIDATE("Panel Code 2", pPanelCode);
        3: Rec.VALIDATE("Panel Code 3", pPanelCode);
        4: Rec.VALIDATE("Panel Code 4", pPanelCode);
        5: Rec.VALIDATE("Panel Code 5", pPanelCode);
        6: Rec.VALIDATE("Panel Code 6", pPanelCode);
        7: Rec.VALIDATE("Panel Code 7", pPanelCode);
        8: Rec.VALIDATE("Panel Code 8", pPanelCode);
        9: Rec.VALIDATE("Panel Code 9", pPanelCode);
        10: Rec.VALIDATE("Panel Code 10", pPanelCode);
      END;
    END;

    PROCEDURE CopyPanelsFrom@1000000000(pPanelSelection@1000000000 : Record 9062371);
    BEGIN
      //DOC NA2015.2 - Copying all panels from specified selection
      //  -> pPanelSelection: Panel selection to copy panels from

      Rec.VALIDATE("Panel Code 1", pPanelSelection."Panel Code 1");
      Rec.VALIDATE("Panel Code 2", pPanelSelection."Panel Code 2");
      Rec.VALIDATE("Panel Code 3", pPanelSelection."Panel Code 3");
      Rec.VALIDATE("Panel Code 4", pPanelSelection."Panel Code 4");
      Rec.VALIDATE("Panel Code 5", pPanelSelection."Panel Code 5");
      Rec.VALIDATE("Panel Code 6", pPanelSelection."Panel Code 6");
      Rec.VALIDATE("Panel Code 7", pPanelSelection."Panel Code 7");
      Rec.VALIDATE("Panel Code 8", pPanelSelection."Panel Code 8");
      Rec.VALIDATE("Panel Code 9", pPanelSelection."Panel Code 9");
      Rec.VALIDATE("Panel Code 10", pPanelSelection."Panel Code 10");
    END;

    PROCEDURE GetPanelCodes@1000000002(VAR pPanelCodes@1000000000 : ARRAY [10] OF Code[20]);
    BEGIN
      //DOC NA2016.10 - Returning an array of panel codes
      //  <> pPanelCodes: Target array

      pPanelCodes[1] := Rec."Panel Code 1";
      pPanelCodes[2] := Rec."Panel Code 2";
      pPanelCodes[3] := Rec."Panel Code 3";
      pPanelCodes[4] := Rec."Panel Code 4";
      pPanelCodes[5] := Rec."Panel Code 5";
      pPanelCodes[6] := Rec."Panel Code 6";
      pPanelCodes[7] := Rec."Panel Code 7";
      pPanelCodes[8] := Rec."Panel Code 8";
      pPanelCodes[9] := Rec."Panel Code 9";
      pPanelCodes[10] := Rec."Panel Code 10";
    END;

    PROCEDURE SetPanelCodes@1000000003(pPanelCodes@1000000000 : ARRAY [10] OF Code[20]);
    BEGIN
      //DOC NA2016.10 - Setting all panel codes from array
      //  -> pPanelCodes: The array

      Rec.VALIDATE("Panel Code 1", pPanelCodes[1]);
      Rec.VALIDATE("Panel Code 2", pPanelCodes[2]);
      Rec.VALIDATE("Panel Code 3", pPanelCodes[3]);
      Rec.VALIDATE("Panel Code 4", pPanelCodes[4]);
      Rec.VALIDATE("Panel Code 5", pPanelCodes[5]);
      Rec.VALIDATE("Panel Code 6", pPanelCodes[6]);
      Rec.VALIDATE("Panel Code 7", pPanelCodes[7]);
      Rec.VALIDATE("Panel Code 8", pPanelCodes[8]);
      Rec.VALIDATE("Panel Code 9", pPanelCodes[9]);
      Rec.VALIDATE("Panel Code 10", pPanelCodes[10]);
    END;

    PROCEDURE GetPageCaption@9062230() : Text;
    VAR
      lPageCaption@9062230 : Text;
      lPageText@9062232 : Text;
      lUserText@9062231 : Text;
      ePage@9062233 : TextConst 'ENU=Page %1;ENG=Page %1';
    BEGIN
      //DOC NA2016.10 - Returning page caption
      //  <- The caption

      Rec.CALCFIELDS("Page Name", "User Name");
      lPageText := TnpToolkit.DefaultString(Rec."Page Name", STRSUBSTNO(ePage, Rec."Page ID"));
      lUserText := TnpToolkit.DefaultString(Rec."User Name", Rec."User ID");

      lPageCaption := lPageText;
      IF ((lPageCaption <> '') AND (lUserText <> '')) THEN
        lPageCaption := lPageCaption + ' - ';
      lPageCaption := lPageCaption + lUserText;
      IF (lPageCaption = '') THEN
        lPageCaption := Rec.TABLECAPTION();

      EXIT(lPageCaption);
    END;

    BEGIN
    {
      //DOC NA2015.1  JH 22/05/2014 - Created
      //DOC NA2015.2  JH 26/05/2014 - Amendments
      //DOC NA2015.4  AZ 02/10/2014 - "Panel Type" flowfilter added
      //DOC NA2015.4  JH 04/02/2015 - "GetPanelCode" and "SetPanelCode" functions added
      //DOC NA2015.8  JH 29/06/2015 - Changed relations to panels
      //DOC NA2016.10 JH 28/08/2015 - Upgraded to 2016
      //DOC NA2016.15 JH 06/05/2016 - CfMD amendments
    }
    END.
  }
}

