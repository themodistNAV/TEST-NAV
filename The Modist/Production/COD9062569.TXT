OBJECT Codeunit 9062569 Picture Buffer Management
{
  OBJECT-PROPERTIES
  {
    Date=26/09/16;
    Time=12:00:00 PM;
    Version List=NA2016.16.2;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      PictureBuffer@1000000000 : Record 9062717;
      ParentRecordRef@1000000001 : RecordRef;
      ParentKeyRef@1000000002 : KeyRef;
      ParentFieldRef@1000000003 : FieldRef;
      tTooComplexKey@1000000005 : TextConst 'ENU=Picture parent table has too complex key - it contains more than 3 fields.;ENG=Picture parent table has too complex key - it contains more than 3 fields.';
      tNoParent@1000000004 : TextConst 'ENU=No parent record can be established for the picture.;ENG=No parent record can be established for the picture.';

    LOCAL PROCEDURE "--- General ---"@1000000007();
    BEGIN
    END;

    PROCEDURE ReadPicture@1000000002(VAR pPictureBuffer@1000000002 : Record 9062717);
    BEGIN
      //DOC NA2016.16.2 - Reading picture from database
      //  <> pPictureBuffer: The picture buffer

      PictureBuffer.COPYFILTERS(pPictureBuffer);
      RetrieveFilters();

      CLEAR(PictureBuffer.Picture);

      IF ((PictureBuffer."Parent Table ID" = 0) OR (PictureBuffer."Parent Primary Key 1" = '') OR
          (PictureBuffer."Parent Field ID" = 0)) THEN
        EXIT;

      ParentRecordRef.OPEN(PictureBuffer."Parent Table ID");
      ParentKeyRef := ParentRecordRef.KEYINDEX(1);
      IF (ParentKeyRef.FIELDCOUNT <= 3) THEN
      BEGIN
        IF (FindParentRecord()) THEN
        BEGIN
          ParentFieldRef := ParentRecordRef.FIELD(PictureBuffer."Parent Field ID");
          ParentFieldRef.CALCFIELD();
          PictureBuffer.Picture := ParentFieldRef.VALUE;
        END;
      END
      ELSE
        ERROR(tTooComplexKey);
      ParentRecordRef.CLOSE();

      pPictureBuffer := PictureBuffer;
    END;

    PROCEDURE IsPictureEditable@1000000009(VAR pPictureBuffer@1000000000 : Record 9062717) : Boolean;
    BEGIN
      //DOC NA2016.16.2 - Answering if picture is editable
      //  <> pPictureBuffer: The picture buffer
      //  <- The answer

      PictureBuffer.COPYFILTERS(pPictureBuffer);
      RetrieveEditableFilter();
      EXIT(PictureBuffer.Editable);
    END;

    PROCEDURE EditPicture@1000000000(VAR pPictureBuffer@1000000000 : Record 9062717);
    BEGIN
      //DOC NA2016.16.2 - Editing picture
      //  <> pPictureBuffer: The picture buffer

      PictureBuffer.COPYFILTERS(pPictureBuffer);
      RetrieveFilters();

      IF ((PictureBuffer."Parent Table ID" = 0) OR (PictureBuffer."Parent Primary Key 1" = '') OR
          (PictureBuffer."Parent Field ID" = 0)) THEN
        ERROR(tNoParent);

      PAGE.RUNMODAL(PAGE::Picture, pPictureBuffer);
      pPictureBuffer.CALCFIELDS(Picture);
    END;

    PROCEDURE WritePicture@1000000003(VAR pPictureBuffer@1000000001 : Record 9062717);
    BEGIN
      //DOC NA2016.16.2 - Writing picture back to the database
      //  <> pPictureBuffer: The picture buffer

      PictureBuffer := pPictureBuffer;
      PictureBuffer.COPYFILTERS(pPictureBuffer);
      RetrieveFilters();

      IF ((PictureBuffer."Parent Table ID" = 0) OR (PictureBuffer."Parent Primary Key 1" = '') OR
          (PictureBuffer."Parent Field ID" = 0)) THEN
        ERROR(tNoParent);

      ParentRecordRef.OPEN(PictureBuffer."Parent Table ID");
      ParentKeyRef := ParentRecordRef.KEYINDEX(1);
      IF (ParentKeyRef.FIELDCOUNT <= 3) THEN
      BEGIN
        IF (FindParentRecord()) THEN
        BEGIN
          ParentFieldRef := ParentRecordRef.FIELD(PictureBuffer."Parent Field ID");
          ParentFieldRef.VALUE := PictureBuffer.Picture;
          ParentRecordRef.MODIFY();
        END;
      END
      ELSE
        ERROR(tTooComplexKey);
      ParentRecordRef.CLOSE();
    END;

    LOCAL PROCEDURE "--- Tools ---"@1000000008();
    BEGIN
    END;

    LOCAL PROCEDURE RetrieveFilters@1000000004();
    VAR
      lFilterGroup@1000000000 : Integer;
    BEGIN
      //DOC NA2016.16.2 - Retrieving filters

      CLEAR(PictureBuffer."Parent Table ID");
      CLEAR(PictureBuffer."Parent Primary Key 1");
      CLEAR(PictureBuffer."Parent Primary Key 2");
      CLEAR(PictureBuffer."Parent Primary Key 3");
      CLEAR(PictureBuffer."Parent Field ID");
      CLEAR(PictureBuffer.Editable);
      FOR lFilterGroup := 6 DOWNTO 0 DO
      BEGIN
        PictureBuffer.FILTERGROUP(lFilterGroup);
        IF (PictureBuffer."Parent Table ID" = 0) THEN
          IF (PictureBuffer.GETFILTER("Parent Table ID") <> '') THEN
            PictureBuffer."Parent Table ID" := PictureBuffer.GETRANGEMIN("Parent Table ID");
        IF (PictureBuffer."Parent Primary Key 1" = '') THEN
          IF (PictureBuffer.GETFILTER("Parent Primary Key 1") <> '') THEN
            PictureBuffer."Parent Primary Key 1" := PictureBuffer.GETRANGEMIN("Parent Primary Key 1");
        IF (PictureBuffer."Parent Primary Key 2" = '') THEN
          IF (PictureBuffer.GETFILTER("Parent Primary Key 2") <> '') THEN
            PictureBuffer."Parent Primary Key 2" := PictureBuffer.GETRANGEMIN("Parent Primary Key 2");
        IF (PictureBuffer."Parent Primary Key 3" = '') THEN
          IF (PictureBuffer.GETFILTER("Parent Primary Key 3") <> '') THEN
            PictureBuffer."Parent Primary Key 3" := PictureBuffer.GETRANGEMIN("Parent Primary Key 3");
        IF (PictureBuffer."Parent Field ID" = 0) THEN
          IF (PictureBuffer.GETFILTER("Parent Field ID") <> '') THEN
            PictureBuffer."Parent Field ID" := PictureBuffer.GETRANGEMIN("Parent Field ID");
        IF (PictureBuffer.GETFILTER(Editable) <> '') THEN
          PictureBuffer.Editable := PictureBuffer.GETRANGEMIN(Editable);
      END;
      PictureBuffer.FILTERGROUP(0);
    END;

    LOCAL PROCEDURE RetrieveEditableFilter@1000000005();
    VAR
      lFilterGroup@1000000000 : Integer;
    BEGIN
      //DOC NA2016.16.2 - Retrieving "Editable" filter

      CLEAR(PictureBuffer.Editable);
      FOR lFilterGroup := 6 DOWNTO 0 DO
      BEGIN
        PictureBuffer.FILTERGROUP(lFilterGroup);
        IF (PictureBuffer.GETFILTER(Editable) <> '') THEN
        BEGIN
          PictureBuffer.Editable := PictureBuffer.GETRANGEMIN(Editable);
          lFilterGroup := 0;
        END;
      END;
      PictureBuffer.FILTERGROUP(0);
    END;

    LOCAL PROCEDURE FindParentRecord@1000000011() : Boolean;
    VAR
      lFieldIndex@1000000000 : Integer;
      lPrimaryKey@1000000001 : Text;
    BEGIN
      //DOC NA2016.16.2 - Trying to find parent record
      //  <- Result

      FOR lFieldIndex := 1 TO ParentKeyRef.FIELDCOUNT DO
      BEGIN
        CASE (lFieldIndex) OF
          1: lPrimaryKey := PictureBuffer."Parent Primary Key 1";
          2: lPrimaryKey := PictureBuffer."Parent Primary Key 2";
          3: lPrimaryKey := PictureBuffer."Parent Primary Key 3";
        END;
        IF (lPrimaryKey <> '') THEN
        BEGIN
          ParentFieldRef := ParentKeyRef.FIELDINDEX(lFieldIndex);
          ParentFieldRef.SETFILTER(lPrimaryKey);
        END;
      END;
      EXIT(ParentRecordRef.FINDFIRST());
    END;

    LOCAL PROCEDURE DiagnoseFilters@1000000001();
    VAR
      lFilterGroup@1000000000 : Integer;
      lFilters@1000000001 : Text;
    BEGIN
      FOR lFilterGroup := 5 DOWNTO 0 DO
      BEGIN
        PictureBuffer.FILTERGROUP(lFilterGroup);
        IF (lFilters <> '') THEN
          lFilters := lFilters + '\';
        lFilters := lFilters + STRSUBSTNO('%1: %2', lFilterGroup, PictureBuffer.GETFILTERS());
      END;
      PictureBuffer.FILTERGROUP(0);
      MESSAGE(lFilters);
    END;

    BEGIN
    {
      //DOC NA2015.8    JH 08/07/2015 - Created
      //DOC NF2016.10   JH 28/09/2015 - Upgraded to 2016
      //DOC NA2016.16.2 JH 08/09/2016 - Editing / writing added
    }
    END.
  }
}

