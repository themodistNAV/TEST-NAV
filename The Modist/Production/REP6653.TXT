OBJECT Report 6653 Combine Return Receipts
{
  OBJECT-PROPERTIES
  {
    Date=09/09/14;
    Time=12:00:00 PM;
    Version List=NAVW18.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Combine Return Receipts;
               ENG=Combine Return Receipts];
    ProcessingOnly=Yes;
  }
  DATASET
  {
    { 2495;    ;DataItem;SalesOrderHeader    ;
               DataItemTable=Table36;
               DataItemTableView=SORTING(Document Type,Combine Shipments,Bill-to Customer No.)
                                 WHERE(Document Type=CONST(Return Order),
                                       Combine Shipments=CONST(Yes));
               ReqFilterHeadingML=[ENU=Sales Return Order;
                                   ENG=Sales Return Order];
               OnPreDataItem=BEGIN
                               IF PostingDateReq = 0D THEN
                                 ERROR(Text000);
                               IF DocDateReq = 0D THEN
                                 ERROR(Text001);

                               Window.OPEN(
                                 Text002 +
                                 Text003 +
                                 Text004 +
                                 Text005);
                             END;

               OnAfterGetRecord=BEGIN
                                  CurrReport.LANGUAGE := Language.GetLanguageID("Language Code");

                                  Window.UPDATE(1,"Bill-to Customer No.");
                                  Window.UPDATE(2,"No.");
                                END;

               OnPostDataItem=BEGIN
                                CurrReport.LANGUAGE := GLOBALLANGUAGE;
                                Window.CLOSE;
                                IF SalesHeader."No." <> '' THEN BEGIN // Not the first time
                                  FinalizeSalesInvHeader;
                                  IF NoOfSalesInvErrors = 0 THEN
                                    MESSAGE(Text010,NoOfSalesInv)
                                  ELSE
                                    MESSAGE(Text007,NoOfSalesInvErrors)
                                END ELSE
                                  MESSAGE(Text008);
                              END;

               ReqFilterFields=Sell-to Customer No.,Bill-to Customer No. }

    { 9963;1   ;DataItem;                    ;
               DataItemTable=Table6660;
               DataItemTableView=SORTING(Return Order No.);
               ReqFilterHeadingML=[ENU=Posted Return Receipts;
                                   ENG=Posted Return Receipts];
               OnAfterGetRecord=BEGIN
                                  Window.UPDATE(3,"No.");
                                END;

               ReqFilterFields=Posting Date;
               DataItemLink=Return Order No.=FIELD(No.) }

    { 5391;2   ;DataItem;                    ;
               DataItemTable=Table6661;
               DataItemTableView=SORTING(Document No.,Line No.)
                                 WHERE(Return Qty. Rcd. Not Invd.=FILTER(<>0));
               OnAfterGetRecord=VAR
                                  SalesGetReturnReceipts@1001 : Codeunit 6638;
                                BEGIN
                                  IF "Return Qty. Rcd. Not Invd." <> 0 THEN BEGIN
                                    IF "Bill-to Customer No." <> Cust."No." THEN
                                      Cust.GET("Bill-to Customer No.");
                                    IF Cust.Blocked <> Cust.Blocked::All THEN BEGIN
                                      IF (SalesOrderHeader."Bill-to Customer No." <> SalesHeader."Bill-to Customer No.") OR
                                         (SalesOrderHeader."Currency Code" <> SalesHeader."Currency Code") OR
                                         (SalesOrderHeader."Dimension Set ID" <> SalesHeader."Dimension Set ID")
                                      THEN BEGIN
                                        IF SalesHeader."No." <> '' THEN
                                          FinalizeSalesInvHeader;
                                        InsertSalesInvHeader;
                                        SalesLine.SETRANGE("Document Type",SalesHeader."Document Type");
                                        SalesLine.SETRANGE("Document No.",SalesHeader."No.");
                                        SalesLine."Document Type" := SalesHeader."Document Type";
                                        SalesLine."Document No." := SalesHeader."No.";
                                      END;
                                      ReturnRcptLine := "Return Receipt Line";
                                      ReturnRcptLine.InsertInvLineFromRetRcptLine(SalesLine);
                                      IF Type = Type::"Charge (Item)" THEN
                                        SalesGetReturnReceipts.GetItemChargeAssgnt("Return Receipt Line",SalesLine."Qty. to Invoice");
                                    END ELSE
                                      NoOfSalesInvErrors := NoOfSalesInvErrors + 1;
                                  END;
                                END;

               DataItemLink=Document No.=FIELD(No.) }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   IF PostingDateReq = 0D THEN
                     PostingDateReq := WORKDATE;
                   IF DocDateReq = 0D THEN
                     DocDateReq := WORKDATE;
                   SalesSetup.GET;
                   CalcInvDisc := SalesSetup."Calc. Inv. Discount";
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ENG=Options] }

      { 1   ;2   ;Field     ;
                  CaptionML=[ENU=Posting Date;
                             ENG=Posting Date];
                  SourceExpr=PostingDateReq }

      { 4   ;2   ;Field     ;
                  CaptionML=[ENU=Document Date;
                             ENG=Document Date];
                  SourceExpr=DocDateReq }

      { 2   ;2   ;Field     ;
                  CaptionML=[ENU=Calc. Inv. Discount;
                             ENG=Calc. Inv. Discount];
                  SourceExpr=CalcInvDisc;
                  OnValidate=BEGIN
                               SalesSetup.GET;
                               SalesSetup.TESTFIELD("Calc. Inv. Discount",FALSE);
                             END;
                              }

      { 3   ;2   ;Field     ;
                  CaptionML=[ENU=Post Credit Memos;
                             ENG=Post Credit Memos];
                  SourceExpr=PostInv }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Enter the posting date.;ENG=Enter the posting date.';
      Text001@1001 : TextConst 'ENU=Enter the document date.;ENG=Enter the document date.';
      Text002@1002 : TextConst 'ENU=Combining return receipts...\\;ENG=Combining return receipts...\\';
      Text003@1003 : TextConst 'ENU=Customer No.        #1##########\;ENG=Customer No.        #1##########\';
      Text004@1004 : TextConst 'ENU=Return Order No.    #2##########\;ENG=Return Order No.    #2##########\';
      Text005@1005 : TextConst 'ENU=Return Receipt No.  #3##########;ENG=Return Receipt No.  #3##########';
      Text007@1006 : TextConst 'ENU=Not all the credit memos were posted. A total of %1 credit memos were not posted.;ENG=Not all the credit memos were posted. A total of %1 credit memos were not posted.';
      Text008@1007 : TextConst 'ENU=There is nothing to combine.;ENG=There is nothing to combine.';
      Text010@1008 : TextConst 'ENU=The return receipts are now combined and the number of credit memos created is %1.;ENG=The return receipts are now combined and the number of credit memos created is %1.';
      SalesHeader@1010 : Record 36;
      SalesLine@1011 : Record 37;
      ReturnRcptLine@1012 : Record 6661;
      SalesSetup@1013 : Record 311;
      Cust@1018 : Record 18;
      Language@1015 : Record 8;
      SalesCalcDisc@1019 : Codeunit 60;
      SalesPost@1020 : Codeunit 80;
      Window@1021 : Dialog;
      PostingDateReq@1022 : Date;
      DocDateReq@1023 : Date;
      CalcInvDisc@1024 : Boolean;
      PostInv@1025 : Boolean;
      NoOfSalesInvErrors@1027 : Integer;
      NoOfSalesInv@1028 : Integer;

    LOCAL PROCEDURE FinalizeSalesInvHeader@2();
    BEGIN
      WITH SalesHeader DO BEGIN
        IF CalcInvDisc THEN
          SalesCalcDisc.RUN(SalesLine);
        FIND;
        COMMIT;
        CLEAR(SalesCalcDisc);
        CLEAR(SalesPost);
        NoOfSalesInv := NoOfSalesInv + 1;
        IF PostInv THEN BEGIN
          CLEAR(SalesPost);
          IF NOT SalesPost.RUN(SalesHeader) THEN
            NoOfSalesInvErrors := NoOfSalesInvErrors + 1;
        END;
      END;
    END;

    LOCAL PROCEDURE InsertSalesInvHeader@1();
    BEGIN
      WITH SalesHeader DO BEGIN
        INIT;
        "Document Type" := "Document Type"::"Credit Memo";
        "No." := '';
        INSERT(TRUE);
        VALIDATE("Sell-to Customer No.",SalesOrderHeader."Bill-to Customer No.");
        IF "Bill-to Customer No." <> "Sell-to Customer No." THEN
          VALIDATE("Bill-to Customer No.",SalesOrderHeader."Bill-to Customer No.");
        VALIDATE("Posting Date",PostingDateReq);
        VALIDATE("Document Date",DocDateReq);
        VALIDATE("Currency Code",SalesOrderHeader."Currency Code");
        "Shortcut Dimension 1 Code" := SalesOrderHeader."Shortcut Dimension 1 Code";
        "Shortcut Dimension 2 Code" := SalesOrderHeader."Shortcut Dimension 2 Code";
        "Dimension Set ID" := SalesOrderHeader."Dimension Set ID";
        MODIFY;
        COMMIT;
      END;
    END;

    PROCEDURE InitializeRequest@4(NewPostingDate@1000 : Date;NewDocumentDate@1001 : Date;NewCalcInvDisc@1002 : Boolean;NewPostCreditMemo@1003 : Boolean);
    BEGIN
      PostingDateReq := NewPostingDate;
      DocDateReq := NewDocumentDate;
      CalcInvDisc := NewCalcInvDisc;
      PostInv := NewPostCreditMemo;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

