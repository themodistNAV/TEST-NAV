OBJECT Codeunit 9062747 Object Generation
{
  OBJECT-PROPERTIES
  {
    Date=26/09/16;
    Time=12:00:00 PM;
    Version List=NA2016.16.2;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      FileSystem@1000000004 : Codeunit 9062264;
      ServerFile@1000000005 : File;
      ServerFilePath@1000000003 : Text;
      Object@1000000002 : Record 2000000001;
      ObjectDateText@1000000000 : Text;
      ObjectTimeText@1000000001 : Text;

    LOCAL PROCEDURE "--- File Functions ---"@1000000022();
    BEGIN
    END;

    PROCEDURE Initialise@1000000003();
    BEGIN
      //DOC NA2016.16.2 - Initialising

      ServerFilePath := FileSystem.GetTempPathForExtension(FALSE, 'txt');
      FileSystem.DeleteFileIfExists(FALSE, ServerFilePath);
      ServerFile.WRITEMODE(TRUE);
      ServerFile.TEXTMODE(TRUE);
      ServerFile.CREATE(ServerFilePath);
    END;

    PROCEDURE ClearBuffer@1000000004(VAR pBuffer@1000000000 : Record 9062765);
    BEGIN
      //DOC NA2016.16.2 - Clearing buffer
      //  <> pBuffer: The buffer

      pBuffer.RESET();
      pBuffer.DELETEALL();
    END;

    PROCEDURE CopyBuffer@1000000008(VAR pFromBuffer@1000000000 : Record 9062765;VAR pToBuffer@1000000001 : Record 9062765);
    BEGIN
      //DOC NA2016.16.2 - Copying from buffer to buffer
      //  <> pFromBuffer: Source buffer
      //  <> pToBuffer: Destination buffer

      IF (pFromBuffer.FINDSET()) THEN
      REPEAT
        pToBuffer.Add0(pFromBuffer.GetText());
      UNTIL (pFromBuffer.NEXT() = 0);
    END;

    PROCEDURE BufferToFile@1000000002(VAR pBuffer@1000000000 : Record 9062765);
    BEGIN
      //DOC NA2016.16.2 - Writing buffer to file
      //  <> pBuffer: The buffer

      IF (pBuffer.FINDSET()) THEN
      REPEAT
        ServerFile.WRITE(pBuffer.GetText());
      UNTIL (pBuffer.NEXT() = 0);
    END;

    PROCEDURE Finalise@1000000013(pClientFileName@1000000002 : Text) : Text;
    VAR
      eFilter@1000000000 : TextConst 'ENU=Text Files (*.txt)|*.txt|All Files (*.*)|*.*;ENG=Text Files (*.txt)|*.txt|All Files (*.*)|*.*';
      lClientFilePath@1000000001 : Text;
    BEGIN
      //DOC NA2016.16.2 - Finalising
      //  -> pClientFileName: Client file name
      //  <- Path the file has been downloaded to

      lClientFilePath := pClientFileName;

      ServerFile.CLOSE();
      DOWNLOAD(ServerFilePath, '', '', eFilter, lClientFilePath);
      FileSystem.DeleteFileIfExists(FALSE, ServerFilePath);

      EXIT(lClientFilePath);
    END;

    LOCAL PROCEDURE "--- Add Methods ---"@1000000000();
    BEGIN
    END;

    PROCEDURE AddObjectHeader@1000000001(VAR pBuffer@1000000003 : Record 9062765;pObjectType@1000000000 : Integer;pObjectId@1000000001 : Integer;pObjectName@1000000002 : Text;pObjectVersion@1000000006 : Text);
    VAR
      lObjectTypeText@1000000004 : Text;
      lObjectIdText@1000000005 : Text;
    BEGIN
      Object.Type := pObjectType;
      lObjectTypeText := FORMAT(Object.Type);
      lObjectIdText := FORMAT(pObjectId, 0, 1);
      IF (ObjectDateText = '') THEN
        ObjectDateText := FORMAT(TODAY(), 0, 1);
      IF (ObjectTimeText = '') THEN
        ObjectTimeText := FORMAT(TIME(), 0, 1);

      pBuffer.Add3('OBJECT %1 %2 %3', lObjectTypeText, lObjectIdText, pObjectName);
      pBuffer.Add0('{');
      pBuffer.Add0('  OBJECT-PROPERTIES');
      pBuffer.Add0('  {');
      pBuffer.Add1('    Date=%1;', ObjectDateText);
      pBuffer.Add1('    Time=%1;', ObjectTimeText);
      pBuffer.Add1('    Version List=%1;', pObjectVersion);
      pBuffer.Add0('  }');
    END;

    PROCEDURE AddObjectPropertiesHeader@1000000006(VAR pBuffer@1000000000 : Record 9062765);
    BEGIN
      pBuffer.Add0('  PROPERTIES');
      pBuffer.Add0('  {');
    END;

    PROCEDURE AddObjectPropertiesFooter@1000000007(VAR pBuffer@1000000000 : Record 9062765);
    BEGIN
      pBuffer.Add0('  }');
    END;

    PROCEDURE AddObjectCodeHeader@1000000010(VAR pBuffer@1000000000 : Record 9062765);
    BEGIN
      pBuffer.Add0('  CODE');
      pBuffer.Add0('  {');
    END;

    PROCEDURE AddObjectCodeFooter@1000000009(VAR pBuffer@1000000000 : Record 9062765);
    BEGIN
      pBuffer.Add0('    BEGIN');
      pBuffer.Add0('    END.');
      pBuffer.Add0('  }');
    END;

    PROCEDURE AddObjectFooter@1000000005(VAR pBuffer@1000000000 : Record 9062765);
    BEGIN
      pBuffer.Add0('}');
    END;

    LOCAL PROCEDURE "--- Tools ---"@1000000011();
    BEGIN
    END;

    PROCEDURE ToCodeIdentifier@1000000012(pText@1000000000 : Text) : Text;
    VAR
      lIndex@1000000002 : Integer;
      lChar@1000000001 : Char;
      lConvertedText@1000000003 : Text;
    BEGIN
      //DOC NA2016.16.2 - Converting text to code identifier (variable / function)
      //  -> pText: Text to convert
      //  <- Converted text

      FOR lIndex := 1 TO STRLEN(pText) DO
      BEGIN
        lChar := pText[lIndex];
        IF (((lChar >= 'A') AND (lChar <= 'Z')) OR ((lChar >= 'a') AND (lChar <= 'z')) OR ((lChar >= '0') AND (lChar <= '9'))) THEN
          lConvertedText := lConvertedText + FORMAT(lChar);
      END;

      EXIT(lConvertedText);
    END;

    BEGIN
    {
      //DOC NA2016.16.2 JH 24/08/2016 - Created
    }
    END.
  }
}

