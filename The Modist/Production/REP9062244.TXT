OBJECT Report 9062244 Copy Tile Group
{
  OBJECT-PROPERTIES
  {
    Date=28/08/15;
    Time=[ 2:41:11 PM];
    Version List=NA2016.1;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Copy Tile Group;
               ENG=Copy Tile Group];
    ProcessingOnly=Yes;
    OnInitReport=BEGIN
                   mCopyTiles := TRUE;
                 END;

    OnPreReport=VAR
                  lToTileGroupId@1000000000 : Integer;
                BEGIN
                  IF (CONFIRM(tConfirmation, TRUE, mSrcTileGroupText, mDstTilePanelCode)) THEN
                    mCopyTilePanel.CopyTileGroup(mSrcTilePanelCode, mSrcTileGroupId, mDstTilePanelCode, lToTileGroupId, FALSE, mCopyTiles);
                END;

    OnPostReport=BEGIN
                   MESSAGE(tFinalMessage, mSrcTileGroupText, mDstTilePanelCode);
                 END;

  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnOpenPage=BEGIN
                   mTilePanelToolkit.SingleTileGroup(mSrcTilePanelCode, mSrcTileGroupId);
                   UpdateGlobals();
                 END;

    }
    CONTROLS
    {
      { 1000000004;;Container;
                  Name=nContentArea;
                  CaptionML=[ENU=Content Area;
                             ENG=Content Area];
                  ContainerType=ContentArea }

      { 1000000002;1;Group  ;
                  Name=nGeneral;
                  CaptionML=ENU=General;
                  GroupType=Group }

      { 1000000003;2;Field  ;
                  Name=nSrcTilePanelCode;
                  CaptionML=[ENU=From Tile Panel;
                             ENG=From Tile Panel];
                  SourceExpr=mSrcTilePanelCode;
                  TableRelation=Panel;
                  OnValidate=BEGIN
                               mSrcTileGroupId := 0;
                               mTilePanelToolkit.SingleTileGroup(mSrcTilePanelCode, mSrcTileGroupId);
                               UpdateGlobals();
                             END;
                              }

      { 1000000001;2;Field  ;
                  Name=nSrcTileGroupText;
                  CaptionML=[ENU=From Tile Group;
                             ENG=From Tile Group];
                  SourceExpr=mSrcTileGroupText;
                  OnValidate=BEGIN
                               mTilePanelToolkit.ValidateTileGroupText(mSrcTilePanelCode, mSrcTileGroupId, mSrcTileGroupText);
                               UpdateGlobals();
                             END;

                  OnLookup=BEGIN
                             mTilePanelToolkit.TileGroupLookup(mSrcTilePanelCode, mSrcTileGroupId);
                             UpdateGlobals();
                           END;
                            }

      { 1000000006;2;Field  ;
                  Name=nDstTilePanelCode;
                  CaptionML=[ENU=To Tile Panel;
                             ENG=To Tile Panel];
                  SourceExpr=mDstTilePanelCode;
                  TableRelation=Panel }

      { 1000000007;1;Group  ;
                  Name=nOptions;
                  CaptionML=[ENU=Options;
                             ENG=Options];
                  GroupType=Group }

      { 1000000000;2;Field  ;
                  Name=nCopyTiles;
                  CaptionML=[ENU=Copy Tiles;
                             ENG=Copy Tiles];
                  SourceExpr=mCopyTiles }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      mCopyTilePanel@1000000015 : Codeunit 9062352;
      mTilePanelToolkit@1000000012 : Codeunit 9062320;
      mSrcTilePanelCode@1000000003 : Code[20];
      mSrcTileGroupId@1000000005 : Integer;
      mSrcTileGroupText@1000000008 : Text[250];
      mDstTilePanelCode@1000000000 : Code[20];
      tConfirmation@1000000013 : TextConst 'ENU=Do you want to copy panel tile group ''%1'' to panel ''%2''?;ENG=Do you want to copy panel tile group ''%1'' to panel ''%2''?';
      tFinalMessage@1000000014 : TextConst 'ENU=Panel tile group ''%1'' has been copied to panel ''%2''.;ENG=Panel tile group ''%1'' has been copied to panel ''%2''.';
      mCopyTiles@1000000002 : Boolean;

    PROCEDURE SetFrom@1000000000(pSrcTilePanelCode@1000000004 : Code[20];pSrcTileGroupId@1000000001 : Integer);
    BEGIN
      mSrcTilePanelCode := pSrcTilePanelCode;
      mSrcTileGroupId := pSrcTileGroupId;
    END;

    LOCAL PROCEDURE UpdateGlobals@1000000001();
    BEGIN
      mSrcTileGroupText := mTilePanelToolkit.TileGroupText(mSrcTilePanelCode, mSrcTileGroupId);
    END;

    BEGIN
    {
      //DOC NA2015.1 JH 29/10/2013 - Created
      //DOC NA2016.1 JH 28/08/2015 - Upgraded to 2016
    }
    END.
  }
  RDLDATA
  {
  }
}

