OBJECT Report 50026 Get Variants
{
  OBJECT-PROPERTIES
  {
    Date=16/04/18;
    Time=[ 3:25:10 PM];
    Modified=Yes;
    Version List=;
  }
  PROPERTIES
  {
  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      ItemLedgerEntry@1000000001 : Record 32;
      ItemLedgerEntry2@1000000002 : Record 32;
      ValueEntry@1000000003 : Record 5802;
      ValueEntry2@1000000004 : Record 5802;
      CompanySalesInvoiceLine@1000000005 : Record 113;
      PurchInvLine@1000000006 : Record 123;
      PurchInvHeader@1000000000 : Record 122;
      SalesHeader@1000000007 : Record 36;
      InternetOrderHeader@1000000008 : Record 9021666;
      IntegrationProcessQueue@1000000009 : Record 50004;

    BEGIN
    {
      CompanySalesInvoiceLine.RESET;
      CompanySalesInvoiceLine.CHANGECOMPANY('The Modist');

      ItemLedgerEntry.RESET;
      ItemLedgerEntry.SETCURRENTKEY("Document No.","Document Type","Document Line No.");

      PurchInvLine.RESET;
      PurchInvLine.FINDSET(TRUE,FALSE);
      REPEAT
        PurchInvHeader.GET(PurchInvLine."Document No.");
        CompanySalesInvoiceLine.SETRANGE("Document No.",PurchInvHeader."Vendor Invoice No.");
        CompanySalesInvoiceLine.SETRANGE("No.",PurchInvLine."No.");
        CompanySalesInvoiceLine.SETRANGE("Line No.",PurchInvLine."Line No.");
        IF CompanySalesInvoiceLine.FINDFIRST THEN BEGIN
          PurchInvLine."Variant Code" := CompanySalesInvoiceLine."Variant Code";
          PurchInvLine.MODIFY;
          ItemLedgerEntry.SETRANGE("Document No.",PurchInvLine."Document No.");
          ItemLedgerEntry.SETRANGE("Document Line No.",PurchInvLine."Line No.");
          ItemLedgerEntry.FINDFIRST;
          ItemLedgerEntry."Variant Code" := PurchInvLine."Variant Code";
          ItemLedgerEntry.MODIFY;
          ValueEntry.SETRANGE("Item Ledger Entry No.",ItemLedgerEntry."Entry No.");
          ValueEntry.FINDFIRST;
          ValueEntry."Variant Code" := PurchInvLine."Variant Code";
          ValueEntry.MODIFY;
        END;
      UNTIL PurchInvLine.NEXT=0;
      *******************
      InternetOrderHeader.RESET;
      InternetOrderHeader.SETRANGE(Status,InternetOrderHeader.Status::New);
      InternetOrderHeader.FINDSET(TRUE,FALSE);
      REPEAT
        InternetOrderHeader.Status := InternetOrderHeader.Status::Rejected;
        InternetOrderHeader.MODIFY;
      UNTIL InternetOrderHeader.NEXT=0;
      ************************
      IntegrationProcessQueue.RESET;
      IntegrationProcessQueue.SETRANGE("Integration Type",'3PL');
      IntegrationProcessQueue.SETRANGE(Processed,FALSE);
      IntegrationProcessQueue.SETRANGE("Group Code",'ORDUPDIMP');
      IF IntegrationProcessQueue.FINDSET(TRUE,FALSE) THEN BEGIN
        REPEAT
          IF NOT SalesHeader.GET(SalesHeader."Document Type"::Order,IntegrationProcessQueue."Document No.") THEN BEGIN
            IntegrationProcessQueue.Processed := TRUE;
            IntegrationProcessQueue.MODIFY;
          END;

        UNTIL IntegrationProcessQueue.NEXT=0;
      END;
    }
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns:cl="http://schemas.microsoft.com/sqlserver/reporting/2010/01/componentdefinition" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
        <Style />
      </Body>
      <Width>6.5in</Width>
      <Page>
        <Style />
      </Page>
    </ReportSection>
  </ReportSections>
  <Code>Public Function BlankZero(ByVal Value As Decimal)
    if Value = 0 then
        Return ""
    end if
    Return Value
End Function

Public Function BlankPos(ByVal Value As Decimal)
    if Value &gt; 0 then
        Return ""
    end if
    Return Value
End Function

Public Function BlankZeroAndPos(ByVal Value As Decimal)
    if Value &gt;= 0 then
        Return ""
    end if
    Return Value
End Function

Public Function BlankNeg(ByVal Value As Decimal)
    if Value &lt; 0 then
        Return ""
    end if
    Return Value
End Function

Public Function BlankNegAndZero(ByVal Value As Decimal)
    if Value &lt;= 0 then
        Return ""
    end if
    Return Value
End Function
</Code>
  <Language>=User!Language</Language>
  <ConsumeContainerWhitespace>true</ConsumeContainerWhitespace>
  <rd:ReportID>0eeb6585-38ae-40f1-885b-8d50088d51b4</rd:ReportID>
  <rd:ReportUnitType>Inch</rd:ReportUnitType>
</Report>
    END_OF_RDLDATA
  }
}

