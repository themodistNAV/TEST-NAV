OBJECT Codeunit 5300 Outlook Synch. Setup Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      OSynchDependency@1007 : Record 5311;
      OSynchEntity@1010 : Record 5300;
      OSynchEntityElement@1006 : Record 5301;
      OSynchFilter@1011 : Record 5303;
      OSynchUserSetup@1014 : Record 5305;
      Field@1001 : Record 2000000041;
      OSynchTypeConversion@1035 : Codeunit 5302;
      OObjLibrary@1005 : DotNet "'Microsoft.Dynamics.NAV.OLSync.OLSyncSupplier, Version=9.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.NAV.OLSync.OLSyncSupplier.OutlookObjectLibrary";
      Text001@1021 : TextConst 'ENU=You should select a table and define a filter.;ENG=You should select a table and define a filter.';
      Text002@1015 : TextConst 'ENU=You cannot setup a correlation with a property of an Outlook item for this field because it is not of the Option type.;ENG=You cannot setup a correlation with a property of an Outlook item for this field because it is not of the Option type.';
      Text003@1009 : TextConst 'ENU=The filter cannot be processed because its length exceeds %1 symbols. Please redefine your criteria.;ENG=The filter cannot be processed because its length exceeds %1 symbols. Please redefine your criteria.';
      Text004@1003 : TextConst 'ENU=The %1 entity cannot be found in the %2 for the selected collection.;ENG=The %1 entity cannot be found in the %2 for the selected collection.';
      Text005@1002 : TextConst 'ENU=The %1 entity should not have the ''%2'' %3 in the %4.;ENG=The %1 entity should not have the ''%2'' %3 in the %4.';
      Text006@1024 : TextConst 'ENU=The %1 entities cannot be found in the %2 for the selected collection.;ENG=The %1 entities cannot be found in the %2 for the selected collection.';
      Text007@1000 : TextConst 'ENU=You cannot setup a correlation with this field. This property of an Outlook item is not an enumeration value. Use the Assist button to see a list of valid enumeration values.;ENG=You cannot setup a correlation with this field. This property of an Outlook item is not an enumeration value. Use the Assist button to see a list of valid enumeration values.';
      Text008@1026 : TextConst 'ENU=The %1 field cannot be empty.;ENG=The %1 field cannot be empty.';
      Text011@1016 : TextConst 'ENU=The %1 table cannot be processed because its primary key contains more than 3 fields.;ENG=The %1 table cannot be processed because its primary key contains more than 3 fields.';
      Text014@1201 : TextConst 'ENU=Installation and configuration of the Microsoft Outlook Integration add-in is not complete. Be sure that Outlook Integration is installed and all required objects are allowed to run.;ENG=Installation and configuration of the Microsoft Outlook Integration add-in is not complete. Be sure that Outlook Integration is installed and all required objects are allowed to run.';

    PROCEDURE ShowTablesList@3() TableID : Integer;
    VAR
      AllObjWithCaption@1000 : Record 2000000058;
    BEGIN
      AllObjWithCaption.RESET;

      IF PAGE.RUNMODAL(PAGE::"Outlook Synch. Table List",AllObjWithCaption) = ACTION::LookupOK THEN
        TableID := AllObjWithCaption."Object ID";
    END;

    PROCEDURE ShowTableFieldsList@7(TableID@1000 : Integer) FieldID : Integer;
    BEGIN
      Field.RESET;
      Field.SETRANGE(TableNo,TableID);

      IF PAGE.RUNMODAL(PAGE::"Outlook Synch. Table Fields",Field) = ACTION::LookupOK THEN
        FieldID := Field."No.";
    END;

    PROCEDURE ShowOItemsList@4() ItemName : Text[80];
    VAR
      TempOSynchLookupName@1002 : TEMPORARY Record 5306;
      Counter@1000 : Integer;
    BEGIN
      CLEAR(OObjLibrary);
      IF NOT CANLOADTYPE(OObjLibrary) THEN
        ERROR(Text014);
      OObjLibrary := OObjLibrary.OutlookObjectLibrary;

      FOR Counter := 1 TO OObjLibrary.ItemsCount DO BEGIN
        TempOSynchLookupName.INIT;
        TempOSynchLookupName.Name := OObjLibrary.GetItemName(Counter);
        TempOSynchLookupName."Entry No." := Counter;
        TempOSynchLookupName.INSERT;
      END;

      ItemName := ShowLookupNames(TempOSynchLookupName);
    END;

    PROCEDURE ShowOItemProperties@8(ItemName@1000 : Text) PropertyName : Text[80];
    VAR
      TempOSynchLookupName@1002 : TEMPORARY Record 5306;
      PropertyList@1003 : DotNet "'Microsoft.Dynamics.NAV.OLSync.OLSyncSupplier, Version=9.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.NAV.OLSync.OLSyncSupplier.OutlookPropertyList";
      Counter@1001 : Integer;
    BEGIN
      CLEAR(OObjLibrary);
      IF NOT CANLOADTYPE(OObjLibrary) THEN
        ERROR(Text014);
      OObjLibrary := OObjLibrary.OutlookObjectLibrary;

      PropertyList := OObjLibrary.GetItem(ItemName);

      FOR Counter := 0 TO PropertyList.Count - 1 DO
        IF NOT PropertyList.Item(Counter).ReturnsCollection THEN BEGIN
          TempOSynchLookupName.INIT;
          TempOSynchLookupName.Name := PropertyList.Item(Counter).Name;
          TempOSynchLookupName."Entry No." := Counter + 1;
          TempOSynchLookupName.INSERT;
        END;

      PropertyName := ShowLookupNames(TempOSynchLookupName);
    END;

    PROCEDURE ShowOCollectionsList@5(ItemName@1000 : Text) CollectionName : Text[80];
    VAR
      TempOSynchLookupName@1002 : TEMPORARY Record 5306;
      PropertyList@1003 : DotNet "'Microsoft.Dynamics.NAV.OLSync.OLSyncSupplier, Version=9.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.NAV.OLSync.OLSyncSupplier.OutlookPropertyList";
      Counter@1001 : Integer;
    BEGIN
      CLEAR(OObjLibrary);
      IF NOT CANLOADTYPE(OObjLibrary) THEN
        ERROR(Text014);
      OObjLibrary := OObjLibrary.OutlookObjectLibrary;

      PropertyList := OObjLibrary.GetItem(ItemName);

      FOR Counter := 0 TO PropertyList.Count - 1 DO
        IF PropertyList.Item(Counter).ReturnsCollection THEN BEGIN
          TempOSynchLookupName.INIT;
          TempOSynchLookupName.Name := PropertyList.Item(Counter).Name;
          TempOSynchLookupName."Entry No." := Counter + 1;
          TempOSynchLookupName.INSERT;
        END;

      CollectionName := COPYSTR(ShowLookupNames(TempOSynchLookupName),1,250);
    END;

    PROCEDURE ShowOCollectionProperties@10(ItemName@1001 : Text;CollectionName@1000 : Text) PropertyName : Text[80];
    VAR
      TempOSynchLookupName@1003 : TEMPORARY Record 5306;
      PropertyList@1005 : DotNet "'Microsoft.Dynamics.NAV.OLSync.OLSyncSupplier, Version=9.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.NAV.OLSync.OLSyncSupplier.OutlookPropertyList";
      InnerPropertyList@1006 : DotNet "'Microsoft.Dynamics.NAV.OLSync.OLSyncSupplier, Version=9.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.NAV.OLSync.OLSyncSupplier.OutlookPropertyList";
      Counter@1002 : Integer;
      Counter1@1004 : Integer;
    BEGIN
      CLEAR(OObjLibrary);
      IF NOT CANLOADTYPE(OObjLibrary) THEN
        ERROR(Text014);
      OObjLibrary := OObjLibrary.OutlookObjectLibrary;

      PropertyList := OObjLibrary.GetItem(ItemName);

      FOR Counter := 0 TO PropertyList.Count - 1 DO
        IF PropertyList.Item(Counter).ReturnsCollection THEN
          IF PropertyList.Item(Counter).Name = CollectionName THEN BEGIN
            InnerPropertyList := PropertyList.Item(Counter).PropertyInfoList;
            FOR Counter1 := 0 TO InnerPropertyList.Count - 1 DO BEGIN
              TempOSynchLookupName.INIT;
              TempOSynchLookupName.Name := InnerPropertyList.Item(Counter1).Name;
              TempOSynchLookupName."Entry No." := TempOSynchLookupName."Entry No." + 1;
              TempOSynchLookupName.INSERT;
            END;
          END;

      PropertyName := ShowLookupNames(TempOSynchLookupName);
    END;

    PROCEDURE ShowOEntityCollections@17(UserID@1003 : Code[50];SynchEntityCode@1000 : Code[10]) ElementNo : Integer;
    VAR
      TempOSynchLookupName@1001 : TEMPORARY Record 5306;
      CollectionName@1002 : Text;
    BEGIN
      WITH OSynchEntityElement DO BEGIN
        RESET;
        SETRANGE("Synch. Entity Code",SynchEntityCode);
        SETFILTER("Outlook Collection",'<>%1','');

        IF FIND('-') THEN
          REPEAT
            TempOSynchLookupName.INIT;
            TempOSynchLookupName.Name := "Outlook Collection";
            TempOSynchLookupName."Entry No." := "Element No.";
            TempOSynchLookupName.INSERT;
          UNTIL NEXT = 0;

        CollectionName := ShowLookupNames(TempOSynchLookupName);
        IF CollectionName <> '' THEN BEGIN
          SETRANGE("Outlook Collection",CollectionName);
          IF FINDFIRST THEN
            IF CheckOCollectionAvailability(OSynchEntityElement,UserID) THEN
              ElementNo := "Element No.";
        END;
      END;
    END;

    PROCEDURE ShowOptionsLookup@9(OptionString@1000 : Text) OptionID : Integer;
    VAR
      TempOSynchLookupName@1005 : TEMPORARY Record 5306;
      Separator@1004 : Text;
      TempString@1003 : Text;
      NamesCount@1002 : Integer;
      Counter@1001 : Integer;
    BEGIN
      IF OptionString = '' THEN
        EXIT;

      Separator := ',';
      NamesCount := 0;
      TempString := OptionString;

      WHILE STRPOS(TempString,Separator) <> 0 DO BEGIN
        NamesCount := NamesCount + 1;
        TempString := DELSTR(TempString,STRPOS(TempString,Separator),1);
      END;

      FOR Counter := 1 TO NamesCount + 1 DO BEGIN
        TempOSynchLookupName.INIT;
        TempOSynchLookupName.Name := SELECTSTR(Counter,OptionString);
        TempOSynchLookupName."Entry No." := TempOSynchLookupName."Entry No." + 1;
        TempOSynchLookupName.INSERT;
      END;

      TempString := ShowLookupNames(TempOSynchLookupName);
      TempOSynchLookupName.SETCURRENTKEY(Name);
      TempOSynchLookupName.SETRANGE(Name,TempString);
      IF TempOSynchLookupName.FINDFIRST THEN
        OptionID := TempOSynchLookupName."Entry No.";
    END;

    PROCEDURE ShowEnumerationsLookup@31(ItemName@1002 : Text;CollectionName@1001 : Text;PropertyName@1000 : Text;VAR EnumerationNo@1007 : Integer) SelectedName : Text[80];
    VAR
      TempOSynchLookupName@1005 : TEMPORARY Record 5306;
      PropertyList@1008 : DotNet "'Microsoft.Dynamics.NAV.OLSync.OLSyncSupplier, Version=9.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.NAV.OLSync.OLSyncSupplier.OutlookPropertyList";
      InnerPropertyList@1010 : DotNet "'Microsoft.Dynamics.NAV.OLSync.OLSyncSupplier, Version=9.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.NAV.OLSync.OLSyncSupplier.OutlookPropertyList";
      PropertyItem@1009 : DotNet "'Microsoft.Dynamics.NAV.OLSync.OLSyncSupplier, Version=9.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.NAV.OLSync.OLSyncSupplier.OutlookPropertyInfo";
      InnerPropertyItem@1011 : DotNet "'Microsoft.Dynamics.NAV.OLSync.OLSyncSupplier, Version=9.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.NAV.OLSync.OLSyncSupplier.OutlookPropertyInfo";
      Counter@1004 : Integer;
      Counter1@1003 : Integer;
      Counter2@1006 : Integer;
    BEGIN
      CLEAR(OObjLibrary);
      IF NOT CANLOADTYPE(OObjLibrary) THEN
        ERROR(Text014);
      OObjLibrary := OObjLibrary.OutlookObjectLibrary;

      PropertyList := OObjLibrary.GetItem(ItemName);

      IF CollectionName = '' THEN BEGIN
        FOR Counter := 0 TO PropertyList.Count - 1 DO BEGIN
          PropertyItem := PropertyList.Item(Counter);
          IF NOT PropertyItem.ReturnsCollection AND (PropertyItem.Name = PropertyName) THEN
            IF PropertyItem.ReturnsEnumeration THEN BEGIN
              FOR Counter1 := 0 TO PropertyItem.EnumerationValues.Count - 1 DO BEGIN
                TempOSynchLookupName.INIT;
                TempOSynchLookupName.Name := PropertyItem.EnumerationValues.Item(Counter1).Key;
                TempOSynchLookupName."Entry No." := PropertyItem.EnumerationValues.Item(Counter1).Value;
                TempOSynchLookupName.INSERT;
              END;

              SelectedName := ShowLookupNames(TempOSynchLookupName);
              EnumerationNo := TempOSynchLookupName."Entry No.";
              EXIT;
            END;
        END;
      END ELSE
        FOR Counter := 0 TO PropertyList.Count - 1 DO
          IF PropertyList.Item(Counter).ReturnsCollection AND (PropertyList.Item(Counter).Name = CollectionName) THEN BEGIN
            InnerPropertyList := PropertyList.Item(Counter).PropertyInfoList;
            FOR Counter1 := 0 TO InnerPropertyList.Count - 1 DO BEGIN
              InnerPropertyItem := InnerPropertyList.Item(Counter1);
              IF InnerPropertyItem.Name = PropertyName THEN
                IF InnerPropertyItem.ReturnsEnumeration THEN BEGIN
                  FOR Counter2 := 0 TO InnerPropertyItem.EnumerationValues.Count - 1 DO BEGIN
                    TempOSynchLookupName.INIT;
                    TempOSynchLookupName.Name := InnerPropertyItem.EnumerationValues.Item(Counter2).Key;
                    TempOSynchLookupName."Entry No." := InnerPropertyItem.EnumerationValues.Item(Counter2).Value;
                    TempOSynchLookupName.INSERT;
                  END;

                  SelectedName := ShowLookupNames(TempOSynchLookupName);
                  EnumerationNo := TempOSynchLookupName."Entry No.";
                  EXIT;
                END;
            END;
          END;
    END;

    LOCAL PROCEDURE ShowLookupNames@1(VAR OSynchLookupNameRec@1000 : Record 5306) SelectedName : Text[80];
    BEGIN
      OSynchLookupNameRec.FINDFIRST;

      IF PAGE.RUNMODAL(PAGE::"Outlook Synch. Lookup Names",OSynchLookupNameRec) = ACTION::LookupOK THEN
        SelectedName := OSynchLookupNameRec.Name;
    END;

    PROCEDURE ShowOSynchFiltersForm@2(RecGUID@1001 : GUID;TableNo@1002 : Integer;MasterTableNo@1003 : Integer) ComposedFilter : Text;
    VAR
      TempOSynchFilter@1006 : TEMPORARY Record 5303;
      OSynchFiltersForm@1005 : Page 5303;
      LookUpOk@1000 : Boolean;
      ShowWarning@1004 : Boolean;
    BEGIN
      IF TableNo = 0 THEN
        ERROR(Text001);

      OSynchFilter.RESET;
      OSynchFilter.SETRANGE("Record GUID",RecGUID);
      IF MasterTableNo = 0 THEN
        OSynchFilter.SETRANGE("Filter Type",OSynchFilter."Filter Type"::Condition)
      ELSE
        OSynchFilter.SETRANGE("Filter Type",OSynchFilter."Filter Type"::"Table Relation");

      CLEAR(OSynchFiltersForm);
      OSynchFiltersForm.SetTables(TableNo,MasterTableNo);
      OSynchFiltersForm.SETTABLEVIEW(OSynchFilter);
      OSynchFiltersForm.SETRECORD(OSynchFilter);

      TempOSynchFilter.RESET;
      TempOSynchFilter.DELETEALL;
      TempOSynchFilter.COPYFILTERS(OSynchFilter);
      IF OSynchFilter.FIND('-') THEN
        REPEAT
          TempOSynchFilter.TRANSFERFIELDS(OSynchFilter);
          TempOSynchFilter.INSERT;
        UNTIL OSynchFilter.NEXT = 0;

      LookUpOk := OSynchFiltersForm.RUNMODAL = ACTION::OK;
      ShowWarning := LookUpOk AND ((OSynchFilter.COUNT = 0) AND (MasterTableNo <> 0));

      IF ShowWarning OR (NOT LookUpOk) THEN BEGIN
        IF OSynchFilter.COUNT > 0 THEN
          OSynchFilter.DELETEALL;
        IF TempOSynchFilter.FIND('-') THEN
          REPEAT
            OSynchFilter.TRANSFERFIELDS(TempOSynchFilter);
            OSynchFilter.INSERT;
          UNTIL TempOSynchFilter.NEXT = 0;
        COMMIT;
      END ELSE
        OSynchFiltersForm.GETRECORD(OSynchFilter);

      ComposedFilter := ComposeFilterExpression(RecGUID,OSynchFilter."Filter Type");
      CLEAR(OSynchFilter);
      IF ShowWarning THEN
        ERROR(Text008,OSynchEntityElement.FIELDCAPTION("Table Relation"));
    END;

    PROCEDURE ShowOOptionCorrelForm@13(OSynchFieldIn@1000 : Record 5304);
    VAR
      OSynchOptionCorrel@1001 : Record 5307;
    BEGIN
      CLEAR(OObjLibrary);
      IF NOT CANLOADTYPE(OObjLibrary) THEN
        ERROR(Text014);
      OObjLibrary := OObjLibrary.OutlookObjectLibrary;

      IF OSynchFieldIn."Table No." = 0 THEN
        Field.GET(OSynchFieldIn."Master Table No.",OSynchFieldIn."Field No.")
      ELSE
        Field.GET(OSynchFieldIn."Table No.",OSynchFieldIn."Field No.");

      IF Field.Type <> Field.Type::Option THEN
        ERROR(Text002);

      OSynchOptionCorrel.RESET;
      OSynchOptionCorrel.SETRANGE("Synch. Entity Code",OSynchFieldIn."Synch. Entity Code");
      OSynchOptionCorrel.SETRANGE("Element No.",OSynchFieldIn."Element No.");
      OSynchOptionCorrel.SETRANGE("Field Line No.",OSynchFieldIn."Line No.");
      PAGE.RUNMODAL(PAGE::"Outlook Synch. Option Correl.",OSynchOptionCorrel);
    END;

    PROCEDURE CheckOCollectionAvailability@28(OSynchEntityElementIn@1000 : Record 5301;UserID@1001 : Code[50]) : Boolean;
    VAR
      OSynchUserSetup1@1004 : Record 5305;
      EntityList@1002 : Text;
      CountAvailable@1003 : Integer;
    BEGIN
      OSynchDependency.RESET;
      OSynchDependency.SETRANGE("Synch. Entity Code",OSynchEntityElementIn."Synch. Entity Code");
      OSynchDependency.SETRANGE("Element No.",OSynchEntityElementIn."Element No.");
      IF OSynchDependency.FIND('-') THEN BEGIN
        REPEAT
          IF OSynchUserSetup.GET(UserID,OSynchDependency."Depend. Synch. Entity Code") THEN BEGIN
            OSynchUserSetup1.GET(UserID,OSynchEntityElementIn."Synch. Entity Code");
            IF (OSynchUserSetup."Synch. Direction" = OSynchUserSetup1."Synch. Direction") OR
               (OSynchUserSetup."Synch. Direction" = OSynchUserSetup."Synch. Direction"::Bidirectional)
            THEN
              CountAvailable := CountAvailable + 1
            ELSE
              ERROR(
                Text005,
                OSynchUserSetup."Synch. Entity Code",
                OSynchUserSetup."Synch. Direction",
                OSynchUserSetup.FIELDCAPTION("Synch. Direction"),
                OSynchUserSetup.TABLECAPTION);
          END ELSE BEGIN
            IF EntityList = '' THEN
              EntityList := OSynchDependency."Depend. Synch. Entity Code"
            ELSE
              EntityList := EntityList + ', ' + OSynchDependency."Depend. Synch. Entity Code";
          END;
        UNTIL OSynchDependency.NEXT = 0;

        IF CountAvailable = OSynchDependency.COUNT THEN
          EXIT(TRUE);

        IF STRPOS(EntityList,',') = 0 THEN
          ERROR(Text004,EntityList,OSynchUserSetup.TABLECAPTION);
        ERROR(Text006,EntityList,OSynchUserSetup.TABLECAPTION);
      END;

      EXIT(TRUE);
    END;

    PROCEDURE ValidateEnumerationValue@33(VAR InputValue@1000 : Text;VAR EnumerationNo@1001 : Integer;ItemName@1004 : Text;CollectionName@1003 : Text;PropertyName@1002 : Text);
    VAR
      TempOSynchLookupName@1008 : TEMPORARY Record 5306;
      PropertyList@1011 : DotNet "'Microsoft.Dynamics.NAV.OLSync.OLSyncSupplier, Version=9.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.NAV.OLSync.OLSyncSupplier.OutlookPropertyList";
      InnerPropertyList@1013 : DotNet "'Microsoft.Dynamics.NAV.OLSync.OLSyncSupplier, Version=9.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.NAV.OLSync.OLSyncSupplier.OutlookPropertyList";
      PropertyItem@1012 : DotNet "'Microsoft.Dynamics.NAV.OLSync.OLSyncSupplier, Version=9.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.NAV.OLSync.OLSyncSupplier.OutlookPropertyInfo";
      InnerPropertyItem@1014 : DotNet "'Microsoft.Dynamics.NAV.OLSync.OLSyncSupplier, Version=9.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.NAV.OLSync.OLSyncSupplier.OutlookPropertyInfo";
      Counter@1007 : Integer;
      Counter1@1006 : Integer;
      Counter2@1005 : Integer;
      IntVar@1009 : Integer;
    BEGIN
      CLEAR(OObjLibrary);
      IF NOT CANLOADTYPE(OObjLibrary) THEN
        ERROR(Text014);
      OObjLibrary := OObjLibrary.OutlookObjectLibrary;

      TempOSynchLookupName.RESET;
      TempOSynchLookupName.DELETEALL;

      PropertyList := OObjLibrary.GetItem(ItemName);

      IF CollectionName = '' THEN BEGIN
        FOR Counter := 0 TO PropertyList.Count - 1 DO BEGIN
          PropertyItem := PropertyList.Item(Counter);

          IF NOT PropertyItem.ReturnsCollection AND (PropertyItem.Name = PropertyName) THEN
            IF PropertyItem.ReturnsEnumeration THEN BEGIN
              FOR Counter1 := 0 TO PropertyItem.EnumerationValues.Count - 1 DO BEGIN
                TempOSynchLookupName.INIT;
                TempOSynchLookupName.Name := PropertyItem.EnumerationValues.Item(Counter1).Key;
                TempOSynchLookupName."Entry No." := PropertyItem.EnumerationValues.Item(Counter1).Value;
                TempOSynchLookupName.INSERT;
              END;

              IF EVALUATE(IntVar,InputValue) THEN BEGIN
                TempOSynchLookupName.RESET;
                TempOSynchLookupName.SETRANGE("Entry No.",IntVar);
                IF TempOSynchLookupName.FINDFIRST THEN BEGIN
                  InputValue := TempOSynchLookupName.Name;
                  EnumerationNo := TempOSynchLookupName."Entry No.";
                  EXIT;
                END;
              END;

              TempOSynchLookupName.RESET;
              TempOSynchLookupName.SETFILTER(Name,'@' + InputValue + '*');
              IF NOT TempOSynchLookupName.FINDFIRST THEN
                ERROR(Text007);

              InputValue := TempOSynchLookupName.Name;
              EnumerationNo := TempOSynchLookupName."Entry No.";
              EXIT;
            END;
        END;
      END ELSE
        FOR Counter := 0 TO PropertyList.Count - 1 DO BEGIN
          PropertyItem := PropertyList.Item(Counter);
          IF PropertyItem.ReturnsCollection AND (PropertyItem.Name = CollectionName) THEN BEGIN
            InnerPropertyList := PropertyItem.PropertyInfoList;
            FOR Counter1 := 0 TO InnerPropertyList.Count - 1 DO BEGIN
              InnerPropertyItem := InnerPropertyList.Item(Counter1);
              IF InnerPropertyItem.Name = PropertyName THEN
                IF InnerPropertyItem.ReturnsEnumeration THEN BEGIN
                  FOR Counter2 := 0 TO InnerPropertyItem.EnumerationValues.Count - 1 DO BEGIN
                    TempOSynchLookupName.INIT;
                    TempOSynchLookupName.Name := InnerPropertyItem.EnumerationValues.Item(Counter2).Key;
                    TempOSynchLookupName."Entry No." := InnerPropertyItem.EnumerationValues.Item(Counter2).Value;
                    TempOSynchLookupName.INSERT;
                  END;

                  IF EVALUATE(IntVar,InputValue) THEN BEGIN
                    TempOSynchLookupName.RESET;
                    TempOSynchLookupName.SETRANGE("Entry No.",IntVar);
                    IF TempOSynchLookupName.FINDFIRST THEN BEGIN
                      InputValue := TempOSynchLookupName.Name;
                      EnumerationNo := TempOSynchLookupName."Entry No.";
                      EXIT;
                    END;
                  END;

                  TempOSynchLookupName.RESET;
                  TempOSynchLookupName.SETFILTER(Name,'@' + InputValue + '*');
                  IF NOT TempOSynchLookupName.FINDFIRST THEN
                    ERROR(Text007);

                  InputValue := TempOSynchLookupName.Name;
                  EnumerationNo := TempOSynchLookupName."Entry No.";
                  EXIT;
                END;
            END;
          END;
        END;
    END;

    PROCEDURE ValidateFieldName@30(VAR NameString@1000 : Text;TableID@1001 : Integer) : Boolean;
    BEGIN
      Field.RESET;
      Field.SETRANGE(TableNo,TableID);
      Field.SETFILTER("Field Caption",'@' + OSynchTypeConversion.ReplaceFilterChars(NameString) + '*');
      IF Field.FINDFIRST THEN BEGIN
        NameString := Field."Field Caption";
        EXIT(TRUE);
      END;
    END;

    PROCEDURE ValidateOutlookItemName@25(VAR InputString@1000 : Text) : Boolean;
    VAR
      TempOSynchLookupName@1002 : TEMPORARY Record 5306;
      Counter@1001 : Integer;
    BEGIN
      CLEAR(OObjLibrary);
      IF NOT CANLOADTYPE(OObjLibrary) THEN
        ERROR(Text014);
      OObjLibrary := OObjLibrary.OutlookObjectLibrary;

      FOR Counter := 1 TO OObjLibrary.ItemsCount DO BEGIN
        TempOSynchLookupName.INIT;
        TempOSynchLookupName.Name := OObjLibrary.GetItemName(Counter);
        TempOSynchLookupName."Entry No." := Counter;
        TempOSynchLookupName.INSERT;
      END;

      TempOSynchLookupName.SETCURRENTKEY(Name);
      TempOSynchLookupName.SETFILTER(Name,'@' + OSynchTypeConversion.ReplaceFilterChars(InputString) + '*');

      IF TempOSynchLookupName.FINDFIRST THEN BEGIN
        InputString := TempOSynchLookupName.Name;
        EXIT(TRUE);
      END;
    END;

    PROCEDURE ValidateOutlookCollectionName@18(VAR InputString@1000 : Text;ItemName@1004 : Text) : Boolean;
    VAR
      TempOSynchLookupName@1002 : TEMPORARY Record 5306;
      PropertyList@1003 : DotNet "'Microsoft.Dynamics.NAV.OLSync.OLSyncSupplier, Version=9.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.NAV.OLSync.OLSyncSupplier.OutlookPropertyList";
      Counter@1001 : Integer;
    BEGIN
      CLEAR(OObjLibrary);
      IF NOT CANLOADTYPE(OObjLibrary) THEN
        ERROR(Text014);
      OObjLibrary := OObjLibrary.OutlookObjectLibrary;

      PropertyList := OObjLibrary.GetItem(ItemName);

      FOR Counter := 0 TO PropertyList.Count - 1 DO
        IF PropertyList.Item(Counter).ReturnsCollection THEN BEGIN
          TempOSynchLookupName.INIT;
          TempOSynchLookupName.Name := PropertyList.Item(Counter).Name;
          TempOSynchLookupName."Entry No." := Counter + 1;
          TempOSynchLookupName.INSERT;
        END;

      TempOSynchLookupName.SETCURRENTKEY(Name);
      TempOSynchLookupName.SETFILTER(Name,'@' + OSynchTypeConversion.ReplaceFilterChars(InputString) + '*');

      IF TempOSynchLookupName.FINDFIRST THEN BEGIN
        InputString := TempOSynchLookupName.Name;
        EXIT(TRUE);
      END;
    END;

    PROCEDURE ValidateOItemPropertyName@11(VAR InputString@1002 : Text;ItemName@1003 : Text;VAR IsReadOnly@1004 : Boolean;FullTextSearch@1005 : Boolean) : Boolean;
    VAR
      TempOSynchLookupName@1001 : TEMPORARY Record 5306;
      PropertyList@1007 : DotNet "'Microsoft.Dynamics.NAV.OLSync.OLSyncSupplier, Version=9.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.NAV.OLSync.OLSyncSupplier.OutlookPropertyList";
      PropertyItem@1006 : DotNet "'Microsoft.Dynamics.NAV.OLSync.OLSyncSupplier, Version=9.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.NAV.OLSync.OLSyncSupplier.OutlookPropertyInfo";
      Counter@1000 : Integer;
    BEGIN
      IF ISNULL(OObjLibrary) THEN
        IF NOT CANLOADTYPE(OObjLibrary) THEN
          ERROR(Text014);
      OObjLibrary := OObjLibrary.OutlookObjectLibrary;

      PropertyList := OObjLibrary.GetItem(ItemName);

      FOR Counter := 0 TO PropertyList.Count - 1 DO
        IF NOT PropertyList.Item(Counter).ReturnsCollection THEN BEGIN
          TempOSynchLookupName.INIT;
          TempOSynchLookupName.Name := PropertyList.Item(Counter).Name;
          TempOSynchLookupName."Entry No." := Counter + 1;
          TempOSynchLookupName.INSERT;
        END;

      TempOSynchLookupName.SETCURRENTKEY(Name);

      IF FullTextSearch THEN
        TempOSynchLookupName.SETFILTER(Name,'@' + OSynchTypeConversion.ReplaceFilterChars(InputString))
      ELSE
        TempOSynchLookupName.SETFILTER(Name,'@' + OSynchTypeConversion.ReplaceFilterChars(InputString) + '*');

      IF TempOSynchLookupName.FINDFIRST THEN BEGIN
        InputString := TempOSynchLookupName.Name;
        PropertyItem := PropertyList.Item(TempOSynchLookupName."Entry No." - 1);
        IsReadOnly := PropertyItem.IsReadOnly;
        EXIT(TRUE);
      END;
    END;

    PROCEDURE ValidateOCollectPropertyName@26(VAR InputString@1004 : Text;ItemName@1003 : Text;CollectionName@1005 : Text;VAR IsReadOnly@1006 : Boolean;FullTextSearch@1007 : Boolean) : Boolean;
    VAR
      TempOSynchLookupName@1002 : TEMPORARY Record 5306;
      PropertyList@1008 : DotNet "'Microsoft.Dynamics.NAV.OLSync.OLSyncSupplier, Version=9.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.NAV.OLSync.OLSyncSupplier.OutlookPropertyList";
      InnerPropertyList@1009 : DotNet "'Microsoft.Dynamics.NAV.OLSync.OLSyncSupplier, Version=9.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.NAV.OLSync.OLSyncSupplier.OutlookPropertyList";
      Counter@1001 : Integer;
      Counter1@1000 : Integer;
    BEGIN
      CLEAR(OObjLibrary);
      IF NOT CANLOADTYPE(OObjLibrary) THEN
        ERROR(Text014);
      OObjLibrary := OObjLibrary.OutlookObjectLibrary;

      PropertyList := OObjLibrary.GetItem(ItemName);

      FOR Counter := 0 TO PropertyList.Count - 1 DO
        IF PropertyList.Item(Counter).ReturnsCollection THEN
          IF PropertyList.Item(Counter).Name = CollectionName THEN BEGIN
            InnerPropertyList := PropertyList.Item(Counter).PropertyInfoList;
            FOR Counter1 := 0 TO InnerPropertyList.Count - 1 DO BEGIN
              TempOSynchLookupName.INIT;
              TempOSynchLookupName.Name := InnerPropertyList.Item(Counter1).Name;
              TempOSynchLookupName."Entry No." := TempOSynchLookupName."Entry No." + 1;
              TempOSynchLookupName.INSERT;
            END;
          END;

      TempOSynchLookupName.SETCURRENTKEY(Name);

      IF FullTextSearch THEN
        TempOSynchLookupName.SETFILTER(Name,'@' + OSynchTypeConversion.ReplaceFilterChars(InputString))
      ELSE
        TempOSynchLookupName.SETFILTER(Name,'@' + OSynchTypeConversion.ReplaceFilterChars(InputString) + '*');

      IF TempOSynchLookupName.FINDFIRST THEN
        FOR Counter := 0 TO PropertyList.Count - 1 DO
          IF PropertyList.Item(Counter).ReturnsCollection THEN
            IF PropertyList.Item(Counter).Name = CollectionName THEN BEGIN
              InnerPropertyList := PropertyList.Item(Counter).PropertyInfoList;
              FOR Counter1 := 0 TO InnerPropertyList.Count - 1 DO BEGIN
                InputString := InnerPropertyList.Item(Counter1).Name;
                IF TempOSynchLookupName.Name = InnerPropertyList.Item(Counter1).Name THEN BEGIN
                  InputString := InnerPropertyList.Item(Counter1).Name;
                  IsReadOnly := InnerPropertyList.Item(Counter1).IsReadOnly;
                  EXIT(TRUE);
                END;
              END;
            END;
    END;

    PROCEDURE ComposeFilterExpression@12(RecGUID@1000 : GUID;FilterType@1001 : Integer) OutFilterString : Text[250];
    VAR
      Delimiter@1003 : Text;
      TempString@1004 : Text;
      FilterLength@1005 : Integer;
    BEGIN
      OSynchFilter.RESET;
      OSynchFilter.SETRANGE("Record GUID",RecGUID);
      OSynchFilter.SETRANGE("Filter Type",FilterType);

      OutFilterString := '';
      IF OSynchFilter.FIND('-') THEN BEGIN
        Delimiter := '';
        REPEAT
          FilterLength := STRLEN(TempString) +
            STRLEN(OSynchFilter.GetFieldCaption) + STRLEN(FORMAT(OSynchFilter.Type)) + STRLEN(OSynchFilter.Value);
          IF FilterLength + STRLEN(TempString) > MAXSTRLEN(TempString) - 5 THEN
            ERROR(Text003,FORMAT(MAXSTRLEN(TempString)));
          TempString :=
            STRSUBSTNO('%1%2%3=%4(%5)',
              TempString,Delimiter,OSynchFilter.GetFieldCaption,FORMAT(OSynchFilter.Type),OSynchFilter.Value);
          Delimiter := ',';
        UNTIL OSynchFilter.NEXT = 0;

        TempString := STRSUBSTNO('WHERE(%1)',TempString);
        IF STRLEN(TempString) > 250 THEN
          OutFilterString := STRSUBSTNO('%1...',COPYSTR(TempString,1,247))
        ELSE
          OutFilterString := TempString;
      END;
    END;

    PROCEDURE ComposeTableFilter@6(VAR OSynchFilterIn@1000 : Record 5303;SynchRecRef@1001 : RecordRef) OutFilterString : Text[250];
    VAR
      MasterFieldRef@1002 : FieldRef;
      Delimiter@1003 : Text;
      TempStr@1004 : Text;
      FilterString@1007 : Text;
      FilterLength@1005 : Integer;
    BEGIN
      OutFilterString := '';
      FilterString := '';
      IF NOT OSynchFilterIn.FIND('-') THEN
        EXIT;

      Delimiter := '';
      REPEAT
        CASE OSynchFilterIn.Type OF
          OSynchFilterIn.Type::CONST:
            BEGIN
              TempStr := OSynchFilterIn.FilterExpression;
              FilterString := STRSUBSTNO('%1%2%3',FilterString,Delimiter,TempStr)
            END;
          OSynchFilterIn.Type::FILTER:
            BEGIN
              TempStr := OSynchFilterIn.FilterExpression;
              FilterString := STRSUBSTNO('%1%2%3',FilterString,Delimiter,TempStr)
            END;
          OSynchFilterIn.Type::FIELD:
            BEGIN
              MasterFieldRef := SynchRecRef.FIELD(OSynchFilterIn."Master Table Field No.");
              TempStr := STRSUBSTNO('FILTER(%1)',OSynchTypeConversion.ReplaceFilterChars(FORMAT(MasterFieldRef.VALUE)));
              FilterLength := STRLEN(FilterString) + STRLEN(Delimiter) + STRLEN(OSynchFilterIn.GetFieldCaption) + STRLEN(TempStr);
              IF FilterLength > 1000 THEN
                ERROR(Text003,FORMAT(1000));
              FilterString := STRSUBSTNO('%1%2%3=%4',FilterString,Delimiter,OSynchFilterIn.GetFieldCaption,TempStr);
            END;
        END;
        Delimiter := ',';
      UNTIL OSynchFilterIn.NEXT = 0;

      OutFilterString := COPYSTR(STRSUBSTNO('WHERE(%1)',FilterString),1,250);
    END;

    PROCEDURE ComposeTableView@63(VAR OSynchFilterCondition@1000 : Record 5303;VAR OSynchFilterRelation@1001 : Record 5303;RelatedRecRef@1003 : RecordRef) FilteringExpression : Text;
    VAR
      TempOSynchFilter@1002 : TEMPORARY Record 5303;
      NullRecRef@1004 : RecordRef;
    BEGIN
      CopyFilterRecords(OSynchFilterCondition,TempOSynchFilter);
      ComposeFilterRecords(OSynchFilterRelation,TempOSynchFilter,RelatedRecRef,TempOSynchFilter.Type::FILTER);

      FilteringExpression := ComposeTableFilter(TempOSynchFilter,NullRecRef);
    END;

    PROCEDURE CopyFilterRecords@52(VAR FromOSynchFilter@1001 : Record 5303;VAR ToOSynchFilter@1002 : Record 5303);
    BEGIN
      IF FromOSynchFilter.FIND('-') THEN
        REPEAT
          ToOSynchFilter.INIT;
          ToOSynchFilter := FromOSynchFilter;
          IF ToOSynchFilter.INSERT THEN;
        UNTIL FromOSynchFilter.NEXT = 0;
    END;

    PROCEDURE ComposeFilterRecords@85(VAR FromOSynchFilter@1001 : Record 5303;VAR ToOSynchFilter@1000 : Record 5303;RecRef@1002 : RecordRef;FilteringType@1004 : Integer);
    VAR
      FieldRef@1003 : FieldRef;
    BEGIN
      IF FromOSynchFilter.FIND('-') THEN
        REPEAT
          FieldRef := RecRef.FIELD(FromOSynchFilter."Field No.");
          CreateFilterCondition(
            ToOSynchFilter,
            FromOSynchFilter."Master Table No.",
            FromOSynchFilter."Master Table Field No.",
            FilteringType,
            FORMAT(FieldRef));
        UNTIL FromOSynchFilter.NEXT = 0;
    END;

    PROCEDURE CreateFilterCondition@53(VAR OSynchFilterIn@1004 : Record 5303;TableID@1000 : Integer;FieldID@1001 : Integer;FilterType@1002 : Integer;FilterValue@1003 : Text);
    VAR
      FilterValueLen@1005 : Integer;
    BEGIN
      IF FilterType = OSynchFilterIn.Type::FIELD THEN
        EXIT;

      Field.GET(TableID,FieldID);
      IF STRLEN(FilterValue) > Field.Len THEN
        FilterValue := PADSTR(FilterValue,Field.Len);

      OSynchFilterIn.INIT;
      OSynchFilterIn."Record GUID" := CREATEGUID;
      OSynchFilterIn."Filter Type" := OSynchFilterIn."Filter Type"::Condition;
      OSynchFilterIn."Line No." := OSynchFilterIn."Line No." + 10000;
      OSynchFilterIn."Table No." := TableID;
      OSynchFilterIn.VALIDATE("Field No.",FieldID);
      OSynchFilterIn.Type := FilterType;

      IF FilterType = OSynchFilterIn.Type::CONST THEN BEGIN
        Field.GET(OSynchFilterIn."Table No.",OSynchFilterIn."Field No.");
        OSynchFilterIn.Value := OSynchTypeConversion.HandleFilterChars(FilterValue,Field.Len);
      END ELSE BEGIN
        FilterValueLen := Field.Len;
        Field.GET(DATABASE::"Outlook Synch. Filter",OSynchFilterIn.FIELDNO(Value));
        IF FilterValueLen = Field.Len THEN BEGIN
          FilterValue := PADSTR(FilterValue,Field.Len - 2);
          OSynchFilterIn.Value := '@' + OSynchTypeConversion.ReplaceFilterChars(FilterValue) + '*';
        END ELSE
          OSynchFilterIn.Value := '@' + OSynchTypeConversion.ReplaceFilterChars(FilterValue);
      END;

      IF OSynchFilterIn.INSERT(TRUE) THEN;
    END;

    PROCEDURE CheckPKFieldsQuantity@21(TableID@1000 : Integer) : Boolean;
    VAR
      TempRecRef@1001 : RecordRef;
      KeyRef@1002 : KeyRef;
    BEGIN
      IF TableID = 0 THEN
        EXIT(TRUE);

      TempRecRef.OPEN(TableID,TRUE);
      KeyRef := TempRecRef.KEYINDEX(1);
      IF KeyRef.FIELDCOUNT <= 3 THEN
        EXIT(TRUE);

      ERROR(Text011,TempRecRef.CAPTION);
    END;

    PROCEDURE CheckOEnumeration@32(OSynchFieldIn@1001 : Record 5304) IsEnumeration : Boolean;
    VAR
      PropertyList@1007 : DotNet "'Microsoft.Dynamics.NAV.OLSync.OLSyncSupplier, Version=9.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.NAV.OLSync.OLSyncSupplier.OutlookPropertyList";
      InnerPropertyList@1008 : DotNet "'Microsoft.Dynamics.NAV.OLSync.OLSyncSupplier, Version=9.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.NAV.OLSync.OLSyncSupplier.OutlookPropertyList";
      Counter@1002 : Integer;
      Counter1@1005 : Integer;
    BEGIN
      IF ISNULL(OObjLibrary) THEN
        IF NOT CANLOADTYPE(OObjLibrary) THEN
          ERROR(Text014);
      OObjLibrary := OObjLibrary.OutlookObjectLibrary;

      IF OSynchFieldIn."Element No." = 0 THEN BEGIN
        PropertyList := OObjLibrary.GetItem(OSynchFieldIn."Outlook Object");
        FOR Counter := 0 TO PropertyList.Count - 1 DO BEGIN
          IF NOT PropertyList.Item(Counter).ReturnsCollection AND
             (PropertyList.Item(Counter).Name = OSynchFieldIn."Outlook Property")
          THEN
            IF PropertyList.Item(Counter).ReturnsEnumeration THEN
              IsEnumeration := TRUE;
        END;
      END ELSE BEGIN
        OSynchEntity.GET(OSynchFieldIn."Synch. Entity Code");
        PropertyList := OObjLibrary.GetItem(OSynchEntity."Outlook Item");
        FOR Counter := 0 TO PropertyList.Count - 1 DO
          IF PropertyList.Item(Counter).ReturnsCollection AND
             (PropertyList.Item(Counter).Name = OSynchFieldIn."Outlook Object")
          THEN BEGIN
            InnerPropertyList := PropertyList.Item(Counter).PropertyInfoList;
            FOR Counter1 := 0 TO InnerPropertyList.Count - 1 DO BEGIN
              IF InnerPropertyList.Item(Counter1).Name = OSynchFieldIn."Outlook Property" THEN
                IF InnerPropertyList.Item(Counter1).ReturnsEnumeration THEN
                  IsEnumeration := TRUE;
            END;
          END;
      END;
    END;

    BEGIN
    END.
  }
}

