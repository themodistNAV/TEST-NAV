OBJECT Codeunit 50000 Export Import Toolkit
{
  OBJECT-PROPERTIES
  {
    Date=05/08/18;
    Time=12:21:48 PM;
    Modified=Yes;
    Version List=TM1.00;
  }
  PROPERTIES
  {
    Permissions=TableData 17=rimd,
                TableData 21=rimd,
                TableData 379=rimd;
    OnRun=VAR
            GLEntry@1000000000 : Record 17;
            LastEntryNo@1000000001 : Integer;
            GLEntry2@1000000002 : Record 17;
            CustLedgerEntry@1000000003 : Record 21;
            DetailedCustLedgEntry@1000000004 : Record 379;
          BEGIN
            // GLEntry2.RESET;
            // GLEntry2.SETCURRENTKEY("Document No.");
            // GLEntry2.SETRANGE("Document No.",'SCM003558');
            // GLEntry2.SETRANGE("Document Type",GLEntry2."Document Type"::"Credit Memo");
            // GLEntry2.FINDLAST;
            //
            // GLEntry.LOCKTABLE;
            // GLEntry.RESET;
            // GLEntry.FINDLAST;
            // LastEntryNo := GLEntry."Entry No.";
            // GLEntry.INIT;
            // GLEntry := GLEntry2;
            // GLEntry."Entry No." := LastEntryNo + 1;
            // GLEntry."G/L Account No." := '112210';
            // GLEntry.Amount := 86.78;
            // GLEntry."Debit Amount" := GLEntry."Debit Amount";
            // GLEntry."Credit Amount" := 0;
            // GLEntry."Add.-Currency Credit Amount" := 0;
            // GLEntry."Add.-Currency Debit Amount" := 0;
            // GLEntry."Additional-Currency Amount" := 0;
            // GLEntry.INSERT;
            //
             CustLedgerEntry.RESET;
             CustLedgerEntry.FINDLAST;
             LastEntryNo := CustLedgerEntry."Entry No.";

             CustLedgerEntry.INIT;
             CustLedgerEntry."Entry No." := LastEntryNo + 1;
             CustLedgerEntry."Customer No." := '00220044';
             CustLedgerEntry."Posting Date" := 040618D;
             CustLedgerEntry."Due Date" := 040618D;
             CustLedgerEntry."Closed at Date" := 040618D;
             CustLedgerEntry."Document Date" := 040618D;
             CustLedgerEntry."Currency Code" := 'USD';
             CustLedgerEntry."Document Type" := CustLedgerEntry."Document Type"::"Credit Memo";
             CustLedgerEntry."Document No." := 'SCM003558';
             CustLedgerEntry."Sell-to Customer No." := '00220044';
             CustLedgerEntry."Customer Posting Group" := 'CUSTOMER';
             CustLedgerEntry."Source Code" := 'SALES';
             CustLedgerEntry."Sales (LCY)" := -86.78;
             CustLedgerEntry."Adjusted Currency Factor" := 0;
             CustLedgerEntry."Original Currency Factor" := 0;
             CustLedgerEntry."Transaction No." := 35180;
             CustLedgerEntry.INSERT;



             DetailedCustLedgEntry.RESET;
             DetailedCustLedgEntry.FINDLAST;
             LastEntryNo := DetailedCustLedgEntry."Entry No.";

             DetailedCustLedgEntry.INIT;
             DetailedCustLedgEntry."Entry No." := LastEntryNo + 1;
             DetailedCustLedgEntry."Cust. Ledger Entry No." := CustLedgerEntry."Entry No.";
             DetailedCustLedgEntry."Entry Type" := DetailedCustLedgEntry."Entry Type"::"Initial Entry";
             DetailedCustLedgEntry."Posting Date" := 040618D;
             DetailedCustLedgEntry."Document Type" := DetailedCustLedgEntry."Document Type"::"Credit Memo";
             DetailedCustLedgEntry."Document No." := 'SCM003558';
             DetailedCustLedgEntry.Amount := -86.78;
             DetailedCustLedgEntry."Amount (LCY)" := -86.78;
             DetailedCustLedgEntry."Customer No." := '00220044';
             DetailedCustLedgEntry."Currency Code" := 'USD' ;
             DetailedCustLedgEntry."Source Code" := 'SALES';
             DetailedCustLedgEntry."Transaction No." := 35180;
             DetailedCustLedgEntry."Debit Amount" := 0;
             DetailedCustLedgEntry."Credit Amount" := 86.78;
             DetailedCustLedgEntry."Credit Amount (LCY)" := 86.78;
             DetailedCustLedgEntry."Initial Entry Due Date" := 040618D;
             DetailedCustLedgEntry."Initial Document Type" := DetailedCustLedgEntry."Initial Document Type"::"Credit Memo";
             DetailedCustLedgEntry."Ledger Entry Amount" := TRUE;
             DetailedCustLedgEntry.INSERT;
            //

            // DetailedCustLedgEntry.GET(44032);
            // DetailedCustLedgEntry.Amount := 86.780;
            // DetailedCustLedgEntry."Amount (LCY)" := 86.78;
            // DetailedCustLedgEntry."Debit Amount" := 86.780;
            // DetailedCustLedgEntry."Debit Amount (LCY)" := 86.78;
            // DetailedCustLedgEntry."Credit Amount" := 0;
            // DetailedCustLedgEntry."Credit Amount (LCY)" := 0;
            // DetailedCustLedgEntry.MODIFY;


            MESSAGE('1421111113');
          END;

  }
  CODE
  {
    VAR
      FileSystem@1000000002 : Codeunit 9062264;

    LOCAL PROCEDURE "--- XML ---"@1000000000();
    BEGIN
    END;

    PROCEDURE CreateXml@1000000001(pXmlPortId@1000000003 : Integer;VAR pXmlDocument@1000000000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument");
    VAR
      lXmlDocumentBlob@1000000002 : Record 99008535;
      lXmlDocumentOutStream@1000000001 : OutStream;
      lXmlDocumentInStream@1000000005 : InStream;
    BEGIN
      pXmlDocument := pXmlDocument.XmlDocument();
      lXmlDocumentBlob.INSERT();
      lXmlDocumentBlob.Blob.CREATEOUTSTREAM(lXmlDocumentOutStream);
      XMLPORT.EXPORT(pXmlPortId, lXmlDocumentOutStream);
      lXmlDocumentBlob.Blob.CREATEINSTREAM(lXmlDocumentInStream);
      pXmlDocument.Load(lXmlDocumentInStream);
      lXmlDocumentBlob.DELETEALL();
    END;

    PROCEDURE SaveXml@1000000002(VAR pXmlDocument@1000000000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";pFileName@1000000003 : Text) : Text;
    VAR
      eFileFilter@1000000001 : TextConst 'ENU=XML FIles (*.xml)|*.xml|All Files (*.*)|*.*;ENG=XML FIles (*.xml)|*.xml|All Files (*.*)|*.*';
      lFileSystem@1000000005 : Codeunit 9062264;
      lServerFilePath@1000000002 : Text;
      lClientFilePath@1000000004 : Text;
    BEGIN
      lServerFilePath := FileSystem.GetTempPathForFile(FALSE, pFileName);
      pXmlDocument.Save(lServerFilePath);
      lClientFilePath := pFileName;
      lFileSystem.DownloadWithInteraction(TRUE, lServerFilePath, lClientFilePath, '', eFileFilter);
      EXIT(lClientFilePath);
    END;

    PROCEDURE AddNamespaceAttribute@1000000005(pXmlDocument@1000000003 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";pXmlElement@1000000000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlElement";pAttributeName@1000000005 : Text;pAttributeValue@1000000006 : Text);
    VAR
      lXmlAttributeCollection@1000000001 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlAttributeCollection";
      lXmlNode@1000000002 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      lXmlNodeType@1000000004 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeType";
    BEGIN
      lXmlAttributeCollection := pXmlElement.Attributes;
      lXmlNode := pXmlDocument.CreateNode(lXmlNodeType.Attribute, pAttributeName, '', 'http://www.w3.org/2001/XMLSchema');
      lXmlNode.Value := pAttributeValue;
      lXmlAttributeCollection.Append(lXmlNode);
    END;

    LOCAL PROCEDURE "--- Buffers ---"@1000000003();
    BEGIN
    END;

    PROCEDURE ClearBuffer@1000000006(VAR pBuffer@1000000000 : Record 9062730);
    BEGIN
      pBuffer.RESET();
      pBuffer.DELETEALL();
    END;

    PROCEDURE AddToBuffer@1000000004(pValue@1000000000 : Text;VAR pBuffer@1000000001 : Record 9062730);
    VAR
      lId@1000000002 : Integer;
    BEGIN
      AddToBufferAdv('', pValue, pBuffer);
    END;

    PROCEDURE AddToBufferAdv@1000000043(pName@1000000003 : Text;pValue@1000000000 : Text;VAR pBuffer@1000000001 : Record 9062730);
    VAR
      lId@1000000002 : Integer;
    BEGIN
      IF (pBuffer.FINDLAST()) THEN
        lId := pBuffer.ID + 1
      ELSE
        lId := 1;
      pBuffer.ID := lId;
      pBuffer.Name := pName;
      pBuffer.Value := pValue;
      pBuffer.INSERT();
    END;

    PROCEDURE CopyBuffer@1000000013(VAR pFromBuffer@1000000000 : Record 9062730;VAR pToBuffer@1000000001 : Record 9062730);
    BEGIN
      ClearBuffer(pToBuffer);
      IF (pFromBuffer.FINDSET()) THEN
      REPEAT
        pToBuffer := pFromBuffer;
        pToBuffer.INSERT();
      UNTIL (pFromBuffer.NEXT() = 0);
    END;

    BEGIN
    {
      //DOC TM1.00 JH 15/09/2016 - Created
    }
    END.
  }
}

