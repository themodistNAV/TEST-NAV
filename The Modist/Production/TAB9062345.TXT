OBJECT Table 9062345 Planning Board Event
{
  OBJECT-PROPERTIES
  {
    Date=10/05/16;
    Time=12:00:00 PM;
    Version List=NA2016.15;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               Rec.TESTFIELD("Planning Board Code");
               CheckModifyPermission();
               IF (Rec.ID = 0) THEN
                 Rec.VALIDATE(ID, NewId());
               TnpToolkit.UpdateCreatedBy(Rec."Created By", Rec."Created Date Time");
             END;

    OnModify=BEGIN
               CheckModifyPermission();
               TnpToolkit.UpdateModifiedBy(Rec."Modified By", Rec."Modified Date Time");
             END;

    OnDelete=BEGIN
               CheckModifyPermission();
               PlanningBoardActionMgt.DeletePlanningBordEventAction(Rec);
             END;

    OnRename=BEGIN
               CheckModifyPermission();
             END;

    CaptionML=[ENU=Planning Board Event;
               ENG=Planning Board Event];
    LookupPageID=Page9062409;
    DrillDownPageID=Page9062409;
  }
  FIELDS
  {
    { 1   ;   ;Planning Board Code ;Code20        ;TableRelation="Planning Board Header";
                                                   CaptionML=[ENU=Planning Board Code;
                                                              ENG=Planning Board Code] }
    { 2   ;   ;ID                  ;Integer       ;CaptionML=[ENU=ID;
                                                              ENG=ID] }
    { 10  ;   ;Event Type          ;Option        ;OnValidate=VAR
                                                                lXActionType@9062231 : Integer;
                                                                lActionType@9062230 : Integer;
                                                              BEGIN
                                                                IF (Rec."Event Type" <> xRec."Event Type") THEN
                                                                  IF (Rec."Event Type" <> Rec."Event Type"::" ") THEN
                                                                  BEGIN
                                                                    lXActionType := PlanningBoardEventToolkit.EventTypeToActionType(xRec."Event Type");
                                                                    lActionType := PlanningBoardEventToolkit.EventTypeToActionType(Rec."Event Type");
                                                                    IF (PlanningBoardAction.GET(Rec."Planning Board Code", PlanningBoardAction."Parent Table"::"Planning Board Event", 0, Rec.ID)) THEN
                                                                    BEGIN
                                                                      IF (PlanningBoardAction."Action Type" = lXActionType) THEN
                                                                      BEGIN
                                                                        PlanningBoardAction.VALIDATE("Action Type", lActionType);
                                                                        PlanningBoardAction.MODIFY(TRUE);
                                                                      END;
                                                                    END
                                                                    ELSE
                                                                    BEGIN
                                                                      CLEAR(PlanningBoardAction);
                                                                      PlanningBoardAction.INIT();
                                                                      PlanningBoardAction."Planning Board Code" := Rec."Planning Board Code";
                                                                      PlanningBoardAction.VALIDATE("Parent Table", PlanningBoardAction."Parent Table"::"Planning Board Event");
                                                                      PlanningBoardAction.VALIDATE("Parent ID", Rec.ID);
                                                                      PlanningBoardAction.VALIDATE("Action Type", lActionType);
                                                                      PlanningBoardAction.INSERT(TRUE);
                                                                    END
                                                                  END;
                                                              END;

                                                   CaptionML=[ENU=Event Type;
                                                              ENG=Event Type];
                                                   OptionCaptionML=[ENU=" ,Resource Double-Clicked,,,,,,,,,,Entry Double-Clicked,Entry Dropped,Entry Resized,Entry Cloned,,,,,,,Menu Item Clicked";
                                                                    ENG=" ,Resource Double-Clicked,,,,,,,,,,Entry Double-Clicked,Entry Dropped,Entry Resized,Entry Cloned,,,,,,,Menu Item Clicked"];
                                                   OptionString=[ ,Resource Double-Clicked,,,,,,,,,,Entry Double-Clicked,Entry Dropped,Entry Resized,Entry Cloned,,,,,,,Menu Item Clicked] }
    { 20  ;   ;Action Description  ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Planning Board Action".Description WHERE (Planning Board Code=FIELD(Planning Board Code),
                                                                                                                 Parent Table=CONST(Planning Board Event),
                                                                                                                 Parent ID=FIELD(ID)));
                                                   CaptionML=[ENU=Action Description;
                                                              ENG=Action Description];
                                                   Editable=No }
    { 1000;   ;Created By          ;Code50        ;OnLookup=BEGIN
                                                              TnpToolkit.UserLookup(Rec."Created By", FALSE);
                                                            END;

                                                   CaptionML=[ENU=Created By;
                                                              ENG=Created By] }
    { 1001;   ;Created Date Time   ;DateTime      ;CaptionML=[ENU=Created Date Time;
                                                              ENG=Created Date Time] }
    { 1002;   ;Modified By         ;Code50        ;OnLookup=BEGIN
                                                              TnpToolkit.UserLookup(Rec."Modified By", FALSE);
                                                            END;

                                                   CaptionML=[ENU=Modified By;
                                                              ENG=Modified By] }
    { 1003;   ;Modified Date Time  ;DateTime      ;CaptionML=[ENU=Modified Date Time;
                                                              ENG=Modified Date Time] }
  }
  KEYS
  {
    {    ;Planning Board Code,ID                  ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      PlanningBoardHeader@1000000001 : Record 9062337;
      PlanningBoardAction@9062231 : Record 9062344;
      PlanningBoardActionMgt@9062230 : Codeunit 9062314;
      PlanningBoardEventToolkit@9062232 : Codeunit 9062305;
      TnpToolkit@1000000000 : Codeunit 9062230;

    LOCAL PROCEDURE "--- General ---"@9062231();
    BEGIN
    END;

    PROCEDURE NewId@9062230() : Integer;
    VAR
      lPlanningBoardEvent@9062230 : Record 9062345;
    BEGIN
      //DOC NA2016.12 - Returning new ID
      //  <- The ID

      lPlanningBoardEvent.RESET();
      lPlanningBoardEvent.SETRANGE("Planning Board Code", Rec."Planning Board Code");
      IF (lPlanningBoardEvent.FINDLAST()) THEN
        EXIT(lPlanningBoardEvent.ID + 1)
      ELSE
        EXIT(1);
    END;

    LOCAL PROCEDURE CheckModifyPermission@1000000039();
    VAR
      lEnhancedPermissionsMgt@1000000000 : Codeunit 9062277;
    BEGIN
      //DOC NA2016.15 - Checking modify permission for the planning board

      IF ( NOT (PlanningBoardHeader.GET(Rec."Planning Board Code"))) THEN
        EXIT;
      lEnhancedPermissionsMgt.CheckPlanningBoardModifyPermission(PlanningBoardHeader, USERID());
    END;

    LOCAL PROCEDURE "--- Action ---"@9062232();
    BEGIN
    END;

    PROCEDURE GetActionText@9062233() : Text;
    BEGIN
      //DOC NA2016.12 - Returning action text
      //  <- The text

      EXIT(PlanningBoardActionMgt.GetPlanningBordEventActionText(Rec));
    END;

    PROCEDURE EditAction@1000000010(pModify@1000000001 : Boolean);
    BEGIN
      //DOC NA2016.12 - Editing action
      //  -> pModify: Flag to modify the current record

      PlanningBoardActionMgt.EditPlanningBordEventAction(Rec);
      IF (pModify) THEN
        Rec.MODIFY(TRUE);
    END;

    BEGIN
    {
      //DOC NA2016.12 JH 11/10/2015 - Created
      //DOC NA2016.15 JH 05/05/2016 - Enhanced permissions
    }
    END.
  }
}

