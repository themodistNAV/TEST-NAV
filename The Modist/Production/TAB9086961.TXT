OBJECT Table 9086961 nF. Permission Group Member
{
  OBJECT-PROPERTIES
  {
    Date=30/10/16;
    Time=11:29:22 AM;
    Version List=NF2016.17;
  }
  PROPERTIES
  {
    DataPerCompany=No;
    OnInsert=BEGIN
               Rec.TESTFIELD(Type);
               Rec.TESTFIELD("nF. User / User Group ID");
               Rec.TESTFIELD("nF. Permisison Group ID");
               MarkUsersAsPending();
               NfRecordAuditToolkit.UpdateCreated(Rec."Created By", Rec."Created Date Time");
             END;

    OnModify=BEGIN
               MarkUsersAsPending();
               NfRecordAuditToolkit.UpdateModified(Rec."Modified By", Rec."Modified Date Time");
             END;

    OnDelete=BEGIN
               MarkUsersAsPending();
             END;

    CaptionML=[ENU=nForcement Permission Group Member;
               ENG=nForcement Permission Group Member];
  }
  FIELDS
  {
    { 1   ;   ;Type                ;Option        ;CaptionML=[ENU=Type;
                                                              ENG=Type];
                                                   OptionCaptionML=[ENU=" ,User,User Group";
                                                                    ENG=" ,User,User Group"];
                                                   OptionString=[ ,User,User Group] }
    { 2   ;   ;nF. User / User Group ID;Integer   ;TableRelation=IF (Type=CONST(User)) "nF. User"
                                                                 ELSE IF (Type=CONST(User Group)) "nF. User Group";
                                                   CaptionML=[ENU=nForcement User / User Group ID;
                                                              ENG=nForcement User / User Group ID] }
    { 3   ;   ;nF. Company ID      ;Integer       ;TableRelation="nF. Company";
                                                   CaptionML=[ENU=nForcement Company ID;
                                                              ENG=nForcement Company ID] }
    { 4   ;   ;nF. Permisison Group ID;Integer    ;TableRelation="nF. Permission Group";
                                                   CaptionML=[ENU=nForcement Permisison Group ID;
                                                              ENG=nForcement Permisison Group ID] }
    { 10  ;   ;System Activity     ;Boolean       ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=System Activity;
                                                              ENG=System Activity] }
    { 20  ;   ;nF. Permission Group Name;Text50   ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("nF. Permission Group".Name WHERE (ID=FIELD(nF. Permisison Group ID)));
                                                   CaptionML=[ENU=nForcement Permission Group Name;
                                                              ENG=nForcement Permission Group Name];
                                                   Editable=No }
    { 1000;   ;Created By          ;Code50        ;OnLookup=BEGIN
                                                              NfRecordAuditToolkit.UserLookup(Rec."Created By", FALSE);
                                                            END;

                                                   CaptionML=[ENU=Created By;
                                                              ENG=Created By] }
    { 1001;   ;Created Date Time   ;DateTime      ;CaptionML=[ENU=Created Date Time;
                                                              ENG=Created Date Time] }
    { 1002;   ;Modified By         ;Code50        ;OnLookup=BEGIN
                                                              NfRecordAuditToolkit.UserLookup(Rec."Modified By", FALSE);
                                                            END;

                                                   CaptionML=[ENU=Modified By;
                                                              ENG=Modified By] }
    { 1003;   ;Modified Date Time  ;DateTime      ;CaptionML=[ENU=Modified Date Time;
                                                              ENG=Modified Date Time] }
  }
  KEYS
  {
    {    ;Type,nF. User / User Group ID,nF. Company ID,nF. Permisison Group ID;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      NfUser@1000000001 : Record 9086953;
      NfUserGroup@1000000002 : Record 9086955;
      NfRecordAuditToolkit@1000000000 : Codeunit 9086951;

    PROCEDURE MarkUsersAsPending@1000000000();
    BEGIN
      ///<summary>Marking users as pending</summary>

      IF (GetSystemActivity()) THEN
        EXIT;

      CASE (Rec.Type) OF
        Rec.Type::User:
          IF (NfUser.GET(Rec."nF. User / User Group ID")) THEN
            NfUser.MarkAsPending();
        Rec.Type::"User Group":
          IF (NfUserGroup.GET(Rec."nF. User / User Group ID")) THEN
            NfUserGroup.MarkUsersAsPending();
      END;
    END;

    PROCEDURE GetSystemActivity@1000000003() : Boolean;
    BEGIN
      ///<summary>Returning if system activity is enabled</summary>
      ///<returns>The answer</returns>

      Rec.FILTERGROUP(2);
      IF (Rec.GETFILTER("System Activity") <> '') THEN
        EXIT(Rec.GETRANGEMIN("System Activity"))
      ELSE
        EXIT(FALSE);
      Rec.FILTERGROUP(0);
    END;

    PROCEDURE SetSystemActivity@1000000004(pSystemActivity@1000000000 : Boolean);
    BEGIN
      ///<summary>Enabling / disabling system activity</summary>
      ///<param name="pSystemActivity">The flag</param>

      Rec.FILTERGROUP(2);
      IF (pSystemActivity) THEN
        Rec.SETRANGE("System Activity", TRUE)
      ELSE
        Rec.SETRANGE("System Activity");
      Rec.FILTERGROUP(0);
    END;

    BEGIN
    {
      ///<summary>Table with nForcement permission group members</summary>
      ///<remarks>This table can keep two types of members (depending on "Type" column): nForcement users (for basic system of permissions when
      ///users are assigned directly to permission groups) and nForcmeent user groups (for advanced system of permissions when users
      ///are assigned to user groups and user groups to permission groups</remarks>
      ///<change version="NF2016.17" initials="JH" date="2016-07-03">Created</change>
    }
    END.
  }
}

