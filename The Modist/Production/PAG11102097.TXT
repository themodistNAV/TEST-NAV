OBJECT Page 11102097 OM - Object Compare Sheet
{
  OBJECT-PROPERTIES
  {
    Date=19/11/15;
    Time=12:00:00 PM;
    Version List=OMA10.00;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[DEU=Object Compare Sheet;
               ENU=Object Compare Sheet;
               ESP=Object Compare Sheet;
               FRA=Object Compare Sheet;
               NLD=Objectenvergelijksheet;
               DEA=Object Compare Sheet];
    SaveValues=Yes;
    SourceTable=Table11102079;
    SourceTableView=SORTING(Line Type,Type,No.)
                    WHERE(Line Type=CONST(Object Compare Sheet));
    PageType=List;
    ShowFilter=No;
    OnOpenPage=VAR
                 ImExportMgt@1000 : Codeunit 11102043;
               BEGIN
                 IF FromImport THEN
                   TransportFile := TransportFileFromImport
                 ELSE BEGIN
                   DELETEALL;
                   ImExportMgt.AddCurrentChanges;
                 END;
               END;

    OnAfterGetRecord=BEGIN
                       SetStyles;
                     END;

    ActionList=ACTIONS
    {
      { 1       ;0   ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 2       ;1   ;ActionGroup;
                      CaptionML=[DEU=&Compare;
                                 ENU=&Compare;
                                 ESP=&Compare;
                                 FRA=&Compare;
                                 NLD=Ver&gelijk;
                                 DEA=&Compare] }
      { 3       ;2   ;ActionGroup;
                      CaptionML=[DEU=Previous to Current;
                                 ENU=Previous to Current;
                                 ESP=Previous to Current;
                                 FRA=Previous to Current;
                                 NLD=Vorig met huidig;
                                 DEA=Previous to Current];
                      Image=NextSet }
      { 4       ;3   ;Action    ;
                      ShortCutKey=Ctrl+B;
                      CaptionML=[DEU=Current Object;
                                 ENU=Current Object;
                                 ESP=Current Object;
                                 FRA=Current Object;
                                 NLD=Huidig object;
                                 DEA=Current Object];
                      Image=ViewDocumentLine;
                      OnAction=VAR
                                 CALHistoryObject@1000 : Record 11102052;
                                 Object@1001 : Record 2000000001;
                                 ObjectMgt@1002 : Codeunit 11102046;
                                 SourceControl@1003 : Codeunit 11102050;
                                 FileHandler@1004 : Codeunit 11102097;
                                 ClientLeftFileName@1005 : Text;
                                 ClientRightFileName@1006 : Text;
                                 Directory@1007 : Text;
                                 LeftFileName@1008 : Text;
                                 RightFileName@1009 : Text;
                               BEGIN
                                 Directory := FileHandler.TempDirectory;

                                 LeftFileName := Directory + 'left.txt';
                                 RightFileName := Directory + 'right.txt';

                                 FileHandler.DeleteServerFile(LeftFileName);
                                 FileHandler.DeleteServerFile(RightFileName);

                                 IF "Prev. C/AL Object Entry No." <> 0 THEN BEGIN
                                   CALHistoryObject.GET("Prev. C/AL Object Entry No.");
                                   CALHistoryObject.SETRECFILTER;
                                   SourceControl.ExportRangeToFile(CALHistoryObject, LeftFileName);
                                 END;

                                 IF "Existing Name" <> '' THEN
                                   IF Object.GET(Type, '', "No.") THEN
                                     ObjectMgt.ExportObject(Object, RightFileName);

                                 ClientLeftFileName := FileHandler.DownloadToClient(LeftFileName, '', '');
                                 ClientRightFileName := FileHandler.DownloadToClient(RightFileName, '', '');

                                 SourceControl.StartCompareToolFile(ClientLeftFileName, ClientRightFileName);
                               END;
                                }
      { 5       ;3   ;Action    ;
                      ShortCutKey=Shift+Ctrl+B;
                      CaptionML=[DEU=Selection in &Directory;
                                 ENU=Selection in &Directory;
                                 ESP=Selection in &Directory;
                                 FRA=Selection in &Directory;
                                 NLD=Selectie in &map;
                                 DEA=Selection in &Directory];
                      Image=ViewPage;
                      OnAction=VAR
                                 CALHistoryObject@1000 : Record 11102052;
                                 TmpCALHistoryObject@1001 : TEMPORARY Record 11102052;
                                 ObjectCompareLine@1002 : Record 11102079;
                                 Object@1003 : Record 2000000001;
                                 ObjectMgt@1004 : Codeunit 11102046;
                                 SourceControl@1005 : Codeunit 11102050;
                                 FileHandler@1006 : Codeunit 11102097;
                                 FileNameMgt@1007 : Codeunit 11102107;
                                 ClientDirectory@1008 : Text;
                                 LeftServerDirectory@1009 : Text;
                                 RightServerDirectory@1010 : Text;
                                 ServerDirectory@1011 : Text;
                               BEGIN
                                 ServerDirectory := FileHandler.CreateServerDirectory;

                                 LeftServerDirectory := ServerDirectory + 'left\';
                                 RightServerDirectory := ServerDirectory + 'right\';

                                 FileHandler.CheckCreateServerDirectory(LeftServerDirectory);
                                 FileHandler.CheckCreateServerDirectory(RightServerDirectory);

                                 CurrPage.SETSELECTIONFILTER(ObjectCompareLine);

                                 ObjectCompareLine.SETFILTER("Prev. C/AL Object Entry No.", '<>0');
                                 IF ObjectCompareLine.FINDSET THEN
                                   REPEAT
                                     IF CALHistoryObject.GET(ObjectCompareLine."Prev. C/AL Object Entry No.") THEN
                                       CALHistoryObject.AddToTempRecord(TmpCALHistoryObject);
                                   UNTIL ObjectCompareLine.NEXT = 0;

                                 SourceControl.ExportRangeToDirectory(TmpCALHistoryObject, LeftServerDirectory);

                                 ObjectCompareLine.SETRANGE("Prev. C/AL Object Entry No.");

                                 ObjectCompareLine.SETFILTER("Existing Name", '<>%1', '');
                                 IF ObjectCompareLine.FINDSET THEN
                                   REPEAT
                                     Object.GET(ObjectCompareLine.Type, '', ObjectCompareLine."No.");
                                     ObjectMgt.ExportObject(Object, RightServerDirectory + FileNameMgt.FileName(Object.Type, Object.ID, Object.Name));

                                   UNTIL ObjectCompareLine.NEXT = 0;

                                 ClientDirectory := FileHandler.DownloadDirectoryToClient(ServerDirectory, '');

                                 SourceControl.StartCompareToolDirectory(ClientDirectory + 'left\', ClientDirectory + 'right\');
                               END;
                                }
      { 6       ;3   ;Action    ;
                      CaptionML=[DEU=Selection &in One File;
                                 ENU=Selection &in One File;
                                 ESP=Selection &in One File;
                                 FRA=Selection &in One File;
                                 NLD=Selectie in &bestand;
                                 DEA=Selection &in One File];
                      Image=ViewDocumentLine;
                      OnAction=VAR
                                 CALHistoryObject@1000 : Record 11102052;
                                 TmpCALHistoryObject@1001 : TEMPORARY Record 11102052;
                                 ObjectCompareLine@1002 : Record 11102079;
                                 Object@1003 : Record 2000000001;
                                 TmpObject@1004 : TEMPORARY Record 2000000001;
                                 ObjectMgt@1005 : Codeunit 11102046;
                                 SourceControl@1006 : Codeunit 11102050;
                                 FileHandler@1007 : Codeunit 11102097;
                                 ClientLeftFileName@1008 : Text;
                                 ClientRightFileName@1009 : Text;
                                 Directory@1010 : Text;
                                 LeftFileName@1011 : Text;
                                 RightFileName@1012 : Text;
                               BEGIN
                                 Directory := FileHandler.TempDirectory;

                                 LeftFileName := Directory + 'left.txt';
                                 RightFileName := Directory + 'right.txt';

                                 FileHandler.DeleteServerFile(LeftFileName);
                                 FileHandler.DeleteServerFile(RightFileName);

                                 CurrPage.SETSELECTIONFILTER(ObjectCompareLine);

                                 ObjectCompareLine.SETFILTER("Prev. C/AL Object Entry No.", '<>0');
                                 IF ObjectCompareLine.FINDSET THEN
                                   REPEAT
                                     IF CALHistoryObject.GET(ObjectCompareLine."Prev. C/AL Object Entry No.") THEN
                                       CALHistoryObject.AddToTempRecord(TmpCALHistoryObject);
                                   UNTIL ObjectCompareLine.NEXT = 0;

                                 SourceControl.ExportRangeToFile(TmpCALHistoryObject, LeftFileName);

                                 ObjectCompareLine.SETRANGE("Prev. C/AL Object Entry No.");
                                 ObjectCompareLine.SETFILTER("Existing Name", '<>%1', '');
                                 IF ObjectCompareLine.FINDSET THEN
                                   REPEAT
                                     IF Object.GET(ObjectCompareLine.Type, '', ObjectCompareLine."No.") THEN BEGIN
                                       TmpObject := Object;
                                       TmpObject.INSERT;
                                     END;
                                   UNTIL ObjectCompareLine.NEXT = 0;

                                 ObjectMgt.ExportRangeTxt(TmpObject, RightFileName);

                                 ObjectCompareLine.SETRANGE("Prev. C/AL Object Entry No.");
                                 ObjectCompareLine.SETFILTER("Existing Name", '<>%1', '');

                                 ClientLeftFileName := FileHandler.DownloadToClient(LeftFileName, '', '');
                                 ClientRightFileName := FileHandler.DownloadToClient(RightFileName, '', '');

                                 SourceControl.StartCompareToolFile(ClientLeftFileName, ClientRightFileName);
                               END;
                                }
      { 7       ;2   ;ActionGroup;
                      CaptionML=[DEU=Current to New;
                                 ENU=Current to New;
                                 ESP=Current to New;
                                 FRA=Current to New;
                                 NLD=Huidig met nieuw;
                                 DEA=Current to New];
                      Image=NextSet }
      { 8       ;3   ;Action    ;
                      ShortCutKey=Ctrl+N;
                      CaptionML=[DEU=Current Object;
                                 ENU=Current Object;
                                 ESP=Current Object;
                                 FRA=Current Object;
                                 NLD=Huidig object;
                                 DEA=Current Object];
                      Image=ViewDocumentLine;
                      OnAction=VAR
                                 Object@1000 : Record 2000000001;
                                 ObjectMgt@1001 : Codeunit 11102046;
                                 SourceControl@1002 : Codeunit 11102050;
                                 FileHandler@1003 : Codeunit 11102097;
                                 oFile@1004 : File;
                                 InStr@1005 : InStream;
                                 OutStr@1006 : OutStream;
                                 ClientLeftFileName@1007 : Text;
                                 ClientRightFileName@1008 : Text;
                                 Directory@1009 : Text;
                                 LeftFileName@1010 : Text;
                                 RightFileName@1011 : Text;
                                 ctNoSourceCode@1012 : TextConst 'DEU=The C/AL Code is not included in this Transport.\Please enable "Include TXT-Objects in Transport" in the settings in your DEV database.;ENU=The C/AL Code is not included in this Transport.\Please enable "Include TXT-Objects in Transport" in the settings in your DEV database.;ESP=The C/AL Code is not included in this Transport.\Please enable "Include TXT-Objects in Transport" in the settings in your DEV database.;FRA=The C/AL Code is not included in this Transport.\Please enable "Include TXT-Objects in Transport" in the settings in your DEV database.;NLD=De C/AL code is niet bijgesloten in dit transport.\Vink "TXT objecten bijsluiten in transport" aan in de instellingen in uw DEV database.;DEA=The C/AL Code is not included in this Transport.\Please enable "Include TXT-Objects in Transport" in the settings in your DEV database.';
                               BEGIN
                                 Directory := FileHandler.TempDirectory;

                                 LeftFileName := Directory + '\left.txt';
                                 RightFileName := Directory + '\right.txt';

                                 FileHandler.DeleteServerFile(LeftFileName);
                                 FileHandler.DeleteServerFile(RightFileName);

                                 IF "Existing Name" <> '' THEN
                                   IF Object.GET(Type, '', "No.") THEN
                                     ObjectMgt.ExportObject(Object, LeftFileName);

                                 IF "New Name" <> '' THEN
                                   IF "C/AL Code Present" THEN BEGIN

                                     CALCFIELDS("New C/AL Code");
                                     "New C/AL Code".CREATEINSTREAM(InStr);

                                     oFile.WRITEMODE(TRUE);
                                     oFile.CREATE(RightFileName);
                                     oFile.CREATEOUTSTREAM(OutStr);
                                     COPYSTREAM(OutStr, InStr);
                                     oFile.CLOSE;

                                     ClientLeftFileName := FileHandler.DownloadToClient(LeftFileName, '', '');
                                     ClientRightFileName := FileHandler.DownloadToClient(RightFileName, '', '');

                                     SourceControl.StartCompareToolFile(ClientLeftFileName, ClientRightFileName);
                                   END ELSE
                                     MESSAGE(ctNoSourceCode);
                               END;
                                }
      { 9       ;3   ;Action    ;
                      ShortCutKey=Shift+Ctrl+N;
                      CaptionML=[DEU=Selection in &Directory;
                                 ENU=Selection in &Directory;
                                 ESP=Selection in &Directory;
                                 FRA=Selection in &Directory;
                                 NLD=Selectie in &map;
                                 DEA=Selection in &Directory];
                      Image=ViewPage;
                      OnAction=VAR
                                 ObjectCompareLine@1000 : Record 11102079;
                                 Object@1001 : Record 2000000001;
                                 ObjectMgt@1002 : Codeunit 11102046;
                                 SourceControl@1003 : Codeunit 11102050;
                                 FileHandler@1004 : Codeunit 11102097;
                                 FileNameMgt@1005 : Codeunit 11102107;
                                 oFile@1006 : File;
                                 InStr@1007 : InStream;
                                 OutStr@1008 : OutStream;
                                 ClientDirectory@1009 : Text;
                                 LeftServerDirectory@1010 : Text;
                                 RightServerDirectory@1011 : Text;
                                 ServerDirectory@1012 : Text;
                               BEGIN
                                 ServerDirectory := FileHandler.CreateServerDirectory;
                                 LeftServerDirectory := ServerDirectory + 'left\';
                                 RightServerDirectory := ServerDirectory + 'right\';

                                 FileHandler.CheckCreateServerDirectory(LeftServerDirectory);
                                 FileHandler.CheckCreateServerDirectory(RightServerDirectory);

                                 CurrPage.SETSELECTIONFILTER(ObjectCompareLine);
                                 ObjectCompareLine.SETFILTER("Existing Name", '<>%1', '');
                                 IF ObjectCompareLine.FINDSET THEN
                                   REPEAT
                                     Object.GET(ObjectCompareLine.Type, '', ObjectCompareLine."No.");
                                     ObjectMgt.ExportObject(Object, LeftServerDirectory + FileNameMgt.FileName(Object.Type, Object.ID, ObjectCompareLine.Name));
                                   UNTIL ObjectCompareLine.NEXT = 0;

                                 ObjectCompareLine.SETRANGE("Existing Name");
                                 ObjectCompareLine.SETFILTER("New Name", '<>%1', '');
                                 ObjectCompareLine.SETRANGE("C/AL Code Present", TRUE);

                                 IF ObjectCompareLine.FINDSET THEN
                                   REPEAT

                                     oFile.WRITEMODE(TRUE);
                                     oFile.CREATE(
                                       RightServerDirectory + FileNameMgt.FileName(ObjectCompareLine.Type, ObjectCompareLine."No.", ObjectCompareLine.Name));
                                     oFile.CREATEOUTSTREAM(OutStr);

                                     ObjectCompareLine.CALCFIELDS("New C/AL Code");
                                     ObjectCompareLine."New C/AL Code".CREATEINSTREAM(InStr);
                                     COPYSTREAM(OutStr, InStr);

                                     oFile.CLOSE;

                                   UNTIL ObjectCompareLine.NEXT = 0;

                                 ClientDirectory := FileHandler.DownloadDirectoryToClient(ServerDirectory, '');

                                 SourceControl.StartCompareToolDirectory(ClientDirectory + 'left\', ClientDirectory + 'right\');
                               END;
                                }
      { 10      ;3   ;Action    ;
                      CaptionML=[DEU=Selection &in One File;
                                 ENU=Selection &in One File;
                                 ESP=Selection &in One File;
                                 FRA=Selection &in One File;
                                 NLD=Selectie in &bestand;
                                 DEA=Selection &in One File];
                      Image=ViewDocumentLine;
                      OnAction=VAR
                                 ObjectCompareLine@1000 : Record 11102079;
                                 Object@1001 : Record 2000000001;
                                 TmpObject@1002 : TEMPORARY Record 2000000001;
                                 ObjectMgt@1003 : Codeunit 11102046;
                                 SourceControl@1004 : Codeunit 11102050;
                                 FileHandler@1005 : Codeunit 11102097;
                                 oFile@1006 : File;
                                 InStr@1007 : InStream;
                                 OutStr@1008 : OutStream;
                                 ClientLeftFileName@1009 : Text;
                                 ClientRightFileName@1010 : Text;
                                 Directory@1011 : Text;
                                 LeftFileName@1012 : Text;
                                 RightFileName@1013 : Text;
                               BEGIN
                                 Directory := FileHandler.TempDirectory;

                                 LeftFileName := Directory + 'left.txt';
                                 RightFileName := Directory + 'right.txt';

                                 FileHandler.DeleteServerFile(LeftFileName);
                                 FileHandler.DeleteServerFile(RightFileName);

                                 CurrPage.SETSELECTIONFILTER(ObjectCompareLine);
                                 ObjectCompareLine.SETFILTER("Existing Name", '<>%1', '');
                                 IF ObjectCompareLine.FINDSET THEN
                                   REPEAT
                                     IF Object.GET(ObjectCompareLine.Type, '', ObjectCompareLine."No.") THEN BEGIN
                                       TmpObject := Object;
                                       TmpObject.INSERT;
                                     END;
                                   UNTIL ObjectCompareLine.NEXT = 0;

                                 ObjectMgt.ExportRangeTxt(TmpObject, LeftFileName);

                                 ObjectCompareLine.SETRANGE("Existing Name");
                                 ObjectCompareLine.SETFILTER("New Name", '<>%1', '');
                                 ObjectCompareLine.SETRANGE("C/AL Code Present", TRUE);

                                 oFile.WRITEMODE(TRUE);
                                 oFile.CREATE(RightFileName);
                                 oFile.CREATEOUTSTREAM(OutStr);

                                 IF ObjectCompareLine.FINDSET THEN
                                   REPEAT
                                     ObjectCompareLine.CALCFIELDS("New C/AL Code");
                                     ObjectCompareLine."New C/AL Code".CREATEINSTREAM(InStr);
                                     COPYSTREAM(OutStr, InStr);

                                   UNTIL ObjectCompareLine.NEXT = 0;

                                 oFile.CLOSE;

                                 ClientLeftFileName := FileHandler.DownloadToClient(LeftFileName, '', '');
                                 ClientRightFileName := FileHandler.DownloadToClient(RightFileName, '', '');

                                 SourceControl.StartCompareToolFile(ClientLeftFileName, ClientRightFileName);
                               END;
                                }
      { 11      ;2   ;Separator  }
      { 12      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[DEU=Open Transport File;
                                 ENU=Open Transport File;
                                 ESP=Open Transport File;
                                 FRA=Open Transport File;
                                 NLD=Transportbestand openen;
                                 DEA=Open Transport File];
                      Image=Import;
                      OnAction=VAR
                                 TmpObject@1000 : TEMPORARY Record 2000000001;
                                 CommonDialog@1001 : Codeunit 11102059;
                                 ImportTransport@1002 : Codeunit 11102087;
                                 ServerFileName@1003 : Text;
                                 TransportNo@1004 : Code[20];
                                 ctNotValid@1005 : TextConst 'DEU=This is not a valid import definition.;ENU=This is not a valid import definition.;ESP=This is not a valid import definition.;FRA=This is not a valid import definition.;NLD=Dit is geen geldige importdefinitie.;DEA=This is not a valid import definition.';
                               BEGIN
                                 CommonDialog.AddKnownExtension('fib');
                                 IF NOT CommonDialog.OpenFile(TransportFileName, ServerFileName) THEN
                                   EXIT;

                                 TransportNo := ImportTransport.GetTransportNo(ServerFileName);
                                 IF TransportNo = '' THEN
                                   ERROR(ctNotValid);

                                 ImportTransport.ReadSections(ServerFileName, TmpObject);
                                 SetNewCALCode(TmpObject);
                               END;
                                }
      { 13      ;1   ;ActionGroup;
                      CaptionML=[DEU=F&unctions;
                                 ENU=F&unctions;
                                 ESP=F&unctions;
                                 FRA=F&unctions;
                                 NLD=F&uncties;
                                 DEA=F&unctions] }
      { 14      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[DEU=Export FOB File;
                                 ENU=Export FOB File;
                                 ESP=Export FOB File;
                                 FRA=Export FOB File;
                                 NLD=FOB-bestand exporteren;
                                 DEA=Export FOB File];
                      Image=Export;
                      OnAction=VAR
                                 ObjectCompareLine@1000 : Record 11102079;
                                 Object@1001 : Record 2000000001;
                                 ImExportMgt@1002 : Codeunit 11102043;
                                 Progressbar@1003 : Codeunit 11102044;
                                 CommonDialog@1004 : Codeunit 11102059;
                                 FileHandler@1005 : Codeunit 11102097;
                                 oFile@1006 : File;
                                 OutStr@1007 : OutStream;
                                 ServerFileName@1008 : Text;
                                 ctDefaultFileName@1009 : TextConst 'DEU=objects.fob;ENU=objects.fob;ESP=objects.fob;FRA=objects.fob;NLD=objects.fob;DEA=objects.fob';
                                 ctExportingObjects@1010 : TextConst 'DEU=Exporting objects...;ENU=Exporting objects...;ESP=Exporting objects...;FRA=Exporting objects...;NLD=Objecten exporteren...;DEA=Exporting objects...';
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(ObjectCompareLine);
                                 ObjectCompareLine.FINDSET;

                                 CommonDialog.AddKnownExtension('fob');
                                 IF NOT CommonDialog.SaveFile(ExportFobFileName, ServerFileName, ctDefaultFileName) THEN
                                   EXIT;

                                 REPEAT
                                   IF ObjectCompareLine."Existing Name" <> '' THEN BEGIN
                                     Object.Type := ObjectCompareLine.Type;
                                     Object."Company Name" := '';
                                     Object.ID := ObjectCompareLine."No.";
                                     Object.MARK(TRUE);
                                   END;
                                 UNTIL ObjectCompareLine.NEXT = 0;
                                 Object.MARKEDONLY(TRUE);
                                 Object.FINDFIRST;

                                 oFile.WRITEMODE(TRUE);
                                 oFile.CREATE(ServerFileName);
                                 oFile.CREATEOUTSTREAM(OutStr);

                                 Progressbar.Open(ctExportingObjects, 2);
                                 ImExportMgt.FillOutstreamFob(OutStr, Object, Progressbar);
                                 Progressbar.Close;

                                 oFile.CLOSE;

                                 FileHandler.DownloadToClient(ServerFileName, ExportFobFileName, ctDefaultFileName);
                               END;
                                }
      { 15      ;1   ;Action    ;
                      CaptionML=[DEU=C&onfirm;
                                 ENU=C&onfirm;
                                 ESP=C&onfirm;
                                 FRA=C&onfirm;
                                 NLD=B&evestigen;
                                 DEA=C&onfirm];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Confirm;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ConfirmChanges;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 16  ;0   ;Container ;
                ContainerType=ContentArea }

    { 17  ;1   ;Group     ;
                GroupType=Repeater }

    { 18  ;2   ;Field     ;
                SourceExpr=Type;
                Editable=FALSE }

    { 19  ;2   ;Field     ;
                SourceExpr="No.";
                Editable=FALSE;
                LookupPageID=OM - Object List }

    { 20  ;2   ;Field     ;
                SourceExpr=Name;
                Visible=FALSE;
                Editable=FALSE }

    { 21  ;2   ;Field     ;
                SourceExpr="Prev. Name";
                Editable=FALSE;
                StyleExpr=PreviousStyle }

    { 22  ;2   ;Field     ;
                SourceExpr="Prev. Version List";
                Editable=FALSE;
                StyleExpr=PreviousStyle }

    { 23  ;2   ;Field     ;
                SourceExpr="Prev. Date";
                Editable=FALSE;
                StyleExpr=PreviousStyle }

    { 24  ;2   ;Field     ;
                SourceExpr="Prev. Time";
                Editable=FALSE;
                StyleExpr=PreviousStyle }

    { 25  ;2   ;Field     ;
                SourceExpr=Conflicting;
                Editable=FALSE }

    { 26  ;2   ;Field     ;
                SourceExpr="Existing Name";
                Editable=FALSE;
                StyleExpr=ExistingStyle }

    { 27  ;2   ;Field     ;
                SourceExpr="Existing Version List";
                Editable=FALSE;
                StyleExpr=ExistingStyle }

    { 28  ;2   ;Field     ;
                SourceExpr="Existing Date";
                Editable=FALSE;
                StyleExpr=ExistingStyle }

    { 29  ;2   ;Field     ;
                SourceExpr="Existing Time";
                Editable=FALSE;
                StyleExpr=ExistingStyle }

    { 30  ;2   ;Field     ;
                SourceExpr="New Name";
                Editable=FALSE;
                StyleExpr=NewStyle }

    { 31  ;2   ;Field     ;
                SourceExpr="New Version List";
                Editable=FALSE;
                StyleExpr=NewStyle }

    { 32  ;2   ;Field     ;
                SourceExpr="New Date";
                Editable=FALSE;
                StyleExpr=NewStyle }

    { 33  ;2   ;Field     ;
                SourceExpr="New Time";
                Editable=FALSE;
                StyleExpr=NewStyle }

    { 34  ;1   ;Field     ;
                SourceExpr=TransportFileName;
                Visible=FALSE }

    { 35  ;1   ;Field     ;
                SourceExpr=ExportFobFileName;
                Visible=FALSE }

  }
  CODE
  {
    VAR
      ExistingStyle@1000 : Text INDATASET;
      ExportFobFileName@1001 : Text;
      NewStyle@1002 : Text INDATASET;
      PreviousStyle@1003 : Text INDATASET;
      TransportFile@1004 : Text;
      TransportFileFromImport@1005 : Text;
      TransportFileName@1006 : Text;
      FromImport@1007 : Boolean;

    LOCAL PROCEDURE ConfirmChanges@1();
    VAR
      CALHistoryObject@1000 : Record 11102052;
      KnownObjectExportError@1001 : Record 11102073;
      ObjectCompareLine@1002 : Record 11102079;
      Object@1003 : Record 2000000001;
      Progressbar@1004 : Codeunit 11102044;
      SourceControl@1005 : Codeunit 11102050;
      ctConfirm@1006 : TextConst 'DEU=The changes will be written to the C/AL History as confirmed.\They will not popup the next time you import a transport.\\Are you sure?;ENU=The changes will be written to the C/AL History as confirmed.\They will not popup the next time you import a transport.\\Are you sure?;ESP=The changes will be written to the C/AL History as confirmed.\They will not popup the next time you import a transport.\\Are you sure?;FRA=The changes will be written to the C/AL History as confirmed.\They will not popup the next time you import a transport.\\Are you sure?;NLD=De wijzigingen worden weggeschreven naar de C/AL Historie als bevestigd.\Ze zullen niet meer verschijnen bij de volgende transportimport.\\Weet u het zeker?;DEA=The changes will be written to the C/AL History as confirmed.\They will not popup the next time you import a transport.\\Are you sure?';
      ctConfirming@1007 : TextConst 'DEU=Confirming...;ENU=Confirming...;ESP=Confirming...;FRA=Confirming...;NLD=Bevestigen...;DEA=Confirming...';
      ctExportingOfObjectFailed@1008 : TextConst 'DEU=Exporting of object %1 %2 - %3 failed.\Add this object to the "Object to Ignore" list?;ENU=Exporting of object %1 %2 - %3 failed.\Add this object to the "Object to Ignore" list?;ESP=Exporting of object %1 %2 - %3 failed.\Add this object to the "Object to Ignore" list?;FRA=Exporting of object %1 %2 - %3 failed.\Add this object to the "Object to Ignore" list?;NLD=Exporteren van object %1 %2 - %3 mislukt.\Object toevoegen aan de "Te negeren objecten" lijst?;DEA=Exporting of object %1 %2 - %3 failed.\Add this object to the "Object to Ignore" list?';
    BEGIN
      IF CONFIRM(ctConfirm, TRUE) THEN BEGIN

        CurrPage.SETSELECTIONFILTER(ObjectCompareLine);

        Progressbar.Open(ctConfirming, 0);
        Progressbar.BarSize := ObjectCompareLine.COUNT;

        IF ObjectCompareLine.FINDSET THEN
          REPEAT

            Progressbar.AddToBar(1);

            IF ObjectCompareLine."Object Changed" THEN
              IF ObjectCompareLine."Existing Name" <> '' THEN BEGIN

                Object.GET(ObjectCompareLine.Type, '', ObjectCompareLine."No.");
                IF SourceControl.AddObject(Object, CALHistoryObject."Action Type"::"Confirmed in Import Sheet", FALSE, TRUE, 0, TRUE) THEN

                  IF ObjectCompareLine."New Name" = '' THEN
                    ObjectCompareLine.DELETE
                  ELSE BEGIN
                    ObjectCompareLine."Object Changed" := FALSE;
                    ObjectCompareLine.Conflicting := FALSE;

                    ObjectCompareLine."Prev. Name" := ObjectCompareLine."Existing Name";
                    ObjectCompareLine."Prev. Version List" := ObjectCompareLine."Existing Version List";
                    ObjectCompareLine."Prev. Date" := ObjectCompareLine."Existing Date";
                    ObjectCompareLine."Prev. Time" := ObjectCompareLine."Existing Time";
                    ObjectCompareLine.MODIFY;
                  END

                ELSE
                  IF CONFIRM(ctExportingOfObjectFailed, TRUE, Object.Type, Object.ID, Object.Name) THEN BEGIN
                    KnownObjectExportError.AddObject(Object);
                    IF ObjectCompareLine."New Name" = '' THEN
                      ObjectCompareLine.DELETE;
                  END ELSE
                    ERROR('');

              END;

          UNTIL ObjectCompareLine.NEXT = 0;
        Progressbar.Close;
      END;
    END;

    PROCEDURE SetNewCALCode@2(VAR TmpObject@1000 : TEMPORARY Record 2000000001);
    VAR
      ObjectCompareLine@1001 : Record 11102079;
      Object2@1002 : Record 2000000001;
      TmpObject2@1003 : TEMPORARY Record 2000000001;
      ImExportMgt@1004 : Codeunit 11102043;
      InStr@1005 : InStream;
      OutStr@1006 : OutStream;
      ObjectNameText@1007 : Text;
      ObjectNoText@1008 : Text;
      ObjectTypeText@1009 : Text;
      TextLine@1010 : Text;
      Chr10@1011 : Char;
      Chr13@1012 : Char;
      ReadPos@1013 : Integer;
      CALBlobFilled@1014 : Boolean;
    BEGIN
      ObjectCompareLine.DELETEALL;

      TmpObject.SETRANGE("Company Name", 'FOB');
      IF TmpObject.FINDFIRST THEN BEGIN
        TmpObject.CALCFIELDS("BLOB Reference");
        TmpObject."BLOB Reference".CREATEINSTREAM(InStr);

        ImExportMgt.GetObjectHeadersFromFob(InStr, TmpObject2);
        IF TmpObject2.FINDSET THEN
          REPEAT
            ObjectCompareLine."Line Type" := ObjectCompareLine."Line Type"::"Object Compare Sheet";
            ObjectCompareLine.Type := TmpObject2.Type;
            ObjectCompareLine."No." := TmpObject2.ID;
            ObjectCompareLine.Name := TmpObject2.Name;
            ObjectCompareLine."New Name" := TmpObject2.Name;
            ObjectCompareLine."New Version List" := TmpObject2."Version List";
            ObjectCompareLine."New Date" := TmpObject2.Date;
            ObjectCompareLine."New Time" := TmpObject2.Time;
            ObjectCompareLine."C/AL Code Present" := FALSE;
            ObjectCompareLine.INSERT;

          UNTIL TmpObject2.NEXT = 0;

      END;

      Chr13 := 13;
      Chr10 := 10;

      TmpObject.SETRANGE("Company Name", 'TXTOBJECTS');
      IF TmpObject.FINDFIRST THEN BEGIN

        TmpObject.CALCFIELDS("BLOB Reference");
        TmpObject."BLOB Reference".CREATEINSTREAM(InStr);

        InStr.READTEXT(TextLine);
        InStr.READTEXT(TextLine);
        InStr.READTEXT(TextLine);

        WHILE NOT InStr.EOS DO BEGIN

          InStr.READTEXT(TextLine);
          IF DELSTR(TextLine, 7) = 'OBJECT' THEN BEGIN
            ReadPos := 8;

            ObjectTypeText := '';
            WHILE TextLine[ReadPos] <> ' ' DO BEGIN
              ObjectTypeText += FORMAT(TextLine[ReadPos]);
              ReadPos += 1;
            END;

            ReadPos += 1;

            ObjectNoText := '';
            WHILE TextLine[ReadPos] <> ' ' DO BEGIN
              ObjectNoText += FORMAT(TextLine[ReadPos]);
              ReadPos += 1;
            END;

            ObjectNameText := COPYSTR(TextLine, ReadPos + 1);

            EVALUATE(Object2.Type, ObjectTypeText);
            EVALUATE(Object2.ID, ObjectNoText);

            IF CALBlobFilled THEN BEGIN
              ObjectCompareLine.MODIFY;
              CALBlobFilled := FALSE;
            END;

            ObjectCompareLine.GET(ObjectCompareLine."Line Type"::"Object Compare Sheet", Object2.Type, Object2.ID);
            ObjectCompareLine."New C/AL Code".CREATEOUTSTREAM(OutStr);
            ObjectCompareLine."C/AL Code Present" := TRUE;

          END;

          IF CALBlobFilled THEN
            OutStr.WRITETEXT(FORMAT(Chr13) + FORMAT(Chr10));

          OutStr.WRITETEXT(TextLine);
          CALBlobFilled := TRUE;

        END;
      END;

      IF CALBlobFilled THEN
        ObjectCompareLine.MODIFY;

      ImExportMgt.AddCurrentChanges;
    END;

    PROCEDURE SetTransportFile@4(NewValue@1000 : Text);
    BEGIN
      TransportFileFromImport := NewValue;
      FromImport := TRUE;
    END;

    LOCAL PROCEDURE SetStyles@5();
    BEGIN
      PreviousStyle := '';
      CASE TRUE OF
        NOT "Object Changed" :
          ;

        DateTimeNewer("Prev. Date", "Prev. Time", "Existing Date", "Existing Time") :
          PreviousStyle := 'Attention';

      END;

      ExistingStyle := '';
      CASE TRUE OF

        NOT "Object Changed" :
          ;

        "Prev. Name" = '' :
          ExistingStyle := 'StandardAccent';

        CurrNewerThenPrevious :
          ExistingStyle := 'Attention';

      END;

      NewStyle := '';
      IF NOT "C/AL Code Present" THEN
        NewStyle := 'Subordinate';
    END;

    BEGIN
    END.
  }
}

