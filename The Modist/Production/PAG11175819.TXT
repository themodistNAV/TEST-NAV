OBJECT Page 11175819 OM - Navgate Editor
{
  OBJECT-PROPERTIES
  {
    Date=19/11/15;
    Time=12:00:00 PM;
    Version List=OMA10.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Navgate Editor;
               ENU=Navgate Editor;
               ESP=Navgate Editor;
               FRA=Navgate Editor;
               NLD=Navgate editor;
               DEA=Navgate Editor];
    SaveValues=Yes;
    LinksAllowed=No;
    DataCaptionExpr='';
    PromotedActionCategoriesML=ENU=New,Process,Report,Object,Edit,Captions,Bookmarks,Debugger;
    ShowFilter=No;
    OnOpenPage=VAR
                 CheckCALHistory@1000 : Codeunit 11102063;
               BEGIN
                 CheckCALHistory.SetCheckType(2);
                 IF CheckCALHistory.RUN THEN
                   ;
               END;

    OnQueryClosePage=VAR
                       ExitValue@1000 : Boolean;
                     BEGIN
                       IF CommunicationFailed THEN
                         EXIT(TRUE);

                       CommunicationFailed := TRUE;
                       WindowsSettings := CurrPage.WickItNavgateAddin.WindowsSettings;
                       ExitValue := CurrPage.WickItNavgateAddin.CanClose;
                       CommunicationFailed := FALSE;

                       IF CurrPage.WickItNavgateAddin.SaveDocuments THEN
                         SaveAll;

                       EXIT(ExitValue);
                     END;

    ActionList=ACTIONS
    {
      { 1       ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 2       ;1   ;ActionGroup;
                      CaptionML=[DEU=&Editor;
                                 ENU=&Editor;
                                 ESP=&Editor;
                                 FRA=&Editor;
                                 NLD=&Editor;
                                 DEA=&Editor] }
      { 3       ;2   ;Action    ;
                      ShortCutKey=Ctrl+Z;
                      CaptionML=[DEU=Undo;
                                 ENU=Undo;
                                 ESP=Undo;
                                 FRA=Undo;
                                 NLD=Ongedaan maken;
                                 DEA=Undo];
                      Promoted=Yes;
                      Enabled=UndoEnabled;
                      PromotedIsBig=Yes;
                      Image=Undo;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 CurrPage.WickItNavgateAddin.Undo;
                               END;
                                }
      { 4       ;2   ;Action    ;
                      ShortCutKey=Ctrl+S;
                      CaptionML=[DEU=Save;
                                 ENU=Save;
                                 ESP=Save;
                                 FRA=Save;
                                 NLD=Op&slaan;
                                 DEA=Save];
                      Promoted=Yes;
                      Enabled=SaveEnabled;
                      PromotedIsBig=Yes;
                      Image=Save;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 Save;
                               END;
                                }
      { 5       ;2   ;Action    ;
                      ShortCutKey=Shift+Ctrl+S;
                      CaptionML=[DEU=Save All;
                                 ENU=Save All;
                                 ESP=Save All;
                                 FRA=Save All;
                                 NLD=Alle op&slaan;
                                 DEA=Save All];
                      Promoted=Yes;
                      Enabled=SaveAllEnabled;
                      PromotedIsBig=Yes;
                      Image=Save;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 SaveAll;
                               END;
                                }
      { 40      ;2   ;Action    ;
                      ShortCutKey=Ctrl+M;
                      CaptionML=[DEU=Import;
                                 ENU=Import;
                                 ESP=Import;
                                 FRA=Import;
                                 NLD=Importeren;
                                 DEA=Import];
                      Image=Import;
                      OnAction=BEGIN
                                 Import;
                               END;
                                }
      { 41      ;2   ;Action    ;
                      ShortCutKey=Shift+Ctrl+M;
                      CaptionML=[DEU=Import All;
                                 ENU=Import All;
                                 ESP=Import All;
                                 FRA=Import All;
                                 NLD=Alle importeren;
                                 DEA=Import All];
                      Image=Import;
                      OnAction=BEGIN
                                 ImportAll;
                               END;
                                }
      { 6       ;1   ;ActionGroup;
                      CaptionML=[DEU=&Object;
                                 ENU=&Object;
                                 ESP=&Object;
                                 FRA=&Object;
                                 NLD=&Object;
                                 DEA=&Object] }
      { 7       ;2   ;Action    ;
                      ShortCutKey=Ctrl+F2;
                      CaptionML=[DEU=Design;
                                 ENU=Design;
                                 ESP=Design;
                                 FRA=Design;
                                 NLD=Design;
                                 DEA=Design];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Design;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 Object@1000 : Record 2000000001;
                                 ObjectMgt@1001 : Codeunit 11102046;
                               BEGIN
                                 IF GetObject(Object) THEN
                                   ObjectMgt.DesignObject(Object);
                               END;
                                }
      { 8       ;2   ;Action    ;
                      ShortCutKey=Ctrl+R;
                      CaptionML=[DEU=Run;
                                 ENU=Run;
                                 ESP=Run;
                                 FRA=Run;
                                 NLD=Run;
                                 DEA=Run];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Start;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 Object@1000 : Record 2000000001;
                                 ObjectMgt@1001 : Codeunit 11102046;
                               BEGIN
                                 IF SaveEnabled THEN
                                   Save;

                                 IF GetObject(Object) THEN
                                   ObjectMgt.RunObject(Object);
                               END;
                                }
      { 9       ;2   ;Action    ;
                      ShortCutKey=F11;
                      CaptionML=[DEU=Compile;
                                 ENU=Compile;
                                 ESP=Compile;
                                 FRA=Compile;
                                 NLD=Compileren;
                                 DEA=Compile];
                      Image=Recalculate;
                      OnAction=VAR
                                 Object@1000 : Record 2000000001;
                                 ObjectMgt@1001 : Codeunit 11102046;
                               BEGIN
                                 IF GetObject(Object) THEN
                                   ObjectMgt.CompileObject(Object);
                               END;
                                }
      { 42      ;2   ;Action    ;
                      CaptionML=[DEU=Navigate;
                                 ENU=Navigate;
                                 ESP=Navigate;
                                 FRA=Navigate;
                                 NLD=Navigeren;
                                 DEA=Navigate];
                      Image=Navigate;
                      OnAction=VAR
                                 Object@1000 : Record 2000000001;
                                 ObjectMgt@1001 : Codeunit 11102046;
                               BEGIN
                                 IF GetObject(Object) THEN
                                   ObjectMgt.Navigate(Object);
                               END;
                                }
      { 37      ;1   ;ActionGroup;
                      CaptionML=[DEU=Where U&sed;
                                 ENU=Where U&sed;
                                 ESP=Where U&sed;
                                 FRA=Where U&sed;
                                 NLD=Waar-&gebruikt;
                                 DEA=Where U&sed] }
      { 38      ;2   ;Action    ;
                      ShortCutKey=Ctrl+Alt+F2;
                      CaptionML=[DEU=Where U&sed;
                                 ENU=Where U&sed;
                                 ESP=Where U&sed;
                                 FRA=Where U&sed;
                                 NLD=Waar-&gebruikt;
                                 DEA=Where U&sed];
                      Image=Where-Used;
                      OnAction=BEGIN
                                 WhereUsed;
                               END;
                                }
      { 10      ;1   ;ActionGroup;
                      CaptionML=[DEU=&Check Guidelines;
                                 ENU=&Check Guidelines;
                                 ESP=&Check Guidelines;
                                 FRA=&Check Guidelines;
                                 NLD=&Richtlijnen controleren;
                                 DEA=&Check Guidelines] }
      { 36      ;2   ;Action    ;
                      CaptionML=[DEU=&Check Guidelines;
                                 ENU=&Check Guidelines;
                                 ESP=&Check Guidelines;
                                 FRA=&Check Guidelines;
                                 NLD=&Richtlijnen controleren;
                                 DEA=&Check Guidelines];
                      Image=Approve;
                      OnAction=VAR
                                 TmpCheckGuidelinesComment@1000 : TEMPORARY Record 11102081;
                                 Object@1001 : Record 2000000001;
                                 EditorMgt@1002 : Codeunit 11102106;
                                 CALCode@1003 : Text;
                               BEGIN
                                 GetObject(Object);

                                 CALCode := CurrPage.WickItNavgateAddin.ActiveCode;
                                 EditorMgt.CheckGuideLines(Object, TmpCheckGuidelinesComment, CALCode);

                                 CurrPage.WickItNavgateAddin.ClearToolWindow(
                                   CurrPage.WickItNavgateAddin.ActiveObjectType,
                                   CurrPage.WickItNavgateAddin.ActiveObjectNo);

                                 RefreshCheckGuidelinesComments(
                                   CurrPage.WickItNavgateAddin.ActiveObjectType,
                                   CurrPage.WickItNavgateAddin.ActiveObjectNo,
                                   TmpCheckGuidelinesComment);
                               END;
                                }
      { 39      ;2   ;ActionGroup;
                      CaptionML=[DEU=Apply Guidelines;
                                 ENU=Apply Guidelines;
                                 ESP=Apply Guidelines;
                                 FRA=Apply Guidelines;
                                 NLD=Richtl&ijnen toepassen;
                                 DEA=Apply Guidelines];
                      Image=Approve }
      { 11      ;3   ;Action    ;
                      ShortCutKey=F7;
                      CaptionML=[DEU=Apply Guidelines;
                                 ENU=Apply Guidelines;
                                 ESP=Apply Guidelines;
                                 FRA=Apply Guidelines;
                                 NLD=Richtl&ijnen toepassen;
                                 DEA=Apply Guidelines];
                      Enabled=EditButtonsEnabled;
                      Image=Approve;
                      OnAction=VAR
                                 TmpCheckGuidelinesComment@1000 : TEMPORARY Record 11102081;
                                 Object@1001 : Record 2000000001;
                                 EditorMgt@1002 : Codeunit 11102106;
                                 CALCode@1003 : Text;
                               BEGIN
                                 IF NOT GetObject(Object) THEN
                                   EXIT;

                                 CALCode := CurrPage.WickItNavgateAddin.ActiveCode;

                                 EditorMgt.ApplyGuidelines(Object, TmpCheckGuidelinesComment, CALCode);

                                 CurrPage.WickItNavgateAddin.ModifyCode(CALCode);
                               END;
                                }
      { 12      ;3   ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=[DEU=Apply Guidelines to &Selection;
                                 ENU=Apply Guidelines to &Selection;
                                 ESP=Apply Guidelines to &Selection;
                                 FRA=Apply Guidelines to &Selection;
                                 NLD=Richtlijnen toepassen op &selectie;
                                 DEA=Apply Guidelines to &Selection];
                      Enabled=EditButtonsEnabled;
                      Image=Approve;
                      OnAction=VAR
                                 TmpCheckGuidelinesComment@1000 : TEMPORARY Record 11102081;
                                 Object@1001 : Record 2000000001;
                                 EditorMgt@1002 : Codeunit 11102106;
                                 CALCode@1003 : Text;
                               BEGIN
                                 IF NOT GetObject(Object) THEN
                                   EXIT;

                                 CALCode := CurrPage.WickItNavgateAddin.ActiveCode;

                                 EditorMgt.ApplyGuidelinesSelection(
                                   Object, TmpCheckGuidelinesComment, CALCode,
                                   CurrPage.WickItNavgateAddin.SelectionFromLine, CurrPage.WickItNavgateAddin.SelectionTillLine);

                                 CurrPage.WickItNavgateAddin.ModifyCode(CALCode);
                               END;
                                }
      { 13      ;2   ;Separator  }
      { 14      ;2   ;Action    ;
                      CaptionML=[DEU=Set to &Known Comment;
                                 ENU=Set to &Known Comment;
                                 ESP=Set to &Known Comment;
                                 FRA=Set to &Known Comment;
                                 NLD=Wijzig naar &bekende opmerking;
                                 DEA=Set to &Known Comment];
                      Enabled=CheckGuidelinesToolbox;
                      Image=Edit;
                      OnAction=VAR
                                 CheckGuidelinesComment@1000 : Record 11102081;
                                 Object@1001 : Record 2000000001;
                               BEGIN
                                 IF NOT GetObject(Object) THEN
                                   EXIT;

                                 CheckGuidelinesComment.SETCURRENTKEY("Object Type", "Object No.", "C/AL Line No.");
                                 CheckGuidelinesComment.SETRANGE("Object Type", Object.Type);
                                 CheckGuidelinesComment.SETRANGE("Object No.", Object.ID);
                                 CheckGuidelinesComment.SETRANGE("C/AL Line No.",
                                   CurrPage.WickItNavgateAddin.SelectionFromLine,
                                   CurrPage.WickItNavgateAddin.SelectionTillLine);
                                 IF CheckGuidelinesComment.FINDSET THEN
                                   REPEAT
                                     CheckGuidelinesComment."Known Comment" := TRUE;
                                     CheckGuidelinesComment.MODIFY;
                                   UNTIL CheckGuidelinesComment.NEXT = 0;

                                 RefreshCheckGuidelines(CurrPage.WickItNavgateAddin.ActiveDocumentNo);
                               END;
                                }
      { 15      ;2   ;Action    ;
                      CaptionML=[DEU=Set to &Unknown Comment;
                                 ENU=Set to &Unknown Comment;
                                 ESP=Set to &Unknown Comment;
                                 FRA=Set to &Unknown Comment;
                                 NLD=Wijzig naar &onbekende opmerking;
                                 DEA=Set to &Unknown Comment];
                      Enabled=CheckGuidelinesToolbox;
                      Image=Edit;
                      OnAction=VAR
                                 CheckGuidelinesComment@1000 : Record 11102081;
                                 Object@1001 : Record 2000000001;
                               BEGIN
                                 IF NOT GetObject(Object) THEN
                                   EXIT;

                                 CheckGuidelinesComment.SETCURRENTKEY("Object Type", "Object No.", "C/AL Line No.");
                                 CheckGuidelinesComment.SETRANGE("Object Type", Object.Type);
                                 CheckGuidelinesComment.SETRANGE("Object No.", Object.ID);
                                 CheckGuidelinesComment.SETRANGE("C/AL Line No.",
                                   CurrPage.WickItNavgateAddin.SelectionFromLine,
                                   CurrPage.WickItNavgateAddin.SelectionTillLine);
                                 IF CheckGuidelinesComment.FINDSET THEN
                                   REPEAT
                                     CheckGuidelinesComment."Known Comment" := FALSE;
                                     CheckGuidelinesComment.MODIFY;
                                   UNTIL CheckGuidelinesComment.NEXT = 0;

                                 RefreshCheckGuidelines(CurrPage.WickItNavgateAddin.ActiveDocumentNo);
                               END;
                                }
      { 16      ;2   ;Separator  }
      { 17      ;2   ;Action    ;
                      CaptionML=[DEU=Glue Line;
                                 ENU=Glue Line;
                                 ESP=Glue Line;
                                 FRA=Glue Line;
                                 NLD=Regel lijmen;
                                 DEA=Glue Line];
                      Enabled=EditButtonsEnabled AND CheckGuidelinesToolbox;
                      Image=Attach;
                      OnAction=VAR
                                 Object@1000 : Record 2000000001;
                                 EditorMgt@1001 : Codeunit 11102106;
                                 CALCode@1002 : Text;
                               BEGIN
                                 IF CheckEditDocument THEN
                                   IF GetObject(Object) THEN BEGIN
                                     CALCode := CurrPage.WickItNavgateAddin.ActiveCode;
                                     EditorMgt.GlueLine(Object, CALCode, CurrPage.WickItNavgateAddin.ActiveLineNo);
                                     CurrPage.WickItNavgateAddin.ModifyCode(CALCode);
                                   END;
                               END;
                                }
      { 18      ;1   ;ActionGroup;
                      CaptionML=[DEU=&Captions;
                                 ENU=&Captions;
                                 ESP=&Captions;
                                 FRA=&Captions;
                                 NLD=&Captions;
                                 DEA=&Captions] }
      { 19      ;2   ;Action    ;
                      ShortCutKey=Shift+Ctrl+Q;
                      Ellipsis=Yes;
                      CaptionML=[DEU=Edit Cap&tions;
                                 ENU=Edit Cap&tions;
                                 ESP=Edit Cap&tions;
                                 FRA=Edit Cap&tions;
                                 NLD=Captions;
                                 DEA=Edit Cap&tions];
                      Promoted=Yes;
                      Enabled=EditButtonsEnabled;
                      PromotedIsBig=Yes;
                      Image=CopySerialNo;
                      PromotedCategory=Category6;
                      OnAction=VAR
                                 Object@1000 : Record 2000000001;
                                 EditorMgt@1001 : Codeunit 11102106;
                                 CALCode@1002 : Text;
                               BEGIN
                                 IF CheckEditDocument THEN
                                   IF GetObject(Object) THEN BEGIN
                                     CALCode := CurrPage.WickItNavgateAddin.ActiveCode;
                                     EditorMgt.UpdateCaptions(Object, CALCode, TRUE);
                                     CurrPage.WickItNavgateAddin.ModifyCode(CALCode);
                                   END;
                               END;
                                }
      { 20      ;2   ;Action    ;
                      ShortCutKey=Ctrl+Q;
                      Ellipsis=Yes;
                      CaptionML=[DEU=Add Cap&tions;
                                 ENU=Add Cap&tions;
                                 ESP=Add Cap&tions;
                                 FRA=Add Cap&tions;
                                 NLD=Captions;
                                 DEA=Add Cap&tions];
                      Promoted=Yes;
                      Enabled=EditButtonsEnabled;
                      PromotedIsBig=Yes;
                      Image=CreateSerialNo;
                      PromotedCategory=Category6;
                      OnAction=VAR
                                 Object@1000 : Record 2000000001;
                                 EditorMgt@1001 : Codeunit 11102106;
                                 CALCode@1002 : Text;
                               BEGIN
                                 IF CheckEditDocument THEN
                                   IF GetObject(Object) THEN BEGIN
                                     CALCode := CurrPage.WickItNavgateAddin.ActiveCode;
                                     EditorMgt.UpdateCaptions(Object, CALCode, FALSE);
                                     CurrPage.WickItNavgateAddin.ModifyCode(CALCode);
                                   END;
                               END;
                                }
      { 21      ;1   ;ActionGroup;
                      CaptionML=[DEU=&Bookmarks;
                                 ENU=&Bookmarks;
                                 ESP=&Bookmarks;
                                 FRA=&Bookmarks;
                                 NLD=&Bookmarks;
                                 DEA=&Bookmarks] }
      { 22      ;2   ;Action    ;
                      ShortCutKey=Shift+F3;
                      CaptionML=[DEU=Previous;
                                 ENU=Previous;
                                 ESP=Previous;
                                 FRA=Previous;
                                 NLD=Omhoog;
                                 DEA=Previous];
                      ToolTipML=[DEU=Up;
                                 ENU=Up;
                                 ESP=Up;
                                 FRA=Up;
                                 NLD=Omhoog;
                                 DEA=Up];
                      Promoted=Yes;
                      Enabled=BookmarksPresent;
                      InFooterBar=Yes;
                      Image=MoveUp;
                      PromotedCategory=Category7;
                      OnAction=BEGIN
                                 CurrPage.WickItNavgateAddin.PreviousBookmark;
                               END;
                                }
      { 23      ;2   ;Action    ;
                      ShortCutKey=F3;
                      CaptionML=[DEU=Next;
                                 ENU=Next;
                                 ESP=Next;
                                 FRA=Next;
                                 NLD=Omlaag;
                                 DEA=Next];
                      ToolTipML=[DEU=Down;
                                 ENU=Down;
                                 ESP=Down;
                                 FRA=Down;
                                 NLD=Omlaag;
                                 DEA=Down];
                      Promoted=Yes;
                      Enabled=BookmarksPresent;
                      InFooterBar=Yes;
                      Image=MoveDown;
                      PromotedCategory=Category7;
                      OnAction=BEGIN
                                 CurrPage.WickItNavgateAddin.NextBookmark;
                               END;
                                }
      { 24      ;1   ;ActionGroup;
                      CaptionML=[DEU=F&unctions;
                                 ENU=F&unctions;
                                 ESP=F&unctions;
                                 FRA=F&unctions;
                                 NLD=F&uncties;
                                 DEA=F&unctions] }
      { 25      ;2   ;Action    ;
                      CaptionML=[DEU=Re&fresh Code;
                                 ENU=Re&fresh Code;
                                 ESP=Re&fresh Code;
                                 FRA=Re&fresh Code;
                                 NLD=Code vernieuwen;
                                 DEA=Re&fresh Code];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Refresh;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 RefreshCode;
                               END;
                                }
      { 26      ;2   ;Action    ;
                      ShortCutKey=Ctrl+F5;
                      CaptionML=[DEU=Clear Cache;
                                 ENU=Clear Cache;
                                 ESP=Clear Cache;
                                 FRA=Clear Cache;
                                 NLD=Cache leegmaken;
                                 DEA=Clear Cache];
                      Image=ClearLog;
                      OnAction=BEGIN
                                 CurrPage.WickItNavgateAddin.ClearCache;
                               END;
                                }
      { 27      ;2   ;Action    ;
                      ShortCutKey=Ctrl+P;
                      CaptionML=[DEU=Print;
                                 ENU=Print;
                                 ESP=Print;
                                 FRA=Print;
                                 NLD=Afdrukken;
                                 DEA=Print];
                      Image=Print;
                      OnAction=BEGIN
                                 CurrPage.WickItNavgateAddin.Print;
                               END;
                                }
      { 28      ;1   ;ActionGroup;
                      CaptionML=[DEU=&Debugger;
                                 ENU=&Debugger;
                                 ESP=&Debugger;
                                 FRA=&Debugger;
                                 NLD=&Debugger;
                                 DEA=&Debugger] }
      { 29      ;2   ;Action    ;
                      CaptionML=[DEU=Debug;
                                 ENU=Debug;
                                 ESP=Debug;
                                 FRA=Debug;
                                 NLD=Foutopsporing;
                                 DEA=Debug];
                      RunObject=Codeunit 11102065;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Debug;
                      PromotedCategory=Category8 }
      { 30      ;2   ;Action    ;
                      ShortCutKey=F9;
                      CaptionML=[DEU=Toggle Breakpoint;
                                 ENU=Toggle Breakpoint;
                                 ESP=Toggle Breakpoint;
                                 FRA=Toggle Breakpoint;
                                 NLD=Onderbrekingspunt in-/uitschakelen;
                                 DEA=Toggle Breakpoint];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ToggleBreakpoint;
                      PromotedCategory=Category8;
                      OnAction=VAR
                                 TmpBreakpoints@1000 : TEMPORARY Record 11102053;
                                 DebugMgt@1001 : Codeunit 11102065;
                                 LineNo@1002 : Integer;
                                 ObjectNo@1003 : Integer;
                                 ObjectType@1004 : Integer;
                               BEGIN
                                 ObjectType := CurrPage.WickItNavgateAddin.ActiveObjectType;
                                 ObjectNo := CurrPage.WickItNavgateAddin.ActiveObjectNo;
                                 LineNo := CurrPage.WickItNavgateAddin.ActiveLineNo;

                                 DebugMgt.GetBreakpoints(ObjectType, ObjectNo, TmpBreakpoints);

                                 TmpBreakpoints.SETRANGE("Line No.", LineNo);

                                 IF NOT TmpBreakpoints.ISEMPTY THEN
                                   DebugMgt.DeleteBreakpoint(ObjectType, ObjectNo, LineNo)
                                 ELSE
                                   DebugMgt.InsertBreakpoint(ObjectType, ObjectNo, LineNo);

                                 RefreshBreakpoints(ObjectType, ObjectNo);
                               END;
                                }
      { 31      ;2   ;Action    ;
                      ShortCutKey=Shift+Ctrl+F9;
                      CaptionML=[DEU=Remove Breakpoints;
                                 ENU=Remove Breakpoints;
                                 ESP=Remove Breakpoints;
                                 FRA=Remove Breakpoints;
                                 NLD=Onderbrekingspunten verwijderen;
                                 DEA=Remove Breakpoints];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=DeleteAllBreakpoints;
                      PromotedCategory=Category8;
                      OnAction=VAR
                                 DebugMgt@1000 : Codeunit 11102065;
                               BEGIN
                                 DebugMgt.RemoveAllBreakpoints;
                                 CurrPage.WickItNavgateAddin.RemoveAllBreakpoints;
                               END;
                                }
      { 32      ;2   ;Action    ;
                      CaptionML=[DEU=Set Breakpoint User;
                                 ENU=Set Breakpoint User;
                                 ESP=Set Breakpoint User;
                                 FRA=Set Breakpoint User;
                                 NLD=Zet onderbrekingspunt gebruiker;
                                 DEA=Set Breakpoint User];
                      Image=BreakRulesOn;
                      OnAction=VAR
                                 DebugMgt@1000 : Codeunit 11102065;
                               BEGIN
                                 DebugMgt.SetUser;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 33  ;0   ;Container ;
                ContainerType=ContentArea }

    { 34  ;1   ;Field     ;
                Name=WickItNavgateAddin;
                ControlAddIn=[WickIt.Navgate.NavAddin;PublicKeyToken=f487c57c254ec85a];
                OnControlAddIn=BEGIN
                                 CASE Index OF
                                   1 : AddinLoaded;
                                   2 : DocumentLoaded;
                                   3 : ProcessInfoRequest(0);
                                   4 : ProcessInfoRequests;
                                   5 : UpdateControls(Data);
                                   6 : EditDocument;
                                   7 : SaveDocument(Data);
                                   8 : ToggleBreakpoint(Data);
                                   9 : BubbleKeyStroke(Data);
                                   10 : CurrPage.CLOSE;
                                 END;
                               END;

                ShowCaption=No }

    { 35  ;1   ;Field     ;
                SourceExpr=WindowsSettings;
                Visible=FALSE }

  }
  CODE
  {
    VAR
      TmpCALHistoryObject@1000 : TEMPORARY Record 11102052;
      TmpObject@1001 : TEMPORARY Record 2000000001;
      SearchString@1002 : Text;
      ValidationFilter@1003 : Text;
      WindowsSettings@1004 : Text;
      ActiveCharacter@1005 : Integer;
      ActiveLine@1006 : Integer;
      ActiveObjectNo@1007 : Integer;
      ActiveObjectType@1008 : Integer;
      WhereUsedEntryNo@1009 : Integer;
      BookmarksPresent@1010 : Boolean INDATASET;
      CaseSensitive@1011 : Boolean;
      CheckGuidelinesToolbox@1012 : Boolean INDATASET;
      CommunicationFailed@1013 : Boolean;
      EditButtonsEnabled@1014 : Boolean INDATASET;
      Initialized@1015 : Boolean;
      ProgressbarUsed@1016 : Boolean;
      SaveAllEnabled@1017 : Boolean INDATASET;
      SaveEnabled@1018 : Boolean INDATASET;
      SearchStringToolbox@1019 : Boolean;
      UndoEnabled@1020 : Boolean INDATASET;

    LOCAL PROCEDURE AddinLoaded@1();
    VAR
      EditorMgt@1000 : Codeunit 11102106;
      i@1001 : Integer;
    BEGIN
      IF Initialized THEN
        EXIT;
      Initialize;
      Initialized := TRUE;

      CurrPage.WickItNavgateAddin.WindowsSettings := WindowsSettings;

      IF TmpCALHistoryObject.FINDSET THEN
        REPEAT
          CurrPage.WickItNavgateAddin.AddObject(EditorMgt.HistoryCALCode(TmpCALHistoryObject."Entry No."));
        UNTIL TmpCALHistoryObject.NEXT = 0;

      IF TmpObject.FINDSET THEN
        REPEAT
          CurrPage.WickItNavgateAddin.AddObject(EditorMgt.LifeCALCode(TmpObject.Type, TmpObject.ID));
        UNTIL TmpCALHistoryObject.NEXT = 0;

      IF ActiveObjectNo <> 0 THEN
        FOR i := 1 TO CurrPage.WickItNavgateAddin.NoOfDocuments DO
          IF (CurrPage.WickItNavgateAddin.ObjectType(i) = ActiveObjectType) AND
             (CurrPage.WickItNavgateAddin.ObjectNo(i) = ActiveObjectNo)
          THEN
            CurrPage.WickItNavgateAddin.ActiveDocumentNo := i;

      IF WhereUsedEntryNo <> 0 THEN
        AddWhereUsedEntries(WhereUsedEntryNo, ValidationFilter);

      IF CurrPage.WickItNavgateAddin.NoOfDocuments > 0 THEN
        CurrPage.WickItNavgateAddin.GotoPosition(ActiveLine, ActiveCharacter);
    END;

    LOCAL PROCEDURE Initialize@2();
    VAR
      Setup@1000 : Record 11102035;
      Integer@1001 : Record 2000000026;
      WindowsLanguage2@1002 : Record 2000000045;
      GetUIDOffset@1003 : Codeunit 11102089;
      EditorMgt@1004 : Codeunit 11102106;
    BEGIN
      Setup.CustomGet;

      IF Setup."Snippet Folder" = '' THEN
        CurrPage.WickItNavgateAddin.SnippetFolder := EditorMgt.SnippetFolder
      ELSE
        CurrPage.WickItNavgateAddin.SnippetFolder := Setup."Snippet Folder";

      IF Setup."Specification File" = '' THEN
        CurrPage.WickItNavgateAddin.SpecificationFile := EditorMgt.SpecificationFile
      ELSE
        CurrPage.WickItNavgateAddin.SpecificationFile := Setup."Specification File";

      CurrPage.WickItNavgateAddin.ManualFileName := EditorMgt.ManualFileName;
      IF GetUIDOffset.RUN(Integer) THEN
        CurrPage.WickItNavgateAddin.UIDOffset := Integer.Number;
      CurrPage.WickItNavgateAddin.DocumentTriggerTag := RemoveDoubleSpaces(EditorMgt.DocumentationTriggerTag);
      CurrPage.WickItNavgateAddin.ModificationTag := RemoveDoubleSpaces(EditorMgt.ModificationTag);
      CurrPage.WickItNavgateAddin.ModificationStartTag := RemoveDoubleSpaces(EditorMgt.ModificationStartTag);
      CurrPage.WickItNavgateAddin.ModificationEndTag := RemoveDoubleSpaces(EditorMgt.ModificationEndTag);

      CurrPage.WickItNavgateAddin.AddLanguage(-1);
      IF Setup."Mandatory Languages" <> '' THEN BEGIN
        WindowsLanguage2.SETFILTER("Abbreviated Name", Setup."Mandatory Languages");
        IF WindowsLanguage2.FINDSET THEN
          REPEAT
            CurrPage.WickItNavgateAddin.AddLanguage(WindowsLanguage2."Language ID");
          UNTIL WindowsLanguage2.NEXT = 0;
      END;

      IF Setup."Object Cache (MB)" <> 0 THEN
        CurrPage.WickItNavgateAddin.ObjectCache := Setup."Object Cache (MB)";
    END;

    LOCAL PROCEDURE DocumentLoaded@3();
    BEGIN
      RefreshBreakpoints(CurrPage.WickItNavgateAddin.ActiveObjectType, CurrPage.WickItNavgateAddin.ActiveObjectNo);

      IF CheckGuidelinesToolbox THEN
        RefreshCheckGuidelines(CurrPage.WickItNavgateAddin.ActiveDocumentNo);

      IF SearchStringToolbox THEN
        RefreshSearchStringEntries(CurrPage.WickItNavgateAddin.ActiveDocumentNo);
    END;

    PROCEDURE SetObject@4(VAR Object@1000 : Record 2000000001);
    BEGIN
      TmpObject := Object;
      TmpObject.INSERT;
    END;

    PROCEDURE SetCALHistoryEntryNo@5(VAR EntryNo@1000 : Integer);
    VAR
      CALHistoryObject@1001 : Record 11102052;
    BEGIN
      CALHistoryObject.GET(EntryNo);

      TmpCALHistoryObject := CALHistoryObject;
      TmpCALHistoryObject.INSERT;
    END;

    PROCEDURE SetCALHistoryEntryNos@6(VAR CALHistoryObject@1000 : Record 11102052);
    BEGIN
      IF CALHistoryObject.FINDSET THEN
        REPEAT
          TmpCALHistoryObject := CALHistoryObject;
          TmpCALHistoryObject.INSERT;
        UNTIL CALHistoryObject.NEXT = 0;
    END;

    LOCAL PROCEDURE ProcessInfoRequests@7();
    VAR
      i@1000 : Integer;
      NoOfRequests@1001 : Integer;
      UseProgressbar@1002 : Boolean;
    BEGIN
      NoOfRequests := CurrPage.WickItNavgateAddin.NoOfRequests;

      IF NoOfRequests > 0 THEN BEGIN

        UseProgressbar := (NoOfRequests > 5) OR (ProgressbarUsed AND (NoOfRequests > 1));
        IF UseProgressbar THEN
          CurrPage.WickItNavgateAddin.OpenProgressbar('Loading objects...');

        WHILE i < NoOfRequests DO BEGIN

          i += 1;

          IF UseProgressbar THEN BEGIN
            CurrPage.WickItNavgateAddin.UpdateProgressbar(
              FORMAT(CurrPage.WickItNavgateAddin.RequestDescription(i)),
              ROUND(i / NoOfRequests * 100, 1));
            NoOfRequests := CurrPage.WickItNavgateAddin.NoOfRequests;
          END;

          ProcessInfoRequest(i);

        END;

        IF UseProgressbar THEN
          CurrPage.WickItNavgateAddin.CloseProgressbar;

        ProgressbarUsed := TRUE;
      END;

      CurrPage.WickItNavgateAddin.ClearRequests;
    END;

    LOCAL PROCEDURE ProcessInfoRequest@8(InfoRequestNo@1000 : Integer);
    VAR
      EditorMgt@1001 : Codeunit 11102106;
    BEGIN
      CASE CurrPage.WickItNavgateAddin.RequestType(InfoRequestNo) OF
        1 :
          CurrPage.WickItNavgateAddin.SaveObjectNo(InfoRequestNo,
            EditorMgt.GetObjectNo(
              CurrPage.WickItNavgateAddin.RequestObjectType(InfoRequestNo),
              CurrPage.WickItNavgateAddin.RequestObjectName(InfoRequestNo)));

        2 :
          CurrPage.WickItNavgateAddin.SaveObjectName(InfoRequestNo,
            EditorMgt.GetObjectName(
              CurrPage.WickItNavgateAddin.RequestObjectType(InfoRequestNo),
              CurrPage.WickItNavgateAddin.RequestObjectNo(InfoRequestNo)));

        3 :
          CurrPage.WickItNavgateAddin.SaveCALCode(InfoRequestNo,
            EditorMgt.CALCode(
              CurrPage.WickItNavgateAddin.RequestObjectType(InfoRequestNo),
              CurrPage.WickItNavgateAddin.RequestObjectNo(InfoRequestNo)));

        4 :
          CurrPage.WickItNavgateAddin.SaveObjectNo(InfoRequestNo,
            EditorMgt.GetObjectNoOfInputName(
              CurrPage.WickItNavgateAddin.RequestObjectType(InfoRequestNo),
              CurrPage.WickItNavgateAddin.RequestObjectName(InfoRequestNo)));

      END;
    END;

    LOCAL PROCEDURE Save@9();
    VAR
      EditorMgt@1000 : Codeunit 11102106;
    BEGIN
      CurrPage.WickItNavgateAddin.WaitCursor;
      EditorMgt.SaveCALCode(CurrPage.WickItNavgateAddin.ActiveCode, TRUE);
      CurrPage.WickItNavgateAddin.ActiveModified := FALSE;

      RecalculateBookmarks(CurrPage.WickItNavgateAddin.ActiveDocumentNo);
      CurrPage.WickItNavgateAddin.DefaultCursor;
    END;

    LOCAL PROCEDURE SaveDocument@10(Data@1000 : Text);
    VAR
      EditorMgt@1001 : Codeunit 11102106;
      DocumentNo@1002 : Integer;
    BEGIN
      CurrPage.WickItNavgateAddin.WaitCursor;

      EVALUATE(DocumentNo, Data);

      CurrPage.WickItNavgateAddin.DocumentSaved := FALSE;

      EditorMgt.SaveCALCode(CurrPage.WickItNavgateAddin.Code(DocumentNo), TRUE);
      CurrPage.WickItNavgateAddin.Modified(DocumentNo, FALSE);
      RecalculateBookmarks(DocumentNo);

      CurrPage.WickItNavgateAddin.DocumentSaved := TRUE;

      CurrPage.WickItNavgateAddin.DefaultCursor;
    END;

    LOCAL PROCEDURE SaveAll@11();
    VAR
      EditorMgt@1000 : Codeunit 11102106;
      i@1001 : Integer;
    BEGIN
      CurrPage.WickItNavgateAddin.WaitCursor;

      FOR i := 1 TO CurrPage.WickItNavgateAddin.NoOfDocuments DO
        IF CurrPage.WickItNavgateAddin.Modified(i) THEN BEGIN
          EditorMgt.SaveCALCode(CurrPage.WickItNavgateAddin.Code(i), TRUE);
          CurrPage.WickItNavgateAddin.Modified(i, FALSE);
          RecalculateBookmarks(i);
        END;

      CurrPage.WickItNavgateAddin.DefaultCursor;
    END;

    LOCAL PROCEDURE RefreshCode@12();
    VAR
      Object@1000 : Record 2000000001;
      SourceControl@1001 : Codeunit 11102050;
      EditorMgt@1002 : Codeunit 11102106;
      ctDocumentChanged@1003 : TextConst 'DEU=Changes will be lost.\Are you sure?;ENU=Changes will be lost.\Are you sure?;ESP=Changes will be lost.\Are you sure?;FRA=Changes will be lost.\Are you sure?;NLD=Wijzigingen gaan verloren.\Weet u het zeker?;DEA=Changes will be lost.\Are you sure?';
    BEGIN
      CurrPage.WickItNavgateAddin.WaitCursor;
      IF NOT GetObject(Object) THEN
        EXIT;

      IF CurrPage.WickItNavgateAddin.ActiveModified THEN
        IF NOT CONFIRM(ctDocumentChanged, TRUE) THEN
          EXIT;

      SourceControl.AddObject(Object, 0, FALSE, FALSE, 1, FALSE);
      CurrPage.WickItNavgateAddin.SetNewCode(EditorMgt.CALCode(Object.Type, Object.ID));

      RecalculateBookmarks(CurrPage.WickItNavgateAddin.ActiveDocumentNo);
      DocumentLoaded;
      CurrPage.WickItNavgateAddin.DefaultCursor;
    END;

    LOCAL PROCEDURE UpdateControls@13(Data@1000 : Text);
    VAR
      Controls@1001 : Integer;
    BEGIN
      IF NOT EVALUATE(Controls, Data) THEN
        EXIT;

      SaveEnabled := Controls DIV POWER(2, 0) MOD 2 = 1;
      SaveAllEnabled := Controls DIV POWER(2, 1) MOD 2 = 1;
      BookmarksPresent := Controls DIV POWER(2, 2) MOD 2 = 1;
      EditButtonsEnabled := Controls DIV POWER(2, 3) MOD 2 = 1;
      UndoEnabled := TRUE;
    END;

    LOCAL PROCEDURE RefreshCheckGuidelines@15(DocumentNo@1000 : Integer);
    VAR
      CheckGuidelinesComment@1001 : Record 11102081;
      ObjectNo@1002 : Integer;
      ObjectType2@1003 : Integer;
    BEGIN
      ObjectType2 := CurrPage.WickItNavgateAddin.ObjectType(DocumentNo);
      ObjectNo := CurrPage.WickItNavgateAddin.ObjectNo(DocumentNo);

      CurrPage.WickItNavgateAddin.ClearToolWindow(ObjectType2, ObjectNo);

      CheckGuidelinesComment.SETRANGE("Object Type", ObjectType2);
      CheckGuidelinesComment.SETRANGE("Object No.", ObjectNo);
      RefreshCheckGuidelinesComments(ObjectType2, ObjectNo, CheckGuidelinesComment);
    END;

    LOCAL PROCEDURE RefreshCheckGuidelinesComments@29(ObjectType2@1000 : Integer;ObjectNo@1001 : Integer;VAR TmpCheckGuidelinesComment@1002 : TEMPORARY Record 11102081);
    VAR
      Object@1003 : Record 2000000001;
    BEGIN
      IF Object.GET(ObjectType2, '', ObjectNo) THEN
        ;

      WITH TmpCheckGuidelinesComment DO
        IF FINDSET THEN
          REPEAT
            CurrPage.WickItNavgateAddin.AddCheckGuidelinesComment(
              ObjectType2, ObjectNo, Object.Name, "C/AL Line No.", 0, Comment,
              FORMAT(Type), "Comment No.", "Known Comment", Critical);
          UNTIL NEXT = 0;
    END;

    LOCAL PROCEDURE AddWhereUsedEntries@16(WhereUsedEntryNo2@1000 : Integer;ValidationFilter2@1001 : Text);
    VAR
      WhereUsedObjectLine@1002 : Record 11102058;
      WhereUsedIn@1003 : Record 11102060;
      WhereUsedCrossTable@1004 : Record 11102061;
    BEGIN
      IF WhereUsedObjectLine.GET(WhereUsedEntryNo2) THEN
        ;
      CurrPage.WickItNavgateAddin.AddWhereUsedWindow(WhereUsedEntryNo2, WhereUsedObjectLine.Name);

      WITH WhereUsedCrossTable DO BEGIN
        SETCURRENTKEY("Object Entry No.");
        SETRANGE("Object Entry No.", WhereUsedEntryNo2);
        IF ValidationFilter2 <> '' THEN
          SETFILTER(Validation, ValidationFilter2);
        IF FINDSET THEN
          REPEAT
            CALCFIELDS("Object Name");
            IF WhereUsedIn.GET("In Entry No.") THEN
              CurrPage.WickItNavgateAddin.AddWhereUsedEntry(
                WhereUsedEntryNo2, WhereUsedIn."Object Type", WhereUsedIn."Object No.", "Object Name",
                "C/AL Code Line No.", 0, CALCode,
                FORMAT(WhereUsedIn.Type), WhereUsedIn.Name, "Temporary Record",
                Validation <> Validation::" ", Validation = Validation::Yes);
          UNTIL NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE RefreshSearchStringEntries@17(DocumentNo@1000 : Integer);
    VAR
      CALCode@1001 : Text;
      Line@1002 : Text;
      i@1003 : Integer;
      LineNo@1004 : Integer;
      PrevLineStart@1005 : Integer;
    BEGIN
      CurrPage.WickItNavgateAddin.ClearToolWindow(
        CurrPage.WickItNavgateAddin.ObjectType(DocumentNo),
        CurrPage.WickItNavgateAddin.ObjectNo(DocumentNo));

      CALCode := CurrPage.WickItNavgateAddin.Code(DocumentNo);
      PrevLineStart := 1;
      FOR i := 1 TO STRLEN(CALCode) DO
        IF CALCode[i] = 10 THEN BEGIN
          LineNo += 1;
          Line := COPYSTR(CALCode, PrevLineStart, i - PrevLineStart);

          IF CaseSensitive THEN BEGIN
            IF STRPOS(Line, SearchString) > 0 THEN
              CurrPage.WickItNavgateAddin.AddSearchEntry(DocumentNo, LineNo, 0);
          END ELSE
            IF STRPOS(LOWERCASE(Line), LOWERCASE(SearchString)) > 0 THEN
              CurrPage.WickItNavgateAddin.AddSearchEntry(DocumentNo, LineNo, 0);

          PrevLineStart := i;
        END;
    END;

    PROCEDURE GotoPosition@18(NewActiveLine@1000 : Integer;NewActiveCharacter@1001 : Integer);
    BEGIN
      ActiveLine := NewActiveLine;
      ActiveCharacter := NewActiveCharacter;
    END;

    PROCEDURE SetWhereUsedEntryNo@19(NewValue@1000 : Integer;NewValidationFilter@1001 : Text);
    BEGIN
      WhereUsedEntryNo := NewValue;
      ValidationFilter := NewValidationFilter;
    END;

    PROCEDURE SetCheckGuidelines@14();
    BEGIN
      CheckGuidelinesToolbox := TRUE;
    END;

    PROCEDURE SetSearchString@20(NewSearchString@1000 : Text;NewCaseSensitive@1001 : Boolean);
    BEGIN
      SearchStringToolbox := TRUE;
      SearchString := NewSearchString;
      CaseSensitive := NewCaseSensitive;
    END;

    LOCAL PROCEDURE RefreshBreakpoints@21(ObjectType@1000 : Integer;ObjectNo@1001 : Integer);
    VAR
      TmpBreakpoints@1002 : TEMPORARY Record 11102053;
      DebugMgt@1003 : Codeunit 11102065;
    BEGIN
      CurrPage.WickItNavgateAddin.RemoveBreakpoints(ObjectType, ObjectNo);
      DebugMgt.GetBreakpoints(ObjectType, ObjectNo, TmpBreakpoints);
      IF TmpBreakpoints.FINDSET THEN
        REPEAT
          CurrPage.WickItNavgateAddin.AddBreakpoint(ObjectType, ObjectNo, TmpBreakpoints."Line No.");
        UNTIL TmpBreakpoints.NEXT = 0;
    END;

    PROCEDURE EditDocument@22();
    VAR
      Object@1000 : Record 2000000001;
      EditorMgt@1001 : Codeunit 11102106;
      AnswerProceedModify@1002 : ' ,Yes,No';
      RefreshCode2@1003 : Boolean;
    BEGIN
      IF GetObject(Object) THEN
        CurrPage.WickItNavgateAddin.EditDocument :=
          EditorMgt.ProceedModify(
            Object, AnswerProceedModify, RefreshCode2,
            CurrPage.WickItNavgateAddin.ActiveCode);

      IF RefreshCode2 THEN
        RefreshCode;
    END;

    LOCAL PROCEDURE GetObject@23(VAR Object@1000 : Record 2000000001) : Boolean;
    BEGIN
      EXIT(Object.GET(CurrPage.WickItNavgateAddin.ActiveObjectType, '', CurrPage.WickItNavgateAddin.ActiveObjectNo));
    END;

    LOCAL PROCEDURE RecalculateBookmarks@24(DocumentNo@1000 : Integer);
    VAR
      Object@1001 : Record 2000000001;
      CheckGuidelinesMgt@1002 : Codeunit 11102060;
    BEGIN
      IF Object.GET(CurrPage.WickItNavgateAddin.ObjectType(DocumentNo), '', CurrPage.WickItNavgateAddin.ObjectNo(DocumentNo)) THEN BEGIN

        IF CheckGuidelinesToolbox THEN BEGIN
          Object.SETRECFILTER;
          CheckGuidelinesMgt.SetObjectRange(Object);
          CheckGuidelinesMgt.RUN;
          RefreshCheckGuidelines(DocumentNo);
        END;

        IF SearchStringToolbox THEN
          RefreshSearchStringEntries(DocumentNo);

      END;
    END;

    LOCAL PROCEDURE ToggleBreakpoint@25(Data@1000 : Text);
    VAR
      Mgt@1001 : Codeunit 11102035;
      DebugMgt@1002 : Codeunit 11102065;
      SplitArray@1003 : ARRAY [100] OF Text[120];
      LineNo@1004 : Integer;
      ObjectNo@1005 : Integer;
      ObjectType@1006 : Integer;
      Add@1007 : Boolean;
    BEGIN
      ObjectType := CurrPage.WickItNavgateAddin.ActiveObjectType;
      ObjectNo := CurrPage.WickItNavgateAddin.ActiveObjectNo;

      Mgt.Split(Data, '-', SplitArray);

      EVALUATE(LineNo, SplitArray[1]);
      EVALUATE(Add, SplitArray[2]);

      IF Add THEN
        DebugMgt.InsertBreakpoint(ObjectType, ObjectNo, LineNo)
      ELSE
        DebugMgt.DeleteBreakpoint(ObjectType, ObjectNo, LineNo);

      RefreshBreakpoints(ObjectType, ObjectNo);
    END;

    LOCAL PROCEDURE RemoveDoubleSpaces@26(Tag@1000 : Text) : Text;
    VAR
      Mgt@1001 : Codeunit 11102035;
    BEGIN
      EXIT(Mgt.Replace(Tag, '  ', ' '));
    END;

    LOCAL PROCEDURE CheckEditDocument@27() : Boolean;
    BEGIN
      IF CurrPage.WickItNavgateAddin.EditDocument THEN
        EXIT(TRUE);
    END;

    LOCAL PROCEDURE GetWhereUsedObjectLine@28(VAR WhereUsedObjectLine@1000 : Record 11102058;ObjectType2@1001 : Integer;ObjectNo@1002 : Integer;Type@1003 : Integer;Id@1004 : Integer) : Boolean;
    BEGIN
      WhereUsedObjectLine.SETCURRENTKEY("Object Type", "Object No.", Type, Id);
      WhereUsedObjectLine.SETRANGE("Object Type", ObjectType2);
      WhereUsedObjectLine.SETRANGE("Object No.", ObjectNo);
      WhereUsedObjectLine.SETRANGE(Type, Type);
      IF Id <> -1 THEN
        WhereUsedObjectLine.SETRANGE(Id, Id);
      EXIT(WhereUsedObjectLine.FINDFIRST);
    END;

    LOCAL PROCEDURE Import@30();
    VAR
      EditorMgt@1000 : Codeunit 11102106;
    BEGIN
      CurrPage.WickItNavgateAddin.WaitCursor;
      EditorMgt.SaveCALCode(CurrPage.WickItNavgateAddin.ActiveCode, FALSE);
      CurrPage.WickItNavgateAddin.ActiveModified := FALSE;

      RecalculateBookmarks(CurrPage.WickItNavgateAddin.ActiveDocumentNo);
      CurrPage.WickItNavgateAddin.DefaultCursor;
    END;

    LOCAL PROCEDURE ImportAll@31();
    VAR
      EditorMgt@1000 : Codeunit 11102106;
      i@1001 : Integer;
    BEGIN
      CurrPage.WickItNavgateAddin.WaitCursor;

      FOR i := 1 TO CurrPage.WickItNavgateAddin.NoOfDocuments DO
        IF CurrPage.WickItNavgateAddin.Modified(i) THEN BEGIN
          EditorMgt.SaveCALCode(CurrPage.WickItNavgateAddin.Code(i), FALSE);
          CurrPage.WickItNavgateAddin.Modified(i, FALSE);
          RecalculateBookmarks(i);
        END;

      CurrPage.WickItNavgateAddin.DefaultCursor;
    END;

    LOCAL PROCEDURE BubbleKeyStroke@32(Data@1000 : Text);
    BEGIN
      CASE Data OF
        'F2-1-1-0': WhereUsed;
      END;
    END;

    LOCAL PROCEDURE WhereUsed@34();
    VAR
      WhereUsedObject@1000 : Record 11102057;
      WhereUsedObjectLine@1001 : Record 11102058;
      WhereUsedObjectLine2@1002 : Record 11102058;
      Id@1003 : Integer;
      ObjectNo@1004 : Integer;
      ObjectType2@1005 : Integer;
      ParentId@1006 : Integer;
      ParentType@1007 : Integer;
      Type@1008 : Integer;
    BEGIN
      CurrPage.WickItNavgateAddin.GetIdentity(ObjectType2, ObjectNo, Type, Id, ParentType, ParentId);

      IF ParentType <> 0 THEN BEGIN

        WhereUsedObject.GET(ObjectType2, ObjectNo);
        WhereUsedObject.CalculateVariableUsage;

        IF NOT GetWhereUsedObjectLine(WhereUsedObjectLine2, ObjectType2, ObjectNo, ParentType, ParentId) THEN
          EXIT;
        WhereUsedObjectLine.SETRANGE("Parent No.", WhereUsedObjectLine2."Entry No.");
      END;

      IF GetWhereUsedObjectLine(WhereUsedObjectLine, ObjectType2, ObjectNo, Type, Id) THEN
        AddWhereUsedEntries(WhereUsedObjectLine."Entry No.", '');
    END;

    BEGIN
    END.
  }
}

