OBJECT Page 9063006 Quick Report Card
{
  OBJECT-PROPERTIES
  {
    Date=10/05/16;
    Time=12:00:00 PM;
    Version List=NA2016.15;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Quick Report Card;
               ENG=Quick Report Card];
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table9062697;
    DataCaptionExpr=PageCaption();
    PageType=Card;
    OnInit=BEGIN
             AdvancedMode := FALSE;
           END;

    OnOpenPage=BEGIN
                 PageEditable := CurrPage.EDITABLE;
                 CODEUNIT.RUN(CODEUNIT::"Quick Report Maintenance");
                 UpdateGlobals();
                 CurrPage.FieldsPart.PAGE.SetAdvancedMode(AdvancedMode);
               END;

    OnClosePage=VAR
                  lSaved@1000000000 : Boolean;
                  eSaveConfirmation@1000000001 : TextConst 'ENU=The current report has been changed. Do you want to save it?;ENG=The current report has been changed. Do you want to save it?';
                BEGIN
                  lSaved := FALSE;
                  IF ((Rec."Temporary") AND (ABS(Rec."Timestamp Date Time" - TimestampDateTime) > 100)) THEN
                    IF (CONFIRM(eSaveConfirmation, TRUE)) THEN
                    BEGIN
                      QuickReportInteraction.CardSave(Rec);
                      lSaved := TRUE;
                    END;
                  IF ( NOT (lSaved)) THEN
                    IF ((DeleteRecordOnClose) AND (Rec."Temporary")) THEN
                    BEGIN
                      IF (Rec.GET(Rec.Code)) THEN
                        Rec.DELETE(TRUE);
                    END;
                END;

    OnAfterGetRecord=BEGIN
                       UpdateTimestampDateTime(FALSE);
                       UpdateGlobals();
                     END;

    OnNewRecord=BEGIN
                  InitialiseRecord(FALSE);
                END;

    ActionList=ACTIONS
    {
      { 1000000020;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1000000037;1 ;Action    ;
                      Name=NewAction;
                      CaptionML=[ENU=New;
                                 ENG=New];
                      Promoted=Yes;
                      Enabled=PageEditable;
                      PromotedIsBig=Yes;
                      Image=New;
                      PromotedCategory=New;
                      OnAction=BEGIN
                                 IF (QuickReportInteraction.CardNew(Rec)) THEN
                                   CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1000000035;1 ;Action    ;
                      Name=EditAction;
                      CaptionML=[ENU=Edit;
                                 ENG=Edit];
                      Promoted=Yes;
                      Enabled=PageEditable;
                      PromotedIsBig=Yes;
                      Image=Edit;
                      PromotedCategory=New;
                      OnAction=BEGIN
                                 IF (QuickReportInteraction.CardEdit(Rec)) THEN
                                   CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1000000034;1 ;Action    ;
                      Name=SaveAction;
                      CaptionML=[ENU=Save;
                                 ENG=Save];
                      Promoted=Yes;
                      Enabled=PageEditable;
                      PromotedIsBig=Yes;
                      Image=Save;
                      PromotedCategory=New;
                      OnAction=BEGIN
                                 IF (QuickReportInteraction.CardSave(Rec)) THEN
                                 BEGIN
                                   CurrPage.UPDATE(FALSE);
                                   UpdateTimestampDateTime(TRUE);
                                 END;
                               END;
                                }
      { 1000000038;1 ;Action    ;
                      Name=SaveAsAction;
                      CaptionML=[ENU=Save As;
                                 ENG=Save As];
                      Promoted=Yes;
                      Enabled=PageEditable;
                      PromotedIsBig=Yes;
                      Image=Save;
                      PromotedCategory=New;
                      OnAction=BEGIN
                                 IF (QuickReportInteraction.CardSaveAs(Rec)) THEN
                                 BEGIN
                                   CurrPage.UPDATE(FALSE);
                                   UpdateTimestampDateTime(TRUE);
                                 END;
                               END;
                                }
      { 1000000033;1 ;Separator ;
                      CaptionML=[ENU=----------------;
                                 ENG=----------------] }
      { 1000000018;1 ;Action    ;
                      Name=AddMultipleFieldsAction;
                      CaptionML=[ENU=Add Multiple Fields;
                                 ENG=Add Multiple Fields];
                      Promoted=Yes;
                      Enabled=PageEditable;
                      PromotedIsBig=Yes;
                      Image=SelectField;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CurrPage.SAVERECORD();
                                 IF (QuickReportToolkit.AddMultipleFields(Rec)) THEN
                                   CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1000000070;1 ;Action    ;
                      Name=SwitchToSimpleModeAction;
                      CaptionML=[ENU=Switch to Simple Mode;
                                 ENG=Switch to Simple Mode];
                      Promoted=Yes;
                      Visible=AdvancedMode;
                      PromotedIsBig=Yes;
                      Image=Ledger;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SwitchMode(FALSE);
                               END;
                                }
      { 1000000066;1 ;Action    ;
                      Name=SwitchToAdvancedModeAction;
                      CaptionML=[ENU=Switch to Advanced Mode;
                                 ENG=Switch to Advanced Mode];
                      Promoted=Yes;
                      Visible=NOT AdvancedMode;
                      PromotedIsBig=Yes;
                      Image=ServiceLedger;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SwitchMode(TRUE);
                               END;
                                }
      { 1000000032;1 ;Separator ;
                      CaptionML=[ENU=----------------;
                                 ENG=----------------] }
      { 1000000072;1 ;Action    ;
                      Name=ShowEnhViewRepAction;
                      CaptionML=[ENU=Show Enhanced View;
                                 ENG=Show Enhanced View];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Report2;
                      PromotedCategory=Report;
                      OnAction=BEGIN
                                 QuickReportInteraction.ShowEnhancedView(Rec, TRUE);
                               END;
                                }
      { 1000000031;1 ;Action    ;
                      Name=ShowReportAction;
                      CaptionML=[ENU=Show Report;
                                 ENG=Show Report];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Report;
                      PromotedCategory=Report;
                      OnAction=BEGIN
                                 QuickReportInteraction.CardShow(Rec);
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1000000030;1 ;Action    ;
                      Name=PrintAction;
                      CaptionML=[ENU=Print;
                                 ENG=Print];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Print;
                      PromotedCategory=Report;
                      OnAction=BEGIN
                                 QuickReportInteraction.Print(Rec);
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1000000029;1 ;Separator ;
                      CaptionML=[ENU=----------------;
                                 ENG=----------------] }
      { 1000000065;1 ;ActionGroup;
                      Name=ExportGroup;
                      CaptionML=[ENU=Export;
                                 ENG=Export] }
      { 1000000069;2 ;Action    ;
                      Name=ExportToXmlAction;
                      CaptionML=[ENU=Export to XML;
                                 ENG=Export to XML];
                      Image=XMLFile;
                      PromotedCategory=Report;
                      OnAction=BEGIN
                                 QuickReportExport.ExportToXml(Rec, FALSE, FALSE);
                               END;
                                }
      { 1000000064;2 ;Action    ;
                      Name=ExportToExcelAction;
                      CaptionML=[ENU=Export to Excel;
                                 ENG=Export to Excel];
                      Image=Excel;
                      PromotedCategory=Report;
                      OnAction=BEGIN
                                 QuickReportExport.ExportToExcel(Rec);
                               END;
                                }
      { 1000000028;2 ;Action    ;
                      Name=ExportToPdfAction;
                      CaptionML=[ENU=Export to PDF;
                                 ENG=Export to PDF];
                      Image=SendAsPDF;
                      PromotedCategory=Report;
                      OnAction=BEGIN
                                 QuickReportExport.ExportToPdf(Rec);
                               END;
                                }
      { 1000000027;2 ;Action    ;
                      Name=ExportToWordAction;
                      CaptionML=[ENU=Export to Word;
                                 ENG=Export to Word];
                      Image=Word;
                      PromotedCategory=Report;
                      OnAction=BEGIN
                                 QuickReportExport.ExportToWord(Rec);
                               END;
                                }
      { 1000000019;2 ;Action    ;
                      Name=ExportToHtmlAction;
                      CaptionML=[ENU=Export to HTML;
                                 ENG=Export to HTML];
                      Image=Web;
                      PromotedCategory=Report;
                      OnAction=BEGIN
                                 QuickReportExport.ExportToHtml(Rec);
                               END;
                                }
      { 1000000004;2 ;Action    ;
                      Name=ExportToCsvAction;
                      CaptionML=[ENU=Export to CSV;
                                 ENG=Export to CSV];
                      Image=Text;
                      OnAction=BEGIN
                                 QuickReportExport.ExportToCsv(Rec, '');
                               END;
                                }
      { 1000000061;1 ;Separator ;
                      CaptionML=[ENU=----------------;
                                 ENG=----------------] }
      { 1000000063;1 ;Action    ;
                      Name=RefreshNavQueryFields;
                      CaptionML=[ENU=Refresh NAV Query Fields;
                                 ENG=Refresh NAV Query Fields];
                      Enabled=NavQueryEnabled;
                      Image=SuggestField;
                      OnAction=BEGIN
                                 ResetNavQueryFields();
                               END;
                                }
      { 1000000060;1 ;Action    ;
                      Name=SqlQueryAction;
                      CaptionML=[ENU=SQL Query;
                                 ENG=SQL Query];
                      Enabled=SqlQueryEnabled;
                      Image=ImportDatabase;
                      OnAction=BEGIN
                                 ShowSqlQuery();
                               END;
                                }
      { 1000000062;1 ;Action    ;
                      Name=RefreshSqlQueryFieldsAction;
                      CaptionML=[ENU=Refresh SQL Query Fields;
                                 ENG=Refresh SQL Query Fields];
                      Enabled=SqlQueryEnabled;
                      Image=SuggestField;
                      OnAction=BEGIN
                                 ResetSqlQueryFields();
                               END;
                                }
      { 1000000068;  ;ActionContainer;
                      Name=RelatedInformationContainer;
                      CaptionML=[ENU=Related Information;
                                 ENG=Related Information];
                      ActionContainerType=RelatedInformation }
      { 1000000067;1 ;Action    ;
                      Name=ShowEnhancedFieldsAction;
                      CaptionML=[ENU=Show Enhanced Fields;
                                 ENG=Show Enhanced Fields];
                      Image=SuggestField;
                      OnAction=BEGIN
                                 ShowEnhancedFields();
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1000000000;0;Container;
                ContainerType=ContentArea }

    { 1000000001;1;Group  ;
                Name=GeneralGroup;
                CaptionML=[ENU=General;
                           ENG=General];
                GroupType=Group }

    { 1000000071;2;Group  ;
                Name=BasicsGroup;
                CaptionML=[ENU=Basics;
                           ENG=Basics];
                Visible=AdvancedMode;
                GroupType=Group }

    { 1000000002;3;Field  ;
                SourceExpr=Code;
                Importance=Additional;
                Editable=FALSE }

    { 1000000036;3;Field  ;
                SourceExpr="Copied From";
                Importance=Additional;
                Editable=FALSE }

    { 1000000003;3;Field  ;
                SourceExpr=Name;
                Importance=Additional }

    { 1000000023;3;Field  ;
                SourceExpr=Description;
                Importance=Additional;
                MultiLine=Yes }

    { 1000000005;2;Field  ;
                SourceExpr="Data From";
                Importance=Additional;
                OnValidate=BEGIN
                             UpdateGlobals();
                           END;
                            }

    { 1000000006;2;Group  ;
                Name=TableGroup;
                CaptionML=[ENU=Table;
                           ENG=Table];
                Visible=TableEnabled;
                GroupType=Group }

    { 1000000007;3;Field  ;
                SourceExpr="Table ID";
                Visible=FALSE }

    { 1000000008;3;Field  ;
                Name=TableNameField;
                CaptionML=[ENU=Table Name;
                           ENG=Table Name];
                SourceExpr=TableText;
                OnValidate=BEGIN
                             ObjectFieldToolkit.ValidateTableName(Rec."Table ID", TableText, FALSE);
                             Rec.VALIDATE("Table ID");
                             UpdateGlobals();
                           END;

                OnLookup=BEGIN
                           IF (ObjectFieldToolkit.TableLookup(Rec."Table ID")) THEN
                           BEGIN
                             Rec.VALIDATE("Table ID");
                             UpdateGlobals();
                           END;
                         END;
                          }

    { 1000000022;3;Field  ;
                Name=TableFilterField;
                CaptionML=[ENU=Table Filter;
                           ENG=Table Filter];
                SourceExpr="Criteria Description";
                Editable=FALSE;
                OnDrillDown=BEGIN
                              CurrPage.SAVERECORD();
                              EditCriteria();
                              CurrPage.UPDATE(TRUE);
                            END;
                             }

    { 1000000021;2;Group  ;
                Name=NavQueryGroup;
                CaptionML=[ENU=NAV Query;
                           ENG=NAV Query];
                Visible=NavQueryEnabled;
                GroupType=Group }

    { 1000000009;3;Field  ;
                SourceExpr="NAV Query ID";
                Visible=FALSE }

    { 1000000010;3;Field  ;
                Name=NavQueryNameField;
                CaptionML=[ENU=NAV Query Name;
                           ENG=NAV Query Name];
                SourceExpr=NavQueryText;
                OnValidate=BEGIN
                             ObjectFieldToolkit.ValidateQueryName(Rec."NAV Query ID", NavQueryText, FALSE);
                             Rec.VALIDATE("NAV Query ID");
                             UpdateGlobals();
                           END;

                OnLookup=BEGIN
                           IF (ObjectFieldToolkit.QueryLookup(Rec."NAV Query ID")) THEN
                           BEGIN
                             Rec.VALIDATE("NAV Query ID");
                             UpdateGlobals();
                           END;
                         END;
                          }

    { 1000000024;2;Group  ;
                Name=SqlQueryGroup;
                CaptionML=[ENU=SQL Query;
                           ENG=SQL Query];
                Visible=SqlQueryEnabled;
                GroupType=Group }

    { 1000000025;3;Field  ;
                SourceExpr="SQL Query Code" }

    { 1000000026;3;Field  ;
                SourceExpr="SQL Query Description" }

    { 1000000017;2;Field  ;
                SourceExpr=Blocked;
                Importance=Additional;
                Visible=AdvancedMode }

    { 1000000058;2;Group  ;
                Name=ReportTableGroup;
                CaptionML=[ENU=Report Table;
                           ENG=Report Table];
                GroupType=Group }

    { 1000000057;3;Field  ;
                SourceExpr="Report Table ID";
                Importance=Additional;
                Visible=FALSE }

    { 1000000056;3;Field  ;
                Name=ReportTableNameField;
                CaptionML=[ENU=Report Table Name;
                           ENG=Report Table Name];
                SourceExpr=ReportTableText;
                Importance=Additional;
                OnValidate=BEGIN
                             ObjectFieldToolkit.ValidateTableName(Rec."Report Table ID", ReportTableText, FALSE);
                             Rec.VALIDATE("Report Table ID");
                             UpdateGlobals();
                           END;

                OnLookup=BEGIN
                           IF (ObjectFieldToolkit.TableLookup(Rec."Report Table ID")) THEN
                           BEGIN
                             Rec.VALIDATE("Report Table ID");
                             UpdateGlobals();
                           END;
                         END;
                          }

    { 1000000055;3;Group  ;
                Name=ReportTableKeyGroup;
                CaptionML=[ENU=Report Table Key;
                           ENG=Report Table Key];
                Visible=ReportTableKeyEnabled;
                GroupType=Group }

    { 1000000054;4;Field  ;
                SourceExpr="Report Table Key 1 ID";
                Importance=Additional;
                Visible=FALSE }

    { 1000000053;4;Field  ;
                Name=ReportTableKey1Name;
                CaptionML=[ENU=Report Table Key 1 Name;
                           ENG=Report Table Key 1 Name];
                SourceExpr=ReportTableKey1Text;
                Importance=Additional;
                OnValidate=BEGIN
                             QuickReportLookups.ValidateQuickReportFieldName(Rec.Code, Rec."Report Table Key 1 ID", ReportTableKey1Text, FALSE);
                             Rec.VALIDATE("Report Table Key 1 ID");
                             UpdateGlobals();
                           END;

                OnLookup=BEGIN
                           IF (QuickReportLookups.QuickReportFieldLookup(Rec.Code, Rec."Report Table Key 1 ID")) THEN
                           BEGIN
                             Rec.VALIDATE("Report Table Key 1 ID");
                             UpdateGlobals();
                           END;
                         END;
                          }

    { 1000000052;4;Field  ;
                SourceExpr="Report Table Key 2 ID";
                Importance=Additional;
                Visible=FALSE }

    { 1000000051;4;Field  ;
                Name=ReportTableKey2Name;
                CaptionML=[ENU=Report Table Key 2 Name;
                           ENG=Report Table Key 2 Name];
                SourceExpr=ReportTableKey2Text;
                Importance=Additional;
                OnValidate=BEGIN
                             QuickReportLookups.ValidateQuickReportFieldName(Rec.Code, Rec."Report Table Key 2 ID", ReportTableKey2Text, FALSE);
                             Rec.VALIDATE("Report Table Key 2 ID");
                             UpdateGlobals();
                           END;

                OnLookup=BEGIN
                           IF (QuickReportLookups.QuickReportFieldLookup(Rec.Code, Rec."Report Table Key 2 ID")) THEN
                           BEGIN
                             Rec.VALIDATE("Report Table Key 2 ID");
                             UpdateGlobals();
                           END;
                         END;
                          }

    { 1000000050;4;Field  ;
                SourceExpr="Report Table Key 3 ID";
                Importance=Additional;
                Visible=FALSE }

    { 1000000049;4;Field  ;
                Name=ReportTableKey3Name;
                CaptionML=[ENU=Report Table Key 3 Name;
                           ENG=Report Table Key 3 Name];
                SourceExpr=ReportTableKey3Text;
                Importance=Additional;
                OnValidate=BEGIN
                             QuickReportLookups.ValidateQuickReportFieldName(Rec.Code, Rec."Report Table Key 3 ID", ReportTableKey3Text, FALSE);
                             Rec.VALIDATE("Report Table Key 3 ID");
                             UpdateGlobals();
                           END;

                OnLookup=BEGIN
                           IF (QuickReportLookups.QuickReportFieldLookup(Rec.Code, Rec."Report Table Key 3 ID")) THEN
                           BEGIN
                             Rec.VALIDATE("Report Table Key 3 ID");
                             UpdateGlobals();
                           END;
                         END;
                          }

    { 1000000047;2;Group  ;
                Name=UserGroup;
                CaptionML=[ENU=User;
                           ENG=User];
                Visible=AdvancedMode;
                GroupType=Group }

    { 1000000046;3;Field  ;
                SourceExpr="User ID";
                Importance=Additional;
                Editable=FALSE }

    { 1000000045;3;Field  ;
                SourceExpr="User Report Sequence";
                Importance=Additional;
                Editable=FALSE }

    { 1000000044;3;Field  ;
                SourceExpr="Temporary";
                Importance=Additional;
                Editable=FALSE }

    { 1000000016;1;Part   ;
                Name=FieldsPart;
                CaptionML=[ENU=Fields;
                           ENG=Fields];
                SubPageLink=Quick Report Code=FIELD(Code);
                PagePartID=Page9063007;
                PartType=Page }

    { 1000000015;1;Group  ;
                Name=MiscellaneousGroup;
                CaptionML=[ENU=Miscellaneous;
                           ENG=Miscellaneous];
                GroupType=Group }

    { 1000000048;2;Group  ;
                Name=PerformanceGroup;
                CaptionML=[ENU=Performance;
                           ENG=Performance];
                Visible=AdvancedMode;
                GroupType=Group }

    { 1000000041;3;Field  ;
                SourceExpr="Performance Statistics" }

    { 1000000039;3;Field  ;
                SourceExpr="Last Execution Records";
                Editable=FALSE }

    { 1000000040;3;Field  ;
                SourceExpr="Last Execution Time [s]";
                Editable=FALSE }

    { 1000000043;3;Field  ;
                SourceExpr="Last Grouping Time [s]";
                Editable=FALSE }

    { 1000000042;2;Group  ;
                Name=CreatedModifiedGroup;
                CaptionML=[ENU=Created / Modified;
                           ENG=Created / Modified];
                GroupType=Group }

    { 1000000011;3;Field  ;
                SourceExpr="Created By";
                Importance=Additional;
                Editable=FALSE }

    { 1000000012;3;Field  ;
                SourceExpr="Created Date Time";
                Importance=Additional;
                Editable=FALSE }

    { 1000000013;3;Field  ;
                SourceExpr="Modified By";
                Importance=Additional;
                Editable=FALSE }

    { 1000000014;3;Field  ;
                SourceExpr="Modified Date Time";
                Importance=Additional;
                Editable=FALSE }

    { 1000000059;3;Field  ;
                SourceExpr="Timestamp Date Time";
                Importance=Additional;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      EnhancedPermissionsMgt@1000000021 : Codeunit 9062277;
      QuickReportExport@1000000020 : Codeunit 9062549;
      QuickReportInteraction@1000000010 : Codeunit 9062543;
      QuickReportLookups@1000000011 : Codeunit 9062536;
      QuickReportToolkit@1000000000 : Codeunit 9062538;
      ObjectFieldToolkit@1000000003 : Codeunit 9062343;
      TableText@1000000001 : Text;
      TableEnabled@1000000004 : Boolean INDATASET;
      ReportTableText@1000000006 : Text;
      ReportTableKey1Text@1000000012 : Text;
      ReportTableKey2Text@1000000014 : Text;
      ReportTableKey3Text@1000000013 : Text;
      ReportTableKeyEnabled@1000000015 : Boolean INDATASET;
      NavQueryText@1000000002 : Text;
      NavQueryEnabled@1000000005 : Boolean INDATASET;
      SqlQueryEnabled@1000000008 : Boolean INDATASET;
      EnhancedFieldsEnabled@1000000009 : Boolean INDATASET;
      DeleteRecordOnClose@1000000016 : Boolean;
      TimestampDateTime@1000000017 : DateTime;
      TimestampDateTimeRetrieved@1000000018 : Boolean;
      PageEditable@1000000019 : Boolean INDATASET;
      AdvancedMode@1000000007 : Boolean INDATASET;

    PROCEDURE SetDeleteRecordOnClose@1000000001(pDeleteRecordOnClose@1000000000 : Boolean);
    BEGIN
      //DOC NA2015.7 - Setting "Delete Record on Close" flag
      //  -> pDeleteRecordOnClose: The flag

      DeleteRecordOnClose := pDeleteRecordOnClose;
    END;

    LOCAL PROCEDURE UpdateGlobals@1000000000();
    BEGIN
      //DOC NA2015.7 - Updating the page globals

      Rec.CALCFIELDS("Table Name", "NAV Query Name", "Report Table Name", "Report Table Key 1 Name", "Report Table Key 2 Name",
        "Report Table Key 3 Name");

      TableText := Rec."Table Name";
      NavQueryText := Rec."NAV Query Name";
      ReportTableText := Rec."Report Table Name";
      ReportTableKey1Text := Rec."Report Table Key 1 Name";
      ReportTableKey2Text := Rec."Report Table Key 2 Name";
      ReportTableKey3Text := Rec."Report Table Key 3 Name";

      TableEnabled := (Rec."Data From" = Rec."Data From"::Table);
      NavQueryEnabled := (Rec."Data From" = Rec."Data From"::"NAV Query");
      SqlQueryEnabled := (Rec."Data From" = Rec."Data From"::"SQL Query");

      EnhancedFieldsEnabled := ((Rec."Data From" = Rec."Data From"::Table) AND (PageEditable));

      ReportTableKeyEnabled := (Rec."Report Table ID" <> 0);
    END;

    LOCAL PROCEDURE UpdateTimestampDateTime@1000000002(pForce@1000000000 : Boolean);
    VAR
      lUpdate@1000000001 : Boolean;
    BEGIN
      //DOC NA2015.7 - Updating timestamp datetime
      //  -> pForce: Force flag

      IF (pForce) THEN
        lUpdate := TRUE
      ELSE
        lUpdate := ( NOT (TimestampDateTimeRetrieved));

      IF (lUpdate) THEN
      BEGIN
        TimestampDateTime := Rec."Timestamp Date Time";
        TimestampDateTimeRetrieved := TRUE;
      END;
    END;

    LOCAL PROCEDURE SwitchMode@1000000006(pAdvancedMode@1000000000 : Boolean);
    BEGIN
      //DOC NA2016.14 - Switching mode (between simple / advanced)
      //  -> pAdvancedMode: Advanced mode flag

      AdvancedMode := pAdvancedMode;
      CurrPage.FieldsPart.PAGE.SetAdvancedMode(AdvancedMode);
      CurrPage.UPDATE(FALSE);
    END;

    BEGIN
    {
      //DOC NA2015.7  JH 15/05/2015 - Created
      //DOC NA2016.7  JH 28/08/2015 - Upgraded to 2016
      //DOC NA2016.12 JH 08/12/2015 - Deleting old temporary quick reports on open
      //DOC NA2016.12 JH 19/01/2016 - "Open" changed to "Edit"
      //DOC NA2016.12 JH 28/01/2016 - Visual amendments
      //DOC NA2016.12 JH 05/02/2016 - Print + export added, advanced mode added
      //DOC NA2016.14 JH 02/03/2016 - Exports redirected to export codeunit
      //DOC NA2016.15 AZ 12/04/2016 - ShowEnhancedView function added
      //DOC NA2016.15 AZ 14/04/2016 - Record not found issue in OnClosePage fixed
      //DOC NA2016.15 JH 05/05/2016 - Enhanced permissions
    }
    END.
  }
}

