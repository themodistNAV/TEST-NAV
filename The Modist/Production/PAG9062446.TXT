OBJECT Page 9062446 Panel Selection Card
{
  OBJECT-PROPERTIES
  {
    Date=27/01/16;
    Time=[ 2:08:11 PM];
    Version List=NA2016.12;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Panel Selection List;
               ENG=Panel Selection List];
    SourceTable=Table9062371;
    DataCaptionExpr=PageCaption;
    PopulateAllFields=Yes;
    PageType=Card;
    OnOpenPage=BEGIN
                 DetectFilter();
                 UpdateFilter();
                 UpdateGlobals();
               END;

    OnAfterGetRecord=BEGIN
                       UpdateGlobals();
                     END;

    ActionList=ACTIONS
    {
      { 1000000002;  ;ActionContainer;
                      Name=ActionItemsContainer;
                      CaptionML=[ENU=Action Items;
                                 ENG=Action Items];
                      ActionContainerType=ActionItems }
      { 1000000021;1 ;Action    ;
                      Name=CopyFromUserAction;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Copy From User;
                                 ENG=Copy From User];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=User;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IF (PanelSelectionManagement.CopyFromUser(Rec)) THEN
                                   CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 9062235 ;1   ;Separator  }
      { 9062236 ;1   ;Action    ;
                      Name=AllPanelSelectionsAction;
                      CaptionML=[ENU=All Panel Selections;
                                 ENG=All Panel Selections];
                      RunObject=Page 9062460;
                      Promoted=Yes;
                      Visible=MyPanelSelectionFilter;
                      PromotedIsBig=Yes;
                      Image=AbsenceCategory;
                      PromotedCategory=Process }
    }
  }
  CONTROLS
  {
    { 1000000000;0;Container;
                ContainerType=ContentArea }

    { 1000000019;1;Group  ;
                Name=FilterGroup;
                CaptionML=[ENU=Filter;
                           ENG=Filter];
                GroupType=Group }

    { 9062233;2;Field     ;
                SourceExpr="Page ID";
                Importance=Additional;
                Enabled=FALSE }

    { 9062234;2;Field     ;
                SourceExpr="Page Name";
                Importance=Promoted }

    { 9062230;2;Field     ;
                SourceExpr="User ID";
                Importance=Additional;
                Editable=FALSE }

    { 9062232;2;Field     ;
                SourceExpr="User Name";
                Importance=Promoted }

    { 1000000001;1;Group  ;
                Name=SetupGroup;
                CaptionML=[ENU=Setup;
                           ENG=Setup];
                Editable=Enabled;
                GroupType=Group }

    { 1000000005;2;Field  ;
                SourceExpr="Panel Code 1";
                Enabled=Enabled }

    { 1000000006;2;Field  ;
                SourceExpr="Panel Code 2";
                Enabled=Enabled }

    { 1000000007;2;Field  ;
                SourceExpr="Panel Code 3";
                Enabled=Enabled }

    { 1000000008;2;Field  ;
                SourceExpr="Panel Code 4";
                Enabled=Enabled }

    { 1000000009;2;Field  ;
                SourceExpr="Panel Code 5";
                Enabled=Enabled }

    { 1000000010;2;Field  ;
                SourceExpr="Panel Code 6";
                Enabled=Enabled }

    { 1000000011;2;Field  ;
                SourceExpr="Panel Code 7";
                Enabled=Enabled }

    { 1000000012;2;Field  ;
                SourceExpr="Panel Code 8";
                Enabled=Enabled }

    { 1000000013;2;Field  ;
                SourceExpr="Panel Code 9";
                Enabled=Enabled }

    { 1000000014;2;Field  ;
                SourceExpr="Panel Code 10";
                Enabled=Enabled }

    { 9062231;1;Group     ;
                Name=MiscellaneousGroup;
                CaptionML=[ENU=Miscellaneous;
                           ENG=Miscellaneous];
                GroupType=Group }

    { 1000000015;2;Field  ;
                SourceExpr="Created By";
                Importance=Promoted;
                Editable=FALSE }

    { 1000000016;2;Field  ;
                SourceExpr="Created Date Time";
                Importance=Promoted;
                Editable=FALSE }

    { 1000000017;2;Field  ;
                SourceExpr="Modified By";
                Importance=Promoted;
                Editable=FALSE }

    { 1000000018;2;Field  ;
                SourceExpr="Modified Date Time";
                Importance=Promoted;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      PanelSelectionManagement@1000000002 : Codeunit 9062345;
      PageIdFilter@1000000000 : Integer;
      UserIdFilter@9062232 : Code[50];
      MyPanelSelectionFilter@9062231 : Boolean INDATASET;
      Enabled@1000000003 : Boolean INDATASET;
      PageCaption@9062230 : Text;

    LOCAL PROCEDURE DetectFilter@9062231();
    VAR
      lFilterGroup@9062230 : Integer;
    BEGIN
      //DOC NA2016.10 - Detecting filter

      PageIdFilter := 0;
      UserIdFilter := '';
      MyPanelSelectionFilter := FALSE;

      FOR lFilterGroup := 5 DOWNTO 0 DO
      BEGIN
        Rec.FILTERGROUP(lFilterGroup);
        IF (Rec.GETFILTER("Page ID") <> '') THEN
          PageIdFilter := Rec.GETRANGEMIN("Page ID");
        IF (Rec.GETFILTER("User ID") <> '') THEN
          UserIdFilter := Rec.GETRANGEMIN("User ID");
        IF (Rec.GETFILTER("My Panel Selection") <> '') THEN
          MyPanelSelectionFilter := Rec.GETRANGEMIN("My Panel Selection");
      END;
      Rec.FILTERGROUP(0);

      IF (PageIdFilter = 0) THEN
        PageIdFilter := PanelSelectionManagement.DefaultPage();
      IF (MyPanelSelectionFilter) THEN
        UserIdFilter := USERID();
    END;

    LOCAL PROCEDURE UpdateFilter@1000000001();
    BEGIN
      //DOC NA2015.1 - Updating filter

      Rec.FILTERGROUP(2);
      IF (PageIdFilter <> 0) THEN
        Rec.SETRANGE("Page ID", PageIdFilter)
      ELSE
        Rec.SETFILTER("Page ID", '-1&1');
      IF (UserIdFilter <> '') THEN
        Rec.SETRANGE("User ID", UserIdFilter);
      Rec.FILTERGROUP(0);

      Enabled := (PageIdFilter <> 0);

      IF (Enabled) THEN
        IF (Rec.ISEMPTY()) THEN
        BEGIN
          Rec.INIT();
          Rec.VALIDATE("Page ID", PageIdFilter);
          Rec.VALIDATE("User ID", UserIdFilter);
          Rec.INSERT(TRUE);
        END;

      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE UpdateGlobals@9062230();
    BEGIN
      //DOC NA2016.10 - Updating page globals

      PageCaption := Rec.GetPageCaption();
    END;

    BEGIN
    {
      //DOC NA2015.1  JH 22/05/2014 - Created
      //DOC NA2015.4  JH 04/01/2015 - Previous / next page added
      //DOC NA2015.4  JH 10/02/2015 - Migration added
      //DOC NA2016.4  JH 28/08/2015 - Upgraded to 2016
      //DOC NA2016.10 JH 29/10/2015 - Card added
      //DOC NA2016.12 JH 27/12/2015 - Modified, new version
    }
    END.
  }
}

