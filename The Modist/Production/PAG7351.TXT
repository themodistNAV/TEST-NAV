OBJECT Page 7351 Movement Worksheet
{
  OBJECT-PROPERTIES
  {
    Date=09/09/14;
    Time=12:00:00 PM;
    Version List=NAVW18.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Movement Worksheet;
               ENG=Movement Worksheet];
    SaveValues=Yes;
    SourceTable=Table7326;
    DelayedInsert=Yes;
    SourceTableView=SORTING(Worksheet Template Name,Name,Location Code,Sorting Sequence No.);
    DataCaptionFields=Name;
    PageType=Worksheet;
    RefreshOnActivate=Yes;
    OnOpenPage=VAR
                 WhseWkshSelected@1000 : Boolean;
               BEGIN
                 OpenedFromBatch := (Name <> '') AND ("Worksheet Template Name" = '');
                 IF OpenedFromBatch THEN BEGIN
                   CurrentWkshName := Name;
                   CurrentLocationCode := "Location Code";
                   OpenWhseWksh(Rec,CurrentWkshTemplateName,CurrentWkshName,CurrentLocationCode);
                   EXIT;
                 END;
                 TemplateSelection(PAGE::"Movement Worksheet",2,Rec,WhseWkshSelected);
                 IF NOT WhseWkshSelected THEN
                   ERROR('');
                 OpenWhseWksh(Rec,CurrentWkshTemplateName,CurrentWkshName,CurrentLocationCode);
               END;

    OnAfterGetRecord=BEGIN
                       IF NOT ItemUOM.GET("Item No.","From Unit of Measure Code") THEN
                         ItemUOM.INIT;
                     END;

    OnNewRecord=BEGIN
                  SetUpNewLine(
                    CurrentWkshTemplateName,CurrentWkshName,
                    CurrentLocationCode,CurrentSortingMethod,xRec."Line No.");
                END;

    OnInsertRecord=BEGIN
                     "Sorting Sequence No." := GetSortSeqNo(CurrentSortingMethod);
                   END;

    OnModifyRecord=BEGIN
                     "Sorting Sequence No." := GetSortSeqNo(CurrentSortingMethod);
                   END;

    OnDeleteRecord=BEGIN
                     ItemDescription := '';
                   END;

    OnAfterGetCurrRecord=BEGIN
                           GetItem("Item No.",ItemDescription);
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 41      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Line;
                                 ENG=&Line];
                      Image=Line }
      { 42      ;2   ;Action    ;
                      Name=ItemTrackingLines;
                      ShortCutKey=Shift+Ctrl+I;
                      CaptionML=[ENU=Item &Tracking Lines;
                                 ENG=Item &Tracking Lines];
                      Image=ItemTrackingLines;
                      OnAction=BEGIN
                                 OpenItemTrackingLines;
                               END;
                                }
      { 29      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Item;
                                 ENG=&Item];
                      Image=Item }
      { 30      ;2   ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Card;
                                 ENG=Card];
                      RunObject=Page 30;
                      RunPageLink=No.=FIELD(Item No.);
                      Image=EditLines }
      { 4       ;2   ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=[ENU=Warehouse Entries;
                                 ENG=Warehouse Entries];
                      RunObject=Page 7318;
                      RunPageView=SORTING(Item No.,Location Code,Variant Code);
                      RunPageLink=Item No.=FIELD(Item No.),
                                  Variant Code=FIELD(Variant Code),
                                  Location Code=FIELD(Location Code);
                      Promoted=Yes;
                      Image=BinLedger;
                      PromotedCategory=Process }
      { 31      ;2   ;Action    ;
                      CaptionML=[ENU=Ledger E&ntries;
                                 ENG=Ledger E&ntries];
                      RunObject=Page 38;
                      RunPageView=SORTING(Item No.);
                      RunPageLink=Item No.=FIELD(Item No.),
                                  Variant Code=FIELD(Variant Code),
                                  Location Code=FIELD(Location Code);
                      Promoted=Yes;
                      Image=ItemLedger;
                      PromotedCategory=Process }
      { 44      ;2   ;Action    ;
                      CaptionML=[ENU=Bin Contents;
                                 ENG=Bin Contents];
                      RunObject=Page 7305;
                      RunPageView=SORTING(Location Code,Item No.,Variant Code);
                      RunPageLink=Location Code=FIELD(Location Code),
                                  Item No.=FIELD(Item No.),
                                  Variant Code=FIELD(Variant Code);
                      Promoted=Yes;
                      Image=BinContent;
                      PromotedCategory=Process }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 32      ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 ENG=F&unctions];
                      Image=Action }
      { 5       ;2   ;Action    ;
                      CaptionML=[ENU=Autofill Qty. to Handle;
                                 ENG=Autofill Qty. to Handle];
                      Promoted=Yes;
                      Image=AutofillQtyToHandle;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 WhseWkshLine@1000 : Record 7326;
                               BEGIN
                                 WhseWkshLine.COPY(Rec);
                                 AutofillQtyToHandle(WhseWkshLine);
                               END;
                                }
      { 6       ;2   ;Action    ;
                      CaptionML=[ENU=Delete Qty. to Handle;
                                 ENG=Delete Qty. to Handle];
                      Promoted=Yes;
                      Image=DeleteQtyToHandle;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 WhseWkshLine@1000 : Record 7326;
                               BEGIN
                                 WhseWkshLine.COPY(Rec);
                                 DeleteQtyToHandle(WhseWkshLine);
                               END;
                                }
      { 54      ;2   ;Separator  }
      { 2       ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Calculate Bin &Replenishment;
                                 ENG=Calculate Bin &Replenishment];
                      Promoted=Yes;
                      Image=CalculateBinReplenishment;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 Location@1001 : Record 14;
                                 BinContent@1003 : Record 7302;
                                 ReplenishBinContent@1000 : Report 7300;
                               BEGIN
                                 Location.GET("Location Code");
                                 ReplenishBinContent.InitializeRequest(
                                   "Worksheet Template Name",Name,"Location Code",
                                   Location."Allow Breakbulk",FALSE,FALSE);

                                 BinContent.SETRANGE("Location Code",Location.Code);
                                 ReplenishBinContent.SETTABLEVIEW(BinContent);
                                 ReplenishBinContent.RUN;
                                 CLEAR(ReplenishBinContent);
                               END;
                                }
      { 27      ;2   ;Action    ;
                      AccessByPermission=TableData 7302=R;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Get Bin Content;
                                 ENG=Get Bin Content];
                      Promoted=Yes;
                      Image=GetBinContent;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 GetBinContent@1002 : Report 7391;
                                 BinContent@1001 : Record 7302;
                                 DummyRec@1000 : Record 7331;
                               BEGIN
                                 BinContent.SETRANGE("Location Code","Location Code");
                                 GetBinContent.SETTABLEVIEW(BinContent);
                                 GetBinContent.InitializeReport(Rec,DummyRec,0);
                                 GetBinContent.RUN;
                               END;
                                }
      { 3       ;2   ;Separator  }
      { 55      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Create Movement;
                                 ENG=Create Movement];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=CreateMovement;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 WhseWkshLine@1002 : Record 7326;
                               BEGIN
                                 WhseWkshLine.SETFILTER(Quantity,'>0');
                                 WhseWkshLine.COPYFILTERS(Rec);
                                 IF WhseWkshLine.FINDFIRST THEN
                                   MovementCreate(WhseWkshLine)
                                 ELSE
                                   ERROR(Text001);

                                 WhseWkshLine.RESET;
                                 COPYFILTERS(WhseWkshLine);
                                 FILTERGROUP(2);
                                 SETRANGE("Worksheet Template Name","Worksheet Template Name");
                                 SETRANGE(Name,Name);
                                 SETRANGE("Location Code",CurrentLocationCode);
                                 FILTERGROUP(0);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 25  ;1   ;Field     ;
                Lookup=Yes;
                CaptionML=[ENU=Name;
                           ENG=Name];
                SourceExpr=CurrentWkshName;
                OnValidate=BEGIN
                             CheckWhseWkshName(CurrentWkshName,CurrentLocationCode,Rec);
                             CurrentWkshNameOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           CurrPage.SAVERECORD;
                           LookupWhseWkshName(Rec,CurrentWkshName,CurrentLocationCode);
                           CurrPage.UPDATE(FALSE);
                         END;
                          }

    { 9   ;1   ;Field     ;
                CaptionML=[ENU=Location Code;
                           ENG=Location Code];
                SourceExpr=CurrentLocationCode;
                Editable=FALSE }

    { 56  ;1   ;Field     ;
                CaptionML=[ENU=Sorting Method;
                           ENG=Sorting Method];
                OptionCaptionML=[ENU=" ,Item,,To Bin Code,Due Date";
                                 ENG=" ,Item,,To Bin Code,Due Date"];
                SourceExpr=CurrentSortingMethod;
                OnValidate=BEGIN
                             CurrentSortingMethodOnAfterVal;
                           END;
                            }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 39  ;2   ;Field     ;
                SourceExpr="Item No.";
                OnValidate=BEGIN
                             GetItem("Item No.",ItemDescription);
                             ItemNoOnAfterValidate;
                           END;
                            }

    { 63  ;2   ;Field     ;
                SourceExpr="Variant Code";
                Visible=FALSE }

    { 10  ;2   ;Field     ;
                SourceExpr=Description }

    { 16  ;2   ;Field     ;
                SourceExpr="From Zone Code" }

    { 14  ;2   ;Field     ;
                SourceExpr="From Bin Code" }

    { 7   ;2   ;Field     ;
                SourceExpr="To Zone Code" }

    { 35  ;2   ;Field     ;
                SourceExpr="To Bin Code";
                OnValidate=BEGIN
                             ToBinCodeOnAfterValidate;
                           END;
                            }

    { 12  ;2   ;Field     ;
                SourceExpr=Quantity;
                OnValidate=BEGIN
                             QuantityOnAfterValidate;
                           END;
                            }

    { 47  ;2   ;Field     ;
                SourceExpr="Qty. (Base)";
                Visible=FALSE }

    { 48  ;2   ;Field     ;
                SourceExpr="Qty. Outstanding" }

    { 28  ;2   ;Field     ;
                SourceExpr="Qty. Outstanding (Base)";
                Visible=FALSE }

    { 18  ;2   ;Field     ;
                SourceExpr="Qty. to Handle";
                OnValidate=BEGIN
                             QtytoHandleOnAfterValidate;
                           END;
                            }

    { 51  ;2   ;Field     ;
                SourceExpr="Qty. to Handle (Base)";
                Visible=FALSE }

    { 53  ;2   ;Field     ;
                SourceExpr="Qty. Handled" }

    { 59  ;2   ;Field     ;
                SourceExpr="Qty. Handled (Base)";
                Visible=FALSE }

    { 33  ;2   ;Field     ;
                SourceExpr="Due Date";
                OnValidate=BEGIN
                             DueDateOnAfterValidate;
                           END;
                            }

    { 67  ;2   ;Field     ;
                SourceExpr="Unit of Measure Code" }

    { 20  ;2   ;Field     ;
                CaptionML=[ENU=Available Qty. to Move;
                           ENG=Available Qty. to Move];
                DecimalPlaces=0:5;
                SourceExpr=ROUND(CheckAvailQtytoMove / ItemUOM."Qty. per Unit of Measure",0.00001);
                Editable=FALSE }

    { 22  ;1   ;Group      }

    { 1900669001;2;Group  ;
                GroupType=FixedLayout }

    { 1901652601;3;Group  ;
                CaptionML=[ENU=Item Description;
                           ENG=Item Description] }

    { 23  ;4   ;Field     ;
                SourceExpr=ItemDescription;
                Editable=FALSE }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 8   ;1   ;Part      ;
                SubPageLink=Item No.=FIELD(Item No.),
                            Variant Code=FIELD(Variant Code),
                            Location Code=FIELD(Location Code);
                PagePartID=Page9126;
                Visible=FALSE;
                PartType=Page }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      ItemUOM@1007 : Record 5404;
      CurrentWkshTemplateName@1005 : Code[10];
      CurrentWkshName@1006 : Code[10];
      CurrentLocationCode@1003 : Code[10];
      CurrentSortingMethod@1000 : ' ,Item,,Shelf/Bin No.,Due Date';
      ItemDescription@1004 : Text[50];
      Text001@1002 : TextConst 'ENU=There is nothing to handle.;ENG=There is nothing to handle.';
      OpenedFromBatch@1001 : Boolean;

    LOCAL PROCEDURE ItemNoOnAfterValidate@19061248();
    BEGIN
      IF CurrentSortingMethod = CurrentSortingMethod::Item THEN
        CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ToBinCodeOnAfterValidate@19037373();
    BEGIN
      IF CurrentSortingMethod = CurrentSortingMethod::"Shelf/Bin No." THEN
        CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE QuantityOnAfterValidate@19032465();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE QtytoHandleOnAfterValidate@19067087();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE DueDateOnAfterValidate@19011747();
    BEGIN
      IF CurrentSortingMethod = CurrentSortingMethod::"Due Date" THEN
        CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE CurrentWkshNameOnAfterValidate@19009494();
    BEGIN
      CurrPage.SAVERECORD;
      SetWhseWkshName(CurrentWkshName,CurrentLocationCode,Rec);
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE CurrentSortingMethodOnAfterVal@19078525();
    BEGIN
      SortWhseWkshLines(
        CurrentWkshTemplateName,CurrentWkshName,
        CurrentLocationCode,CurrentSortingMethod);
      CurrPage.UPDATE(FALSE);
      SETCURRENTKEY("Worksheet Template Name",Name,"Location Code","Sorting Sequence No.");
    END;

    BEGIN
    END.
  }
}

