OBJECT Page 9062401 Planning Board Card
{
  OBJECT-PROPERTIES
  {
    Date=26/07/16;
    Time=12:37:12 PM;
    Version List=NA2016.16.1;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Planning Board Card;
               ENG=Planning Board Card];
    SourceTable=Table9062337;
    PageType=Card;
    PromotedActionCategoriesML=[ENU=New,Process,Reports,Navigate;
                                ENG=New,Process,Reports,Navigate];
    OnOpenPage=BEGIN
                 EnhancedPermissionsMgt.ApplyPlanningBoardPermissionFilter(Rec, USERID());
                 UpdateGlobals();
               END;

    OnAfterGetRecord=BEGIN
                       UpdateGlobals();
                     END;

    OnNewRecord=BEGIN
                  Rec.InitialiseNewRecord();
                  UpdateGlobals();
                END;

    OnInsertRecord=BEGIN
                     UpdateGlobals();
                   END;

    OnAfterGetCurrRecord=BEGIN
                           UpdateGlobals();
                         END;

    ActionList=ACTIONS
    {
      { 9062251 ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1000000025;1 ;Action    ;
                      Name=ShowAction;
                      CaptionML=[ENU=Show;
                                 ENG=Show];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Planning;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 Rec.Show();
                               END;
                                }
      { 1000000018;1 ;Separator  }
      { 1000000019;1 ;Action    ;
                      Name=ReleaseAction;
                      CaptionML=[ENU=Release;
                                 ENG=Release];
                      Promoted=Yes;
                      Enabled=Editable;
                      Image=ReleaseDoc;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IF (ReleasePlanningBoard.Release(Rec)) THEN
                                   CurrPage.UPDATE(FALSE);
                                 UpdateGlobals();
                               END;
                                }
      { 1000000020;1 ;Action    ;
                      Name=ReopenAction;
                      CaptionML=[ENU=Reopen;
                                 ENG=Reopen];
                      Promoted=Yes;
                      Enabled=( NOT (Editable));
                      Image=ReOpen;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IF (ReleasePlanningBoard.Reopen(Rec)) THEN
                                   CurrPage.UPDATE(FALSE);
                                 UpdateGlobals();
                               END;
                                }
      { 1000000033;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1000000035;1 ;Action    ;
                      Name=ResourceTableAction;
                      CaptionML=[ENU=Resource Table;
                                 ENG=Resource Table];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Resource;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 Rec.EditResourceTable();
                               END;
                                }
      { 1000000034;1 ;Action    ;
                      Name=EntryTableAction;
                      CaptionML=[ENU=Entry Table;
                                 ENG=Entry Table];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=EntriesList;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 Rec.EditEntryTable();
                               END;
                                }
      { 1000000023;1 ;Action    ;
                      Name=EventsAction;
                      CaptionML=[ENU=Events;
                                 ENG=Events];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Action;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 Rec.EditEvents();
                               END;
                                }
      { 1000000012;1 ;Action    ;
                      Name=ThemeAction;
                      CaptionML=[ENU=Theme;
                                 ENG=Theme];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=SuggestTables;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 Rec.EditTheme();
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 9062229; ;Container ;
                Name=ContentAreaContainer;
                CaptionML=[ENU=Content Area;
                           ENG=Content Area];
                ContainerType=ContentArea }

    { 9062230;1;Group     ;
                Name=GeneralGroup;
                CaptionML=[ENU=General;
                           ENG=General];
                Editable=Editable;
                GroupType=Group }

    { 9062231;2;Field     ;
                SourceExpr=Code;
                Importance=Promoted }

    { 9062232;2;Field     ;
                SourceExpr=Name;
                Importance=Promoted }

    { 9062262;2;Field     ;
                SourceExpr=Description;
                Importance=Additional;
                MultiLine=Yes }

    { 1000000046;2;Field  ;
                SourceExpr=Status;
                Importance=Additional;
                Editable=FALSE }

    { 9062261;2;Group     ;
                Name=PeriodFormulasGroup;
                CaptionML=[ENU=Period Formulas;
                           ENG=Period Formulas];
                GroupType=Group }

    { 9062233;3;Field     ;
                SourceExpr="Current Date Formula";
                Importance=Additional }

    { 9062234;3;Field     ;
                SourceExpr="Start Date Formula";
                Importance=Additional }

    { 1000000021;3;Field  ;
                SourceExpr="End Date Formula";
                Importance=Additional }

    { 9062258;3;Field     ;
                SourceExpr="Maximum Period Formula";
                Importance=Additional;
                Visible=FALSE }

    { 9062235;2;Group     ;
                Name=PreviousNextPeriod;
                CaptionML=[ENU=Previous / Next Period;
                           ENG=Previous / Next Period];
                GroupType=Group }

    { 9062253;3;Field     ;
                SourceExpr="Previous / Next Week";
                Importance=Additional }

    { 9062255;3;Field     ;
                SourceExpr="Previous / Next Month";
                Importance=Additional }

    { 9062256;3;Field     ;
                SourceExpr="Previous / Next Quarter";
                Importance=Additional }

    { 9062257;3;Field     ;
                SourceExpr="Previous / Next Year";
                Importance=Additional }

    { 1000000051;2;Group  ;
                Name=TimesGroup;
                CaptionML=[ENU=Times;
                           ENG=Times];
                GroupType=Group }

    { 1000000052;3;Field  ;
                SourceExpr="Start Time";
                Importance=Additional }

    { 1000000053;3;Field  ;
                SourceExpr="End Time";
                Importance=Additional }

    { 1000000017;2;Group  ;
                Name=TablesGroup;
                CaptionML=[ENU=Tables;
                           ENG=Tables];
                GroupType=Group }

    { 1000000047;3;Field  ;
                Name=ResourceTableMainField;
                CaptionML=[ENU=Resource Table;
                           ENG=Resource Table];
                SourceExpr=TableText[1];
                Importance=Promoted;
                OnValidate=BEGIN
                             ValidateTable(PlanningBoardTable."Table Type"::Resource);
                           END;

                OnLookup=BEGIN
                           TableLookup(PlanningBoardTable."Table Type"::Resource);
                         END;
                          }

    { 1000000048;3;Field  ;
                Name=EntryTableMainField;
                CaptionML=[ENU=Entry Table;
                           ENG=Entry Table];
                SourceExpr=TableText[2];
                Importance=Promoted;
                OnValidate=BEGIN
                             ValidateTable(PlanningBoardTable."Table Type"::Entry);
                           END;

                OnLookup=BEGIN
                           TableLookup(PlanningBoardTable."Table Type"::Entry);
                         END;
                          }

    { 1000000049;3;Field  ;
                Name=DateFieldField;
                CaptionML=[ENU=Date Field;
                           ENG=Date Field];
                SourceExpr=StartDateFieldText;
                OnValidate=BEGIN
                             InitialiseEntryTableModification();
                             IF (PlanningBoardTable.ValidateStartDateFieldText(StartDateFieldText)) THEN
                               FinaliseTableModification(FALSE, TRUE, FALSE);
                           END;

                OnLookup=BEGIN
                           InitialiseEntryTableModification();
                           IF (PlanningBoardTable.StartDateFieldLookup(Editable)) THEN
                             FinaliseTableModification(FALSE, TRUE, FALSE);
                         END;
                          }

    { 9062236;1;Group     ;
                Name=ResourceTableGroup;
                CaptionML=[ENU=Resource Table;
                           ENG=Resource Table];
                Editable=Editable;
                GroupType=Group }

    { 1000000042;2;Group  ;
                Name=ResourceTableTableGroup;
                CaptionML=[ENU=Table;
                           ENG=Table];
                GroupType=Group }

    { 1000000000;3;Field  ;
                Name=EditResourceTableField;
                CaptionML=[ENU=Edit Resource Table;
                           ENG=Edit Resource Table];
                SourceExpr=EditResourceTableText;
                Editable=FALSE;
                StyleExpr=LinkStrongStyle;
                OnDrillDown=BEGIN
                              Rec.EditResourceTable();
                              UpdateGlobals();
                            END;

                ShowCaption=No }

    { 9062239;3;Field     ;
                Name=ResourceTableField;
                CaptionML=[ENU=Table;
                           ENG=Table];
                SourceExpr=TableText[1];
                Importance=Promoted;
                OnValidate=BEGIN
                             ValidateTable(PlanningBoardTable."Table Type"::Resource);
                           END;

                OnLookup=BEGIN
                           TableLookup(PlanningBoardTable."Table Type"::Resource);
                         END;
                          }

    { 9062240;3;Field     ;
                Name=ResourceTableFilterField;
                CaptionML=[ENU=Table Filter;
                           ENG=Table Filter];
                SourceExpr=TableFilterText[1];
                Importance=Promoted;
                Editable=FALSE;
                StyleExpr=LinkStandardStyle;
                OnDrillDown=BEGIN
                              EditTableFilter(PlanningBoardTable."Table Type"::Resource);
                            END;
                             }

    { 9062260;3;Field     ;
                Name=ResourceTableKeyField;
                CaptionML=[ENU=Table Key;
                           ENG=Table Key];
                SourceExpr=TableKeyText[1];
                Editable=FALSE;
                StyleExpr=LinkStandardStyle;
                OnDrillDown=BEGIN
                              TableKeyLookup(PlanningBoardTable."Table Type"::Resource);
                            END;
                             }

    { 1000000043;2;Group  ;
                Name=ResourceTableCaptionGroup;
                CaptionML=[ENU=Caption;
                           ENG=Caption];
                GroupType=Group }

    { 9062243;3;Field     ;
                Name=ResourceCaptionField;
                CaptionML=[ENU=Caption;
                           ENG=Caption];
                SourceExpr=CaptionText[1];
                OnValidate=BEGIN
                             ValidateCaption(PlanningBoardTable."Table Type"::Resource);
                           END;

                OnLookup=BEGIN
                           CaptionLookup(PlanningBoardTable."Table Type"::Resource, FALSE);
                         END;
                          }

    { 9062249;3;Field     ;
                Name=EditResourceCaptionFormulaField;
                CaptionML=[ENU=Edit Caption Formula;
                           ENG=Edit Caption Formula];
                SourceExpr=EditCaptionFormulaText;
                Editable=FALSE;
                StyleExpr=LinkStandardStyle;
                OnDrillDown=BEGIN
                              CaptionLookup(PlanningBoardTable."Table Type"::Resource, TRUE);
                              CurrPage.UPDATE();
                            END;

                ShowCaption=No }

    { 9062237;1;Group     ;
                Name=EntryTableGroup;
                CaptionML=[ENU=Entry Table;
                           ENG=Entry Table];
                Editable=Editable;
                GroupType=Group }

    { 1000000044;2;Group  ;
                Name=EntryTableTableGroup;
                CaptionML=[ENU=Table;
                           ENG=Table];
                GroupType=Group }

    { 1000000001;3;Field  ;
                Name=EditEntryTableField;
                CaptionML=[ENU=Edit Entry Table;
                           ENG=Edit Entry Table];
                SourceExpr=EditEntryTableText;
                Editable=FALSE;
                StyleExpr=LinkStrongStyle;
                OnDrillDown=BEGIN
                              Rec.EditEntryTable();
                              UpdateGlobals();
                            END;

                ShowCaption=No }

    { 9062242;3;Field     ;
                Name=EntryTableField;
                CaptionML=[ENU=Table;
                           ENG=Table];
                SourceExpr=TableText[2];
                Importance=Promoted;
                OnValidate=BEGIN
                             ValidateTable(PlanningBoardTable."Table Type"::Entry);
                           END;

                OnLookup=BEGIN
                           TableLookup(PlanningBoardTable."Table Type"::Entry);
                         END;
                          }

    { 9062241;3;Field     ;
                Name=EntryTableFilter;
                CaptionML=[ENU=Table Filter;
                           ENG=Table Filter];
                SourceExpr=TableFilterText[2];
                Importance=Promoted;
                Editable=FALSE;
                StyleExpr=LinkStandardStyle;
                OnDrillDown=BEGIN
                              EditTableFilter(PlanningBoardTable."Table Type"::Entry);
                            END;
                             }

    { 9062263;3;Field     ;
                Name=EntryTableKeyField;
                CaptionML=[ENU=Table Key;
                           ENG=Table Key];
                SourceExpr=TableKeyText[2];
                Editable=FALSE;
                StyleExpr=LinkStandardStyle;
                OnDrillDown=BEGIN
                              TableKeyLookup(PlanningBoardTable."Table Type"::Entry);
                            END;
                             }

    { 1000000045;2;Group  ;
                Name=EntryTableCaptionGroup;
                CaptionML=[ENU=Caption;
                           ENG=Caption];
                GroupType=Group }

    { 9062245;3;Field     ;
                Name=EntryCaptionField;
                CaptionML=[ENU=Caption;
                           ENG=Caption];
                SourceExpr=CaptionText[2];
                OnValidate=BEGIN
                             ValidateCaption(PlanningBoardTable."Table Type"::Entry);
                           END;

                OnLookup=BEGIN
                           CaptionLookup(PlanningBoardTable."Table Type"::Entry, FALSE);
                         END;
                          }

    { 9062247;3;Field     ;
                Name=EditEntryCaptionFormulaField;
                CaptionML=[ENU=Edit Caption Formula;
                           ENG=Edit Caption Formula];
                SourceExpr=EditCaptionFormulaText;
                Editable=FALSE;
                StyleExpr=LinkStandardStyle;
                OnDrillDown=BEGIN
                              CurrPage.SAVERECORD();
                              CaptionLookup(PlanningBoardTable."Table Type"::Entry, TRUE);
                              CurrPage.UPDATE(FALSE);
                            END;

                ShowCaption=No }

    { 9062252;2;Group     ;
                Name=DatesAndTimesGroup;
                CaptionML=[ENU=Dates and Times;
                           ENG=Dates and Times];
                GroupType=Group }

    { 9062250;3;Field     ;
                Name=DateTimeFieldsField;
                CaptionML=[ENU=Date Time Fields;
                           ENG=Date Time Fields];
                OptionCaptionML=[ENU=" ,Dates,Dates and Times,DateTimes,DateTimes (Dates Only),Single Date,Single Date and Time,Single DateTime,Single DateTime (Date Only)";
                                 ENG=" ,Dates,Dates and Times,DateTimes,DateTimes (Dates Only),Single Date,Single Date and Time,Single DateTime,Single DateTime (Date Only)"];
                SourceExpr=DateTimeFields;
                OnValidate=BEGIN
                             CurrPage.SAVERECORD();
                             InitialiseEntryTableModification();
                             PlanningBoardTable.VALIDATE("Date Time Fields", DateTimeFields);
                             FinaliseTableModification(FALSE, TRUE, FALSE);
                             CurrPage.UPDATE(FALSE);
                           END;
                            }

    { 9062248;3;Field     ;
                Name=StartDateFieldField;
                CaptionML=[ENU=Start Date Field;
                           ENG=Start Date Field];
                SourceExpr=StartDateFieldText;
                Enabled=DateFieldsEnabled;
                OnValidate=BEGIN
                             InitialiseEntryTableModification();
                             IF (PlanningBoardTable.ValidateStartDateFieldText(StartDateFieldText)) THEN
                               FinaliseTableModification(FALSE, TRUE, FALSE);
                           END;

                OnLookup=BEGIN
                           InitialiseEntryTableModification();
                           IF (PlanningBoardTable.StartDateFieldLookup(Editable)) THEN
                             FinaliseTableModification(FALSE, TRUE, FALSE);
                         END;
                          }

    { 9062246;3;Field     ;
                Name=StartTimeFieldField;
                CaptionML=[ENU=Start Time Field;
                           ENG=Start Time Field];
                SourceExpr=StartTimeFieldText;
                Enabled=TimeFieldsEnabled;
                OnValidate=BEGIN
                             InitialiseEntryTableModification();
                             IF (PlanningBoardTable.ValidateStartTimeFieldText(StartTimeFieldText)) THEN
                               FinaliseTableModification(FALSE, TRUE, FALSE);
                           END;

                OnLookup=BEGIN
                           InitialiseEntryTableModification();
                           IF (PlanningBoardTable.StartTimeFieldLookup(Editable)) THEN
                             FinaliseTableModification(FALSE, TRUE, FALSE);
                         END;
                          }

    { 9062244;3;Field     ;
                Name=EndDateFieldField;
                CaptionML=[ENU=End Date Field;
                           ENG=End Date Field];
                SourceExpr=EndDateFieldText;
                Enabled=DateFieldsEnabled;
                OnValidate=BEGIN
                             InitialiseEntryTableModification();
                             IF (PlanningBoardTable.ValidateEndDateFieldText(EndDateFieldText)) THEN
                               FinaliseTableModification(FALSE, TRUE, FALSE);
                           END;

                OnLookup=BEGIN
                           InitialiseEntryTableModification();
                           IF (PlanningBoardTable.EndDateFieldLookup(Editable)) THEN
                             FinaliseTableModification(FALSE, TRUE, FALSE);
                         END;
                          }

    { 9062238;3;Field     ;
                Name=EndTimeFieldField;
                CaptionML=[ENU=End Time Field;
                           ENG=End Time Field];
                SourceExpr=EndTimeFieldText;
                Enabled=TimeFieldsEnabled;
                OnValidate=BEGIN
                             InitialiseEntryTableModification();
                             IF (PlanningBoardTable.ValidateEndTimeFieldText(EndTimeFieldText)) THEN
                               FinaliseTableModification(FALSE, TRUE, FALSE);
                           END;

                OnLookup=BEGIN
                           InitialiseEntryTableModification();
                           IF (PlanningBoardTable.EndTimeFieldLookup(Editable)) THEN
                             FinaliseTableModification(FALSE, TRUE, FALSE);
                         END;
                          }

    { 1000000002;1;Part   ;
                Name=TableLinkPart;
                CaptionML=[ENU=Table Link;
                           ENG=Table Link];
                SubPageLink=Planning Board Code=FIELD(Code);
                PagePartID=Page9062404;
                Editable=Editable;
                PartType=Page }

    { 9062254;1;Group     ;
                Name=Miscellaneous;
                CaptionML=[ENU=Miscellaneous;
                           ENG=Miscellaneous];
                Editable=Editable;
                GroupType=Group }

    { 1000000040;2;Group  ;
                Name=WebGroup;
                CaptionML=[ENU=Web;
                           ENG=Web];
                GroupType=Group }

    { 1000000038;3;Field  ;
                SourceExpr="HTML Template Code";
                Importance=Additional }

    { 1000000036;3;Field  ;
                SourceExpr="HTML Day View Code";
                Importance=Additional }

    { 1000000030;3;Field  ;
                SourceExpr="HTML Work Week View Code";
                Importance=Additional }

    { 1000000024;3;Field  ;
                SourceExpr="HTML Week View Code";
                Importance=Additional }

    { 1000000010;3;Field  ;
                SourceExpr="HTML Month View Code";
                Importance=Additional }

    { 1000000009;3;Field  ;
                SourceExpr="HTML Timeline View Code";
                Importance=Additional }

    { 1000000031;2;Group  ;
                Name=BehaviourGroup;
                CaptionML=[ENU=Behaviour;
                           ENG=Behaviour];
                GroupType=Group }

    { 1000000029;3;Field  ;
                SourceExpr="Cloning Enabled" }

    { 1000000028;3;Field  ;
                SourceExpr="Dragging Enabled" }

    { 1000000027;3;Field  ;
                SourceExpr="Resource Changing Enabled" }

    { 1000000026;3;Field  ;
                SourceExpr="Resizing Enabled" }

    { 1000000050;3;Field  ;
                SourceExpr="Work Week View Full Week" }

    { 1000000041;2;Group  ;
                Name=NonEmptyResourcesGroup;
                CaptionML=[ENU=Non-Empty Resources;
                           ENG=Non-Empty Resources];
                GroupType=Group }

    { 1000000039;3;Field  ;
                SourceExpr="Non-Empty Resources" }

    { 1000000037;3;Field  ;
                SourceExpr="Non-Empty Resources Optional" }

    { 1000000011;2;Group  ;
                Name=EventsAndActionsGroup;
                CaptionML=[ENU=Events and Actions;
                           ENG=Events and Actions];
                GroupType=Group }

    { 1000000003;3;Field  ;
                Name=EditEventsField;
                CaptionML=[ENU=Edit Commands;
                           ENG=Edit Commands];
                SourceExpr=EditEventsText;
                Editable=FALSE;
                StyleExpr=LinkStandardStyle;
                OnDrillDown=BEGIN
                              EditEvents();
                            END;

                ShowCaption=No }

    { 9062264;3;Field     ;
                SourceExpr="Action Handling Codeunit ID";
                Visible=FALSE;
                OnValidate=BEGIN
                             UpdateGlobals();
                           END;

                OnLookup=BEGIN
                           IF (Rec.EventHandlingCodeunitLookup()) THEN
                             UpdateGlobals();
                         END;
                          }

    { 9062259;3;Field     ;
                Name=ActionHandlingCodeunitText;
                CaptionML=[ENU=Action Handling Codeunit Name;
                           ENG=Action Handling Codeunit Name];
                SourceExpr=ActionHandlingCodeunitText;
                OnValidate=BEGIN
                             IF (Rec.ValidateEventHandlingCodeunitText(ActionHandlingCodeunitText)) THEN
                               UpdateGlobals();
                           END;

                OnLookup=BEGIN
                           IF (Rec.EventHandlingCodeunitLookup()) THEN
                             UpdateGlobals();
                         END;
                          }

    { 1000000032;2;Group  ;
                Name=MenuGroup;
                CaptionML=[ENU=Menu;
                           ENG=Menu];
                GroupType=Group }

    { 1000000008;3;Field  ;
                Name=MenuItemsField;
                CaptionML=[ENU=Menu Items;
                           ENG=Menu Items];
                SourceExpr=MenuItemsText;
                Editable=FALSE;
                StyleExpr=LinkStandardStyle;
                OnDrillDown=BEGIN
                              EditMenuItems(Editable);
                              UpdateGlobals();
                            END;
                             }

    { 1000000015;2;Group  ;
                Name=StyleCachingGroup;
                CaptionML=[ENU=Style Caching;
                           ENG=Style Caching];
                GroupType=Group }

    { 1000000016;3;Field  ;
                SourceExpr="Use Foreground Style Cache" }

    { 1000000014;3;Field  ;
                SourceExpr="Use Background Style Cache" }

    { 1000000013;3;Field  ;
                SourceExpr="Use Border Style Cache" }

    { 1000000022;2;Group  ;
                Name=AuditGroup;
                CaptionML=[ENU=Audit;
                           ENG=Audit];
                GroupType=Group }

    { 1000000007;3;Field  ;
                SourceExpr="Created By";
                Importance=Additional;
                Editable=FALSE }

    { 1000000006;3;Field  ;
                SourceExpr="Created Date Time";
                Importance=Additional;
                Editable=FALSE }

    { 1000000005;3;Field  ;
                SourceExpr="Modified By";
                Importance=Additional;
                Editable=FALSE }

    { 1000000004;3;Field  ;
                SourceExpr="Modified Date Time";
                Importance=Additional;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      PlanningBoardTable@9062229 : Record 9062338;
      EnhancedPermissionsMgt@1000000008 : Codeunit 9062277;
      ObjectFieldToolkit@9062235 : Codeunit 9062343;
      tEdit@1000000011 : TextConst 'ENU=Edit %1;ENG=Edit %1';
      tView@1000000012 : TextConst 'ENU=View %1;ENG=View %1';
      tResourceTable@1000000000 : TextConst 'ENU=Resource Table;ENG=Resource Table';
      tEntryTable@1000000001 : TextConst 'ENU=Entry Table;ENG=Entry Table';
      tCaptionFormula@9062242 : TextConst 'ENU=Caption Formula;ENG=Caption Formula';
      ReleasePlanningBoard@1000000005 : Codeunit 9062310;
      TnpToolkit@1000000017 : Codeunit 9062230;
      TableText@9062232 : ARRAY [2] OF Text;
      TableFilterText@9062233 : ARRAY [2] OF Text;
      TableKeyText@9062241 : ARRAY [2] OF Text;
      CaptionText@9062238 : ARRAY [2] OF Text;
      DateTimeFields@9062230 : ' ,Dates,Dates and Times,DateTimes,DateTimes (Dates Only),Single Date,Single Date and Time,Single DateTime,Single DateTime (Date Only)';
      StartDateFieldText@9062231 : Text;
      StartTimeFieldText@9062234 : Text;
      EndDateFieldText@9062236 : Text;
      EndTimeFieldText@9062237 : Text;
      DateFieldsEnabled@9062240 : Boolean INDATASET;
      TimeFieldsEnabled@9062239 : Boolean INDATASET;
      MenuItemsText@1000000002 : Text;
      ActionHandlingCodeunitText@1000000003 : Text;
      tEvents@1000000004 : TextConst 'ENU=Events;ENG=Events';
      Editable@1000000006 : Boolean INDATASET;
      EditResourceTableText@1000000007 : Text;
      EditEntryTableText@1000000009 : Text;
      EditCaptionFormulaText@1000000013 : Text;
      EditEventsText@1000000015 : Text;
      LinkStandardStyle@1000000021 : Text INDATASET;
      LinkStrongStyle@1000000022 : Text INDATASET;

    LOCAL PROCEDURE UpdateGlobals@9062234();
    VAR
      lTableType@9062230 : Integer;
      lBaseText@1000000001 : Text;
    BEGIN
      //DOC NA2016.12 - Updating the page globals

      Editable := (Rec.Status IN [Rec.Status::" ", Rec.Status::Open]);

      CLEAR(TableText);
      CLEAR(TableFilterText);
      CLEAR(TableKeyText);
      CLEAR(CaptionText);
      CLEAR(DateTimeFields);
      CLEAR(StartDateFieldText);
      CLEAR(StartTimeFieldText);
      CLEAR(EndDateFieldText);
      CLEAR(EndTimeFieldText);
      CLEAR(DateFieldsEnabled);
      CLEAR(TimeFieldsEnabled);

      IF (Rec.Code <> '') THEN
        FOR lTableType := PlanningBoardTable."Table Type"::Resource TO PlanningBoardTable."Table Type"::Entry DO
          IF (PlanningBoardTable.GET(Rec.Code, lTableType)) THEN
          BEGIN
            PlanningBoardTable.CALCFIELDS("Table Caption");
            TableText[lTableType] := PlanningBoardTable."Table Caption";
            TableFilterText[lTableType] := PlanningBoardTable.CalculateTableFilterText(Editable);
            TableKeyText[lTableType] := PlanningBoardTable.CalculateTableKeyText(Editable);
            CaptionText[lTableType] := PlanningBoardTable.CalculateCaptionText();
            IF (lTableType = PlanningBoardTable."Table Type"::Entry) THEN
            BEGIN
              PlanningBoardTable.CALCFIELDS("Start Date Field Caption", "Start Time Field Caption", "End Date Field Caption", "End Time Field Caption");
              DateTimeFields := PlanningBoardTable."Date Time Fields";
              StartDateFieldText := PlanningBoardTable."Start Date Field Caption";
              StartTimeFieldText := PlanningBoardTable."Start Time Field Caption";
              EndDateFieldText := PlanningBoardTable."End Date Field Caption";
              EndTimeFieldText := PlanningBoardTable."End Time Field Caption";
              DateFieldsEnabled := PlanningBoardTable.AreDateFieldsEnabled();
              TimeFieldsEnabled := PlanningBoardTable.AreTimeFieldsEnabled();
            END;
          END;

      lBaseText := TnpToolkit.IIFText(Editable, tEdit, tView);
      LinkStandardStyle := TnpToolkit.IIFText(Editable, 'StandardAccent', 'Standard');
      LinkStrongStyle := TnpToolkit.IIFText(Editable, 'StrongAccent', 'Strong');
      EditResourceTableText := STRSUBSTNO(lBaseText, tResourceTable);
      EditEntryTableText := STRSUBSTNO(lBaseText, tEntryTable);
      EditCaptionFormulaText := STRSUBSTNO(lBaseText, tCaptionFormula);
      EditEventsText := STRSUBSTNO(lBaseText, tEvents);

      Rec.CALCFIELDS("Action Handling Codeunit Name");
      ActionHandlingCodeunitText := Rec."Action Handling Codeunit Name";
      MenuItemsText := Rec.GetMenuItemsText();
    END;

    LOCAL PROCEDURE InitialiseTableModification@9062244(pTableType@9062229 : Integer);
    BEGIN
      //DOC NA2016.12 - Initialising table modification
      //  -> pTableType: Table type

      PlanningBoardTable.GET(Rec.Code, pTableType);
    END;

    LOCAL PROCEDURE InitialiseEntryTableModification@9062247();
    BEGIN
      //DOC NA2016.12 - Initialising entry table modification

      InitialiseTableModification(PlanningBoardTable."Table Type"::Entry);
    END;

    LOCAL PROCEDURE FinaliseTableModification@9062245(pReload@9062231 : Boolean;pUpdateGlobals@9062229 : Boolean;pUpdatePage@9062230 : Boolean);
    BEGIN
      //DOC NA2016.12 - Finalising table modification
      //  -> pReload: Flag to reload plannign board table record
      //  -> pUpdateGlobals: Flag to update globals
      //  -> pUpdatePage: Flag to update page

      IF (pReload) THEN
        PlanningBoardTable.GET(PlanningBoardTable."Planning Board Code", PlanningBoardTable."Table Type");
      PlanningBoardTable.MODIFY(TRUE);
      IF (pUpdateGlobals) THEN
        UpdateGlobals();
      IF (pUpdatePage) THEN
        CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE ValidateTable@9062230(pTableType@9062229 : Integer);
    VAR
      lResult@1000000000 : Boolean;
    BEGIN
      //DOC NA2016.12 - Validating table field
      //  -> pTableType: Table type

      InitialiseTableModification(pTableType);
      IF (PlanningBoardTable.ValidateTableText(TableText[pTableType])) THEN
        FinaliseTableModification(FALSE, TRUE, FALSE);
    END;

    LOCAL PROCEDURE TableLookup@9062231(pTableType@9062229 : Integer);
    BEGIN
      //DOC NA2016.12 - Table field lookup
      //  -> pTableType: Table type

      InitialiseTableModification(pTableType);
      IF (PlanningBoardTable.TableLookup(Editable)) THEN
        FinaliseTableModification(FALSE, TRUE, FALSE);
    END;

    LOCAL PROCEDURE EditTableFilter@9062236(pTableType@9062229 : Integer);
    BEGIN
      //DOC NA2016.12 - Editing table filter
      //  -> pTableType: Table type

      InitialiseTableModification(pTableType);
      PlanningBoardTable.EditCriteria(Editable);
      FinaliseTableModification(FALSE, TRUE, FALSE);
    END;

    LOCAL PROCEDURE TableKeyLookup@9062240(pTableType@9062229 : Integer);
    BEGIN
      //DOC NA2016.12 - Performing table key lookup
      //  -> pTableType: Table type

      InitialiseTableModification(pTableType);
      IF (PlanningBoardTable.TableKeyLookup(Editable)) THEN
        FinaliseTableModification(FALSE, TRUE, FALSE);
    END;

    LOCAL PROCEDURE ValidateCaption@9062238(pTableType@9062229 : Integer);
    BEGIN
      //DOC NA2016.12 - Validating caption
      //  -> pTableType: Table type

      InitialiseTableModification(pTableType);
      PlanningBoardTable.ValidateCaptionText(CaptionText[pTableType]);
      FinaliseTableModification(FALSE, TRUE, FALSE);
    END;

    LOCAL PROCEDURE CaptionLookup@9062239(pTableType@9062229 : Integer;pForceFormula@9062230 : Boolean);
    BEGIN
      //DOC NA2016.12 - Caption lookup
      //  -> pTableType: Table type
      //  -> pForceFormula: Flag to force formula

      InitialiseTableModification(pTableType);
      IF (PlanningBoardTable.CaptionLookup(pForceFormula, Editable)) THEN
        FinaliseTableModification(TRUE, TRUE, FALSE);
    END;

    BEGIN
    {
      //DOC NA2016.12 JH 23/09/2015 - Created
      //DOC NA2016.15 JH 05/05/2016 - Enhanced permissions
      //DOC NA2016.16.1 JH 26/07/2016 - "Work Week View Full Week" added, start / end time added
    }
    END.
  }
}

