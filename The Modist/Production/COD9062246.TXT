OBJECT Codeunit 9062246 WebService Mgmt.
{
  OBJECT-PROPERTIES
  {
    Date=10/05/16;
    Time=12:00:00 PM;
    Version List=NA2016.15;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      SysB@1000000000 : Record 9062230;
      Logger@1000000002 : Record 9062280;
      String@1000000003 : Codeunit 9062236;

    PROCEDURE WSCall@1000000000(URL@1000000007 : Text[1024];method@1000000008 : Text[20];nameSpace@1000000009 : Text[80];parameters@1000000011 : Text[1024];VAR xmldoc@1000000001 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60") result : Boolean;
    VAR
      xmlhttp@1000000000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A0A-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.XMLHTTP60";
      soapEnvelope@1000000002 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF86-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMElement";
      soapBody@1000000003 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF86-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMElement";
      soapMethod@1000000004 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF86-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMElement";
      node@1000000005 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      parametersXmlDoc@1000000006 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60";
      nodeList@1000000012 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF82-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNodeList";
      TxtError@1000000010 : TextConst 'ENU=Web service error: %1 - %2. URL: %3, method: %4, parameters: %5;ENG=Web service error: %1 - %2. URL: %3, method: %4, parameters: %5';
    BEGIN
      // Create XML Document
      CREATE(xmldoc,TRUE,TRUE);

      // Create SOAP Envelope
      soapEnvelope := xmldoc.createElement('Soap:Envelope');
      soapEnvelope.setAttribute('xmlns:Soap', 'http://schemas.xmlsoap.org/soap/envelope/');
      xmldoc.appendChild(soapEnvelope);

      // Create SOAP Body
      soapBody := xmldoc.createElement('Soap:Body');
      soapEnvelope.appendChild(soapBody);

      // Create Method Element
      soapMethod := xmldoc.createElement(method);
      soapMethod.setAttribute('xmlns', nameSpace);
      soapBody.appendChild(soapMethod);

      // Transfer parameters by loading them into a XML Document and move them
      CREATE(parametersXmlDoc,TRUE,TRUE);
      parametersXmlDoc.loadXML('<parameters>'+parameters+'</parameters>');
      IF parametersXmlDoc.firstChild.hasChildNodes THEN
      BEGIN
        WHILE parametersXmlDoc.firstChild.childNodes.length>0 DO
        BEGIN
          node := parametersXmlDoc.firstChild.firstChild;
          node := parametersXmlDoc.firstChild.removeChild(node);
          soapMethod.appendChild(node);
        END;
      END;

      // Create XMLHTTP and SEND
      CREATE(xmlhttp, TRUE, TRUE);

      xmlhttp.open('POST', URL, FALSE);
      xmlhttp.setRequestHeader('Content-type', 'text/xml; charset=utf-8');
      xmlhttp.setRequestHeader('SOAPAction', method);
      xmlhttp.send(xmldoc.xml);

      // If status is OK - Get Result XML
      IF xmlhttp.status=200 THEN
      BEGIN
        xmldoc := xmlhttp.responseXML;
        xmldoc.setProperty('SelectionLanguage','XPath');
        xmldoc.setProperty('SelectionNamespaces','xmlns:tns="'+nameSpace+'"');
        result := TRUE;
      END ELSE BEGIN
        Logger.Log('WSMGMT', Logger.Type::Error, STRSUBSTNO(TxtError, xmlhttp.status, xmlhttp.statusText, URL, method, parameters), USERID);
      END;
    END;

    PROCEDURE WSGetReturnValue@1000000002(xmldoc@1000000002 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{88D96A05-F192-11D4-A65F-0040963251E5}:'Microsoft XML, v6.0'.DOMDocument60";ParamName@1000000001 : Text[30]) : Text[250];
    VAR
      nodeList@1000000000 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF82-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNodeList";
      i@1000000004 : Integer;
      node@1000000003 : Automation "{F5078F18-C551-11D3-89B9-0000F81FE221} 6.0:{2933BF80-7B36-11D2-B20E-00C04F983E60}:'Microsoft XML, v6.0'.IXMLDOMNode";
      TxtNoReturnValue@1000000005 : TextConst 'ENU=No return value found for %1;ENG=No return value found for %1';
    BEGIN
      nodeList := xmldoc.selectNodes('//tns:'+ParamName);
      FOR i:=1 TO nodeList.length DO
      BEGIN
        node := nodeList.item(i-1);
        EXIT(node.text);
      END;
      ERROR(TxtNoReturnValue, ParamName);
    END;

    PROCEDURE GetWSAddress@1000000003(CompanyName@1000000000 : Text[250]) WSAdd : Text[1024];
    BEGIN
      WSAdd := SysB.GetText('WORKFLOWS_WEB_SERV');
      WSAdd := String.Replace(WSAdd,'[Company]',CompanyName);

      EXIT(WSAdd);
    END;

    PROCEDURE WSCall_Rest@1000000007(URL@1000000007 : Text;VAR xmldoc@1000000012 : DotNet "'Microsoft.MSXML, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.MSXML.DOMDocument") result : Boolean;
    VAR
      TxtError@1000000010 : TextConst 'ENU=Web service error: %1 - %2. URL: %3, method: %4, parameters: %5;ENG=Web service error: %1 - %2. URL: %3, method: %4, parameters: %5';
      xmlhttp@1000000017 : DotNet "'Microsoft.MSXML, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.MSXML.XMLHTTPRequest";
      soapEnvelope@1000000016 : DotNet "'Microsoft.MSXML, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.MSXML.IXMLDOMElement";
      soapBody@1000000015 : DotNet "'Microsoft.MSXML, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.MSXML.IXMLDOMElement";
      soapMethod@1000000014 : DotNet "'Microsoft.MSXML, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.MSXML.IXMLDOMElement";
      node@1000000013 : DotNet "'Microsoft.MSXML, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.MSXML.IXMLDOMNode";
      node2@1000000005 : DotNet "'Microsoft.MSXML, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.MSXML.IXMLDOMNode";
      parametersXmlDoc@1000000018 : DotNet "'Microsoft.MSXML, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.MSXML.IXMLDOMDocument";
      nodeList@1000000019 : DotNet "'Microsoft.MSXML, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.MSXML.IXMLDOMNodeList";
      xmldocclass@1000000001 : DotNet "'Microsoft.MSXML, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.MSXML.DOMDocumentClass";
      xmlhttpclass@1000000000 : DotNet "'Microsoft.MSXML, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.MSXML.XMLHTTPRequestClass";
      NSTypes@1000000003 : TextConst 'ENU=http://schemas.microsoft.com/exchange/services/2006/types;ENG=http://schemas.microsoft.com/exchange/services/2006/types';
      NSMessages@1000000002 : TextConst 'ENU=http://schemas.microsoft.com/exchange/services/2006/messages;ENG=http://schemas.microsoft.com/exchange/services/2006/messages';
      XMLHTTPSend@1000000004 : Codeunit 9062253;
      nullVar@1000000006 : Variant;
    BEGIN
      // Create XML Document
      xmldoc := xmldocclass.DOMDocumentClass;

      // Create XMLHTTP and SEND
      xmlhttp := xmlhttpclass.XMLHTTPRequestClass;
      xmlhttp.open('GET', URL, FALSE,'','');
      xmlhttp.setRequestHeader('Content-type', 'text/xml; charset=utf-8');
      XMLHTTPSend.Set(xmlhttp,xmldoc);
      COMMIT;

      IF NOT XMLHTTPSend.RUN THEN BEGIN
       EXIT(FALSE);
      END;

      XMLHTTPSend.Get(xmlhttp);

      // If status is OK - Get Result XML
      IF xmlhttp.status=200 THEN
      BEGIN
        xmldoc.loadXML(xmlhttp.responseText);
        EXIT(TRUE);
      END ELSE BEGIN
        EXIT(FALSE);
      END;
    END;

    BEGIN
    {
      //DOC NA2015.1  JH 31/08/2012 - Migrated to 2013
      //DOC NA2015.4  JH 28/12/2014 - System behaviours renamed
      //DOC NA2016.10 JH 27/08/2015 - Upgraded to 2016
      //DOC NA2016.12 JH 28/01/2016 - New string codeunit used
      //DOC NA2016.15 JH 18/04/2016 - CfMD amendments
      //DOC NA2016.15 JH 18/04/2016 - "WSCall_Rest" function imported from 2015
    }
    END.
  }
}

