OBJECT Codeunit 1280 Map Currency Exchange Rate
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    TableNo=1220;
    OnRun=VAR
            CurrencyExchangeRate@1000 : Record 330;
          BEGIN
            MapCurrencyExchangeRates(Rec,CurrencyExchangeRate);
          END;

  }
  CODE
  {
    VAR
      FieldNotMappedErr@1000 : TextConst '@@@=%1 - Field Caption;ENU=Mandatory field %1 is not mapped. Map the field by choosing Field Mapping in the Currency Exchange Rate Sync. Setup window.;ENG=Mandatory field %1 is not mapped. Map the field by choosing Field Mapping in the Currency Exchange Rate Sync. Setup window.';

    PROCEDURE MapCurrencyExchangeRates@10(DataExch@1001 : Record 1220;VAR CurrencyExchangeRate@1003 : Record 330);
    VAR
      DataExchField@1002 : Record 1221;
      DefinitionDataExchField@1005 : Record 1221;
      ColumnNo@1007 : Integer;
    BEGIN
      CheckMandatoryFieldsMapped(DataExch);

      DataExchField.SETRANGE("Data Exch. No.",DataExch."Entry No.");
      IF NOT DataExchField.FINDFIRST THEN
        EXIT;

      DefinitionDataExchField.COPY(DataExchField);
      DefinitionDataExchField.SETAUTOCALCFIELDS("Data Exch. Def Code");
      GetColumnNo(CurrencyExchangeRate.FIELDNO("Currency Code"),DataExchField,ColumnNo);
      DefinitionDataExchField.SETRANGE("Column No.",ColumnNo);

      COMMIT;

      IF DefinitionDataExchField.FINDSET THEN
        REPEAT
          IF UpdateCurrencyExchangeRate(CurrencyExchangeRate,DefinitionDataExchField) THEN;
        UNTIL DefinitionDataExchField.NEXT = 0;
    END;

    [TryFunction]
    LOCAL PROCEDURE UpdateCurrencyExchangeRate@25(VAR CurrencyExchangeRate@1002 : Record 330;DefinitionDataExchField@1000 : Record 1221);
    VAR
      RecordRef@1007 : RecordRef;
    BEGIN
      CLEAR(CurrencyExchangeRate);

      RecordRef.GETTABLE(CurrencyExchangeRate);
      SetFields(RecordRef,DefinitionDataExchField);
      RecordRef.SETTABLE(CurrencyExchangeRate);

      COMMIT;
    END;

    LOCAL PROCEDURE SetFields@8(VAR RecordRef@1000 : RecordRef;DefinitionDataExchField@1003 : Record 1221);
    VAR
      CurrencyExchangeRate@1001 : Record 330;
    BEGIN
      AssignValue(RecordRef,CurrencyExchangeRate.FIELDNO("Starting Date"),DefinitionDataExchField,TODAY);
      AssignValue(RecordRef,CurrencyExchangeRate.FIELDNO("Currency Code"),DefinitionDataExchField,'');
      AssignValue(RecordRef,CurrencyExchangeRate.FIELDNO("Relational Currency Code"),DefinitionDataExchField,'');
      AssignValue(RecordRef,CurrencyExchangeRate.FIELDNO("Exchange Rate Amount"),DefinitionDataExchField,1);
      AssignValue(RecordRef,CurrencyExchangeRate.FIELDNO("Relational Exch. Rate Amount"),DefinitionDataExchField,0);

      RecordRef.SETTABLE(CurrencyExchangeRate);
      AssignValue(
        RecordRef,CurrencyExchangeRate.FIELDNO("Adjustment Exch. Rate Amount"),DefinitionDataExchField,
        CurrencyExchangeRate."Exchange Rate Amount");
      AssignValue(
        RecordRef,CurrencyExchangeRate.FIELDNO("Relational Adjmt Exch Rate Amt"),DefinitionDataExchField,
        CurrencyExchangeRate."Relational Exch. Rate Amount");
      AssignValue(
        RecordRef,CurrencyExchangeRate.FIELDNO("Fix Exchange Rate Amount"),DefinitionDataExchField,
        CurrencyExchangeRate."Fix Exchange Rate Amount"::Currency);

      IF NOT RecordRef.INSERT(TRUE) THEN
        RecordRef.MODIFY(TRUE);
    END;

    LOCAL PROCEDURE AssignValue@1(VAR RecordRef@1000 : RecordRef;FieldNo@1001 : Integer;DefinitionDataExchField@1002 : Record 1221;DefaultValue@1007 : Variant);
    VAR
      DataExchField@1005 : Record 1221;
      DataExchFieldMapping@1008 : Record 1225;
      TempFieldIdsToNegate@1004 : TEMPORARY Record 2000000026;
      ProcessDataExch@1003 : Codeunit 1201;
      FieldRef@1006 : FieldRef;
    BEGIN
      IF GetFieldValue(DefinitionDataExchField,FieldNo,DataExchField) AND
         DataExchFieldMapping.GET(
           DataExchField."Data Exch. Def Code",
           DataExchField."Data Exch. Line Def Code",
           RecordRef.NUMBER,
           DataExchField."Column No.",
           FieldNo)
      THEN BEGIN
        ProcessDataExch.SetField(RecordRef,DataExchFieldMapping,DataExchField,TempFieldIdsToNegate);
        ProcessDataExch.NegateAmounts(RecordRef,TempFieldIdsToNegate);
      END ELSE BEGIN
        FieldRef := RecordRef.FIELD(FieldNo);
        FieldRef.VALIDATE(DefaultValue);
      END;
    END;

    LOCAL PROCEDURE GetFieldValue@6(DefinitionDataExchField@1000 : Record 1221;FieldNo@1002 : Integer;VAR DataExchField@1005 : Record 1221) : Boolean;
    VAR
      DataExchFieldMapping@1003 : Record 1225;
      ColumnNo@1001 : Integer;
    BEGIN
      IF NOT GetColumnNo(FieldNo,DefinitionDataExchField,ColumnNo) THEN
        EXIT;

      DataExchField.SETRANGE("Data Exch. No.",DefinitionDataExchField."Data Exch. No.");
      DataExchField.SETRANGE("Data Exch. Line Def Code",DefinitionDataExchField."Data Exch. Line Def Code");
      DataExchField.SETRANGE("Line No.",DefinitionDataExchField."Line No.");
      DataExchField.SETRANGE("Column No.",ColumnNo);
      DataExchField.SETAUTOCALCFIELDS("Data Exch. Def Code");

      IF DataExchField.FINDFIRST THEN
        EXIT(TRUE);

      DataExchFieldMapping.SETRANGE("Data Exch. Def Code",DefinitionDataExchField."Data Exch. Def Code");
      DataExchFieldMapping.SETRANGE("Data Exch. Line Def Code",DefinitionDataExchField."Data Exch. Line Def Code");
      DataExchFieldMapping.SETRANGE("Column No.",ColumnNo);
      DataExchFieldMapping.SETRANGE("Use Default Value",TRUE);
      DataExchFieldMapping.SETFILTER("Default Value",'<>%1','');

      IF DataExchFieldMapping.FINDFIRST THEN BEGIN
        DataExchField.COPY(DefinitionDataExchField);
        DataExchField."Column No." := ColumnNo;
        DataExchField.Value := DataExchFieldMapping."Default Value";
        EXIT(TRUE);
      END;

      EXIT(FALSE);
    END;

    LOCAL PROCEDURE GetColumnNo@2(FieldNo@1000 : Integer;DataExchField@1002 : Record 1221;VAR ColumnNo@1001 : Integer) : Boolean;
    VAR
      DataExchFieldMapping@1003 : Record 1225;
    BEGIN
      DataExchField.CALCFIELDS("Data Exch. Def Code");
      DataExchFieldMapping.SETRANGE("Data Exch. Line Def Code",DataExchField."Data Exch. Line Def Code");
      DataExchFieldMapping.SETRANGE("Data Exch. Def Code",DataExchField."Data Exch. Def Code");
      DataExchFieldMapping.SETRANGE("Table ID",DATABASE::"Currency Exchange Rate");
      DataExchFieldMapping.SETRANGE("Field ID",FieldNo);

      IF NOT DataExchFieldMapping.FINDFIRST THEN
        EXIT(FALSE);

      ColumnNo := DataExchFieldMapping."Column No.";
      EXIT(TRUE);
    END;

    LOCAL PROCEDURE CheckMandatoryFieldsMapped@3(DataExch@1000 : Record 1220);
    VAR
      DataExchFieldMapping@1001 : Record 1225;
      TempField@1002 : TEMPORARY Record 2000000041;
    BEGIN
      GetMandatoryFields(TempField);
      TempField.FINDSET;

      REPEAT
        DataExchFieldMapping.SETRANGE("Data Exch. Def Code",DataExch."Data Exch. Def Code");
        DataExchFieldMapping.SETRANGE("Field ID",TempField."No.");
        IF NOT DataExchFieldMapping.FINDFIRST THEN
          ERROR(FieldNotMappedErr,TempField.FieldName);
      UNTIL TempField.NEXT = 0;
    END;

    PROCEDURE GetSuggestedFields@9(VAR TempField@1000 : TEMPORARY Record 2000000041);
    BEGIN
      GetMandatoryFields(TempField);
      GetCommonlyUsedFields(TempField);
    END;

    PROCEDURE GetMandatoryFields@4(VAR TempField@1000 : TEMPORARY Record 2000000041);
    VAR
      CurrencyExchangeRate@1002 : Record 330;
    BEGIN
      InsertMandatoryField(TempField,CurrencyExchangeRate.FIELDNO("Currency Code"),DATABASE::"Currency Exchange Rate");
      InsertMandatoryField(TempField,CurrencyExchangeRate.FIELDNO("Relational Exch. Rate Amount"),DATABASE::"Currency Exchange Rate");
    END;

    LOCAL PROCEDURE GetCommonlyUsedFields@11(VAR TempField@1000 : TEMPORARY Record 2000000041);
    VAR
      CurrencyExchangeRate@1002 : Record 330;
    BEGIN
      InsertMandatoryField(TempField,CurrencyExchangeRate.FIELDNO("Starting Date"),DATABASE::"Currency Exchange Rate");
      InsertMandatoryField(TempField,CurrencyExchangeRate.FIELDNO("Exchange Rate Amount"),DATABASE::"Currency Exchange Rate");
    END;

    LOCAL PROCEDURE InsertMandatoryField@5(VAR TempField@1002 : TEMPORARY Record 2000000041;FieldID@1000 : Integer;TableID@1001 : Integer);
    VAR
      Field@1003 : Record 2000000041;
    BEGIN
      Field.GET(TableID,FieldID);
      TempField.COPY(Field);
      TempField.INSERT;
    END;

    [EventSubscriber(Table,1400,OnRegisterServiceConnection)]
    PROCEDURE HandleCurrencyExchangeRateRegisterServiceConnection@7(VAR ServiceConnection@1005 : Record 1400);
    VAR
      CurrExchRateUpdateSetup@1001 : Record 1650;
      RecRef@1002 : RecordRef;
      InStream@1004 : InStream;
      ServiceURL@1000 : Text;
    BEGIN
      IF CurrExchRateUpdateSetup.ISEMPTY THEN
        CODEUNIT.RUN(CODEUNIT::"Set Up Curr Exch Rate Service");

      IF CurrExchRateUpdateSetup.FINDSET THEN
        REPEAT
          RecRef.GETTABLE(CurrExchRateUpdateSetup);
          ServiceConnection.Status := ServiceConnection.Status::Disabled;
          IF CurrExchRateUpdateSetup.Enabled THEN
            ServiceConnection.Status := ServiceConnection.Status::Enabled;
          CurrExchRateUpdateSetup.CALCFIELDS("Web Service URL");
          IF CurrExchRateUpdateSetup."Web Service URL".HASVALUE THEN BEGIN
            CurrExchRateUpdateSetup."Web Service URL".CREATEINSTREAM(InStream);
            InStream.READ(ServiceURL);
          END;

          WITH CurrExchRateUpdateSetup DO
            ServiceConnection.InsertServiceConnection(
              ServiceConnection,RecRef.RECORDID,Description,ServiceURL,PAGE::"Curr. Exch. Rate Service Card");
        UNTIL CurrExchRateUpdateSetup.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

