OBJECT Page 9062278 General Lookup Sheet
{
  OBJECT-PROPERTIES
  {
    Date=10/05/16;
    Time=12:00:00 PM;
    Version List=NA2016.15;
  }
  PROPERTIES
  {
    CaptionML=[ENU=General Lookup Sheet;
               ENG=General Lookup Sheet];
    SourceTable=Table9062232;
    DataCaptionExpr=PageCaption();
    SourceTableView=SORTING(Type,Sequence,Code);
    PageType=List;
    PromotedActionCategoriesML=[ENU=New,Process,Reports,Types;
                                ENG=New,Process,Reports,Types];
    OnOpenPage=BEGIN
                 DetectFilters();
               END;

    OnNewRecord=BEGIN
                  Rec.Type := mType;
                END;

    ActionList=ACTIONS
    {
      { 1000000007;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1000000014;1 ;Separator ;
                      CaptionML=[ENU=----------------;
                                 ENG=----------------] }
      { 1000000012;1 ;Action    ;
                      Name=PreviousTypeAction;
                      CaptionML=[ENU=Previous Type;
                                 ENG=Previous Type];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousRecord;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 IF (mGeneralLookupManagement.PreviousType(mTypeBuffer, mType)) THEN
                                   UpdateFilters(TRUE);
                               END;
                                }
      { 1000000015;1 ;Action    ;
                      Name=NextTypeAction;
                      CaptionML=[ENU=Next Type;
                                 ENG=Next Type];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextRecord;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 IF (mGeneralLookupManagement.NextType(mTypeBuffer, mType)) THEN
                                   UpdateFilters(TRUE);
                               END;
                                }
      { 1000000013;1 ;Separator ;
                      CaptionML=[ENU=----------------;
                                 ENG=----------------] }
      { 1000000008;1 ;Action    ;
                      Name=NewTypeAction;
                      CaptionML=[ENU=New Type;
                                 ENG=New Type];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=New;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 IF (mGeneralLookupManagement.CreateType(mTypeBuffer, mType)) THEN
                                   UpdateFilters(TRUE);
                               END;
                                }
      { 1000000009;1 ;Action    ;
                      Name=DeleteTypeAction;
                      CaptionML=[ENU=Delete Type;
                                 ENG=Delete Type];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Delete;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 IF (mGeneralLookupManagement.DeleteType(mTypeBuffer, mType)) THEN
                                   DetectFilters();
                               END;
                                }
      { 1000000011;1 ;Separator ;
                      CaptionML=[ENU=----------------;
                                 ENG=----------------] }
      { 1000000010;1 ;Action    ;
                      Name=MigrateAction;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Migrate;
                                 ENG=Migrate];
                      RunObject=XMLport 9062243;
                      Image=ImportExport }
    }
  }
  CONTROLS
  {
    { 1000000000;0;Container;
                ContainerType=ContentArea }

    { 1000000006;1;Group  ;
                Name=Filter;
                CaptionML=[ENU=Filter;
                           ENG=Filter];
                GroupType=Group }

    { 1000000005;2;Field  ;
                Name=Type;
                CaptionML=[ENU=Type;
                           ENG=Type];
                SourceExpr=mType;
                TableRelation="General Lookup".Code WHERE (Type=CONST(IMAGE GROUP));
                OnValidate=BEGIN
                             mGeneralLookupManagement.ValidateType(mTypeBuffer, mType);
                             UpdateFilters(TRUE);
                           END;

                OnLookup=BEGIN
                           IF (mGeneralLookupManagement.TypeLookup(mTypeBuffer, mType)) THEN
                             UpdateFilters(TRUE);
                         END;
                          }

    { 1000000001;1;Group  ;
                Name=Group;
                CaptionML=[ENU=Group;
                           ENG=Group];
                Enabled=mListEnabled;
                Editable=mListEnabled;
                GroupType=Repeater }

    { 1000000002;2;Field  ;
                SourceExpr=Code }

    { 1000000003;2;Field  ;
                SourceExpr=Description }

    { 1000000004;2;Field  ;
                SourceExpr=Sequence }

  }
  CODE
  {
    VAR
      mTypeBuffer@1000000003 : TEMPORARY Record 9062730;
      mGeneralLookupManagement@1000000002 : Codeunit 9062338;
      mType@1000000000 : Code[20];
      mListEnabled@1000000001 : Boolean INDATASET;

    PROCEDURE SetType@1000000002(pType@1000000000 : Code[20]);
    BEGIN
      //DOC NA2015.4 - Setting type
      //  -> pType: The type

      mType := pType;
    END;

    PROCEDURE DetectFilters@1000000003();
    VAR
      lFilterGroup@1000000000 : Integer;
    BEGIN
      //DOC NA2015.4 - Detecting filters
      //  <- The selection

      IF (mType <> '') THEN
        EXIT;

      FOR lFilterGroup := 5 DOWNTO 0 DO
      BEGIN
        Rec.FILTERGROUP(lFilterGroup);
        IF (Rec.GETFILTER(Type) <> '') THEN
        BEGIN
          mType := Rec.GETRANGEMIN(Type);
          lFilterGroup := 0;
        END;
      END;
      Rec.FILTERGROUP(2);

      mGeneralLookupManagement.CollectTypes(mTypeBuffer, FALSE);
      IF (mType <> '') THEN
      BEGIN
        mTypeBuffer.SETRANGE(Name, mType);
        IF (mTypeBuffer.ISEMPTY) THEN
          mType := '';
        mTypeBuffer.SETRANGE(Name);
      END;
      IF (mType = '') THEN
        IF (mTypeBuffer.FINDFIRST()) THEN
          mType := mTypeBuffer.Name;

      UpdateFilters(TRUE);
    END;

    LOCAL PROCEDURE UpdateFilters@1000000001(pUpdatePage@1000000000 : Boolean);
    BEGIN
      //DOC NA2015.4 - Updating filters
      //  -> pUpdatePage: Page update flag

      Rec.FILTERGROUP(2);
      IF (mType <> '') THEN
        Rec.SETRANGE(Type, mType)
      ELSE
        Rec.SETFILTER(Type, '0&1');
      Rec.FILTERGROUP(0);

      mListEnabled := (mType <> '');

      IF (pUpdatePage) THEN
      BEGIN
        IF (Rec.FINDFIRST()) THEN;
        CurrPage.UPDATE(FALSE);
        CurrPage.ACTIVATE(TRUE);
      END;
    END;

    LOCAL PROCEDURE PageCaption@1000000000() : Text[50];
    VAR
      eSystemImages@1000000000 : TextConst 'ENU=System Images;ENG=System Images';
    BEGIN
      //DOC NA2015.4 - Returning page caption
      //  <- The caption

      EXIT(mType);
    END;

    BEGIN
    {
      //DOC NA2015.4  JH 24/11/2014 - Created
      //DOC NA2015.6  JH 15/04/2015 - Return type from "DetectFilters" fixed
      //DOC NA2016.10 JH 28/08/2015 - Upgraded to 2016
      //DOC NA2016.15 JH 10/05/2016 - CfMD amendments
    }
    END.
  }
}

