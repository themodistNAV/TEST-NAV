OBJECT Table 9087009 Season
{
  OBJECT-PROPERTIES
  {
    Date=05/10/16;
    Time=12:28:43 PM;
    Version List=NS2016.16;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               Rec.TESTFIELD(Code);
               TnpToolkit.UpdateCreatedBy(Rec."Created By", Rec."Created Date Time");
             END;

    OnModify=BEGIN
               TnpToolkit.UpdateModifiedBy(Rec."Modified By", Rec."Modified Date Time");
             END;

    OnDelete=VAR
               eUsed@1000000000 : TextConst 'ENU="Season ""%1"" is used for %2; it can''t be deleted.";ENG="Season ""%1"" is used for %2; it can''t be deleted."';
             BEGIN
               CheckOnDeletion();

               SubSeason.RESET();
               SubSeason.SETRANGE("Season Code", Rec.Code);
               SubSeason.DELETEALL(TRUE);

               SeasonCurrency.RESET();
               SeasonCurrency.SETRANGE("Season Code", Rec.Code);
               SeasonCurrency.DELETEALL(TRUE);
             END;

    CaptionML=[ENU=Season;
               ENG=Season];
    LookupPageID=Page9087039;
    DrillDownPageID=Page9087039;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code20        ;OnValidate=BEGIN
                                                                TnpToolkit.CodeToName(Rec.Code, Rec.Name);
                                                                Rec.VALIDATE(Name);
                                                              END;

                                                   CaptionML=[ENU=Code;
                                                              ENG=Code] }
    { 10  ;   ;Name                ;Text30        ;CaptionML=[ENU=Name;
                                                              ENG=Name] }
    { 20  ;   ;Sequence            ;Integer       ;OnValidate=BEGIN
                                                                IF (Rec.Sequence <> xRec.Sequence) THEN
                                                                  UpdateSubSeasons(Rec.FIELDNO(Sequence));
                                                              END;

                                                   CaptionML=[ENU=Sequence;
                                                              ENG=Sequence];
                                                   BlankZero=Yes }
    { 30  ;   ;Start Date          ;Date          ;CaptionML=[ENU=Start Date;
                                                              ENG=Start Date] }
    { 31  ;   ;End Date            ;Date          ;CaptionML=[ENU=End Date;
                                                              ENG=End Date] }
    { 40  ;   ;Season Group Code   ;Code20        ;TableRelation="General Lookup".Code WHERE (Type=CONST(SEASON GROUP));
                                                   CaptionML=[ENU=Season Group Code;
                                                              ENG=Season Group Code] }
    { 50  ;   ;Previous Season Code;Code20        ;TableRelation=Season;
                                                   CaptionML=[ENU=Previous Season Code;
                                                              ENG=Previous Season Code] }
    { 60  ;   ;Styles              ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count(Style WHERE (Season Code=FIELD(Code)));
                                                   CaptionML=[ENU=Styles;
                                                              ENG=Styles];
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 61  ;   ;Items               ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count(Item WHERE (Season Code=FIELD(Code)));
                                                   CaptionML=[ENU=Items;
                                                              ENG=Items];
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 70  ;   ;Buying Sheets       ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Buying Sheet Header" WHERE (Season Code=FIELD(Code)));
                                                   CaptionML=[ENU=Buying Sheets;
                                                              ENG=Buying Sheets];
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 80  ;   ;Purchase Orders     ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Purchase Header" WHERE (Document Type=CONST(Order),
                                                                                              Season Code=FIELD(Code)));
                                                   CaptionML=[ENU=Purchase Orders;
                                                              ENG=Purchase Orders];
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 81  ;   ;Purchase Order Lines;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Purchase Line" WHERE (Document Type=CONST(Order),
                                                                                            Season Code=FIELD(Code)));
                                                   CaptionML=[ENU=Purchase Order Lines;
                                                              ENG=Purchase Order Lines];
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 82  ;   ;Purchases (LCY)     ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Value Entry"."Purchase Amount (Actual)" WHERE (Item Ledger Entry Type=CONST(Purchase),
                                                                                                                   Season Code=FIELD(Code),
                                                                                                                   Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                   Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                   Location Code=FIELD(Location Filter),
                                                                                                                   Posting Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Purchases (LCY);
                                                              ENG=Purchases (LCY)];
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 91  ;   ;Sales Order Lines   ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Sales Line" WHERE (Document Type=CONST(Order),
                                                                                         Season Code=FIELD(Code)));
                                                   CaptionML=[ENU=Sales Order Lines;
                                                              ENG=Sales Order Lines];
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 92  ;   ;Sales (LCY)         ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Value Entry"."Sales Amount (Actual)" WHERE (Item Ledger Entry Type=CONST(Sale),
                                                                                                                Season Code=FIELD(Code),
                                                                                                                Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                Location Code=FIELD(Location Filter),
                                                                                                                Posting Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Sales (LCY);
                                                              ENG=Sales (LCY)];
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 100 ;   ;Item Ledger Entries ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Item Ledger Entry" WHERE (Season Code=FIELD(Code)));
                                                   CaptionML=[ENU=Item Ledger Entries;
                                                              ENG=Item Ledger Entries];
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 110 ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Date Filter;
                                                              ENG=Date Filter] }
    { 120 ;   ;Global Dimension 1 Filter;Code20   ;FieldClass=FlowFilter;
                                                   TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=[ENU=Global Dimension 1 Filter;
                                                              ENG=Global Dimension 1 Filter];
                                                   CaptionClass='1,3,1' }
    { 121 ;   ;Global Dimension 2 Filter;Code20   ;FieldClass=FlowFilter;
                                                   TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=[ENU=Global Dimension 2 Filter;
                                                              ENG=Global Dimension 2 Filter];
                                                   CaptionClass='1,3,2' }
    { 130 ;   ;Location Filter     ;Code10        ;FieldClass=FlowFilter;
                                                   TableRelation=Location;
                                                   CaptionML=[ENU=Location Filter;
                                                              ENG=Location Filter] }
    { 1000;   ;Created By          ;Code50        ;OnLookup=BEGIN
                                                              TnpToolkit.UserLookup(Rec."Created By", FALSE);
                                                            END;

                                                   CaptionML=[ENU=Created By;
                                                              ENG=Created By] }
    { 1001;   ;Created Date Time   ;DateTime      ;CaptionML=[ENU=Created Date Time;
                                                              ENG=Created Date Time] }
    { 1002;   ;Modified By         ;Code50        ;OnLookup=BEGIN
                                                              TnpToolkit.UserLookup(Rec."Modified By", FALSE);
                                                            END;

                                                   CaptionML=[ENU=Modified By;
                                                              ENG=Modified By] }
    { 1003;   ;Modified Date Time  ;DateTime      ;CaptionML=[ENU=Modified Date Time;
                                                              ENG=Modified Date Time] }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
    {    ;Sequence,Code                            }
    {    ;Season Group Code,Sequence               }
    {    ;Season Group Code,Start Date             }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      nSembleSetup@1000000005 : Record 9087000;
      BuyingSheetHeader@1000000002 : Record 9087020;
      SeasonCurrency@1000000001 : Record 9087010;
      SubSeason@1000000006 : Record 9087011;
      SeasonManagement@1000000004 : Codeunit 9087005;
      TnpToolkit@1000000003 : Codeunit 9062230;

    LOCAL PROCEDURE CheckOnDeletion@1000000011();
    VAR
      lDeletionCheck@1000000000 : Codeunit 9062384;
      eSeasonCode@1000000001 : TextConst 'ENU=Season Code;ENG=Season Code';
    BEGIN
      //DOC NS2015.1 - Checking on deletion

      lDeletionCheck.AddTable(DATABASE::Style);
      lDeletionCheck.AddTable(DATABASE::Item);
      lDeletionCheck.AddTable(DATABASE::"Item Variant");
      lDeletionCheck.AddTable(DATABASE::"Buying Staging Header");
      lDeletionCheck.AddTable(DATABASE::"Buying Staging Line");
      lDeletionCheck.AddTable(DATABASE::"Buying Sheet Header");
      lDeletionCheck.AddTable(DATABASE::"Buying Sheet Summary Line");
      lDeletionCheck.AddTable(DATABASE::"Buying Sheet Line");
      lDeletionCheck.AddTable(DATABASE::"Sales Line");
      lDeletionCheck.AddTable(DATABASE::"Purchase Header");
      lDeletionCheck.AddTable(DATABASE::"Purchase Line");
      lDeletionCheck.AddTable(DATABASE::"Vendor Ledger Entry");
      lDeletionCheck.AddTable(DATABASE::"Item Ledger Entry");
      lDeletionCheck.AddTable(DATABASE::"Value Entry");
      lDeletionCheck.AddTable(DATABASE::"Sales Shipment Line");
      lDeletionCheck.AddTable(DATABASE::"Sales Invoice Line");
      lDeletionCheck.AddTable(DATABASE::"Sales Cr.Memo Line");
      lDeletionCheck.AddTable(DATABASE::"Purch. Rcpt. Header");
      lDeletionCheck.AddTable(DATABASE::"Purch. Rcpt. Line");
      lDeletionCheck.AddTable(DATABASE::"Purch. Inv. Header");
      lDeletionCheck.AddTable(DATABASE::"Purch. Inv. Line");
      lDeletionCheck.AddTable(DATABASE::"Purch. Cr. Memo Hdr.");
      lDeletionCheck.AddTable(DATABASE::"Purch. Cr. Memo Line");
      lDeletionCheck.AddTable(DATABASE::"Return Shipment Line");
      lDeletionCheck.AddTable(DATABASE::"Return Receipt Line");
      lDeletionCheck.AddTable(DATABASE::"Buying Staging Arch. Header");
      lDeletionCheck.AddTable(DATABASE::"Buying Staging Arch. Line");
      lDeletionCheck.AddTable(DATABASE::"Buying Sheet Arch. Header");
      lDeletionCheck.AddTable(DATABASE::"Buying Sheet Arch. Sum. Line");
      lDeletionCheck.AddTable(DATABASE::"Buying Sheet Arch. Line");

      lDeletionCheck.CheckMultipleTables(DATABASE::Season, Rec.Code, eSeasonCode);
    END;

    PROCEDURE UpdateSubSeasons@1000000012(pFieldId@1000000000 : Integer);
    BEGIN
      //DOC NS2015.1 - Updating sub-seasons
      //  -> pFieldId: Field ID to update

      SubSeason.RESET();
      SubSeason.SETRANGE("Season Code", Rec.Code);
      IF (SubSeason.FINDSET(TRUE)) THEN
      REPEAT
        CASE (pFieldId) OF
          Rec.FIELDNO(Sequence):
            SubSeason.VALIDATE("Season Sequence", Rec.Sequence);
        END;
        SubSeason.MODIFY(TRUE);
      UNTIL (SubSeason.NEXT() = 0);
    END;

    PROCEDURE UpdateCurrencyFactors@1000000002();
    BEGIN
      //DOC NS2015.1 - Updating currency factors for the season

      SeasonManagement.UpdateSeasonCurrencyFactors(Rec, TRUE);
    END;

    PROCEDURE FindPreviousSeason@1000000003(VAR pSeason@1000000000 : Record 9087009) : Boolean;
    VAR
      lSeason@1000000002 : Record 9087009;
      lResult@1000000001 : Boolean;
    BEGIN
      //DOC NS2015.1 - Trying to find a season previous to the current one
      //  <> pSeason: Season if found
      //  <- Search result

      lResult := FALSE;

      nSembleSetup.VerifyAndGet();
      CASE (nSembleSetup."Season Chronology By") OF
        nSembleSetup."Season Chronology By"::Date:
          BEGIN
            lSeason.RESET();
            lSeason.SETCURRENTKEY("Season Group Code", "Start Date");
            lSeason.SETRANGE("Season Group Code", Rec."Season Group Code");
            lSeason.SETFILTER("Start Date", '<%1', Rec."Start Date");
            lResult := lSeason.FINDLAST();
          END;
        nSembleSetup."Season Chronology By"::Sequence:
          BEGIN
            lSeason.RESET();
            lSeason.SETCURRENTKEY("Season Group Code", Sequence);
            lSeason.SETRANGE("Season Group Code", Rec."Season Group Code");
            lSeason.SETFILTER(Sequence, '<%1', Rec.Sequence);
            lResult := lSeason.FINDLAST();
          END;
      END;

      IF (lResult) THEN
        pSeason := lSeason
      ELSE
        CLEAR(pSeason);

      EXIT(lResult);
    END;

    PROCEDURE ShowCurrencies@1000000000();
    BEGIN
      //DOC NS2015.1 - Showing currencies related to the season

      SeasonCurrency.RESET();
      SeasonCurrency.SETRANGE("Season Code", Rec.Code);
      PAGE.RUN(0, SeasonCurrency);
    END;

    PROCEDURE ShowStyles@1000000007();
    VAR
      lStyle@1000000000 : Record 9087012;
    BEGIN
      //DOC NS2015.1 - Showing styles related to the season

      lStyle.RESET();
      lStyle.SETCURRENTKEY("Season Code");
      lStyle.SETRANGE("Season Code", Rec.Code);
      PAGE.RUN(0, lStyle);
    END;

    PROCEDURE ShowItems@1000000006();
    VAR
      lItem@1000000000 : Record 27;
    BEGIN
      //DOC NS2015.1 - Showing items related to the season

      lItem.RESET();
      lItem.SETCURRENTKEY("Season Code");
      lItem.SETRANGE("Season Code", Rec.Code);
      PAGE.RUN(0, lItem);
    END;

    PROCEDURE ShowBuyingSheets@1000000001();
    BEGIN
      //DOC NS2015.1 - Showing buying sheets related to the season

      BuyingSheetHeader.RESET();
      BuyingSheetHeader.SETCURRENTKEY("Season Code");
      BuyingSheetHeader.SETRANGE("Season Code", Rec.Code);
      PAGE.RUN(0, BuyingSheetHeader);
    END;

    PROCEDURE ShowArchivedBuyingSheets@1000000010();
    VAR
      lBuyingSheetArchHeader@1000000000 : Record 9087023;
    BEGIN
      //DOC NS2015.1 - Showing archived buying sheets related to the season

      lBuyingSheetArchHeader.RESET();
      lBuyingSheetArchHeader.SETCURRENTKEY("Season Code");
      lBuyingSheetArchHeader.SETRANGE("Season Code", Rec.Code);
      PAGE.RUN(0, lBuyingSheetArchHeader);
    END;

    PROCEDURE ShowPurchaseOrders@1000000005();
    VAR
      lPurchaseHeader@1000000000 : Record 38;
    BEGIN
      //DOC NS2015.1 - Showing purchase orders related to the season

      lPurchaseHeader.RESET();
      lPurchaseHeader.SETRANGE("Document Type", lPurchaseHeader."Document Type"::Order);
      lPurchaseHeader.SETCURRENTKEY("Season Code");
      lPurchaseHeader.SETRANGE("Season Code", Rec.Code);
      PAGE.RUN(0, lPurchaseHeader);
    END;

    PROCEDURE ShowPurchaseOrderLines@1000000004();
    VAR
      lPurchaseLine@1000000000 : Record 39;
    BEGIN
      //DOC NS2015.1 - Showing purchase order lines related to the season

      lPurchaseLine.RESET();
      lPurchaseLine.SETCURRENTKEY("Season Code");
      lPurchaseLine.SETRANGE("Document Type", lPurchaseLine."Document Type"::Order);
      lPurchaseLine.SETRANGE("Season Code", Rec.Code);
      PAGE.RUN(0, lPurchaseLine);
    END;

    PROCEDURE ShowItemLedgerEntries@1000000008();
    VAR
      lItemLedgerEntry@1000000000 : Record 32;
    BEGIN
      //DOC NS2015.1 - Showing item ledger entries related to the season

      lItemLedgerEntry.RESET();
      lItemLedgerEntry.SETCURRENTKEY("Season Code");
      lItemLedgerEntry.SETRANGE("Season Code", Rec.Code);
      PAGE.RUN(0, lItemLedgerEntry);
    END;

    PROCEDURE ShowSalesOrderLines@1000000009();
    VAR
      lSalesLine@1000000000 : Record 37;
    BEGIN
      //DOC NS2015.1 - Showing purchase order lines related to the season

      lSalesLine.RESET();
      lSalesLine.SETCURRENTKEY("Season Code");
      lSalesLine.SETRANGE("Document Type", lSalesLine."Document Type"::Order);
      lSalesLine.SETRANGE("Season Code", Rec.Code);
      PAGE.RUN(0, lSalesLine);
    END;

    BEGIN
    {
      //DOC NS2015.1  JH 14/11/2013 - Created
      //DOC NS2016.16 JH 05/09/2016 - nSemble 2016
    }
    END.
  }
}

