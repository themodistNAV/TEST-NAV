OBJECT Page 9063 Purchase Agent Activities
{
  OBJECT-PROPERTIES
  {
    Date=19/08/18;
    Time=[ 2:13:23 PM];
    Modified=Yes;
    Version List=NAVW18.00,TM3016;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Activities;
               ENG=Activities];
    SourceTable=Table9055;
    PageType=CardPart;
    OnOpenPage=BEGIN
                 RESET;
                 IF NOT GET THEN BEGIN
                   INIT;
                   INSERT;
                 END;

                 SetRespCenterFilter;
                 SETFILTER("Date Filter",'>=%1',WORKDATE);
               END;

    OnAfterGetRecord=BEGIN
                       CalculateCueFieldValues;
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 9   ;1   ;Group     ;
                CaptionML=[ENU=Pre-arrival Follow-up on Purchase Orders;
                           ENG=Pre-arrival Follow-up on Purchase Orders];
                GroupType=CueGroup;
                ActionList=ACTIONS
                {
                  { 3       ;0   ;Action    ;
                                  CaptionML=[ENU=New Purchase Quote;
                                             ENG=New Purchase Quote];
                                  RunObject=Page 49;
                                  RunPageMode=Create }
                  { 8       ;0   ;Action    ;
                                  CaptionML=[ENU=New Purchase Order;
                                             ENG=New Purchase Order];
                                  RunObject=Page 50;
                                  RunPageMode=Create }
                  { 7       ;0   ;Action    ;
                                  CaptionML=[ENU=Edit Purchase Journal;
                                             ENG=Edit Purchase Journal];
                                  RunObject=Page 254 }
                }
                 }

    { 1   ;2   ;Field     ;
                SourceExpr="To Send or Confirm";
                DrillDownPageID=Purchase Order List }

    { 5   ;2   ;Field     ;
                SourceExpr="Upcoming Orders";
                DrillDownPageID=Purchase Order List }

    { 10  ;1   ;Group     ;
                CaptionML=[ENU=Post Arrival Follow-up;
                           ENG=Post Arrival Follow-up];
                GroupType=CueGroup;
                ActionList=ACTIONS
                {
                  { 16      ;0   ;Action    ;
                                  CaptionML=[ENU=Navigate;
                                             ENG=Navigate];
                                  RunObject=Page 344;
                                  Image=Navigate }
                  { 17      ;0   ;Action    ;
                                  CaptionML=[ENU=New Purchase Return Order;
                                             ENG=New Purchase Return Order];
                                  RunObject=Page 6640;
                                  RunPageMode=Create }
                }
                 }

    { 12  ;2   ;Field     ;
                Name=OutstandingOrders;
                CaptionML=[ENU=Outstanding Purchase Orders;
                           ENG=Outstanding Purchase Orders];
                SourceExpr="Outstanding Purchase Orders";
                DrillDownPageID=Purchase Order List;
                OnDrillDown=BEGIN
                              ShowOrders(FIELDNO("Outstanding Purchase Orders"));
                            END;
                             }

    { 14  ;2   ;Field     ;
                SourceExpr="Purchase Return Orders - All";
                DrillDownPageID=Purchase Return Order List }

    { 18  ;1   ;Group     ;
                CaptionML=[ENU=Purchase Orders - Authorize for Payment;
                           ENG=Purchase Orders - Authorise for Payment];
                GroupType=CueGroup }

    { 19  ;2   ;Field     ;
                Name=NotInvoiced;
                CaptionML=[ENU=Not Invoiced;
                           ENG=Not Invoiced];
                SourceExpr="Not Invoiced";
                DrillDownPageID=Purchase Order List;
                OnDrillDown=BEGIN
                              ShowOrders(FIELDNO("Not Invoiced"));
                            END;
                             }

    { 21  ;2   ;Field     ;
                Name=PartiallyInvoiced;
                CaptionML=[ENU=Partially Invoiced;
                           ENG=Partially Invoiced];
                SourceExpr="Partially Invoiced";
                DrillDownPageID=Purchase Order List;
                OnDrillDown=BEGIN
                              ShowOrders(FIELDNO("Partially Invoiced"));
                            END;
                             }

    { 1000000000;1;Group  ;
                CaptionML=ENU=Buying Sheet Import;
                GroupType=CueGroup }

    { 1000000001;2;Field  ;
                Name=The Modist PO;
                CaptionML=ENU=Upload PO;
                SourceExpr=BuyingSheetG;
                Image=Receipt;
                OnDrillDown=BEGIN
                              //DOC TM3016 ST 01/08/18 +
                              ModistSetupG.GET;
                              ModistSetupG.TESTFIELD("Modist PO Excel Import Code");
                              CLEAR(ExcelTemplateUploadMgmtv3G);
                              ExcelTemplateUploadMgmtv3G.SetTemplateCode(ModistSetupG."Modist PO Excel Import Code");
                              IF ExcelTemplateUploadMgmtv3G.RUN THEN BEGIN
                                MESSAGE(ImportComplete);
                                ExcelTemplateHdrG.GET(ModistSetupG."Modist PO Excel Import Code");
                                IF ExcelTemplateHdrG."Defalut Page ID" > 0 THEN BEGIN
                                  ExcelTemplateUploadMgmtv3G.GetKeyRef(KeyRefG);
                                  RecRefG := KeyRefG.RECORD;
                                  VariantG := RecRefG;
                                  PAGE.RUN(ExcelTemplateHdrG."Defalut Page ID", VariantG)
                                END;
                              END ELSE
                                ERROR(GETLASTERRORTEXT);
                              //DOC TM3016 ST 01/08/18 -
                            END;
                             }

    { 1000000002;2;Field  ;
                Name=Layer PO;
                CaptionML=ENU=Upload Layeur PO;
                SourceExpr=BuyingSheetG;
                Image=Receipt;
                OnDrillDown=BEGIN
                              //DOC TM3016 ST 01/08/18 -
                              ModistSetupG.GET;
                              ModistSetupG.TESTFIELD("Layer PO Excel Import Code");
                              CLEAR(ExcelTemplateUploadMgmtv3G);
                              ExcelTemplateUploadMgmtv3G.SetTemplateCode(ModistSetupG."Layer PO Excel Import Code");
                              IF ExcelTemplateUploadMgmtv3G.RUN THEN BEGIN
                                MESSAGE(ImportComplete);
                                ExcelTemplateHdrG.GET(ModistSetupG."Layer PO Excel Import Code");
                                IF ExcelTemplateHdrG."Defalut Page ID" > 0 THEN BEGIN
                                  ExcelTemplateUploadMgmtv3G.GetKeyRef(KeyRefG);
                                  RecRefG := KeyRefG.RECORD;
                                  VariantG := RecRefG;
                                  PAGE.RUN(ExcelTemplateHdrG."Defalut Page ID", VariantG)
                                END;
                              END ELSE
                                ERROR(GETLASTERRORTEXT);
                              //DOC TM3016 ST 01/08/18 +
                            END;
                             }

  }
  CODE
  {
    VAR
      BuyingSheetG@1000000000 : Code[10];
      ExcelTemplateUploadMgmtv3G@1000000001 : Codeunit 50048;
      ImportComplete@1000000002 : TextConst 'ENU=Import Completed';
      ExcelTemplateHdrG@1000000003 : Record 50021;
      KeyRefG@1000000004 : KeyRef;
      RecRefG@1000000005 : RecordRef;
      VariantG@1000000006 : Variant;
      ModistSetupG@1170000000 : Record 50000;

    LOCAL PROCEDURE CalculateCueFieldValues@6();
    BEGIN
      IF FIELDACTIVE("Outstanding Purchase Orders") THEN
        "Outstanding Purchase Orders" := CountOrders(FIELDNO("Outstanding Purchase Orders"));

      IF FIELDACTIVE("Not Invoiced") THEN
        "Not Invoiced" := CountOrders(FIELDNO("Not Invoiced"));

      IF FIELDACTIVE("Partially Invoiced") THEN
        "Partially Invoiced" := CountOrders(FIELDNO("Partially Invoiced"));

      BuyingSheetG := ' '; //DOC TM3016 ST 01/08/18 -
    END;

    BEGIN
    {
      //DOC TM3016 ST 01/08/18 - Code added for excel import
    }
    END.
  }
}

