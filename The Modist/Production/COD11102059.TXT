OBJECT Codeunit 11102059 OM - Common Dialog
{
  OBJECT-PROPERTIES
  {
    Date=04/02/15;
    Time=12:00:00 PM;
    Version List=OMA9.05;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      DialogFileName@1000 : Text;
      DialogFilter@1001 : Text;
      Extension@1002 : ARRAY [25] OF Text[250];
      DialogFilterIndex@1003 : Integer;
      NoOfExtensions@1004 : Integer;

    PROCEDURE GetOpenFileName@1(VAR ClientFileName@1000 : Text;UploadToServer@1001 : Boolean) : Boolean;
    VAR
      FileHandler@1002 : Codeunit 11102097;
      DummyFileName@1003 : Text;
      ServerFilename@1004 : Text;
    BEGIN
      IF UploadToServer AND FileHandler.IsWebClient THEN
        EXIT(ShowOpenWebClientDialog(ClientFileName, ServerFilename))
      ELSE
        EXIT(ShowOpenFileDialog(ClientFileName, DummyFileName, FALSE));
    END;

    PROCEDURE OpenFile@2(VAR ClientFileName@1000 : Text;VAR ServerFileName@1001 : Text) : Boolean;
    VAR
      FileHandler@1002 : Codeunit 11102097;
    BEGIN
      IF FileHandler.IsWebClient THEN
        EXIT(ShowOpenWebClientDialog(ClientFileName, ServerFileName))
      ELSE
        EXIT(ShowOpenFileDialog(ClientFileName, ServerFileName, TRUE));
    END;

    LOCAL PROCEDURE ShowOpenWebClientDialog@3(VAR ClientFileName@1000 : Text;VAR ServerFileName@1001 : Text) : Boolean;
    VAR
      FileHandler@1002 : Codeunit 11102097;
      ExpectedServerFileName@1003 : Text;
    BEGIN
      IF UPLOAD('', '', GetDialogFilter, '', ServerFileName) THEN BEGIN
        ExpectedServerFileName := FileHandler.TempDirectory + FileHandler.GetFileName(ServerFileName);
        IF ServerFileName <> ExpectedServerFileName THEN BEGIN
          IF EXISTS(ExpectedServerFileName) THEN
            ERASE(ExpectedServerFileName);
          RENAME(ServerFileName, ExpectedServerFileName);
          ServerFileName := ExpectedServerFileName;
        END;

        ClientFileName := 'SERVER:\' + FileHandler.GetFileName(ServerFileName);
        DialogFileName := ClientFileName;
        EXIT(TRUE);
      END;
    END;

    LOCAL PROCEDURE ShowOpenFileDialog@4(VAR ClientFileName@1000 : Text;VAR ServerFileName@1001 : Text;UploadToServer@1002 : Boolean) : Boolean;
    VAR
      FileHandler@1003 : Codeunit 11102097;
      DialogResult@1004 : DotNet "'System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Windows.Forms.DialogResult";
      OpenFileDialog@1005 : DotNet "'System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Windows.Forms.OpenFileDialog" RUNONCLIENT;
    BEGIN
      OpenFileDialog := OpenFileDialog.OpenFileDialog;
      OpenFileDialog.Filter := GetDialogFilter;

      IF ClientFileName <> '' THEN BEGIN
        OpenFileDialog.InitialDirectory := FileHandler.GetDirectoryName(ClientFileName);
        OpenFileDialog.FileName := FileHandler.GetFileName(ClientFileName);
      END;

      OpenFileDialog.FilterIndex := DialogFilterIndex;

      IF NOT (FORMAT(OpenFileDialog.ShowDialog) = FORMAT(DialogResult.OK)) THEN
        EXIT;

      IF OpenFileDialog.FileName = '' THEN
        EXIT;

      DialogFileName := OpenFileDialog.FileName;
      ClientFileName := OpenFileDialog.FileName;
      DialogFilterIndex := OpenFileDialog.FilterIndex;

      IF UploadToServer THEN
        ServerFileName := FileHandler.UploadToServer(ClientFileName, '');

      EXIT(TRUE);
    END;

    PROCEDURE GetSaveFileName@5(VAR ClientFileName@1000 : Text);
    VAR
      DummyFileName@1001 : Text;
    BEGIN
      ShowSaveFileDialog(ClientFileName, DummyFileName, FALSE);
    END;

    PROCEDURE SaveFile@6(VAR ClientFileName@1000 : Text;VAR ServerFileName@1001 : Text;DefaultFileName@1002 : Text) : Boolean;
    VAR
      FileHandler@1003 : Codeunit 11102097;
    BEGIN
      IF FileHandler.IsWebClient THEN BEGIN
        ServerFileName := FileHandler.CreateServerFileName('', DefaultFileName);
        EXIT(TRUE);
      END ELSE
        EXIT(ShowSaveFileDialog(ClientFileName, ServerFileName, TRUE));
    END;

    LOCAL PROCEDURE ShowSaveFileDialog@7(VAR ClientFileName@1000 : Text;VAR ServerFileName@1001 : Text;DownloadToClient@1002 : Boolean) : Boolean;
    VAR
      FileHandler@1003 : Codeunit 11102097;
      ctTitleText@1004 : TextConst 'DEU=Export as...;ENU=Export as...;ESP=Export as...;FRA=Export as...;NLD=Exporteren als...;DEA=Export as...';
      DialogResult@1005 : DotNet "'System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Windows.Forms.DialogResult";
      SaveFileDialog@1006 : DotNet "'System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Windows.Forms.SaveFileDialog" RUNONCLIENT;
    BEGIN
      SaveFileDialog := SaveFileDialog.SaveFileDialog;
      SaveFileDialog.Title := ctTitleText;
      SaveFileDialog.Filter := GetDialogFilter;

      IF ClientFileName <> '' THEN BEGIN
        SaveFileDialog.InitialDirectory := FileHandler.GetDirectoryName(ClientFileName);
        SaveFileDialog.FileName := FileHandler.GetFileName(ClientFileName);
      END;

      SaveFileDialog.FilterIndex := DialogFilterIndex;
      SaveFileDialog.OverwritePrompt := DownloadToClient;

      IF NOT (FORMAT(SaveFileDialog.ShowDialog) = FORMAT(DialogResult.OK)) THEN
        EXIT;

      IF SaveFileDialog.FileName = '' THEN
        EXIT;

      DialogFileName := SaveFileDialog.FileName;
      ClientFileName := SaveFileDialog.FileName;
      DialogFilterIndex := SaveFileDialog.FilterIndex;

      IF DownloadToClient THEN
        ServerFileName := FileHandler.CreateServerFileName(ClientFileName, '');

      EXIT(TRUE);
    END;

    PROCEDURE SelectDirectory@8(VAR Directory@1000 : Text) : Boolean;
    VAR
      FileHandler@1001 : Codeunit 11102097;
      ActiveFolder@1002 : Text;
      DialogResult@1003 : DotNet "'System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Windows.Forms.DialogResult";
      FolderBrowserDialog@1004 : DotNet "'System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Windows.Forms.FolderBrowserDialog" RUNONCLIENT;
    BEGIN
      FolderBrowserDialog := FolderBrowserDialog.FolderBrowserDialog;

      IF Directory <> '' THEN
        ActiveFolder := Directory
      ELSE
        ActiveFolder := FileHandler.WorkingDirectory;

      FolderBrowserDialog.SelectedPath := ActiveFolder;

      IF NOT (FORMAT(FolderBrowserDialog.ShowDialog) = FORMAT(DialogResult.OK)) THEN
        EXIT;

      Directory := FolderBrowserDialog.SelectedPath;
      FileHandler.AddBackSlash(Directory);

      EXIT(TRUE);
    END;

    PROCEDURE OpenDirectory@9(Directory@1000 : Text);
    VAR
      FileHandler@1001 : Codeunit 11102097;
      WindowsShell@1002 : Automation "{50A7E9B0-70EF-11D1-B75A-00A0C90564FE} 1.0:{13709620-C279-11CE-A49E-444553540000}:'Microsoft Shell Controls And Automation'.Shell";
      ctFolderNotFound@1003 : TextConst 'DEU=The folder does not exist.;ENU=The folder does not exist.;ESP=The folder does not exist.;FRA=The folder does not exist.;NLD=De map bestaat niet.;DEA=The folder does not exist.';
    BEGIN
      IF NOT FileHandler.ClientDirectoryExists(Directory) THEN
        ERROR(ctFolderNotFound);

      IF ISCLEAR(WindowsShell) THEN
        CREATE(WindowsShell, FALSE, TRUE);

      WindowsShell.Open(Directory);

      CLEAR(WindowsShell);
    END;

    PROCEDURE AddExtension@10(NewExtensionDescription@1000 : Text;NewExtension@1001 : Text);
    BEGIN
      NoOfExtensions += 1;
      Extension[NoOfExtensions] := NewExtension;

      IF DialogFilter = '' THEN
        DialogFilter := NewExtensionDescription
      ELSE
        DialogFilter := DialogFilter + '|' + NewExtensionDescription;
    END;

    PROCEDURE AddKnownExtension@11(NewExtension@1000 : Text);
    VAR
      ctCsv@1001 : TextConst 'DEU=Comma Separated Values  (*.csv)|*.csv;ENU=Comma Separated Values  (*.csv)|*.csv;ESP=Comma Separated Values  (*.csv)|*.csv;FRA=Comma Separated Values  (*.csv)|*.csv;NLD=Comma Separated Values  (*.csv)|*.csv;DEA=Comma Separated Values  (*.csv)|*.csv';
      ctDbk@1002 : TextConst 'DEU=Object Manager Backup Files (*.dbk)|*.dbk;ENU=Object Manager Backup Files (*.dbk)|*.dbk;ESP=Object Manager Backup Files (*.dbk)|*.dbk;FRA=Object Manager Backup Files (*.dbk)|*.dbk;NLD=Object Manager Backup Files (*.dbk)|*.dbk;DEA=Object Manager Backup Files (*.dbk)|*.dbk';
      ctExe@1003 : TextConst 'DEU=Executable File (*.exe)|*.exe;ENU=Executable File (*.exe)|*.exe;ESP=Executable File (*.exe)|*.exe;FRA=Executable File (*.exe)|*.exe;NLD=Toepassing (*.exe)|*.exe;DEA=Executable File (*.exe)|*.exe';
      ctFab@1004 : TextConst 'DEU=NAV Action Files (*.fab)|*.fab;ENU=NAV Action Files (*.fab)|*.fab;ESP=NAV Action Files (*.fab)|*.fab;FRA=NAV Action Files (*.fab)|*.fab;NLD=NAV Action Files (*.fab)|*.fab;DEA=NAV Action Files (*.fab)|*.fab';
      ctFib@1005 : TextConst 'DEU=NAV Import Definitions (*.fib)|*.fib;ENU=NAV Import Definitions (*.fib)|*.fib;ESP=NAV Import Definitions (*.fib)|*.fib;FRA=NAV Import Definitions (*.fib)|*.fib;NLD=NAV Import Definitions (*.fib)|*.fib;DEA=NAV Import Definitions (*.fib)|*.fib';
      ctFld@1006 : TextConst 'DEU=NAV Fields Files (*.fld)|*.fld;ENU=NAV Fields Files (*.fld)|*.fld;ESP=NAV Fields Files (*.fld)|*.fld;FRA=NAV Fields Files (*.fld)|*.fld;NLD=NAV Fields Files (*.fld)|*.fld;DEA=NAV Fields Files (*.fld)|*.fld';
      ctFob@1007 : TextConst 'DEU=NAV Object Files (*.fob)|*.fob;ENU=NAV Object Files (*.fob)|*.fob;ESP=NAV Object Files (*.fob)|*.fob;FRA=NAV Object Files (*.fob)|*.fob;NLD=NAV Object Files (*.fob)|*.fob;DEA=NAV Object Files (*.fob)|*.fob';
      ctLic@1008 : TextConst 'DEU=License Definition Files (*.lic)|*.lic;ENU=License Definition Files (*.lic)|*.lic;ESP=License Definition Files (*.lic)|*.lic;FRA=License Definition Files (*.lic)|*.lic;NLD=License Definition Files (*.lic)|*.lic;DEA=License Definition Files (*.lic)|*.lic';
      ctNtr@1009 : TextConst 'DEU=NAV Translation Rules Files (*.ntr)|*.ntr;ENU=NAV Translation Rules Files (*.ntr)|*.ntr;ESP=NAV Translation Rules Files (*.ntr)|*.ntr;FRA=NAV Translation Rules Files (*.ntr)|*.ntr;NLD=NAV Translation Rules Files (*.ntr)|*.ntr;DEA=NAV Translation Rules Files (*.ntr)|*.ntr';
      ctObp@1010 : TextConst 'DEU=Object Properties Files (*.obp)|*.obp;ENU=Object Properties Files (*.obp)|*.obp;ESP=Object Properties Files (*.obp)|*.obp;FRA=Object Properties Files (*.obp)|*.obp;NLD=Object Properties Files (*.obp)|*.obp;DEA=Object Properties Files (*.obp)|*.obp';
      ctTxt@1011 : TextConst 'DEU=Text Files (*.txt)|*.txt;ENU=Text Files (*.txt)|*.txt;ESP=Text Files (*.txt)|*.txt;FRA=Text Files (*.txt)|*.txt;NLD=Text Files (*.txt)|*.txt;DEA=Text Files (*.txt)|*.txt';
      ctTxtObj@1012 : TextConst 'DEU=NAV Object Text Files (*.txt)|*.txt;ENU=NAV Object Text Files (*.txt)|*.txt;ESP=NAV Object Text Files (*.txt)|*.txt;FRA=NAV Object Text Files (*.txt)|*.txt;NLD=NAV Object Text Files (*.txt)|*.txt;DEA=NAV Object Text Files (*.txt)|*.txt';
      ctTxtTra@1013 : TextConst 'DEU=NAV Translation Files (*.txt)|*.txt;ENU=NAV Translation Files (*.txt)|*.txt;ESP=NAV Translation Files (*.txt)|*.txt;FRA=NAV Translation Files (*.txt)|*.txt;NLD=NAV Translation Files (*.txt)|*.txt;DEA=NAV Translation Files (*.txt)|*.txt';
    BEGIN
      CASE LOWERCASE(NewExtension) OF
        'csv' : AddExtension(ctCsv, 'csv');
        'exe' : AddExtension(ctExe, 'exe');
        'fab' : AddExtension(ctFab, 'fab');
        'txt' : AddExtension(ctTxt, 'txt');
        'fib' : AddExtension(ctFib, 'fib');
        'txt-o' : AddExtension(ctTxtObj, 'txt');
        'txt-t' : AddExtension(ctTxtTra, 'txt');
        'obp' : AddExtension(ctObp, 'obp');
        'dbk' : AddExtension(ctDbk, 'dbk');
        'lic' : AddExtension(ctLic, 'lic');
        'ntr' : AddExtension(ctNtr, 'ntr');
        'fob' : AddExtension(ctFob, 'fob');
        'fld' : AddExtension(ctFld, 'fld');
      END;
    END;

    PROCEDURE GetExtension@12() : Text;
    VAR
      FileHandler@1000 : Codeunit 11102097;
    BEGIN
      IF DialogFilterIndex <> 0 THEN
        IF Extension[DialogFilterIndex] <> '' THEN
          EXIT(Extension[DialogFilterIndex]);

      EXIT(FileHandler.GetExtension(DialogFileName));
    END;

    PROCEDURE SetDialogFilterIndex@13(NewValue@1000 : Integer);
    BEGIN
      DialogFilterIndex := NewValue;
    END;

    LOCAL PROCEDURE GetDialogFilter@14() : Text;
    VAR
      ctAllFiles@1000 : TextConst 'DEU=All Files (*.*)|*.*;ENU=All Files (*.*)|*.*;ESP=All Files (*.*)|*.*;FRA=All Files (*.*)|*.*;NLD=Alle bestanden (*.*)|*.*;DEA=All Files (*.*)|*.*';
    BEGIN
      IF DialogFilter = '' THEN
        EXIT(ctAllFiles)
      ELSE
        EXIT(DialogFilter + '|' + ctAllFiles);
    END;

    BEGIN
    END.
  }
}

