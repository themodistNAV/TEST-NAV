OBJECT Codeunit 403 Application Launch Management
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
            InsertStyleSheets;
          END;

  }
  CODE
  {
    VAR
      Text001@1001 : TextConst 'ENU=No stylesheet has been imported.;ENG=No stylesheet has been imported.';
      Text010@1012 : TextConst 'ENU=Microsoft Word;ENG=Microsoft Word';
      Text011@1011 : TextConst 'ENU=Microsoft Excel;ENG=Microsoft Excel';
      Text012@1010 : TextConst 'ENU=Default;ENG=Default';
      Text018@1000 : TextConst 'ENU=Internet Explorer;ENG=Internet Explorer';
      StyleSheetDirectory@1003 : Text[250];
      InsertProgramFailedMsg@1002 : TextConst '@@@=%1 is the name of an executable to which we send data, such as Excel, Word or Mail. %2 is the detailed error received from the server when attempting to register this program in the database.;ENU=Program ''%1'' has not been successfully registered in the Send-To Programs window due to the following error: ''%2''. Microsoft Dynamics NAV cannot send data to ''%1'' until it has been successfully registered.;ENG=Program ''%1'' has not been successfully registered in the Send-To Programs window due to the following error: ''%2''. Microsoft Dynamics NAV cannot send data to ''%1'' until it has been successfully registered.';
      InsertStyleSheetFailedMsg@1004 : TextConst '@@@=%1 is a file name of a default or custom stylesheet, such as ''myStyleSheet.xslt''. %2 is the detailed error received from the server whilst importing the stylesheet data to the database.;ENU=Cannot import the ''%1'' style sheet due to the following error: ''%2''. You cannot send data that is based on ''%1'' until the style sheet has been successfully imported in the Manage Style Sheets window.;ENG=Cannot import the ''%1'' style sheet due to the following error: ''%2''. You cannot send data that is based on ''%1'' until the style sheet has been successfully imported in the Manage Style Sheets window.';

    PROCEDURE InsertStyleSheets@16();
    VAR
      WordID@1003 : Text[38];
      ExcelID@1004 : Text[38];
      IExploreID@1000 : Text[38];
    BEGIN
      WordID := '{000209FF-0000-0000-C000-000000000046}';  // defined in fin.stx
      ExcelID := '{00024500-0000-0000-C000-000000000046}';  // defined in fin.stx
      IExploreID := '{7B2AE575-8FF8-4761-9612-D72C447623B8}';

      InsertSendToProgram(WordID,'WINWORD.EXE','%1',Text010);
      InsertSendToProgram(ExcelID,'EXCEL.EXE','%1',Text011);
      InsertSendToProgram(IExploreID,'IEXPLORE.EXE','%1',Text018);

      // Stylesheets for the Dynamics NAV client
      InsertPageStyleSheet(WordID,Text012,'NavisionFormToWord.xslt',0);
      InsertPageStyleSheet(ExcelID,Text012,'NavisionFormToExcel.xslt',0);
      InsertPageStyleSheet(IExploreID,Text012,'NavisionFormToHTML.xslt',0);
    END;

    LOCAL PROCEDURE InsertSendToProgram@17(ProgID@1000 : Text[38];ExeName@1001 : Text[250];Param@1002 : Text[250];Name@1003 : Text[250]);
    VAR
      SendToProgram@1004 : Record 2000000065;
    BEGIN
      IF SendToProgram.GET(ProgID) THEN
        EXIT;

      SendToProgram.INIT;
      SendToProgram."Program ID" := ProgID;
      SendToProgram.Executable := ExeName;
      SendToProgram.Parameter := Param;
      SendToProgram.Name := Name;
      IF NOT SendToProgram.INSERT THEN
        MESSAGE(InsertProgramFailedMsg,ExeName,GETLASTERRORTEXT);
    END;

    LOCAL PROCEDURE InsertPageStyleSheet@27(ProgID@1000 : Text[38];Name@1001 : Text[250];FileName2@1002 : Text[100];PageID@1005 : Integer);
    VAR
      StyleSheet@1004 : Record 2000000066;
      FileName@1003 : Text[250];
    BEGIN
      WITH StyleSheet DO BEGIN
        SETCURRENTKEY("Object Type","Object ID","Program ID");
        SETRANGE("Object Type","Object Type"::Page);
        SETRANGE("Object ID",PageID);
        SETRANGE("Program ID",ProgID);
        IF FINDFIRST THEN
          EXIT;
      END;

      IF StyleSheetDirectory = '' THEN
        StyleSheetDirectory := APPLICATIONPATH + 'StyleSheets\';
      FileName := COPYSTR(StyleSheetDirectory + FileName2,1,MAXSTRLEN(FileName));

      IF EXISTS(FileName) THEN BEGIN
        StyleSheet.INIT;
        StyleSheet."Style Sheet ID" := CREATEGUID;
        StyleSheet."Object ID" := PageID;
        StyleSheet."Object Type" := StyleSheet."Object Type"::Page;
        StyleSheet."Program ID" := ProgID;
        StyleSheet.Name := Name;
        StyleSheet.Date := TODAY;
        StyleSheet."Style Sheet".IMPORT(FileName);
        IF NOT StyleSheet.INSERT THEN
          MESSAGE(InsertStyleSheetFailedMsg,FileName,GETLASTERRORTEXT);
      END;
    END;

    LOCAL PROCEDURE SelectStyleSheet@117(ObjectType@1000 : Integer;ObjectID@1001 : Integer;VAR StyleSheetID@1002 : GUID) : Boolean;
    VAR
      AppSelection@1003 : Page 693;
    BEGIN
      AppSelection.SetObjectID(ObjectType,ObjectID);
      AppSelection.LOOKUPMODE := TRUE;
      IF AppSelection.RUNMODAL = ACTION::LookupOK THEN BEGIN
        StyleSheetID := AppSelection.GetSelectedStyleSheetID;
        EXIT(TRUE);
      END;
      EXIT(FALSE);
    END;

    PROCEDURE ExportStylesheet@2(VAR Stylesheet@1000 : Record 2000000066);
    VAR
      TempBlob@1003 : Record 99008535;
      FileMgt@1004 : Codeunit 419;
    BEGIN
      Stylesheet.CALCFIELDS("Style Sheet");
      IF NOT Stylesheet."Style Sheet".HASVALUE THEN
        ERROR(Text001);

      TempBlob.Blob := Stylesheet."Style Sheet";
      FileMgt.BLOBExport(TempBlob,Stylesheet.Name + '.xslt',TRUE);
    END;

    PROCEDURE SetStyleSheetDirectory@1(NewStyleSheetDirectory@1000 : Text[250]);
    BEGIN
      StyleSheetDirectory := NewStyleSheetDirectory;
      IF (StyleSheetDirectory <> '') AND (StyleSheetDirectory[STRLEN(StyleSheetDirectory)] <> '\') THEN
        StyleSheetDirectory := COPYSTR(StyleSheetDirectory + '\',1,MAXSTRLEN(StyleSheetDirectory));
    END;

    BEGIN
    END.
  }
}

