OBJECT Page 1342 Mini Item Template Card
{
  OBJECT-PROPERTIES
  {
    Date=09/09/14;
    Time=12:00:00 PM;
    Version List=NAVW18.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Item Template;
               ENG=Item Template];
    SourceTable=Table1301;
    DataCaptionExpr="Template Name";
    PageType=Card;
    SourceTableTemporary=Yes;
    CardPageID=Mini Item Template Card;
    PromotedActionCategoriesML=[ENU=New,Process,Reports,Master Data;
                                ENG=New,Process,Reports,Master Data];
    OnOpenPage=BEGIN
                 IF Item."No." <> '' THEN
                   CreateConfigTemplateFromExistingItem(Item,Rec);
               END;

    OnDeleteRecord=BEGIN
                     CheckTemplateNameProvided
                   END;

    OnQueryClosePage=BEGIN
                       CASE CloseAction OF
                         ACTION::LookupOK:
                           IF Code <> '' THEN
                             CheckTemplateNameProvided;
                         ACTION::LookupCancel:
                           IF DELETE(TRUE) THEN;
                       END;
                     END;

    OnAfterGetCurrRecord=BEGIN
                           SetInventoryPostingGroupEditable;
                           SetDimensionsEnabled;
                         END;

    ActionList=ACTIONS
    {
      { 22      ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 3       ;1   ;ActionGroup;
                      CaptionML=[ENU=Master Data;
                                 ENG=Master Data] }
      { 24      ;2   ;Action    ;
                      Name=Default Dimensions;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 ENG=Dimensions];
                      ToolTipML=[ENU=View or edit any dimensions that are set up for the item that you want to reuse for the template.;
                                 ENG=View or edit any dimensions that are set up for the item that you want to reuse for the template.];
                      RunObject=Page 1343;
                      RunPageLink=Table Id=CONST(27),
                                  Master Record Template Code=FIELD(Code);
                      Promoted=Yes;
                      Enabled=DimensionsEnabled;
                      PromotedIsBig=Yes;
                      Image=Dimensions;
                      PromotedCategory=Category4 }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=General;
                CaptionML=[ENU=General;
                           ENG=General];
                GroupType=Group }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the template.;
                           ENG=Specifies the name of the template.];
                SourceExpr="Template Name";
                OnValidate=BEGIN
                             SetDimensionsEnabled;
                           END;
                            }

    { 18  ;1   ;Group     ;
                Name=Item Setup;
                CaptionML=[ENU=Item Setup;
                           ENG=Item Setup];
                GroupType=Group }

    { 5   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the unit in which the item is held on inventory. The base unit of measure also serves as the conversion basis for alternate units of measure.;
                           ENG=Specifies the unit in which the item is held on inventory. The base unit of measure also serves as the conversion basis for alternate units of measure.];
                SourceExpr="Base Unit of Measure" }

    { 6   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if the item card represents a physical item (Inventory) or a service (Service).;
                           ENG=Specifies if the item card represents a physical item (Inventory) or a service (Service).];
                SourceExpr=Type;
                OnValidate=BEGIN
                             SetInventoryPostingGroupEditable;
                           END;
                            }

    { 16  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies that an extended text that you have set up will be added automatically on sales or purchase documents for this item.;
                           ENG=Specifies that an extended text that you have set up will be added automatically on sales or purchase documents for this item.];
                SourceExpr="Automatic Ext. Texts" }

    { 21  ;1   ;Group     ;
                Name=Price;
                CaptionML=[ENU=Price;
                           ENG=Price];
                GroupType=Group }

    { 14  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if the Unit Price and Line Amount fields on sales document lines for this item should be shown with or without VAT.;
                           ENG=Specifies if the Unit Price and Line Amount fields on sales document lines for this item should be shown with or without VAT.];
                SourceExpr="Price Includes VAT" }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if the Profit % field, the Unit Price field, or neither field is calculated and filled. The value in the Profit % field is what is generally understood as the profit margin.;
                           ENG=Specifies if the Profit % field, the Unit Price field, or neither field is calculated and filled. The value in the Profit % field is what is generally understood as the profit margin.];
                SourceExpr="Price/Profit Calculation" }

    { 11  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how much profit you have made from the customer in the current fiscal year, expressed as a percentage of the customer's total sales. The calculation takes into account any changes that occurred in purchase prices of the sold goods.;
                           ENG=Specifies how much profit you have made from the customer in the current fiscal year, expressed as a percentage of the customer's total sales. The calculation takes into account any changes that occurred in purchase prices of the sold goods.];
                SourceExpr="Profit %" }

    { 9   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if the item should be included in the calculation of an invoice discount on documents where the item is traded.;
                           ENG=Specifies if the item should be included in the calculation of an invoice discount on documents where the item is traded.];
                SourceExpr="Allow Invoice Disc." }

    { 8   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies an item group code that can be used as a criterion to grant a discount when the item is sold to a certain customer.;
                           ENG=Specifies an item group code that can be used as a criterion to grant a discount when the item is sold to a certain customer.];
                SourceExpr="Item Disc. Group" }

    { 20  ;1   ;Group     ;
                Name=Cost;
                CaptionML=[ENU=Cost;
                           ENG=Cost];
                GroupType=Group }

    { 12  ;2   ;Field     ;
                ToolTipML=[ENU=Links business transactions made for this item with the general ledger to account for VAT amounts that result from trade with the item.;
                           ENG=Links business transactions made for this item with the general ledger to account for VAT amounts that result from trade with the item.];
                SourceExpr="Costing Method" }

    { 13  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the percentage of the item's last purchase cost that includes indirect costs, such as freight that is associated with the purchase of the item.;
                           ENG=Specifies the percentage of the item's last purchase cost that includes indirect costs, such as freight that is associated with the purchase of the item.];
                SourceExpr="Indirect Cost %" }

    { 19  ;1   ;Group     ;
                Name=Financial Details;
                CaptionML=[ENU=Financial Details;
                           ENG=Financial Details];
                GroupType=Group }

    { 15  ;2   ;Field     ;
                ToolTipML=[ENU=Links business transactions made for this item with the general ledger to account for the value of trade with the item.;
                           ENG=Links business transactions made for this item with the general ledger to account for the value of trade with the item.];
                SourceExpr="Gen. Prod. Posting Group" }

    { 17  ;2   ;Field     ;
                ToolTipML=[ENU=Links business transactions made for this item with the general ledger to account for VAT amounts that result from trade with the item.;
                           ENG=Links business transactions made for this item with the general ledger to account for VAT amounts that result from trade with the item.];
                SourceExpr="VAT Prod. Posting Group" }

    { 7   ;2   ;Field     ;
                ToolTipML=[ENU=Links business transactions made for the item with an inventory account in the general ledger to group amounts for that item type.;
                           ENG=Links business transactions made for the item with an inventory account in the general ledger to group amounts for that item type.];
                SourceExpr="Inventory Posting Group";
                Editable=InventoryPostingGroupEditable }

  }
  CODE
  {
    VAR
      Item@1003 : Record 27;
      InventoryPostingGroupEditable@1000 : Boolean INDATASET;
      DimensionsEnabled@1001 : Boolean INDATASET;
      ProvideTemplateNameErr@1002 : TextConst '@@@=%1 Template Name;ENU=You must enter a %1.;ENG=You must enter a %1.';

    PROCEDURE SetInventoryPostingGroupEditable@1();
    BEGIN
      InventoryPostingGroupEditable := Type = Type::Inventory;
    END;

    LOCAL PROCEDURE SetDimensionsEnabled@4();
    BEGIN
      DimensionsEnabled := "Template Name" <> '';
    END;

    LOCAL PROCEDURE CheckTemplateNameProvided@2();
    BEGIN
      IF "Template Name" = '' THEN
        ERROR(STRSUBSTNO(ProvideTemplateNameErr,FIELDCAPTION("Template Name")));
    END;

    PROCEDURE CreateFromItem@3(FromItem@1000 : Record 27);
    BEGIN
      Item := FromItem;
    END;

    BEGIN
    END.
  }
}

