OBJECT Report 50043 Create Refund SRO
{
  OBJECT-PROPERTIES
  {
    Date=06/12/18;
    Time=[ 6:09:58 PM];
    Modified=Yes;
    Version List=TM3017;
  }
  PROPERTIES
  {
    CaptionML=ENU=Create SRO;
    ProcessingOnly=Yes;
    OnInitReport=BEGIN
                   ReportRunOK := FALSE;
                 END;

    OnPreReport=BEGIN
                  //Comment Start By //DOC TM2022 AW 06/12/2018 -
                  {
                  SalesSetupG.GET;
                  SalesSetupG.TESTFIELD("Product Tax Account");
                  SalesSetupG.TESTFIELD("Good Will Account");
                  SalesSetupG.TESTFIELD("SRO Good Will Reason Code");
                  SalesSetupG.TESTFIELD("SRO Tax Reason Code");

                  CASE TRUE OF
                    TypeG = TypeG::" ": CurrReport.QUIT;
                    TypeG = TypeG::"Tax Amount":
                      BEGIN
                        ReasonCodeG := SalesSetupG."SRO Tax Reason Code";
                        AccountNoG := SalesSetupG."Product Tax Account";
                      END;
                    TypeG = TypeG::"After Sales":
                      BEGIN
                        ReasonCodeG := SalesSetupG."SRO Good Will Reason Code";
                        AccountNoG := SalesSetupG."Good Will Account";
                      END
                  END;

                  SalesHeaderG.INIT;
                  SalesHeaderG.TRANSFERFIELDS(SalesCreditMemoHdrG);
                  SalesHeaderG."Document Type" := SalesHeaderG."Document Type"::"Return Order";
                  SalesHeaderG."No." := '';
                  SalesHeaderG."Order Date" := WORKDATE;
                  SalesHeaderG."Document Date" := WORKDATE;
                  SalesHeaderG."Posting Date" := WORKDATE;
                  SalesHeaderG."Reason Code" := ReasonCodeG;
                  SalesHeaderG.Invoice := TRUE;
                  SalesHeaderG.Receive := TRUE;
                  SalesHeaderG.INSERT(TRUE);

                  SalesLineG.INIT;
                  SalesLineG."Document Type" := SalesHeaderG."Document Type";
                  SalesLineG."Document No." := SalesHeaderG."No.";
                  SalesLineG."Line No." := 10000;
                  SalesLineG.VALIDATE(Type, SalesLineG.Type::"G/L Account");
                  SalesLineG.VALIDATE("No.", AccountNoG);
                  SalesLineG.VALIDATE(Quantity, 1);
                  SalesLineG.VALIDATE("Unit Price", AmountG);
                  SalesLineG.INSERT(TRUE);

                  CODEUNIT.RUN(80, SalesHeaderG);
                  }
                  //Comment End by //DOC TM2022 AW 06/12/2018 +
                END;

    OnPostReport=BEGIN
                   ReportRunOK := TRUE;
                 END;

  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1170000000;;Container;
                  ContainerType=ContentArea }

      { 1170000001;1;Field  ;
                  Name=Return Type;
                  SourceExpr=TypeG }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      SalesHeaderG@1170000002 : Record 36;
      SalesLineG@1170000003 : Record 37;
      SalesCreditMemoHdrG@1170000000 : Record 114;
      SalesSetupG@1170000006 : Record 311;
      TypeG@1170000001 : ' ,Tax Amount,After Sales';
      ReasonCodeG@1170000004 : Code[20];
      AccountNoG@1170000005 : Code[20];
      AmountG@1170000007 : Decimal;
      ReportRunOK@1170000008 : Boolean;

    PROCEDURE GetRefundType@1170000001(VAR pType@1170000000 : ' ,Tax Amount,After Sales');
    BEGIN
      //DOC TM2022 AW 06/12/2018
      pType := TypeG;
    END;

    PROCEDURE GetRunOK@1170000000() : Boolean;
    BEGIN
      EXIT(ReportRunOK);
    END;

    BEGIN
    {
      //DOC TM3017 ST 05/08/18 - Code added for creating sales return order.
      //DOC TM2022 AW 06/12/2018 - Fix Credit Memo Create & Post with Refunds
    }
    END.
  }
  RDLDATA
  {
  }
}

