OBJECT Codeunit 5615 Budget Depreciation
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=In a budget report, %1 must be %2 in %3.;ENG=In a budget report, %1 must be %2 in %3.';
      Text001@1001 : TextConst 'ENU=Budget calculation has not been done on fixed assets with %1 %2, %3 or %4.;ENG=Budget calculation has not been done on fixed assets with %1 %2, %3 or %4.';
      NoOfErrors@1002 : Integer;
      CallNo@1003 : Integer;

    PROCEDURE Calculate@1(FANo@1000 : Code[20];EndingDate1@1001 : Date;EndingDate2@1002 : Date;DeprBookCode@1003 : Code[10];VAR DeprAmount1@1004 : Decimal;VAR DeprAmount2@1005 : Decimal);
    VAR
      DeprBook@1006 : Record 5611;
      FADeprBook@1007 : Record 5612;
      CalculateNormalDepr@1008 : Codeunit 5611;
      NumberOfDays@1009 : Integer;
      EntryAmounts@1010 : ARRAY [4] OF Decimal;
    BEGIN
      DeprAmount1 := 0;
      DeprAmount2 := 0;
      IF CallNo = 0 THEN BEGIN
        CallNo := 1;
        DeprBook.GET(DeprBookCode);
        IF DeprBook."Use Custom 1 Depreciation" THEN
          ERROR(
            Text000,
            DeprBook.FIELDCAPTION("Use Custom 1 Depreciation"),FALSE,DeprBook.TABLECAPTION);
      END;
      WITH FADeprBook DO BEGIN
        IF NOT GET(FANo,DeprBookCode) THEN
          EXIT;
        CASE "Depreciation Method" OF
          "Depreciation Method"::"Declining-Balance 1",
          "Depreciation Method"::"DB1/SL",
          "Depreciation Method"::"DB2/SL":
            IF NoOfErrors = 0 THEN BEGIN
              CreateMessage;
              NoOfErrors := 1;
            END;
          ELSE
            BEGIN
            IF EndingDate1 > 0D THEN
              CalculateNormalDepr.Calculate(
                DeprAmount1,NumberOfDays,FANo,DeprBookCode,EndingDate1,EntryAmounts,0D,0);
            IF EndingDate2 > 0D THEN
              CalculateNormalDepr.Calculate(
                DeprAmount2,NumberOfDays,FANo,DeprBookCode,EndingDate2,EntryAmounts,0D,0);
          END;
        END;
      END;
    END;

    LOCAL PROCEDURE CreateMessage@2();
    VAR
      FADeprBook2@1000 : Record 5612;
      FADeprBook3@1001 : Record 5612;
      FADeprBook4@1002 : Record 5612;
    BEGIN
      FADeprBook2."Depreciation Method" := FADeprBook2."Depreciation Method"::"Declining-Balance 1";
      FADeprBook3."Depreciation Method" := FADeprBook3."Depreciation Method"::"DB1/SL";
      FADeprBook4."Depreciation Method" := FADeprBook4."Depreciation Method"::"DB2/SL";
      MESSAGE(
        Text001,
        FADeprBook2.FIELDCAPTION("Depreciation Method"),
        FADeprBook2."Depreciation Method",
        FADeprBook3."Depreciation Method",
        FADeprBook4."Depreciation Method");
    END;

    PROCEDURE CopyProjectedValueToBudget@7(FADeprBook@1000 : Record 5612;BudgetNameCode@1001 : Code[10];PostingDate@1007 : Date;DeprAmount@1002 : Decimal;Custom1Amount@1003 : Decimal;BalAccount@1004 : Boolean);
    VAR
      FA@1005 : Record 5600;
      FALedgEntry@1006 : Record 5601;
      BudgetText@1009 : Text[150];
    BEGIN
      FADeprBook.TESTFIELD("FA Posting Group");
      FALedgEntry."FA No." := FADeprBook."FA No.";
      FALedgEntry."Depreciation Book Code" := FADeprBook."Depreciation Book Code";
      FALedgEntry."FA Posting Group" := FADeprBook."FA Posting Group";
      FALedgEntry."Posting Date" := PostingDate;
      FALedgEntry."FA Posting Date" := PostingDate;
      FALedgEntry."FA Posting Type" := FALedgEntry."FA Posting Type"::Depreciation;
      FALedgEntry.Amount := DeprAmount;
      BudgetText :=
        STRSUBSTNO('%1 %2: %3',FA.TABLECAPTION,FADeprBook."FA No.",FALedgEntry."FA Posting Type");
      IF FALedgEntry.Amount <> 0 THEN
        CopyFAToBudget(FALedgEntry,BudgetNameCode,BalAccount,BudgetText);

      FALedgEntry."FA Posting Type" := FALedgEntry."FA Posting Type"::"Custom 1";
      FALedgEntry.Amount := Custom1Amount;
      BudgetText :=
        STRSUBSTNO('%1 %2: %3',FA.TABLECAPTION,FADeprBook."FA No.",FALedgEntry."FA Posting Type");

      IF FALedgEntry.Amount <> 0 THEN
        CopyFAToBudget(FALedgEntry,BudgetNameCode,BalAccount,BudgetText);
    END;

    PROCEDURE CopyFAToBudget@3(FALedgEntry@1000 : Record 5601;BudgetNameCode@1001 : Code[10];BalAccount@1002 : Boolean;BudgetText@1008 : Text[150]);
    VAR
      BudgetName@1007 : Record 95;
      GLBudgetEntry@1003 : Record 96;
      FAGLPostBuf@1005 : Record 5637;
      FAInsertGLAcc@1004 : Codeunit 5601;
      NextEntryNo@1006 : Integer;
    BEGIN
      GLBudgetEntry.LOCKTABLE;
      BudgetName.LOCKTABLE;

      BudgetName.GET(BudgetNameCode);
      BudgetName.TESTFIELD(Blocked,FALSE);
      IF GLBudgetEntry.FINDLAST THEN
        NextEntryNo := GLBudgetEntry."Entry No." + 1
      ELSE
        NextEntryNo := 1;
      GLBudgetEntry.INIT;
      GLBudgetEntry."Budget Name" := BudgetNameCode;
      FALedgEntry."G/L Entry No." := NextEntryNo;
      FAInsertGLAcc.DeleteAllGLAcc;
      FAInsertGLAcc.RUN(FALedgEntry);
      IF BalAccount THEN
        FAInsertGLAcc.InsertBalAcc(FALedgEntry);
      IF FAInsertGLAcc.FindFirstGLAcc(FAGLPostBuf) THEN
        REPEAT
          GLBudgetEntry."Entry No." := FAGLPostBuf."Entry No.";
          GLBudgetEntry."G/L Account No." := FAGLPostBuf."Account No.";
          GLBudgetEntry.Amount := FAGLPostBuf.Amount;
          GLBudgetEntry.Date := FALedgEntry."Posting Date";
          GLBudgetEntry.Description := FALedgEntry.Description;
          IF BudgetText <> '' THEN
            GLBudgetEntry.Description := COPYSTR(BudgetText,1,MAXSTRLEN(GLBudgetEntry.Description));
          GLBudgetEntry."User ID" := USERID;

          IF FAGLPostBuf."FA Posting Group" <> '' THEN
            GLBudgetEntry."Dimension Set ID" := FAGLPostBuf."Dimension Set ID"
          ELSE
            GLBudgetEntry."Dimension Set ID" := GetFADefaultDimSetID(FALedgEntry);
          UpdateDimCodesFromDimSetID(GLBudgetEntry,BudgetName);
          GLBudgetEntry.INSERT;
        UNTIL FAInsertGLAcc.GetNextGLAcc(FAGLPostBuf) = 0;
    END;

    LOCAL PROCEDURE GetFADefaultDimSetID@4(VAR FALedgerEntry@1000 : Record 5601) : Integer;
    VAR
      DefaultDim@1002 : Record 352;
      TempDimSetEntry@1001 : TEMPORARY Record 480;
      DimVal@1003 : Record 349;
      DimMgt@1004 : Codeunit 408;
    BEGIN
      DefaultDim.SETRANGE("Table ID",DATABASE::"Fixed Asset");
      DefaultDim.SETRANGE("No.",FALedgerEntry."FA No.");
      IF DefaultDim.FINDSET THEN
        REPEAT
          DimVal.GET(DefaultDim."Dimension Code",DefaultDim."Dimension Value Code");
          TempDimSetEntry."Dimension Code" := DimVal."Dimension Code";
          TempDimSetEntry."Dimension Value Code" := DimVal.Code;
          TempDimSetEntry."Dimension Value ID" := DimVal."Dimension Value ID";
          TempDimSetEntry.INSERT;
        UNTIL DefaultDim.NEXT = 0;

      EXIT(DimMgt.GetDimensionSetID(TempDimSetEntry));
    END;

    LOCAL PROCEDURE UpdateDimCodesFromDimSetID@5(VAR GLBudgetEntry@1000 : Record 96;GLBudgetName@1001 : Record 95);
    VAR
      DimMgt@1002 : Codeunit 408;
    BEGIN
      WITH GLBudgetEntry DO BEGIN
        DimMgt.UpdateGlobalDimFromDimSetID("Dimension Set ID","Global Dimension 1 Code","Global Dimension 2 Code");
        UpdateBudgetDimFromDimSetID("Budget Dimension 1 Code","Dimension Set ID",GLBudgetName."Budget Dimension 1 Code");
        UpdateBudgetDimFromDimSetID("Budget Dimension 2 Code","Dimension Set ID",GLBudgetName."Budget Dimension 2 Code");
        UpdateBudgetDimFromDimSetID("Budget Dimension 3 Code","Dimension Set ID",GLBudgetName."Budget Dimension 3 Code");
        UpdateBudgetDimFromDimSetID("Budget Dimension 4 Code","Dimension Set ID",GLBudgetName."Budget Dimension 4 Code");
      END;
    END;

    LOCAL PROCEDURE UpdateBudgetDimFromDimSetID@6(VAR BudgetDimensionValue@1000 : Code[20];DimSetID@1001 : Integer;BudgetDimensionCode@1002 : Code[20]);
    VAR
      DimensionSetEntry@1003 : Record 480;
    BEGIN
      IF DimensionSetEntry.GET(DimSetID,BudgetDimensionCode) THEN
        BudgetDimensionValue := DimensionSetEntry."Dimension Value Code";
    END;

    BEGIN
    END.
  }
}

