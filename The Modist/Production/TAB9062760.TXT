OBJECT Table 9062760 Expenses Line
{
  OBJECT-PROPERTIES
  {
    Date=10/05/16;
    Time=12:00:00 PM;
    Version List=NA2016.15;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF ("User ID" = '') THEN
                 "User ID" := USERID;
               IF ("Expense Date" = 0D) THEN
                 VALIDATE("Expense Date", TODAY);
               "Created Date" := TODAY;
               "Created Time" := TIME;

               FindHeader();

               ExpenseHeader.GET("Expense No.");
               ExpenseHeader.CheckOpen(TRUE);
             END;

    OnModify=BEGIN
               ExpenseHeader.GET("Expense No.");
               ExpenseHeader.CheckOpen(TRUE);
             END;

    OnDelete=BEGIN
               ExpenseHeader.GET("Expense No.");
               ExpenseHeader.CheckOpen(TRUE);
             END;

    CaptionML=[ENU=Expenses Line;
               ENG=Expenses Line];
  }
  FIELDS
  {
    { 1   ;   ;Expense No.         ;Code20        ;TableRelation="Expenses Header".No.;
                                                   OnValidate=BEGIN
                                                                IF ("Expense No." <> '') THEN BEGIN
                                                                  ExpenseHeader.GET("Expense No.");
                                                                  "Week Start Date" := ExpenseHeader."Starting Date";
                                                                  "Week End Date" := ExpenseHeader."Ending date";
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Expense No.;
                                                              ENG=Expense No.] }
    { 2   ;   ;Entry No.           ;Integer       ;AutoIncrement=Yes;
                                                   CaptionML=[ENU=Entry No.;
                                                              ENG=Entry No.] }
    { 3   ;   ;Day                 ;Option        ;OnValidate=BEGIN
                                                                IF ("Week End Date"=0D) THEN BEGIN
                                                                  "Week Start Date" := CALCDATE('<CW>-6D',TODAY);
                                                                  "Week End Date" := CALCDATE('<CW>',TODAY);
                                                                END;

                                                                CASE Day OF
                                                                  Day::Monday:
                                                                    "Expense Date" := CALCDATE('<CW-6D>',"Week End Date");
                                                                  Day::Tuesday:
                                                                    "Expense Date" := CALCDATE('<CW-5D>',"Week End Date");
                                                                  Day::Wednesday:
                                                                    "Expense Date" := CALCDATE('<CW-4D>',"Week End Date");
                                                                  Day::Thursday:
                                                                    "Expense Date" := CALCDATE('<CW-3D>',"Week End Date");
                                                                  Day::Friday:
                                                                    "Expense Date" := CALCDATE('<CW-2D>',"Week End Date");
                                                                  Day::Saturday:
                                                                    "Expense Date" := CALCDATE('<CW-1D>',"Week End Date");
                                                                  Day::Sunday:
                                                                    "Expense Date" := CALCDATE('<CW>',"Week End Date");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Day;
                                                              ENG=Day];
                                                   OptionCaptionML=[ENU=" ,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday";
                                                                    ENG=" ,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday"];
                                                   OptionString=[ ,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday] }
    { 4   ;   ;Catalog Code        ;Code20        ;TableRelation=Catalogue.Code WHERE (Type=CONST(Expenses));
                                                   OnValidate=VAR
                                                                Catalog@1000000000 : Record 9062385;
                                                              BEGIN
                                                                IF ("Catalog Code" <> '') THEN BEGIN
                                                                  Catalog.GET("Catalog Code");
                                                                  VALIDATE(Amount, Catalog."Unit Cost (Purchase)");
                                                                  Description := Catalog.Description;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Catalog Code;
                                                              ENG=Catalog Code] }
    { 5   ;   ;Created Date        ;Date          ;CaptionML=[ENU=Created Date;
                                                              ENG=Created Date] }
    { 6   ;   ;Created Time        ;Time          ;CaptionML=[ENU=Created Time;
                                                              ENG=Created Time] }
    { 7   ;   ;User ID             ;Code50        ;TableRelation=User."User Name";
                                                   OnValidate=VAR
                                                                UserMgt@1000000000 : Codeunit 418;
                                                              BEGIN
                                                                UserMgt.ValidateUserID("User ID");
                                                              END;

                                                   OnLookup=VAR
                                                              UserMgt@1000000000 : Codeunit 418;
                                                            BEGIN
                                                              UserMgt.ValidateUserID("User ID");
                                                            END;

                                                   CaptionML=[ENU=User ID;
                                                              ENG=User ID] }
    { 8   ;   ;Amount              ;Decimal       ;OnValidate=BEGIN
                                                                IF "Currency Factor" > 0 THEN
                                                                  "Amount LCY" := Amount / "Currency Factor"
                                                                ELSE
                                                                  "Amount LCY" := Amount;
                                                              END;

                                                   CaptionML=[ENU=Amount;
                                                              ENG=Amount] }
    { 9   ;   ;Amount LCY          ;Decimal       ;OnValidate=BEGIN
                                                                IF "Currency Factor" > 0 THEN
                                                                  Amount := "Amount LCY" * "Currency Factor"
                                                                ELSE
                                                                  Amount := "Amount LCY";
                                                              END;

                                                   CaptionML=[ENU=Amount LCY;
                                                              ENG=Amount LCY] }
    { 10  ;   ;Picture             ;BLOB          ;CaptionML=[ENU=Picture;
                                                              ENG=Picture];
                                                   SubType=Bitmap }
    { 11  ;   ;Expense Date        ;Date          ;OnValidate=VAR
                                                                ExpenseHeader2@1000000001 : Record 9062759;
                                                                ExpenseLine@1000000000 : Record 9062760;
                                                              BEGIN
                                                                IF ("Expense Date" <> 0D) THEN BEGIN
                                                                  Day := DATE2DWY("Expense Date", 1);

                                                                  IF (NOT(CanChangeWeek())) THEN BEGIN
                                                                    IF ("Expense No." <> '') AND ("Expense Date" <> 0D) AND
                                                                      (("Expense Date" < "Week Start Date") OR ("Expense Date" > "Week End Date"))
                                                                    THEN
                                                                      ERROR(errWeekDate, "Expense Date", "Week Start Date", "Week End Date");
                                                                  END;

                                                                  "Week Start Date" := CALCDATE('<CW>-6D', "Expense Date");
                                                                  "Week End Date" := CALCDATE('<CW>', "Expense Date");

                                                                  IF ("Expense No." <> '') THEN BEGIN
                                                                    ExpenseHeader.GET("Expense No.");
                                                                    IF (ExpenseHeader."Starting Date" <> "Week Start Date") OR (ExpenseHeader."Ending date" <> "Week End Date") THEN BEGIN
                                                                      //find expense header
                                                                      ExpenseHeader2.RESET();
                                                                      ExpenseHeader2.SETRANGE("Starting Date", "Week Start Date");
                                                                      ExpenseHeader2.SETRANGE("Ending date", "Week End Date");
                                                                      ExpenseHeader2.SETRANGE("User ID", Rec."User ID");
                                                                      ExpenseHeader2.SETRANGE("Processing Status", ExpenseHeader."Processing Status"::Unprocessed);
                                                                      IF (ExpenseHeader2.FINDFIRST()) THEN BEGIN
                                                                        "Expense No." := ExpenseHeader2."No.";
                                                                      END ELSE BEGIN
                                                                        //update current expense header
                                                                        ExpenseLine.SETCURRENTKEY("Expense No.", "Entry No.");
                                                                        ExpenseLine.SETRANGE("Expense No.", "Expense No.");
                                                                        ExpenseLine.SETFILTER("Entry No.", '<>%1', "Entry No.");
                                                                        IF (ExpenseLine.ISEMPTY()) THEN BEGIN
                                                                          ExpenseHeader."Starting Date" := "Week Start Date";
                                                                          ExpenseHeader."Ending date" := "Week End Date";
                                                                          ExpenseHeader.MODIFY();
                                                                        END ELSE
                                                                          "Expense No." := '';
                                                                      END;
                                                                    END;
                                                                  END;
                                                                  IF ("Expense No." = '') THEN
                                                                    FindHeader();
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Expense Date;
                                                              ENG=Expense Date] }
    { 12  ;   ;Currency Code       ;Code10        ;TableRelation=Currency.Code;
                                                   OnValidate=VAR
                                                                CurrencyDate@1000000000 : Date;
                                                                CurrExchRate@1000000001 : Record 330;
                                                              BEGIN
                                                                IF "Currency Code" <> '' THEN BEGIN
                                                                  IF "Expense Date" <> 0D THEN
                                                                    CurrencyDate := "Expense Date"
                                                                  ELSE
                                                                    CurrencyDate := WORKDATE;
                                                                  "Currency Factor" := CurrExchRate.ExchangeRate(CurrencyDate,"Currency Code");
                                                                END ELSE
                                                                  "Currency Factor" := 0;
                                                              END;

                                                   CaptionML=[ENU=Currency Code;
                                                              ENG=Currency Code] }
    { 13  ;   ;Currency Factor     ;Decimal       ;OnValidate=BEGIN
                                                                IF "Currency Factor" <> xRec."Currency Factor" THEN
                                                                  "Currency Factor" := xRec."Currency Factor";
                                                              END;

                                                   CaptionML=[ENU=Currency Factor;
                                                              ENG=Currency Factor] }
    { 14  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              ENG=Description] }
    { 15  ;   ;Status              ;Option        ;CaptionML=[ENU=Status;
                                                              ENG=Status];
                                                   OptionCaptionML=[ENU=Unprocessed,Processed;
                                                                    ENG=Unprocessed,Processed];
                                                   OptionString=Unprocessed,Processed }
    { 16  ;   ;Week Start Date     ;Date          ;CaptionML=[ENU=Week Start Date;
                                                              ENG=Week Start Date] }
    { 17  ;   ;Week End Date       ;Date          ;CaptionML=[ENU=Week End Date;
                                                              ENG=Week End Date] }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
    {    ;Expense No.,Entry No.                    }
  }
  FIELDGROUPS
  {
    { 1   ;Brick               ;Day,Description,Amount                   }
  }
  CODE
  {
    VAR
      ExpenseHeader@1000000001 : Record 9062759;
      ExpensesLine@1000000000 : Record 9062760;
      errWeekDate@1000000002 : TextConst 'ENU=Entered date (%1) must be between %2 and %3.;ENG=Entered date (%1) must be between %2 and %3.';

    PROCEDURE InitRecord@1000000000();
    BEGIN
      Rec.VALIDATE("User ID", USERID);
      Rec.VALIDATE(Day, DATE2DWY(TODAY, 1));
    END;

    LOCAL PROCEDURE FindHeader@1000000001();
    BEGIN
      IF ("Expense No." = '') THEN BEGIN
        ExpenseHeader.SETRANGE("Starting Date", "Week Start Date");
        ExpenseHeader.SETRANGE("Ending date", "Week End Date");
        ExpenseHeader.SETRANGE("User ID", Rec."User ID");
        ExpenseHeader.SETRANGE("Processing Status", ExpenseHeader."Processing Status"::Unprocessed);
        IF (NOT(ExpenseHeader.FINDFIRST())) THEN BEGIN
          ExpenseHeader.INIT();
          ExpenseHeader."No." := '';
          ExpenseHeader."Starting Date" := "Week Start Date";
          ExpenseHeader."Ending date" := "Week End Date";
          ExpenseHeader."User ID" := "User ID";
          ExpenseHeader.INSERT(TRUE);
        END;
        "Expense No." := ExpenseHeader."No.";
      END;
    END;

    LOCAL PROCEDURE CanChangeWeek@1000000002() : Boolean;
    BEGIN
      EXIT(FALSE);
    END;

    BEGIN
    {
      //DOC NA2015.1  ?? 30/05/2014 - Created
      //DOC NA2016.10 AZ 07/10/2015 - Upgraded to 2016, code changes
      //DOC NA2016.14 ?? 02/03/2016 - Fixes
      //DOC NA2016.15 JH 15/04/2016 - CfMD amendments
    }
    END.
  }
}

