OBJECT Codeunit 79 Sales-Post and Send
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    TableNo=36;
    OnRun=BEGIN
            SalesHeader.COPY(Rec);
            Code;
            Rec := SalesHeader;
          END;

  }
  CODE
  {
    VAR
      SalesHeader@1003 : Record 36;
      NotSupportedDocumentTypeErr@1012 : TextConst 'ENU=Document type %1 is not supported.;ENG=Document type %1 is not supported.';

    LOCAL PROCEDURE Code@2();
    VAR
      TempDocumentSendingProfile@1004 : TEMPORARY Record 60;
      SalesPost@1002 : Codeunit 80;
      ReportDistributionManagement@1005 : Codeunit 452;
      PostedDocumentVariant@1003 : Variant;
    BEGIN
      WITH SalesHeader DO
        CASE "Document Type" OF
          "Document Type"::Invoice,
          "Document Type"::"Credit Memo":
            IF NOT ConfirmPostAndSend(SalesHeader,TempDocumentSendingProfile) THEN
              EXIT;
          ELSE
            ERROR(STRSUBSTNO(NotSupportedDocumentTypeErr,"Document Type"));
        END;

      ValidateElectronicFormats(TempDocumentSendingProfile);

      CODEUNIT.RUN(CODEUNIT::"Sales-Post",SalesHeader);
      COMMIT;

      SalesPost.GetPostedDocumentRecord(SalesHeader,PostedDocumentVariant);
      ReportDistributionManagement.SendDocumentReport(TempDocumentSendingProfile,PostedDocumentVariant);
    END;

    LOCAL PROCEDURE ConfirmPostAndSend@5(SalesHeader@1000 : Record 36;VAR TempDocumentSendingProfile@1001 : TEMPORARY Record 60) : Boolean;
    VAR
      Customer@1004 : Record 18;
      DocumentSendingProfile@1002 : Record 60;
    BEGIN
      Customer.GET(SalesHeader."Bill-to Customer No.");
      IF NOT DocumentSendingProfile.GET(Customer."Document Sending Profile") THEN
        DocumentSendingProfile.GetDefault(DocumentSendingProfile);

      COMMIT;
      TempDocumentSendingProfile.COPY(DocumentSendingProfile);
      TempDocumentSendingProfile.SetDocumentUsage(SalesHeader);
      TempDocumentSendingProfile.INSERT;
      IF PAGE.RUNMODAL(PAGE::"Post and Send Confirmation",TempDocumentSendingProfile) <> ACTION::Yes THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    LOCAL PROCEDURE ValidateElectronicFormats@3(DocumentSendingProfile@1000 : Record 60);
    VAR
      ElectronicDocumentFormat@1001 : Record 61;
      DocExchServiceMgt@1002 : Codeunit 1410;
    BEGIN
      IF (DocumentSendingProfile."E-Mail" <> DocumentSendingProfile."E-Mail"::No) AND
         (DocumentSendingProfile."E-Mail Attachment" <> DocumentSendingProfile."E-Mail Attachment"::PDF)
      THEN BEGIN
        ElectronicDocumentFormat.ValidateElectronicFormat(DocumentSendingProfile."E-Mail Format");
        ElectronicDocumentFormat.ValidateElectronicSalesDocument(SalesHeader,DocumentSendingProfile."E-Mail Format");
      END;

      IF (DocumentSendingProfile.Disk <> DocumentSendingProfile.Disk::No) AND
         (DocumentSendingProfile.Disk <> DocumentSendingProfile.Disk::PDF)
      THEN BEGIN
        ElectronicDocumentFormat.ValidateElectronicFormat(DocumentSendingProfile."Disk Format");
        ElectronicDocumentFormat.ValidateElectronicSalesDocument(SalesHeader,DocumentSendingProfile."Disk Format");
      END;

      IF DocumentSendingProfile."Electronic Document" <> DocumentSendingProfile."Electronic Document"::No THEN BEGIN
        DocExchServiceMgt.CheckServiceEnabled;
        ElectronicDocumentFormat.ValidateElectronicFormat(DocumentSendingProfile."Electronic Format");
        ElectronicDocumentFormat.ValidateElectronicSalesDocument(SalesHeader,DocumentSendingProfile."Electronic Format");
      END;
    END;

    BEGIN
    END.
  }
}

