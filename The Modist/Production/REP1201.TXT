OBJECT Report 1201 Post Direct Debit Collection
{
  OBJECT-PROPERTIES
  {
    Date=09/09/14;
    Time=12:00:00 PM;
    Version List=NAVW18.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Post Direct Debit Collection;
               ENG=Post Direct Debit Collection];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  GenJnlBatch.GET(GeneralJournalTemplateName,GeneralJournalBatchName);
                  GenJnlLine.SETRANGE("Journal Template Name",GeneralJournalTemplateName);
                  GenJnlLine.SETRANGE("Journal Batch Name",GeneralJournalBatchName);
                  IF GenJnlLine.FINDLAST THEN;
                  LastLineNo := GenJnlLine."Line No.";
                END;

    OnPostReport=BEGIN
                   Window.CLOSE;
                   IF CreateJnlOnly THEN
                     MESSAGE(JnlCreatedMsg,TotalCount - SkippedCount,SkippedCount)
                   ELSE
                     MESSAGE(PostedMsg,TotalCount - SkippedCount,SkippedCount);

                   IF SkippedCount = 0 THEN BEGIN
                     DirectDebitCollection.GET(DirectDebitCollectionNo);
                     DirectDebitCollection.Status := DirectDebitCollection.Status::Posted;
                     DirectDebitCollection.MODIFY;
                   END;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table1208;
               DataItemTableView=SORTING(Direct Debit Collection No.,Entry No.);
               OnPreDataItem=BEGIN
                               SETRANGE("Direct Debit Collection No.",DirectDebitCollectionNo);
                               SETRANGE(Status,Status::"File Created");
                               TotalCount := COUNT;
                               Window.OPEN(ProgressMsg);
                             END;

               OnAfterGetRecord=BEGIN
                                  CurrCount += 1;
                                  Window.UPDATE(1,CurrCount * 10000 DIV TotalCount);
                                  IF CreateJnlLine("Direct Debit Collection Entry") THEN BEGIN
                                    Status := Status::Posted;
                                    MODIFY;
                                  END ELSE
                                    SkippedCount += 1;
                                END;
                                 }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   IF DirectDebitCollectionNo <> 0 THEN
                     IF DirectDebitCollection.GET(DirectDebitCollectionNo) THEN;
                 END;

    }
    CONTROLS
    {
      { 1   ;    ;Container ;
                  CaptionML=[ENU=Options;
                             ENG=Options];
                  ContainerType=ContentArea }

      { 3   ;1   ;Field     ;
                  CaptionML=[ENU=Direct Debit Collection No.;
                             ENG=Direct Debit Collection No.];
                  SourceExpr=DirectDebitCollectionNo;
                  TableRelation="Direct Debit Collection";
                  OnValidate=BEGIN
                               DirectDebitCollection.GET(DirectDebitCollectionNo);
                               DirectDebitCollection.TESTFIELD(Status,DirectDebitCollection.Status::"File Created");
                             END;

                  OnLookup=VAR
                             DirectDebitCollections@1000 : Page 1207;
                           BEGIN
                             DirectDebitCollection.SETRANGE(Status,DirectDebitCollection.Status::"File Created");
                             IF DirectDebitCollectionNo = 0 THEN
                               DirectDebitCollection.FINDLAST
                             ELSE
                               IF DirectDebitCollection.GET(DirectDebitCollectionNo) THEN;
                             DirectDebitCollections.LOOKUPMODE := TRUE;
                             DirectDebitCollections.SETRECORD(DirectDebitCollection);
                             DirectDebitCollections.SETTABLEVIEW(DirectDebitCollection);
                             IF DirectDebitCollections.RUNMODAL = ACTION::LookupOK THEN BEGIN
                               DirectDebitCollections.GETRECORD(DirectDebitCollection);
                               DirectDebitCollectionNo := DirectDebitCollection."No.";
                             END;
                           END;
                            }

      { 5   ;1   ;Field     ;
                  CaptionML=[ENU=Identifier;
                             ENG=Identifier];
                  SourceExpr=DirectDebitCollection.Identifier;
                  Editable=FALSE }

      { 6   ;1   ;Field     ;
                  CaptionML=[ENU=Status;
                             ENG=Status];
                  SourceExpr=DirectDebitCollection.Status;
                  Editable=FALSE }

      { 7   ;1   ;Field     ;
                  CaptionML=[ENU=Bank Account No.;
                             ENG=Bank Account No.];
                  SourceExpr=DirectDebitCollection."To Bank Account No.";
                  Editable=FALSE }

      { 4   ;1   ;Field     ;
                  CaptionML=[ENU=General Journal Template;
                             ENG=General Journal Template];
                  SourceExpr=GeneralJournalTemplateName;
                  TableRelation="Gen. Journal Template";
                  OnValidate=VAR
                               GenJournalTemplate@1001 : Record 80;
                             BEGIN
                               IF GeneralJournalTemplateName = '' THEN BEGIN
                                 GeneralJournalBatchName := '';
                                 EXIT;
                               END;
                               GenJournalTemplate.GET(GeneralJournalTemplateName);
                               IF NOT (GenJournalTemplate.Type IN
                                       [GenJournalTemplate.Type::General,GenJournalTemplate.Type::Purchases,GenJournalTemplate.Type::Payments,
                                        GenJournalTemplate.Type::Sales,GenJournalTemplate.Type::"Cash Receipts"])
                               THEN
                                 ERROR(
                                   TemplateTypeErr,
                                   GenJournalTemplate.Type::General,GenJournalTemplate.Type::Purchases,GenJournalTemplate.Type::Payments,
                                   GenJournalTemplate.Type::Sales,GenJournalTemplate.Type::"Cash Receipts");

                               GenJournalTemplate.TESTFIELD("No. Series");
                             END;
                              }

      { 2   ;1   ;Field     ;
                  CaptionML=[ENU=General Journal Batch;
                             ENG=General Journal Batch];
                  SourceExpr=GeneralJournalBatchName;
                  TableRelation="Gen. Journal Batch";
                  OnValidate=VAR
                               GenJournalBatch@1000 : Record 232;
                             BEGIN
                               GenJournalBatch.GET(GeneralJournalTemplateName,GeneralJournalBatchName);
                               GenJournalBatch.TESTFIELD(Recurring,FALSE);
                               GenJournalBatch.TESTFIELD("No. Series");
                             END;

                  OnLookup=VAR
                             GenJournalBatch@1000 : Record 232;
                             GeneralJournalBatches@1001 : Page 251;
                           BEGIN
                             GenJournalBatch.SETRANGE("Journal Template Name",GeneralJournalTemplateName);
                             GeneralJournalBatches.SETTABLEVIEW(GenJournalBatch);
                             IF GeneralJournalBatches.RUNMODAL = ACTION::OK THEN BEGIN
                               GeneralJournalBatches.GETRECORD(GenJournalBatch);
                               GeneralJournalBatchName := GenJournalBatch.Name;
                             END;
                           END;
                            }

      { 8   ;1   ;Field     ;
                  CaptionML=[ENU=Create Journal Only;
                             ENG=Create Journal Only];
                  SourceExpr=CreateJnlOnly }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      TemplateTypeErr@1000 : TextConst '@@@="%1..5 lists Type=General,Purchases,Payments,Sales,Cash Receipts";ENU=Only General Journal templates of type %1, %2, %3, %4, or %5 are allowed.;ENG=Only General Journal templates of type %1, %2, %3, %4, or %5 are allowed.';
      DirectDebitCollection@1004 : Record 1207;
      GenJnlLine@1006 : Record 81;
      GenJnlBatch@1017 : Record 232;
      GenJnlPostLine@1018 : Codeunit 12;
      DimMgt@1009 : Codeunit 408;
      Window@1013 : Dialog;
      DirectDebitCollectionNo@1003 : Integer;
      GeneralJournalTemplateName@1001 : Code[10];
      GeneralJournalBatchName@1002 : Code[10];
      LastLineNo@1005 : Integer;
      PostingTxt@1007 : TextConst '@@@="%1=Doc. type, %2=Doc. No. E.g. Invoice 234 Direct Debit";ENU=%1 %2 Direct Debit;ENG=%1 %2 Direct Debit';
      CreateJnlOnly@1008 : Boolean;
      TotalCount@1010 : Integer;
      CurrCount@1011 : Integer;
      ProgressMsg@1012 : TextConst 'ENU=#1##################;ENG=#1##################';
      JnlCreatedMsg@1014 : TextConst '@@@=%1 and %2 are both numbers / count.;ENU=%1 journal lines were created. %2 lines were skipped.;ENG=%1 journal lines were created. %2 lines were skipped.';
      PostedMsg@1015 : TextConst '@@@=%1 and %2 are both numbers / count.;ENU=%1 payments were posted. %2 lines were skipped.;ENG=%1 payments were posted. %2 lines were skipped.';
      SkippedCount@1016 : Integer;

    PROCEDURE SetCollectionEntry@4(NewCollectionEntry@1000 : Integer);
    BEGIN
      DirectDebitCollectionNo := NewCollectionEntry;
      DirectDebitCollection.GET(DirectDebitCollectionNo);
    END;

    PROCEDURE SetJnlBatch@1(NewGenJnlTemplateName@1000 : Code[10];NewGenJnlBachName@1001 : Code[10]);
    BEGIN
      GeneralJournalTemplateName := NewGenJnlTemplateName;
      GeneralJournalBatchName := NewGenJnlBachName;
      CurrReport.USEREQUESTPAGE := FALSE;
    END;

    PROCEDURE SetCreateJnlOnly@2(NewCreateJnlOnly@1000 : Boolean);
    BEGIN
      CreateJnlOnly := NewCreateJnlOnly;
    END;

    LOCAL PROCEDURE CreateJnlLine@3(VAR DirectDebitCollectionEntry@1000 : Record 1208) : Boolean;
    VAR
      CustLedgEntry@1001 : Record 21;
      NoSeriesMgt@1003 : Codeunit 396;
      DimensionSetIDArr@1002 : ARRAY [10] OF Integer;
    BEGIN
      CustLedgEntry.GET(DirectDebitCollectionEntry."Applies-to Entry No.");
      CustLedgEntry.CALCFIELDS("Remaining Amount");
      IF NOT CustLedgEntry.Open OR (CustLedgEntry."Remaining Amount" < DirectDebitCollectionEntry."Transfer Amount") THEN
        EXIT(FALSE);

      LastLineNo += 10000;
      GenJnlLine."Journal Template Name" := GeneralJournalTemplateName;
      GenJnlLine."Journal Batch Name" := GeneralJournalBatchName;
      GenJnlLine."Line No." := LastLineNo;
      IF GenJnlBatch."No. Series" <> '' THEN
        GenJnlLine."Document No." := NoSeriesMgt.GetNextNo(GenJnlBatch."No. Series",GenJnlLine."Posting Date",TRUE);
      GenJnlLine.VALIDATE("Document Type",GenJnlLine."Document Type"::Payment);
      GenJnlLine.VALIDATE("Account Type",GenJnlLine."Account Type"::Customer);
      GenJnlLine.VALIDATE("Account No.",DirectDebitCollectionEntry."Customer No.");
      GenJnlLine.VALIDATE("Bal. Account Type",GenJnlLine."Bal. Account Type"::"Bank Account");
      GenJnlLine.VALIDATE("Bal. Account No.",DirectDebitCollection."To Bank Account No.");
      DimensionSetIDArr[1] := GenJnlLine."Dimension Set ID";
      DimensionSetIDArr[2] := CustLedgEntry."Dimension Set ID";
      GenJnlLine."Dimension Set ID" :=
        DimMgt.GetCombinedDimensionSetID(
          DimensionSetIDArr,GenJnlLine."Shortcut Dimension 1 Code",GenJnlLine."Shortcut Dimension 2 Code");

      GenJnlLine.VALIDATE("Posting Date",DirectDebitCollectionEntry."Transfer Date");
      GenJnlLine.Description :=
        COPYSTR(
          STRSUBSTNO(
            PostingTxt,CustLedgEntry."Document Type",CustLedgEntry."Document No."),1,MAXSTRLEN(GenJnlLine.Description));
      GenJnlLine.VALIDATE("Currency Code",CustLedgEntry."Currency Code");
      GenJnlLine.VALIDATE(Amount,-DirectDebitCollectionEntry."Transfer Amount");
      GenJnlLine."Applies-to Doc. Type" := CustLedgEntry."Document Type";
      GenJnlLine.VALIDATE("Applies-to Doc. No.",CustLedgEntry."Document No.");
      IF CreateJnlOnly THEN
        GenJnlLine.INSERT(TRUE)
      ELSE
        GenJnlPostLine.RunWithCheck(GenJnlLine);
      EXIT(TRUE);
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

