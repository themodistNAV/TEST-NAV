OBJECT Codeunit 1322 Correct PstdSalesInv (Yes/No)
{
  OBJECT-PROPERTIES
  {
    Date=09/09/14;
    Time=12:00:00 PM;
    Version List=NAVW18.00;
  }
  PROPERTIES
  {
    TableNo=112;
    Permissions=TableData 112=rm,
                TableData 114=rm;
    OnRun=BEGIN
            CorrectInvoice(Rec);
          END;

  }
  CODE
  {
    VAR
      CorrectPostedInvoiceQst@1000 : TextConst 'ENU=The posted sales invoice will be canceled, and a new version of the sales invoice will be created so that you can make the correction.\ \Do you want to continue?;ENG=The posted sales invoice will be cancelled, and a new version of the sales invoice will be created so that you can make the correction.\ \Do you want to continue?';
      CorrectIfContainingJobQst@1003 : TextConst 'ENU=The sales invoice contains lines that are related to a job. The job information on these lines will not be transferred to the new sales invoice that is created when you choose Correct.\\To ensure that job information is available on a corrected sales invoice, you must first use the Create Sales Credit Memo action on the job planning line, and then use the Create Job Sales Invoice action with updated job planning lines to create a new corrected sales invoice.\\;ENG=The sales invoice contains lines that are related to a job. The job information on these lines will not be transferred to the new sales invoice that is created when you choose Correct.\\To ensure that job information is available on a corrected sales invoice, you must first use the Create Sales Credit Memo action on the job planning line, and then use the Create Job Sales Invoice action with updated job planning lines to create a new corrected sales invoice.\\';

    PROCEDURE CorrectInvoice@1(VAR SalesInvoiceHeader@1002 : Record 112) : Boolean;
    VAR
      SalesHeader@1001 : Record 36;
      CorrectPostedSalesInvoice@1000 : Codeunit 1303;
    BEGIN
      CorrectPostedSalesInvoice.TestCorrectInvoiceIsAllowed(SalesInvoiceHeader,FALSE);
      IF CONFIRM(CreateConfirmQuestion(SalesInvoiceHeader)) THEN BEGIN
        CorrectPostedSalesInvoice.CancelPostedInvoiceStartNewInvoice(SalesInvoiceHeader,SalesHeader);
        PAGE.RUN(PAGE::"Mini Sales Invoice",SalesHeader);
        EXIT(TRUE);
      END;

      EXIT(FALSE);
    END;

    LOCAL PROCEDURE CreateConfirmQuestion@2(SalesInvoiceHeader@1002 : Record 112) : Text;
    BEGIN
      IF SalesLinesContainsJob(SalesInvoiceHeader) THEN
        EXIT(CorrectIfContainingJobQst + CorrectPostedInvoiceQst);

      EXIT(CorrectPostedInvoiceQst);
    END;

    LOCAL PROCEDURE SalesLinesContainsJob@30(SalesInvoiceHeader@1001 : Record 112) : Boolean;
    VAR
      SalesInvoiceLine@1002 : Record 113;
    BEGIN
      SalesInvoiceLine.SETRANGE("Document No.",SalesInvoiceHeader."No.");
      IF SalesInvoiceLine.FIND('-') THEN
        REPEAT
          IF SalesInvoiceLine."Job No." <> '' THEN
            EXIT(TRUE);
        UNTIL SalesInvoiceLine.NEXT = 0;

      EXIT(FALSE);
    END;

    BEGIN
    END.
  }
}

