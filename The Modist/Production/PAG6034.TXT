OBJECT Page 6034 Service Credit Memo Statistics
{
  OBJECT-PROPERTIES
  {
    Date=23/09/13;
    Time=12:00:00 PM;
    Version List=NAVW17.10;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[ENU=Service Credit Memo Statistics;
               ENG=Service Credit Memo Statistics];
    LinksAllowed=No;
    SourceTable=Table5994;
    PageType=ListPlus;
    OnAfterGetRecord=VAR
                       CostCalcMgt@1000 : Codeunit 5836;
                     BEGIN
                       CLEARALL;

                       IF "Currency Code" = '' THEN
                         Currency.InitRoundingPrecision
                       ELSE
                         Currency.GET("Currency Code");

                       ServCrMemoLine.SETRANGE("Document No.","No.");

                       IF ServCrMemoLine.FIND('-') THEN
                         REPEAT
                           CustAmount := CustAmount + ServCrMemoLine.Amount;
                           AmountInclVAT := AmountInclVAT + ServCrMemoLine."Amount Including VAT";
                           IF "Prices Including VAT" THEN
                             InvDiscAmount := InvDiscAmount + ServCrMemoLine."Inv. Discount Amount" / (1 + ServCrMemoLine."VAT %" / 100)
                           ELSE
                             InvDiscAmount := InvDiscAmount + ServCrMemoLine."Inv. Discount Amount";
                           CostLCY := CostLCY + (ServCrMemoLine.Quantity * ServCrMemoLine."Unit Cost (LCY)");
                           LineQty := LineQty + ServCrMemoLine.Quantity;
                           TotalNetWeight := TotalNetWeight + (ServCrMemoLine.Quantity * ServCrMemoLine."Net Weight");
                           TotalGrossWeight := TotalGrossWeight + (ServCrMemoLine.Quantity * ServCrMemoLine."Gross Weight");
                           TotalVolume := TotalVolume + (ServCrMemoLine.Quantity * ServCrMemoLine."Unit Volume");
                           IF ServCrMemoLine."Units per Parcel" > 0 THEN
                             TotalParcels := TotalParcels + ROUND(ServCrMemoLine.Quantity / ServCrMemoLine."Units per Parcel",1,'>');
                           IF ServCrMemoLine."VAT %" <> VATpercentage THEN
                             IF VATpercentage = 0 THEN
                               VATpercentage := ServCrMemoLine."VAT %"
                             ELSE
                               VATpercentage := -1;
                           TotalAdjCostLCY := TotalAdjCostLCY + CostCalcMgt.CalcServCrMemoLineCostLCY(ServCrMemoLine);
                         UNTIL ServCrMemoLine.NEXT = 0;
                       VATAmount := AmountInclVAT - CustAmount;
                       InvDiscAmount := ROUND(InvDiscAmount,Currency."Amount Rounding Precision");

                       IF VATpercentage <= 0 THEN
                         VATAmountText := Text000
                       ELSE
                         VATAmountText := STRSUBSTNO(Text001,VATpercentage);

                       IF "Currency Code" = '' THEN
                         AmountLCY := CustAmount
                       ELSE
                         AmountLCY :=
                           CurrExchRate.ExchangeAmtFCYToLCY(
                             WORKDATE,"Currency Code",CustAmount,"Currency Factor");

                       ProfitLCY := AmountLCY - CostLCY;
                       IF AmountLCY <> 0 THEN
                         ProfitPct := ROUND(100 * ProfitLCY / AmountLCY,0.1);

                       AdjProfitLCY := AmountLCY - TotalAdjCostLCY;
                       IF AmountLCY <> 0 THEN
                         AdjProfitPct := ROUND(100 * AdjProfitLCY / AmountLCY,0.1);

                       IF Cust.GET("Bill-to Customer No.") THEN
                         Cust.CALCFIELDS("Balance (LCY)")
                       ELSE
                         CLEAR(Cust);

                       CASE TRUE OF
                         Cust."Credit Limit (LCY)" = 0:
                           CreditLimitLCYExpendedPct := 0;
                         Cust."Balance (LCY)" / Cust."Credit Limit (LCY)" < 0:
                           CreditLimitLCYExpendedPct := 0;
                         Cust."Balance (LCY)" / Cust."Credit Limit (LCY)" > 1:
                           CreditLimitLCYExpendedPct := 10000;
                         ELSE
                           CreditLimitLCYExpendedPct := ROUND(Cust."Balance (LCY)" / Cust."Credit Limit (LCY)" * 10000,1);
                       END;

                       ServCrMemoLine.CalcVATAmountLines(Rec,TempVATAmountLine);
                       CurrPage.Subform.PAGE.SetTempVATAmountLine(TempVATAmountLine);
                       CurrPage.Subform.PAGE.InitGlobals("Currency Code",FALSE,FALSE,FALSE,FALSE,"VAT Base Discount %");
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 35  ;1   ;Group     ;
                CaptionML=[ENU=General;
                           ENG=General] }

    { 2   ;2   ;Field     ;
                Name=Amount;
                CaptionML=[ENU=Amount;
                           ENG=Amount];
                SourceExpr=CustAmount + InvDiscAmount;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code" }

    { 6   ;2   ;Field     ;
                CaptionML=[ENU=Inv. Discount Amount;
                           ENG=Inv. Discount Amount];
                SourceExpr=InvDiscAmount;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code" }

    { 12  ;2   ;Field     ;
                CaptionML=[ENU=Total;
                           ENG=Total];
                SourceExpr=CustAmount;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code" }

    { 16  ;2   ;Field     ;
                CaptionML=[ENU=VAT Amount;
                           ENG=VAT Amount];
                SourceExpr=VATAmount;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=FORMAT(VATAmountText) }

    { 20  ;2   ;Field     ;
                CaptionML=[ENU=Total Incl. VAT;
                           ENG=Total Incl. VAT];
                SourceExpr=AmountInclVAT;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code" }

    { 26  ;2   ;Field     ;
                CaptionML=[ENU=Sales (LCY);
                           ENG=Sales (LCY)];
                SourceExpr=AmountLCY;
                AutoFormatType=1 }

    { 30  ;2   ;Field     ;
                CaptionML=[ENU=Original Profit (LCY);
                           ENG=Original Profit (LCY)];
                SourceExpr=ProfitLCY;
                AutoFormatType=1 }

    { 36  ;2   ;Field     ;
                CaptionML=[ENU=Adjusted Profit (LCY);
                           ENG=Adjusted Profit (LCY)];
                SourceExpr=AdjProfitLCY;
                AutoFormatType=1 }

    { 32  ;2   ;Field     ;
                CaptionML=[ENU=Original Profit %;
                           ENG=Original Profit %];
                DecimalPlaces=1:1;
                SourceExpr=ProfitPct }

    { 39  ;2   ;Field     ;
                CaptionML=[ENU=Adjusted Profit %;
                           ENG=Adjusted Profit %];
                DecimalPlaces=1:1;
                SourceExpr=AdjProfitPct }

    { 3   ;2   ;Field     ;
                CaptionML=[ENU=Quantity;
                           ENG=Quantity];
                DecimalPlaces=0:5;
                SourceExpr=LineQty }

    { 13  ;2   ;Field     ;
                CaptionML=[ENU=Parcels;
                           ENG=Parcels];
                DecimalPlaces=0:5;
                SourceExpr=TotalParcels }

    { 7   ;2   ;Field     ;
                CaptionML=[ENU=Net Weight;
                           ENG=Net Weight];
                DecimalPlaces=0:5;
                SourceExpr=TotalNetWeight }

    { 10  ;2   ;Field     ;
                CaptionML=[ENU=Gross Weight;
                           ENG=Gross Weight];
                DecimalPlaces=0:5;
                SourceExpr=TotalGrossWeight }

    { 17  ;2   ;Field     ;
                CaptionML=[ENU=Volume;
                           ENG=Volume];
                DecimalPlaces=0:5;
                SourceExpr=TotalVolume }

    { 28  ;2   ;Field     ;
                CaptionML=[ENU=Original Cost (LCY);
                           ENG=Original Cost (LCY)];
                SourceExpr=CostLCY;
                AutoFormatType=1 }

    { 43  ;2   ;Field     ;
                CaptionML=[ENU=Adjusted Cost (LCY);
                           ENG=Adjusted Cost (LCY)];
                SourceExpr=TotalAdjCostLCY;
                AutoFormatType=1 }

    { 41  ;2   ;Field     ;
                Name=CostAdjmtAmountLCY;
                CaptionML=[ENU=Cost Adjmt. Amount (LCY);
                           ENG=Cost Adjmt. Amount (LCY)];
                SourceExpr=TotalAdjCostLCY - CostLCY;
                AutoFormatType=1;
                OnLookup=BEGIN
                           LookupAdjmtValueEntries;
                         END;
                          }

    { 18  ;1   ;Part      ;
                Name=Subform;
                PagePartID=Page576;
                Editable=FALSE }

    { 1903289601;1;Group  ;
                CaptionML=[ENU=Customer;
                           ENG=Customer] }

    { 24  ;2   ;Field     ;
                CaptionML=[ENU=Balance (LCY);
                           ENG=Balance (LCY)];
                SourceExpr=Cust."Balance (LCY)";
                AutoFormatType=1 }

    { 21  ;2   ;Field     ;
                Name=CreditLimitLCY;
                CaptionML=[ENU=Credit Limit (LCY);
                           ENG=Credit Limit (LCY)];
                SourceExpr=Cust."Credit Limit (LCY)";
                AutoFormatType=1 }

    { 1   ;2   ;Field     ;
                ExtendedDatatype=Ratio;
                CaptionML=[ENU=Expended % of Credit Limit (LCY);
                           ENG=Expended % of Credit Limit (LCY)];
                ToolTipML=[ENU=Expended % of Credit Limit (LCY);
                           ENG=Expended % of Credit Limit (LCY)];
                SourceExpr=CreditLimitLCYExpendedPct }

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=VAT Amount;ENG=VAT Amount';
      Text001@1001 : TextConst 'ENU=%1% VAT;ENG=%1% VAT';
      CurrExchRate@1002 : Record 330;
      ServCrMemoLine@1003 : Record 5995;
      Cust@1004 : Record 18;
      TempVATAmountLine@1005 : TEMPORARY Record 290;
      Currency@1022 : Record 4;
      CustAmount@1006 : Decimal;
      AmountInclVAT@1007 : Decimal;
      InvDiscAmount@1008 : Decimal;
      VATAmount@1009 : Decimal;
      CostLCY@1010 : Decimal;
      ProfitLCY@1011 : Decimal;
      ProfitPct@1012 : Decimal;
      AdjProfitLCY@1024 : Decimal;
      AdjProfitPct@1023 : Decimal;
      TotalAdjCostLCY@1025 : Decimal;
      LineQty@1013 : Decimal;
      TotalNetWeight@1014 : Decimal;
      TotalGrossWeight@1015 : Decimal;
      TotalVolume@1016 : Decimal;
      TotalParcels@1017 : Decimal;
      AmountLCY@1018 : Decimal;
      CreditLimitLCYExpendedPct@1019 : Decimal;
      VATpercentage@1020 : Decimal;
      VATAmountText@1021 : Text[30];

    BEGIN
    END.
  }
}

