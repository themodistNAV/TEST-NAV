OBJECT Page 588 XBRL Schemas
{
  OBJECT-PROPERTIES
  {
    Date=07/09/12;
    Time=12:00:00 PM;
    Version List=NAVW17.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=XBRL Schemas;
               ENG=XBRL Schemas];
    SourceTable=Table399;
    DataCaptionFields=XBRL Taxonomy Name;
    PageType=List;
    AutoSplitKey=Yes;
    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 11      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Schema;
                                 ENG=&Schema];
                      Image=Template }
      { 12      ;2   ;Action    ;
                      CaptionML=[ENU=Linkbases;
                                 ENG=Linkbases];
                      RunObject=Page 589;
                      RunPageLink=XBRL Taxonomy Name=FIELD(XBRL Taxonomy Name),
                                  XBRL Schema Line No.=FIELD(Line No.);
                      Promoted=Yes;
                      Image=LinkWithExisting;
                      PromotedCategory=Process }
      { 13      ;2   ;Separator  }
      { 14      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Import;
                                 ENG=Import];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Import;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 XMLExists@1000 : Boolean;
                                 FileName@1002 : Text;
                                 i@1003 : Integer;
                               BEGIN
                                 CALCFIELDS(XSD);
                                 XMLExists := XSD.HASVALUE;
                                 FileName := FileMgt.BLOBImport(TempBlob,'*.xsd');
                                 IF FileName = '' THEN
                                   EXIT;
                                 XSD := TempBlob.Blob;
                                 IF XMLExists THEN
                                   IF NOT CONFIRM(Text001,FALSE) THEN
                                     EXIT;
                                 IF STRPOS(FileName,'\') <> 0 THEN BEGIN
                                   i := STRLEN(FileName);
                                   WHILE (i > 0) AND (FileName[i] <> '\') DO
                                     i := i - 1;
                                 END;
                                 IF i > 0 THEN BEGIN
                                   schemaLocation := CONVERTSTR(COPYSTR(FileName,i + 1),' ','_');
                                   "Folder Name" := COPYSTR(FileName,1,i);
                                 END ELSE
                                   schemaLocation := CONVERTSTR(FileName,' ','_');
                                 CurrPage.SAVERECORD;
                                 CODEUNIT.RUN(CODEUNIT::"XBRL Import Taxonomy Spec. 2",Rec);
                               END;
                                }
      { 15      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=E&xport;
                                 ENG=E&xport];
                      Image=Export;
                      OnAction=BEGIN
                                 CALCFIELDS(XSD);
                                 IF XSD.HASVALUE THEN BEGIN
                                   TempBlob.Blob := XSD;
                                   FileMgt.BLOBExport(TempBlob,'*.xsd',TRUE);
                                 END;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                SourceExpr=Description }

    { 4   ;2   ;Field     ;
                SourceExpr=targetNamespace;
                Visible=FALSE }

    { 6   ;2   ;Field     ;
                SourceExpr=schemaLocation;
                Visible=FALSE }

    { 16  ;2   ;Field     ;
                CaptionML=[ENU=XSD File Imported;
                           ENG=XSD File Imported];
                SourceExpr=XSD.HASVALUE;
                Editable=FALSE }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      Text001@1000 : TextConst 'ENU=Do you want to replace the existing definition?;ENG=Do you want to replace the existing definition?';
      TempBlob@1001 : Record 99008535;
      FileMgt@1002 : Codeunit 419;

    BEGIN
    END.
  }
}

