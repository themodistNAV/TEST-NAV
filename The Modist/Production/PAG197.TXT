OBJECT Page 197 Acc. Sched. KPI Web Service
{
  OBJECT-PROPERTIES
  {
    Date=26/11/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00.00.43897;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[ENU=Account Schedule KPI Web Service;
               ENG=Account Schedule KPI Web Service];
    SourceTable=Table2000000026;
    PageType=List;
    OnOpenPage=BEGIN
                 InitSetupData;
                 FILTERGROUP(2);
                 SETRANGE(Number,0,NoOfLines - 1);
                 FILTERGROUP(0);
               END;

    OnAfterGetRecord=BEGIN
                       CalcValues;
                     END;

  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=Group;
                GroupType=Repeater }

    { 3   ;2   ;Field     ;
                SourceExpr=Number;
                Visible=FALSE }

    { 17  ;2   ;Field     ;
                CaptionML=[ENU=Date;
                           ENG=Date];
                SourceExpr=Date }

    { 16  ;2   ;Field     ;
                Name=Closed Period;
                CaptionML=[ENU=Closed Period;
                           ENG=Closed Period];
                SourceExpr=ClosedPeriod }

    { 13  ;2   ;Field     ;
                Name=Account Schedule Name;
                CaptionML=[ENU=Account Schedule Name;
                           ENG=Account Schedule Name];
                SourceExpr=AccScheduleName }

    { 18  ;2   ;Field     ;
                Name=KPI Code;
                CaptionML=[ENU=KPI Code;
                           ENG=KPI Code];
                SourceExpr=KPICode }

    { 4   ;2   ;Field     ;
                Name=KPI Name;
                CaptionML=[ENU=KPI Name;
                           ENG=KPI Name];
                SourceExpr=KPIName }

    { 5   ;2   ;Field     ;
                Name=Net Change Actual;
                CaptionML=[ENU=Net Change Actual;
                           ENG=Net Change Actual];
                SourceExpr=ColumnValue[1] }

    { 6   ;2   ;Field     ;
                Name=Balance at Date Actual;
                CaptionML=[ENU=Balance at Date Actual;
                           ENG=Balance at Date Actual];
                SourceExpr=ColumnValue[2] }

    { 7   ;2   ;Field     ;
                Name=Net Change Budget;
                CaptionML=[ENU=Net Change Budget;
                           ENG=Net Change Budget];
                SourceExpr=ColumnValue[3] }

    { 8   ;2   ;Field     ;
                Name=Balance at Date Budget;
                CaptionML=[ENU=Balance at Date Budget;
                           ENG=Balance at Date Budget];
                SourceExpr=ColumnValue[4] }

    { 9   ;2   ;Field     ;
                Name=Net Change Actual Last Year;
                CaptionML=[ENU=Net Change Actual Last Year;
                           ENG=Net Change Actual Last Year];
                SourceExpr=ColumnValue[5] }

    { 10  ;2   ;Field     ;
                Name=Balance at Date Actual Last Year;
                CaptionML=[ENU=Balance at Date Actual Last Year;
                           ENG=Balance at Date Actual Last Year];
                SourceExpr=ColumnValue[6] }

    { 11  ;2   ;Field     ;
                Name=Net Change Budget Last Year;
                CaptionML=[ENU=Net Change Budget Last Year;
                           ENG=Net Change Budget Last Year];
                SourceExpr=ColumnValue[7] }

    { 12  ;2   ;Field     ;
                Name=Balance at Date Budget Last Year;
                CaptionML=[ENU=Balance at Date Budget Last Year;
                           ENG=Balance at Date Budget Last Year];
                SourceExpr=ColumnValue[8] }

    { 15  ;2   ;Field     ;
                Name=Net Change Forecast;
                CaptionML=[ENU=Net Change Forecast;
                           ENG=Net Change Forecast];
                SourceExpr=ColumnValue[9] }

    { 14  ;2   ;Field     ;
                Name=Balance at Date Forecast;
                CaptionML=[ENU=Balance at Date Forecast;
                           ENG=Balance at Date Forecast];
                SourceExpr=ColumnValue[10] }

  }
  CODE
  {
    VAR
      AccSchedKPIWebSrvSetup@1002 : Record 135;
      TempAccScheduleLine@1003 : TEMPORARY Record 85;
      TempColumnLayout@1004 : TEMPORARY Record 334;
      AccSchedManagement@1014 : Codeunit 8;
      NoOfActiveAccSchedLines@1000 : Integer;
      NoOfLines@1005 : Integer;
      StartDate@1006 : Date;
      EndDate@1007 : Date;
      LastClosedDate@1009 : Date;
      AccScheduleName@1012 : Code[10];
      KPICode@1001 : Code[10];
      KPIName@1008 : Text;
      ColumnValue@1010 : ARRAY [10] OF Decimal;
      Date@1011 : Date;
      ClosedPeriod@1013 : Boolean;

    LOCAL PROCEDURE InitSetupData@1();
    VAR
      AccSchedKPIWebSrvLine@1004 : Record 136;
      AccScheduleLine@1000 : Record 85;
      ColumnLayout@1001 : Record 334;
      LogInManagement@1002 : Codeunit 40;
    BEGIN
      IF NOT GUIALLOWED THEN
        WORKDATE := LogInManagement.GetDefaultWorkDate;
      AccSchedKPIWebSrvSetup.GET;
      AccSchedKPIWebSrvSetup.TestValues;
      AccSchedKPIWebSrvLine.FINDSET;
      AccScheduleLine.SETRANGE(Show,AccScheduleLine.Show::Yes);
      AccScheduleLine.SETFILTER(Totaling,'<>%1','');
      REPEAT
        AccScheduleLine.SETRANGE("Schedule Name",AccSchedKPIWebSrvLine."Acc. Schedule Name");
        AccScheduleLine.FINDSET;
        REPEAT
          NoOfActiveAccSchedLines += 1;
          TempAccScheduleLine := AccScheduleLine;
          TempAccScheduleLine."Line No." := NoOfActiveAccSchedLines;
          TempAccScheduleLine.INSERT;
        UNTIL AccScheduleLine.NEXT = 0;
      UNTIL AccSchedKPIWebSrvLine.NEXT = 0;

      WITH ColumnLayout DO BEGIN
        // Net Change Actual
        InsertTempColumn("Column Type"::"Net Change","Ledger Entry Type"::Entries,FALSE);
        // Balance at Date Actual
        InsertTempColumn("Column Type"::"Balance at Date","Ledger Entry Type"::Entries,FALSE);
        // Net Change Budget
        InsertTempColumn("Column Type"::"Net Change","Ledger Entry Type"::"Budget Entries",FALSE);
        // Balance at Date Budget
        InsertTempColumn("Column Type"::"Balance at Date","Ledger Entry Type"::"Budget Entries",FALSE);
        // Net Change Actual Last Year
        InsertTempColumn("Column Type"::"Net Change","Ledger Entry Type"::Entries,TRUE);
        // Balance at Date Actual Last Year
        InsertTempColumn("Column Type"::"Balance at Date","Ledger Entry Type"::Entries,TRUE);
        // Net Change Budget Last Year
        InsertTempColumn("Column Type"::"Net Change","Ledger Entry Type"::"Budget Entries",TRUE);
        // Balance at Date Budget Last Year
        InsertTempColumn("Column Type"::"Balance at Date","Ledger Entry Type"::"Budget Entries",TRUE);
      END;

      AccSchedKPIWebSrvSetup.GetPeriodLength(NoOfLines,StartDate,EndDate);
      NoOfLines *= NoOfActiveAccSchedLines;
      LastClosedDate := AccSchedKPIWebSrvSetup.GetLastClosedAccDate;
    END;

    LOCAL PROCEDURE InsertTempColumn@9(ColumnType@1000 : Option;EntryType@1001 : Option;LastYear@1002 : Boolean);
    BEGIN
      WITH TempColumnLayout DO BEGIN
        IF FINDLAST THEN;
        INIT;
        "Line No." += 10000;
        "Column Type" := ColumnType;
        "Ledger Entry Type" := EntryType;
        IF LastYear THEN
          EVALUATE("Comparison Date Formula",'<-1Y>');
        INSERT;
      END;
    END;

    LOCAL PROCEDURE CalcValues@2();
    VAR
      ToDate@1000 : Date;
      ColNo@1001 : Integer;
    BEGIN
      Date := AccSchedKPIWebSrvSetup.CalcNextStartDate(StartDate,Number DIV NoOfActiveAccSchedLines);
      ToDate := AccSchedKPIWebSrvSetup.CalcNextStartDate(Date,1) - 1;
      TempAccScheduleLine.FINDSET;
      IF Number MOD NoOfActiveAccSchedLines > 0 THEN
        TempAccScheduleLine.NEXT(Number MOD NoOfActiveAccSchedLines);
      AccScheduleName := TempAccScheduleLine."Schedule Name";
      TempAccScheduleLine.SETRANGE("Date Filter",Date,ToDate);
      TempAccScheduleLine.SETRANGE("G/L Budget Filter",AccSchedKPIWebSrvSetup."G/L Budget Name");

      KPICode := TempAccScheduleLine."Row No.";
      KPIName := TempAccScheduleLine.Description;

      ColNo := 0;
      TempColumnLayout.FINDSET;
      REPEAT
        ColNo += 1;
        ColumnValue[ColNo] := AccSchedManagement.CalcCell(TempAccScheduleLine,TempColumnLayout,FALSE);
      UNTIL TempColumnLayout.NEXT = 0;

      ClosedPeriod := Date <= LastClosedDate;
      // Forecasted values
      WITH AccSchedKPIWebSrvSetup DO
        IF (("Forecasted Values Start" = "Forecasted Values Start"::"After Latest Closed Period") AND NOT ClosedPeriod) OR
           (("Forecasted Values Start" = "Forecasted Values Start"::"After Current Date") AND (Date > WORKDATE))
        THEN BEGIN
          ColumnValue[9] := ColumnValue[3]; // Net Change Budget
          ColumnValue[10] := ColumnValue[4]; // Balance at Date Budget
        END ELSE BEGIN
          ColumnValue[9] := ColumnValue[1]; // Net Change Actual
          ColumnValue[10] := ColumnValue[2]; // Balance at Date Actual
        END;
    END;

    BEGIN
    END.
  }
}

