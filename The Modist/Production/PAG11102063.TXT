OBJECT Page 11102063 OM - Action Import Worksheet
{
  OBJECT-PROPERTIES
  {
    Date=12/10/14;
    Time=12:00:00 PM;
    Version List=OMA9.04;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Action Import Worksheet;
               ENU=Action Import Worksheet;
               ESP=Action Import Worksheet;
               FRA=Action Import Worksheet;
               NLD=Actie importeerwerkblad;
               DEA=Action Import Worksheet];
    SaveValues=Yes;
    InsertAllowed=No;
    SourceTable=Table11102048;
    SourceTableView=SORTING(Type,No.);
    DataCaptionFields=Sub Type,Action Type;
    PageType=Worksheet;
    SourceTableTemporary=Yes;
    AutoSplitKey=Yes;
    OnAfterGetRecord=BEGIN
                       IF "Object No." = 0 THEN
                         ObjectNo := ''
                       ELSE
                         ObjectNo := FORMAT("Object No.");

                       IF "Into Table No." = 0 THEN
                         IntoTableNo := ''
                       ELSE
                         IntoTableNo := FORMAT("Into Table No.");
                     END;

    ActionList=ACTIONS
    {
      { 1       ;0   ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 2       ;1   ;ActionGroup;
                      CaptionML=[DEU=F&unctions;
                                 ENU=F&unctions;
                                 ESP=F&unctions;
                                 FRA=F&unctions;
                                 NLD=F&uncties;
                                 DEA=F&unctions] }
      { 3       ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[DEU=Copy to Action Worksheet;
                                 ENU=Copy to Action Worksheet;
                                 ESP=Copy to Action Worksheet;
                                 FRA=Copy to Action Worksheet;
                                 NLD=Naar actiewerkblad kopi‰ren;
                                 DEA=Copy to Action Worksheet];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Copy;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CopyToWorksheet(0, 0);
                               END;
                                }
      { 4       ;2   ;Separator  }
      { 5       ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[DEU=Copy to Project as Actions &Before;
                                 ENU=Copy to Project as Actions &Before;
                                 ESP=Copy to Project as Actions &Before;
                                 FRA=Copy to Project as Actions &Before;
                                 NLD=Kopi‰ren naar project als acties &vooraf;
                                 DEA=Copy to Project as Actions &Before];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=CopyWorksheet;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 Actions@1000 : Record 11102048;
                               BEGIN
                                 CopyToWorksheet(1, Actions."Sub Type"::Before);
                               END;
                                }
      { 6       ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[DEU=Copy to Project as Actions &After;
                                 ENU=Copy to Project as Actions &After;
                                 ESP=Copy to Project as Actions &After;
                                 FRA=Copy to Project as Actions &After;
                                 NLD=Kopi‰ren naar project als acties &achteraf;
                                 DEA=Copy to Project as Actions &After];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=CopyWorksheet;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 Actions@1000 : Record 11102048;
                               BEGIN
                                 CopyToWorksheet(1, Actions."Sub Type"::After);
                               END;
                                }
      { 7       ;2   ;Separator  }
      { 8       ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[DEU=Select &Fields;
                                 ENU=Select &Fields;
                                 ESP=Select &Fields;
                                 FRA=Select &Fields;
                                 NLD=Velden &selecteren;
                                 DEA=Select &Fields];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=CheckList;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 FieldAssist(TmpActionField, TRUE);
                               END;
                                }
      { 9       ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[DEU=Select &Into Fields;
                                 ENU=Select &Into Fields;
                                 ESP=Select &Into Fields;
                                 FRA=Select &Into Fields;
                                 NLD=Doelvelden selecteren;
                                 DEA=Select &Into Fields];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=CheckList;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 FieldsIntoAssist(TmpActionField);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 10  ;0   ;Container ;
                ContainerType=ContentArea }

    { 11  ;1   ;Group     ;
                GroupType=Repeater }

    { 12  ;2   ;Field     ;
                SourceExpr="Action Type";
                Editable=FALSE }

    { 13  ;2   ;Field     ;
                Width=13;
                CaptionML=[DEU=Object No.;
                           ENU=Object No.;
                           ESP=Object No.;
                           FRA=Object No.;
                           NLD=Objectnr.;
                           DEA=Object No.];
                BlankZero=Yes;
                SourceExpr=ObjectNo;
                Editable=FALSE;
                OnValidate=VAR
                             Mgt@1000 : Codeunit 11102035;
                           BEGIN
                             Mgt.AfterInputObjectNo(GetObjectType, ObjectNo);
                             EVALUATE("Object No.", ObjectNo);
                             VALIDATE("Object No.");
                           END;

                OnLookup=VAR
                           Mgt@1000 : Codeunit 11102035;
                         BEGIN
                           EXIT(Mgt.LookupObjectNo(GetObjectType, Text));
                         END;
                          }

    { 14  ;2   ;Field     ;
                SourceExpr="Object Name";
                Editable=FALSE }

    { 15  ;2   ;Field     ;
                SourceExpr="Company Name";
                Editable=FALSE }

    { 16  ;2   ;Field     ;
                SourceExpr=Filter }

    { 17  ;2   ;Field     ;
                SourceExpr=Fields;
                Editable=FALSE;
                OnAssistEdit=BEGIN
                               FieldAssist(TmpActionField, TRUE);
                             END;
                              }

    { 18  ;2   ;Field     ;
                Width=13;
                CaptionML=[DEU=Into Table No.;
                           ENU=Into Table No.;
                           ESP=Into Table No.;
                           FRA=Into Table No.;
                           NLD=Doel tabelnr.;
                           DEA=Into Table No.];
                SourceExpr=IntoTableNo;
                OnValidate=VAR
                             Object@1000 : Record 2000000001;
                             Mgt@1001 : Codeunit 11102035;
                           BEGIN
                             Mgt.AfterInputObjectNo(Object.Type::Table, IntoTableNo);
                             EVALUATE("Into Table No.", IntoTableNo);
                             VALIDATE("Into Table No.");
                           END;

                OnLookup=VAR
                           Object@1000 : Record 2000000001;
                           Mgt@1001 : Codeunit 11102035;
                         BEGIN
                           EXIT(Mgt.LookupObjectNo(Object.Type::Table, Text));
                         END;

                OnAssistEdit=VAR
                               Mgt@1000 : Codeunit 11102035;
                             BEGIN
                               Mgt.AssistTableNo("Into Table No.");
                             END;
                              }

    { 19  ;2   ;Field     ;
                SourceExpr="Into Table Name" }

    { 20  ;2   ;Field     ;
                SourceExpr="Into Company Name";
                OnLookup=BEGIN
                           EXIT(LookupCompanyName(Text, FALSE));
                         END;
                          }

    { 21  ;2   ;Field     ;
                SourceExpr="Into Fields";
                OnAssistEdit=BEGIN
                               FieldsIntoAssist(TmpActionField);
                             END;
                              }

    { 22  ;2   ;Field     ;
                SourceExpr=["DELETEALL;"] }

    { 23  ;2   ;Field     ;
                SourceExpr=["INIT;"] }

    { 24  ;2   ;Field     ;
                SourceExpr=["IF FIND('=') THEN;"] }

    { 25  ;2   ;Field     ;
                SourceExpr=["IF INSERT THEN;"] }

    { 26  ;2   ;Field     ;
                SourceExpr=["IF MODIFY THEN;"] }

    { 27  ;2   ;Field     ;
                SourceExpr="Commit Type" }

  }
  CODE
  {
    VAR
      TmpActionField@1000 : TEMPORARY Record 11102049;
      IntoTableNo@1001 : Text INDATASET;
      ObjectNo@1002 : Text INDATASET;

    PROCEDURE SetImportedData@1(VAR pActions@1000 : Record 11102048;VAR pActionField@1001 : Record 11102049);
    BEGIN
      pActions.RESET;
      IF pActions.FINDSET THEN
        REPEAT
          Rec := pActions;

          pActions.CALCFIELDS("SQL Query Blob");
          "SQL Query Blob" := pActions."SQL Query Blob";

          INSERT;
        UNTIL pActions.NEXT = 0;

      pActionField.RESET;
      IF pActionField.FINDSET THEN
        REPEAT
          TmpActionField := pActionField;
          TmpActionField.INSERT;
        UNTIL pActionField.NEXT = 0;

      IF FINDFIRST THEN
        ;
    END;

    PROCEDURE GetImportedData@2(VAR pActions@1000 : Record 11102048;VAR pActionField@1001 : Record 11102049);
    BEGIN
      pActions.RESET;
      pActions.DELETEALL;

      pActionField.RESET;
      pActionField.DELETEALL;

      RESET;
      IF FINDSET THEN
        REPEAT
          pActions := Rec;

          CALCFIELDS("SQL Query Blob");
          pActions."SQL Query Blob" := "SQL Query Blob";

          pActions.INSERT;
        UNTIL NEXT = 0;

      TmpActionField.RESET;
      IF TmpActionField.FINDSET THEN
        REPEAT
          pActionField := TmpActionField;
          pActionField.INSERT;
        UNTIL TmpActionField.NEXT = 0;
    END;

    LOCAL PROCEDURE CopyToWorksheet@3(Type@1000 : 'Group,Project';ActionType@1001 : Option);
    VAR
      Project@1002 : Record 11102036;
      ActionGroup@1003 : Record 11102047;
      Actions@1004 : Record 11102048;
      ActionField@1005 : Record 11102049;
      No@1006 : Code[20];
      LastLineNo@1007 : Integer;
      ctActionsCopied@1008 : TextConst 'DEU=Actions copied.;ENU=Actions copied.;ESP=Actions copied.;FRA=Actions copied.;NLD=Acties gekopieerd.;DEA=Actions copied.';
    BEGIN
      CASE Type OF

        Actions.Type::Group :
          BEGIN
            IF NOT (PAGE.RUNMODAL(PAGE::"OM - Action Groups", ActionGroup) = ACTION::LookupOK) THEN
              EXIT;
            No := ActionGroup.Code;
          END;

        Actions.Type::Project :
          BEGIN
            IF NOT (PAGE.RUNMODAL(PAGE::"OM - Projects", Project) = ACTION::LookupOK) THEN
              EXIT;
            No := Project."No.";
          END;

      END;

      Actions.SETRANGE(Type, Type);
      Actions.SETRANGE("No.", No);
      Actions.SETRANGE("Sub Type", ActionType);
      IF Actions.FINDLAST THEN
        LastLineNo := Actions."Line No.";

      IF FINDSET THEN
        REPEAT

          CALCFIELDS("SQL Query Blob");
          Actions.TRANSFERFIELDS(Rec, TRUE);
          Actions.Type := Type;
          Actions."No." := No;
          Actions."Sub Type" := ActionType;
          Actions."Line No." := LastLineNo + 10000;
          Actions.INSERT;

          LastLineNo += 10000;

          TmpActionField.RESET;
          TmpActionField.SETRANGE(Type, Type);
          TmpActionField.SETRANGE("No.", "No.");
          TmpActionField.SETRANGE("Sub Type", "Sub Type");
          TmpActionField.SETRANGE("Line No.", "Line No.");
          IF TmpActionField.FINDSET THEN
            REPEAT
              ActionField := TmpActionField;
              ActionField.Type := Actions.Type;
              ActionField."No." := Actions."No.";
              ActionField."Sub Type" := Actions."Sub Type";
              ActionField."Line No." := Actions."Line No.";
              ActionField.INSERT;
            UNTIL TmpActionField.NEXT = 0;

        UNTIL NEXT = 0;

      MESSAGE(ctActionsCopied);
    END;

    BEGIN
    END.
  }
}

