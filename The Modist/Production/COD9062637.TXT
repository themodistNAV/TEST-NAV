OBJECT Codeunit 9062637 PS Parameter
{
  OBJECT-PROPERTIES
  {
    Date=10/05/16;
    Time=12:00:00 PM;
    Version List=NA2016.15;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      PSScriptHeader@9062233 : Record 9062766;
      Env@9062232 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Environment";
      PSScriptSetup@9062231 : Record 9062769;
      PSScriptSetupExists@9062230 : Boolean;

    PROCEDURE AddExtension@9062275(ExtensionVersion@9062231 : Record 9062774;VAR TempParameter@9062230 : TEMPORARY Record 9062772);
    VAR
      Extension@9062232 : Record 9062773;
    BEGIN
      WITH ExtensionVersion DO BEGIN
        Extension.GET("Extension ID");
        AddParameter(TempParameter,ServerInstance,GetThisServerInstance);
        AddParameter(TempParameter,NAVAPPName,Extension.Name);
        AddParameter(TempParameter,NAVAPPPublisher,Extension.Publisher);
        AddParameter(TempParameter,NAVAPPVersion,Version);
      END;
    END;

    PROCEDURE AddParameter@9062230(VAR TempParameter@9062229 : TEMPORARY Record 9062772;KeyName@9062230 : Text;KeyValue@9062231 : Variant);
    VAR
      TNPUtils@9062232 : Codeunit 9062229;
    BEGIN

      WITH TempParameter DO BEGIN
        Parameter := KeyName;
        CASE TRUE OF
          KeyValue.ISBOOLEAN :
            Value := FORMAT(KeyValue,0,9);
          ELSE
            Value := FORMAT(KeyValue);
        END;
        IF INSERT THEN ;
      END;
    END;

    PROCEDURE GetRequiredModule@9062231(ScriptCode@9062229 : Code[20]) : Integer;
    BEGIN
      WITH PSScriptHeader DO BEGIN
        IF Code <> ScriptCode THEN
          GET(ScriptCode);
        EXIT("Required Module");
      END;
    END;

    PROCEDURE MergeScript@9062288(VAR TempParameter@9062229 : Record 9062772;VAR PSComputerName@9062230 : Text;VAR PSScript@9062231 : Text;ScriptCode@9062232 : Code[20]);
    VAR
      PSScriptParameter@9062233 : Record 9062768;
      PSScriptLine@9062234 : Record 9062767;
      PSScriptDVDResource@9062235 : Record 9062771;
    BEGIN
      WITH PSScriptParameter DO BEGIN
        SETRANGE("Script Code",ScriptCode);
        IF FINDSET THEN REPEAT
           IF TempParameter.GET("Script Parameter") THEN
             PSScript += '$' + "Script Parameter" + ' = "' + TempParameter.Value + '"' + Env.NewLine;
        UNTIL NEXT = 0;
      END;

      WITH PSScriptLine DO BEGIN
        SETRANGE("Script Code",ScriptCode);
        IF FINDSET THEN REPEAT
          PSScript += GetLine + Env.NewLine;
        UNTIL NEXT = 0;
      END;

      WITH PSScriptDVDResource DO BEGIN
       CopyResources(ScriptCode,TempParameter.GetParameterValue(SourceNavDVDPath),TempParameter.GetParameterValue(ServerTempUNCPath));
      END;

      IF TempParameter.GET(ComputerName) THEN
        PSComputerName := TempParameter.Value;
    END;

    LOCAL PROCEDURE GetPSScriptSetup@9062305();
    BEGIN
      IF PSScriptSetupExists THEN
        EXIT
      ELSE
        PSScriptSetup.GET;
      PSScriptSetupExists := TRUE;
    END;

    PROCEDURE GetXPath@9062304(PSScriptCode@9062229 : Code[20]) : Text;
    VAR
      PSScriptHeader@9062230 : Record 9062766;
    BEGIN

      WITH PSScriptHeader DO BEGIN
        IF Code <> PSScriptCode THEN
          GET(PSScriptCode);
        EXIT(XPath);
      END;
    END;

    LOCAL PROCEDURE GetThisServerInstance@9062289() : Text;
    VAR
      ActiveSession@9062230 : Record 2000000110;
    BEGIN
      ActiveSession.SETRANGE("Server Instance ID",SERVICEINSTANCEID);
      IF ActiveSession.FINDFIRST THEN
        EXIT(ActiveSession."Server Instance Name");
    END;

    LOCAL PROCEDURE "---Parameters---"@9062232();
    BEGIN
    END;

    LOCAL PROCEDURE ComputerName@9062233() : Text;
    BEGIN
      EXIT('ComputerName');
    END;

    LOCAL PROCEDURE ServerInstance@9062234() : Text;
    BEGIN
      EXIT('ServerInstance');
    END;

    LOCAL PROCEDURE ClientServicesCredentialType@9062235() : Text;
    BEGIN
      EXIT('ClientServicesCredentialType');
    END;

    LOCAL PROCEDURE ClientServicesPort@9062236() : Text;
    BEGIN
      EXIT('ClientServicesPort');
    END;

    LOCAL PROCEDURE ODataServicesPort@9062237() : Text;
    BEGIN
      EXIT('ComputerName');
    END;

    LOCAL PROCEDURE SOAPServicesPort@9062238() : Text;
    BEGIN
      EXIT('ODataServicesPort');
    END;

    LOCAL PROCEDURE ManagementServicesPort@9062239() : Text;
    BEGIN
      EXIT('ManagementServicesPort');
    END;

    LOCAL PROCEDURE SOAPServicesSSLEnabled@9062240() : Text;
    BEGIN
      EXIT('SOAPServicesSSLEnabled');
    END;

    LOCAL PROCEDURE ODataServicesSSLEnabled@9062241() : Text;
    BEGIN
      EXIT('ODataServicesSSLEnabled');
    END;

    LOCAL PROCEDURE ServicesCertificateThumbprint@9062242() : Text;
    BEGIN
      EXIT('ServicesCertificateThumbprint');
    END;

    LOCAL PROCEDURE MultitenancyEnabled@9062243() : Text;
    BEGIN
      EXIT('MultitenancyEnabled');
    END;

    LOCAL PROCEDURE DatabaseServer@9062244() : Text;
    BEGIN
      EXIT('DatabaseServer');
    END;

    LOCAL PROCEDURE DatabaseName@9062245() : Text;
    BEGIN
      EXIT('DatabaseName');
    END;

    LOCAL PROCEDURE Tenant@9062246() : Text;
    BEGIN
      EXIT('Tenant');
    END;

    LOCAL PROCEDURE AlternateId@9062247() : Text;
    BEGIN
      EXIT('AlternateId');
    END;

    LOCAL PROCEDURE AllowAppDatabaseWrite@9062248() : Text;
    BEGIN
      EXIT('AllowAppDatabaseWrite');
    END;

    LOCAL PROCEDURE NasServicesEnabled@9062249() : Text;
    BEGIN
      EXIT('NasServicesEnabled');
    END;

    LOCAL PROCEDURE DefaultCompany@9062250() : Text;
    BEGIN
      EXIT('DefaultCompany');
    END;

    LOCAL PROCEDURE DefaultTimeZone@9062251() : Text;
    BEGIN
      EXIT('DefaultTimeZone');
    END;

    LOCAL PROCEDURE CustomerName@9062252() : Text;
    BEGIN
      EXIT('CustomerName');
    END;

    LOCAL PROCEDURE UserName@9062253() : Text;
    BEGIN
      EXIT('UserName');
    END;

    LOCAL PROCEDURE WindowsAccount@9062254() : Text;
    BEGIN
      EXIT('WindowsAccount');
    END;

    LOCAL PROCEDURE State@9062255() : Text;
    BEGIN
      EXIT('State');
    END;

    LOCAL PROCEDURE Sid@9062256() : Text;
    BEGIN
      EXIT('Sid');
    END;

    LOCAL PROCEDURE FullName@9062257() : Text;
    BEGIN
      EXIT('FullName');
    END;

    LOCAL PROCEDURE LicenseType@9062258() : Text;
    BEGIN
      EXIT('LicenseType');
    END;

    LOCAL PROCEDURE ExpiryDate@9062259() : Text;
    BEGIN
      EXIT('ExpiryDate');
    END;

    LOCAL PROCEDURE AuthenticationEmail@9062260() : Text;
    BEGIN
      EXIT('AuthenticationEmail');
    END;

    LOCAL PROCEDURE PasswordParam@9062261() : Text;
    BEGIN
      EXIT('Password');
    END;

    LOCAL PROCEDURE CompanyNameParam@9062262() : Text;
    BEGIN
      EXIT('CompanyName');
    END;

    LOCAL PROCEDURE NewCompanyName@9062263() : Text;
    BEGIN
      EXIT('NewCompanyName');
    END;

    LOCAL PROCEDURE FileName@9062264() : Text;
    BEGIN
      EXIT('FileName');
    END;

    LOCAL PROCEDURE WebClientDNSName@9062265() : Text;
    BEGIN
      EXIT('WebClientDNSName');
    END;

    LOCAL PROCEDURE WindowsClientDNSName@9062266() : Text;
    BEGIN
      EXIT('WindowsClientDNSName');
    END;

    LOCAL PROCEDURE ClickOnceWebDNSName@9062267() : Text;
    BEGIN
      EXIT('ClickOnceWebDNSName');
    END;

    LOCAL PROCEDURE DNSIdentity@9062268() : Text;
    BEGIN
      EXIT('DNSIdentity');
    END;

    LOCAL PROCEDURE ServerTempUNCPath@9062269() : Text;
    BEGIN
      EXIT('ServerTempUNCPath');
    END;

    LOCAL PROCEDURE ServerTempLocalPath@9062270() : Text;
    BEGIN
      EXIT('ServerTempLocalPath');
    END;

    LOCAL PROCEDURE NAVDVDFilePath@9062271() : Text;
    BEGIN
      EXIT('NAVDVDFilePath');
    END;

    LOCAL PROCEDURE SourceNavDVDPath@9062272() : Text;
    BEGIN
      EXIT('SourceNavDVDPath');
    END;

    LOCAL PROCEDURE ServiceAccount@9062273() : Text;
    BEGIN
      EXIT('ServiceAccount');
    END;

    LOCAL PROCEDURE ClickOnceCodeSigningPfxFile@9062274() : Text;
    BEGIN
      EXIT('ClickOnceCodeSigningPfxFile');
    END;

    LOCAL PROCEDURE ClickOnceCodeSigningPfxPassword@9062276() : Text;
    BEGIN
      EXIT('ClickOnceCodeSigningPfxPassword');
    END;

    LOCAL PROCEDURE MageExeFile@9062277() : Text;
    BEGIN
      EXIT('MageExeFile');
    END;

    LOCAL PROCEDURE WebClientServer@9062278() : Text;
    BEGIN
      EXIT('WebClientServer');
    END;

    LOCAL PROCEDURE ClickOnceServer@9062279() : Text;
    BEGIN
      EXIT('ClickOnceServer');
    END;

    LOCAL PROCEDURE SQLDataFilePath@9062280() : Text;
    BEGIN
      EXIT('SQLDataFilePath');
    END;

    LOCAL PROCEDURE SQLLogFilePath@9062281() : Text;
    BEGIN
      EXIT('SQLLogFilePath');
    END;

    LOCAL PROCEDURE WebClientWebSiteName@9062282() : Text;
    BEGIN
      EXIT('WebClientWebSiteName');
    END;

    LOCAL PROCEDURE WebClientRedirectionPath@9062283() : Text;
    BEGIN
      EXIT('WebClientRedirectionPath');
    END;

    LOCAL PROCEDURE ClickOnceWebSite@9062284() : Text;
    BEGIN
      EXIT('ClickOnceWebSite');
    END;

    LOCAL PROCEDURE ClickOnceWebSitePath@9062285() : Text;
    BEGIN
      EXIT('ClickOnceWebSitePath');
    END;

    LOCAL PROCEDURE ApplicationPublisher@9062286() : Text;
    BEGIN
      EXIT('ApplicationPublisher');
    END;

    LOCAL PROCEDURE ApplicationName@9062287() : Text;
    BEGIN
      EXIT('ApplicationName');
    END;

    LOCAL PROCEDURE FilePath@9062290() : Text;
    BEGIN
      EXIT('FilePath');
    END;

    LOCAL PROCEDURE ApplicationDatabase@9062292() : Text;
    BEGIN
      EXIT('ApplicationDatabase');
    END;

    LOCAL PROCEDURE ApplicationDatabaseServer@9062293() : Text;
    BEGIN
      EXIT('ApplicationDatabaseServer');
    END;

    LOCAL PROCEDURE RootWebConfigFile@9062296() : Text;
    BEGIN
      EXIT('RootWebConfigFile');
    END;

    LOCAL PROCEDURE DeploymentWebConfigFile@9062297() : Text;
    BEGIN
      EXIT('DeploymentWebConfigFile');
    END;

    LOCAL PROCEDURE applicationDeploimentId@9062298() : Text;
    BEGIN
      EXIT('applicationDeploimentId');
    END;

    LOCAL PROCEDURE applicationVersionId@9062299() : Text;
    BEGIN
      EXIT('applicationVersionId');
    END;

    LOCAL PROCEDURE mageExePath@9062300() : Text;
    BEGIN
      EXIT('mageExePath');
    END;

    LOCAL PROCEDURE ClientUserSettings@9062301() : Text;
    BEGIN
      EXIT('ClientUserSettings');
    END;

    LOCAL PROCEDURE ServerName@9062302() : Text;
    BEGIN
      EXIT('ServerName');
    END;

    LOCAL PROCEDURE httpWebSiteDirectory@9062303() : Text;
    BEGIN
      EXIT('httpWebSiteDirectory');
    END;

    LOCAL PROCEDURE HelpServer@9062307() : Text;
    BEGIN
      EXIT('HelpServer');
    END;

    LOCAL PROCEDURE HelpServerPort@9062308() : Text;
    BEGIN
      EXIT('HelpServerPort');
    END;

    LOCAL PROCEDURE NAVAPPName@9062309() : Text;
    BEGIN
      EXIT('Name');
    END;

    LOCAL PROCEDURE NAVAPPPublisher@9062310() : Text;
    BEGIN
      EXIT('Publisher');
    END;

    LOCAL PROCEDURE NAVAPPVersion@9062311() : Text;
    BEGIN
      EXIT('Version');
    END;

    LOCAL PROCEDURE NAVAPPId@9062312() : Text;
    BEGIN
      EXIT('Id');
    END;

    BEGIN
    {
      //DOC NA2016.10 AP 29/10/2015 - Created
      //DOC NA2016.15 JH 18/04/2016 - CfMD amendments
    }
    END.
  }
}

