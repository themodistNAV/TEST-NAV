OBJECT Table 9062265 Enhanced Group Workflow
{
  OBJECT-PROPERTIES
  {
    Date=14/07/16;
    Time=12:39:43 PM;
    Version List=NA2016.15;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               WFlowSetup.GET('');
               IF "No."= '' THEN
                 BEGIN
                   WFlowSetup.TESTFIELD("Group Workflow Nos.");
                   "No." := NoSeriesMgt.GetNextNo(WFlowSetup."Group Workflow Nos.",TODAY,TRUE);
                 END;
             END;

    CaptionML=[ENU=Enhanced Group Workflow;
               ENG=Enhanced Group Workflow];
    LookupPageID=Page9062300;
    DrillDownPageID=Page9062300;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;CaptionML=[ENU=No.;
                                                              ENG=No.] }
    { 2   ;   ;Company Name        ;Text50        ;CaptionML=[ENU=Company Name;
                                                              ENG=Company Name] }
    { 8   ;   ;Primary Key         ;Code20        ;CaptionML=[ENU=Primary Key;
                                                              ENG=Primary Key] }
    { 9   ;   ;Record No.          ;Code20        ;CaptionML=[ENU=Record No.;
                                                              ENG=Record No.] }
    { 20  ;   ;Action Required     ;Text250       ;CaptionML=[ENU=Action Required;
                                                              ENG=Action Required] }
    { 25  ;   ;Information Text    ;Text250       ;CaptionML=[ENU=Information Text;
                                                              ENG=Information Text] }
    { 30  ;   ;Raised DateTime     ;DateTime      ;CaptionML=[ENU=Raised DateTime;
                                                              ENG=Raised DateTime] }
    { 32  ;   ;Closed DateTime     ;DateTime      ;CaptionML=[ENU=Closed DateTime;
                                                              ENG=Closed DateTime] }
    { 40  ;   ;Complete By DateTime;DateTime      ;CaptionML=[ENU=Complete By DateTime;
                                                              ENG=Complete By DateTime] }
    { 45  ;   ;Time Taken to Complete;Duration    ;CaptionML=[ENU=Time Taken to Complete;
                                                              ENG=Time Taken to Complete];
                                                   Standard Day/Time Unit=minute }
    { 46  ;   ;SLA Difference      ;Duration      ;CaptionML=[ENU=SLA Difference;
                                                              ENG=SLA Difference] }
    { 50  ;   ;Workflow No.        ;Code20        ;TableRelation="Enhanced Workflow";
                                                   CaptionML=[ENU=Workflow No.;
                                                              ENG=Workflow No.] }
    { 150 ;   ;Response            ;Code10        ;TableRelation="Enhanced Workflow Response".Code WHERE (Workflow No.=FIELD(Workflow No.));
                                                   OnValidate=VAR
                                                                WFlowResponse@1000000000 : Record 9062259;
                                                                WFlowMgt@1000000001 : Codeunit 9062258;
                                                                WFlow@1000000002 : Record 9062258;
                                                              BEGIN
                                                              END;

                                                   CaptionML=[ENU=Response;
                                                              ENG=Response] }
    { 300 ;   ;Status              ;Option        ;CaptionML=[ENU=Status;
                                                              ENG=Status];
                                                   OptionCaptionML=[ENU=Open,Closed;
                                                                    ENG=Open,Closed];
                                                   OptionString=Open,Closed }
    { 1000;   ;Checklist Type      ;Code20        ;TableRelation="Checklist Template Header"."Checklist Type" WHERE (Related Table No.=FIELD(Table ID));
                                                   CaptionML=[ENU=Checklist Type;
                                                              ENG=Checklist Type] }
    { 1001;   ;Checklist Description;Text100      ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Checklist Template Header".Description WHERE (Checklist Type=FIELD(Checklist Type)));
                                                   CaptionML=[ENU=Checklist Description;
                                                              ENG=Checklist Description];
                                                   Editable=No }
    { 1002;   ;Checklist Code      ;Code20        ;TableRelation="Checklist Header".Code WHERE (Checklist Type=FIELD(Checklist Type));
                                                   CaptionML=[ENU=Checklist Code;
                                                              ENG=Checklist Code] }
    { 4999;   ;Table ID            ;Integer       ;TableRelation="Table Information"."Table No.";
                                                   CaptionML=[ENU=Table ID;
                                                              ENG=Table ID] }
    { 5032;   ;Get Position Text   ;Text250       ;OnValidate=BEGIN
                                                                IF NOT SetPrimaryKeyFields THEN; //DOC NA2016.14 PC 01/03/2016 - Do nothing if error
                                                              END;

                                                   CaptionML=[ENU=Get Position Text;
                                                              ENG=Get Position Text] }
    { 5033;   ;Page ID             ;Integer       ;CaptionML=[ENU=Page ID;
                                                              ENG=Page ID] }
    { 6003;   ;Originator          ;Code20        ;CaptionML=[ENU=Originator;
                                                              ENG=Originator] }
    { 6004;   ;Originator Name     ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Contact.Name WHERE (No.=FIELD(Originator)));
                                                   CaptionML=[ENU=Originator Name;
                                                              ENG=Originator Name];
                                                   Editable=No }
    { 6009;   ;Workflow Description;Text100       ;CaptionML=[ENU=Workflow Description;
                                                              ENG=Workflow Description] }
    { 6012;   ;Routing Parameter   ;Code100       ;CaptionML=[ENU=Routing Parameter;
                                                              ENG=Routing Parameter];
                                                   Editable=No }
    { 6013;   ;Amount Parameter    ;Decimal       ;CaptionML=[ENU=Amount Parameter;
                                                              ENG=Amount Parameter];
                                                   Editable=No }
    { 6014;   ;Collection Code     ;Code20        ;CaptionML=[ENU=Collection Code;
                                                              ENG=Collection Code] }
    { 6015;   ;Workflow To         ;Code20        ;CaptionML=[ENU=Workflow To;
                                                              ENG=Workflow To] }
    { 6016;   ;Unique Ref          ;Text100       ;CaptionML=[ENU=Unique Ref;
                                                              ENG=Unique Ref] }
    { 6017;No ;Primary Key Filter  ;Text80        ;CaptionML=[ENU=Primary Key Filter;
                                                              ENG=Primary Key Filter] }
    { 6018;   ;Prev Workflow       ;Text38        ;CaptionML=[ENU=Prev Workflow;
                                                              ENG=Prev Workflow] }
    { 6019;   ;Attachment Path     ;Text250       ;CaptionML=[ENU=Attachment Path;
                                                              ENG=Attachment Path] }
    { 6020;   ;Use Default Contacts;Boolean       ;CaptionML=[ENU=Use Default Contacts;
                                                              ENG=Use Default Contacts] }
    { 6021;   ;Current Sequence No.;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Max("Enhanced Workflow Activity Ln.".Sequence WHERE (Group Workflow No.=FIELD(No.)));
                                                   CaptionML=[ENU=Current Sequence No.;
                                                              ENG=Current Sequence No.] }
    { 6022;   ;Max Sequence No.    ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Max("Enhanced Workflow Contact".Sequence WHERE (Workflow No.=FIELD(Workflow No.)));
                                                   CaptionML=[ENU=Max Sequence No.;
                                                              ENG=Max Sequence No.] }
    { 6023;   ;Email Record Links as Attach.;Boolean;
                                                   CaptionML=[ENU=Email Record Links as Attach.;
                                                              ENG=Email Record Links as Attach.] }
    { 6024;   ;No. Activity Lines  ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Enhanced Workflow Activity Ln." WHERE (Group Workflow No.=FIELD(No.)));
                                                   CaptionML=[ENU=No. Activity Lines;
                                                              ENG=No. Activity Lines] }
    { 6109;   ;Email HTML Param 1  ;Text50        ;CaptionML=[ENU=Email HTML Param 1;
                                                              ENG=Email HTML Param 1] }
    { 6110;   ;Email HTML Param 2  ;Text50        ;CaptionML=[ENU=Email HTML Param 2;
                                                              ENG=Email HTML Param 2] }
    { 6111;   ;Email HTML Param 3  ;Text50        ;CaptionML=[ENU=Email HTML Param 3;
                                                              ENG=Email HTML Param 3] }
    { 6112;   ;Email HTML Param 4  ;Text50        ;CaptionML=[ENU=Email HTML Param 4;
                                                              ENG=Email HTML Param 4] }
    { 6113;   ;Email HTML Param 5  ;Text50        ;CaptionML=[ENU=Email HTML Param 5;
                                                              ENG=Email HTML Param 5] }
    { 6114;   ;Is Hold Workflow    ;Boolean       ;CaptionML=[ENU=Is Hold Workflow;
                                                              ENG=Is Hold Workflow] }
    { 6115;   ;Workflow Grouping 1 ;Code20        ;ValidateTableRelation=No;
                                                   CaptionML=[ENU=Workflow Grouping 1;
                                                              ENG=Workflow Grouping 1] }
    { 6116;   ;Workflow Grouping 2 ;Code20        ;CaptionML=[ENU=Workflow Grouping 2;
                                                              ENG=Workflow Grouping 2] }
    { 6117;   ;Include Weekends    ;Boolean       ;CaptionML=[ENU=Include Weekends;
                                                              ENG=Include Weekends] }
    { 6118;   ;Work Day Starts     ;Time          ;CaptionML=[ENU=Work Day Starts;
                                                              ENG=Work Day Starts] }
    { 6119;   ;Work Day Ends       ;Time          ;CaptionML=[ENU=Work Day Ends;
                                                              ENG=Work Day Ends] }
    { 6120;   ;Est. Duration       ;Duration      ;CaptionML=[ENU=Est. Duration;
                                                              ENG=Est. Duration] }
    { 6121;   ;Auto Response       ;Boolean       ;CaptionML=[ENU=Auto Response;
                                                              ENG=Auto Response] }
    { 6122;   ;Nudged              ;Boolean       ;OnValidate=VAR
                                                                ActLines@1000000000 : Record 9062266;
                                                              BEGIN
                                                                ActLines.SETRANGE("Group Workflow No.","No.");
                                                                IF ActLines.FINDSET THEN BEGIN
                                                                  REPEAT
                                                                    ActLines.Nudged := Nudged;
                                                                    ActLines.MODIFY;
                                                                  UNTIL ActLines.NEXT = 0;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Nudged;
                                                              ENG=Nudged] }
    { 6123;   ;Originator Comment  ;Text100       ;CaptionML=[ENU=Originator Comment;
                                                              ENG=Originator Comment] }
    { 7000;   ;Cancelled           ;Boolean       ;CaptionML=[ENU=Cancelled;
                                                              ENG=Cancelled] }
    { 8100;   ;Jet Report BLOB     ;BLOB          ;CaptionML=[ENU=Jet Report BLOB;
                                                              ENG=Jet Report BLOB] }
    { 8101;   ;Jet Report Filename ;Text50        ;CaptionML=[ENU=Jet Report Filename;
                                                              ENG=Jet Report Filename] }
    { 8102;   ;DOCS Entry ID to Send;Integer      ;TableRelation="Document Library";
                                                   CaptionML=[ENU=DOCS Entry ID to Send;
                                                              ENG=DOCS Entry ID to Send] }
    { 8103;   ;DOCS Entry Description;Text250     ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Document Library".Description WHERE (Entry No.=FIELD(DOCS Entry ID to Send)));
                                                   CaptionML=[ENU=DOCS Entry Description;
                                                              ENG=DOCS Entry Description];
                                                   Editable=No }
    { 8104;   ;Jet Report Status   ;Option        ;CaptionML=[ENU=Jet Report Status;
                                                              ENG=Jet Report Status];
                                                   OptionCaptionML=[ENU=None,Waiting,Waiting for Notification,Generated;
                                                                    ENG=None,Waiting,Waiting for Notification,Generated];
                                                   OptionString=None,Waiting,Waiting for Notification,Generated;
                                                   Description=NA2016.15;
                                                   Editable=No }
    { 8200;   ;Notification Only   ;Boolean       ;CaptionML=[ENU=Notification Only;
                                                              ENG=Notification Only] }
    { 9000;   ;Related Record PK Value 1;Code50   ;CaptionML=[ENU=Primary Key Value 1;
                                                              ENG=Primary Key Value 1;
                                                              ENC=Primary Key Value 1];
                                                   Description=NA2016.14 }
    { 9001;   ;Related Record PK Value 2;Code50   ;CaptionML=[ENU=Primary Key Value 2;
                                                              ENG=Primary Key Value 2;
                                                              ENC=Primary Key Value 2];
                                                   Description=NA2016.14 }
    { 9002;   ;Related Record PK Value 3;Code50   ;CaptionML=[ENU=Primary Key Value 3;
                                                              ENG=Primary Key Value 3;
                                                              ENC=Primary Key Value 3];
                                                   Description=NA2016.14 }
    { 9003;   ;Related Record PK Value 4;Code50   ;CaptionML=[ENU=Primary Key Value 2;
                                                              ENG=Primary Key Value 2;
                                                              ENC=Primary Key Value 2];
                                                   Description=NA2016.14 }
    { 9004;   ;Related Record PK Value 5;Code50   ;CaptionML=[ENU=Primary Key Value 3;
                                                              ENG=Primary Key Value 3;
                                                              ENC=Primary Key Value 3];
                                                   Description=NA2016.14 }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Primary Key                              }
    {    ;Workflow No.,Primary Key,Status          }
    {    ;Raised DateTime                          }
    {    ;Closed DateTime                          }
    {    ;Status,Auto Response                     }
    {    ;Checklist Type,Checklist Code            }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      NoSeriesMgt@1000000000 : Codeunit 396;
      NoSeries@1000000001 : Record 308;
      WFlowSetup@1000000003 : Record 9062229;
      Logger@1000000004 : Record 9062280;
      SkipWorkflowResponseTable@1000000002 : Boolean;

    PROCEDURE CancelWFlow@1000000000();
    VAR
      WFResp@1000000000 : Record 9062259;
      WFActLine@1000000001 : Record 9062266;
      WFNot@1000000002 : Record 9062261;
      TxtNoCancelResponse@1000000003 : TextConst 'ENU=Cannot cancel workflow as no cancelled response is set for workflow %1;ENG=Cannot cancel workflow as no cancelled response is set for workflow %1';
      TxtCancelledBy@1000000004 : TextConst 'ENU=Cancelled by %1;ENG=Cancelled by %1';
      TxtLogCancelledBy@1000000005 : TextConst 'ENU=Group workflow %1 cancelled by %2;ENG=Group workflow %1 cancelled by %2';
    BEGIN
      IF Status <> Status::Open THEN EXIT;

      WFResp.SETRANGE("Workflow No.","Workflow No.");
      WFResp.SETRANGE("Cancelled Response",TRUE);
      IF NOT WFResp.FINDFIRST THEN
        ERROR(TxtNoCancelResponse, "Workflow No.");

      WFActLine.SETRANGE("Group Workflow No.","No.");
      WFActLine.SETRANGE(Response);

      IF (WFActLine.FINDSET(TRUE)) THEN
      BEGIN
        REPEAT
          WFActLine.Cancelled := TRUE;
          WFActLine.DontConfirm;
          WFActLine.SkipWorkflowResponseTable(SkipWorkflowResponseTable);
          WFActLine.VALIDATE(Response,WFResp.Code);
          WFActLine.SkipWorkflowResponseTable(TRUE);
          WFActLine."My Comment" := STRSUBSTNO(TxtCancelledBy, USERID);
          WFActLine.MODIFY;

          WFNot.SETCURRENTKEY("Workflow GUID");
          WFNot.SETRANGE(Sent,FALSE);
          WFNot.SETRANGE(Cancelled,FALSE);
          WFNot.SETRANGE("Workflow GUID",WFActLine."GUID No.");
          IF WFNot.FINDSET THEN BEGIN
            REPEAT
              WFNot.Cancelled := TRUE;
              WFNot.MODIFY;
            UNTIL WFNot.NEXT = 0;
          END;
        UNTIL WFActLine.NEXT = 0;
      END;

      Rec.GET("No.");
      Status := Status::Closed;
      Cancelled := TRUE;
      "Originator Comment" := STRSUBSTNO(TxtCancelledBy, USERID);

      Logger.Log('WFLOW', Logger.Type::Information, STRSUBSTNO(TxtLogCancelledBy, "No.", USERID), USERID);
    END;

    PROCEDURE SetSkipWorkflowResponseTable@1000000042(pSkipWorkflowResponseTable@1000000000 : Boolean);
    BEGIN
      //DOC NA2015.1 - Flag to skip workflow response table
      //  -> pSkipWorkflowResponseTable: The flag

      SkipWorkflowResponseTable := pSkipWorkflowResponseTable;
    END;

    PROCEDURE GetStyle@1000000001() : Text;
    BEGIN
      //DOC NA2015.7 - Returning the record style
      //  <- The style

      IF (Rec.Status = Rec.Status::Closed) THEN
        EXIT('Standard')
      ELSE
        IF (Rec.Nudged) THEN
          EXIT('StrongAccent')
        ELSE
          EXIT('StandardAccent');
    END;

    PROCEDURE ShowDocument@1000000006();
    VAR
      lTnpUtils@1000000001 : Codeunit 9062229;
    BEGIN
      //DOC NA2015.7 - Showing a document

      Rec.TESTFIELD("Table ID");
      Rec.TESTFIELD("Get Position Text");

      lTnpUtils.RunCardPage(Rec."Table ID", Rec."Get Position Text", FALSE);
    END;

    PROCEDURE ShowPreviousGroupWorkflow@1000000005();
    VAR
      lGroupWorkflow@1000000002 : Record 9062265;
    BEGIN
      //DOC NA2015.7 - Showing previous workflow

      Rec.TESTFIELD("Prev Workflow");
      lGroupWorkflow.GET(Rec."Prev Workflow");
      PAGE.RUN(0, lGroupWorkflow);
    END;

    PROCEDURE ShowWorkflow@1000000003();
    VAR
      lWorkflow@1000000000 : Record 9062258;
    BEGIN
      //DOC NA2015.7 - Showing a workflow

      Rec.TESTFIELD("Workflow No.");

      lWorkflow.GET(Rec."Workflow No.");
      PAGE.RUN(PAGE::"Enhanced Workflow Card", lWorkflow);
    END;

    PROCEDURE ShowPreviousWorkflow@1000000004();
    VAR
      lGroupWorkflow@1000000002 : Record 9062265;
      lWorkflow@1000000001 : Record 9062258;
    BEGIN
      //DOC NA2015.7 - Showing previous workflow

      Rec.TESTFIELD("Prev Workflow");
      lGroupWorkflow.GET(Rec."Prev Workflow");

      lWorkflow.GET(lGroupWorkflow."Workflow No.");
      PAGE.RUN(PAGE::"Enhanced Workflow Card", lWorkflow);
    END;

    [TryFunction]
    LOCAL PROCEDURE SetPrimaryKeyFields@1000000007();
    VAR
      TNPUtils@1000000000 : Codeunit 9062229;
    BEGIN
      //DOC NA2016.14 PC 01/03/2016 >>>
      IF ("Get Position Text" <> '') THEN BEGIN
        TESTFIELD("Table ID");
        "Related Record PK Value 1" := COPYSTR(TNPUtils.GetPrimaryKey("Table ID", "Get Position Text", 1),1,MAXSTRLEN("Related Record PK Value 1"));
        "Related Record PK Value 2" := COPYSTR(TNPUtils.GetPrimaryKey("Table ID", "Get Position Text", 2),1,MAXSTRLEN("Related Record PK Value 2"));
        "Related Record PK Value 3" := COPYSTR(TNPUtils.GetPrimaryKey("Table ID", "Get Position Text", 3),1,MAXSTRLEN("Related Record PK Value 3"));
        "Related Record PK Value 4" := COPYSTR(TNPUtils.GetPrimaryKey("Table ID", "Get Position Text", 4),1,MAXSTRLEN("Related Record PK Value 4"));
        "Related Record PK Value 5" := COPYSTR(TNPUtils.GetPrimaryKey("Table ID", "Get Position Text", 5),1,MAXSTRLEN("Related Record PK Value 5"));
      END;
      //DOC NA2016.14 PC 01/03/2016 <<<
    END;

    BEGIN
    {
      //DOC NA2015.1  JH 21/08/2012 - Migrated to 2013
      //DOC NA2015.6  PC 05/04/2015 - Changed Routing Parameter length to 100
      //DOC NA2015.7  JH 13/05/2015 - "GetStyle" function added, "Show..." functions added
      //DOC NA2016.10 JH 27/08/2015 - Upgraded to 2016
      //DOC NA2016.10 PC 09/10/2015 - Added Checklist fields
      //DOC NA2016.10 PC 09/10/2015 - Added Key "Checklist Type,Checklist Code"
      //DOC NA2016.10 AZ 02/11/2015 - "Form ID" field removed
      //DOC NA2016.12 PC 27/01/2016 - Retrieving original record during cancellation
      //DOC NA2016.14 PC 01/03/2016 - Added "Related Record PK Value" Fields and Function to set them OnValidate of "Get Position Text"
      //DOC NA2016.15 JH 06/05/2016 - CfMD amendments
      //DOC NA2016.15 PC 11/05/2015 - Added Field "Jet Report Status"
    }
    END.
  }
}

