OBJECT Codeunit 96 Purch.-Quote to Order
{
  OBJECT-PROPERTIES
  {
    Date=23/03/16;
    Time=12:00:00 PM;
    Version List=NAVW19.00.00.45480;
  }
  PROPERTIES
  {
    TableNo=38;
    OnRun=VAR
            OldPurchCommentLine@1001 : Record 43;
            Vend@1002 : Record 23;
            ApprovalsMgmt@1000 : Codeunit 1535;
            RecordLinkManagement@1004 : Codeunit 447;
            ShouldRedistributeInvoiceAmount@1003 : Boolean;
          BEGIN
            TESTFIELD("Document Type","Document Type"::Quote);
            ShouldRedistributeInvoiceAmount := PurchCalcDiscByType.ShouldRedistributeInvoiceDiscountAmount(Rec);

            OnCheckPurchasePostRestrictions;

            Vend.GET("Buy-from Vendor No.");
            Vend.CheckBlockedVendOnDocs(Vend,FALSE);

            PurchOrderHeader := Rec;
            PurchOrderHeader."Document Type" := PurchOrderHeader."Document Type"::Order;
            PurchOrderHeader."No. Printed" := 0;
            PurchOrderHeader.Status := PurchOrderHeader.Status::Open;
            PurchOrderHeader."No." := '';
            PurchOrderHeader."Quote No." := "No.";

            PurchOrderLine.LOCKTABLE;
            PurchOrderHeader.INSERT(TRUE);

            PurchOrderHeader."Order Date" := "Order Date";
            IF "Posting Date" <> 0D THEN
              PurchOrderHeader."Posting Date" := "Posting Date";
            PurchOrderHeader."Document Date" := "Document Date";
            PurchOrderHeader."Expected Receipt Date" := "Expected Receipt Date";
            PurchOrderHeader."Shortcut Dimension 1 Code" := "Shortcut Dimension 1 Code";
            PurchOrderHeader."Shortcut Dimension 2 Code" := "Shortcut Dimension 2 Code";
            PurchOrderHeader."Dimension Set ID" := "Dimension Set ID";

            PurchOrderHeader."Location Code" := "Location Code";
            PurchOrderHeader."Inbound Whse. Handling Time" := "Inbound Whse. Handling Time";
            PurchOrderHeader."Ship-to Name" := "Ship-to Name";
            PurchOrderHeader."Ship-to Name 2" := "Ship-to Name 2";
            PurchOrderHeader."Ship-to Address" := "Ship-to Address";
            PurchOrderHeader."Ship-to Address 2" := "Ship-to Address 2";
            PurchOrderHeader."Ship-to City" := "Ship-to City";
            PurchOrderHeader."Ship-to Post Code" := "Ship-to Post Code";
            PurchOrderHeader."Ship-to County" := "Ship-to County";
            PurchOrderHeader."Ship-to Country/Region Code" := "Ship-to Country/Region Code";
            PurchOrderHeader."Ship-to Contact" := "Ship-to Contact";

            PurchOrderHeader."Prepayment %" := Vend."Prepayment %";
            IF PurchOrderHeader."Posting Date" = 0D THEN
              PurchOrderHeader."Posting Date" := WORKDATE;

            PurchOrderHeader.MODIFY;

            PurchQuoteLine.SETRANGE("Document Type","Document Type");
            PurchQuoteLine.SETRANGE("Document No.","No.");

            IF PurchQuoteLine.FINDSET THEN
              REPEAT
                PurchOrderLine := PurchQuoteLine;
                PurchOrderLine."Document Type" := PurchOrderHeader."Document Type";
                PurchOrderLine."Document No." := PurchOrderHeader."No.";
                ReservePurchLine.TransferPurchLineToPurchLine(
                  PurchQuoteLine,PurchOrderLine,PurchQuoteLine."Outstanding Qty. (Base)");
                PurchOrderLine."Shortcut Dimension 1 Code" := PurchQuoteLine."Shortcut Dimension 1 Code";
                PurchOrderLine."Shortcut Dimension 2 Code" := PurchQuoteLine."Shortcut Dimension 2 Code";
                PurchOrderLine."Dimension Set ID" := PurchQuoteLine."Dimension Set ID";
                IF Vend."Prepayment %" <> 0 THEN
                  PurchOrderLine."Prepayment %" := Vend."Prepayment %";
                PrepmtMgt.SetPurchPrepaymentPct(PurchOrderLine,PurchOrderHeader."Posting Date");
                PurchOrderLine.VALIDATE("Prepayment %");
                PurchOrderLine.DefaultDeferralCode;

                PurchOrderLine.INSERT;

                ReservePurchLine.VerifyQuantity(PurchOrderLine,PurchQuoteLine);
              UNTIL PurchQuoteLine.NEXT = 0;

            PurchSetup.GET;
            IF PurchSetup."Archive Quotes and Orders" THEN
              ArchiveManagement.ArchPurchDocumentNoConfirm(Rec);

            IF PurchSetup."Default Posting Date" = PurchSetup."Default Posting Date"::"No Date" THEN BEGIN
              PurchOrderHeader."Posting Date" := 0D;
              PurchOrderHeader.MODIFY;
            END;

            PurchCommentLine.SETRANGE("Document Type","Document Type");
            PurchCommentLine.SETRANGE("No.","No.");
            IF NOT PurchCommentLine.ISEMPTY THEN BEGIN
              PurchCommentLine.LOCKTABLE;
              IF PurchCommentLine.FINDSET THEN
                REPEAT
                  OldPurchCommentLine := PurchCommentLine;
                  PurchCommentLine.DELETE;
                  PurchCommentLine."Document Type" := PurchOrderHeader."Document Type";
                  PurchCommentLine."No." := PurchOrderHeader."No.";
                  PurchCommentLine.INSERT;
                  PurchCommentLine := OldPurchCommentLine;
                UNTIL PurchCommentLine.NEXT = 0;
            END;
            RecordLinkManagement.CopyLinks(Rec,PurchOrderHeader);

            ItemChargeAssgntPurch.RESET;
            ItemChargeAssgntPurch.SETRANGE("Document Type","Document Type");
            ItemChargeAssgntPurch.SETRANGE("Document No.","No.");

            WHILE ItemChargeAssgntPurch.FINDFIRST DO BEGIN
              ItemChargeAssgntPurch.DELETE;
              ItemChargeAssgntPurch."Document Type" := PurchOrderHeader."Document Type";
              ItemChargeAssgntPurch."Document No." := PurchOrderHeader."No.";
              IF NOT (ItemChargeAssgntPurch."Applies-to Doc. Type" IN
                      [ItemChargeAssgntPurch."Applies-to Doc. Type"::Receipt,
                       ItemChargeAssgntPurch."Applies-to Doc. Type"::"Return Shipment"])
              THEN BEGIN
                ItemChargeAssgntPurch."Applies-to Doc. Type" := PurchOrderHeader."Document Type";
                ItemChargeAssgntPurch."Applies-to Doc. No." := PurchOrderHeader."No.";
              END;
              ItemChargeAssgntPurch.INSERT;
            END;

            DELETELINKS;
            DELETE;
            ApprovalsMgmt.CopyApprovalEntryQuoteToOrder(DATABASE::"Purchase Header","No.",PurchOrderHeader."No.",PurchOrderHeader.RECORDID);
            ApprovalsMgmt.DeleteApprovalEntry(DATABASE::"Purchase Header","Document Type","No.");

            PurchQuoteLine.DELETEALL;

            IF NOT ShouldRedistributeInvoiceAmount THEN
              PurchCalcDiscByType.ResetRecalculateInvoiceDisc(PurchOrderHeader);
            COMMIT;
          END;

  }
  CODE
  {
    VAR
      PurchQuoteLine@1000 : Record 39;
      PurchOrderHeader@1001 : Record 38;
      PurchOrderLine@1002 : Record 39;
      PurchCommentLine@1003 : Record 43;
      ItemChargeAssgntPurch@1004 : Record 5805;
      ReservePurchLine@1006 : Codeunit 99000834;
      PrepmtMgt@1007 : Codeunit 441;
      PurchCalcDiscByType@1005 : Codeunit 66;
      PurchSetup@1009 : Record 312;
      ArchiveManagement@1010 : Codeunit 5063;

    PROCEDURE GetPurchOrderHeader@1(VAR PurchHeader@1000 : Record 38);
    BEGIN
      PurchHeader := PurchOrderHeader;
    END;

    BEGIN
    END.
  }
}

