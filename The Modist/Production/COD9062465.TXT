OBJECT Codeunit 9062465 Transfer Printout Toolkit
{
  OBJECT-PROPERTIES
  {
    Date=23/09/15;
    Time=[ 1:46:33 PM];
    Version List=NH2016.4;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      mTransferHeader@1000000009 : Record 5740;
      mTransferLine@1000000011 : Record 5741;
      mDocumentPrintoutToolkit@1000000010 : Codeunit 9062447;
      mType@1000000000 : ' ,,Item';

    LOCAL PROCEDURE "--- Setting Document ---"@1000000052();
    BEGIN
    END;

    PROCEDURE SetTransferHeader@1000000060(pTransferHeader@1000000000 : Record 5740);
    BEGIN
      //DOC NH2015.4 - Setting transfer header
      //  -> pTransferHeader: The header

      mTransferHeader := pTransferHeader;
    END;

    PROCEDURE SetTransferShipmentHeader@1000000063(pTransferShipmentHeader@1000000000 : Record 5744);
    BEGIN
      //DOC NH2015.4 - Setting transfer shipment header
      //  -> pTransferShipmentHeader: The header

      CLEAR(mTransferHeader);
      mTransferHeader."No." := pTransferShipmentHeader."No.";
      mTransferHeader."Transfer-from Code" := pTransferShipmentHeader."Transfer-from Code";
      mTransferHeader."Transfer-from Name" := pTransferShipmentHeader."Transfer-from Name";
      mTransferHeader."Transfer-from Name 2" := pTransferShipmentHeader."Transfer-from Name 2";
      mTransferHeader."Transfer-from Address" := pTransferShipmentHeader."Transfer-from Address";
      mTransferHeader."Transfer-from Address 2" := pTransferShipmentHeader."Transfer-from Address 2";
      mTransferHeader."Transfer-from Post Code" := pTransferShipmentHeader."Transfer-from Post Code";
      mTransferHeader."Transfer-from City" := pTransferShipmentHeader."Transfer-from City";
      mTransferHeader."Transfer-from County" := pTransferShipmentHeader."Transfer-from County";
      mTransferHeader."Trsf.-from Country/Region Code" := pTransferShipmentHeader."Trsf.-from Country/Region Code";
      mTransferHeader."Transfer-to Code" := pTransferShipmentHeader."Transfer-to Code";
      mTransferHeader."Transfer-to Name" := pTransferShipmentHeader."Transfer-to Name";
      mTransferHeader."Transfer-to Name 2" := pTransferShipmentHeader."Transfer-to Name 2";
      mTransferHeader."Transfer-to Address" := pTransferShipmentHeader."Transfer-to Address";
      mTransferHeader."Transfer-to Address 2" := pTransferShipmentHeader."Transfer-to Address 2";
      mTransferHeader."Transfer-to Post Code" := pTransferShipmentHeader."Transfer-to Post Code";
      mTransferHeader."Transfer-to City" := pTransferShipmentHeader."Transfer-to City";
      mTransferHeader."Transfer-to County" := pTransferShipmentHeader."Transfer-to County";
      mTransferHeader."Trsf.-to Country/Region Code" := pTransferShipmentHeader."Trsf.-to Country/Region Code";
      mTransferHeader."Posting Date" := pTransferShipmentHeader."Posting Date";
      mTransferHeader."Shipment Date" := pTransferShipmentHeader."Shipment Date";
      mTransferHeader."Receipt Date" := pTransferShipmentHeader."Receipt Date";
      mTransferHeader."Shortcut Dimension 1 Code" := pTransferShipmentHeader."Shortcut Dimension 1 Code";
      mTransferHeader."Shortcut Dimension 2 Code" := pTransferShipmentHeader."Shortcut Dimension 2 Code";
      mTransferHeader."No. Series" := pTransferShipmentHeader."No. Series";
      mTransferHeader."In-Transit Code" := pTransferShipmentHeader."In-Transit Code";
      mTransferHeader."Transfer-from Contact" := pTransferShipmentHeader."Transfer-from Contact";
      mTransferHeader."Transfer-to Contact" := pTransferShipmentHeader."Transfer-to Contact";
      mTransferHeader."External Document No." := pTransferShipmentHeader."External Document No.";
      mTransferHeader."Shipping Agent Code" := pTransferShipmentHeader."Shipping Agent Code";
      mTransferHeader."Shipping Agent Service Code" := pTransferShipmentHeader."Shipping Agent Service Code";
      mTransferHeader."Shipment Method Code" := pTransferShipmentHeader."Shipment Method Code";
      mTransferHeader."Transaction Type" := pTransferShipmentHeader."Transaction Type";
      mTransferHeader."Transport Method" := pTransferShipmentHeader."Transport Method";
      mTransferHeader."Entry/Exit Point" := pTransferShipmentHeader."Entry/Exit Point";
      mTransferHeader.Area := pTransferShipmentHeader.Area;
      mTransferHeader."Transaction Specification" := pTransferShipmentHeader."Transaction Specification";
      mTransferHeader."Dimension Set ID" := pTransferShipmentHeader."Dimension Set ID";
    END;

    PROCEDURE SetTransferReceiptHeader@1000000062(pTransferReceiptHeader@1000000000 : Record 5746);
    BEGIN
      //DOC NH2015.4 - Setting transfer receipt header
      //  -> pTransferReceiptHeader: The header

      CLEAR(mTransferHeader);
      mTransferHeader."No." := pTransferReceiptHeader."No.";
      mTransferHeader."Transfer-from Code" := pTransferReceiptHeader."Transfer-from Code";
      mTransferHeader."Transfer-from Name" := pTransferReceiptHeader."Transfer-from Name";
      mTransferHeader."Transfer-from Name 2" := pTransferReceiptHeader."Transfer-from Name 2";
      mTransferHeader."Transfer-from Address" := pTransferReceiptHeader."Transfer-from Address";
      mTransferHeader."Transfer-from Address 2" := pTransferReceiptHeader."Transfer-from Address 2";
      mTransferHeader."Transfer-from Post Code" := pTransferReceiptHeader."Transfer-from Post Code";
      mTransferHeader."Transfer-from City" := pTransferReceiptHeader."Transfer-from City";
      mTransferHeader."Transfer-from County" := pTransferReceiptHeader."Transfer-from County";
      mTransferHeader."Trsf.-from Country/Region Code" := pTransferReceiptHeader."Trsf.-from Country/Region Code";
      mTransferHeader."Transfer-to Code" := pTransferReceiptHeader."Transfer-to Code";
      mTransferHeader."Transfer-to Name" := pTransferReceiptHeader."Transfer-to Name";
      mTransferHeader."Transfer-to Name 2" := pTransferReceiptHeader."Transfer-to Name 2";
      mTransferHeader."Transfer-to Address" := pTransferReceiptHeader."Transfer-to Address";
      mTransferHeader."Transfer-to Address 2" := pTransferReceiptHeader."Transfer-to Address 2";
      mTransferHeader."Transfer-to Post Code" := pTransferReceiptHeader."Transfer-to Post Code";
      mTransferHeader."Transfer-to City" := pTransferReceiptHeader."Transfer-to City";
      mTransferHeader."Transfer-to County" := pTransferReceiptHeader."Transfer-to County";
      mTransferHeader."Trsf.-to Country/Region Code" := pTransferReceiptHeader."Trsf.-to Country/Region Code";
      mTransferHeader."Posting Date" := pTransferReceiptHeader."Posting Date";
      mTransferHeader."Shipment Date" := pTransferReceiptHeader."Shipment Date";
      mTransferHeader."Receipt Date" := pTransferReceiptHeader."Receipt Date";
      mTransferHeader.Comment := pTransferReceiptHeader.Comment;
      mTransferHeader."Shortcut Dimension 1 Code" := pTransferReceiptHeader."Shortcut Dimension 1 Code";
      mTransferHeader."Shortcut Dimension 2 Code" := pTransferReceiptHeader."Shortcut Dimension 2 Code";
      mTransferHeader."In-Transit Code" := pTransferReceiptHeader."In-Transit Code";
      mTransferHeader."No. Series" := pTransferReceiptHeader."No. Series";
      mTransferHeader."Transfer-from Contact" := pTransferReceiptHeader."Transfer-from Contact";
      mTransferHeader."Transfer-to Contact" := pTransferReceiptHeader."Transfer-to Contact";
      mTransferHeader."External Document No." := pTransferReceiptHeader."External Document No.";
      mTransferHeader."Shipping Agent Code" := pTransferReceiptHeader."Shipping Agent Code";
      mTransferHeader."Shipping Agent Service Code" := pTransferReceiptHeader."Shipping Agent Service Code";
      mTransferHeader."Shipment Method Code" := pTransferReceiptHeader."Shipment Method Code";
      mTransferHeader."Transaction Type" := pTransferReceiptHeader."Transaction Type";
      mTransferHeader."Transport Method" := pTransferReceiptHeader."Transport Method";
      mTransferHeader."Entry/Exit Point" := pTransferReceiptHeader."Entry/Exit Point";
      mTransferHeader.Area := pTransferReceiptHeader.Area;
      mTransferHeader."Transaction Specification" := pTransferReceiptHeader."Transaction Specification";
      mTransferHeader."Dimension Set ID" := pTransferReceiptHeader."Dimension Set ID";
    END;

    LOCAL PROCEDURE "--- Setting Line ---"@1000000029();
    BEGIN
    END;

    PROCEDURE SetTransferLine@1000000048(pTransferLine@1000000000 : Record 5741);
    BEGIN
      //DOC NH2015.4 - Setting transfer line
      //  -> pTransferLine: The line

      mTransferLine := pTransferLine;
    END;

    PROCEDURE SetTransferShipmentLine@1000000046(pTransferShipmentLine@1000000000 : Record 5745);
    BEGIN
      //DOC NH2015.4 - Setting transfer shipment line
      //  -> pTransferShipmentLine: The line

      CLEAR(mTransferLine);
      mTransferLine."Document No." := pTransferShipmentLine."Document No.";
      mTransferLine."Line No." := pTransferShipmentLine."Line No.";
      mTransferLine."Item No." := pTransferShipmentLine."Item No.";
      mTransferLine.Quantity := pTransferShipmentLine.Quantity;
      mTransferLine."Unit of Measure" := pTransferShipmentLine."Unit of Measure";
      mTransferLine."Shortcut Dimension 1 Code" := pTransferShipmentLine."Shortcut Dimension 1 Code";
      mTransferLine."Shortcut Dimension 2 Code" := pTransferShipmentLine."Shortcut Dimension 2 Code";
      mTransferLine.Description := pTransferShipmentLine.Description;
      mTransferLine."Gen. Prod. Posting Group" := pTransferShipmentLine."Gen. Prod. Posting Group";
      mTransferLine."Inventory Posting Group" := pTransferShipmentLine."Inventory Posting Group";
      mTransferLine."Quantity (Base)" := pTransferShipmentLine."Quantity (Base)";
      mTransferLine."Qty. per Unit of Measure" := pTransferShipmentLine."Qty. per Unit of Measure";
      mTransferLine."Unit of Measure Code" := pTransferShipmentLine."Unit of Measure Code";
      mTransferLine."Gross Weight" := pTransferShipmentLine."Gross Weight";
      mTransferLine."Net Weight" := pTransferShipmentLine."Net Weight";
      mTransferLine."Unit Volume" := pTransferShipmentLine."Unit Volume";
      mTransferLine."Variant Code" := pTransferShipmentLine."Variant Code";
      mTransferLine."Units per Parcel" := pTransferShipmentLine."Units per Parcel";
      mTransferLine."Description 2" := pTransferShipmentLine."Description 2";
      mTransferLine."In-Transit Code" := pTransferShipmentLine."In-Transit Code";
      mTransferLine."Transfer-from Code" := pTransferShipmentLine."Transfer-from Code";
      mTransferLine."Transfer-to Code" := pTransferShipmentLine."Transfer-to Code";
      mTransferLine."Shipment Date" := pTransferShipmentLine."Shipment Date";
      mTransferLine."Shipping Agent Code" := pTransferShipmentLine."Shipping Agent Code";
      mTransferLine."Shipping Agent Service Code" := pTransferShipmentLine."Shipping Agent Service Code";
      mTransferLine."Shipping Time" := pTransferShipmentLine."Shipping Time";
      mTransferLine."Dimension Set ID" := pTransferShipmentLine."Dimension Set ID";
      mTransferLine."Item Category Code" := pTransferShipmentLine."Item Category Code";
      mTransferLine."Product Group Code" := pTransferShipmentLine."Product Group Code";
      mTransferLine."Transfer-from Bin Code" := pTransferShipmentLine."Transfer-from Bin Code";
    END;

    PROCEDURE SetTransferReceiptLine@1000000038(pTransferReceiptLine@1000000000 : Record 5747);
    BEGIN
      //DOC NH2015.4 - Setting transfer receipt line
      //  -> pTransferReceiptLine: The line

      CLEAR(mTransferLine);
      mTransferLine."Document No." := pTransferReceiptLine."Document No.";
      mTransferLine."Line No." := pTransferReceiptLine."Line No.";
      mTransferLine."Item No." := pTransferReceiptLine."Item No.";
      mTransferLine.Quantity := pTransferReceiptLine.Quantity;
      mTransferLine."Unit of Measure" := pTransferReceiptLine."Unit of Measure";
      mTransferLine."Shortcut Dimension 1 Code" := pTransferReceiptLine."Shortcut Dimension 1 Code";
      mTransferLine."Shortcut Dimension 2 Code" := pTransferReceiptLine."Shortcut Dimension 2 Code";
      mTransferLine.Description := pTransferReceiptLine.Description;
      mTransferLine."Gen. Prod. Posting Group" := pTransferReceiptLine."Gen. Prod. Posting Group";
      mTransferLine."Inventory Posting Group" := pTransferReceiptLine."Inventory Posting Group";
      mTransferLine."Quantity (Base)" := pTransferReceiptLine."Quantity (Base)";
      mTransferLine."Qty. per Unit of Measure" := pTransferReceiptLine."Qty. per Unit of Measure";
      mTransferLine."Unit of Measure Code" := pTransferReceiptLine."Unit of Measure Code";
      mTransferLine."Gross Weight" := pTransferReceiptLine."Gross Weight";
      mTransferLine."Net Weight" := pTransferReceiptLine."Net Weight";
      mTransferLine."Unit Volume" := pTransferReceiptLine."Unit Volume";
      mTransferLine."Variant Code" := pTransferReceiptLine."Variant Code";
      mTransferLine."Units per Parcel" := pTransferReceiptLine."Units per Parcel";
      mTransferLine."Description 2" := pTransferReceiptLine."Description 2";
      mTransferLine."In-Transit Code" := pTransferReceiptLine."In-Transit Code";
      mTransferLine."Transfer-from Code" := pTransferReceiptLine."Transfer-from Code";
      mTransferLine."Transfer-to Code" := pTransferReceiptLine."Transfer-to Code";
      mTransferLine."Receipt Date" := pTransferReceiptLine."Receipt Date";
      mTransferLine."Shipping Agent Code" := pTransferReceiptLine."Shipping Agent Code";
      mTransferLine."Shipping Agent Service Code" := pTransferReceiptLine."Shipping Agent Service Code";
      mTransferLine."Shipping Time" := pTransferReceiptLine."Shipping Time";
      mTransferLine."Dimension Set ID" := pTransferReceiptLine."Dimension Set ID";
      mTransferLine."Item Category Code" := pTransferReceiptLine."Item Category Code";
      mTransferLine."Product Group Code" := pTransferReceiptLine."Product Group Code";
      mTransferLine."Transfer-To Bin Code" := pTransferReceiptLine."Transfer-To Bin Code";
    END;

    LOCAL PROCEDURE "--- Getting Line ---"@1000000021();
    BEGIN
    END;

    PROCEDURE GetTransferLine@1000000013(VAR pTransferLine@1000000000 : Record 5741);
    BEGIN
      //DOC NH2015.4 - Getting transfer line
      //  <> pPurchaseLine: Target line

      pTransferLine := mTransferLine;
    END;

    PROCEDURE GetTransferShipmentLine@1000000011(VAR pTransferShipmentLine@1000000000 : Record 5745);
    BEGIN
      //DOC NH2015.4 - Getting transfer shipment line
      //  <> pTransferShipmentLine: Target line

      pTransferShipmentLine."Document No." := mTransferLine."Document No.";
      pTransferShipmentLine."Line No." := mTransferLine."Line No.";
      pTransferShipmentLine."Item No." := mTransferLine."Item No.";
      pTransferShipmentLine.Quantity := mTransferLine.Quantity;
      pTransferShipmentLine."Unit of Measure" := mTransferLine."Unit of Measure";
      pTransferShipmentLine."Shortcut Dimension 1 Code" := mTransferLine."Shortcut Dimension 1 Code";
      pTransferShipmentLine."Shortcut Dimension 2 Code" := mTransferLine."Shortcut Dimension 2 Code";
      pTransferShipmentLine.Description := mTransferLine.Description;
      pTransferShipmentLine."Gen. Prod. Posting Group" := mTransferLine."Gen. Prod. Posting Group";
      pTransferShipmentLine."Inventory Posting Group" := mTransferLine."Inventory Posting Group";
      pTransferShipmentLine."Quantity (Base)" := mTransferLine."Quantity (Base)";
      pTransferShipmentLine."Qty. per Unit of Measure" := mTransferLine."Qty. per Unit of Measure";
      pTransferShipmentLine."Unit of Measure Code" := mTransferLine."Unit of Measure Code";
      pTransferShipmentLine."Gross Weight" := mTransferLine."Gross Weight";
      pTransferShipmentLine."Net Weight" := mTransferLine."Net Weight";
      pTransferShipmentLine."Unit Volume" := mTransferLine."Unit Volume";
      pTransferShipmentLine."Variant Code" := mTransferLine."Variant Code";
      pTransferShipmentLine."Units per Parcel" := mTransferLine."Units per Parcel";
      pTransferShipmentLine."Description 2" := mTransferLine."Description 2";
      pTransferShipmentLine."In-Transit Code" := mTransferLine."In-Transit Code";
      pTransferShipmentLine."Transfer-from Code" := mTransferLine."Transfer-from Code";
      pTransferShipmentLine."Transfer-to Code" := mTransferLine."Transfer-to Code";
      pTransferShipmentLine."Shipment Date" := mTransferLine."Shipment Date";
      pTransferShipmentLine."Shipping Agent Code" := mTransferLine."Shipping Agent Code";
      pTransferShipmentLine."Shipping Agent Service Code" := mTransferLine."Shipping Agent Service Code";
      pTransferShipmentLine."Shipping Time" := mTransferLine."Shipping Time";
      pTransferShipmentLine."Dimension Set ID" := mTransferLine."Dimension Set ID";
      pTransferShipmentLine."Item Category Code" := mTransferLine."Item Category Code";
      pTransferShipmentLine."Product Group Code" := mTransferLine."Product Group Code";
      pTransferShipmentLine."Transfer-from Bin Code" := mTransferLine."Transfer-from Bin Code";
    END;

    PROCEDURE GetTransferReceiptLine@1000000008(VAR pTransferReceiptLine@1000000000 : Record 5747);
    BEGIN
      //DOC NH2015.4 - Getting transfer invoice line
      //  <> pTransferReceiptLine: Target line

      pTransferReceiptLine."Document No." := mTransferLine."Document No.";
      pTransferReceiptLine."Line No." := mTransferLine."Line No.";
      pTransferReceiptLine."Item No." := mTransferLine."Item No.";
      pTransferReceiptLine.Quantity := mTransferLine.Quantity;
      pTransferReceiptLine."Unit of Measure" := mTransferLine."Unit of Measure";
      pTransferReceiptLine."Shortcut Dimension 1 Code" := mTransferLine."Shortcut Dimension 1 Code";
      pTransferReceiptLine."Shortcut Dimension 2 Code" := mTransferLine."Shortcut Dimension 2 Code";
      pTransferReceiptLine.Description := mTransferLine.Description;
      pTransferReceiptLine."Gen. Prod. Posting Group" := mTransferLine."Gen. Prod. Posting Group";
      pTransferReceiptLine."Inventory Posting Group" := mTransferLine."Inventory Posting Group";
      pTransferReceiptLine."Quantity (Base)" := mTransferLine."Quantity (Base)";
      pTransferReceiptLine."Qty. per Unit of Measure" := mTransferLine."Qty. per Unit of Measure";
      pTransferReceiptLine."Unit of Measure Code" := mTransferLine."Unit of Measure Code";
      pTransferReceiptLine."Gross Weight" := mTransferLine."Gross Weight";
      pTransferReceiptLine."Net Weight" := mTransferLine."Net Weight";
      pTransferReceiptLine."Unit Volume" := mTransferLine."Unit Volume";
      pTransferReceiptLine."Variant Code" := mTransferLine."Variant Code";
      pTransferReceiptLine."Units per Parcel" := mTransferLine."Units per Parcel";
      pTransferReceiptLine."Description 2" := mTransferLine."Description 2";
      pTransferReceiptLine."In-Transit Code" := mTransferLine."In-Transit Code";
      pTransferReceiptLine."Transfer-from Code" := mTransferLine."Transfer-from Code";
      pTransferReceiptLine."Transfer-to Code" := mTransferLine."Transfer-to Code";
      pTransferReceiptLine."Receipt Date" := mTransferLine."Receipt Date";
      pTransferReceiptLine."Shipping Agent Code" := mTransferLine."Shipping Agent Code";
      pTransferReceiptLine."Shipping Agent Service Code" := mTransferLine."Shipping Agent Service Code";
      pTransferReceiptLine."Shipping Time" := mTransferLine."Shipping Time";
      pTransferReceiptLine."Dimension Set ID" := mTransferLine."Dimension Set ID";
      pTransferReceiptLine."Item Category Code" := mTransferLine."Item Category Code";
      pTransferReceiptLine."Product Group Code" := mTransferLine."Product Group Code";
      pTransferReceiptLine."Transfer-To Bin Code" := mTransferLine."Transfer-To Bin Code";
    END;

    PROCEDURE "--- System-Wide ---"@1000000005();
    BEGIN
    END;

    PROCEDURE CompanyShortAddress@1000000003(VAR pCompanyShortAddress@1000000000 : ARRAY [2] OF Text[250]);
    BEGIN
      //DOC TMPM1.04 - Creating company short address
      //  <> pCompanyShortAddress: Target array

      mDocumentPrintoutToolkit.CompanyShortAddress(pCompanyShortAddress);
    END;

    PROCEDURE ReportImages@1000000049(VAR pImage@1000000000 : Record 99008535;pAlternative@1000000002 : Boolean);
    BEGIN
      //DOC TMPM1.04 - Returning report images
      //  <> pImage: Target image
      //  -> pAlternative: Flag to load alternative images

      mDocumentPrintoutToolkit.ReportImages(pImage, pAlternative);
    END;

    PROCEDURE "--- General Information ---"@1000000017();
    BEGIN
    END;

    PROCEDURE FromContactInformation@1000000020(VAR pContact@1000000000 : Record 5050);
    BEGIN
      //DOC NH2015.4 - Returning "from" contact information
      //  <> pContact: Target contact record

      ContactInformation(mTransferHeader."Transfer-from Code", mTransferHeader."Transfer-from Contact", pContact);
    END;

    PROCEDURE ToContactInformation@1000000022(VAR pContact@1000000000 : Record 5050);
    BEGIN
      //DOC NH2015.4 - Returning "to" contact information
      //  <> pContact: Target contact record

      ContactInformation(mTransferHeader."Transfer-to Code", mTransferHeader."Transfer-to Contact", pContact);
    END;

    LOCAL PROCEDURE ContactInformation@1000000006(pLocationCode@1000000003 : Code[10];pContactName@1000000004 : Text[50];VAR pContact@1000000000 : Record 5050);
    VAR
      lLocation@1000000002 : Record 14;
      lLocationContact@1000000001 : Record 5050;
    BEGIN
      //DOC NH2015.4 - Returning contact information
      //  -> pLocationCode: Location code
      //  -> pContactName: Contact name
      //  <> pContact: Target contact record

      IF (lLocation.GET(pLocationCode)) THEN
        mDocumentPrintoutToolkit.LocationToContact(lLocation, lLocationContact);

      mDocumentPrintoutToolkit.ContactInformation('', pContactName, lLocationContact, pContact);
    END;

    LOCAL PROCEDURE "--- Texts ---"@1000000018();
    BEGIN
    END;

    PROCEDURE ShipmentMethodText@1000000024() : Text[100];
    BEGIN
      //DOC TMPM1.04 - Returning shipment method text
      //  <- The text

      EXIT(mDocumentPrintoutToolkit.ShipmentMethodText(mTransferHeader."Shipment Method Code"));
    END;

    PROCEDURE "--- Copy Tools ---"@1000000012();
    BEGIN
    END;

    PROCEDURE FilterCopy@1000000016(pCopies@1000000000 : Integer;VAR pCopy@1000000001 : Record 2000000026);
    BEGIN
      //DOC TMPM1.00 - Filtering copies recordset (Integer)
      //  -> pCopies: Number of copies
      //  <> pCopy: Copies recordset (Integer) to filter

      mDocumentPrintoutToolkit.FilterCopy(pCopies, pCopy);
    END;

    PROCEDURE NextCopy@1000000019(pCopy@1000000000 : Record 2000000026;VAR pCopyText@1000000001 : Text[10]);
    BEGIN
      //DOC TMPM1.00 - Next copy
      //  -> pCopy: Copy record (Integer)
      //  <> pCopyText: Target copy text

      mDocumentPrintoutToolkit.NextCopy(pCopy, pCopyText);
    END;

    PROCEDURE "--- Line Tools ---"@1000000002();
    BEGIN
    END;

    PROCEDURE ClearLineIndex@1000000007();
    BEGIN
      //DOC TMPM1.00 - Clearing line index

      mDocumentPrintoutToolkit.ClearLineIndex();
    END;

    PROCEDURE NextLineIndex@1000000033(VAR pLineIndex@1000000002 : Integer;VAR pLineIndexText@1000000001 : Text[10]);
    BEGIN
      //DOC TMPM1.00 - Processing line index
      //  <> pLineIndex: Target line index
      //  <> pLineIndexText: Target line index text

      mDocumentPrintoutToolkit.NextLineIndex(mType::Item, pLineIndex, pLineIndexText);
    END;

    PROCEDURE LineDescription@1000000010() : Text;
    BEGIN
      //DOC NH2015.4 - Returning line description
      //  <- The description

      EXIT(mDocumentPrintoutToolkit.LineDescription(mTransferLine.Description, mTransferLine."Description 2"));
    END;

    PROCEDURE LineInternalInformation@1000000039(pShowInternalInformation@1000000001 : Boolean);
    BEGIN
      //DOC NH2015.2 - Amending sales line internal information
      //  -> pShowInternalInformation: Show internal information flag

      mType := mType::Item;
      mDocumentPrintoutToolkit.LineInternalInformation(pShowInternalInformation, mType, mTransferLine."Item No.");
    END;

    LOCAL PROCEDURE "--- Formatting ---"@1000000042();
    BEGIN
    END;

    PROCEDURE FormatDate@1000000036(pDate@1000000000 : Date) : Text;
    BEGIN
      //DOC NH2015.4 - Formatting date
      //  -> pDate: Date to format
      //  <- Formatted date

      EXIT(mDocumentPrintoutToolkit.FormatDate(pDate));
    END;

    PROCEDURE FormatTime@1000000035(pTime@1000000000 : Time) : Text;
    BEGIN
      //DOC NH2015.4 - Formatting time
      //  -> pTime: Time to format
      //  <- Formatted time

      EXIT(mDocumentPrintoutToolkit.FormatTime(pTime));
    END;

    PROCEDURE FormatDateTime@1000000025(pDateTime@1000000000 : DateTime) : Text;
    BEGIN
      //DOC NH2015.4 - Formatting datetime
      //  -> pDateTime: Datetime to format
      //  <- Formatted datetime

      EXIT(mDocumentPrintoutToolkit.FormatDateTime(pDateTime));
    END;

    BEGIN
    {
      //DOC NH2015.1 JH 27/05/2014 - Created
      //DOC NH2015.4 JH 07/12/2014 - Purchase documents support added
      //DOC NH2016.4 JH 23/09/2015 - Upgraded to 2016
    }
    END.
  }
}

