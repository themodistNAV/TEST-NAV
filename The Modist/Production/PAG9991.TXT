OBJECT Page 9991 Code Coverage Setup
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Code Coverage Setup;
               ENG=Code Coverage Setup];
    SaveValues=Yes;
    OnOpenPage=BEGIN
                 SetDefaultValues;
                 CodeCoverageMgt.StartAutomaticBackup(TimeInterval,BackupPath,SummaryPath);
               END;

  }
  CONTROLS
  {
    { 1000;    ;Container ;
                Name=Container;
                ContainerType=ContentArea }

    { 1001;1   ;Field     ;
                Name=<TimeInterval>;
                CaptionML=[ENU=Time Interval (minutes);
                           ENG=Time Interval (minutes)];
                SourceExpr=TimeInterval;
                OnValidate=VAR
                             DefaultTimeIntervalInt@1001 : Integer;
                           BEGIN
                             EVALUATE(DefaultTimeIntervalInt,DefaultTimeIntervalInMinutesTxt);
                             IF TimeInterval < DefaultTimeIntervalInt THEN
                               ERROR(TimeIntervalErr);

                             CodeCoverageMgt.UpdateAutomaticBackupSettings(TimeInterval,BackupPath,SummaryPath);
                             MESSAGE(AppliedSettingsSuccesfullyMsg);
                           END;
                            }

    { 1002;1   ;Field     ;
                Name=<BackupPath>;
                CaptionML=[ENU=Backup Path;
                           ENG=Backup Path];
                SourceExpr=BackupPath;
                OnValidate=BEGIN
                             IF BackupPath = '' THEN
                               ERROR(BackupPathErr);

                             CodeCoverageMgt.UpdateAutomaticBackupSettings(TimeInterval,BackupPath,SummaryPath);
                             MESSAGE(AppliedSettingsSuccesfullyMsg);
                           END;

                OnAssistEdit=BEGIN
                               BackupPath := GetFolder;
                               IF BackupPath = '' THEN
                                 ERROR(BackupPathErr);

                               CodeCoverageMgt.UpdateAutomaticBackupSettings(TimeInterval,BackupPath,SummaryPath);
                               MESSAGE(AppliedSettingsSuccesfullyMsg);
                             END;
                              }

    { 1   ;1   ;Field     ;
                Name=<SummaryPath>;
                CaptionML=[ENU=Summary Path;
                           ENG=Summary Path];
                SourceExpr=SummaryPath;
                OnValidate=BEGIN
                             IF SummaryPath = '' THEN
                               ERROR(SummaryPathErr);

                             CodeCoverageMgt.UpdateAutomaticBackupSettings(TimeInterval,BackupPath,SummaryPath);
                             MESSAGE(AppliedSettingsSuccesfullyMsg);
                           END;

                OnAssistEdit=BEGIN
                               SummaryPath := GetFolder;
                               IF SummaryPath = '' THEN
                                 ERROR(SummaryPathErr);

                               CodeCoverageMgt.UpdateAutomaticBackupSettings(TimeInterval,BackupPath,SummaryPath);
                               MESSAGE(AppliedSettingsSuccesfullyMsg);
                             END;
                              }

  }
  CODE
  {
    VAR
      CodeCoverageMgt@1003 : Codeunit 9990;
      TimeInterval@1000 : Integer;
      BackupPath@1001 : Text[1024];
      SummaryPath@1002 : Text[1024];
      AppliedSettingsSuccesfullyMsg@1007 : TextConst 'ENU=Automatic Backup settings applied successfully.;ENG=Automatic Backup settings applied successfully.';
      BackupPathErr@1006 : TextConst 'ENU=Backup Path must have a value.;ENG=Backup Path must have a value.';
      DefaultTimeIntervalInMinutesTxt@1008 : TextConst 'ENU=10;ENG=10';
      SummaryPathErr@1005 : TextConst 'ENU=Summary Path must have a value.;ENG=Summary Path must have a value.';
      TimeIntervalErr@1004 : TextConst 'ENU=Time Interval must have a value greater than or equal to 10.;ENG=Time Interval must have a value greater than or equal to 10.';

    PROCEDURE GetFolder@1000() : Text[1024];
    VAR
      FolderBrowserDialog@1000 : DotNet "'System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Windows.Forms.FolderBrowserDialog" RUNONCLIENT;
    BEGIN
      FolderBrowserDialog := FolderBrowserDialog.FolderBrowserDialog;
      FolderBrowserDialog.ShowNewFolderButton(TRUE);
      FolderBrowserDialog.Description('Select Folder');
      FolderBrowserDialog.ShowDialog;
      IF FolderBrowserDialog.SelectedPath <> '' THEN
        EXIT(FolderBrowserDialog.SelectedPath + '\')
    END;

    PROCEDURE SetDefaultValues@2();
    BEGIN
      // Set default values for automatic backups settings, in case they don't exist
      IF TimeInterval < 10 THEN
        EVALUATE(TimeInterval,DefaultTimeIntervalInMinutesTxt);
      IF BackupPath = '' THEN
        BackupPath := APPLICATIONPATH;
      IF SummaryPath = '' THEN
        SummaryPath := APPLICATIONPATH;
    END;

    BEGIN
    END.
  }
}

