OBJECT Table 9062238 Text/Comment Extension
{
  OBJECT-PROPERTIES
  {
    Date=10/05/16;
    Time=12:00:00 PM;
    Version List=NA2016.15;
  }
  PROPERTIES
  {
    OnInsert=VAR
               Category@1000000000 : Record 9062239;
               TxtExt@1000000001 : Record 9062238;
             BEGIN
               IF "Line No." = 0 THEN BEGIN
                 TxtExt.SETRANGE("Table No.","Table No.");
                 TxtExt.SETRANGE("Field No.","Field No.");
                 TxtExt.SETRANGE(PositionText,PositionText);
                 IF TxtExt.FINDLAST THEN
                   "Line No." := TxtExt."Line No." + 10000
                 ELSE
                   "Line No." := 10000;
               END;

               VALIDATE("Inserted Date",TODAY);
               VALIDATE("Inserted Time",TIME);
               VALIDATE("Inserted by UserID",USERID);

               IF "Comment Style" THEN BEGIN
                 IF Category.GET("Table No.",Category) THEN BEGIN
                   IF NOT Category."Has Comment Entries" THEN BEGIN
                     Category.VALIDATE("Has Comment Entries",TRUE);
                     Category.MODIFY(TRUE);
                   END;
                 END;
               END;
             END;

    OnModify=BEGIN
               VALIDATE("Last Modified Date",TODAY);
               VALIDATE("Last Modified Time",TIME);
               VALIDATE("Last Modified by UserID",USERID);
             END;

    CaptionML=[ENU=Text/Comment Extension;
               ENG=Text/Comment Extension];
    LookupPageID=Page9062258;
    DrillDownPageID=Page9062258;
  }
  FIELDS
  {
    { 1   ;   ;Table No.           ;Integer       ;TableRelation=Object.ID WHERE (Type=CONST(Table));
                                                   CaptionML=[ENU=Table No.;
                                                              ENG=Table No.];
                                                   Editable=No }
    { 2   ;   ;Field No.           ;Integer       ;TableRelation=Field.No. WHERE (TableNo=FIELD(Table No.));
                                                   OnValidate=VAR
                                                                Field@1000000000 : Record 2000000041;
                                                                Object@1000000001 : Record 2000000001;
                                                                CreateCat@1000000002 : Boolean;
                                                                TxtCat@1000000003 : Record 9062239;
                                                              BEGIN
                                                                IF Category = '' THEN BEGIN
                                                                  IF Field.GET("Table No.","Field No.") THEN BEGIN
                                                                    CreateCat := TRUE;
                                                                    Category := Field.FieldName;
                                                                  END ELSE BEGIN
                                                                    Object.SETRANGE(Type,Object.Type::Table);
                                                                    Object.SETRANGE(ID,"Table No.");
                                                                    IF Object.FINDFIRST THEN BEGIN
                                                                      Category := Object.Name;
                                                                      CreateCat := TRUE;
                                                                    END;
                                                                  END;
                                                                END;

                                                                IF CreateCat THEN BEGIN
                                                                  IF NOT TxtCat.GET("Table No.",Category) THEN BEGIN
                                                                    TxtCat.INIT;
                                                                    TxtCat.VALIDATE("Table No.","Table No.");
                                                                    TxtCat.VALIDATE("Category Code",Category);
                                                                    TxtCat.INSERT(TRUE);
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Field No.;
                                                              ENG=Field No.];
                                                   Editable=No }
    { 3   ;   ;PositionText        ;Text250       ;OnValidate=BEGIN
                                                                SetPrimaryKeyFields();
                                                              END;

                                                   CaptionML=[ENU=PositionText;
                                                              ENG=PositionText];
                                                   Editable=No }
    { 4   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              ENG=Line No.];
                                                   Editable=No }
    { 5   ;   ;BLOB                ;BLOB          ;CaptionML=[ENU=BLOB;
                                                              ENG=BLOB];
                                                   SubType=Memo }
    { 6   ;   ;Summary             ;Text250       ;CaptionML=[ENU=Summary;
                                                              ENG=Summary];
                                                   Editable=No }
    { 7   ;   ;Length              ;Integer       ;CaptionML=[ENU=Length;
                                                              ENG=Length] }
    { 8   ;   ;Inserted Date       ;Date          ;CaptionML=[ENU=Inserted Date;
                                                              ENG=Inserted Date];
                                                   Editable=No }
    { 9   ;   ;Inserted Time       ;Time          ;CaptionML=[ENU=Inserted Time;
                                                              ENG=Inserted Time];
                                                   Editable=No }
    { 10  ;   ;Inserted by UserID  ;Code50        ;CaptionML=[ENU=Inserted by UserID;
                                                              ENG=Inserted by UserID];
                                                   Editable=No }
    { 11  ;   ;Last Modified Date  ;Date          ;CaptionML=[ENU=Last Modified Date;
                                                              ENG=Last Modified Date];
                                                   Editable=No }
    { 12  ;   ;Last Modified Time  ;Time          ;CaptionML=[ENU=Last Modified Time;
                                                              ENG=Last Modified Time];
                                                   Editable=No }
    { 13  ;   ;Last Modified by UserID;Code50     ;CaptionML=[ENU=Last Modified by UserID;
                                                              ENG=Last Modified by UserID];
                                                   Editable=No }
    { 14  ;   ;Category            ;Code30        ;TableRelation="Text/Comment Ext. Category"."Category Code" WHERE (Table No.=FIELD(Table No.));
                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=Category;
                                                              ENG=Category] }
    { 15  ;   ;Comment Style       ;Boolean       ;CaptionML=[ENU=Comment Style;
                                                              ENG=Comment Style] }
    { 20  ;   ;Primary Key Field ID 1;Integer     ;CaptionML=[ENU=Primary Key Field ID 1;
                                                              ENG=Primary Key Field ID 1] }
    { 21  ;   ;Primary Key Field ID 2;Integer     ;CaptionML=[ENU=Primary Key Field ID 2;
                                                              ENG=Primary Key Field ID 2] }
    { 22  ;   ;Primary Key Field ID 3;Integer     ;CaptionML=[ENU=Primary Key Field ID 3;
                                                              ENG=Primary Key Field ID 3] }
    { 23  ;   ;Primary Key Field ID 4;Integer     ;CaptionML=[ENU=Primary Key Field ID 4;
                                                              ENG=Primary Key Field ID 4] }
    { 24  ;   ;Primary Key Field ID 5;Integer     ;CaptionML=[ENU=Primary Key Field ID 5;
                                                              ENG=Primary Key Field ID 5] }
    { 25  ;   ;Primary Key Value 1 ;Text250       ;CaptionML=[ENU=Primary Key Value 1;
                                                              ENG=Primary Key Value 1] }
    { 26  ;   ;Primary Key Value 2 ;Text250       ;CaptionML=[ENU=Primary Key Value 2;
                                                              ENG=Primary Key Value 2] }
    { 27  ;   ;Primary Key Value 3 ;Text250       ;CaptionML=[ENU=Primary Key Value 3;
                                                              ENG=Primary Key Value 3] }
    { 28  ;   ;Primary Key Value 4 ;Text250       ;CaptionML=[ENU=Primary Key Value 4;
                                                              ENG=Primary Key Value 4] }
    { 29  ;   ;Primary Key Value 5 ;Text250       ;CaptionML=[ENU=Primary Key Value 5;
                                                              ENG=Primary Key Value 5] }
  }
  KEYS
  {
    {    ;Table No.,Field No.,PositionText,Line No.;
                                                   Clustered=Yes }
    {    ;Table No.,PositionText,Category,Line No. }
    {    ;Table No.,PositionText,Field No.,Line No. }
    {    ;Table No.,Field No.,PositionText,Last Modified Date,Last Modified Time }
    {    ;Table No.,Field No.,PositionText,Inserted Date,Inserted Time }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      TNPUtils@1000000000 : Codeunit 9062229;

    PROCEDURE SetText@1000000000(TheText@1000000000 : Text;AlwaysCreateRecord@1000000005 : Boolean) IsSet : Boolean;
    VAR
      OutStr@1000000002 : OutStream;
      TextBuf@1000000001 : Text[1024];
      i@1000000003 : Integer;
      Field@1000000004 : Record 2000000041;
    BEGIN
      Field.GET("Table No.","Field No.");
      IF NOT AlwaysCreateRecord THEN BEGIN
        IF STRLEN(TheText) <= Field.Len THEN BEGIN
          DELETE(TRUE);
          EXIT(FALSE);
        END;
      END;

      CALCFIELDS(BLOB);
      BLOB.CREATEOUTSTREAM(OutStr);
      CLEAR(BLOB);
      IF STRLEN(TheText) <> 0 THEN BEGIN
        i := 0;
        REPEAT
          TextBuf := COPYSTR(TheText,1+(i*MAXSTRLEN(TextBuf)),MAXSTRLEN(TextBuf));
          OutStr.WRITE(TextBuf,STRLEN(TextBuf));
          i += 1;
        UNTIL STRLEN(TextBuf) < MAXSTRLEN(TextBuf);
      END;

      Summary := COPYSTR(TheText,1,MAXSTRLEN(Summary));
      Length := STRLEN(TheText);

      EXIT(TRUE);
    END;

    PROCEDURE SetText_FromBigText@1000000001(TheText@1000000000 : BigText;AlwaysCreateRecord@1000000005 : Boolean) IsSet : Boolean;
    VAR
      OutStr@1000000002 : OutStream;
      TextBuf@1000000001 : Text[1024];
      i@1000000003 : Integer;
      Field@1000000004 : Record 2000000041;
    BEGIN
      Field.GET("Table No.","Field No.");
      IF NOT AlwaysCreateRecord THEN BEGIN
        IF TheText.LENGTH <= Field.Len THEN BEGIN
          DELETE(TRUE);
          EXIT(FALSE);
        END;
      END;

      CALCFIELDS(BLOB);
      BLOB.CREATEOUTSTREAM(OutStr);
      CLEAR(BLOB);

      //DO stuff to write Bigtext into BLOB
      TheText.WRITE(OutStr);

      TheText.GETSUBTEXT(Summary,1,250);
      Length := TheText.LENGTH;

      EXIT(TRUE);
    END;

    PROCEDURE GetText@1000000005(Length@1000000002 : Integer) TheText : Text;
    VAR
      InStr@1000000000 : InStream;
      TextBuf@1000000001 : Text[1024];
      CRLF@1000000003 : Text[2];
    BEGIN
      CRLF := '';
      CRLF[1] := 13;
      CRLF[2] := 10;

      CALCFIELDS(BLOB);
      BLOB.CREATEINSTREAM(InStr);

      IF BLOB.HASVALUE THEN BEGIN
        REPEAT
          InStr.READ(TextBuf);
          IF TextBuf <> '' THEN
            TheText += TextBuf
          ELSE
            IF NOT InStr.EOS THEN TheText += CRLF;
        UNTIL InStr.EOS;
      END;

      IF Length = 0 THEN
        EXIT(TheText)
      ELSE
        EXIT(COPYSTR(TheText,1,Length));
    END;

    PROCEDURE SetPrimaryKeyFields@1000000002();
    BEGIN
      IF "Table No." = 0 THEN EXIT;
      IF PositionText = '' THEN EXIT;

      "Primary Key Field ID 1" := TNPUtils.GetPrimaryKeyFieldID("Table No.",PositionText,1);
      IF "Primary Key Field ID 1" <> 0 THEN "Primary Key Value 1" := TNPUtils.GetPrimaryKey("Table No.",PositionText,1);

      "Primary Key Field ID 2" := TNPUtils.GetPrimaryKeyFieldID("Table No.",PositionText,2);
      IF "Primary Key Field ID 2" <> 0 THEN "Primary Key Value 2" := TNPUtils.GetPrimaryKey("Table No.",PositionText,2);

      "Primary Key Field ID 3" := TNPUtils.GetPrimaryKeyFieldID("Table No.",PositionText,3);
      IF "Primary Key Field ID 3" <> 0 THEN "Primary Key Value 3" := TNPUtils.GetPrimaryKey("Table No.",PositionText,3);

      "Primary Key Field ID 4" := TNPUtils.GetPrimaryKeyFieldID("Table No.",PositionText,4);
      IF "Primary Key Field ID 4" <> 0 THEN "Primary Key Value 4" := TNPUtils.GetPrimaryKey("Table No.",PositionText,4);

      "Primary Key Field ID 5" := TNPUtils.GetPrimaryKeyFieldID("Table No.",PositionText,5);
      IF "Primary Key Field ID 5" <> 0 THEN "Primary Key Value 5" := TNPUtils.GetPrimaryKey("Table No.",PositionText,5);
    END;

    BEGIN
    {
      //DOC NA2015.1 PC 25/02/2013 - Created
      //DOC NA2015.8 JH 13/07/2015 - "SetText_FromBigText" added
      //DOC NA2016.8 JH 27/08/2015 - Upgraded to 2016
      //DOC NA2016.15 JH 15/04/2016 - CfMD amendments
    }
    END.
  }
}

