OBJECT Codeunit 60000 Test SFTP Upload
{
  OBJECT-PROPERTIES
  {
    Date=23/12/16;
    Time=[ 1:07:56 PM];
    Modified=Yes;
    Version List=OP9031;
  }
  PROPERTIES
  {
    OnRun=BEGIN

            IF CONFIRM('Upload to SFTP?') THEN BEGIN
              ExportXML;
              MESSAGE('Done!');
            END;
          END;

  }
  CODE
  {

    LOCAL PROCEDURE ExportXML@1000000001();
    VAR
      XMLDoc@1000000000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
      XMLWriter@1000000001 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlWriter";
      ModistSetup@1000000002 : Record 50000;
      Style@1000000003 : Record 9087012;
      Item@1000000004 : Record 27;
      WebIntegrationManagement@1000000005 : Codeunit 50100;
      FileAttachment@1000000006 : Record 9062272;
      Vendor@1000000007 : Record 23;
      Colour@1000000009 : Record 9087003;
      Size@1000000008 : Record 9087002;
      ItemColours@1000000010 : Record 27;
      ItemVariant@1000000011 : Record 5401;
      GeneralLookup@1000000012 : Record 9062232;
      ItemXRef@1000000013 : Record 5717;
      BrandName@1000000016 : Text;
      IntegrationProcessingGroup@1000000014 : Record 50007;
      FileName@1000000015 : Text;
    BEGIN
      ModistSetup.GET;

      IntegrationProcessingGroup.GET(ModistSetup."Demandware Integration Type",ModistSetup."Demandware Catalogue Group");

      FileName := WebIntegrationManagement.CatalogFileName;


      IF IntegrationProcessingGroup."Enable SFTP Connect" THEN BEGIN //if we are ready to connect to sftp
        //IF  FILE.EXISTS(FileName) THEN BEGIN //Check the file exists and move to SFTP location and archive
        WebIntegrationManagement.TransferFTPfiles(IntegrationProcessingGroup."Working Location",IntegrationProcessingGroup."Archive Location",'.xml',ModistSetup."FTP temporary file extension",
                                                ModistSetup."Demandware Export SFTP Server",IntegrationProcessingGroup."FTP Folder",IntegrationProcessingGroup."FTP Archive Folder",TRUE);
        //END;
      END;
    END;

    LOCAL PROCEDURE GetMasterColour@1000000007(ColourCode@1000000000 : Code[10]) : Text;
    VAR
      lColour@1000000001 : Record 9087003;
      MasterColour@1000000002 : Record 9087050;
    BEGIN
      //DOC OP9031 LF 19/10/2016 -
      //This function derives the Master Colour associated with a colour and returns the Master Colour description
      IF lColour.GET(ColourCode) THEN
        IF MasterColour.GET(lColour."Master Colour Code") THEN
          EXIT(MasterColour.Description);
      //DOC OP9031 LF 19/10/2016 +
    END;

    LOCAL PROCEDURE GetBrandName@1000000002(BrandCode@1000000000 : Code[10]) : Text;
    VAR
      Brand@1000000001 : Record 9087006;
    BEGIN
      //DOC OP9031 LF 19/10/2016 -
      //This function derives the Brand Name
      IF Brand.GET(BrandCode) THEN
        EXIT(Brand.Name);
      //DOC OP9031 LF 19/10/2016 +
    END;

    LOCAL PROCEDURE GetSizeName@1000000003(SizeGroupCode@1000000000 : Code[20];SizeCode@1000000002 : Code[20]) : Text;
    VAR
      Size@1000000001 : Record 9087002;
    BEGIN
      //DOC OP9031 LF 20/10/2016 -
      //This function derives the Size Name
      IF Size.GET(SizeGroupCode,SizeCode) THEN
        EXIT(Size.Name);
      //DOC OP9031 LF 20/10/2016 +
    END;

    LOCAL PROCEDURE GetStandardSizeCode@1000000000(SizeGroupCode@1000000000 : Code[20];SizeCode@1000000002 : Code[20]) : Text;
    VAR
      Size@1000000001 : Record 9087002;
      SizeCodeTemp@1000000003 : Code[10];
    BEGIN
      //DOC OP9031 LF 06/12/2016 -
      //This function derives the standard size code
      SizeCodeTemp:='';
      IF Size.GET(SizeGroupCode,SizeCode) THEN BEGIN
        IF Size."Standard Size Code" <> '' THEN
          EXIT(Size."Standard Size Code")
        ELSE
          EXIT(SizeCode);
      END;
      //DOC OP9031 LF 06/12/2016 +
    END;

    LOCAL PROCEDURE GetSizeGroupName@1000000004(SizeGroupCode@1000000000 : Code[20]) : Text;
    VAR
      SizeGroup@1000000001 : Record 9087001;
    BEGIN
      //DOC OP9031 LF 22/12/2016 -
      //This function derives the Size Group Namee
      IF SizeGroup.GET(SizeGroupCode) THEN BEGIN
          EXIT(SizeGroup.Name)
      END;
      //DOC OP9031 LF 22/12/2016 +
    END;

    LOCAL PROCEDURE GetStandardSizeName@1000000006(SizeGroupCode@1000000000 : Code[20];SizeCode@1000000002 : Code[20]) : Text;
    VAR
      Size@1000000001 : Record 9087002;
      SizeCodeTemp@1000000003 : Code[10];
      TempName@1000000004 : Text;
    BEGIN
      //DOC OP9031 LF 06/12/2016 -
      //This function derives the standard size code
      SizeCodeTemp:='';
      IF Size.GET(SizeGroupCode,SizeCode) THEN BEGIN
        IF Size."Standard Size Code" <> '' THEN BEGIN
          TempName := GetStandardSizeName(Size."Standard Size Group Code",Size."Standard Size Code");
          IF TempName = '' THEN
            TempName := Size.Name;
        END ELSE
          TempName := Size.Name;
      END;
      EXIT(TempName);
      //DOC OP9031 LF 06/12/2016 +
    END;

    BEGIN
    {
      //DOC OP9031 LF 06/12/2016 - Added the custom attribute for Standard Size code to the variants
    }
    END.
  }
}

