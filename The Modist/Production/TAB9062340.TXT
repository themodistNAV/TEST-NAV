OBJECT Table 9062340 Planning Board Table Field
{
  OBJECT-PROPERTIES
  {
    Date=10/05/16;
    Time=12:00:00 PM;
    Version List=NA2016.15;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               Rec.TESTFIELD("Planning Board Code");
               Rec.TESTFIELD("Planning Board Table Type");
               Rec.TESTFIELD("Field Application");
               CheckModifyPermission();
               IF (Rec.ID = 0) THEN
                 Rec.VALIDATE(ID, FindNewId());
               IF (Rec.Index = 0) THEN
                 Rec.VALIDATE(Index, FindNewIndex());
               UpdateTableId();
               TnpToolkit.UpdateCreatedBy(Rec."Created By", Rec."Created Date Time");
             END;

    OnModify=BEGIN
               CheckModifyPermission();
               TnpToolkit.UpdateModifiedBy(Rec."Modified By", Rec."Modified Date Time");
             END;

    OnDelete=BEGIN
               CheckModifyPermission();
               CriteriaManagement.DeleteCriteria(Rec."Lookup Table Criteria ID");
             END;

    OnRename=BEGIN
               CheckModifyPermission();
             END;

    CaptionML=[ENU=Planning Board Table Field;
               ENG=Planning Board Table Field];
  }
  FIELDS
  {
    { 1   ;   ;Planning Board Code ;Code20        ;TableRelation="Planning Board Header";
                                                   CaptionML=[ENU=Planning Board Code;
                                                              ENG=Planning Board Code] }
    { 2   ;   ;Planning Board Table Type;Option   ;CaptionML=[ENU=Planning Board Table Type;
                                                              ENG=Planning Board Table Type];
                                                   OptionCaptionML=[ENU=" ,Resource,Entry";
                                                                    ENG=" ,Resource,Entry"];
                                                   OptionString=[ ,Resource,Entry] }
    { 3   ;   ;Field Application   ;Option        ;CaptionML=[ENU=Field Application;
                                                              ENG=Field Application];
                                                   OptionCaptionML=[ENU=" ,Caption,Filter";
                                                                    ENG=" ,Caption,Filter"];
                                                   OptionString=[ ,Caption,Filter] }
    { 4   ;   ;ID                  ;Integer       ;CaptionML=[ENU=ID;
                                                              ENG=ID] }
    { 10  ;   ;Index               ;Integer       ;OnValidate=BEGIN
                                                                CASE (Rec."Field Application") OF
                                                                  Rec."Field Application"::Caption:
                                                                    IF (Rec.Index > 16) THEN
                                                                      Rec.Index := 16;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Index;
                                                              ENG=Index];
                                                   MinValue=0 }
    { 11  ;   ;Table ID            ;Integer       ;TableRelation=AllObj."Object ID" WHERE (Object Type=CONST(Table));
                                                   OnValidate=BEGIN
                                                                IF (Rec."Table ID" <> xRec."Table ID") THEN
                                                                BEGIN
                                                                  Rec.VALIDATE("Field Type", Rec."Field Type"::Field);
                                                                  Rec.VALIDATE("Field ID", 0);
                                                                END;
                                                                Rec.CALCFIELDS("Table Caption");
                                                              END;

                                                   CaptionML=[ENU=Table ID;
                                                              ENG=Table ID] }
    { 12  ;   ;Table Caption       ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObjWithCaption."Object Caption" WHERE (Object Type=CONST(Table),
                                                                                                                Object ID=FIELD(Table ID)));
                                                   CaptionML=[ENU=Table Caption;
                                                              ENG=Table Caption];
                                                   Editable=No }
    { 13  ;   ;Field Type          ;Option        ;OnValidate=BEGIN
                                                                IF (Rec."Field Type" <> xRec."Field Type") THEN
                                                                  Rec.VALIDATE("Field ID", 0);
                                                              END;

                                                   CaptionML=[ENU=Field Type;
                                                              ENG=Field Type];
                                                   OptionCaptionML=[ENU=" ,Field,Enhanced Field";
                                                                    ENG=" ,Field,Enhanced Field"];
                                                   OptionString=[ ,Field,Enhanced Field] }
    { 14  ;   ;Field ID            ;Integer       ;OnValidate=BEGIN
                                                                ObjectFieldToolkit.ValidateFieldIdAdv(Rec."Table ID", Rec."Field Type", Rec."Field ID");
                                                                IF (Rec."Field ID" <> xRec."Field ID") THEN
                                                                BEGIN
                                                                  UpdateLookup();
                                                                  UpdateCaption();
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF (ObjectFieldToolkit.FieldLookupAdv(Rec."Table ID", Rec."Field Type", Rec."Field ID")) THEN
                                                                Rec.VALIDATE("Field ID");
                                                            END;

                                                   CaptionML=[ENU=Field ID;
                                                              ENG=Field ID] }
    { 20  ;   ;Lookup Table ID     ;Integer       ;TableRelation=AllObj."Object ID" WHERE (Object Type=CONST(Table));
                                                   OnValidate=BEGIN
                                                                IF (Rec."Lookup Table ID" <> xRec."Lookup Table ID") THEN
                                                                BEGIN
                                                                  IF (Rec."Lookup Table Criteria ID" <> 0) THEN
                                                                  BEGIN
                                                                    IF (Criteria.GET(Rec."Lookup Table Criteria ID")) THEN
                                                                      Criteria.DELETE(TRUE);
                                                                    Rec.VALIDATE("Lookup Table Criteria ID", 0);
                                                                  END;
                                                                  Rec.VALIDATE("Lookup Field ID", 0);
                                                                  Rec.VALIDATE("Lookup Page ID", 0);
                                                                END;
                                                                Rec.CALCFIELDS("Lookup Table Caption");
                                                              END;

                                                   CaptionML=[ENU=Lookup Table ID;
                                                              ENG=Lookup Table ID] }
    { 21  ;   ;Lookup Table Caption;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObjWithCaption."Object Caption" WHERE (Object Type=CONST(Table),
                                                                                                                Object ID=FIELD(Lookup Table ID)));
                                                   CaptionML=[ENU=Lookup Table Caption;
                                                              ENG=Lookup Table Caption];
                                                   Editable=No }
    { 22  ;   ;Lookup Table Criteria ID;Integer   ;TableRelation=Criteria;
                                                   CaptionML=[ENU=Lookup Table Criteria ID;
                                                              ENG=Lookup Table Criteria ID] }
    { 23  ;   ;Lookup Table Criteria Desc.;Text250;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Criteria.Description WHERE (ID=FIELD(Lookup Table Criteria ID)));
                                                   CaptionML=[ENU=Lookup Table Criteria Desc.;
                                                              ENG=Lookup Table Criteria Desc.];
                                                   Editable=No }
    { 24  ;   ;Lookup Field ID     ;Integer       ;TableRelation=Field.No. WHERE (TableNo=FIELD(Lookup Table ID));
                                                   OnValidate=BEGIN
                                                                Rec.CALCFIELDS("Lookup Field Caption");
                                                              END;

                                                   CaptionML=[ENU=Lookup Field ID;
                                                              ENG=Lookup Field ID] }
    { 25  ;   ;Lookup Field Caption;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Field."Field Caption" WHERE (TableNo=FIELD(Lookup Table ID),
                                                                                                   No.=FIELD(Lookup Field ID)));
                                                   CaptionML=[ENU=Lookup Field Caption;
                                                              ENG=Lookup Field Caption];
                                                   Editable=No }
    { 26  ;   ;Lookup Page ID      ;Integer       ;TableRelation=AllObj."Object ID" WHERE (Object Type=CONST(Page));
                                                   OnValidate=BEGIN
                                                                IF (Rec."Lookup Table ID" <> xRec."Lookup Table ID") THEN
                                                                BEGIN
                                                                  Rec.VALIDATE("Lookup Field ID", 0);
                                                                  IF (Rec."Lookup Table Criteria ID" <> 0) THEN
                                                                  BEGIN
                                                                    IF (Criteria.GET(Rec."Lookup Table Criteria ID")) THEN
                                                                      Criteria.DELETE(TRUE);
                                                                    Rec.VALIDATE("Lookup Table Criteria ID", 0);
                                                                  END;
                                                                END;
                                                                Rec.CALCFIELDS("Lookup Table Caption");
                                                              END;

                                                   CaptionML=[ENU=Lookup Page ID;
                                                              ENG=Lookup Page ID] }
    { 27  ;   ;Lookup Page Caption ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObjWithCaption."Object Caption" WHERE (Object Type=CONST(Page),
                                                                                                                Object ID=FIELD(Lookup Page ID)));
                                                   CaptionML=[ENU=Lookup Page Caption;
                                                              ENG=Lookup Page Caption];
                                                   Editable=No }
    { 30  ;   ;Caption             ;Text50        ;CaptionML=[ENU=Caption;
                                                              ENG=Caption] }
    { 40  ;   ;Planning Board Status;Option       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Planning Board Header".Status WHERE (Code=FIELD(Planning Board Code)));
                                                   CaptionML=[ENU=Planning Board Status;
                                                              ENG=Planning Board Status];
                                                   OptionCaptionML=[ENU=" ,Open,Released";
                                                                    ENG=" ,Open,Released"];
                                                   OptionString=[ ,Open,Released];
                                                   Editable=No }
    { 50  ;   ;Relation ID         ;Integer       ;OnValidate=BEGIN
                                                                IF (Rec."Relation ID" <> xRec."Relation ID") THEN
                                                                  UpdateTableId();
                                                              END;

                                                   CaptionML=[ENU=Relation ID;
                                                              ENG=Relation ID] }
    { 60  ;   ;Flexible Filter     ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Flexible Filter;
                                                              ENG=Flexible Filter] }
    { 1000;   ;Created By          ;Code50        ;OnLookup=BEGIN
                                                              TnpToolkit.UserLookup(Rec."Created By", FALSE);
                                                            END;

                                                   CaptionML=[ENU=Created By;
                                                              ENG=Created By] }
    { 1001;   ;Created Date Time   ;DateTime      ;CaptionML=[ENU=Created Date Time;
                                                              ENG=Created Date Time] }
    { 1002;   ;Modified By         ;Code50        ;OnLookup=BEGIN
                                                              TnpToolkit.UserLookup(Rec."Modified By", FALSE);
                                                            END;

                                                   CaptionML=[ENU=Modified By;
                                                              ENG=Modified By] }
    { 1003;   ;Modified Date Time  ;DateTime      ;CaptionML=[ENU=Modified Date Time;
                                                              ENG=Modified Date Time] }
  }
  KEYS
  {
    {    ;Planning Board Code,Planning Board Table Type,Field Application,ID;
                                                   Clustered=Yes }
    {    ;Planning Board Code,Planning Board Table Type,Field Application,Index }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Criteria@1000000000 : Record 9062626;
      PlanningBoardHeader@1000000004 : Record 9062337;
      PlanningBoardTable@9062230 : Record 9062338;
      PlanningBoardTableRelation@1000000003 : Record 9062341;
      CriteriaManagement@1000000002 : Codeunit 9062462;
      ObjectFieldToolkit@1000000001 : Codeunit 9062343;
      TnpToolkit@9062229 : Codeunit 9062230;

    PROCEDURE "--- General ---"@9062231();
    BEGIN
    END;

    PROCEDURE FindNewId@9062234() : Integer;
    VAR
      lPlanningBoardTableField@9062229 : Record 9062340;
    BEGIN
      //DOC NA2016.12 - Returning new ID
      //  <- The ID

      lPlanningBoardTableField.RESET();
      lPlanningBoardTableField.SETRANGE("Planning Board Code", Rec."Planning Board Code");
      lPlanningBoardTableField.SETRANGE("Planning Board Table Type", Rec."Planning Board Table Type");
      lPlanningBoardTableField.SETRANGE("Field Application", Rec."Field Application");
      IF (lPlanningBoardTableField.FINDLAST()) THEN
        EXIT(lPlanningBoardTableField.ID + 1)
      ELSE
        EXIT(1);
    END;

    PROCEDURE FindNewIndex@9062233() : Integer;
    VAR
      lPlanningBoardTableField@9062229 : Record 9062340;
    BEGIN
      //DOC NA2016.12 - Returning new index
      //  <- The index

      lPlanningBoardTableField.RESET();
      lPlanningBoardTableField.SETCURRENTKEY("Planning Board Code", "Planning Board Table Type", "Field Application", Index);
      lPlanningBoardTableField.SETRANGE("Planning Board Code", Rec."Planning Board Code");
      lPlanningBoardTableField.SETRANGE("Planning Board Table Type", Rec."Planning Board Table Type");
      lPlanningBoardTableField.SETRANGE("Field Application", Rec."Field Application");
      IF (lPlanningBoardTableField.FINDLAST()) THEN
        EXIT(lPlanningBoardTableField.Index + 1)
      ELSE
        EXIT(1);
    END;

    PROCEDURE InitialiseNewRecord@9062229(pFieldApplication@1000000000 : Integer);
    BEGIN
      //DOC NA2016.12 - Initialising new record
      //  -> pFieldApplication: Field application

      Rec.VALIDATE("Field Application", pFieldApplication);
      Rec.VALIDATE(ID, FindNewId());
      Rec.VALIDATE(Index, FindNewIndex());

      UpdateTableId();
    END;

    LOCAL PROCEDURE UpdateTableId@9062236();
    VAR
      lTableId@1000000000 : Integer;
    BEGIN
      //DOC NA2016.12 - Updating record from planning board table

      CLEAR(lTableId);
      IF (Rec."Relation ID" <> 0) THEN
      BEGIN
        PlanningBoardTableRelation.GET(Rec."Planning Board Code", Rec."Planning Board Table Type", Rec."Relation ID");
        lTableId := PlanningBoardTableRelation."Related Table ID";
      END
      ELSE
        IF (PlanningBoardTable.GET(Rec."Planning Board Code", Rec."Planning Board Table Type")) THEN
          lTableId := PlanningBoardTable."Table ID";

      Rec.VALIDATE("Table ID", lTableId);
    END;

    LOCAL PROCEDURE UpdateLookup@9062230();
    VAR
      lTableRelationsMetadata@1000000004 : Record 2000000141;
      lRecordRef@1000000003 : RecordRef;
      lKeyRef@1000000005 : KeyRef;
      lFieldRef@1000000006 : FieldRef;
      lLookupTableId@1000000000 : Integer;
      lLookupFieldId@1000000001 : Integer;
    BEGIN
      //DOC NA2016.12 - Updating lookup table & field

      lLookupTableId := 0;
      lLookupFieldId := 0;

      IF ((Rec."Field Application" = Rec."Field Application"::Filter) AND (Rec."Table ID" <> 0) AND (Rec."Field ID" <> 0)) THEN
      BEGIN
        // Trying to find whether the field validated is the only field of the table primary key.
        // If yes - we point the filter back to the table itself to provide a nice "self-lookup".
        IF ((lLookupTableId = 0) AND (lLookupFieldId = 0)) THEN
        BEGIN
          lRecordRef.OPEN(Rec."Table ID");
          lKeyRef := lRecordRef.KEYINDEX(1);
          IF (lKeyRef.FIELDCOUNT() = 1) THEN
          BEGIN
            lFieldRef := lKeyRef.FIELDINDEX(1);
            IF (lFieldRef.NUMBER() = Rec."Field ID") THEN
            BEGIN
              lLookupTableId := Rec."Table ID";
              lLookupFieldId := Rec."Field ID";
            END;
          END;
          lRecordRef.CLOSE();
        END;

        // Trying to find if the field has a table relation defined. If yes - using it
        IF ((lLookupTableId = 0) AND (lLookupFieldId = 0)) THEN
        BEGIN
          lTableRelationsMetadata.RESET();
          lTableRelationsMetadata.SETRANGE("Table ID", Rec."Table ID");
          lTableRelationsMetadata.SETRANGE("Field No.", Rec."Field ID");
          IF (lTableRelationsMetadata.FINDFIRST()) THEN
          BEGIN
            lLookupTableId := lTableRelationsMetadata."Related Table ID";
            lLookupFieldId := lTableRelationsMetadata."Related Field No.";
          END;
        END;
      END;

      Rec.VALIDATE("Lookup Table ID", lLookupTableId);
      Rec.VALIDATE("Lookup Field ID", lLookupFieldId);
    END;

    LOCAL PROCEDURE UpdateCaption@1000000008();
    VAR
      lCaption@1000000000 : Text;
    BEGIN
      //DOC NA2016.12 - Updating caption

      IF (Rec.Caption <> '') THEN
        EXIT;

      lCaption := '';

      IF (lCaption = '') THEN
      BEGIN
        Rec.CALCFIELDS("Lookup Table Caption");
        lCaption := Rec."Lookup Table Caption";
      END;
      IF (lCaption = '') THEN
        lCaption := Rec.GetFieldCaption();

      Rec.VALIDATE(Caption, COPYSTR(lCaption, 1, MAXSTRLEN(Rec.Caption)));
    END;

    LOCAL PROCEDURE CheckModifyPermission@1000000039();
    VAR
      lEnhancedPermissionsMgt@1000000000 : Codeunit 9062277;
    BEGIN
      //DOC NA2016.15 - Checking modify permission for the planning board

      IF ( NOT (PlanningBoardHeader.GET(Rec."Planning Board Code"))) THEN
        EXIT;
      lEnhancedPermissionsMgt.CheckPlanningBoardModifyPermission(PlanningBoardHeader, USERID());
    END;

    PROCEDURE "--- Field ---"@1000000000();
    BEGIN
    END;

    PROCEDURE GetFieldCaption@1000000005() : Text;
    BEGIN
      //DOC NA2016.12 - Returning field caption
      //  <- The caption

      EXIT(ObjectFieldToolkit.GetFieldNameAdv(Rec."Table ID", Rec."Field Type", Rec."Field ID"));
    END;

    PROCEDURE ValidateFieldText@1000000001(VAR pText@1000000000 : Text) : Boolean;
    VAR
      lResult@1000000001 : Boolean;
    BEGIN
      //DOC NA2016.12 - Validating field text
      //  <> pText: The text
      //  <- TRUE = Field changed, FALSE = Not

      lResult := FALSE;

      xRec."Field ID" := Rec."Field ID";
      ObjectFieldToolkit.ValidateFieldName(Rec."Table ID", Rec."Field ID", pText, FALSE);
      IF (Rec."Field ID" <> xRec."Field ID") THEN
      BEGIN
        Rec.VALIDATE("Field ID");
        lResult := TRUE;
      END;

      EXIT(lResult);
    END;

    PROCEDURE FieldLookup@1000000002() : Boolean;
    VAR
      lResult@1000000000 : Boolean;
    BEGIN
      //DOC NA2016.12 - Performing field lookup
      //  <- TRUE = Field changed, FALSE = Not

      lResult := FALSE;

      xRec."Field ID" := Rec."Field ID";
      IF (ObjectFieldToolkit.FieldLookup(Rec."Table ID", Rec."Field ID")) THEN
        IF (Rec."Field ID" <> xRec."Field ID") THEN
        BEGIN
          Rec.VALIDATE("Field ID");
          lResult := TRUE;
        END;

      EXIT(lResult);
    END;

    PROCEDURE "--- Lookup ---"@1000000004();
    BEGIN
    END;

    PROCEDURE ValidateLookupTableText@1000000010(VAR pText@1000000000 : Text) : Boolean;
    VAR
      lResult@1000000001 : Boolean;
    BEGIN
      //DOC NA2016.12 - Validating lookup table text
      //  <> pText: The text
      //  <- TRUE = Table changed, FALSE = Not

      lResult := FALSE;

      xRec."Lookup Table ID" := Rec."Lookup Table ID";
      ObjectFieldToolkit.ValidateTableName(Rec."Lookup Table ID", pText, FALSE);
      IF (Rec."Lookup Table ID" <> xRec."Lookup Table ID") THEN
      BEGIN
        Rec.VALIDATE("Lookup Table ID");
        lResult := TRUE;
      END;

      EXIT(lResult);
    END;

    PROCEDURE LookupTableLookup@1000000011() : Boolean;
    VAR
      lResult@1000000000 : Boolean;
    BEGIN
      //DOC NA2016.12 - Performing lookup table lookup
      //  <- TRUE = Table changed, FALSE = Not

      lResult := FALSE;

      xRec."Lookup Table ID" := Rec."Lookup Table ID";
      IF (ObjectFieldToolkit.TableLookup(Rec."Lookup Table ID")) THEN
        IF (Rec."Lookup Table ID" <> xRec."Lookup Table ID") THEN
        BEGIN
          Rec.VALIDATE("Lookup Table ID");
          lResult := TRUE;
        END;

      EXIT(lResult);
    END;

    PROCEDURE EditTableLookupCriteria@9062252();
    VAR
      eTableEmpty@9062229 : TextConst 'ENU=You must choose lookup table first.;ENG=You must choose lookup table first.';
    BEGIN
      //DOC NA2016.12 - Editing table lookup criteria

      IF (Rec."Lookup Table ID" = 0) THEN
        ERROR(eTableEmpty);

      CriteriaManagement.EditCriteriaAttached(Rec."Lookup Table Criteria ID", Rec."Lookup Table ID", DATABASE::"Planning Board Table Field",
        Rec.GETPOSITION(FALSE), Rec.FIELDNO("Lookup Table Criteria ID"), FALSE);
      Rec.CALCFIELDS("Lookup Table Criteria Desc.");
    END;

    PROCEDURE ValidateLookupFieldText@1000000007(VAR pText@1000000000 : Text) : Boolean;
    VAR
      lResult@1000000001 : Boolean;
    BEGIN
      //DOC NA2016.12 - Validating lookup field text
      //  <> pText: The text
      //  <- TRUE = Field changed, FALSE = Not

      lResult := FALSE;

      xRec."Lookup Field ID" := Rec."Lookup Field ID";
      ObjectFieldToolkit.ValidateFieldName(Rec."Lookup Table ID", Rec."Lookup Field ID", pText, FALSE);
      IF (Rec."Lookup Field ID" <> xRec."Lookup Field ID") THEN
      BEGIN
        Rec.VALIDATE("Lookup Field ID");
        lResult := TRUE;
      END;

      EXIT(lResult);
    END;

    PROCEDURE LookupFieldLookup@1000000006() : Boolean;
    VAR
      lResult@1000000000 : Boolean;
    BEGIN
      //DOC NA2016.12 - Performing lookup field lookup
      //  <- TRUE = Field changed, FALSE = Not

      lResult := FALSE;

      xRec."Lookup Field ID" := Rec."Lookup Field ID";
      IF (ObjectFieldToolkit.FieldLookup(Rec."Lookup Table ID", Rec."Lookup Field ID")) THEN
        IF (Rec."Lookup Field ID" <> xRec."Lookup Field ID") THEN
        BEGIN
          Rec.VALIDATE("Lookup Field ID");
          lResult := TRUE;
        END;

      EXIT(lResult);
    END;

    PROCEDURE ValidateLookupPageText@1000000019(VAR pText@1000000000 : Text) : Boolean;
    VAR
      lResult@1000000001 : Boolean;
    BEGIN
      //DOC NA2016.12 - Validating lookup page text
      //  <> pText: The text
      //  <- TRUE = Page changed, FALSE = Not

      lResult := FALSE;

      xRec."Lookup Page ID" := Rec."Lookup Page ID";
      ObjectFieldToolkit.ValidatePageName(Rec."Lookup Page ID", pText, FALSE);
      IF (Rec."Lookup Page ID" <> xRec."Lookup Page ID") THEN
      BEGIN
        Rec.VALIDATE("Lookup Page ID");
        lResult := TRUE;
      END;

      EXIT(lResult);
    END;

    PROCEDURE LookupPageLookup@1000000018() : Boolean;
    VAR
      lResult@1000000000 : Boolean;
    BEGIN
      //DOC NA2016.12 - Performing lookup page lookup
      //  <- TRUE = Page changed, FALSE = Not

      lResult := FALSE;

      xRec."Lookup Page ID" := Rec."Lookup Page ID";
      IF (ObjectFieldToolkit.PageLookup(Rec."Lookup Page ID")) THEN
        IF (Rec."Lookup Page ID" <> xRec."Lookup Page ID") THEN
        BEGIN
          Rec.VALIDATE("Lookup Page ID");
          lResult := TRUE;
        END;

      EXIT(lResult);
    END;

    BEGIN
    {
      //DOC NA2016.12 JH 25/09/2015 - Created
      //DOC NA2016.15 JH 05/05/2016 - Enhanced permissions
    }
    END.
  }
}

