OBJECT Table 9062349 Planning Board Context
{
  OBJECT-PROPERTIES
  {
    Date=26/07/16;
    Time=12:05:47 PM;
    Version List=NA2016.16.1;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Planning Board Context;
               ENG=Planning Board Context];
  }
  FIELDS
  {
    { 1   ;   ;ID                  ;Integer       ;CaptionML=[ENU=ID;
                                                              ENG=ID] }
    { 2   ;   ;Planning Board Code ;Code20        ;CaptionML=[ENU=Planning Board Code;
                                                              ENG=Planning Board Code] }
    { 3   ;   ;Current Planning Board Code;Code20 ;CaptionML=[ENU=Current Planning Board Code;
                                                              ENG=Current Planning Board Code] }
    { 4   ;   ;Timestamp Date Time ;DateTime      ;CaptionML=[ENU=Timestamp Date Time;
                                                              ENG=Timestamp Date Time] }
    { 5   ;   ;Update Type         ;Option        ;CaptionML=[ENU=Update Type;
                                                              ENG=Update Type];
                                                   OptionCaptionML=[ENU=" ,First,Full,Incremental";
                                                                    ENG=" ,First,Full,Incremental"];
                                                   OptionString=[ ,First,Full,Incremental] }
    { 6   ;   ;Last Update Type    ;Option        ;CaptionML=[ENU=Last Update Type;
                                                              ENG=Last Update Type];
                                                   OptionCaptionML=[ENU=" ,First,Full,Incremental";
                                                                    ENG=" ,First,Full,Incremental"];
                                                   OptionString=[ ,First,Full,Incremental] }
    { 10  ;   ;Current Date        ;Date          ;OnValidate=BEGIN
                                                                UpdatePeriodStartEnd();
                                                              END;

                                                   CaptionML=[ENU=Current Date;
                                                              ENG=Current Date] }
    { 11  ;   ;Start Date          ;Date          ;CaptionML=[ENU=Start Date;
                                                              ENG=Start Date] }
    { 12  ;   ;End Date            ;Date          ;CaptionML=[ENU=End Date;
                                                              ENG=End Date] }
    { 20  ;   ;Filter 1 Enabled    ;Boolean       ;CaptionML=[ENU=Filter 1 Enabled;
                                                              ENG=Filter 1 Enabled] }
    { 21  ;   ;Filter 1 Caption    ;Text50        ;CaptionML=[ENU=Filter 1 Caption;
                                                              ENG=Filter 1 Caption] }
    { 22  ;   ;Filter 1 Table Type ;Option        ;CaptionML=[ENU=Filter 1 Table Type;
                                                              ENG=Filter 1 Table Type];
                                                   OptionCaptionML=[ENU=" ,Resource,Entry";
                                                                    ENG=" ,Resource,Entry"];
                                                   OptionString=[ ,Resource,Entry] }
    { 23  ;   ;Filter 1 ID         ;Integer       ;CaptionML=[ENU=Filter 1 ID;
                                                              ENG=Filter 1 ID] }
    { 24  ;   ;Filter 1 Value      ;Text250       ;CaptionML=[ENU=Filter 1 Value;
                                                              ENG=Filter 1 Value] }
    { 25  ;   ;Filter 1 Flexible   ;Boolean       ;CaptionML=[ENU=Filter 1 Flexible;
                                                              ENG=Filter 1 Flexible] }
    { 30  ;   ;Filter 2 Enabled    ;Boolean       ;CaptionML=[ENU=Filter 2 Enabled;
                                                              ENG=Filter 2 Enabled] }
    { 31  ;   ;Filter 2 Caption    ;Text50        ;CaptionML=[ENU=Filter 2 Caption;
                                                              ENG=Filter 2 Caption] }
    { 32  ;   ;Filter 2 Table Type ;Option        ;CaptionML=[ENU=Filter 2 Table Type;
                                                              ENG=Filter 2 Table Type];
                                                   OptionCaptionML=[ENU=" ,Resource,Entry";
                                                                    ENG=" ,Resource,Entry"];
                                                   OptionString=[ ,Resource,Entry] }
    { 33  ;   ;Filter 2 ID         ;Integer       ;CaptionML=[ENU=Filter 2 ID;
                                                              ENG=Filter 2 ID] }
    { 34  ;   ;Filter 2 Value      ;Text250       ;CaptionML=[ENU=Filter 2 Value;
                                                              ENG=Filter 2 Value] }
    { 35  ;   ;Filter 2 Flexible   ;Boolean       ;CaptionML=[ENU=Filter 2 Flexible;
                                                              ENG=Filter 2 Flexible] }
    { 40  ;   ;Filter 3 Enabled    ;Boolean       ;CaptionML=[ENU=Filter 3 Enabled;
                                                              ENG=Filter 3 Enabled] }
    { 41  ;   ;Filter 3 Caption    ;Text50        ;CaptionML=[ENU=Filter 3 Caption;
                                                              ENG=Filter 3 Caption] }
    { 42  ;   ;Filter 3 Table Type ;Option        ;CaptionML=[ENU=Filter 3 Table Type;
                                                              ENG=Filter 3 Table Type];
                                                   OptionCaptionML=[ENU=" ,Resource,Entry";
                                                                    ENG=" ,Resource,Entry"];
                                                   OptionString=[ ,Resource,Entry] }
    { 43  ;   ;Filter 3 ID         ;Integer       ;CaptionML=[ENU=Filter 3 ID;
                                                              ENG=Filter 3 ID] }
    { 44  ;   ;Filter 3 Value      ;Text250       ;CaptionML=[ENU=Filter 3 Value;
                                                              ENG=Filter 3 Value] }
    { 45  ;   ;Filter 3 Flexible   ;Boolean       ;CaptionML=[ENU=Filter 3 Flexible;
                                                              ENG=Filter 3 Flexible] }
    { 50  ;   ;Filter 4 Enabled    ;Boolean       ;CaptionML=[ENU=Filter 4 Enabled;
                                                              ENG=Filter 4 Enabled] }
    { 51  ;   ;Filter 4 Caption    ;Text50        ;CaptionML=[ENU=Filter 4 Caption;
                                                              ENG=Filter 4 Caption] }
    { 52  ;   ;Filter 4 Table Type ;Option        ;CaptionML=[ENU=Filter 4 Table Type;
                                                              ENG=Filter 4 Table Type];
                                                   OptionCaptionML=[ENU=" ,Resource,Entry";
                                                                    ENG=" ,Resource,Entry"];
                                                   OptionString=[ ,Resource,Entry] }
    { 53  ;   ;Filter 4 ID         ;Integer       ;CaptionML=[ENU=Filter 4 ID;
                                                              ENG=Filter 4 ID] }
    { 54  ;   ;Filter 4 Value      ;Text250       ;CaptionML=[ENU=Filter 4 Value;
                                                              ENG=Filter 4 Value] }
    { 55  ;   ;Filter 4 Flexible   ;Boolean       ;CaptionML=[ENU=Filter 4 Flexible;
                                                              ENG=Filter 4 Flexible] }
    { 60  ;   ;Filter 5 Enabled    ;Boolean       ;CaptionML=[ENU=Filter 5 Enabled;
                                                              ENG=Filter 5 Enabled] }
    { 61  ;   ;Filter 5 Caption    ;Text50        ;CaptionML=[ENU=Filter 5 Caption;
                                                              ENG=Filter 5 Caption] }
    { 62  ;   ;Filter 5 Table Type ;Option        ;CaptionML=[ENU=Filter 5 Table Type;
                                                              ENG=Filter 5 Table Type];
                                                   OptionCaptionML=[ENU=" ,Resource,Entry";
                                                                    ENG=" ,Resource,Entry"];
                                                   OptionString=[ ,Resource,Entry] }
    { 63  ;   ;Filter 5 ID         ;Integer       ;CaptionML=[ENU=Filter 5 ID;
                                                              ENG=Filter 5 ID] }
    { 64  ;   ;Filter 5 Value      ;Text250       ;CaptionML=[ENU=Filter 5 Value;
                                                              ENG=Filter 5 Value] }
    { 65  ;   ;Filter 5 Flexible   ;Boolean       ;CaptionML=[ENU=Filter 5 Flexible;
                                                              ENG=Filter 5 Flexible] }
    { 70  ;   ;Filter 6 Enabled    ;Boolean       ;CaptionML=[ENU=Filter 6 Enabled;
                                                              ENG=Filter 6 Enabled] }
    { 71  ;   ;Filter 6 Caption    ;Text50        ;CaptionML=[ENU=Filter 6 Caption;
                                                              ENG=Filter 6 Caption] }
    { 72  ;   ;Filter 6 Table Type ;Option        ;CaptionML=[ENU=Filter 6 Table Type;
                                                              ENG=Filter 6 Table Type];
                                                   OptionCaptionML=[ENU=" ,Resource,Entry";
                                                                    ENG=" ,Resource,Entry"];
                                                   OptionString=[ ,Resource,Entry] }
    { 73  ;   ;Filter 6 ID         ;Integer       ;CaptionML=[ENU=Filter 6 ID;
                                                              ENG=Filter 6 ID] }
    { 74  ;   ;Filter 6 Value      ;Text250       ;CaptionML=[ENU=Filter 6 Value;
                                                              ENG=Filter 6 Value] }
    { 75  ;   ;Filter 6 Flexible   ;Boolean       ;CaptionML=[ENU=Filter 6 Flexible;
                                                              ENG=Filter 6 Flexible] }
    { 80  ;   ;Page Caption        ;Text250       ;CaptionML=[ENU=Page Caption;
                                                              ENG=Page Caption] }
    { 91  ;   ;Cloning Enabled     ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Cloning Enabled;
                                                              ENG=Cloning Enabled] }
    { 92  ;   ;Dragging Enabled    ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Dragging Enabled;
                                                              ENG=Dragging Enabled] }
    { 93  ;   ;Resource Changing Enabled;Boolean  ;CaptionML=[ENU=Resource Changing Enabled;
                                                              ENG=Resource Changing Enabled] }
    { 94  ;   ;Resizing Enabled    ;Boolean       ;OnValidate=VAR
                                                                eResizeImpossibleForSingle@1000000000 : TextConst 'ENU=Resizing is impossible if entry table "%1" is ''%2''.;ENG=Resizing is impossible if entry table "%1" is ''%2''.';
                                                              BEGIN
                                                              END;

                                                   CaptionML=[ENU=Resizing Enabled;
                                                              ENG=Resizing Enabled] }
    { 100 ;   ;View Type           ;Option        ;CaptionML=[ENU=View Type;
                                                              ENG=View Type];
                                                   OptionCaptionML=[ENU=" ,Day,Work Week,Week,Month,Timeline";
                                                                    ENG=" ,Day,Work Week,Week,Month,Timeline"];
                                                   OptionString=[ ,Day,Work Week,Week,Month,Timeline] }
    { 110 ;   ;Current Date Formula;DateFormula   ;CaptionML=[ENU=Current Date Formula;
                                                              ENG=Current Date Formula] }
    { 111 ;   ;Start Date Formula  ;DateFormula   ;InitValue=-1M-CM;
                                                   CaptionML=[ENU=Start Date Formula;
                                                              ENG=Start Date Formula] }
    { 112 ;   ;End Date Formula    ;DateFormula   ;InitValue=+2M+CM;
                                                   CaptionML=[ENU=End Date Formula;
                                                              ENG=End Date Formula] }
    { 113 ;   ;Previous / Next Week;Boolean       ;CaptionML=[ENU=Previous / Next Week;
                                                              ENG=Previous / Next Week] }
    { 114 ;   ;Previous / Next Month;Boolean      ;InitValue=Yes;
                                                   CaptionML=[ENU=Previous / Next Month;
                                                              ENG=Previous / Next Month] }
    { 115 ;   ;Previous / Next Quarter;Boolean    ;InitValue=Yes;
                                                   CaptionML=[ENU=Previous / Next Quarter;
                                                              ENG=Previous / Next Quarter] }
    { 116 ;   ;Previous / Next Year;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Previous / Next Year;
                                                              ENG=Previous / Next Year] }
    { 117 ;   ;Maximum Period Formula;DateFormula ;InitValue=+1Y;
                                                   CaptionML=[ENU=Maximum Period Formula;
                                                              ENG=Maximum Period Formula] }
    { 120 ;   ;Event Type          ;Option        ;CaptionML=[ENU=Event Type;
                                                              ENG=Event Type];
                                                   OptionCaptionML=[ENU=" ,Resource Double-Clicked,,,,,,,,,,Entry Double-Clicked,Entry Dropped,Entry Resized,Entry Cloned,,,,,,,Menu Item Clicked";
                                                                    ENG=" ,Resource Double-Clicked,,,,,,,,,,Entry Double-Clicked,Entry Dropped,Entry Resized,Entry Cloned,,,,,,,Menu Item Clicked"];
                                                   OptionString=[ ,Resource Double-Clicked,,,,,,,,,,Entry Double-Clicked,Entry Dropped,Entry Resized,Entry Cloned,,,,,,,Menu Item Clicked] }
    { 121 ;   ;Event Type Text     ;Text100       ;CaptionML=[ENU=Event Type Text;
                                                              ENG=Event Type Text] }
    { 130 ;   ;Event Resource ID   ;Integer       ;CaptionML=[ENU=Resource ID;
                                                              ENG=Resource ID] }
    { 131 ;   ;Event Entry ID      ;Integer       ;CaptionML=[ENU=Entry ID;
                                                              ENG=Entry ID] }
    { 132 ;   ;Event Resource Position;Text250    ;CaptionML=[ENU=Event Resource Position;
                                                              ENG=Event Resource Position] }
    { 133 ;   ;Event Entry Position;Text250       ;CaptionML=[ENU=Event Entry Position;
                                                              ENG=Event Entry Position] }
    { 134 ;   ;Event Resource Activity;Option     ;CaptionML=[ENU=Event Resource Activity;
                                                              ENG=Event Resource Activity];
                                                   OptionCaptionML=[ENU=" ,Insert,Modify,Delete";
                                                                    ENG=" ,Insert,Modify,Delete"];
                                                   OptionString=[ ,Insert,Modify,Delete] }
    { 135 ;   ;Event Entry Activity;Option        ;CaptionML=[ENU=Event Entry Activity;
                                                              ENG=Event Entry Activity];
                                                   OptionCaptionML=[ENU=" ,Insert,Modify,Delete";
                                                                    ENG=" ,Insert,Modify,Delete"];
                                                   OptionString=[ ,Insert,Modify,Delete] }
    { 140 ;   ;Event Start Date    ;Date          ;CaptionML=[ENU=Start Date;
                                                              ENG=Start Date] }
    { 141 ;   ;Event Start Time    ;Time          ;CaptionML=[ENU=Start Time;
                                                              ENG=Start Time] }
    { 142 ;   ;Event End Date      ;Date          ;CaptionML=[ENU=End Date;
                                                              ENG=End Date] }
    { 143 ;   ;Event End Time      ;Time          ;CaptionML=[ENU=End Time;
                                                              ENG=End Time] }
    { 150 ;   ;Event Menu Table Type;Option       ;CaptionML=[ENU=Event Menu Table Type;
                                                              ENG=Event Menu Table Type];
                                                   OptionCaptionML=[ENU=" ,Resource,Entry";
                                                                    ENG=" ,Resource,Entry"];
                                                   OptionString=[ ,Resource,Entry] }
    { 151 ;   ;Event Menu Item ID  ;Integer       ;CaptionML=[ENU=Event Menu Item ID;
                                                              ENG=Event Menu Item ID] }
    { 160 ;   ;Action Type         ;Option        ;CaptionML=[ENU=Action Type;
                                                              ENG=Action Type];
                                                   OptionCaptionML=[ENU=" ,Refresh,,,,,,,,,,View Resource,Edit Resource,New Resource,Delete Resource,,,,,,,View Entry,Edit Entry,New Entry,Delete Entry,,,,,,,Drag Entry,Resize Entry,Clone Entry,,,,,,,,Run Object,Open Planning Board,Open Panel,Run Quick Report,Hyperlink,Change Field,,,,,,Custom";
                                                                    ENG=" ,Refresh,,,,,,,,,,View Resource,Edit Resource,New Resource,Delete Resource,,,,,,,View Entry,Edit Entry,New Entry,Delete Entry,,,,,,,Drag Entry,Resize Entry,Clone Entry,,,,,,,,Run Object,Open Planning Board,Open Panel,Run Quick Report,Hyperlink,Change Field,,,,,,Custom"];
                                                   OptionString=[ ,Refresh,,,,,,,,,,View Resource,Edit Resource,New Resource,Delete Resource,,,,,,,View Entry,Edit Entry,New Entry,Delete Entry,,,,,,,Drag Entry,Resize Entry,Clone Entry,,,,,,,,Run Object,Open Planning Board,Open Panel,Run Quick Report,Hyperlink,Change Field,,,,,,Custom] }
    { 170 ;   ;Action Run Object Type;Option      ;CaptionML=[ENU=Action Run Object Type;
                                                              ENG=Action Run Object Type];
                                                   OptionCaptionML=[ENU=" ,,,Report,,Codeunit,XMLport,,Page";
                                                                    ENG=" ,,,Report,,Codeunit,XMLport,,Page"];
                                                   OptionString=[ ,,,Report,,Codeunit,XMLport,,Page] }
    { 171 ;   ;Action Run Object ID;Integer       ;CaptionML=[ENU=Action Run Object ID;
                                                              ENG=Action Run Object ID] }
    { 180 ;   ;Action Open Panel Code;Code20      ;TableRelation=Panel;
                                                   CaptionML=[ENU=Action Open Panel Code;
                                                              ENG=Action Open Panel Code] }
    { 190 ;   ;Action Open Pl. Board Code;Code20  ;TableRelation="Planning Board Header";
                                                   CaptionML=[ENU=Action Open Pl. Board Code;
                                                              ENG=Action Open Pl. Board Code] }
    { 200 ;   ;Action Run Quick Report Code;Code20;TableRelation="Quick Report Header";
                                                   CaptionML=[ENU=Action Run Quick Report Code;
                                                              ENG=Action Run Quick Report Code] }
    { 210 ;   ;Action Hyperlink URL;Text250       ;CaptionML=[ENU=Action Hyperlink URL;
                                                              ENG=Action Hyperlink URL] }
    { 220 ;   ;Action Handled      ;Boolean       ;CaptionML=[ENU=Action Handled;
                                                              ENG=Action Handled] }
    { 231 ;   ;Force Update        ;Boolean       ;CaptionML=[ENU=Force Update;
                                                              ENG=Force Update] }
    { 233 ;   ;Update Control      ;Boolean       ;CaptionML=[ENU=Update Control;
                                                              ENG=Update Control] }
    { 240 ;   ;Date Time Update    ;Option        ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Date Time Update;
                                                              ENG=Date Time Update];
                                                   OptionCaptionML=[ENU=" ,First Start,First End,Only Start,Only End";
                                                                    ENG=" ,First Start,First End,Only Start,Only End"];
                                                   OptionString=[ ,First Start,First End,Only Start,Only End] }
    { 250 ;   ;Non-Empty Resources ;Boolean       ;CaptionML=[ENU=Non-Empty Resources;
                                                              ENG=Non-Empty Resources] }
    { 251 ;   ;Non-Empty Resources Optional;Boolean;
                                                   CaptionML=[ENU=Non-Empty Resources Optional;
                                                              ENG=Non-Empty Resources Optional] }
    { 260 ;   ;Activity            ;Option        ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Activity;
                                                              ENG=Activity];
                                                   OptionCaptionML=[ENU=" ,Insert,Modify,Delete,Rename";
                                                                    ENG=" ,Insert,Modify,Delete,Rename"];
                                                   OptionString=[ ,Insert,Modify,Delete,Rename] }
    { 270 ;   ;HTML Template Code  ;Code50        ;TableRelation="Html Control Template";
                                                   OnValidate=BEGIN
                                                                IF (Rec."HTML Template Code" <> xRec."HTML Template Code") THEN
                                                                  Rec.VALIDATE("HTML View Code", '');
                                                              END;

                                                   CaptionML=[ENU=HTML Template Code;
                                                              ENG=HTML Template Code] }
    { 271 ;   ;HTML View Code      ;Code50        ;TableRelation="Html Control View".Code WHERE (Template Code=FIELD(HTML Template Code));
                                                   CaptionML=[ENU=HTML View Code;
                                                              ENG=HTML View Code] }
    { 280 ;   ;Action Change Table ID;Integer     ;CaptionML=[ENU=Change Table ID;
                                                              ENG=Change Table ID] }
    { 281 ;   ;Action Change Field Type;Option    ;CaptionML=[ENU=Change Field Type;
                                                              ENG=Change Field Type];
                                                   OptionCaptionML=[ENU=" ,Field,Enhanced Field";
                                                                    ENG=" ,Field,Enhanced Field"];
                                                   OptionString=[ ,Field,Enhanced Field] }
    { 282 ;   ;Action Change Field ID;Integer     ;CaptionML=[ENU=Change Field ID;
                                                              ENG=Change Field ID] }
    { 283 ;   ;Action Change Field to Decimal;Decimal;
                                                   CaptionML=[ENU=Action Change Field to Decimal;
                                                              ENG=Action Change Field to Decimal] }
    { 284 ;   ;Action Change Field to Text;Text250;CaptionML=[ENU=Action Change Field to Text;
                                                              ENG=Action Change Field to Text] }
    { 285 ;   ;Action Change Field to DateTm.;DateTime;
                                                   CaptionML=[ENU=Action Change Field to DateTime;
                                                              ENG=Action Change Field to DateTime] }
    { 286 ;   ;Action Change Field Message;Boolean;CaptionML=[ENU=Action Change Field Message;
                                                              ENG=Action Change Field Message] }
    { 290 ;   ;Action Code         ;Code20        ;CaptionML=[ENU=Action Code;
                                                              ENG=Action Code] }
    { 300 ;   ;Work Week View Full Week;Boolean   ;CaptionML=[ENU=Work Week View Full Week;
                                                              ENG=Work Week View Full Week] }
  }
  KEYS
  {
    {    ;ID                                      ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      PlanningBoardResourceBuffer@1000000000 : TEMPORARY Record 9062346;
      PlanningBoardEntryBuffer@1000000001 : TEMPORARY Record 9062347;
      TableFieldBuffer@1000000003 : Record 9062231;
      Convert@1000000004 : Codeunit 9062683;
      RequestData@1000000002 : Text;
      RequestDataSaved@9062230 : Text;

    LOCAL PROCEDURE "--- Periods ---"@1000000009();
    BEGIN
    END;

    LOCAL PROCEDURE UpdatePeriodStartEnd@1000000013();
    VAR
      lStartDate@9062230 : Date;
      lEndDate@9062231 : Date;
      lEmptyDateFormula@9062232 : DateFormula;
      lEndAllowedDate@9062233 : Date;
      lDateBuffer@9062234 : Date;
    BEGIN
      //DOC NA2016.12 - Updating period start / end
      //  -> pCurrentDate: Current date
      //  -> pPeriodTypeCharacter: Period type character
      //  <> pStartDate: Target start date
      //  <> pEndDate: Target end date

      IF (Rec."Current Date" <> 0D) THEN
      BEGIN
        Rec.TESTFIELD("Start Date Formula");
        Rec.TESTFIELD("End Date Formula");
        lStartDate := CALCDATE(Rec."Start Date Formula", Rec."Current Date");
        lEndDate := CALCDATE(Rec."End Date Formula", Rec."Current Date");
        IF (lStartDate > lEndDate) THEN
        BEGIN
          lDateBuffer := lEndDate;
          lEndDate := lStartDate;
          lStartDate := lDateBuffer;
        END;
        IF (Rec."Maximum Period Formula" <> lEmptyDateFormula) THEN
        BEGIN
          lEndAllowedDate := CALCDATE(Rec."Maximum Period Formula", lStartDate);
          IF (lEndAllowedDate < lEndDate) THEN
            lEndDate := lEndAllowedDate;
        END;
        Rec.VALIDATE("Start Date", lStartDate);
        Rec.VALIDATE("End Date", lEndDate);
      END
      ELSE
      BEGIN
        Rec.VALIDATE("Start Date", 0D);
        Rec.VALIDATE("End Date", 0D);
      END;
    END;

    LOCAL PROCEDURE "--- Filters ---"@1000000010();
    BEGIN
    END;

    PROCEDURE SetFilterEnabled@1000000000(pIndex@1000000001 : Integer;pEnabled@1000000000 : Boolean);
    BEGIN
      //DOC NA2016.12 - Setting filter "Enabled" flag
      //  -> pIndex: Index (of the filter)
      //  -> pEnabled: The flag

      CASE (pIndex) OF
        1: Rec."Filter 1 Enabled" := pEnabled;
        2: Rec."Filter 2 Enabled" := pEnabled;
        3: Rec."Filter 3 Enabled" := pEnabled;
        4: Rec."Filter 4 Enabled" := pEnabled;
        5: Rec."Filter 5 Enabled" := pEnabled;
        6: Rec."Filter 6 Enabled" := pEnabled;
      END;
    END;

    PROCEDURE SetFilterCaption@1000000001(pIndex@1000000000 : Integer;pCaption@1000000001 : Text);
    BEGIN
      //DOC NA2016.12 - Setting filter caption
      //  -> pIndex: Index (of the filter)
      //  -> pCaption: The caption

      pCaption := COPYSTR(pCaption, 1, MAXSTRLEN(Rec."Filter 1 Caption"));
      CASE (pIndex) OF
        1: Rec."Filter 1 Caption" := pCaption;
        2: Rec."Filter 2 Caption" := pCaption;
        3: Rec."Filter 3 Caption" := pCaption;
        4: Rec."Filter 4 Caption" := pCaption;
        5: Rec."Filter 5 Caption" := pCaption;
        6: Rec."Filter 6 Caption" := pCaption;
      END;
    END;

    PROCEDURE SetFilterTableType@1000000002(pIndex@1000000000 : Integer;pTableType@1000000001 : Integer);
    BEGIN
      //DOC NA2016.12 - Setting filter table type
      //  -> pIndex: Index (of the filter)
      //  -> pTableType: The table type

      CASE (pIndex) OF
        1: Rec."Filter 1 Table Type" := pTableType;
        2: Rec."Filter 2 Table Type" := pTableType;
        3: Rec."Filter 3 Table Type" := pTableType;
        4: Rec."Filter 4 Table Type" := pTableType;
        5: Rec."Filter 5 Table Type" := pTableType;
        6: Rec."Filter 6 Table Type" := pTableType;
      END;
    END;

    PROCEDURE SetFilterId@1000000003(pIndex@1000000000 : Integer;pId@1000000001 : Integer);
    BEGIN
      //DOC NA2016.12 - Setting filter ID
      //  -> pIndex: Index (of the filter)
      //  -> pId: The ID

      CASE (pIndex) OF
        1: Rec."Filter 1 ID" := pId;
        2: Rec."Filter 2 ID" := pId;
        3: Rec."Filter 3 ID" := pId;
        4: Rec."Filter 4 ID" := pId;
        5: Rec."Filter 5 ID" := pId;
        6: Rec."Filter 6 ID" := pId;
      END;
    END;

    PROCEDURE SetFilterValue@9062237(pIndex@9062230 : Integer;pValue@9062232 : Text);
    VAR
      lValue@9062231 : Text;
    BEGIN
      //DOC NA2016.12 - Setting filter value for given index
      //  -> pIndex: The index
      //  -> pValue: The value

      pValue := COPYSTR(pValue, 1, MAXSTRLEN(Rec."Filter 1 Value"));

      CASE (pIndex) OF
        1: Rec."Filter 1 Value" := pValue;
        2: Rec."Filter 2 Value" := pValue;
        3: Rec."Filter 3 Value" := pValue;
        4: Rec."Filter 4 Value" := pValue;
        5: Rec."Filter 5 Value" := pValue;
        6: Rec."Filter 6 Value" := pValue;
      END;
    END;

    PROCEDURE SetFilterFlexible@1000000014(pIndex@9062230 : Integer;pFlexible@9062232 : Boolean);
    VAR
      lValue@9062231 : Text;
    BEGIN
      //DOC NA2016.12 - Setting filter flexible flag for given index
      //  -> pIndex: The index
      //  -> pFlexible: The flag

      CASE (pIndex) OF
        1: Rec."Filter 1 Flexible" := pFlexible;
        2: Rec."Filter 2 Flexible" := pFlexible;
        3: Rec."Filter 3 Flexible" := pFlexible;
        4: Rec."Filter 4 Flexible" := pFlexible;
        5: Rec."Filter 5 Flexible" := pFlexible;
        6: Rec."Filter 6 Flexible" := pFlexible;
      END;
    END;

    PROCEDURE GetFilterBuffer@9062230(VAR pPlanningBoardFilterBuffer@9062230 : Record 9062352);
    BEGIN
      //DOC NA2016.12 - Returning filter buffer
      //  <> pPlanningBoardFilterBuffer: Target buffer

      AddToFilterBuffer(pPlanningBoardFilterBuffer, Rec."Filter 1 Enabled", Rec."Filter 1 Table Type", Rec."Filter 1 ID", Rec."Filter 1 Value", Rec."Filter 1 Flexible");
      AddToFilterBuffer(pPlanningBoardFilterBuffer, Rec."Filter 2 Enabled", Rec."Filter 2 Table Type", Rec."Filter 2 ID", Rec."Filter 2 Value", Rec."Filter 2 Flexible");
      AddToFilterBuffer(pPlanningBoardFilterBuffer, Rec."Filter 3 Enabled", Rec."Filter 3 Table Type", Rec."Filter 3 ID", Rec."Filter 3 Value", Rec."Filter 3 Flexible");
      AddToFilterBuffer(pPlanningBoardFilterBuffer, Rec."Filter 4 Enabled", Rec."Filter 4 Table Type", Rec."Filter 4 ID", Rec."Filter 4 Value", Rec."Filter 4 Flexible");
      AddToFilterBuffer(pPlanningBoardFilterBuffer, Rec."Filter 5 Enabled", Rec."Filter 5 Table Type", Rec."Filter 5 ID", Rec."Filter 5 Value", Rec."Filter 5 Flexible");
      AddToFilterBuffer(pPlanningBoardFilterBuffer, Rec."Filter 6 Enabled", Rec."Filter 6 Table Type", Rec."Filter 6 ID", Rec."Filter 6 Value", Rec."Filter 6 Flexible");
    END;

    PROCEDURE GetFilterEnabled@9062231(pIndex@9062230 : Integer) : Boolean;
    VAR
      lEnabled@9062231 : Boolean;
    BEGIN
      //DOC NA2016.12 - Returning filter "Enabled" flag for given index
      //  -> pIndex: The index
      //  <- The flag value

      lEnabled := FALSE;

      CASE (pIndex) OF
        1: lEnabled := Rec."Filter 1 Enabled";
        2: lEnabled := Rec."Filter 2 Enabled";
        3: lEnabled := Rec."Filter 3 Enabled";
        4: lEnabled := Rec."Filter 4 Enabled";
        5: lEnabled := Rec."Filter 5 Enabled";
        6: lEnabled := Rec."Filter 6 Enabled";
      END;

      EXIT(lEnabled);
    END;

    PROCEDURE GetFilterCaption@9062233(pIndex@9062230 : Integer) : Text;
    VAR
      lCaption@9062231 : Text;
    BEGIN
      //DOC NA2016.12 - Returning filter caption for given index
      //  -> pIndex: The index
      //  <- The caption

      lCaption := '';

      CASE (pIndex) OF
        1: lCaption := Rec."Filter 1 Caption";
        2: lCaption := Rec."Filter 2 Caption";
        3: lCaption := Rec."Filter 3 Caption";
        4: lCaption := Rec."Filter 4 Caption";
        5: lCaption := Rec."Filter 5 Caption";
        6: lCaption := Rec."Filter 6 Caption";
      END;

      EXIT(lCaption);
    END;

    PROCEDURE GetFilterTableType@9062234(pIndex@9062230 : Integer) : Integer;
    VAR
      lTableType@9062231 : Integer;
    BEGIN
      //DOC NA2016.12 - Returning filter table type for given index
      //  -> pIndex: The index
      //  <- The table type

      lTableType := Rec."Filter 1 Table Type"::" ";

      CASE (pIndex) OF
        1: lTableType := Rec."Filter 1 Table Type";
        2: lTableType := Rec."Filter 2 Table Type";
        3: lTableType := Rec."Filter 3 Table Type";
        4: lTableType := Rec."Filter 4 Table Type";
        5: lTableType := Rec."Filter 5 Table Type";
        6: lTableType := Rec."Filter 6 Table Type";
      END;

      EXIT(lTableType);
    END;

    PROCEDURE GetFilterId@9062235(pIndex@9062230 : Integer) : Integer;
    VAR
      lId@9062231 : Integer;
    BEGIN
      //DOC NA2016.12 - Returning filter ID for given index
      //  -> pIndex: The index
      //  <- The ID

      lId := 0;

      CASE (pIndex) OF
        1: lId := Rec."Filter 1 ID";
        2: lId := Rec."Filter 2 ID";
        3: lId := Rec."Filter 3 ID";
        4: lId := Rec."Filter 4 ID";
        5: lId := Rec."Filter 5 ID";
        6: lId := Rec."Filter 6 ID";
      END;

      EXIT(lId);
    END;

    PROCEDURE GetFilterValue@9062236(pIndex@9062230 : Integer) : Text;
    VAR
      lValue@9062231 : Text;
    BEGIN
      //DOC NA2016.12 - Returning filter value for given index
      //  -> pIndex: The index
      //  <- The value

      lValue := '';

      CASE (pIndex) OF
        1: lValue := Rec."Filter 1 Value";
        2: lValue := Rec."Filter 2 Value";
        3: lValue := Rec."Filter 3 Value";
        4: lValue := Rec."Filter 4 Value";
        5: lValue := Rec."Filter 5 Value";
        6: lValue := Rec."Filter 6 Value";
      END;

      EXIT(lValue);
    END;

    PROCEDURE GetFilterFlexible@1000000019(pIndex@9062230 : Integer) : Boolean;
    VAR
      lFlexible@9062231 : Boolean;
    BEGIN
      //DOC NA2016.12 - Returning filter flexible flag for given index
      //  -> pIndex: The index
      //  <- The flag

      lFlexible := FALSE;

      CASE (pIndex) OF
        1: lFlexible := Rec."Filter 1 Flexible";
        2: lFlexible := Rec."Filter 2 Flexible";
        3: lFlexible := Rec."Filter 3 Flexible";
        4: lFlexible := Rec."Filter 4 Flexible";
        5: lFlexible := Rec."Filter 5 Flexible";
        6: lFlexible := Rec."Filter 6 Flexible";
      END;

      EXIT(lFlexible);
    END;

    LOCAL PROCEDURE AddToFilterBuffer@9062232(VAR pPlanningBoardFilterBuffer@9062230 : Record 9062352;pEnabled@9062234 : Boolean;pTableType@9062231 : Integer;pId@9062232 : Integer;pValue@9062233 : Text[250];pFlexibleFilter@1000000000 : Boolean);
    BEGIN
      //DOC NA2016.12 - Adding another entry to filter buffer
      //  <> pPlanningBoardFilterBuffer: Target buffer
      //  -> pEnabled: Enabled flag
      //  -> pTableType: Table type (of the filter)
      //  -> pId: ID (of the filter)
      //  -> pValue: Value
      //  -> pFlexibleFilter: Flexible filter flag

      IF ( NOT (pEnabled)) THEN
        EXIT;
      IF (pValue = '') THEN
        EXIT;

      pPlanningBoardFilterBuffer."Table Type" := pTableType;
      pPlanningBoardFilterBuffer.ID := pId;
      pPlanningBoardFilterBuffer.Value := pValue;
      pPlanningBoardFilterBuffer."Flexible Filter" := pFlexibleFilter;
      pPlanningBoardFilterBuffer.INSERT();
    END;

    LOCAL PROCEDURE "--- Resource Table ---"@1000000011();
    BEGIN
    END;

    PROCEDURE GetResourceBuffer@1000000004(VAR pPlanningBoardResourceBuffer@1000000000 : Record 9062346);
    BEGIN
      pPlanningBoardResourceBuffer.COPY(PlanningBoardResourceBuffer, TRUE);
    END;

    PROCEDURE SetResourceBuffer@1000000005(VAR pPlanningBoardResourceBuffer@1000000000 : Record 9062346);
    BEGIN
      PlanningBoardResourceBuffer.COPY(pPlanningBoardResourceBuffer, TRUE);
    END;

    LOCAL PROCEDURE "--- Entry Table ---"@1000000012();
    BEGIN
    END;

    PROCEDURE GetEntryBuffer@1000000006(VAR pPlanningBoardEntryBuffer@1000000000 : Record 9062347);
    BEGIN
      pPlanningBoardEntryBuffer.COPY(PlanningBoardEntryBuffer, TRUE);
    END;

    PROCEDURE SetEntryBuffer@1000000007(VAR pPlanningBoardEntryBuffer@1000000000 : Record 9062347);
    BEGIN
      PlanningBoardEntryBuffer.COPY(pPlanningBoardEntryBuffer, TRUE);
    END;

    LOCAL PROCEDURE "--- Request Data ---"@1000000015();
    BEGIN
    END;

    PROCEDURE GetRequestData@1000000016() : Text;
    BEGIN
      //DOC NA2016.12 - Returning request data
      //  <- The data

      EXIT(RequestData);
    END;

    PROCEDURE SetRequestData@1000000017(pData@1000000000 : Text);
    BEGIN
      //DOC NA2016.12 - Setting request data
      //  -> pData: The data

      RequestData := pData;
    END;

    PROCEDURE SaveRequestData@9062242();
    BEGIN
      //DOC NA2016.12 - Saving request data

      RequestDataSaved := RequestData;
    END;

    PROCEDURE RestoreRequestData@9062243() : Text;
    BEGIN
      //DOC NA2016.12 - Restoring request data
      //  <- Request data restored

      RequestData := RequestDataSaved;
      CLEAR(RequestDataSaved);
      EXIT(RequestData);
    END;

    LOCAL PROCEDURE "--- Incremental Updates ---"@9062238();
    BEGIN
    END;

    PROCEDURE ClearIncrementalUpdate@9062241(pIncludeBuffers@9062230 : Boolean);
    BEGIN
      //DOC NA2016.12 - Clearing incremental update (fields)
      //  -> pIncludeBuffers: Flag to include buffers

      CLEAR(Rec."Event Entry Position");
      CLEAR(Rec."Event Entry Activity");
      CLEAR(Rec."Event Resource Position");
      CLEAR(Rec."Event Resource Activity");

      IF (pIncludeBuffers) THEN
      BEGIN
        PlanningBoardResourceBuffer.SETRANGE("Incremental Activity", PlanningBoardResourceBuffer."Incremental Activity"::Delete);
        PlanningBoardResourceBuffer.DELETEALL();
        PlanningBoardResourceBuffer.SETFILTER("Incremental Activity", '<>%1', PlanningBoardResourceBuffer."Incremental Activity"::" ");
        PlanningBoardResourceBuffer.MODIFYALL("Incremental Activity", PlanningBoardResourceBuffer."Incremental Activity"::" ");
        PlanningBoardResourceBuffer.SETRANGE("Incremental Activity");

        PlanningBoardEntryBuffer.SETRANGE("Incremental Activity", PlanningBoardEntryBuffer."Incremental Activity"::Delete);
        PlanningBoardEntryBuffer.DELETEALL();
        PlanningBoardEntryBuffer.SETFILTER("Incremental Activity", '<>%1', PlanningBoardEntryBuffer."Incremental Activity"::" ");
        PlanningBoardEntryBuffer.MODIFYALL("Incremental Activity", PlanningBoardEntryBuffer."Incremental Activity"::" ");
        PlanningBoardEntryBuffer.SETRANGE("Incremental Activity");
      END;
    END;

    PROCEDURE SetResourceIncrementalUpdate@9062239(VAR pResourceRecordRef@9062231 : RecordRef;pResourceActivity@9062230 : Integer;pUpdateControl@1000000000 : Boolean);
    BEGIN
      //DOC NA2016.12 - Setting resource incremental update
      //  <> pResourceRecordRef: Resource record reference
      //  -> pResourceActivity: Resource activity
      //  -> pUpdateControl: Flag to update control

      ClearIncrementalUpdate(TRUE);
      Rec."Event Resource Position" := pResourceRecordRef.GETPOSITION(FALSE);
      Rec."Event Resource Activity" := pResourceActivity;
      Rec."Update Type" := Rec."Update Type"::Incremental;
      Rec."Update Control" := pUpdateControl;

      PlanningBoardResourceBuffer.RESET();
      PlanningBoardResourceBuffer.SETCURRENTKEY("Planning Board Code", Position);
      PlanningBoardResourceBuffer.SETRANGE(Position, Rec."Event Resource Position");
      IF (PlanningBoardResourceBuffer.FINDFIRST()) THEN
      BEGIN
        PlanningBoardResourceBuffer."Incremental Activity" := pResourceActivity;
        PlanningBoardResourceBuffer.MODIFY();
      END;
      PlanningBoardResourceBuffer.RESET();
    END;

    PROCEDURE SetEntryIncrementalUpdate@9062240(VAR pEntryRecordRef@9062231 : RecordRef;pEntryActivity@9062230 : Integer;pUpdateControl@1000000000 : Boolean);
    BEGIN
      //DOC NA2016.12 - Setting entry incremental update
      //  <> pEntryRecordRef: Entry record reference
      //  -> pEntryActivity: Entry activity
      //  -> pUpdateControl: Flag to update control

      ClearIncrementalUpdate(TRUE);
      Rec."Event Entry Position" := pEntryRecordRef.GETPOSITION(FALSE);
      Rec."Event Entry Activity" := pEntryActivity;
      Rec."Update Type" := Rec."Update Type"::Incremental;
      Rec."Update Control" := pUpdateControl;

      PlanningBoardEntryBuffer.RESET();
      PlanningBoardEntryBuffer.SETCURRENTKEY("Planning Board Code", Position);
      PlanningBoardEntryBuffer.SETRANGE(Position, Rec."Event Entry Position");
      IF (PlanningBoardEntryBuffer.FINDFIRST()) THEN
      BEGIN
        PlanningBoardEntryBuffer."Incremental Activity" := pEntryActivity;
        PlanningBoardEntryBuffer.MODIFY();
      END;
      PlanningBoardEntryBuffer.RESET();
    END;

    LOCAL PROCEDURE "--- Action Change Field ---"@1000000025();
    BEGIN
    END;

    PROCEDURE GetActionChangeFieldDataType@1000000018() : Integer;
    VAR
      lField@1000000003 : Record 2000000041;
      lEnhancedFieldDefinition@1000000002 : Record 9062327;
      lTableFieldBuffer@1000000001 : Record 9062231;
      TableFieldManagement@1000000004 : Codeunit 9062248;
      lDataType@1000000000 : Integer;
    BEGIN
      //DOC NA2016.12 - Returning data type (as defined in "Table Field Buffer" table) for "Change Field" functionality
      //  <- The data type

      CLEAR(lDataType);
      IF (Rec."Action Change Field ID" <> 0) THEN
      BEGIN
        Rec.TESTFIELD("Action Change Table ID");
        Rec.TESTFIELD("Action Change Field Type");
        CASE (Rec."Action Change Field Type") OF
          Rec."Action Change Field Type"::Field:
            BEGIN
              lField.GET(Rec."Action Change Table ID", Rec."Action Change Field ID");
              lDataType := TableFieldManagement.FieldTypeToDataType(lField.Type);
            END;
          Rec."Action Change Field Type"::"Enhanced Field":
            BEGIN
              lEnhancedFieldDefinition.GET(Rec."Action Change Table ID", Rec."Action Change Field ID");
              lDataType := TableFieldManagement.EnhancedFieldTypeToDataType(lEnhancedFieldDefinition.Type);
            END;
        END;
      END;
      EXIT(lDataType);
    END;

    PROCEDURE FormatActionChangeFieldValue@1000000020() : Text;
    VAR
      lDataType@1000000001 : Integer;
      lText@1000000000 : Text;
    BEGIN
      //DOC NA2016.12 - Formatting change field value
      //  <- The text

      CLEAR(lText);
      IF ((Rec."Action Change Table ID" <> 0) AND (Rec."Action Change Field Type" <> Rec."Action Change Field Type"::" ") AND
          (Rec."Action Change Field ID" <> 0)) THEN
      BEGIN
        lDataType := Rec.GetActionChangeFieldDataType();
        lText := Convert.FormatDdt(lDataType, Rec."Action Change Field to Decimal", Rec."Action Change Field to DateTm.",
          Rec."Action Change Field to Text");
      END;
      EXIT(lText);
    END;

    PROCEDURE GetActionChangeFieldValue@1000000008(VAR pValue@1000000000 : Variant);
    VAR
      lDataType@1000000001 : Integer;
    BEGIN
      //DOC NA2016.12 - Returning change field value
      //  <> pValue: Target value (variant)

      CLEAR(pValue);
      IF ((Rec."Action Change Table ID" <> 0) AND (Rec."Action Change Field Type" <> Rec."Action Change Field Type"::" ") AND
          (Rec."Action Change Field ID" <> 0)) THEN
      BEGIN
        lDataType := Rec.GetActionChangeFieldDataType();
        Convert.GetDtdValue(lDataType, Rec."Action Change Field to Decimal", Rec."Action Change Field to DateTm.",
          Rec."Action Change Field to Text", pValue);
      END;
    END;

    BEGIN
    {
      //DOC NA2016.12 JH 24/11/2015 - Created
      //DOC NA2016.12 JH 27/01/2016 - HTML templates live
      //DOC NA2016.14 JH 18/02/2016 - Custom action added
      //DOC NA2016.14 JH 14/03/2016 - Fixes
      //DOC NA2016.15 JH 06/05/2016 - CfMD amendments
      //DOC NA2016.16.1 JH 26/07/2016 - "Work Week View Full Week" added
    }
    END.
  }
}

