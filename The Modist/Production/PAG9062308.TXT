OBJECT Page 9062308 File Attachments FB
{
  OBJECT-PROPERTIES
  {
    Date=10/05/16;
    Time=12:00:00 PM;
    Version List=NA2016.15;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Attachments;
               ENG=Attachments];
    SourceTable=Table9062272;
    SourceTableView=SORTING(Table ID,Primary Key Value 1,Primary Key Value 2,Primary Key Value 3,No.);
    PageType=ListPart;
    PromotedActionCategoriesML=[ENU=Attachments,Process,Related Information,Versions,Excel Import,Workflow,Selections,Checklists,Tag;
                                ENG=Attachments,Process,Related Information,Versions,Excel Import,Workflow,Selections,Checklists,Tag];
    OnInit=BEGIN
             SETFILTER("Company Name",'%1|%2','',COPYSTR(COMPANYNAME,1,MAXSTRLEN("Company Name"))); //DOC NA2015.4
           END;

    OnOpenPage=VAR
                 FileSystem@1000000000 : Codeunit 9062264;
               BEGIN
                 Rec.SETRANGE("Current Version",TRUE);
                 CurrOnly := TRUE;
                 ShowAllVersions := NOT CurrOnly;

                 SessionVar.GetLinkAsText(LinkTable,LinkPosition);

                 IsWindowsClient := FileSystem.Client;
               END;

    OnAfterGetRecord=BEGIN
                       IF NOT CurrOnly THEN
                         IsCurr := "Current Version"
                       ELSE IsCurr := FALSE;

                       ShowAllVersions := NOT CurrOnly;

                       SessionVar.GetLinkAsText(LinkTable,LinkPosition);
                     END;

    ActionList=ACTIONS
    {
      { 1000000015;  ;ActionContainer;
                      Name=ActionItems;
                      CaptionML=[ENU=Action Items;
                                 ENG=Action Items];
                      ActionContainerType=ActionItems }
      { 1000000006;1 ;Separator ;
                      CaptionML=[ENU=----------------;
                                 ENG=----------------] }
      { 1000000002;1 ;Action    ;
                      Name=UploadFile;
                      CaptionML=[ENU=Upload File;
                                 ENG=Upload File];
                      ToolTipML=ENU=Browse for File;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Import;
                      PromotedCategory=New;
                      OnAction=BEGIN
                                 FileAttachmentProcessing.GetFromClient(Rec);
                               END;
                                }
      { 1000000016;1 ;Action    ;
                      Name=GetExcel;
                      CaptionML=[ENU=Get Excel;
                                 ENG=Get Excel];
                      ToolTipML=ENU=Get Current Excel Worksheet;
                      Visible=IsWindowsClient;
                      Enabled=IsWindowsClient;
                      Image=Excel;
                      OnAction=BEGIN
                                 FileAttachmentProcessing.GetFromExcel(Rec);
                               END;
                                }
      { 1000000000;1 ;Action    ;
                      Name=GetEMail;
                      CaptionML=[ENU=Get E-Mail;
                                 ENG=Get E-Mail];
                      ToolTipML=ENU=Get Current Outlook E-Mail;
                      Visible=IsWindowsClient;
                      Enabled=IsWindowsClient;
                      Image=SendMail;
                      OnAction=BEGIN
                                 FileAttachmentProcessing.GetFromOutlook(Rec);
                               END;
                                }
      { 1000000019;1 ;Action    ;
                      Name=GetWord;
                      CaptionML=[ENU=Get Word;
                                 ENG=Get Word];
                      ToolTipML=ENU=Get Current Word Document;
                      Visible=IsWindowsClient;
                      Enabled=IsWindowsClient;
                      Image=Word;
                      OnAction=BEGIN
                                 FileAttachmentProcessing.GetFromWord(Rec);
                               END;
                                }
      { 1000000009;1 ;Separator ;
                      CaptionML=[ENU=----------------;
                                 ENG=----------------] }
      { 1000000013;1 ;Action    ;
                      Name=Open;
                      CaptionML=[ENU=Open;
                                 ENG=Open];
                      Promoted=Yes;
                      Image=Open;
                      PromotedCategory=New;
                      OnAction=BEGIN
                                 Rec.OpenFile();
                               END;
                                }
      { 1000000014;1 ;Action    ;
                      Name=Delete;
                      CaptionML=[ENU=Delete;
                                 ENG=Delete];
                      Image=Delete;
                      OnAction=BEGIN
                                 Rec.DeleteFile();
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1000000005;1 ;Separator ;
                      CaptionML=[ENU=----------------;
                                 ENG=----------------] }
      { 1000000011;1 ;Action    ;
                      Name=ShowCurrentVersionOnly;
                      CaptionML=[ENU=Show Current Version Only;
                                 ENG=Show Current Version Only];
                      Promoted=Yes;
                      Image=Versions;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 SETFILTER("Current Version",'%1',TRUE);
                                 CurrOnly := TRUE;
                                 CurrPage.UPDATE;
                                 CurrPage.ACTIVATE(TRUE);
                               END;
                                }
      { 1000000012;1 ;Action    ;
                      Name=ShowAllVersions;
                      CaptionML=[ENU=Show All Versions;
                                 ENG=Show All Versions];
                      Promoted=Yes;
                      Image=RoutingVersions;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 SETFILTER("Current Version",' ');
                                 CurrOnly := FALSE;
                                 CurrPage.UPDATE;
                                 CurrPage.ACTIVATE(TRUE);
                               END;
                                }
      { 1000000020;1 ;Action    ;
                      Name=DocumentList;
                      CaptionML=[ENU=Document List;
                                 ENG=Document List];
                      RunObject=Page 9062313;
                      RunPageLink=Table ID=FIELD(Table ID),
                                  Primary Key Value 1=FIELD(Primary Key Value 1),
                                  Primary Key Value 2=FIELD(Primary Key Value 2),
                                  Primary Key Value 3=FIELD(Primary Key Value 3),
                                  Primary Key FieldID 1=FIELD(Primary Key FieldID 1),
                                  Primary Key FieldID 2=FIELD(Primary Key FieldID 2),
                                  Primary Key FieldID 3=FIELD(Primary Key FieldID 3),
                                  Card Page ID=FIELD(Card Page ID) }
      { 1000000017;1 ;Separator ;
                      CaptionML=[ENU=----------------;
                                 ENG=----------------] }
      { 1000000027;1 ;Action    ;
                      Name=ImportDataFromExcel;
                      CaptionML=[ENU=Import Data From Excel;
                                 ENG=Import Data From Excel];
                      Promoted=Yes;
                      Visible=IsWindowsClient;
                      Enabled=IsWindowsClient;
                      PromotedIsBig=No;
                      Image=ImportExcel;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 FileAttachmentProcessing.ImportDataFromExcel();
                               END;
                                }
      { 1000000023;1 ;Action    ;
                      Name=ImportDataFromCurrent ExcelWorkbook;
                      CaptionML=[ENU=Import Data From Current Excel Workbook;
                                 ENG=Import Data From Current Excel Workbook];
                      Promoted=Yes;
                      Visible=IsWindowsClient;
                      Enabled=IsWindowsClient;
                      PromotedIsBig=No;
                      Image=ImportExcel;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 FileAttachmentProcessing.ImportDataFromCurrExcelWbok();
                               END;
                                }
      { 1000000025;1 ;Separator ;
                      CaptionML=[ENU=----------------;
                                 ENG=----------------] }
      { 1000000026;1 ;Action    ;
                      Name=RelatedWorkflows;
                      CaptionML=[ENU=Related Workflows;
                                 ENG=Related Workflows];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Approvals;
                      PromotedCategory=Category6;
                      OnAction=VAR
                                 GroupWFlow@1000000000 : Record 9062265;
                                 GroupWFlowList@1000000001 : Page 9062300;
                                 eCannotFind@1000000002 : TextConst 'ENU=Sorry, cannot find the record related to this Factbox;ENG=Sorry, cannot find the record related to this Factbox';
                               BEGIN
                                 SetLink;

                                 IF NOT RelatedRecFound THEN ERROR(eCannotFind);

                                 GroupWFlow.SETRANGE("Table ID",RelatedRecRef.NUMBER);
                                 GroupWFlow.SETRANGE("Get Position Text",RelatedRecRef.GETPOSITION(FALSE));
                                 IF NOT GroupWFlow.FINDFIRST THEN
                                   GroupWFlow.SETRANGE("Get Position Text",RelatedRecRef.GETPOSITION(TRUE));


                                 GroupWFlowList.SETTABLEVIEW(GroupWFlow);
                                 GroupWFlowList.RUN;
                               END;
                                }
      { 1000000034;1 ;Separator ;
                      CaptionML=[ENU=----------------;
                                 ENG=----------------] }
      { 1000000035;1 ;Action    ;
                      Name=TagRecord;
                      CaptionML=[ENU=Tag Record;
                                 ENG=Tag Record];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=SuggestSalesPrice;
                      PromotedCategory=Category9;
                      OnAction=VAR
                                 TagRecordPage@1000000001 : Page 9062690;
                                 TagResSelectionMgt@1000000000 : Codeunit 9062390;
                               BEGIN
                                 CLEAR(RelatedRecRef);
                                 RelatedRecFound := FALSE;

                                 SetLink;
                                 IF RelatedRecFound THEN BEGIN
                                   TagResSelectionMgt.SetSingle_FromPos(RelatedRecRef.NUMBER,RelatedRecRef.GETPOSITION);
                                   TagRecordPage.RUNMODAL;
                                 END;
                               END;
                                }
      { 1000000036;1 ;Action    ;
                      Name=Tags;
                      CaptionML=[ENU=Tags;
                                 ENG=Tags];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Price;
                      PromotedCategory=Category9;
                      OnAction=VAR
                                 TagEntryList@1000000000 : Page 9062687;
                                 TagEntry@1000000001 : Record 9062493;
                               BEGIN
                                 CLEAR(RelatedRecRef);
                                 RelatedRecFound := FALSE;

                                 SetLink;
                                 IF RelatedRecFound THEN BEGIN
                                   TagEntry.SETFILTER("Table No.",'%1',RelatedRecRef.NUMBER);
                                   TagEntry.SETFILTER("User Short Code",TNPUtils.GetPrimaryKey(RelatedRecRef.NUMBER,RelatedRecRef.GETPOSITION,1));
                                   TagEntry.SETFILTER("Position Text",TNPUtils.GetPrimaryKey(RelatedRecRef.NUMBER,RelatedRecRef.GETPOSITION,2));
                                   TagEntry.SETFILTER("Primary Key 1",TNPUtils.GetPrimaryKey(RelatedRecRef.NUMBER,RelatedRecRef.GETPOSITION,3));
                                   TagEntry.SETFILTER("Primary Key 2",TNPUtils.GetPrimaryKey(RelatedRecRef.NUMBER,RelatedRecRef.GETPOSITION,4));
                                   TagEntry.SETFILTER("Primary Key 3",TNPUtils.GetPrimaryKey(RelatedRecRef.NUMBER,RelatedRecRef.GETPOSITION,5));
                                   TagEntryList.SETTABLEVIEW(TagEntry);
                                   TagEntryList.RUN;
                                 END;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1000000001;;Container;
                Name=Container;
                CaptionML=[ENU=Container;
                           ENG=Container];
                ContainerType=ContentArea }

    { 1000000003;1;Group  ;
                GroupType=Repeater }

    { 1000000010;2;Field  ;
                SourceExpr=Icon;
                Visible=FALSE }

    { 1000000021;2;Field  ;
                SourceExpr=Description;
                Style=StrongAccent;
                StyleExpr=IsCurr;
                OnDrillDown=BEGIN
                              OpenFile;
                            END;

                OnAssistEdit=BEGIN
                               OpenFile;
                             END;
                              }

    { 1000000008;2;Field  ;
                SourceExpr=Type;
                Visible=FALSE }

    { 1000000004;2;Field  ;
                SourceExpr="Version No.";
                Visible=ShowAllVersions;
                Style=Standard;
                StyleExpr=IsCurr }

    { 1000000007;1;Field  ;
                Name=UploadFile;
                CaptionML=[ENU=Upload File;
                           ENG=Upload File];
                SourceExpr=tUploadFile;
                Style=StrongAccent;
                StyleExpr=TRUE;
                OnAssistEdit=BEGIN
                               FileAttachmentProcessing.GetFromClient(Rec);
                             END;

                ShowCaption=No }

    { 1000000028;1;Field  ;
                Name=GetEMail;
                CaptionML=[ENU=Get E-Mail;
                           ENG=Get E-Mail];
                SourceExpr=tGetEMail;
                Style=StrongAccent;
                StyleExpr=TRUE;
                OnAssistEdit=BEGIN
                               FileAttachmentProcessing.GetFromOutlook(Rec);
                             END;

                ShowCaption=No }

    { 1000000022;1;Field  ;
                Name=GetExcel;
                CaptionML=[ENU=Get Excel;
                           ENG=Get Excel];
                SourceExpr=tGetExcel;
                Style=StrongAccent;
                StyleExpr=TRUE;
                OnAssistEdit=BEGIN
                               FileAttachmentProcessing.GetFromExcel(Rec);
                             END;

                ShowCaption=No }

  }
  CODE
  {
    VAR
      FileAttachmentProcessing@9062229 : Codeunit 9062600;
      FileList@1102633000 : BigText;
      SNText001@1102633001 : TextConst 'ENU=File not found.  Attaching folders is not supported.;ENG=File not found.  Attaching folders is not supported.';
      SNText002@1102633002 : TextConst 'ENU=There is already a file with the same name in this location. Do you want to overwrite the existing file?;ENG=There is already a file with the same name in this location. Do you want to overwrite the existing file?';
      FileName@1000000001 : Text[1024];
      "3Tier"@1000000002 : Codeunit 419;
      IsCurr@1000000003 : Boolean INDATASET;
      CurrOnly@1000000004 : Boolean;
      tUploadFile@1000000000 : TextConst 'ENU=Upload File;ENG=Upload File';
      tGetEMail@1000000006 : TextConst 'ENU=Get E-Mail;ENG=Get E-Mail';
      ShowAllVersions@1000000016 : Boolean INDATASET;
      LinkTable@1000000007 : Text[250];
      LinkPosition@1000000008 : Text[1024];
      SessionVar@1000000009 : Codeunit 9062232;
      TNPUtils@1000000010 : Codeunit 9062229;
      InfosetExportImport@1000000011 : Codeunit 9062296;
      tGetExcel@1000000013 : TextConst 'ENU=Get Excel;ENG=Get Excel';
      SysB@1000000015 : Record 9062230;
      FilterTableID@1000000017 : Integer;
      FilterFieldValue@1000000018 : ARRAY [3] OF Text;
      FilterFieldID@1000000021 : ARRAY [3] OF Text;
      RelatedRecRef@1000000022 : RecordRef;
      RelatedRecFound@1000000023 : Boolean;
      IsWindowsClient@1000000019 : Boolean INDATASET;

    PROCEDURE SetLink@1000000000();
    VAR
      PrevFilterGroup@1000000000 : Integer;
      TableFilter@1000000003 : Text;
      i@1000000002 : Integer;
      FieldRef@1000000005 : FieldRef;
      FieldID@1000000004 : Integer;
    BEGIN
      IF NOT RelatedRecFound THEN BEGIN
        PrevFilterGroup := FILTERGROUP;

        i := 0;
        REPEAT
          FILTERGROUP(i);
          TableFilter := GETFILTER("Table ID");
          i += 1;
        UNTIL (TableFilter <> '') OR (i >= 5);

        IF TableFilter <> '' THEN BEGIN
          EVALUATE(FilterTableID,TableFilter);
          RelatedRecRef.OPEN(FilterTableID);

          FilterFieldValue[1] := GETFILTER("Primary Key Value 1");
          FilterFieldValue[2] := GETFILTER("Primary Key Value 2");
          FilterFieldValue[3] := GETFILTER("Primary Key Value 3");

          FilterFieldID[1] := GETFILTER("Primary Key FieldID 1");
          FilterFieldID[2] := GETFILTER("Primary Key FieldID 2");
          FilterFieldID[3] := GETFILTER("Primary Key FieldID 3");

          i := 0;
          REPEAT
            i += 1;
            IF FilterFieldID[i] <> '' THEN
              EVALUATE(FieldID,FilterFieldID[i])
            ELSE
              FieldID := TNPUtils.GetPrimaryKeyFieldID(RelatedRecRef.NUMBER,'',i);

            IF FieldID <> 0 THEN BEGIN
              FieldRef := RelatedRecRef.FIELD(FieldID);
              FieldRef.SETFILTER(FilterFieldValue[i]);
            END;
          UNTIL i >= 3;

          IF NOT RelatedRecRef.FINDSET THEN BEGIN
            RelatedRecFound := FALSE;
          END ELSE BEGIN
            IF RelatedRecRef.COUNT = 1 THEN BEGIN
              RelatedRecFound := TRUE;
            END ELSE BEGIN
              RelatedRecFound := FALSE;
            END;
          END;

        END;
        IF NOT RelatedRecFound THEN RelatedRecRef.CLOSE;
      END;
    END;

    BEGIN
    {
      //DOC NA2015.1  JH 31/08/2012 - Migrated to 2013
      //DOC NA2015.1  PC 13/12/3012 - Added SetLink function and "Remember" action
      //DOC NA2015.1  IH 28/02/2013 - Hid Remember Button
      //DOC NA2015.1  PC 03/09/2013 - Added "Selections" action
      //DOC NA2015.1  PC 06/03/2014 - Added "Tag" actions
      //DOC NA2015.1  PC 03/06/2014 - Removed Action links and promoted buttons
      //DOC NA2015.1  PC 03/06/2014 - Only show certain actions if on Windows client
      //DOC NA2015.3  JH 31/07/2014 - Images added
      //DOC NA2015.4  PC 01/10/2014 - Added "Browse For File" caption to action so that it looks correct in Web Client
      //DOC NA2015.4  JH 28/12/2014 - System behaviours renamed
      //DOC NA2015.4  PC 29/01/2015 - Added Company Name filter OnInit
      //DOC NA2016.10 JH 01/09/2015 - Upgraded to 2016
      //DOC NA2016.10 AZ 02/11/2015 - "Card Form ID" and "Move to Card Form ID" fields removed from "File Attachment" table
      //DOC NA2016.15 JH 25/04/2016 - CfMD amendments
    }
    END.
  }
}

