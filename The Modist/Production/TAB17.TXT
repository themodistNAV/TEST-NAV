OBJECT Table 17 G/L Entry
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    OnInsert=VAR
               GenJnlPostPreview@1000 : Codeunit 19;
             BEGIN
               GenJnlPostPreview.SaveGLEntry(Rec);
             END;

    CaptionML=[ENU=G/L Entry;
               ENG=G/L Entry];
    LookupPageID=Page20;
    DrillDownPageID=Page20;
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;CaptionML=[ENU=Entry No.;
                                                              ENG=Entry No.] }
    { 3   ;   ;G/L Account No.     ;Code20        ;TableRelation="G/L Account";
                                                   CaptionML=[ENU=G/L Account No.;
                                                              ENG=G/L Account No.] }
    { 4   ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              ENG=Posting Date];
                                                   ClosingDates=Yes }
    { 5   ;   ;Document Type       ;Option        ;CaptionML=[ENU=Document Type;
                                                              ENG=Document Type];
                                                   OptionCaptionML=[ENU=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund";
                                                                    ENG=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund"];
                                                   OptionString=[ ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund] }
    { 6   ;   ;Document No.        ;Code20        ;OnLookup=VAR
                                                              IncomingDocument@1000 : Record 130;
                                                            BEGIN
                                                              IncomingDocument.HyperlinkToDocument("Document No.","Posting Date");
                                                            END;

                                                   CaptionML=[ENU=Document No.;
                                                              ENG=Document No.] }
    { 7   ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              ENG=Description] }
    { 10  ;   ;Bal. Account No.    ;Code20        ;TableRelation=IF (Bal. Account Type=CONST(G/L Account)) "G/L Account"
                                                                 ELSE IF (Bal. Account Type=CONST(Customer)) Customer
                                                                 ELSE IF (Bal. Account Type=CONST(Vendor)) Vendor
                                                                 ELSE IF (Bal. Account Type=CONST(Bank Account)) "Bank Account"
                                                                 ELSE IF (Bal. Account Type=CONST(Fixed Asset)) "Fixed Asset"
                                                                 ELSE IF (Bal. Account Type=CONST(IC Partner)) "IC Partner";
                                                   CaptionML=[ENU=Bal. Account No.;
                                                              ENG=Bal. Account No.] }
    { 17  ;   ;Amount              ;Decimal       ;CaptionML=[ENU=Amount;
                                                              ENG=Amount];
                                                   AutoFormatType=1 }
    { 23  ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=[ENU=Global Dimension 1 Code;
                                                              ENG=Global Dimension 1 Code];
                                                   CaptionClass='1,1,1' }
    { 24  ;   ;Global Dimension 2 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=[ENU=Global Dimension 2 Code;
                                                              ENG=Global Dimension 2 Code];
                                                   CaptionClass='1,1,2' }
    { 27  ;   ;User ID             ;Code50        ;TableRelation=User."User Name";
                                                   OnLookup=VAR
                                                              UserMgt@1000 : Codeunit 418;
                                                            BEGIN
                                                              UserMgt.LookupUserID("User ID");
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=User ID;
                                                              ENG=User ID] }
    { 28  ;   ;Source Code         ;Code10        ;TableRelation="Source Code";
                                                   CaptionML=[ENU=Source Code;
                                                              ENG=Source Code] }
    { 29  ;   ;System-Created Entry;Boolean       ;CaptionML=[ENU=System-Created Entry;
                                                              ENG=System-Created Entry] }
    { 30  ;   ;Prior-Year Entry    ;Boolean       ;CaptionML=[ENU=Prior-Year Entry;
                                                              ENG=Prior-Year Entry] }
    { 41  ;   ;Job No.             ;Code20        ;TableRelation=Job;
                                                   CaptionML=[ENU=Job No.;
                                                              ENG=Job No.] }
    { 42  ;   ;Quantity            ;Decimal       ;CaptionML=[ENU=Quantity;
                                                              ENG=Quantity];
                                                   DecimalPlaces=0:5 }
    { 43  ;   ;VAT Amount          ;Decimal       ;CaptionML=[ENU=VAT Amount;
                                                              ENG=VAT Amount];
                                                   AutoFormatType=1 }
    { 45  ;   ;Business Unit Code  ;Code10        ;TableRelation="Business Unit";
                                                   CaptionML=[ENU=Business Unit Code;
                                                              ENG=Business Unit Code] }
    { 46  ;   ;Journal Batch Name  ;Code10        ;CaptionML=[ENU=Journal Batch Name;
                                                              ENG=Journal Batch Name] }
    { 47  ;   ;Reason Code         ;Code10        ;TableRelation="Reason Code";
                                                   CaptionML=[ENU=Reason Code;
                                                              ENG=Reason Code] }
    { 48  ;   ;Gen. Posting Type   ;Option        ;CaptionML=[ENU=Gen. Posting Type;
                                                              ENG=Gen. Posting Type];
                                                   OptionCaptionML=[ENU=" ,Purchase,Sale,Settlement";
                                                                    ENG=" ,Purchase,Sale,Settlement"];
                                                   OptionString=[ ,Purchase,Sale,Settlement] }
    { 49  ;   ;Gen. Bus. Posting Group;Code10     ;TableRelation="Gen. Business Posting Group";
                                                   CaptionML=[ENU=Gen. Bus. Posting Group;
                                                              ENG=Gen. Bus. Posting Group] }
    { 50  ;   ;Gen. Prod. Posting Group;Code10    ;TableRelation="Gen. Product Posting Group";
                                                   CaptionML=[ENU=Gen. Prod. Posting Group;
                                                              ENG=Gen. Prod. Posting Group] }
    { 51  ;   ;Bal. Account Type   ;Option        ;CaptionML=[ENU=Bal. Account Type;
                                                              ENG=Bal. Account Type];
                                                   OptionCaptionML=[ENU=G/L Account,Customer,Vendor,Bank Account,Fixed Asset,IC Partner;
                                                                    ENG=G/L Account,Customer,Vendor,Bank Account,Fixed Asset,IC Partner];
                                                   OptionString=G/L Account,Customer,Vendor,Bank Account,Fixed Asset,IC Partner }
    { 52  ;   ;Transaction No.     ;Integer       ;CaptionML=[ENU=Transaction No.;
                                                              ENG=Transaction No.] }
    { 53  ;   ;Debit Amount        ;Decimal       ;CaptionML=[ENU=Debit Amount;
                                                              ENG=Debit Amount];
                                                   BlankZero=Yes;
                                                   AutoFormatType=1 }
    { 54  ;   ;Credit Amount       ;Decimal       ;CaptionML=[ENU=Credit Amount;
                                                              ENG=Credit Amount];
                                                   BlankZero=Yes;
                                                   AutoFormatType=1 }
    { 55  ;   ;Document Date       ;Date          ;CaptionML=[ENU=Document Date;
                                                              ENG=Document Date];
                                                   ClosingDates=Yes }
    { 56  ;   ;External Document No.;Code35       ;CaptionML=[ENU=External Document No.;
                                                              ENG=External Document No.] }
    { 57  ;   ;Source Type         ;Option        ;CaptionML=[ENU=Source Type;
                                                              ENG=Source Type];
                                                   OptionCaptionML=[ENU=" ,Customer,Vendor,Bank Account,Fixed Asset";
                                                                    ENG=" ,Customer,Vendor,Bank Account,Fixed Asset"];
                                                   OptionString=[ ,Customer,Vendor,Bank Account,Fixed Asset] }
    { 58  ;   ;Source No.          ;Code20        ;TableRelation=IF (Source Type=CONST(Customer)) Customer
                                                                 ELSE IF (Source Type=CONST(Vendor)) Vendor
                                                                 ELSE IF (Source Type=CONST(Bank Account)) "Bank Account"
                                                                 ELSE IF (Source Type=CONST(Fixed Asset)) "Fixed Asset";
                                                   CaptionML=[ENU=Source No.;
                                                              ENG=Source No.] }
    { 59  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              ENG=No. Series] }
    { 60  ;   ;Tax Area Code       ;Code20        ;TableRelation="Tax Area";
                                                   CaptionML=[ENU=Tax Area Code;
                                                              ENG=VAT Area Code] }
    { 61  ;   ;Tax Liable          ;Boolean       ;CaptionML=[ENU=Tax Liable;
                                                              ENG=VAT Liable] }
    { 62  ;   ;Tax Group Code      ;Code10        ;TableRelation="Tax Group";
                                                   CaptionML=[ENU=Tax Group Code;
                                                              ENG=VAT Group Code] }
    { 63  ;   ;Use Tax             ;Boolean       ;CaptionML=[ENU=Use Tax;
                                                              ENG=Use VAT] }
    { 64  ;   ;VAT Bus. Posting Group;Code10      ;TableRelation="VAT Business Posting Group";
                                                   CaptionML=[ENU=VAT Bus. Posting Group;
                                                              ENG=VAT Bus. Posting Group] }
    { 65  ;   ;VAT Prod. Posting Group;Code10     ;TableRelation="VAT Product Posting Group";
                                                   CaptionML=[ENU=VAT Prod. Posting Group;
                                                              ENG=VAT Prod. Posting Group] }
    { 68  ;   ;Additional-Currency Amount;Decimal ;AccessByPermission=TableData 4=R;
                                                   CaptionML=[ENU=Additional-Currency Amount;
                                                              ENG=Additional-Currency Amount];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 69  ;   ;Add.-Currency Debit Amount;Decimal ;CaptionML=[ENU=Add.-Currency Debit Amount;
                                                              ENG=Add.-Currency Debit Amount];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 70  ;   ;Add.-Currency Credit Amount;Decimal;CaptionML=[ENU=Add.-Currency Credit Amount;
                                                              ENG=Add.-Currency Credit Amount];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 71  ;   ;Close Income Statement Dim. ID;Integer;
                                                   CaptionML=[ENU=Close Income Statement Dim. ID;
                                                              ENG=Close Income Statement Dim. ID] }
    { 72  ;   ;IC Partner Code     ;Code20        ;TableRelation="IC Partner";
                                                   CaptionML=[ENU=IC Partner Code;
                                                              ENG=IC Partner Code] }
    { 73  ;   ;Reversed            ;Boolean       ;CaptionML=[ENU=Reversed;
                                                              ENG=Reversed] }
    { 74  ;   ;Reversed by Entry No.;Integer      ;TableRelation="G/L Entry";
                                                   CaptionML=[ENU=Reversed by Entry No.;
                                                              ENG=Reversed by Entry No.];
                                                   BlankZero=Yes }
    { 75  ;   ;Reversed Entry No.  ;Integer       ;TableRelation="G/L Entry";
                                                   CaptionML=[ENU=Reversed Entry No.;
                                                              ENG=Reversed Entry No.];
                                                   BlankZero=Yes }
    { 76  ;   ;G/L Account Name    ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("G/L Account".Name WHERE (No.=FIELD(G/L Account No.)));
                                                   CaptionML=[ENU=G/L Account Name;
                                                              ENG=G/L Account Name];
                                                   Editable=No }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDimensions;
                                                            END;

                                                   CaptionML=[ENU=Dimension Set ID;
                                                              ENG=Dimension Set ID];
                                                   Editable=No }
    { 5400;   ;Prod. Order No.     ;Code20        ;CaptionML=[ENU=Prod. Order No.;
                                                              ENG=Prod. Order No.] }
    { 5600;   ;FA Entry Type       ;Option        ;AccessByPermission=TableData 5600=R;
                                                   CaptionML=[ENU=FA Entry Type;
                                                              ENG=FA Entry Type];
                                                   OptionCaptionML=[ENU=" ,Fixed Asset,Maintenance";
                                                                    ENG=" ,Fixed Asset,Maintenance"];
                                                   OptionString=[ ,Fixed Asset,Maintenance] }
    { 5601;   ;FA Entry No.        ;Integer       ;TableRelation=IF (FA Entry Type=CONST(Fixed Asset)) "FA Ledger Entry"
                                                                 ELSE IF (FA Entry Type=CONST(Maintenance)) "Maintenance Ledger Entry";
                                                   CaptionML=[ENU=FA Entry No.;
                                                              ENG=FA Entry No.];
                                                   BlankZero=Yes }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
    {    ;G/L Account No.,Posting Date            ;SumIndexFields=Amount,Debit Amount,Credit Amount,Additional-Currency Amount,Add.-Currency Debit Amount,Add.-Currency Credit Amount }
    {    ;G/L Account No.,Global Dimension 1 Code,Global Dimension 2 Code,Posting Date;
                                                   SumIndexFields=Amount,Debit Amount,Credit Amount,Additional-Currency Amount,Add.-Currency Debit Amount,Add.-Currency Credit Amount }
    {    ;G/L Account No.,Business Unit Code,Posting Date;
                                                   SumIndexFields=Amount,Debit Amount,Credit Amount,Additional-Currency Amount,Add.-Currency Debit Amount,Add.-Currency Credit Amount }
    {    ;G/L Account No.,Business Unit Code,Global Dimension 1 Code,Global Dimension 2 Code,Posting Date;
                                                   SumIndexFields=Amount,Debit Amount,Credit Amount,Additional-Currency Amount,Add.-Currency Debit Amount,Add.-Currency Credit Amount }
    {    ;Document No.,Posting Date                }
    {    ;Transaction No.                          }
    {    ;IC Partner Code                          }
    {    ;G/L Account No.,Job No.,Posting Date    ;SumIndexFields=Amount }
    {    ;Posting Date,G/L Account No.,Dimension Set ID;
                                                   SumIndexFields=Amount }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Entry No.,Description,G/L Account No.,Posting Date,Document Type,Document No. }
  }
  CODE
  {
    VAR
      GLSetup@1000 : Record 98;
      GLSetupRead@1002 : Boolean;

    PROCEDURE GetCurrencyCode@1() : Code[10];
    BEGIN
      IF NOT GLSetupRead THEN BEGIN
        GLSetup.GET;
        GLSetupRead := TRUE;
      END;
      EXIT(GLSetup."Additional Reporting Currency");
    END;

    PROCEDURE ShowValueEntries@8();
    VAR
      GLItemLedgRelation@1000 : Record 5823;
      ValueEntry@1002 : Record 5802;
      TempValueEntry@1001 : TEMPORARY Record 5802;
    BEGIN
      GLItemLedgRelation.SETRANGE("G/L Entry No.","Entry No.");
      IF GLItemLedgRelation.FINDSET THEN
        REPEAT
          ValueEntry.GET(GLItemLedgRelation."Value Entry No.");
          TempValueEntry.INIT;
          TempValueEntry := ValueEntry;
          TempValueEntry.INSERT;
        UNTIL GLItemLedgRelation.NEXT = 0;

      PAGE.RUNMODAL(0,TempValueEntry);
    END;

    PROCEDURE ShowDimensions@2();
    VAR
      DimMgt@1000 : Codeunit 408;
    BEGIN
      DimMgt.ShowDimensionSet("Dimension Set ID",STRSUBSTNO('%1 %2',TABLECAPTION,"Entry No."));
    END;

    PROCEDURE UpdateDebitCredit@3(Correction@1000 : Boolean);
    BEGIN
      IF ((Amount > 0) AND (NOT Correction)) OR
         ((Amount < 0) AND Correction)
      THEN BEGIN
        "Debit Amount" := Amount;
        "Credit Amount" := 0
      END ELSE BEGIN
        "Debit Amount" := 0;
        "Credit Amount" := -Amount;
      END;

      IF (("Additional-Currency Amount" > 0) AND (NOT Correction)) OR
         (("Additional-Currency Amount" < 0) AND Correction)
      THEN BEGIN
        "Add.-Currency Debit Amount" := "Additional-Currency Amount";
        "Add.-Currency Credit Amount" := 0
      END ELSE BEGIN
        "Add.-Currency Debit Amount" := 0;
        "Add.-Currency Credit Amount" := -"Additional-Currency Amount";
      END;
    END;

    PROCEDURE CopyFromGenJnlLine@4(GenJnlLine@1000 : Record 81);
    BEGIN
      "Posting Date" := GenJnlLine."Posting Date";
      "Document Date" := GenJnlLine."Document Date";
      "Document Type" := GenJnlLine."Document Type";
      "Document No." := GenJnlLine."Document No.";
      "External Document No." := GenJnlLine."External Document No.";
      Description := GenJnlLine.Description;
      "Business Unit Code" := GenJnlLine."Business Unit Code";
      "Global Dimension 1 Code" := GenJnlLine."Shortcut Dimension 1 Code";
      "Global Dimension 2 Code" := GenJnlLine."Shortcut Dimension 2 Code";
      "Dimension Set ID" := GenJnlLine."Dimension Set ID";
      "Source Code" := GenJnlLine."Source Code";
      IF GenJnlLine."Account Type" = GenJnlLine."Account Type"::"G/L Account" THEN BEGIN
        "Source Type" := GenJnlLine."Source Type";
        "Source No." := GenJnlLine."Source No.";
      END ELSE BEGIN
        "Source Type" := GenJnlLine."Account Type";
        "Source No." := GenJnlLine."Account No.";
      END;
      IF (GenJnlLine."Account Type" = GenJnlLine."Account Type"::"IC Partner") OR
         (GenJnlLine."Bal. Account Type" = GenJnlLine."Bal. Account Type"::"IC Partner")
      THEN
        "Source Type" := "Source Type"::" ";
      "Job No." := GenJnlLine."Job No.";
      Quantity := GenJnlLine.Quantity;
      "Journal Batch Name" := GenJnlLine."Journal Batch Name";
      "Reason Code" := GenJnlLine."Reason Code";
      "User ID" := USERID;
      "No. Series" := GenJnlLine."Posting No. Series";
      "IC Partner Code" := GenJnlLine."IC Partner Code";

      OnAfterCopyGLEntryFromGenJnlLine(Rec,GenJnlLine);
    END;

    PROCEDURE CopyPostingGroupsFromGLEntry@5(GLEntry@1000 : Record 17);
    BEGIN
      "Gen. Posting Type" := GLEntry."Gen. Posting Type";
      "Gen. Bus. Posting Group" := GLEntry."Gen. Bus. Posting Group";
      "Gen. Prod. Posting Group" := GLEntry."Gen. Prod. Posting Group";
      "VAT Bus. Posting Group" := GLEntry."VAT Bus. Posting Group";
      "VAT Prod. Posting Group" := GLEntry."VAT Prod. Posting Group";
      "Tax Area Code" := GLEntry."Tax Area Code";
      "Tax Liable" := GLEntry."Tax Liable";
      "Tax Group Code" := GLEntry."Tax Group Code";
      "Use Tax" := GLEntry."Use Tax";
    END;

    PROCEDURE CopyPostingGroupsFromVATEntry@96(VATEntry@1001 : Record 254);
    BEGIN
      "Gen. Posting Type" := VATEntry.Type;
      "Gen. Bus. Posting Group" := VATEntry."Gen. Bus. Posting Group";
      "Gen. Prod. Posting Group" := VATEntry."Gen. Prod. Posting Group";
      "VAT Bus. Posting Group" := VATEntry."VAT Bus. Posting Group";
      "VAT Prod. Posting Group" := VATEntry."VAT Prod. Posting Group";
      "Tax Area Code" := VATEntry."Tax Area Code";
      "Tax Liable" := VATEntry."Tax Liable";
      "Tax Group Code" := VATEntry."Tax Group Code";
      "Use Tax" := VATEntry."Use Tax";
    END;

    PROCEDURE CopyPostingGroupsFromGenJnlLine@19(GenJnlLine@1000 : Record 81);
    BEGIN
      "Gen. Posting Type" := GenJnlLine."Gen. Posting Type";
      "Gen. Bus. Posting Group" := GenJnlLine."Gen. Bus. Posting Group";
      "Gen. Prod. Posting Group" := GenJnlLine."Gen. Prod. Posting Group";
      "VAT Bus. Posting Group" := GenJnlLine."VAT Bus. Posting Group";
      "VAT Prod. Posting Group" := GenJnlLine."VAT Prod. Posting Group";
      "Tax Area Code" := GenJnlLine."Tax Area Code";
      "Tax Liable" := GenJnlLine."Tax Liable";
      "Tax Group Code" := GenJnlLine."Tax Group Code";
      "Use Tax" := GenJnlLine."Use Tax";
    END;

    PROCEDURE CopyPostingGroupsFromDtldCVBuf@94(DtldCVLedgEntryBuf@1001 : Record 383;GenPostingType@1002 : ' ,Purchase,Sale,Settlement');
    BEGIN
      "Gen. Posting Type" := GenPostingType;
      "Gen. Bus. Posting Group" := DtldCVLedgEntryBuf."Gen. Bus. Posting Group";
      "Gen. Prod. Posting Group" := DtldCVLedgEntryBuf."Gen. Prod. Posting Group";
      "VAT Bus. Posting Group" := DtldCVLedgEntryBuf."VAT Bus. Posting Group";
      "VAT Prod. Posting Group" := DtldCVLedgEntryBuf."VAT Prod. Posting Group";
      "Tax Area Code" := DtldCVLedgEntryBuf."Tax Area Code";
      "Tax Liable" := DtldCVLedgEntryBuf."Tax Liable";
      "Tax Group Code" := DtldCVLedgEntryBuf."Tax Group Code";
      "Use Tax" := DtldCVLedgEntryBuf."Use Tax";
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterCopyGLEntryFromGenJnlLine@6(VAR GLEntry@1000 : Record 17;VAR GenJournalLine@1001 : Record 81);
    BEGIN
    END;

    BEGIN
    END.
  }
}

