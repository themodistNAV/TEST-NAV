OBJECT Page 1305 Mini Sales Invoice Subform
{
  OBJECT-PROPERTIES
  {
    Date=09/09/18;
    Time=11:02:51 AM;
    Modified=Yes;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Lines;
               ENG=Lines];
    MultipleNewLines=Yes;
    LinksAllowed=No;
    SourceTable=Table37;
    DelayedInsert=Yes;
    SourceTableView=WHERE(Document Type=FILTER(Invoice));
    PageType=ListPart;
    AutoSplitKey=Yes;
    OnNewRecord=BEGIN
                  Type := Type::Item;
                END;

    OnInsertRecord=BEGIN
                     Type := Type::Item;
                   END;

    OnDeleteRecord=BEGIN
                     DELETE;
                     MiniDocumentTotals.CalculateSalesHeaderTotals(TotalSalesHeader,VATAmount,Rec);
                     UpdatePage;
                   END;

    OnAfterGetCurrRecord=VAR
                           SalesLine@1000 : Record 37;
                         BEGIN
                           MiniDocumentTotals.CalculateSalesHeaderTotals(TotalSalesHeader,VATAmount,Rec);
                           UpdateEditableOnRow;

                           SalesLine.SETRANGE("Document Type","Document Type");
                           SalesLine.SETRANGE("Document No.","Document No.");
                           InvDiscAmountEditable := SalesLine.FINDFIRST AND CurrPage.EDITABLE;
                         END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1900206204;1 ;Action    ;
                      Name=InsertExtText;
                      AccessByPermission=TableData 279=R;
                      CaptionML=[ENU=Insert &Ext. Texts;
                                 ENG=Insert &Ext. Texts];
                      ToolTipML=[ENU=Insert the extended item description that is set up for the item on the sales document line.;
                                 ENG=Insert the extended item description that is set up for the item on the sales document line.];
                      Image=Text;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 InsertExtendedText(TRUE);
                               END;
                                }
      { 1904522204;1 ;Action    ;
                      Name=Dimensions;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 ENG=Dimensions];
                      ToolTipML=[ENU=View or edit the dimension sets that are set up for the combination of customer and item on the sales document line.;
                                 ENG=View or edit the dimension sets that are set up for the combination of customer and item on the sales document line.];
                      Image=Dimensions;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 ShowDimensions;
                               END;
                                }
      { 13      ;1   ;Action    ;
                      Name=DeferralSchedule;
                      CaptionML=[ENU=Deferral Schedule;
                                 ENG=Deferral Schedule];
                      Enabled="Deferral Code" <> '';
                      Image=PaymentPeriod;
                      OnAction=BEGIN
                                 TotalSalesHeader.GET("Document Type","Document No.");
                                 ShowDeferrals(TotalSalesHeader."Posting Date",TotalSalesHeader."Currency Code");
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 4   ;2   ;Field     ;
                CaptionML=[ENU=Item No.;
                           ENG=Item No.];
                ToolTipML=[ENU=Specifies the number of the product that you want to sell. The product can be either an inventory item or a service. Choose the field to select an item card that represents the item or service.;
                           ENG=Specifies the number of the product that you want to sell. The product can be either an inventory item or a service. Choose the field to select an item card that represents the item or service.];
                SourceExpr="No.";
                LookupPageID=Mini Item List;
                OnValidate=BEGIN
                             NoOnAfterValidate;
                             UpdateEditableOnRow;
                             UpdatePage;
                           END;

                ShowMandatory=TRUE }

    { 1170000000;2;Field  ;
                SourceExpr="Variant Code" }

    { 58  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies an item cross-reference number.;
                           ENG=Specifies an item cross-reference number.];
                SourceExpr="Cross-Reference No.";
                Visible=FALSE;
                OnValidate=BEGIN
                             CrossReferenceNoOnAfterValidat;
                           END;

                OnLookup=BEGIN
                           CrossReferenceNoLookUp;
                           InsertExtendedText(FALSE);
                         END;
                          }

    { 6   ;2   ;Field     ;
                CaptionML=[ENU=Description/Comment;
                           ENG=Description/Comment];
                ToolTipML=[ENU=Specifies the description of the product that you entered in the Item No. field. To add a message for the customer, enter text in the Description/Comment field on an empty line.;
                           ENG=Specifies the description of the product that you entered in the Item No. field. To add a message for the customer, enter text in the Description/Comment field on an empty line.];
                SourceExpr=Description;
                OnValidate=VAR
                             MiniLinesInstructionMgt@1000 : Codeunit 1320;
                           BEGIN
                             MiniLinesInstructionMgt.ShowCreateLineInstruction("No.");
                           END;
                            }

    { 8   ;2   ;Field     ;
                Width=8;
                ToolTipML=[ENU=Specifies how many units are being sold. This field affects the values in the Line Amount and Line Discount Amount fields and the Total fields at the bottom of the Lines FastTab.;
                           ENG=Specifies how many units are being sold. This field affects the values in the Line Amount and Line Discount Amount fields and the Total fields at the bottom of the Lines FastTab.];
                BlankZero=Yes;
                SourceExpr=Quantity;
                Enabled=RowEditable;
                Editable=RowEditable;
                OnValidate=BEGIN
                             UpdatePage;
                           END;

                ShowMandatory=TRUE }

    { 34  ;2   ;Field     ;
                Width=8;
                ToolTipML=[ENU=Specifies the unit of measure that is used to determine the value in the Unit Price field on the sales line. By default, the field is filled with the value in the Sales Unit of Measure field on the item card or the Base Unit of Measure field on the resource card.;
                           ENG=Specifies the unit of measure that is used to determine the value in the Unit Price field on the sales line. By default, the field is filled with the value in the Sales Unit of Measure field on the item card or the Base Unit of Measure field on the resource card.];
                SourceExpr="Unit of Measure Code";
                Enabled=RowEditable;
                Editable=RowEditable;
                OnValidate=BEGIN
                             UpdatePage;
                           END;
                            }

    { 12  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the price for one unit on the sales line. By default, the field is filled with the value in the Unit Price field on the item or resource card.;
                           ENG=Specifies the price for one unit on the sales line. By default, the field is filled with the value in the Unit Price field on the item or resource card.];
                BlankZero=Yes;
                SourceExpr="Unit Price";
                Enabled=RowEditable;
                Editable=RowEditable;
                OnValidate=BEGIN
                             UpdatePage;
                           END;

                ShowMandatory=TRUE }

    { 16  ;2   ;Field     ;
                Width=8;
                ToolTipML=[ENU=Contains the line discount percentage that is valid for the item quantity on the line.;
                           ENG=Contains the line discount percentage that is valid for the item quantity on the line.];
                BlankZero=Yes;
                SourceExpr="Line Discount %";
                Enabled=RowEditable;
                Editable=RowEditable;
                OnValidate=BEGIN
                             UpdatePage;
                           END;
                            }

    { 40  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the amount of the discount that will be given on the invoice line. The program uses the Line Discount %, Quantity and Unit Price tables to calculate the amount.;
                           ENG=Specifies the amount of the discount that will be given on the invoice line. The program uses the Line Discount %, Quantity and Unit Price tables to calculate the amount.];
                SourceExpr="Line Discount Amount";
                Visible=FALSE;
                Enabled=RowEditable;
                Editable=false;
                OnValidate=BEGIN
                             UpdatePage;
                           END;
                            }

    { 42  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies whether the invoice line is included when the invoice discount is calculated.;
                           ENG=Specifies whether the invoice line is included when the invoice discount is calculated.];
                BlankZero=Yes;
                SourceExpr="Allow Invoice Disc.";
                Visible=FALSE;
                Enabled=RowEditable;
                Editable=RowEditable;
                OnValidate=BEGIN
                             UpdatePage;
                           END;
                            }

    { 64  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the amount of the sales line, calculated as the quantity times the unit price minus any percentage value in the Line Discount % field. If the Prices Including VAT check box on the customer card is selected, the amount includes VAT.;
                           ENG=Specifies the amount of the sales line, calculated as the quantity times the unit price minus any percentage value in the Line Discount % field. If the Prices Including VAT check box on the customer card is selected, the amount includes VAT.];
                BlankZero=Yes;
                SourceExpr="Line Amount";
                Enabled=RowEditable;
                Editable=RowEditable;
                OnValidate=BEGIN
                             UpdatePage;
                           END;
                            }

    { 80  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the invoice discount amount that is calculated on the line if you click Actions, point to Functions, and then click Calculate Invoice Discount. If you have placed a check mark in the Prices Including VAT field, the amount displayed include VATs.;
                           ENG=Specifies the invoice discount amount that is calculated on the line if you click Actions, point to Functions, and then click Calculate Invoice Discount. If you have placed a check mark in the Prices Including VAT field, the amount displayed include VATs.];
                SourceExpr="Inv. Discount Amount";
                Visible=FALSE;
                Enabled=RowEditable;
                Editable=RowEditable;
                OnValidate=BEGIN
                             UpdatePage;
                           END;
                            }

    { 5   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the job that the sales line is linked to. The field is filled in automatically by the program and cannot be changed.;
                           ENG=Specifies the number of the job that the sales line is linked to. The field is filled in automatically by the program and cannot be changed.];
                SourceExpr="Job No." }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the job task that the sales line is linked to. The field is filled in automatically by the program and cannot be changed.;
                           ENG=Specifies the number of the job task that the sales line is linked to. The field is filled in automatically by the program and cannot be changed.];
                SourceExpr="Job Task No." }

    { 9   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the entry number of the job planning line that the sales line is linked to. The field is filled in automatically by the program and cannot be changed.;
                           ENG=Specifies the entry number of the job planning line that the sales line is linked to. The field is filled in automatically by the program and cannot be changed.];
                SourceExpr="Job Contract Entry No.";
                Visible=FALSE }

    { 11  ;2   ;Field     ;
                SourceExpr="Deferral Code";
                TableRelation="Deferral Template"."Deferral Code" }

    { 103 ;1   ;Group     ;
                GroupType=Group }

    { 106 ;2   ;Group     ;
                GroupType=Group }

    { 107 ;3   ;Field     ;
                Name=Invoice Discount Amount;
                CaptionML=[ENU=Invoice Discount Amount;
                           ENG=Invoice Discount Amount];
                ToolTipML=[ENU=Specifies a discount amount that is deducted from the value in the Total Incl. VAT field. You can enter or change the amount manually. If you have set up invoice discounts, the specified percentage is shown in the Invoice Discount % field if the criteria are met. The calculated discount amount is then inserted in the Invoice Discount Amount field.;
                           ENG=Specifies a discount amount that is deducted from the value in the Total Incl. VAT field. You can enter or change the amount manually. If you have set up invoice discounts, the specified percentage is shown in the Invoice Discount % field if the criteria are met. The calculated discount amount is then inserted in the Invoice Discount Amount field.];
                SourceExpr=TotalSalesHeader."Invoice Discount Amount";
                AutoFormatType=1;
                AutoFormatExpr=TotalSalesHeader."Currency Code";
                Editable=InvDiscAmountEditable;
                OnValidate=VAR
                             SalesHeader@1000 : Record 36;
                           BEGIN
                             SalesHeader.GET("Document Type","Document No.");
                             MiniSalesCalcDiscByType.ApplyInvDiscBasedOnAmt(TotalSalesHeader."Invoice Discount Amount",SalesHeader);
                             CurrPage.UPDATE;
                           END;
                            }

    { 108 ;3   ;Field     ;
                Name=Cust. Invoice Disc. Pct.;
                CaptionML=[ENU=Customer Invoice Discount %;
                           ENG=Customer Invoice Discount %];
                ToolTipML=[ENU=Specifies a discount percentage that is granted if the criteria are met that you have set up for invoice discounts. The calculated discount amount is inserted in the Invoice Discount Amount field, but you can change it manually.;
                           ENG=Specifies a discount percentage that is granted if the criteria are met that you have set up for invoice discounts. The calculated discount amount is inserted in the Invoice Discount Amount field, but you can change it manually.];
                DecimalPlaces=0:1;
                SourceExpr=MiniSalesCalcDiscByType.GetCustInvoiceDiscountPct(Rec);
                Visible=TRUE;
                Editable=FALSE }

    { 131 ;2   ;Group     ;
                GroupType=Group }

    { 7   ;3   ;Field     ;
                Name=Total Amount Excl. VAT;
                DrillDown=No;
                CaptionML=[ENU=Total Amount Excl. VAT;
                           ENG=Total Amount Excl. VAT];
                ToolTipML=[ENU=Specifies the sum of the value in the Line Amount Excl. VAT field on all lines in the document minus any discount amount in the Invoice Discount Amount field. Note that amounts on document lines are shown with or without VAT depending on what you selected in the Prices Including VAT field on the customer or vendor card.;
                           ENG=Specifies the sum of the value in the Line Amount Excl. VAT field on all lines in the document minus any discount amount in the Invoice Discount Amount field. Note that amounts on document lines are shown with or without VAT depending on what you selected in the Prices Including VAT field on the customer or vendor card.];
                SourceExpr=TotalSalesHeader.Amount;
                AutoFormatType=1;
                AutoFormatExpr=TotalSalesHeader."Currency Code";
                CaptionClass=MiniDocumentTotals.GetTotalExclVATCaption(TotalSalesHeader."Currency Code");
                Editable=FALSE }

    { 2   ;3   ;Field     ;
                Name=Total VAT Amount;
                CaptionML=[ENU=Total VAT;
                           ENG=Total VAT];
                ToolTipML=[ENU=Specifies the sum of VAT amounts on all lines in the document. Note that amounts on document lines are shown with or without VAT depending on what you selected in the Prices Including VAT field on the customer or vendor card.;
                           ENG=Specifies the sum of VAT amounts on all lines in the document. Note that amounts on document lines are shown with or without VAT depending on what you selected in the Prices Including VAT field on the customer or vendor card.];
                SourceExpr=VATAmount;
                AutoFormatType=1;
                AutoFormatExpr=TotalSalesHeader."Currency Code";
                CaptionClass=MiniDocumentTotals.GetTotalVATCaption(TotalSalesHeader."Currency Code");
                Editable=FALSE }

    { 3   ;3   ;Field     ;
                Name=Total Amount Incl. VAT;
                CaptionML=[ENU=Total Amount Incl. VAT;
                           ENG=Total Amount Incl. VAT];
                ToolTipML=[ENU=Specifies the sum of the value in the Line Amount Incl. VAT field on all lines in the document minus any discount amount in the Invoice Discount Amount field. Note that amounts on document lines are shown with or without VAT depending on what you selected in the Prices Including VAT field on the customer or vendor card.;
                           ENG=Specifies the sum of the value in the Line Amount Incl. VAT field on all lines in the document minus any discount amount in the Invoice Discount Amount field. Note that amounts on document lines are shown with or without VAT depending on what you selected in the Prices Including VAT field on the customer or vendor card.];
                SourceExpr=TotalSalesHeader."Amount Including VAT";
                AutoFormatType=1;
                AutoFormatExpr=TotalSalesHeader."Currency Code";
                CaptionClass=MiniDocumentTotals.GetTotalInclVATCaption(TotalSalesHeader."Currency Code");
                Editable=FALSE;
                Style=Strong;
                StyleExpr=TRUE }

  }
  CODE
  {
    VAR
      TotalSalesHeader@1000 : Record 36;
      TransferExtendedText@1003 : Codeunit 378;
      MiniSalesCalcDiscByType@1001 : Codeunit 1300;
      MiniDocumentTotals@1002 : Codeunit 1301;
      VATAmount@1004 : Decimal;
      RowEditable@1005 : Boolean;
      JobRowEditable@1006 : Boolean;
      InvDiscAmountEditable@1007 : Boolean;

    LOCAL PROCEDURE InsertExtendedText@7(Unconditionally@1000 : Boolean);
    BEGIN
      IF TransferExtendedText.SalesCheckIfAnyExtText(Rec,Unconditionally) THEN BEGIN
        CurrPage.SAVERECORD;
        COMMIT;
        TransferExtendedText.InsertSalesExtText(Rec);
      END;
      IF TransferExtendedText.MakeUpdate THEN
        UpdatePage;
    END;

    LOCAL PROCEDURE UpdatePage@12();
    VAR
      SalesHeader@1001 : Record 36;
    BEGIN
      CurrPage.UPDATE;
      SalesHeader.GET("Document Type","Document No.");
      MiniSalesCalcDiscByType.ApplyDefaultInvoiceDiscount(TotalSalesHeader."Invoice Discount Amount",SalesHeader);
    END;

    LOCAL PROCEDURE NoOnAfterValidate@19066594();
    BEGIN
      InsertExtendedText(FALSE);
      TESTFIELD(Type,Type::Item);
    END;

    LOCAL PROCEDURE CrossReferenceNoOnAfterValidat@19048248();
    BEGIN
      InsertExtendedText(FALSE);
    END;

    LOCAL PROCEDURE UpdateEditableOnRow@5();
    BEGIN
      JobRowEditable := "Job No." = '';
      RowEditable := ("No." <> '') AND JobRowEditable;
    END;

    BEGIN
    END.
  }
}

