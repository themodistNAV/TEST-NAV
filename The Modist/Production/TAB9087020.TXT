OBJECT Table 9087020 Buying Sheet Header
{
  OBJECT-PROPERTIES
  {
    Date=05/01/17;
    Time=12:36:58 PM;
    Modified=Yes;
    Version List=NS2016.16,M0026,M0027,M0028,M0029,M0030,M0032,M0033;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               nSembleSetup.VerifyAndGet();
               IF (Rec."No." = '') THEN
                 NoSeriesManagement.InitSeries(nSembleSetup.GetBuyingSheetNos(), xRec."No. Series Code", 0D, Rec."No.", Rec."No. Series Code");
               IF (nSembleSetup."Inbound Location Code" <> '') THEN
                 Rec.VALIDATE("Location Code", nSembleSetup."Inbound Location Code");
             END;

    OnDelete=VAR
               "--- NS.L ---"@1000000001 : Integer;
               lReqWkshSummaryLineTmp@1000000000 : TEMPORARY Record 9087021;
             BEGIN
               BuyingStagingHeader.RESET();
               BuyingStagingHeader.SETCURRENTKEY("Buying Sheet No.");
               BuyingStagingHeader.SETRANGE("Buying Sheet No.", Rec."No.");
               IF (BuyingStagingHeader.FINDFIRST()) THEN
               BEGIN
                 BuyingStagingHeader.VALIDATE("Buying Sheet No.", '');
                 BuyingStagingHeader.VALIDATE(Status, BuyingStagingHeader.Status::Outstanding);
                 BuyingStagingHeader.MODIFY(TRUE);
               END;

               BuyingSheetSummaryLine.RESET();
               BuyingSheetSummaryLine.SETRANGE("Buying Sheet No.", Rec."No.");
               BuyingSheetSummaryLine.DELETEALL(TRUE);
             END;

    CaptionML=[ENU=Buying Sheet Header;
               ENG=Buying Sheet Header];
    LookupPageID=Page9087055;
    DrillDownPageID=Page9087055;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;CaptionML=[ENU=No.;
                                                              ENG=No.];
                                                   NotBlank=Yes }
    { 10  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              ENG=Description] }
    { 20  ;   ;No. Series Code     ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series Code;
                                                              ENG=No. Series Code];
                                                   Editable=No }
    { 30  ;   ;Season Code         ;Code20        ;TableRelation=Season;
                                                   OnValidate=BEGIN
                                                                IF (Rec."Season Code" <> xRec."Season Code") THEN
                                                                BEGIN
                                                                  CheckStatusOpen();
                                                                  Rec.VALIDATE("Sub-Season Code", '');
                                                                  UpdateLines(Rec.FIELDNO("Season Code"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Season Code;
                                                              ENG=Season Code] }
    { 31  ;   ;Sub-Season Code     ;Code20        ;TableRelation=Sub-Season.Code WHERE (Season Code=FIELD(Season Code));
                                                   OnValidate=BEGIN
                                                                IF (Rec."Sub-Season Code" <> xRec."Sub-Season Code") THEN
                                                                BEGIN
                                                                  CheckStatusOpen();
                                                                  UpdateLines(Rec.FIELDNO("Sub-Season Code"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Sub-Season Code;
                                                              ENG=Sub-Season Code] }
    { 50  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   OnValidate=VAR
                                                                lCurrencyExchangeRate@1000000000 : Record 330;
                                                                lCurrencyFactor@1000000001 : Decimal;
                                                              BEGIN
                                                                IF (Rec."Currency Code" <> xRec."Currency Code") THEN
                                                                BEGIN
                                                                  CheckStatusOpen();
                                                                  lCurrencyFactor := lCurrencyExchangeRate.ExchangeRate(WORKDATE(), Rec."Currency Code");
                                                                  IF (lCurrencyFactor = 0) THEN
                                                                    lCurrencyFactor := 1;
                                                                  Rec.VALIDATE("Currency Factor", lCurrencyFactor);
                                                                  UpdateLines(Rec.FIELDNO("Currency Code"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Currency Code;
                                                              ENG=Currency Code] }
    { 51  ;   ;Currency Factor     ;Decimal       ;OnValidate=BEGIN
                                                                IF (Rec."Currency Factor" <> xRec."Currency Factor") THEN
                                                                BEGIN
                                                                  CheckStatusOpen();
                                                                  UpdateLines(Rec.FIELDNO("Currency Factor"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Currency Factor;
                                                              ENG=Currency Factor];
                                                   DecimalPlaces=0:4;
                                                   MinValue=0;
                                                   Editable=No }
    { 60  ;   ;Vendor No.          ;Code20        ;TableRelation=Vendor;
                                                   OnValidate=VAR
                                                                lVendor@1000000000 : Record 23;
                                                              BEGIN
                                                                IF (Rec."Vendor No." <> xRec."Vendor No.") THEN
                                                                BEGIN
                                                                  CheckStatusOpen();
                                                                  lVendor.GET(Rec."Vendor No.");
                                                                  IF ("Currency Code" = '') THEN          //DOC OP9031 CC
                                                                    Rec.VALIDATE("Currency Code", lVendor."Currency Code");
                                                                  IF ("Shipment Method Code" = '') THEN   //DOC OP9031 CC
                                                                    Rec.VALIDATE("Shipment Method Code", lVendor."Shipment Method Code");
                                                                  Rec.VALIDATE("Location Code", lVendor."Location Code");
                                                                  //DOC M0029 DD 18/10/16 ++
                                                                  IF ("Shipping Region Code" = '') THEN   //DOC OP9031 CC
                                                                    Rec.VALIDATE("Shipping Region Code", lVendor."Shipping Region Code");
                                                                  //DOC M0029 DD 18/10/16 --

                                                                  UpdateLines(Rec.FIELDNO("Vendor No."));
                                                                END;
                                                                CALCFIELDS("Vendor Name");
                                                              END;

                                                   CaptionML=[ENU=Vendor No.;
                                                              ENG=Vendor No.] }
    { 61  ;   ;Vendor Name         ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Vendor.Name WHERE (No.=FIELD(Vendor No.)));
                                                   CaptionML=[ENU=Vendor Name;
                                                              ENG=Vendor Name];
                                                   Editable=No }
    { 90  ;   ;Freight Amount (LCY);Decimal       ;OnValidate=BEGIN
                                                                IF (Rec."Freight Amount (LCY)" <> xRec."Freight Amount (LCY)") THEN
                                                                BEGIN
                                                                  CheckStatusOpen();
                                                                  AllocateOverhead();
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Freight Amount (LCY);
                                                              ENG=Freight Amount (LCY)] }
    { 91  ;   ;Duty Amount (LCY)   ;Decimal       ;OnValidate=BEGIN
                                                                IF (Rec."Duty Amount (LCY)" <> xRec."Duty Amount (LCY)") THEN
                                                                BEGIN
                                                                  AllocateOverhead();
                                                                  CheckStatusOpen();
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Duty Amount (LCY);
                                                              ENG=Duty Amount (LCY)] }
    { 98  ;   ;Overhead Amount (LCY);Decimal      ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Buying Sheet Line"."Overhead Amount (LCY)" WHERE (Buying Sheet No.=FIELD(No.),
                                                                                                                      Style No.=FIELD(FILTER(Style Filter)),
                                                                                                                      Item No.=FIELD(FILTER(Item Filter))));
                                                   CaptionML=[ENU=Overhead Amount (LCY);
                                                              ENG=Overhead Amount (LCY)];
                                                   Editable=No }
    { 100 ;   ;Quantity (Base)     ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Buying Sheet Line"."Quantity (Base)" WHERE (Buying Sheet No.=FIELD(No.)));
                                                   CaptionML=[ENU=Quantity (Base);
                                                              ENG=Quantity (Base)];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 110 ;   ;Status              ;Option        ;InitValue=Open;
                                                   CaptionML=[ENU=Status;
                                                              ENG=Status];
                                                   OptionCaptionML=[ENU=" ,Open,Pending Approval,Released";
                                                                    ENG=" ,Open,Pending Approval,Released"];
                                                   OptionString=[ ,Open,Pending Approval,Released] }
    { 120 ;   ;Cost Amount         ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Buying Sheet Line"."Cost Amount" WHERE (Buying Sheet No.=FIELD(No.)));
                                                   CaptionML=[ENU=Cost Amount;
                                                              ENG=Cost Amount];
                                                   Editable=No }
    { 121 ;   ;Cost Amount (LCY)   ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Buying Sheet Line"."Cost Amount (LCY)" WHERE (Buying Sheet No.=FIELD(No.),
                                                                                                                  Style No.=FIELD(FILTER(Style Filter)),
                                                                                                                  Item No.=FIELD(FILTER(Item Filter))));
                                                   CaptionML=[ENU=Cost Amount (LCY);
                                                              ENG=Cost Amount (LCY)];
                                                   Editable=No }
    { 129 ;   ;Landed Amount (LCY) ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Buying Sheet Line"."Landed Amount (LCY)" WHERE (Buying Sheet No.=FIELD(No.),
                                                                                                                    Style No.=FIELD(FILTER(Style Filter)),
                                                                                                                    Item No.=FIELD(FILTER(Item Filter))));
                                                   CaptionML=[ENU=Landed Amount (LCY);
                                                              ENG=Landed Amount (LCY)];
                                                   Editable=No }
    { 130 ;   ;Sales Amount (LCY)  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Buying Sheet Line"."Sales Amount (LCY)" WHERE (Buying Sheet No.=FIELD(No.),
                                                                                                                   Style No.=FIELD(FILTER(Style Filter)),
                                                                                                                   Item No.=FIELD(FILTER(Item Filter))));
                                                   CaptionML=[ENU=Sales Amount (LCY);
                                                              ENG=Sales Amount (LCY)];
                                                   Editable=No }
    { 140 ;   ;Mark-up             ;Decimal       ;OnValidate=BEGIN
                                                                IF (Rec."Mark-up" <> xRec."Mark-up") THEN
                                                                BEGIN
                                                                  CheckStatusOpen();
                                                                  UpdateLines(Rec.FIELDNO("Mark-up"));
                                                                  UpdateVendor(Rec.FIELDNO("Mark-up"));  //DOC OP9031 M0031
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Mark-up;
                                                              ENG=Mark-up] }
    { 150 ;   ;Shipment Method Code;Code20        ;TableRelation="Shipment Method";
                                                   CaptionML=[ENU=Shipment Method Code;
                                                              ENG=Shipment Method Code] }
    { 160 ;   ;Discount %          ;Decimal       ;OnValidate=BEGIN
                                                                IF (Rec."Discount %" <> xRec."Discount %") THEN
                                                                BEGIN
                                                                  CheckStatusOpen();
                                                                  UpdateLines(Rec.FIELDNO("Discount %"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Discount %;
                                                              ENG=Discount %];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 180 ;   ;Location Code       ;Code10        ;TableRelation=Location WHERE (Use As In-Transit=CONST(No));
                                                   OnValidate=BEGIN
                                                                IF (Rec."Location Code" <> xRec."Location Code") THEN
                                                                BEGIN
                                                                  CheckStatusOpen();
                                                                  UpdateLines(Rec.FIELDNO("Location Code"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Location Code;
                                                              ENG=Location Code] }
    { 190 ;   ;No. of Archived Versions;Integer   ;FieldClass=FlowField;
                                                   CalcFormula=Count("Buying Sheet Arch. Header" WHERE (No.=FIELD(No.)));
                                                   CaptionML=[ENU=No. of Archived Versions;
                                                              ENG=No. of Archived Versions];
                                                   Editable=No }
    { 200 ;   ;Order Date          ;Date          ;OnValidate=BEGIN
                                                                IF (Rec."Order Date" <> xRec."Order Date") THEN
                                                                BEGIN
                                                                  CheckStatusOpen();
                                                                  UpdateLines(Rec.FIELDNO("Order Date"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Order Date;
                                                              ENG=Order Date] }
    { 201 ;   ;Document Date       ;Date          ;OnValidate=BEGIN
                                                                IF (Rec."Document Date" <> xRec."Document Date") THEN
                                                                BEGIN
                                                                  CheckStatusOpen();
                                                                  UpdateLines(Rec.FIELDNO("Document Date"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Document Date;
                                                              ENG=Document Date] }
    { 220 ;   ;Reference No.       ;Code20        ;CaptionML=[ENU=Reference No.;
                                                              ENG=Reference No.] }
    { 230 ;   ;No. of Summary Lines;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Buying Sheet Summary Line" WHERE (Buying Sheet No.=FIELD(No.)));
                                                   CaptionML=[ENU=No. of Summary Lines;
                                                              ENG=No. of Summary Lines];
                                                   Editable=No }
    { 231 ;   ;No. of Lines        ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Buying Sheet Line" WHERE (Buying Sheet No.=FIELD(No.)));
                                                   CaptionML=[ENU=No. of Lines;
                                                              ENG=No. of Lines];
                                                   Editable=No }
    { 240 ;   ;Lead Time Calculation;DateFormula  ;OnValidate=BEGIN
                                                                IF (Rec."Lead Time Calculation" <> xRec."Lead Time Calculation") THEN
                                                                BEGIN
                                                                  CheckStatusOpen();
                                                                  UpdateLines(Rec.FIELDNO("Lead Time Calculation"));
                                                                END;
                                                              END;

                                                   AccessByPermission=TableData 120=R;
                                                   CaptionML=[ENU=Lead Time Calculation;
                                                              ENG=Lead Time Calculation] }
    { 250 ;   ;Style Filter        ;Code20        ;FieldClass=FlowFilter;
                                                   TableRelation=Style;
                                                   CaptionML=[ENU=Style Filter;
                                                              ENG=Style Filter] }
    { 251 ;   ;Item Filter         ;Code20        ;FieldClass=FlowFilter;
                                                   TableRelation=Item;
                                                   CaptionML=[ENU=Item Filter;
                                                              ENG=Item Filter] }
    { 1000;   ;Created By          ;Code50        ;OnLookup=BEGIN
                                                              TnpToolkit.UserLookup(Rec."Created By", FALSE);
                                                            END;

                                                   CaptionML=[ENU=Created By;
                                                              ENG=Created By] }
    { 1001;   ;Created Date Time   ;DateTime      ;CaptionML=[ENU=Created Date Time;
                                                              ENG=Created Date Time] }
    { 1002;   ;Modified By         ;Code50        ;OnLookup=BEGIN
                                                              TnpToolkit.UserLookup(Rec."Modified By", FALSE);
                                                            END;

                                                   CaptionML=[ENU=Modified By;
                                                              ENG=Modified By] }
    { 1003;   ;Modified Date Time  ;DateTime      ;CaptionML=[ENU=Modified Date Time;
                                                              ENG=Modified Date Time] }
    { 50610;  ;Payment Terms Code  ;Code10        ;TableRelation="Payment Terms";
                                                   CaptionML=[ENU=Payment Terms Code;
                                                              ENG=Payment Terms Code];
                                                   Description=M0026 DD 13/10/16 }
    { 50620;  ;Deposit %           ;Decimal       ;Description=M0027 DD 18/10/16 }
    { 50630;  ;Shipment Window     ;Option        ;OptionCaptionML=[ENU=Ex-Factory,Delivered;
                                                                    ENG=Ex-Factory,Delivered];
                                                   OptionString=Ex-Factory,Delivered;
                                                   Description=M0028 DD 18/10/16 }
    { 50640;  ;Shipping Region Code;Code20        ;TableRelation="Shipping Region";
                                                   Description=M0029 DD 18/10/2016 }
    { 50650;  ;Shipment Date       ;Date          ;Description=M0032 DD 18/10/2016 }
    { 50660;  ;Cancellation Date   ;Date          ;Description=M0033 DD 18/10/2016 }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Reference No.                            }
    {    ;Vendor No.,Reference No.                 }
    {    ;Season Code,Sub-Season Code              }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      nSembleSetup@1000000002 : Record 9087000;
      BuyingStagingHeader@1000000005 : Record 9087016;
      BuyingSheetHeader@1000000007 : Record 9087020;
      BuyingSheetSummaryLine@1000000000 : Record 9087021;
      BuyingSheetLine@1000000001 : Record 9087022;
      NoSeriesManagement@1000000006 : Codeunit 396;
      TnpToolkit@1000000004 : Codeunit 9062230;

    PROCEDURE NoAssistEdit@2() : Boolean;
    VAR
      lResult@1000000000 : Boolean;
    BEGIN
      //DOC NS2015.1 - Assist edit for "No." field

      nSembleSetup.VerifyAndGet();
      nSembleSetup.TESTFIELD("Buying Staging Nos.");
      IF (NoSeriesManagement.SelectSeries(nSembleSetup.GetBuyingSheetNos(), xRec."No. Series Code", Rec."No. Series Code")) THEN
      BEGIN
        NoSeriesManagement.SetSeries(Rec."No.");
        lResult := TRUE;
      END;
      EXIT(lResult);
    END;

    PROCEDURE AllocateOverhead@1000000001();
    VAR
      lOverheadAmount@1000000002 : Decimal;
      lLineOverheadAmount@1000000000 : Decimal;
      lLineOverheadUnitCost@1000000001 : Decimal;
    BEGIN
      //DOC NS2015.1 - Allocating overhead

      nSembleSetup.VerifyAndGet();
      nSembleSetup.TESTFIELD("Allocate Buying Sheet Overhead");

      Rec.CALCFIELDS("Quantity (Base)", "Cost Amount (LCY)");
      lOverheadAmount := Rec."Freight Amount (LCY)" + Rec."Duty Amount (LCY)";

      BuyingSheetLine.RESET();
      BuyingSheetLine.SETRANGE("Buying Sheet No.", Rec."No.");
      IF (BuyingSheetLine.FINDSET(TRUE)) THEN
      REPEAT
        CASE (nSembleSetup."Allocate Buying Sheet Overhead") OF
          nSembleSetup."Allocate Buying Sheet Overhead"::"By Quantity":
            lLineOverheadAmount := lOverheadAmount * TnpToolkit.Divide(BuyingSheetLine."Quantity (Base)", Rec."Quantity (Base)");
          nSembleSetup."Allocate Buying Sheet Overhead"::"By Direct Cost":
            lLineOverheadAmount := lOverheadAmount * TnpToolkit.Divide(BuyingSheetLine."Cost Amount (LCY)", Rec."Cost Amount (LCY)");
        END;
        lLineOverheadUnitCost := TnpToolkit.Divide(lLineOverheadAmount, BuyingSheetLine.Quantity);
        IF (BuyingSheetLine."Overhead Unit Cost (LCY)" <> lLineOverheadUnitCost) THEN
        BEGIN
          BuyingSheetLine.VALIDATE("Overhead Unit Cost (LCY)", lLineOverheadUnitCost);
          BuyingSheetLine.MODIFY(TRUE);
        END;
      UNTIL (BuyingSheetLine.NEXT() = 0);
    END;

    PROCEDURE CheckStatusOpen@1000000002();
    BEGIN
      //DOC NS2015.1

      Rec.TESTFIELD(Status, Rec.Status::Open);
    END;

    PROCEDURE CheckStatusReleased@1000000003();
    BEGIN
      //DOC NS2015.1

      Rec.TESTFIELD(Status, Rec.Status::Released);
    END;

    PROCEDURE Archive@1000000012();
    VAR
      lBuyingSheetHeader@1000000000 : Record 9087020;
    BEGIN
      //DOC NS2015.1 - Archiving the sheet

      lBuyingSheetHeader := Rec;
      lBuyingSheetHeader.SETRECFILTER();
      REPORT.RUNMODAL(REPORT::"Archive Buying Sheet", TRUE, FALSE, lBuyingSheetHeader);
    END;

    PROCEDURE AddStylesToSummaryLines@1000000013();
    VAR
      lStyle@1000000000 : Record 9087012;
      lAddStylesToReqWksh@1000000001 : Report 9087008;
    BEGIN
      //DOC NS2015.3 - Adding styles to summary lines
      //  <- TRUE: Added, FALSE: Cancelled

      Rec.TESTFIELD("No.");
      Rec.TESTFIELD("Vendor No.");

      lStyle.RESET();
      lStyle.FILTERGROUP(2);
      lStyle.SETRANGE("Buying Sheet No.", Rec."No.");
      lStyle.SETRANGE(Blocked, FALSE);
      lStyle.FILTERGROUP(0);
      lStyle.SETRANGE("Vendor No.", Rec."Vendor No.");
      IF (Rec."Season Code" <> '') THEN
        lStyle.SETRANGE("Season Code", Rec."Season Code");

      REPORT.RUNMODAL(REPORT::"Add Styles to Buying Sheet", TRUE, FALSE, lStyle);
    END;

    PROCEDURE AddItemsToSummaryLines@1000000014();
    VAR
      lItem@1000000000 : Record 27;
    BEGIN
      //DOC NS2015.3 - Adding items to summary lines
      //  <- TRUE: Added, FALSE: Cancelled

      Rec.TESTFIELD("No.");
      Rec.TESTFIELD("Vendor No.");

      lItem.RESET();
      lItem.FILTERGROUP(2);
      lItem.SETRANGE("Buying Sheet No.", Rec."No.");
      lItem.SETRANGE(Blocked, FALSE);
      lItem.FILTERGROUP(0);
      lItem.SETRANGE("Vendor No.", Rec."Vendor No.");
      IF (Rec."Season Code" <> '') THEN
        lItem.SETRANGE("Season Code", Rec."Season Code");

      REPORT.RUNMODAL(REPORT::"Add Items to Buying Sheet", TRUE, FALSE, lItem);
    END;

    LOCAL PROCEDURE UpdateLines@1000000006(pFieldId@1000000000 : Integer);
    BEGIN
      //DOC NS2016.16 - Updating lines (summary lines and lines)
      //  -> pFieldId: Field ID the update has been called from

      UpdateBuyingSheetSummaryLines(pFieldId);
      UpdateBuyingSheetLines(pFieldId);
    END;

    LOCAL PROCEDURE UpdateBuyingSheetSummaryLines@1000000000(pFieldId@1000000000 : Integer);
    BEGIN
      //DOC NS2016.16 - Updating summary lines
      //  -> pFieldId: Field ID the update has been called from

      BuyingSheetSummaryLine.RESET();
      BuyingSheetSummaryLine.SETRANGE("Buying Sheet No.", Rec."No.");
      IF (BuyingSheetSummaryLine.FINDSET(TRUE)) THEN
      REPEAT
        CASE (pFieldId) OF
          Rec.FIELDNO("Vendor No."):
            BuyingSheetSummaryLine.VALIDATE("Vendor No.", Rec."Vendor No.");
          Rec.FIELDNO("Location Code"):
            BuyingSheetSummaryLine.VALIDATE("Location Code", Rec."Location Code");
          Rec.FIELDNO("Currency Code"):
            BuyingSheetSummaryLine.VALIDATE("Currency Code", Rec."Currency Code");
          Rec.FIELDNO("Currency Factor"):
            BuyingSheetSummaryLine.VALIDATE("Currency Factor", Rec."Currency Factor");
          Rec.FIELDNO("Document Date"):
            BuyingSheetSummaryLine.VALIDATE("Document Date", Rec."Document Date");
          Rec.FIELDNO("Order Date"):
            BuyingSheetSummaryLine.VALIDATE("Order Date", Rec."Order Date");
          Rec.FIELDNO("Discount %"):
            BuyingSheetSummaryLine.VALIDATE("Discount %", Rec."Discount %");
          Rec.FIELDNO("Mark-up"):
            BuyingSheetSummaryLine.VALIDATE("Mark-up", Rec."Mark-up");
          Rec.FIELDNO("Season Code"):
            BuyingSheetSummaryLine.VALIDATE("Season Code", Rec."Season Code");
          Rec.FIELDNO("Sub-Season Code"):
            BuyingSheetSummaryLine.VALIDATE("Sub-Season Code", Rec."Sub-Season Code");
          Rec.FIELDNO("Lead Time Calculation"):
            BuyingSheetSummaryLine.VALIDATE("Lead Time Calculation", Rec."Lead Time Calculation");
        END;
        BuyingSheetSummaryLine.MODIFY(TRUE);
      UNTIL (BuyingSheetSummaryLine.NEXT() = 0);
    END;

    LOCAL PROCEDURE UpdateBuyingSheetLines@1000000004(pFieldId@1000000000 : Integer);
    BEGIN
      //DOC NS2016.16 - Updating lines
      //  -> pFieldId: Field ID the update has been called from

      BuyingSheetLine.RESET();
      BuyingSheetLine.SETCURRENTKEY("Buying Sheet No.", "Buying Sheet Summary Line No.");
      BuyingSheetLine.SETRANGE("Buying Sheet No.", Rec."No.");
      BuyingSheetLine.SETRANGE("Buying Sheet Summary Line No.", 0);
      IF (BuyingSheetLine.FINDSET(TRUE)) THEN
      REPEAT
        CASE (pFieldId) OF
          Rec.FIELDNO("Vendor No."):
            BuyingSheetLine.VALIDATE("Vendor No.", Rec."Vendor No.");
          Rec.FIELDNO("Location Code"):
            BuyingSheetLine.VALIDATE("Location Code", Rec."Location Code");
          Rec.FIELDNO("Currency Code"):
            BuyingSheetLine.VALIDATE("Currency Code", Rec."Currency Code");
          Rec.FIELDNO("Currency Factor"):
            BuyingSheetLine.VALIDATE("Currency Factor", Rec."Currency Factor");
          Rec.FIELDNO("Document Date"):
            BuyingSheetLine.VALIDATE("Document Date", Rec."Document Date");
          Rec.FIELDNO("Order Date"):
            BuyingSheetLine.VALIDATE("Order Date", Rec."Order Date");
          Rec.FIELDNO("Discount %"):
            BuyingSheetLine.VALIDATE("Discount %", Rec."Discount %");
          Rec.FIELDNO("Mark-up"):
            BuyingSheetLine.VALIDATE("Mark-up", Rec."Mark-up");
          Rec.FIELDNO("Season Code"):
            BuyingSheetLine.VALIDATE("Season Code", Rec."Season Code");
          Rec.FIELDNO("Sub-Season Code"):
            BuyingSheetLine.VALIDATE("Sub-Season Code", Rec."Sub-Season Code");
          Rec.FIELDNO("Lead Time Calculation"):
            BuyingSheetLine.VALIDATE("Lead Time Calculation", Rec."Lead Time Calculation");
        END;
        BuyingSheetLine.MODIFY(TRUE);
      UNTIL (BuyingSheetLine.NEXT() = 0);
    END;

    LOCAL PROCEDURE UpdateVendor@1000000007(pFieldId@1000000000 : Integer);
    VAR
      Vendor@1000000001 : Record 23;
    BEGIN
      //DOC OP9031 M0031 Created

      CASE (pFieldId) OF
        Vendor.FIELDNO(Vendor."Mark Up %"):
          Vendor.VALIDATE("Mark Up %",Rec."Mark-up");
      ELSE
        EXIT;
      END;

      Vendor.MODIFY(TRUE);
    END;

    PROCEDURE ShowVendor@1000000011();
    VAR
      lVendor@1000000000 : Record 23;
    BEGIN
      //DOC NS2015.1 - Showing the vendor

      Rec.TESTFIELD("Vendor No.");
      lVendor.GET(Rec."Vendor No.");
      PAGE.RUN(PAGE::"Vendor Card", lVendor);
    END;

    PROCEDURE ShowPurchaseOrders@1000000010();
    VAR
      lPurchaseHeader@1000000000 : Record 38;
      eNoPurchaseOrders@1000000001 : TextConst 'ENU=There are no purchase orders linked to buying sheet "%1".;ENG=There are no purchase orders linked to buying sheet "%1".';
    BEGIN
      //DOC NS2015.1 - Showing purchase order(s)

      lPurchaseHeader.RESET();
      lPurchaseHeader.SETRANGE("Document Type", lPurchaseHeader."Document Type"::Order);
      lPurchaseHeader.SETRANGE("Buying Sheet No.", Rec."No.");
      CASE (lPurchaseHeader.COUNT) OF
        0:
          ERROR(eNoPurchaseOrders, Rec."No.");
        1:
          BEGIN
            lPurchaseHeader.FINDFIRST();
            PAGE.RUN(PAGE::"Purchase Order", lPurchaseHeader);
          END;
        ELSE
          PAGE.RUN(PAGE::"Purchase Order List", lPurchaseHeader);
      END;
    END;

    PROCEDURE ShowSummaryLines@1000000008();
    BEGIN
      //DOC NS2016.16 - Showing summary lines

      BuyingSheetSummaryLine.RESET();
      BuyingSheetSummaryLine.SETRANGE("Buying Sheet No.", Rec."No.");
      PAGE.RUN(0, BuyingSheetSummaryLine);
    END;

    PROCEDURE ShowLines@1000000005();
    BEGIN
      //DOC NS2016.16 - Showing lines

      BuyingSheetLine.RESET();
      BuyingSheetLine.SETRANGE("Buying Sheet No.", Rec."No.");
      PAGE.RUN(0, BuyingSheetLine);
    END;

    PROCEDURE ShowArchives@1000000009();
    VAR
      lBuyingSheetArchHeader@1000000000 : Record 9087023;
    BEGIN
      //DOC NS2016.16 - Showing archives

      lBuyingSheetArchHeader.RESET();
      lBuyingSheetArchHeader.SETRANGE("No.", Rec."No.");
      PAGE.RUN(0, lBuyingSheetArchHeader);
    END;

    BEGIN
    {
      //DOC NS2015.1  JH 09/01/2014 - nSemble fields added, amendments, "Replenishment" added to template type
      //DOC NS2015.1  AZ 14/01/2014 - nSemble fields and modifications
      //DOC NS2015.1  JH 20/02/2014 - Amendments
      //DOC NS2015.1  JH 30/05/2014 - Consignment modifications
      //DOC NS2015.3  JH 31/07/2014 - Bugfixing
      //DOC NS2015.3  JH 23/09/2014 - Updating direct cost (summary lines)
      //DOC NS2016.16 JH 06/09/2016 - nSemble 2016
      //DOC M0026 DD 13/10/16 - Designed "Payment Terms Code" field.
      //DOC M0027 DD 18/10/16 - Designed "Deposit %" field.
      //DOC M0028 DD 18/10/16 - Designed 'Shipment Window' field.
      //DOC M0029 DD 18/10/16 - Designed "Shipping Region Code" field.
      //DOC M0032 DD 18/10/16 - Designed "PO Ship Date" field.
      //DOC M0033 DD 18/10/16 - Designed "PO Cancel Date" field.
      //DOC M0030 DD 19/10/16 - Get Shipment Method from Vendor.
      //DOC OP9031 M0032 PCM 06/12/16 - Renamed "PO Ship Date" field to "Shipment Date".
      //DOC OP9031 M0033 PCM 06/12/16 - Renamed "PO Cancel Date" field to "Cancellation Date".
      //DOC OP9031 CC    PCM 05/01/17 - Prevent defaulting values from Vendor if they already exist from sheet
    }
    END.
  }
}

