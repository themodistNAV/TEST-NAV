OBJECT Table 9062258 Enhanced Workflow
{
  OBJECT-PROPERTIES
  {
    Date=14/07/16;
    Time=12:39:42 PM;
    Version List=NA2016.15;
  }
  PROPERTIES
  {
    Permissions=TableData 17=rimd;
    OnInsert=VAR
               TmpCode@1000000000 : Code[10];
               SysB@1000000003 : Record 9062230;
             BEGIN
               IF NOT SysB.GetBoolean('ADVANCED_WORKFLOWS') THEN ERROR(Text001);

               WFlowSetup.GET;
               IF "No." = '' THEN BEGIN
                 WFlowSetup.TESTFIELD("Workflow Nos.");
                 NoSeriesMgt.InitSeries(WFlowSetup."Workflow Nos.",xRec."No. Series",0D,"No.","No. Series");
               END;

               DefaultValues;
             END;

    OnDelete=VAR
               lWorkflowResponse@1000000001 : Record 9062259;
               lWorkflowResponseOption@1000000004 : Record 9062260;
               lWorkflowContact@1000000000 : Record 9062264;
               lWorkflowHoliday@1000000002 : Record 9062263;
               Criteria@9062229 : Record 9062626;
               StandardWorkflow@9062230 : Record 1501;
             BEGIN
               //Rec.CALCFIELDS("Workflow Status Changes", "Workflow Activity Lines", "Workflow Notifications");
               //DOC NA2015.1

               Rec.TESTFIELD("Workflow Activity Lines", 0);
               Rec.TESTFIELD("Workflow Notifications", 0);

               lWorkflowResponse.RESET();
               lWorkflowResponse.SETRANGE("Workflow No.", Rec."No.");
               lWorkflowResponse.DELETEALL(TRUE);

               lWorkflowResponseOption.RESET();
               lWorkflowResponseOption.SETRANGE("Workflow No.", Rec."No.");
               lWorkflowResponseOption.DELETEALL(TRUE);

               lWorkflowHoliday.RESET;
               lWorkflowHoliday.SETRANGE("Workflow No.", Rec."No.");
               lWorkflowHoliday.DELETEALL(TRUE);

               lWorkflowContact.RESET;
               lWorkflowContact.SETRANGE("Workflow No.", Rec."No.");
               lWorkflowContact.DELETEALL(TRUE);

               //DOC NA2016.10 PC >>>
               IF Criteria.GET("Record Criteria ID") THEN
                 Criteria.DELETE(TRUE);
               //DOC NA2016.10 PC <<<

               //DOC NA2016.11 PC >>>
               IF StandardWorkflow.GET("Standard Workflow Code") THEN BEGIN
                 EnhancedWorkflowStdUtils.DeleteStandardWorkflow(StandardWorkflow);
               END;
               //DOC NA2016.11 PC <<<
             END;

    OnRename=VAR
               StandardWorkflow@9062230 : Record 1501;
             BEGIN
               //DOC NA2016.11 PC >>>
               IF ("Standard Workflow Code" = "No.") AND StandardWorkflow.GET("Standard Workflow Code") THEN BEGIN
                 EnhancedWorkflowStdUtils.RenameStandardWorkflow(StandardWorkflow,"No.");
                 "Standard Workflow Code" := StandardWorkflow.Code;
               END;
               //DOC NA2016.11 PC <<<
             END;

    CaptionML=[ENU=Enhanced Workflow;
               ENG=Enhanced Workflow];
    LookupPageID=Page9062283;
    DrillDownPageID=Page9062285;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;OnValidate=VAR
                                                                WFlowSetup@1000000000 : Record 9062229;
                                                              BEGIN
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  WFlowSetup.GET;
                                                                  WFlowSetup.TESTFIELD("Workflow Nos.");
                                                                  NoSeriesMgt.TestManual(WFlowSetup."Workflow Nos.");
                                                                END;
                                                                TNPToolkit.CodeToName(Rec."No.", Rec.Description);
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              ENG=No.] }
    { 2   ;   ;Workflow Type       ;Option        ;CaptionML=[ENU=Workflow Type;
                                                              ENG=Workflow Type];
                                                   OptionCaptionML=[ENU=" ,Approval";
                                                                    ENG=" ,Approval"];
                                                   OptionString=[ ,Approval] }
    { 3   ;   ;Enabled             ;Boolean       ;InitValue=Yes;
                                                   OnValidate=VAR
                                                                StandardWorkflow@9062230 : Record 1501;
                                                              BEGIN
                                                                IF Enabled THEN AddDefaultContact;

                                                                //DOC NA2016.11 PC >>>
                                                                IF (Rec.Enabled <> xRec.Enabled) THEN BEGIN
                                                                  IF StandardWorkflow.GET("No.") THEN BEGIN
                                                                    StandardWorkflow.VALIDATE(Enabled,Enabled);
                                                                    EnhancedWorkflowStdUtils.ModifyStandardWorkflow(StandardWorkflow);
                                                                  END;
                                                                END;
                                                                //DOC NA2016.11 PC <<<
                                                              END;

                                                   CaptionML=[ENU=Enabled;
                                                              ENG=Enabled] }
    { 5   ;   ;Description         ;Text100       ;OnValidate=VAR
                                                                StandardWorkflow@9062230 : Record 1501;
                                                              BEGIN
                                                                //DOC NA2016.11 PC >>>
                                                                IF StandardWorkflow.GET("No.") THEN BEGIN
                                                                  StandardWorkflow.VALIDATE(Description,Description);
                                                                  EnhancedWorkflowStdUtils.ModifyStandardWorkflow(StandardWorkflow);
                                                                END;
                                                                //DOC NA2016.11 PC <<<
                                                              END;

                                                   CaptionML=[ENU=Description;
                                                              ENG=Description] }
    { 6   ;   ;Where Used          ;Text100       ;CaptionML=[ENU=Where Used;
                                                              ENG=Where Used] }
    { 7   ;   ;Information Text    ;Text250       ;CaptionML=[ENU=Information Text;
                                                              ENG=Information Text] }
    { 8   ;   ;Instruction Text    ;Text250       ;CaptionML=[ENU=Instruction Text;
                                                              ENG=Instruction Text] }
    { 17  ;   ;Send E-Mail Notification;Boolean   ;CaptionML=[ENU=Send E-Mail Notification;
                                                              ENG=Send E-Mail Notification] }
    { 18  ;   ;Send Popup Notification;Boolean    ;CaptionML=[ENU=Send Popup Notification;
                                                              ENG=Send Popup Notification] }
    { 20  ;   ;Default Action Text ;Text250       ;CaptionML=[ENU=Default Action Text;
                                                              ENG=Default Action Text] }
    { 45  ;   ;Include Weekends    ;Boolean       ;CaptionML=[ENU=Include Weekends;
                                                              ENG=Include Weekends] }
    { 46  ;   ;Work Day Starts     ;Time          ;CaptionML=[ENU=Work Day Starts;
                                                              ENG=Work Day Starts] }
    { 47  ;   ;Work Day Ends       ;Time          ;CaptionML=[ENU=Work Day Ends;
                                                              ENG=Work Day Ends] }
    { 51  ;   ;Embed Link 1 in Email;Boolean      ;CaptionML=[ENU=Embed Link 1 in Email;
                                                              ENG=Embed Link 1 in Email] }
    { 52  ;   ;Embed Link 2 in Email;Boolean      ;CaptionML=[ENU=Embed Link 2 in Email;
                                                              ENG=Embed Link 2 in Email] }
    { 53  ;   ;Embed Link 3 in Email;Boolean      ;CaptionML=[ENU=Embed Link 3 in Email;
                                                              ENG=Embed Link 3 in Email] }
    { 54  ;   ;Attachment          ;BLOB          ;CaptionML=[ENU=Attachment;
                                                              ENG=Attachment] }
    { 55  ;   ;Attachment File Name;Text150       ;CaptionML=[ENU=Attachment File Name;
                                                              ENG=Attachment File Name] }
    { 56  ;   ;Attached File       ;Boolean       ;CaptionML=[ENU=Attached File;
                                                              ENG=Attached File];
                                                   Editable=No }
    { 57  ;   ;Enable Email Response;Boolean      ;OnValidate=VAR
                                                                AutoMsgType@1000000000 : Record 9062274;
                                                              BEGIN
                                                                IF "Enable Email Response" THEN BEGIN
                                                                  Rec.TESTFIELD("Notification Only", FALSE); //DOC NA2015.6
                                                                  IF NOT AutoMsgType.GET('WFlowResponse') THEN ERROR(Text005);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Enable Email Response;
                                                              ENG=Enable Email Response] }
    { 59  ;   ;Required for Approval;Boolean      ;CaptionML=[ENU=Required for Approval;
                                                              ENG=Required for Approval] }
    { 60  ;   ;Dont Show in Factbox;Boolean       ;CaptionML=[ENU=Don't Show in Factbox;
                                                              ENG=Don't Show in Factbox];
                                                   Description=NA2016.14 }
    { 80  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   OnValidate=VAR
                                                                WFlowSetup@1000000000 : Record 9062229;
                                                              BEGIN
                                                                //DOC RN2903  -
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  WFlowSetup.GET;
                                                                  WFlowSetup.TESTFIELD("Workflow Nos.");
                                                                  NoSeriesMgt.TestManual(WFlowSetup."Workflow Nos.");
                                                                END;
                                                                //DOC RN2903 +
                                                              END;

                                                   CaptionML=[ENU=No. Series;
                                                              ENG=No. Series];
                                                   Editable=No }
    { 100 ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Date Filter;
                                                              ENG=Date Filter] }
    { 101 ;   ;Contact Filter      ;Code20        ;FieldClass=FlowFilter;
                                                   TableRelation=Contact;
                                                   CaptionML=[ENU=Contact Filter;
                                                              ENG=Contact Filter] }
    { 140 ;   ;One Workflow Only   ;Boolean       ;CaptionML=[ENU=One Workflow Only;
                                                              ENG=One Workflow Only] }
    { 206 ;   ;Link 1 Caption      ;Text100       ;CaptionML=[ENU=Link 1 Caption;
                                                              ENG=Link 1 Caption] }
    { 208 ;   ;Link 2 Caption      ;Text100       ;CaptionML=[ENU=Link 2 Caption;
                                                              ENG=Link 2 Caption] }
    { 210 ;   ;Link 3 Caption      ;Text100       ;CaptionML=[ENU=Link 3 Caption;
                                                              ENG=Link 3 Caption] }
    { 250 ;   ;Record Criteria ID  ;Integer       ;OnValidate=VAR
                                                                Criteria@9062229 : Record 9062626;
                                                              BEGIN
                                                              END;

                                                   CaptionML=[ENU=Record Criteria ID;
                                                              ENG=Record Criteria ID];
                                                   Editable=No }
    { 251 ;   ;Record Criteria Description;Text250;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Criteria.Description WHERE (ID=FIELD(Record Criteria ID)));
                                                   OnLookup=BEGIN
                                                              ShowRecordCriteria;
                                                            END;

                                                   CaptionML=[ENU=Record Criteria Description;
                                                              ENG=Record Criteria Description];
                                                   Editable=No }
    { 300 ;   ;Approval Status Code;Code20        ;CaptionML=[ENU=Approval Status Code;
                                                              ENG=Approval Status Code] }
    { 400 ;   ;On Start Set Field No.;Integer     ;OnValidate=BEGIN
                                                                ObjectFieldToolkit.ValidateFieldIdOld(Rec."Table ID", Rec."On Start Set Field Type", Rec."On Start Set Field No.");
                                                                Rec."On Start Set Field Name" := ObjectFieldToolkit.GetFieldNameOld(Rec."Table ID", Rec."On Start Set Field Type", Rec."On Start Set Field No.");
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF (ObjectFieldToolkit.FieldLookupOld(Rec."Table ID", Rec."On Start Set Field Type", Rec."On Start Set Field No.")) THEN
                                                                Rec.VALIDATE("On Start Set Field No.");
                                                            END;

                                                   CaptionML=[ENU=On Start Set Field No.;
                                                              ENG=On Start Set Field No.] }
    { 401 ;   ;On Start Set Field Value Type;Option;
                                                   OnValidate=BEGIN
                                                                IF "On Start Set Field Value Type" <> "On Start Set Field Value Type"::Hardcoded THEN
                                                                  "On Start Set Field Value" := '';
                                                              END;

                                                   CaptionML=[ENU=On Start Set Field Value Type;
                                                              ENG=On Start Set Field Value Type];
                                                   OptionCaptionML=[ENU=Hardcoded,Today's Date,Current User ID,Current Contact No.;
                                                                    ENG=Hardcoded,Today's Date,Current User ID,Current Contact No.];
                                                   OptionString=Hardcoded,Today's Date,Current User ID,Current Contact No. }
    { 402 ;   ;On Start Set Field Value;Text250   ;CaptionML=[ENU=On Start Set Field Value;
                                                              ENG=On Start Set Field Value] }
    { 403 ;   ;On Start Set Field Name;Text100    ;OnValidate=BEGIN
                                                                ObjectFieldToolkit.ValidateFieldNameOld(Rec."Table ID", Rec."On Start Set Field Type", Rec."On Start Set Field No.", Rec."On Start Set Field Name");
                                                                IF (Rec."On Start Set Field No." <> xRec."On Start Set Field No.") THEN
                                                                  Rec.VALIDATE("On Start Set Field No.");
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF (ObjectFieldToolkit.FieldLookupOld(Rec."Table ID", Rec."On Start Set Field Type", Rec."On Start Set Field No.")) THEN
                                                                Rec.VALIDATE("On Start Set Field No.");
                                                            END;

                                                   CaptionML=[ENU=On Start Set Field Name;
                                                              ENG=On Start Set Field Name] }
    { 404 ;   ;On Start Amount Field Type;Option  ;OnValidate=BEGIN
                                                                IF (Rec."On Start Amount Field Type" <> xRec."On Start Amount Field Type") THEN
                                                                  Rec.VALIDATE("On Start Amount Field No.", 0);
                                                              END;

                                                   CaptionML=[ENU=On Start Amount Field Type;
                                                              ENG=On Start Amount Field Type];
                                                   OptionCaptionML=[ENU=Field,Enhanced Field;
                                                                    ENG=Field,Enhanced Field];
                                                   OptionString=Field,Enhanced Field }
    { 405 ;   ;On Start Amount Field No.;Integer  ;OnValidate=BEGIN
                                                                ObjectFieldToolkit.ValidateFieldIdOld(Rec."Table ID", Rec."On Start Amount Field Type", Rec."On Start Amount Field No.");
                                                                Rec."On Start Amount Field Name" := ObjectFieldToolkit.GetFieldNameOld(Rec."Table ID", Rec."On Start Amount Field Type", Rec."On Start Amount Field No."); //DOC PC NA2015.15
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF (ObjectFieldToolkit.FieldLookupOld(Rec."Table ID", Rec."On Start Amount Field Type", Rec."On Start Amount Field No.")) THEN
                                                                Rec.VALIDATE("On Start Amount Field No.");
                                                            END;

                                                   CaptionML=[ENU=On Start Amount Field No.;
                                                              ENG=On Start Amount Field No.] }
    { 406 ;   ;On Start Amount Field Name;Text100 ;OnValidate=BEGIN
                                                                ObjectFieldToolkit.ValidateFieldNameOld(Rec."Table ID", Rec."On Start Amount Field Type", Rec."On Start Amount Field No.", Rec."On Start Amount Field Name");
                                                                IF (Rec."On Start Amount Field No." <> xRec."On Start Amount Field No.") THEN
                                                                  Rec.VALIDATE("On Start Amount Field No.");
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF (ObjectFieldToolkit.FieldLookupOld(Rec."Table ID", Rec."On Start Amount Field Type", Rec."On Start Amount Field No.")) THEN
                                                                Rec.VALIDATE("On Start Amount Field No.");
                                                            END;

                                                   CaptionML=[ENU=On Start Amount Field Name;
                                                              ENG=On Start Amount Field Name] }
    { 407 ;   ;On Start Routing Field Type;Option ;OnValidate=BEGIN
                                                                IF (Rec."On Start Routing Field Type" <> xRec."On Start Routing Field Type") THEN
                                                                  Rec.VALIDATE("On Start Routing Field No.", 0);
                                                              END;

                                                   CaptionML=[ENU=On Start Routing Field Type;
                                                              ENG=On Start Routing Field Type];
                                                   OptionCaptionML=[ENU=Field,Enhanced Field;
                                                                    ENG=Field,Enhanced Field];
                                                   OptionString=Field,Enhanced Field }
    { 408 ;   ;On Start Routing Field No.;Integer ;OnValidate=BEGIN
                                                                ObjectFieldToolkit.ValidateFieldIdOld(Rec."Table ID", Rec."On Start Routing Field Type", Rec."On Start Routing Field No.");
                                                                Rec."On Start Routing Field Name" := ObjectFieldToolkit.GetFieldNameOld(Rec."Table ID", Rec."On Start Routing Field Type", Rec."On Start Routing Field No.");
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF (ObjectFieldToolkit.FieldLookupOld(Rec."Table ID", Rec."On Start Routing Field Type", Rec."On Start Routing Field No.")) THEN
                                                                Rec.VALIDATE("On Start Routing Field No.");
                                                            END;

                                                   CaptionML=[ENU=On Start Routing Field No.;
                                                              ENG=On Start Routing Field No.] }
    { 409 ;   ;On Start Routing Field Name;Text100;OnValidate=BEGIN
                                                                ObjectFieldToolkit.ValidateFieldNameOld(Rec."Table ID", Rec."On Start Routing Field Type", Rec."On Start Routing Field No.", Rec."On Start Routing Field Name");
                                                                IF (Rec."On Start Routing Field No." <> xRec."On Start Routing Field No.") THEN
                                                                  Rec.VALIDATE("On Start Routing Field No.");
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF (ObjectFieldToolkit.FieldLookupOld(Rec."Table ID", Rec."On Start Routing Field Type", Rec."On Start Routing Field No.")) THEN
                                                                Rec.VALIDATE("On Start Routing Field No.");
                                                            END;

                                                   CaptionML=[ENU=On Start Routing Field Name;
                                                              ENG=On Start Routing Field Name] }
    { 410 ;   ;On Start Release Record;Boolean    ;CaptionML=[ENU=On Start Release Record;
                                                              ENG=On Start Release Record] }
    { 411 ;   ;On Start InfoText Field Type;Option;OnValidate=BEGIN
                                                                IF (Rec."On Start InfoText Field Type" <> xRec."On Start InfoText Field Type") THEN
                                                                  Rec.VALIDATE("On Start InfoText Field No.", 0);
                                                              END;

                                                   CaptionML=[ENU=On Start InfoText Field Type;
                                                              ENG=On Start InfoText Field Type];
                                                   OptionCaptionML=[ENU=Field,Enhanced Field,Concatenated Fields;
                                                                    ENG=Field,Enhanced Field,Concatenated Fields];
                                                   OptionString=Field,Enhanced Field,Concatenated Fields }
    { 412 ;   ;On Start InfoText Field No.;Integer;OnValidate=BEGIN
                                                                ObjectFieldToolkit.ValidateFieldIdOld(Rec."Table ID", Rec."On Start InfoText Field Type", Rec."On Start InfoText Field No.");
                                                                Rec."On Start InfoText Field Name" := ObjectFieldToolkit.GetFieldNameOld(Rec."Table ID", Rec."On Start InfoText Field Type", Rec."On Start InfoText Field No.");
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF (ObjectFieldToolkit.FieldLookupOld(Rec."Table ID", Rec."On Start InfoText Field Type", Rec."On Start InfoText Field No.")) THEN
                                                                Rec.VALIDATE("On Start InfoText Field No.");
                                                            END;

                                                   CaptionML=[ENU=On Start InfoText Field No.;
                                                              ENG=On Start InfoText Field No.] }
    { 413 ;   ;On Start InfoText Field Name;Text100;
                                                   OnValidate=BEGIN
                                                                ObjectFieldToolkit.ValidateFieldNameOld(Rec."Table ID", Rec."On Start InfoText Field Type", Rec."On Start InfoText Field No.", Rec."On Start InfoText Field Name");
                                                                IF (Rec."On Start InfoText Field No." <> xRec."On Start InfoText Field No.") THEN
                                                                  Rec.VALIDATE("On Start InfoText Field No.");
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF (ObjectFieldToolkit.FieldLookupOld(Rec."Table ID", Rec."On Start InfoText Field Type", Rec."On Start InfoText Field No.")) THEN
                                                                Rec.VALIDATE("On Start InfoText Field No.");
                                                            END;

                                                   CaptionML=[ENU=On Start InfoText Field Name;
                                                              ENG=On Start InfoText Field Name] }
    { 414 ;   ;On Start Person Field Type;Option  ;OnValidate=BEGIN
                                                                IF (Rec."On Start Person Field Type" <> xRec."On Start Person Field Type") THEN
                                                                  Rec.VALIDATE("On Start Person Field No.", 0);
                                                              END;

                                                   CaptionML=[ENU=On Start Person Field Type;
                                                              ENG=On Start Person Field Type];
                                                   OptionCaptionML=[ENU=Field,Enhanced Field;
                                                                    ENG=Field,Enhanced Field];
                                                   OptionString=Field,Enhanced Field }
    { 415 ;   ;On Start Person Field No.;Integer  ;OnValidate=BEGIN
                                                                ObjectFieldToolkit.ValidateFieldIdOld(Rec."Table ID", Rec."On Start Person Field Type", Rec."On Start Person Field No.");
                                                                Rec."On Start Person Field Name" := ObjectFieldToolkit.GetFieldNameOld(Rec."Table ID", Rec."On Start Person Field Type", Rec."On Start Person Field No.");
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF (ObjectFieldToolkit.FieldLookupOld(Rec."Table ID", Rec."On Start Person Field Type", Rec."On Start Person Field No.")) THEN
                                                                Rec.VALIDATE("On Start Person Field No.");
                                                            END;

                                                   CaptionML=[ENU=On Start Person Field No.;
                                                              ENG=On Start Person Field No.] }
    { 416 ;   ;On Start Person Field Name;Text100 ;OnValidate=BEGIN
                                                                ObjectFieldToolkit.ValidateFieldNameOld(Rec."Table ID", Rec."On Start Person Field Type", Rec."On Start Person Field No.", Rec."On Start Person Field Name");
                                                                IF (Rec."On Start Person Field No." <> xRec."On Start Person Field No.") THEN
                                                                  Rec.VALIDATE("On Start Person Field No.");
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF (ObjectFieldToolkit.FieldLookupOld(Rec."Table ID", Rec."On Start Person Field Type", Rec."On Start Person Field No.")) THEN
                                                                Rec.VALIDATE("On Start Person Field No.");
                                                            END;

                                                   CaptionML=[ENU=On Start Person Field Name;
                                                              ENG=On Start Person Field Name] }
    { 417 ;   ;On Start InfoText Concat Def.;Text250;
                                                   OnValidate=VAR
                                                                RecRef@1000000000 : RecordRef;
                                                                eNoInfoTextConcatDefWithoutPerson@1000000001 : TextConst 'ENU=You cannot set the "%1" field unless the "%2" field is set to ''Concatenated Fields''.;ENG=You cannot set the "%1" field unless the "%2" field is set to ''Concatenated Fields''.';
                                                                eNoExampleWithoutTableId@1000000002 : TextConst 'ENU=Cannot show example as the "%1" field has not been set.;ENG=Cannot show example as the "%1" field has not been set.';
                                                                eNoExampleWithoutRecords@1000000003 : TextConst 'ENU=Cannot show example as there are no records in table "%1" (%2);ENG=Cannot show example as there are no records in table "%1" (%2)';
                                                                eExampleBasedOnRecord@1000000004 : TextConst 'ENU=Example based on record:\%1\\%2;ENG=Example based on record:\%1\\%2';
                                                              BEGIN
                                                                IF "On Start InfoText Concat Def." <> '' THEN BEGIN
                                                                  IF "On Start InfoText Field Type" <> "On Start InfoText Field Type"::"Concatenated Fields" THEN BEGIN
                                                                    MESSAGE(eNoInfoTextConcatDefWithoutPerson, Rec.FIELDCAPTION("On Start InfoText Concat Def."), Rec.FIELDCAPTION("On Start Person Field Type"));
                                                                    "On Start InfoText Concat Def." := '';
                                                                    EXIT;
                                                                  END;

                                                                  IF "Table ID" = 0 THEN BEGIN
                                                                    MESSAGE(eNoExampleWithoutTableId, Rec.FIELDCAPTION("Table ID"));
                                                                    EXIT;
                                                                  END;

                                                                  RecRef.OPEN("Table ID");
                                                                  IF NOT RecRef.FINDFIRST THEN BEGIN
                                                                    MESSAGE(eNoExampleWithoutRecords, ObjectFieldToolkit.GetTableName(Rec."Table ID"), Rec."Table ID");
                                                                    EXIT;
                                                                  END;

                                                                  MESSAGE(eExampleBasedOnRecord, RecRef.GETPOSITION, TNPUtils.ConcatenateFieldValues("On Start InfoText Concat Def.",RecRef));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=On Start InfoText Concat Def.;
                                                              ENG=On Start InfoText Concat Def.] }
    { 418 ;   ;On Start Set Field Type;Option     ;OnValidate=BEGIN
                                                                IF (Rec."On Start Set Field Type" <> xRec."On Start Set Field Type") THEN
                                                                  Rec.VALIDATE("On Start Set Field No.", 0);
                                                              END;

                                                   CaptionML=[ENU=On Start Set Field No.;
                                                              ENG=On Start Set Field No.];
                                                   OptionCaptionML=[ENU=Field,Enhanced Field;
                                                                    ENG=Field,Enhanced Field];
                                                   OptionString=Field,Enhanced Field;
                                                   Description=NA2015.1 }
    { 419 ;   ;On Start Restrict Record;Boolean   ;CaptionML=[ENU=On Start Restrict Record;
                                                              ENG=On Start Restrict Record];
                                                   Description=NA2016.10 }
    { 500 ;   ;Standard Workflow Code;Code20      ;CaptionML=[ENU=Standard Workflow Code;
                                                              ENG=Standard Workflow Code];
                                                   Description=NA2016.11 }
    { 600 ;   ;Activity to Pass    ;Option        ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Activity to Pass;
                                                              ENG=Activity to Pass];
                                                   OptionCaptionML=[ENU=" ,Create,Cancel";
                                                                    ENG=" ,Create,Cancel"];
                                                   OptionString=[ ,Create,Cancel] }
    { 1000;   ;Checklist Type      ;Code20        ;TableRelation="Checklist Template Header"."Checklist Type" WHERE (Related Table No.=FIELD(Table ID));
                                                   OnValidate=VAR
                                                                WorkflowMgmt@1000000000 : Codeunit 9062258;
                                                              BEGIN
                                                                IF ("Checklist Type" <> '') AND (xRec."Checklist Type" <> "Checklist Type") THEN
                                                                  WorkflowMgmt.Checklist_MakeChecklistWorkflow(Rec);
                                                              END;

                                                   CaptionML=[ENU=Checklist Type;
                                                              ENG=Checklist Type] }
    { 1001;   ;Checklist Description;Text100      ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Checklist Template Header".Description WHERE (Checklist Type=FIELD(Checklist Type)));
                                                   CaptionML=[ENU=Checklist Description;
                                                              ENG=Checklist Description];
                                                   Editable=No }
    { 1100;   ;Questionnaire Code  ;Code20        ;TableRelation="Questionnaire Template".Code WHERE (Related Table No.=FIELD(Table ID));
                                                   CaptionML=[ENU=Questionnaire Code;
                                                              ENG=Questionnaire Code] }
    { 1101;   ;Questionnaire Description;Text100  ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Questionnaire Template".Description WHERE (Code=FIELD(Questionnaire Code)));
                                                   CaptionML=[ENU=Questionnaire Description;
                                                              ENG=Questionnaire Description];
                                                   Editable=No }
    { 2000;   ;Insert Logic Codeunit ID;Integer   ;TableRelation=Object.ID WHERE (Type=CONST(Codeunit));
                                                   OnValidate=BEGIN
                                                                Rec.CALCFIELDS("Insert Logic Codeunit Name");
                                                              END;

                                                   CaptionML=[ENU=Insert Logic Codeunit ID;
                                                              ENG=Insert Logic Codeunit ID] }
    { 2001;   ;Insert Logic Codeunit Name;Text30  ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Object.Name WHERE (Type=CONST(Codeunit),
                                                                                         ID=FIELD(Insert Logic Codeunit ID)));
                                                   CaptionML=[ENU=Insert Logic Codeunit Name;
                                                              ENG=Insert Logic Codeunit Name];
                                                   Editable=No }
    { 2003;   ;Resp. Logic Codeunit ID;Integer    ;TableRelation=Object.ID WHERE (Type=CONST(Codeunit));
                                                   CaptionML=[ENU=Resp. Logic Codeunit ID;
                                                              ENG=Resp. Logic Codeunit ID] }
    { 2004;   ;Resp. Logic Codeunit Name;Text30   ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Object.Name WHERE (Type=CONST(Codeunit),
                                                                                         ID=FIELD(Resp. Logic Codeunit ID)));
                                                   CaptionML=[ENU=Resp. Logic Codeunit Name;
                                                              ENG=Resp. Logic Codeunit Name];
                                                   Editable=No }
    { 4996;   ;Page Name           ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Object.Name WHERE (Type=CONST(Page),
                                                                                         ID=FIELD(Page ID)));
                                                   CaptionML=[ENU=Page Name;
                                                              ENG=Page Name];
                                                   Editable=No }
    { 4997;   ;Table Name          ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Object.Name WHERE (Type=CONST(Table),
                                                                                         ID=FIELD(Table ID)));
                                                   CaptionML=[ENU=Table Name;
                                                              ENG=Table Name];
                                                   Editable=No }
    { 4998;   ;Page ID             ;Integer       ;TableRelation=Object.ID WHERE (Type=CONST(Page));
                                                   OnValidate=BEGIN
                                                                Rec.CALCFIELDS("Page Name");
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF (ObjectFieldToolkit.PageLookup(Rec."Page ID")) THEN
                                                                Rec.VALIDATE("Page ID");
                                                            END;

                                                   CaptionML=[ENU=Page ID;
                                                              ENG=Page ID];
                                                   BlankZero=Yes }
    { 4999;   ;Table ID            ;Integer       ;TableRelation="Table Information"."Table No.";
                                                   OnValidate=VAR
                                                                lWorkflowResponse@9062230 : Record 9062259;
                                                              BEGIN
                                                                IF (Rec."Table ID" <> xRec."Table ID") THEN
                                                                  IF (Rec."Table ID" <> 0) THEN
                                                                    Rec.VALIDATE("Page ID", TableManagement.GetCardPageId(Rec."Table ID", ''));
                                                                Rec.CALCFIELDS("Table Name");

                                                                //Update Table Id on related table
                                                                IF (Rec."Table ID" <> xRec."Table ID") THEN BEGIN

                                                                lWorkflowResponse.RESET();
                                                                lWorkflowResponse.SETRANGE("Workflow No.", Rec."No.");
                                                                lWorkflowResponse.MODIFYALL("Table ID",Rec."Table ID");


                                                                //Clear out all field no based on old field
                                                                VALIDATE("On Start Set Field No.",0);
                                                                VALIDATE("On Start Amount Field No.",0);
                                                                VALIDATE("On Start Routing Field No.",0);
                                                                VALIDATE("On Start InfoText Field No.",0);
                                                                VALIDATE("On Start Person Field No.",0);
                                                                VALIDATE("On Start InfoText Concat Def.",'');

                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF (ObjectFieldToolkit.TableLookup(Rec."Table ID")) THEN
                                                                Rec.VALIDATE("Table ID");
                                                            END;

                                                   CaptionML=[ENU=Table ID;
                                                              ENG=Table ID];
                                                   BlankZero=Yes }
    { 5000;   ;DB Event - On Insert;Boolean       ;CaptionML=[ENU=DB Event - On Insert;
                                                              ENG=DB Event - On Insert] }
    { 5001;   ;DB Event - On Modify;Boolean       ;CaptionML=[ENU=DB Event - On Modify;
                                                              ENG=DB Event - On Modify] }
    { 6002;   ;Insert Function Code;Code10        ;TableRelation="Enhanced Workflow Function".Code WHERE (Type=CONST(Insert));
                                                   CaptionML=[ENU=Insert Function Code;
                                                              ENG=Insert Function Code] }
    { 6003;   ;Response Function Code;Code10      ;TableRelation="Enhanced Workflow Function".Code WHERE (Type=CONST(Response));
                                                   CaptionML=[ENU=Response Function Code;
                                                              ENG=Response Function Code] }
    { 6004;   ;Allow Override Next WFlow;Boolean  ;CaptionML=[ENU=Allow Override Next WFlow;
                                                              ENG=Allow Override Next WFlow] }
    { 6005;   ;Close if Seq. Answer is Neg.;Boolean;
                                                   InitValue=Yes;
                                                   CaptionML=[ENU=Close if Seq. Answer is Neg.;
                                                              ENG=Close if Seq. Answer is Neg.] }
    { 6007;   ;Group Decision Method;Code20       ;TableRelation="General Lookup".Code WHERE (Type=CONST(DECISIONMETHOD));
                                                   CaptionML=[ENU=Group Decision Method;
                                                              ENG=Group Decision Method] }
    { 6008;   ;Min. Responses Required;Integer    ;CaptionML=[ENU=Min. Responses Required;
                                                              ENG=Min. Responses Required] }
    { 6009;   ;All Responses Required;Boolean     ;CaptionML=[ENU=All Responses Required;
                                                              ENG=All Responses Required] }
    { 6010;   ;Email Record Links as Attach.;Boolean;
                                                   CaptionML=[ENU=Email Record Links as Attach.;
                                                              ENG=Email Record Links as Attach.] }
    { 6011;   ;Email HTML Template ;BLOB          ;CaptionML=[ENU=Email HTML Template;
                                                              ENG=Email HTML Template] }
    { 6012;   ;Workflow Grouping 1 ;Code20        ;TableRelation="General Lookup".Code WHERE (Type=CONST(WFLOWGROUP1));
                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=Workflow Grouping 1;
                                                              ENG=Workflow Grouping 1] }
    { 6013;   ;Workflow Grouping 2 ;Code20        ;TableRelation="General Lookup".Code WHERE (Type=CONST(WFLOWGROUP2));
                                                   CaptionML=[ENU=Workflow Grouping 2;
                                                              ENG=Workflow Grouping 2] }
    { 6014;   ;Split Decision Contact No.;Code20  ;TableRelation=Contact.No. WHERE (Type=CONST(Person));
                                                   CaptionML=[ENU=Split Decision Contact No.;
                                                              ENG=Split Decision Contact No.] }
    { 6015;   ;Is Hold Workflow    ;Boolean       ;CaptionML=[ENU=Is Hold Workflow;
                                                              ENG=Is Hold Workflow] }
    { 6016;   ;Est. Duration       ;Duration      ;CaptionML=[ENU=Est. Duration;
                                                              ENG=Est. Duration] }
    { 6017;   ;Auto Response       ;Boolean       ;CaptionML=[ENU=Auto Response;
                                                              ENG=Auto Response] }
    { 6018;   ;Primary Key 1 To Pass;Text250      ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=PagePart Link Prim. Key 1;
                                                              ENG=PagePart Link Prim. Key 1];
                                                   Description=for Quick Workflow Page Part }
    { 6019;   ;Primary Key 2 To Pass;Text250      ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=PagePart Link Prim. Key 2;
                                                              ENG=PagePart Link Prim. Key 2];
                                                   Description=for Quick Workflow Page Part }
    { 6020;   ;Primary Key 3 To Pass;Text250      ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=PagePart Link Prim. Key 3;
                                                              ENG=PagePart Link Prim. Key 3];
                                                   Description=for Quick Workflow Page Part }
    { 6021;   ;Primary Key 4 To Pass;Text250      ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=PagePart Link Prim. Key 4;
                                                              ENG=PagePart Link Prim. Key 4];
                                                   Description=for Quick Workflow Page Part }
    { 6022;   ;Information Text To Pass;Text250   ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Information Text To Pass;
                                                              ENG=Information Text To Pass] }
    { 6023;   ;Amount To Pass      ;Decimal       ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Amount To Pass;
                                                              ENG=Amount To Pass] }
    { 6024;   ;Routing Parameter To Pass;Code10   ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Routing Parameter To Pass;
                                                              ENG=Routing Parameter To Pass] }
    { 8000;   ;Jet Report ID       ;Integer       ;TableRelation="Jet Report Header";
                                                   OnValidate=BEGIN
                                                                IF (Rec."Jet Report ID" <> xRec."Jet Report ID") THEN
                                                                BEGIN
                                                                  Rec.VALIDATE("Jet Report Parameter 1", '');
                                                                  Rec.VALIDATE("Jet Report Parameter 2", '');
                                                                  Rec.VALIDATE("Jet Report Parameter 3", '');
                                                                END;
                                                                Rec.CALCFIELDS("Jet Report Description");
                                                              END;

                                                   CaptionML=[ENU=Jet Report ID;
                                                              ENG=Jet Report ID] }
    { 8001;   ;Jet Report Parameter 1;Text50      ;TableRelation="Jet Report Parameter".Name WHERE (Header ID=FIELD(Jet Report ID));
                                                   CaptionML=[ENU=Jet Report Parameter 1;
                                                              ENG=Jet Report Parameter 1] }
    { 8002;   ;Jet Report Parameter 2;Text50      ;TableRelation="Jet Report Parameter".Name WHERE (Header ID=FIELD(Jet Report ID));
                                                   CaptionML=[ENU=Jet Report Parameter 2;
                                                              ENG=Jet Report Parameter 2] }
    { 8003;   ;Jet Report Parameter 3;Text50      ;TableRelation="Jet Report Parameter".Name WHERE (Header ID=FIELD(Jet Report ID));
                                                   CaptionML=[ENU=Jet Report Parameter 3;
                                                              ENG=Jet Report Parameter 3] }
    { 8004;   ;Jet Report Description;Text100     ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Jet Report Header".Description WHERE (ID=FIELD(Jet Report ID)));
                                                   CaptionML=[ENU=Jet Report Description;
                                                              ENG=Jet Report Description];
                                                   Editable=No }
    { 8005;   ;Generate Jet Report ;Option        ;CaptionML=[ENU=Generate Jet Report;
                                                              ENG=Generate Jet Report];
                                                   OptionCaptionML=[ENU=Always,Only With Notification;
                                                                    ENG=Always,Only With Notification];
                                                   OptionString=Always,Only With Notification;
                                                   Description=NA2016.15 }
    { 8010;   ;Report ID           ;Integer       ;TableRelation=Object.ID WHERE (Type=CONST(Report));
                                                   OnValidate=BEGIN
                                                                Rec.CALCFIELDS("Report Name");
                                                              END;

                                                   CaptionML=[ENU=Report ID;
                                                              ENG=Report ID] }
    { 8011;   ;Report Name         ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Object.Name WHERE (Type=CONST(Report),
                                                                                         ID=FIELD(Report ID)));
                                                   CaptionML=[ENU=Report Name;
                                                              ENG=Report Name];
                                                   Editable=No }
    { 8100;   ;DOCS Entry ID to Send;Integer      ;TableRelation="Document Library";
                                                   CaptionML=[ENU=DOCS Entry ID to Send;
                                                              ENG=DOCS Entry ID to Send] }
    { 8101;   ;DOCS Entry Description;Text250     ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Document Library".Description WHERE (Entry No.=FIELD(DOCS Entry ID to Send)));
                                                   CaptionML=[ENU=DOCS Entry Description;
                                                              ENG=DOCS Entry Description];
                                                   Editable=No }
    { 8102;   ;Send FAttachments with Not.;Boolean;CaptionML=[ENU=Send FAttachments with Not.;
                                                              ENG=Send FAttachments with Not.] }
    { 8103;   ;FAttachment Type Filter;Text250    ;CaptionML=[ENU=FAttachment Type Filter;
                                                              ENG=FAttachment Type Filter] }
    { 8200;   ;Notification Only   ;Boolean       ;OnValidate=BEGIN
                                                                //DOC NA2015.6 >>
                                                                IF (Rec."Notification Only") THEN
                                                                  Rec.VALIDATE("Enable Email Response", FALSE);
                                                                //DOC NA2015.6 <<
                                                              END;

                                                   CaptionML=[ENU=Notification Only;
                                                              ENG=Notification Only] }
    { 8301;   ;Workflow Activity Lines;Integer    ;FieldClass=FlowField;
                                                   CalcFormula=Count("Enhanced Workflow Activity Ln." WHERE (Workflow No.=FIELD(No.)));
                                                   CaptionML=[ENU=Workflow Activity Lines;
                                                              ENG=Workflow Activity Lines];
                                                   Editable=No }
    { 8302;   ;Workflow Notifications;Integer     ;FieldClass=FlowField;
                                                   CalcFormula=Count("Enhanced Workflow Notification" WHERE (Workflow No.=FIELD(No.)));
                                                   CaptionML=[ENU=Workflow Notifications;
                                                              ENG=Workflow Notifications];
                                                   Editable=No }
    { 9000;   ;OnErr: WFlow Disabled;Option       ;CaptionML=[ENU=On Error: Workflow Type Disabled;
                                                              ENG=On Error: Workflow Type Disabled];
                                                   OptionCaptionML=[ENU=Do Nothing,Use Response,Error;
                                                                    ENG=Do Nothing,Use Response,Error];
                                                   OptionString=Do Nothing,Use Response,Error;
                                                   Description=NA2015.1 }
    { 9001;   ;OnErr: WFlow Disabled Resp.;Code20 ;TableRelation="Enhanced Workflow Response".Code WHERE (Workflow No.=FIELD(No.));
                                                   CaptionML=[ENU=On Error: Workflow System Disabled Response Code;
                                                              ENG=On Error: Workflow System Disabled Response Code];
                                                   Description=NA2015.1 }
    { 9002;   ;OnErr: WFlow Disabled Err. Msg;Text100;
                                                   CaptionML=[ENU=On Error: Workflow System Disabled Error Message;
                                                              ENG=On Error: Workflow System Disabled Error Message];
                                                   Description=NA2015.1 }
    { 9004;   ;OnErr: No Recipients;Option        ;CaptionML=[ENU=On Error: No Recipients Found;
                                                              ENG=On Error: No Recipients Found];
                                                   OptionCaptionML=[ENU=Do Nothing,Use Response,Error;
                                                                    ENG=Do Nothing,Use Response,Error];
                                                   OptionString=Do Nothing,Use Response,Error;
                                                   Description=NA2015.1 }
    { 9005;   ;OnErr: No Recipients Resp.;Code20  ;TableRelation="Enhanced Workflow Response".Code WHERE (Workflow No.=FIELD(No.));
                                                   CaptionML=[ENU=On Error: No Recipients Found Response Code;
                                                              ENG=On Error: No Recipients Found Response Code];
                                                   Description=NA2015.1 }
    { 9006;   ;OnErr: No Recipients Err. Msg;Text100;
                                                   CaptionML=[ENU=On Error: No Recipients Found Error Message;
                                                              ENG=On Error: No Recipients Found Error Message];
                                                   Description=NA2015.1 }
    { 9007;   ;Originator is Recipient Action;Option;
                                                   CaptionML=[ENU=Originator is Recipient Action;
                                                              ENG=Originator is Recipient Action];
                                                   OptionCaptionML=[ENU=Ask Anyway,Don't Ask,Answer Positive,Answer Negative;
                                                                    ENG=Ask Anyway,Don't Ask,Answer Positive,Answer Negative];
                                                   OptionString=Ask Anyway,Don't Ask,Answer Positive,Answer Negative }
    { 10000;  ;No. Open Workflows  ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Enhanced Workflow Activity Ln." WHERE (Workflow No.=FIELD(No.),
                                                                                                             Contact No.=FIELD(Contact No. Filter),
                                                                                                             Status=CONST(Open)));
                                                   CaptionML=[ENU=No. Open Workflows;
                                                              ENG=No. Open Workflows];
                                                   Editable=No }
    { 10001;  ;Contact No. Filter  ;Code20        ;FieldClass=FlowFilter;
                                                   TableRelation=Contact;
                                                   CaptionML=[ENU=Contact No. Filter;
                                                              ENG=Contact No. Filter] }
    { 10002;  ;DateTime Filter     ;DateTime      ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=DateTime Filter;
                                                              ENG=DateTime Filter] }
    { 10003;  ;No. Closed Workflows;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Enhanced Workflow Activity Ln." WHERE (Workflow No.=FIELD(No.),
                                                                                                             Contact No.=FIELD(Contact No. Filter),
                                                                                                             Status=CONST(Closed),
                                                                                                             Closed DateTime=FIELD(FILTER(DateTime Filter))));
                                                   CaptionML=[ENU=No. Closed Workflows;
                                                              ENG=No. Closed Workflows];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Standard Workflow Code                   }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      NoSeriesMgt@1000000000 : Codeunit 396;
      Text002@1000000002 : TextConst 'ENU=This will delete the associated WFlow activity & notification lines of this WFlow! Do you want to delete WFlow %1?;ENG=This will delete the associated WFlow activity & notification lines of this WFlow! Do you want to delete WFlow %1?';
      Text003@1000000001 : TextConst 'ENU=Delete stopped!;ENG=Delete stopped!';
      WFlowSetup@1000000003 : Record 9062229;
      Text004@1000000004 : TextConst 'ENU=Copy Successful.;ENG=Copy Successful.';
      "WFlow Response"@1000000005 : Record 9062259;
      Text005@1000000006 : TextConst 'ENU=Auto Message Type WFlowRESPONSE does not exist. This needs to be created to enable this feature;ENG=Auto Message Type WFlowRESPONSE does not exist. This needs to be created to enable this feature';
      Text001@1000000007 : TextConst 'ENU=As you have the TNL Workflow Light licence you are not able to create new Workflows. Please contact your account manager if you would like to upgrade.;ENG=As you have the TNL Workflow Light licence you are not able to create new Workflows. Please contact your account manager if you would like to upgrade.';
      TNPUtils@1000000008 : Codeunit 9062229;
      ObjectFieldToolkit@1000000009 : Codeunit 9062343;
      TableManagement@1000000010 : Codeunit 9062585;
      TNPToolkit@1000000011 : Codeunit 9062230;
      EnhancedWorkflowStdUtils@9062230 : Codeunit 9062614;

    PROCEDURE AssistEdit@2(OldWFlow@1000 : Record 9062258) : Boolean;
    VAR
      WFlow@1000000000 : Record 9062258;
    BEGIN
      WITH WFlow DO BEGIN
        WFlow := Rec;
        WFlowSetup.GET;
        WFlowSetup.TESTFIELD("Workflow Nos.");
        IF NoSeriesMgt.SelectSeries(WFlowSetup."Workflow Nos.",OldWFlow."No. Series","No. Series") THEN BEGIN
          NoSeriesMgt.SetSeries("No.");
          Rec := WFlow;
          EXIT(TRUE);
        END;
      END;
    END;

    PROCEDURE CopyWFlow@1000000000(WFlow@1000000000 : Record 9062258);
    VAR
      CopyToWFlow@1000000001 : Record 9062258;
      WFlowSetup@1000000002 : Record 9062229;
      NosMgt@1000000003 : Codeunit 396;
      WFlowResponse@1000000004 : Record 9062259;
      CopyToWFlowResponse@1000000005 : Record 9062259;
      NewWFlowNo@1000000006 : Code[20];
    BEGIN
      CLEAR(NewWFlowNo);

      IF WFlowSetup.GET THEN BEGIN
        CopyToWFlow.INIT;
        CopyToWFlow.TRANSFERFIELDS(WFlow);
        CopyToWFlow."No." := NosMgt.GetNextNo(WFlowSetup."Workflow Nos.", 0D,TRUE);
        NewWFlowNo := CopyToWFlow."No.";

        CopyToWFlow.INSERT;

        WFlowResponse.RESET;
        WFlowResponse.SETCURRENTKEY("Workflow No.",Code);
        WFlowResponse.SETRANGE("Workflow No.", WFlow."No.");
        IF WFlowResponse.FINDSET THEN REPEAT
          CopyToWFlowResponse.INIT;
          CopyToWFlowResponse.TRANSFERFIELDS(WFlowResponse);
          CopyToWFlowResponse."Workflow No." := NewWFlowNo;
          CopyToWFlowResponse.INSERT;
        UNTIL WFlowResponse.NEXT = 0;
        MESSAGE(Text004);
      END
    END;

    PROCEDURE DefaultValues@1000000001();
    VAR
      ContNo@1000000000 : Code[20];
      WFlowCont@1000000001 : Record 9062264;
    BEGIN
      WFlowSetup.GET();
      Rec.VALIDATE("One Workflow Only", TRUE);
      Rec.VALIDATE(Enabled, TRUE);
      Rec.VALIDATE("Group Decision Method", WFlowSetup."Group Decision Method");
      Rec.VALIDATE("Insert Logic Codeunit ID", WFlowSetup."Insert Logic Codeunit ID");
      Rec.VALIDATE("Resp. Logic Codeunit ID", WFlowSetup."Resp. Logic Codeunit ID");
      Rec.VALIDATE("Work Day Starts", WFlowSetup."Default Working Day Starts");
      Rec.VALIDATE("Work Day Ends", WFlowSetup."Default Working Day Ends");

      WFlowSetup.CALCFIELDS("Default Workflow HTML Template");
      Rec."Email HTML Template" := WFlowSetup."Default Workflow HTML Template";

      AddDefaultContact;
    END;

    PROCEDURE CheckIfInProgress@1000000002(pRaiseError@1000000000 : Boolean) : Boolean;
    VAR
      lWorkflowActivityLine@1000000004 : Record 9062266;
      lWorkflowNotification@1000000003 : Record 9062261;
      xWorkflowInProgress@1000000006 : TextConst 'ENU=Workflow "%1" is in progress (%2).;ENG=Workflow "%1" is in progress (%2).';
      lInProgress@1000000001 : Boolean;
      lInProgressText@1000000008 : Text[1024];
      xWorkflowActivityLineInProgress@1000000009 : TextConst 'ENU=%1 raised %2 for %3: %4;ENG=%1 raised %2 for %3: %4';
      xWorkflowNotificationInProgress@1000000010 : TextConst 'ENU=%1 sent %2 for %3 with subject: ''%4'';ENG=%1 sent %2 for %3 with subject: ''%4''';
    BEGIN
      //DOC NA2015.1 - Checking if the workflow is in progress
      //  -> pRaiseError: TRUE: Raise error, FALSE: Only return TRUE/FALSE
      //  <- TRUE: Workflow in progress, FALSE: Not

      lInProgress := FALSE;
      lInProgressText := '';

      // Checking workflow activity lines
      IF ( NOT (lInProgress)) THEN
      BEGIN
        lWorkflowActivityLine.RESET();
        lWorkflowActivityLine.SETCURRENTKEY("Workflow No.", Status);
        lWorkflowActivityLine.SETRANGE("Workflow No.", Rec."No.");
        lWorkflowActivityLine.SETRANGE(Status, lWorkflowActivityLine.Status::Open);
        lInProgress := (lWorkflowActivityLine.FINDFIRST());
        IF (lInProgress) THEN
          lInProgressText := STRSUBSTNO(xWorkflowActivityLineInProgress, lWorkflowActivityLine.TABLECAPTION(),
            lWorkflowActivityLine."Raised DateTime", lWorkflowActivityLine."Contact No.",
            lWorkflowActivityLine."Information Text");
      END;

      // Checking workflow notifications
      IF ( NOT (lInProgress)) THEN
      BEGIN
        lWorkflowNotification.RESET();
        lWorkflowNotification.SETCURRENTKEY("Workflow No.", Sent, Cancelled);
        lWorkflowNotification.SETRANGE("Workflow No.", Rec."No.");
        lWorkflowNotification.SETRANGE(Sent, FALSE);
        lWorkflowNotification.SETRANGE(Cancelled, FALSE);
        lInProgress := (lWorkflowActivityLine.FINDFIRST());
        IF (lInProgress) THEN
          lInProgressText := STRSUBSTNO(xWorkflowNotificationInProgress, lWorkflowNotification.TABLECAPTION(),
            lWorkflowNotification.Sent, lWorkflowNotification."To Name", lWorkflowNotification.Subject);
      END;

      // Raising error if required
      IF ((pRaiseError) AND (lInProgress)) THEN
        ERROR(xWorkflowInProgress, lInProgressText);

      EXIT(lInProgress);
    END;

    PROCEDURE AddDefaultContact@1000000003();
    VAR
      WFlowCont@1000000000 : Record 9062264;
      ContNo@1000000001 : Code[20];
    BEGIN
      WFlowCont.SETRANGE("Workflow No.","No.");
      IF NOT WFlowCont.FINDFIRST THEN BEGIN
        ContNo := TNPUtils.GetUserContactNo(USERID);
        IF ContNo <> '' THEN BEGIN
          WFlowCont.INIT;
          WFlowCont."Workflow No." := "No.";
          WFlowCont.VALIDATE("Contact No.",ContNo);
          WFlowCont.INSERT;
        END;
      END;
    END;

    PROCEDURE ShowRecordCriteria@9062229();
    VAR
      CriteriaMgmt@9062229 : Codeunit 9062462;
      Criteria@9062230 : Record 9062626;
      CriteriaCard@9062231 : Page 9062888;
    BEGIN
      IF NOT Criteria.GET("Record Criteria ID") THEN BEGIN
        VALIDATE("Record Criteria ID",CriteriaMgmt.CreateCriteriaAttached(DATABASE::"Enhanced Workflow",GETPOSITION,Rec.FIELDNO("Record Criteria ID"), FALSE));
        Criteria.GET("Record Criteria ID");
      END;

      IF Criteria."Table ID" <> "Table ID" THEN BEGIN
        Criteria.VALIDATE("Table ID","Table ID");
        Criteria.MODIFY(TRUE);
      END;

      COMMIT;

      CriteriaCard.SETRECORD(Criteria);
      CriteriaCard.RUNMODAL;
    END;

    BEGIN
    {
      //DOC NA2015.1  JH 15/08/2012 - Migrated to 2013
      //DOC NA2015.1  AP 23/01/2013 - Amendments
      //DOC NA2015.1  PC 25/01/2013 - Added fields for actions to take on different errors
      //DOC NA2015.1  PC 13/03/2013 - Added Infoset related Fields
      //DOC NA2015.1  JH 10/07/2013 - Workflows improvements and bugfixing
      //DOC NA2015.1  PC 24/07/2013 - Added "Related Dataset Type" field
      //DOC NA2015.4  JH 28/12/2014 - System behaviours renamed
      //DOC NA2015.4  PC 29/01/2015 - "Close if Seq. Answer is Neg." InitValue set to "Yes"
      //DOC NA2015.6  JH 30/04/2015 - Extra logic added to notification-only workflows
      //DOC NA2016.10 JH 26/08/2015 - Upgraded to 2016
      //DOC NA2016.10 PC 25/09/2015 - Added fields "On Start Restrict Record"
      //DOC NA2016.10 PC 25/09/2015 - Added Record Criteria functionality
      //DOC NA2016.11 BM 27/10/2015 - Added code in on "table ID" validate to update the child records table ID
      //DOC NA2016.11 JH 05/11/2015 - "Table ID" validation fixed
      //DOC NA2016.11 PC 10/11/2015 - Add functionality to support integration with "Standard" Workflows
      //DOC NA2016.12 JH 27/12/2015 - Criteria references changed
      //DOC NA2016.14 PC 04/03/2016 - Added field "Don't show in Factbox"
      //DOC NA2016.15 JH 15/04/2016 - CfMD amendments
      //DOC NA2016.15 PC 11/05/2016 - Added field "Generate Jet Report"
    }
    END.
  }
}

