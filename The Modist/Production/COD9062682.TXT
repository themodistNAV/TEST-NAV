OBJECT Codeunit 9062682 Html Editor Session Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=24/05/16;
    Time=11:46:55 AM;
    Version List=NH2016.16;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      HtmlControlRequestProxy@1000000001 : Codeunit 9062665;
      Initialized@1000000000 : Boolean;
      EditorInitialized@1000000008 : Boolean;
      EditorText@1000000002 : Text;
      MessageMode@1000000003 : ' ,GetValue,GetValueAndClose,ExportValue';
      txtImportFile@1000000007 : TextConst 'ENU=Import from file;ENG=Import from file';
      txtExportFile@1000000006 : TextConst 'ENU=Export to file;ENG=Export to file';
      txtFileTypeHTML@1000000005 : TextConst 'ENU=HTML Files (*.html)|*.html|Text Files (*.txt)|*.txt|All Files (*.*)|*.*;ENG=HTML Files (*.html)|*.html|Text Files (*.txt)|*.txt|All Files (*.*)|*.*';
      txtFileNameHtml@1000000004 : TextConst 'ENU=Html.txt;ENG=Html.txt';
      "--- Editor Setup ---"@1000000009 : Integer;
      ShowMenuBar@1000000013 : Boolean;
      ShowStatusBar@1000000012 : Boolean;
      PluginList@1000000011 : Text;
      ToolbarItems@1000000010 : Text;
      FontSize@1000000014 : Text;

    PROCEDURE Initialize@1000000000(VAR Value@1000000000 : DotNet "'TheNavPeople.HtmlControlCommunication.9.0.0.0, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7c0c47cc7f65ff95'.TheNavPeople.HtmlControlCommunication.RequestMessageEvent");
    VAR
      UIManipulationMgt@1000000002 : Codeunit 9062672;
    BEGIN
      InitializeAdv(Value, TRUE, TRUE, GetDefaultPluginList(), GetDefaultToolbarItems(), '10pt', '100%');
    END;

    PROCEDURE InitializeSimpleEditor@1000000015(VAR Value@1000000000 : DotNet "'TheNavPeople.HtmlControlCommunication.9.0.0.0, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7c0c47cc7f65ff95'.TheNavPeople.HtmlControlCommunication.RequestMessageEvent");
    BEGIN
      InitializeAdv(Value, FALSE, FALSE, GetDefaultPluginList(),
        'undo redo | fontselect fontsizeselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image',
        '10pt', '300px');
    END;

    PROCEDURE InitializeAdv@1000000011(VAR Value@1000000000 : DotNet "'TheNavPeople.HtmlControlCommunication.9.0.0.0, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7c0c47cc7f65ff95'.TheNavPeople.HtmlControlCommunication.RequestMessageEvent";NewShowMenuBar@1000000001 : Boolean;NewShowStatusBar@1000000003 : Boolean;NewPluginList@1000000004 : Text;NewToolbarItems@1000000005 : Text;NewFontSize@1000000007 : Text;Height@1000000006 : Text);
    VAR
      UIManipulationMgt@1000000002 : Codeunit 9062672;
    BEGIN
      Initialized := FALSE;
      EditorInitialized := FALSE;
      //editor setup
      ShowMenuBar := NewShowMenuBar;
      ShowStatusBar := NewShowStatusBar;
      PluginList := NewPluginList;
      ToolbarItems := NewToolbarItems;
      FontSize := NewFontSize;
      //initialize control and libraries
      HtmlControlRequestProxy.SetRequestEvent(Value);
      HtmlControlRequestProxy.AddScriptLink('libraries/tinymce/tinymce.min.js');
      HtmlControlRequestProxy.AddScriptLink('libraries/tnp.htmleditor/tnp.htmleditor.js');
      HtmlControlRequestProxy.SendResourceLinkRequest();
      //update client ui
      UIManipulationMgt.ClearScript();
      IF ((Height = '100%') OR (Height = '')) THEN
        UIManipulationMgt.UseWindowHeight()
      ELSE
        UIManipulationMgt.SetHeightProperties(Height, Height, Height);
      IF (UIManipulationMgt.HasScript) THEN
        HtmlControlRequestProxy.SendJavaScriptRequest(UIManipulationMgt.GetScript);
    END;

    PROCEDURE LinksLoaded@1000000001();
    BEGIN
      HtmlControlRequestProxy.SendStyleSheetRequest(
        '#controlAddIn .mce-edit-area {display:flex;flex-flow:column;} ' +
        '#controlAddIn .mce-edit-area iframe {flex:1 1 auto;}  ' +
        '#controlAddIn {height:100%;} ' +
        '#controlAddIn .mce-tinymce.mce-container { width:100%;height:100%;border:0; } ' +
        '#controlAddIn .mce-panel{border:0} ' +
        '#controlAddIn .mce-container-body.mce-stack-layout {display: flex; flex-flow: column;height: 100%;} ' +
        '#controlAddIn .mce-stack-layout-item{  flex: 0 0 auto;} ' +
        '#controlAddIn .mce-edit-area{flex:1 1 auto;}');
      //HtmlControlRequestProxy.SendJavaScriptRequest('InitEditor("controlAddIn");');

      IF (FontSize = '') THEN
        FontSize := '12pt';

      HtmlControlRequestProxy.SendJavaScriptRequest(STRSUBSTNO('InitEditorAdv("controlAddIn", %1, %2, [%3], "%4", "%5");',
        JSBool(ShowMenuBar),
        JSBool(ShowStatusBar),
        PluginList,
        ToolbarItems,
        FontSize));

      Initialized := TRUE;
    END;

    LOCAL PROCEDURE HandleEditorInitialized@1000000009();
    BEGIN
      EditorInitialized := TRUE;
      IF (EditorText <> '') THEN
        SendSetValueRequest(EditorText);
    END;

    PROCEDURE HandleControlMessage@1000000002(ControlMessage@1000000000 : DotNet "'TheNavPeople.HtmlControlCommunication.9.0.0.0, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7c0c47cc7f65ff95'.TheNavPeople.HtmlControlCommunication.ControlMessage";VAR ClosePage@1000000001 : Boolean);
    VAR
      CellIdText@1000000002 : Text;
      CellIndexText@1000000003 : Text;
      ColIdText@1000000004 : Text;
    BEGIN
      ClosePage := FALSE;
      CASE (ControlMessage.Type) OF
        'getvalue': HandleGetValue(ControlMessage.Content.Item('Result'), ClosePage);
        'editorInitialized': HandleEditorInitialized();
      END;
    END;

    LOCAL PROCEDURE HandleGetValue@1000000013(NewValue@1000000000 : Text;VAR ClosePage@1000000001 : Boolean);
    BEGIN
      EditorText := NewValue;
      CASE (MessageMode) OF
        MessageMode::ExportValue: ExportToFile();
        MessageMode::GetValueAndClose: ClosePage := TRUE;
      END;
      MessageMode := MessageMode::" ";
    END;

    LOCAL PROCEDURE SendSetValueRequest@1000000007(NewValue@1000000000 : Text);
    BEGIN
      HtmlControlRequestProxy.SendCommandRequest('setvalue', NewValue);
    END;

    LOCAL PROCEDURE SendGetValueRequest@1000000008(NewMessageMode@1000000000 : Integer);
    BEGIN
      HtmlControlRequestProxy.SendCommandRequest('getvalue', '');
      MessageMode := NewMessageMode;
    END;

    PROCEDURE ImportFromFile@1000000003();
    VAR
      InputStream@1000000002 : InStream;
      FileName@1000000001 : Text;
      BigText@1000000000 : BigText;
      Text@1000000003 : Text;
    BEGIN
      FileName := '';
      IF (UPLOADINTOSTREAM(txtImportFile, '', txtFileTypeHTML, FileName, InputStream)) THEN BEGIN
        BigText.READ(InputStream);
        Text := '';
        IF (BigText.LENGTH > 0) THEN
          BigText.GETSUBTEXT(Text, 1);
        SetText(Text);
      END;
    END;

    PROCEDURE ExportToFile@1000000004();
    VAR
      TempBlob@1000000001 : TEMPORARY Record 99008535;
      OutputStream@1000000002 : OutStream;
      InputStream@1000000003 : InStream;
      FileName@1000000000 : Text;
      Result@1000000004 : Boolean;
    BEGIN
      IF (MessageMode = MessageMode::ExportValue) THEN BEGIN
        FileName := txtFileNameHtml;
        TempBlob.Blob.CREATEOUTSTREAM(OutputStream);
        OutputStream.WRITETEXT(EditorText);
        TempBlob.Blob.CREATEINSTREAM(InputStream);
        Result := DOWNLOADFROMSTREAM(InputStream, txtExportFile, '', txtFileTypeHTML, FileName);
      END ELSE
        SendGetValueRequest(MessageMode::ExportValue);
    END;

    PROCEDURE GetValueAndClose@1000000010();
    BEGIN
      SendGetValueRequest(MessageMode::GetValueAndClose);
    END;

    PROCEDURE SetText@1000000005(Text@1000000000 : Text);
    BEGIN
      EditorText := Text;
      IF (Initialized) THEN
        SendSetValueRequest(EditorText);
    END;

    PROCEDURE GetText@1000000006() : Text;
    VAR
      TheText@1000000000 : Text;
    BEGIN
      EXIT(EditorText);
    END;

    LOCAL PROCEDURE "--- Default Settings ---"@1000000016();
    BEGIN
    END;

    PROCEDURE GetDefaultPluginList@1000000017() : Text;
    BEGIN
      EXIT(
        '"advlist autolink lists link image charmap print preview anchor",' +
        '"searchreplace visualblocks code fullscreen",'+
        '"insertdatetime media table contextmenu paste code"');
    END;

    PROCEDURE GetDefaultToolbarItems@1000000018() : Text;
    BEGIN
      EXIT('insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image');
    END;

    LOCAL PROCEDURE "--- Tools ---"@1000000012();
    BEGIN
    END;

    LOCAL PROCEDURE JSBool@1000000014(Value@1000000000 : Boolean) : Text;
    BEGIN
      IF (Value) THEN
        EXIT('true');
      EXIT('false');
    END;

    BEGIN
    {
      //DOC NA2016.12 AZ 21/01/2016 - Created
      //DOC NA2016.14 AZ 17/02/2016 - New functions - InitializeSimpleEditor, InitializeAdv, GetDefaultPluginList, GetDefaulToolbarItems
      //DOC NA2016.15 JH 09/05/2016 - CfMD modifications
      //DOC NA2016.16 AZ 24/05/2016 - CfMD amendments
    }
    END.
  }
}

