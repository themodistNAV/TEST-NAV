OBJECT Table 9062343 Planning Board Menu Item
{
  OBJECT-PROPERTIES
  {
    Date=10/05/16;
    Time=12:00:00 PM;
    Version List=NA2016.15;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               Rec.TESTFIELD("Planning Board Code");
               CheckModifyPermission();
               IF (Rec.ID = 0) THEN
                 Rec.VALIDATE(ID, FindNewId());
               IF (Rec.Sequence = 0) THEN
                 Rec.VALIDATE(Sequence, FindNewIndex());
               TnpToolkit.UpdateCreatedBy(Rec."Created By", Rec."Created Date Time");
             END;

    OnModify=BEGIN
               CheckModifyPermission();
               TnpToolkit.UpdateModifiedBy(Rec."Modified By", Rec."Modified Date Time");
             END;

    OnDelete=BEGIN
               CheckModifyPermission();
               PlanningBoardActionMgt.DeletePlanningBoardMenuItemAction(Rec);
             END;

    OnRename=BEGIN
               CheckModifyPermission();
             END;

    CaptionML=[ENU=Planning Board Menu Item;
               ENG=Planning Board Menu Item];
    LookupPageID=Page9062407;
    DrillDownPageID=Page9062407;
  }
  FIELDS
  {
    { 1   ;   ;Planning Board Code ;Code20        ;TableRelation="Planning Board Header";
                                                   CaptionML=[ENU=Planning Board Code;
                                                              ENG=Planning Board Code] }
    { 2   ;   ;Planning Board Table Type;Option   ;CaptionML=[ENU=Planning Board Table Type;
                                                              ENG=Planning Board Table Type];
                                                   OptionCaptionML=[ENU=" ,Resource,Entry";
                                                                    ENG=" ,Resource,Entry"];
                                                   OptionString=[ ,Resource,Entry] }
    { 3   ;   ;ID                  ;Integer       ;CaptionML=[ENU=ID;
                                                              ENG=ID] }
    { 10  ;   ;Sequence            ;Integer       ;CaptionML=[ENU=Sequence;
                                                              ENG=Sequence] }
    { 11  ;   ;Caption             ;Text50        ;OnValidate=BEGIN
                                                                IF (Rec.Type <> Rec.Type::Item) THEN
                                                                  CLEAR(Rec.Caption);
                                                              END;

                                                   CaptionML=[ENU=Caption;
                                                              ENG=Caption] }
    { 20  ;   ;Action Description  ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Planning Board Action".Description WHERE (Planning Board Code=FIELD(Planning Board Code),
                                                                                                                 Parent Table=CONST(Planning Board Menu Item),
                                                                                                                 Parent Table Type=FIELD(Planning Board Table Type),
                                                                                                                 Parent ID=FIELD(ID)));
                                                   CaptionML=[ENU=Action Description;
                                                              ENG=Action Description] }
    { 30  ;   ;Type                ;Option        ;InitValue=Item;
                                                   OnValidate=BEGIN
                                                                IF (Rec.Type <> xRec.Type) THEN
                                                                  IF (Rec.Type <> Rec.Type::Item) THEN
                                                                    Rec.VALIDATE(Caption, '');
                                                              END;

                                                   CaptionML=[ENU=Type;
                                                              ENG=Type];
                                                   OptionCaptionML=[ENU=" ,Item,Separator";
                                                                    ENG=" ,Item,Separator"];
                                                   OptionString=[ ,Item,Separator] }
    { 1000;   ;Created By          ;Code50        ;OnLookup=BEGIN
                                                              TnpToolkit.UserLookup(Rec."Created By", FALSE);
                                                            END;

                                                   CaptionML=[ENU=Created By;
                                                              ENG=Created By] }
    { 1001;   ;Created Date Time   ;DateTime      ;CaptionML=[ENU=Created Date Time;
                                                              ENG=Created Date Time] }
    { 1002;   ;Modified By         ;Code50        ;OnLookup=BEGIN
                                                              TnpToolkit.UserLookup(Rec."Modified By", FALSE);
                                                            END;

                                                   CaptionML=[ENU=Modified By;
                                                              ENG=Modified By] }
    { 1003;   ;Modified Date Time  ;DateTime      ;CaptionML=[ENU=Modified Date Time;
                                                              ENG=Modified Date Time] }
  }
  KEYS
  {
    {    ;Planning Board Code,Planning Board Table Type,ID;
                                                   Clustered=Yes }
    {    ;Planning Board Code,Planning Board Table Type,Sequence }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      PlanningBoardHeader@1000000001 : Record 9062337;
      PlanningBoardActionMgt@9062230 : Codeunit 9062314;
      SequenceToolkit@1000000002 : Codeunit 9062519;
      TnpToolkit@1000000000 : Codeunit 9062230;

    PROCEDURE "--- General ---"@9062231();
    BEGIN
    END;

    PROCEDURE FindNewId@9062234() : Integer;
    VAR
      lPlanningBoardMenuItem@9062229 : Record 9062343;
    BEGIN
      //DOC NA2016.12 - Returning new ID
      //  <- The ID

      lPlanningBoardMenuItem.RESET();
      lPlanningBoardMenuItem.SETRANGE("Planning Board Code", Rec."Planning Board Code");
      lPlanningBoardMenuItem.SETRANGE("Planning Board Table Type", Rec."Planning Board Table Type");
      IF (lPlanningBoardMenuItem.FINDLAST()) THEN
        EXIT(lPlanningBoardMenuItem.ID + 1)
      ELSE
        EXIT(1);
    END;

    PROCEDURE FindNewIndex@9062233() : Integer;
    VAR
      lPlanningBoardMenuItem@9062229 : Record 9062343;
    BEGIN
      //DOC NA2016.12 - Returning new index
      //  <- The index

      lPlanningBoardMenuItem.RESET();
      lPlanningBoardMenuItem.SETCURRENTKEY("Planning Board Code", "Planning Board Table Type", Sequence);
      lPlanningBoardMenuItem.SETRANGE("Planning Board Code", Rec."Planning Board Code");
      lPlanningBoardMenuItem.SETRANGE("Planning Board Table Type", Rec."Planning Board Table Type");
      IF (lPlanningBoardMenuItem.FINDLAST()) THEN
        EXIT(lPlanningBoardMenuItem.Sequence + 1)
      ELSE
        EXIT(1);
    END;

    PROCEDURE InitialiseNewRecord@9062229();
    BEGIN
      //DOC NA2016.12 - Initialising new record

      Rec.VALIDATE(ID, FindNewId());
      Rec.VALIDATE(Sequence, FindNewIndex());
    END;

    LOCAL PROCEDURE CheckModifyPermission@1000000039();
    VAR
      lEnhancedPermissionsMgt@1000000000 : Codeunit 9062277;
    BEGIN
      //DOC NA2016.15 - Checking modify permission for the planning board

      IF ( NOT (PlanningBoardHeader.GET(Rec."Planning Board Code"))) THEN
        EXIT;
      lEnhancedPermissionsMgt.CheckPlanningBoardModifyPermission(PlanningBoardHeader, USERID());
    END;

    LOCAL PROCEDURE "--- Action ---"@9062232();
    BEGIN
    END;

    PROCEDURE GetActionText@9062230() : Text;
    BEGIN
      //DOC NA2016.12 - Returning action text
      //  <- The text

      EXIT(PlanningBoardActionMgt.GetPlanningBoardMenuItemActionText(Rec));
    END;

    PROCEDURE EditAction@1000000010(pModify@1000000001 : Boolean);
    BEGIN
      //DOC NA2016.12 - Editing action
      //  -> pModify: Flag to modify the current record
      //  <- TRUE = Action amended, update necessary; FALSE = Not

      PlanningBoardActionMgt.EditPlanningBoardMenuItemAction(Rec);
      IF (pModify) THEN
        Rec.MODIFY(TRUE);
    END;

    PROCEDURE "--- Sequence ---"@1000000011();
    BEGIN
    END;

    PROCEDURE SequenceUp@1000000012() : Boolean;
    VAR
      lRecVariant@1000000000 : Variant;
      lResult@1000000001 : Boolean;
    BEGIN
      //DOC NA2016.12 - Moving the menu item up along its sequence (towards lower sequences)
      //  <- TRUE = Sequence changed, FALSE = Not

      lRecVariant := Rec;
      lResult := SequenceToolkit.SequenceUp(lRecVariant, DATABASE::"Planning Board Menu Item", Rec.FIELDNO(Sequence));
      Rec := lRecVariant;
      EXIT(lResult);
    END;

    PROCEDURE SequenceDown@1000000013() : Boolean;
    VAR
      lRecVariant@1000000001 : Variant;
      lResult@1000000000 : Boolean;
    BEGIN
      //DOC NA2016.12 - Moving the menu item down along its sequence (towards higher sequences)
      //  <- TRUE = Sequence changed, FALSE = Not

      lRecVariant := Rec;
      lResult := SequenceToolkit.SequenceDown(lRecVariant, DATABASE::"Planning Board Menu Item", Rec.FIELDNO(Sequence));
      Rec := lRecVariant;
      EXIT(lResult);
    END;

    PROCEDURE "--- UI ---"@1000000007();
    BEGIN
    END;

    PROCEDURE GetStyle@1000000008() : Text;
    BEGIN
      //DOC NA2016.12 - Returning style
      //  <- The style

      IF (Rec.Type = Rec.Type::Item) THEN
        EXIT('Standard')
      ELSE
        EXIT('Subordinate');
    END;

    BEGIN
    {
      //DOC NA2016.12 JH 11/10/2015 - Created
      //DOC NA2016.15 JH 05/05/2016 - Enhanced permissions
    }
    END.
  }
}

