OBJECT Page 50020 Bronto Card
{
  OBJECT-PROPERTIES
  {
    Date=05/03/17;
    Time=[ 1:58:00 PM];
    Modified=Yes;
    Version List=OP9031;
  }
  PROPERTIES
  {
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    SourceTable=Table36;
    PageType=Card;
    OnOpenPage=BEGIN
                 MessageID:=GetMessageID("Shipment Method Code");
               END;

    OnAfterGetRecord=BEGIN
                       //MessageID:=GetMessageID("Shipment Method Code");
                     END;

    ActionList=ACTIONS
    {
      { 1000000008;  ;ActionContainer;
                      CaptionML=ENU=Main;
                      ActionContainerType=NewDocumentItems }
      { 1000000009;1 ;Action    ;
                      CaptionML=[ENU=Send Message;
                                 ENG=Send Message];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Email;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ConfID@1000000000 : Text[50];
                               BEGIN
                                 IF MessageID = '' THEN BEGIN
                                   MESSAGE('You must select a MessageID');
                                 END ELSE BEGIN
                                   IF CONFIRM('Send Message?') THEN BEGIN
                                     BRONTOIntegrationProcessor.SendMessage(Rec,MessageID,ConfID);
                                     MESSAGE(MESSAGERESPONSE,"No.",ConfID);
                                   END;
                                 END;
                               END;
                                }
      { 1000000011;1 ;Action    ;
                      CaptionML=[ENU=Get Bronto Order ID;
                                 ENG=Get Bronto Order ID];
                      Promoted=Yes;
                      Image=NumberGroup;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 BRONTOIntegrationProcessor.GetBrontoOrderID(Rec,BrontoOrderRef);
                                 CurrPage.UPDATE;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1000000000;0;Container;
                ContainerType=ContentArea }

    { 1000000001;1;Group  ;
                Name=General;
                CaptionML=[ENU=General;
                           ENG=General];
                GroupType=GridLayout }

    { 1000000007;2;Group  ;
                CaptionML=[ENU=Bronto Details;
                           ENG=Bronto Details];
                GroupType=Group;
                Layout=Columns }

    { 1000000002;3;Field  ;
                SourceExpr="No." }

    { 1000000003;3;Field  ;
                SourceExpr="Marketing ID" }

    { 1000000010;3;Field  ;
                SourceExpr="Bill-to E-Mail" }

    { 1000000004;3;Field  ;
                CaptionML=[ENU=Session ID;
                           ENG=Session ID];
                SourceExpr=BrontoSessionID;
                Visible=FALSE }

    { 1000000005;3;Field  ;
                CaptionML=ENU=Customer ID;
                SourceExpr=CustomerID;
                Visible=FALSE }

    { 1000000006;3;Field  ;
                CaptionML=[ENU=Message ID;
                           ENG=Message ID];
                SourceExpr=MessageID;
                OnLookup=BEGIN
                           LookupMessages(MessageID);
                         END;
                          }

    { 1000000012;3;Field  ;
                Name=OrderRef;
                CaptionML=[ENU=Bronto Order Ref.;
                           ENG=Bronto Order Ref.];
                SourceExpr="Marketing GUID" }

    { 1000000013;1;Group  ;
                CaptionML=[ENU=Response;
                           ENG=Response];
                GroupType=Group }

    { 1000000014;2;Field  ;
                CaptionML=[ENU=Message Confirmation ID;
                           ENG=Message Confirmation ID];
                SourceExpr="Message Confirmation ID" }

  }
  CODE
  {
    VAR
      BrontoSessionID@1000000000 : Text;
      CustomerID@1000000001 : Text;
      MessageID@1000000002 : Text;
      BRONTOIntegrationProcessor@1000000003 : Codeunit 50022;
      BrontoOrderRef@1000000004 : Text;
      MESSAGERESPONSE@1000000005 : TextConst 'ENU=Message for Order %1 has been succesfully sent with the Comfirmation ID %2;ENG=Message for Order %1 has been succesfully sent with the Comfirmation ID %2';

    PROCEDURE LookupMessages@1000000003(VAR MessageGUID@1000000002 : Text);
    VAR
      ModistSetup@1000000000 : Record 50000;
      IntegrationProcessFunction@1000000001 : Record 50005;
    BEGIN
      ModistSetup.GET;
      IntegrationProcessFunction.SETRANGE("Platform Code",ModistSetup."BRONTO Integration Type");
      IntegrationProcessFunction.SETRANGE("Group Code",ModistSetup."BRONTO Messaging SOAP Group");
      IF IntegrationProcessFunction.FINDSET THEN BEGIN
        IF PAGE.RUNMODAL(0,IntegrationProcessFunction) = ACTION::LookupOK THEN BEGIN
          MessageGUID := IntegrationProcessFunction."Attribute Value2";
        END;
      END;
    END;

    LOCAL PROCEDURE GetMessageID@1000000000(ShpmentMethodCode@1000000000 : Code[10]) : Text;
    VAR
      ShipmentMethod@1000000001 : Record 10;
      IntegrProcFunction@1000000002 : Record 50005;
      ModistSetup@1000000003 : Record 50000;
    BEGIN
      ModistSetup.GET;
      IF "Shipment Method Code" <> '' THEN BEGIN
        IF ShipmentMethod.GET(ShpmentMethodCode) THEN
          IF ShipmentMethod."Integration Function" <> '' THEN
            IF IntegrProcFunction.GET(ModistSetup."BRONTO Integration Type",ModistSetup."BRONTO Messaging SOAP Group",ShipmentMethod."Integration Function") THEN
              EXIT(IntegrProcFunction."Attribute Value2");
      END;
    END;

    LOCAL PROCEDURE GetBrontoOrderID@1000000001(VAR CustomerOrderID@1000000000 : Code[20]);
    VAR
      ModistSetup@1000000002 : Record 50000;
      IntegrationProcessFunction@1000000001 : Record 50005;
      IntegrationProcessingGroup@1000000003 : Record 50007;
      BRONTOIntegrationManagment@1000000004 : Codeunit 50021;
      AccessToken@1000000005 : Text;
      RefreshToken@1000000006 : Text;
    BEGIN
      ModistSetup.GET;
      IF BRONTOIntegrationManagment.GetRESTAuthToken(AccessToken,RefreshToken) THEN
        IF BRONTOIntegrationManagment.GetBrontoOrderRef(AccessToken,CustomerOrderID,BrontoOrderRef) THEN;
    END;

    BEGIN
    END.
  }
}

