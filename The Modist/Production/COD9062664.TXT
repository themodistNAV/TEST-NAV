OBJECT Codeunit 9062664 Compression Toolkit
{
  OBJECT-PROPERTIES
  {
    Date=27/11/15;
    Time=[ 5:25:00 PM];
    Version List=NA2016.11;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      ZipFileC@1000000000 : DotNet "'System.IO.Compression.FileSystem, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Compression.ZipFile" RUNONCLIENT;
      ZipFileS@1000000002 : DotNet "'System.IO.Compression.FileSystem, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Compression.ZipFile";
      FileSystem@1000000001 : Codeunit 9062264;

    PROCEDURE Client@1000000000() : Boolean;
    BEGIN
      //DOC NA2016.11 - Returning TRUE if the code is working on client side
      //  <- The response

      EXIT(FileSystem.Client());
    END;

    PROCEDURE CompressFolder@1000000002(pClient@1000000002 : Boolean;pFolderPath@1000000000 : Text;pZipPath@1000000001 : Text);
    BEGIN
      //DOC NA2016.11 - Compressing a folder
      //  -> pClient: TRUE = Run on client, FALSE = Run on server
      //  -> pFolderPath: Folder path
      //  -> pZipPath: ZIP path

      IF (pClient) THEN
        ZipFileC.CreateFromDirectory(pFolderPath, pZipPath)
      ELSE
        ZipFileS.CreateFromDirectory(pFolderPath, pZipPath);
    END;

    PROCEDURE CompressAndDeleteFolder@1000000005(pClient@1000000002 : Boolean;pFolderPath@1000000004 : Text;pZipPath@1000000003 : Text);
    BEGIN
      //DOC NA2016.11 - Compressing and deleting a folder
      //  -> pClient: TRUE = Run on client, FALSE = Run on server
      //  -> pFolderPath: Folder path
      //  -> pZipPath: ZIP path

      CompressFolder(pClient, pFolderPath, pZipPath);
      FileSystem.DeleteFolder(pClient, pFolderPath, TRUE);
    END;

    PROCEDURE DecompressZip@1000000003(pClient@1000000002 : Boolean;pZipPath@1000000000 : Text;pFolderPath@1000000004 : Text);
    BEGIN
      //DOC NA2016.11 - Decompressing a ZIP
      //  -> pClient: TRUE = Run on client, FALSE = Run on server
      //  -> pZipPath: ZIP path
      //  -> pFolderPath: Folder path

      IF (pClient) THEN
        ZipFileC.ExtractToDirectory(pZipPath, pFolderPath)
      ELSE
        ZipFileS.ExtractToDirectory(pZipPath, pFolderPath);
    END;

    PROCEDURE DecompressAndDeleteZip@1000000008(pClient@1000000002 : Boolean;pZipPath@1000000000 : Text;pFolderPath@1000000004 : Text);
    BEGIN
      //DOC NA2016.11 - Decompressing and deleting a ZIP
      //  -> pClient: TRUE = Run on client, FALSE = Run on server
      //  -> pZipPath: ZIP path
      //  -> pFolderPath: Folder path

      DecompressZip(pClient, pZipPath, pFolderPath);
      FileSystem.DeleteFile(pClient, pZipPath);
    END;

    BEGIN
    {
      //DOC NA2016.11 JH 27/11/2015 - Created
    }
    END.
  }
}

