OBJECT Page 11102070 OM - Record Permissions Wizard
{
  OBJECT-PROPERTIES
  {
    Date=19/11/15;
    Time=12:00:00 PM;
    Version List=OMA10.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Record Permissions Wizard;
               ENU=Record Permissions Wizard;
               ESP=Record Permissions Wizard;
               FRA=Record Permissions Wizard;
               NLD=Rechtenmacro wizard;
               DEA=Record Permissions Wizard];
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    LinksAllowed=No;
    PageType=NavigatePage;
    OnInit=BEGIN
             NoOfPages := 4;
           END;

    OnOpenPage=VAR
                 WhereUsedStatus@1000 : Codeunit 11102047;
               BEGIN
                 SaveToPermissionSet := TRUE;

                 IF Project."No." <> '' THEN BEGIN
                   SaveToProject := TRUE;
                   SaveToProjectEnabled := TRUE;
                 END;

                 WhereUsedStatus.WhereUsedUpToDate;

                 ActivatePage(1);
               END;

    OnQueryClosePage=VAR
                       ctNotFinsied@1000 : TextConst 'DEU=The recording is not finished.\Are you sure?;ENU=The recording is not finished.\Are you sure?;ESP=The recording is not finished.\Are you sure?;FRA=The recording is not finished.\Are you sure?;NLD=De opname is nog niet gereed.\Weet u het zeker?;DEA=The recording is not finished.\Are you sure?';
                     BEGIN
                       IF Started AND NOT Finished THEN
                         EXIT(CONFIRM(ctNotFinsied));
                     END;

    ActionList=ACTIONS
    {
      { 1       ;0   ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 2       ;1   ;Action    ;
                      CaptionML=[DEU=&Previous;
                                 ENU=&Previous;
                                 ESP=&Previous;
                                 FRA=&Previous;
                                 NLD=&Vorige;
                                 DEA=&Previous];
                      Enabled=PreviousEnabled;
                      InFooterBar=Yes;
                      Image=PreviousRecord;
                      OnAction=BEGIN
                                 PreviousPage;
                               END;
                                }
      { 3       ;1   ;Action    ;
                      CaptionML=[DEU=&Next;
                                 ENU=&Next;
                                 ESP=&Next;
                                 FRA=&Next;
                                 NLD=Vo&lgende;
                                 DEA=&Next];
                      Enabled=NextEnabled;
                      InFooterBar=Yes;
                      Image=NextRecord;
                      OnAction=BEGIN
                                 NextPage;
                               END;
                                }
      { 4       ;1   ;Action    ;
                      CaptionML=[DEU=&Finish;
                                 ENU=&Finish;
                                 ESP=&Finish;
                                 FRA=&Finish;
                                 NLD=Voltooie&n;
                                 DEA=&Finish];
                      Enabled=FinishEnabled;
                      InFooterBar=Yes;
                      Image=Approve;
                      OnAction=BEGIN
                                 Finish;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 5   ;0   ;Container ;
                ContainerType=ContentArea }

    { 6   ;1   ;Group     ;
                Name=Step1;
                Visible=Step1Visible }

    { 7   ;2   ;Field     ;
                CaptionML=[DEU=This wizard helps you to create permission sets.;
                           ENU=This wizard helps you to create permission sets.;
                           ESP=This wizard helps you to create permission sets.;
                           FRA=This wizard helps you to create permission sets.;
                           NLD=Deze wizard begeleidt u bij het beheren van machtigingensets.;
                           DEA=This wizard helps you to create permission sets.] }

    { 23  ;2   ;Field      }

    { 18  ;2   ;Field     ;
                CaptionClass=ctWhatIsTheName }

    { 8   ;2   ;Field     ;
                SourceExpr=PermissionSetId;
                OnValidate=VAR
                             PermissionSet@1000 : Record 2000000004;
                           BEGIN
                             IF PermissionSet.GET(PermissionSetId) THEN BEGIN
                               PermissionSetName := PermissionSet.Name;
                               IF Type IN [Type::" ", Type::"Create New Permission Set"] THEN
                                 Type := Type::"Modify Existing Permission Set";
                             END ELSE
                               IF Type IN [Type::" ", Type::"Modify Existing Permission Set"] THEN
                                 Type := Type::"Create New Permission Set";
                           END;

                OnLookup=VAR
                           RecordPermissionsMgt@1000 : Codeunit 11102108;
                         BEGIN
                           EXIT(RecordPermissionsMgt.LookupPermissionSet(Text));
                         END;
                          }

    { 24  ;2   ;Field      }

    { 19  ;2   ;Field     ;
                CaptionClass=ctDescribe }

    { 10  ;2   ;Field     ;
                SourceExpr=PermissionSetName }

    { 25  ;2   ;Field      }

    { 20  ;2   ;Field     ;
                CaptionClass=ctWhatDoYouWant }

    { 11  ;2   ;Field     ;
                OptionCaptionML=[DEU=" ,Create new permission set,Modify existing permission set,Create new permission set based on existing";
                                 ENU=" ,Create new permission set,Modify existing permission set,Create new permission set based on existing";
                                 ESP=" ,Create new permission set,Modify existing permission set,Create new permission set based on existing";
                                 FRA=" ,Create new permission set,Modify existing permission set,Create new permission set based on existing";
                                 NLD=" ,Nieuwe machtigingenset aanmaken,Bestaande machtigingenset aanpassen,Nieuwe machtigingenset aanmaken gebaseerd op een bestaande";
                                 DEA=" ,Create new permission set,Modify existing permission set,Create new permission set based on existing"];
                SourceExpr=Type }

    { 26  ;2   ;Field      }

    { 22  ;2   ;Field     ;
                CaptionClass=ctSaveType }

    { 12  ;2   ;Field     ;
                CaptionML=[DEU=Project;
                           ENU=Project;
                           ESP=Project;
                           FRA=Project;
                           NLD=Project;
                           DEA=Project];
                SourceExpr=SaveToProject;
                CaptionClass=SaveToProjectCaption;
                Enabled=SaveToProjectEnabled }

    { 30  ;2   ;Field     ;
                CaptionML=[DEU=Permission Set;
                           ENU=Permission Set;
                           ESP=Permission Set;
                           FRA=Permission Set;
                           NLD=Machtigingenset;
                           DEA=Permission Set];
                SourceExpr=SaveToPermissionSet }

    { 9   ;1   ;Group     ;
                Name=Step2;
                Visible=Step2Visible }

    { 27  ;2   ;Field     ;
                CaptionClass=ctBasedOn }

    { 13  ;2   ;Field     ;
                SourceExpr=BasedOn;
                OnLookup=VAR
                           RecordPermissionsMgt@1000 : Codeunit 11102108;
                         BEGIN
                           EXIT(RecordPermissionsMgt.LookupPermissionSet(Text));
                         END;
                          }

    { 21  ;1   ;Group     ;
                Name=Step3;
                Visible=Step3Visible }

    { 14  ;2   ;Field     ;
                CaptionML=[DEU=The recording of the permissions is started. It is now time to do any NAV action that should be included in the permission set.;
                           ENU=The recording of the permissions is started. It is now time to do any NAV action that should be included in the permission set.;
                           ESP=The recording of the permissions is started. It is now time to do any NAV action that should be included in the permission set.;
                           FRA=The recording of the permissions is started. It is now time to do any NAV action that should be included in the permission set.;
                           NLD=De opname is gestart. U kunt nu alle NAV handelingen doen die aan de machtigingenset toegevoegd moeten worden.;
                           DEA=The recording of the permissions is started. It is now time to do any NAV action that should be included in the permission set.] }

    { 29  ;2   ;Field      }

    { 28  ;2   ;Field      }

    { 17  ;2   ;Field     ;
                CaptionML=[DEU=Press next when you are ready with the recording.;
                           ENU=Press next when you are ready with the recording.;
                           ESP=Press next when you are ready with the recording.;
                           FRA=Press next when you are ready with the recording.;
                           NLD=Druk volgende wanneer u klaar bent met de opname.;
                           DEA=Press next when you are ready with the recording.] }

    { 15  ;1   ;Group     ;
                Name=Step4;
                Visible=Step4Visible;
                GroupType=Group }

    { 16  ;2   ;Field     ;
                CaptionML=[DEU=The recording is stopped. Press finish to save the permissions.;
                           ENU=The recording is stopped. Press finish to save the permissions.;
                           ESP=The recording is stopped. Press finish to save the permissions.;
                           FRA=The recording is stopped. Press finish to save the permissions.;
                           NLD=De opname is gestopt. Druk op voltooien om de permissies op te slaan.;
                           DEA=The recording is stopped. Press finish to save the permissions.] }

  }
  CODE
  {
    VAR
      Project@1000 : Record 11102036;
      PermissionSetName@1001 : Text[30];
      BasedOn@1002 : Code[20];
      PermissionSetId@1003 : Code[20];
      ActivePageNo@1004 : Integer;
      NoOfPages@1005 : Integer;
      Type@1006 : ' ,Create New Permission Set,Modify Existing Permission Set,Create New Permission Set Based on Existing';
      Finished@1007 : Boolean;
      FinishEnabled@1008 : Boolean;
      NextEnabled@1009 : Boolean;
      PreviousEnabled@1010 : Boolean;
      SaveToPermissionSet@1011 : Boolean;
      SaveToProject@1012 : Boolean;
      SaveToProjectEnabled@1013 : Boolean;
      Started@1014 : Boolean;
      Step1Visible@1015 : Boolean;
      Step2Visible@1016 : Boolean;
      Step3Visible@1017 : Boolean;
      Step4Visible@1018 : Boolean;
      ctBasedOn@1019 : TextConst 'DEU=Based on which permission set?;ENU=Based on which permission set?;ESP=Based on which permission set?;FRA=Based on which permission set?;NLD=Gebaseerd op welke machtigingenset?;DEA=Based on which permission set?';
      ctDescribe@1020 : TextConst 'DEU=Describe your permission set.;ENU=Describe your permission set.;ESP=Describe your permission set.;FRA=Describe your permission set.;NLD=Omschrijf uw machtigingenset.;DEA=Describe your permission set.';
      ctSaveType@1021 : TextConst 'DEU=Where does the recording have to be saved?;ENU=Where does the recording have to be saved?;ESP=Where does the recording have to be saved?;FRA=Where does the recording have to be saved?;NLD=Waar moet de opname opgeslagen worden?;DEA=Where does the recording have to be saved?';
      ctWhatDoYouWant@1022 : TextConst 'DEU=What do you want to do?;ENU=What do you want to do?;ESP=What do you want to do?;FRA=What do you want to do?;NLD=Wat wilt u doen?;DEA=What do you want to do?';
      ctWhatIsTheName@1023 : TextConst 'DEU=What is the name of the permission set?;ENU=What is the name of the permission set?;ESP=What is the name of the permission set?;FRA=What is the name of the permission set?;NLD=Wat is de naam van de machtigingenset?;DEA=What is the name of the permission set?';

    LOCAL PROCEDURE PreviousPage@3();
    VAR
      NewPageNo@1000 : Integer;
    BEGIN
      NewPageNo := ActivePageNo - 1;

      WHILE NOT PageEnabled(NewPageNo) DO
        NewPageNo -= 1;

      ActivatePage(NewPageNo);
    END;

    LOCAL PROCEDURE NextPage@4();
    VAR
      NewPageNo@1000 : Integer;
    BEGIN
      ValidatePage(ActivePageNo);
      NewPageNo := ActivePageNo + 1;

      WHILE NOT PageEnabled(NewPageNo) DO
        NewPageNo += 1;

      ActivatePage(NewPageNo);
    END;

    LOCAL PROCEDURE Finish@7();
    VAR
      RecordPermissionsMgt@1000 : Codeunit 11102108;
    BEGIN
      RecordPermissionsMgt.CreatePermissionSet(Project."No.", PermissionSetId, PermissionSetName, BasedOn, SaveToProject, SaveToPermissionSet);
      Finished := TRUE;

      CurrPage.CLOSE;
    END;

    LOCAL PROCEDURE ActivatePage@1(PageNo@1000 : Integer);
    VAR
      CodeCoverage@1001 : Record 2000000049;
    BEGIN
      Step1Visible := PageNo = 1;
      Step2Visible := PageNo = 2;
      Step3Visible := PageNo = 3;
      Step4Visible := PageNo = 4;

      ActivePageNo := PageNo;
      PreviousEnabled := ActivePageNo > 1;
      NextEnabled := ActivePageNo < NoOfPages;
      FinishEnabled := ActivePageNo = NoOfPages;

      CASE PageNo OF

        3 :
          BEGIN
            CODECOVERAGEREFRESH;
            CodeCoverage.DELETEALL;
            CODECOVERAGELOG(TRUE);
            Started := TRUE;
          END;

        4 :
          CODECOVERAGELOG(FALSE);

      END;
    END;

    LOCAL PROCEDURE PageEnabled@5(PageNo@1000 : Integer) : Boolean;
    BEGIN
      CASE PageNo OF
        2 : EXIT(Type = Type::"Create New Permission Set Based on Existing");
      END;
      EXIT(TRUE);
    END;

    LOCAL PROCEDURE ValidatePage@2(PageNo@1000 : Integer);
    VAR
      PermissionSet@1001 : Record 2000000004;
      ctAlreadyExist@1002 : TextConst 'DEU=Permission set %1 already exist.;ENU=Permission set %1 already exist.;ESP=Permission set %1 already exist.;FRA=Permission set %1 already exist.;NLD=Machtigingenset %1 is al aanwezig.;DEA=Permission set %1 already exist.';
    BEGIN
      CASE PageNo OF
        1:
          BEGIN
            IF PermissionSetId = '' THEN
              ERROR(ctWhatIsTheName);
            IF Type <> Type::"Modify Existing Permission Set" THEN
              IF PermissionSet.GET(PermissionSetId) THEN
                ERROR(ctAlreadyExist, PermissionSetId);
            IF Type = Type::" " THEN
              ERROR(ctWhatDoYouWant);
            IF NOT SaveToProject AND NOT SaveToPermissionSet THEN
              ERROR(ctSaveType);

          END;
        2:
          IF Type = Type::"Create New Permission Set Based on Existing" THEN BEGIN
            IF BasedOn = '' THEN
              ERROR(ctBasedOn);
            PermissionSet.GET(BasedOn);
          END;
      END;
    END;

    PROCEDURE SetProject@6(Project2@1000 : Record 11102036);
    BEGIN
      Project := Project2;
    END;

    LOCAL PROCEDURE SaveToProjectCaption@8() : Text;
    VAR
      ctProject@1000 : TextConst 'DEU=Project;ENU=Project;ESP=Project;FRA=Project;NLD=Project;DEA=Project';
      ctProjectWithNo@1001 : TextConst 'DEU=Project %1;ENU=Project %1;ESP=Project %1;FRA=Project %1;NLD=Project %1;DEA=Project %1';
    BEGIN
      IF Project."No." = '' THEN
        EXIT(ctProject);

      EXIT(STRSUBSTNO(ctProjectWithNo, Project."No."));
    END;

    BEGIN
    END.
  }
}

