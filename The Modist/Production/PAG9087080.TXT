OBJECT Page 9087080 Store Allocation Matrix
{
  OBJECT-PROPERTIES
  {
    Date=05/10/16;
    Time=12:29:40 PM;
    Version List=NS2016.16;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Store Allocation Matrix;
               ENG=Store Allocation Matrix];
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table307;
    SourceTableView=SORTING(Item No.,Sequence,Variant Code);
    PageType=Worksheet;
    SourceTableTemporary=Yes;
    ShowFilter=No;
    OnOpenPage=BEGIN
                 mStoreAllocationMatrixMgt.CreateRecords(Rec, mData);
                 CurrPage.EDITABLE( NOT (mReadOnly));
                 UpdateSets(mUpdateMode::Init);
               END;

    OnAfterGetRecord=BEGIN
                       mStoreAllocationMatrixMgt.UpdateMatrixData(Rec, mData);
                     END;

    OnNewRecord=BEGIN
                  mStoreAllocationMatrixMgt.ClearData(Rec, mData);
                END;

    OnAfterGetCurrRecord=BEGIN
                           mStoreAllocationMatrixMgt.UpdateMatrixData(Rec, mData);
                         END;

    ActionList=ACTIONS
    {
      { 1000000002;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1000000006;1 ;Separator  }
      { 1000000008;1 ;Action    ;
                      Name=List;
                      CaptionML=[ENU=List;
                                 ENG=List];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=List;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 mStoreAllocationManagement.ShowStoreAllocation(mStoreAllocationCode, Rec."Item No.", '');
                                 CurrPage.UPDATE(TRUE);
                               END;
                                }
      { 1000000007;1 ;Separator  }
      { 1000000034;1 ;Action    ;
                      Name=PreviousSet;
                      CaptionML=[ENU=Previous Set;
                                 ENG=Previous Set];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousSet;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 UpdateSets(mUpdateMode::Back);
                               END;
                                }
      { 1000000035;1 ;Action    ;
                      Name=NextSet;
                      CaptionML=[ENU=Next Set;
                                 ENG=Next Set];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextSet;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 UpdateSets(mUpdateMode::Forward);
                               END;
                                }
      { 1000000042;1 ;Separator  }
      { 1000000039;1 ;Action    ;
                      Name=Item;
                      CaptionML=[ENU=Item;
                                 ENG=Item];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Item;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowItem();
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1000000000;0;Container;
                ContainerType=ContentArea }

    { 1000000001;1;Group  ;
                Name=Group;
                CaptionML=[ENU=Group;
                           ENG=Group];
                GroupType=Repeater }

    { 1000000005;2;Field  ;
                SourceExpr="Item No.";
                Editable=FALSE;
                OnLookup=BEGIN
                           ShowItem();
                         END;
                          }

    { 1000000003;2;Field  ;
                CaptionML=[ENU=Variant Code;
                           ENG=Variant Code];
                SourceExpr="Variant Code";
                Editable=FALSE }

    { 1000000004;2;Field  ;
                SourceExpr=Description;
                Editable=FALSE }

    { 1000000009;2;Field  ;
                CaptionML=[ENU=Quantity;
                           ENG=Quantity];
                DecimalPlaces=0:5;
                BlankZero=Yes;
                SourceExpr=Quantity;
                Editable=FALSE }

    { 1000000010;2;Field  ;
                CaptionML=[ENU=Quantity to Allocate;
                           ENG=Quantity to Allocate];
                DecimalPlaces=0:5;
                BlankZero=Yes;
                SourceExpr="Remaining Quantity";
                Editable=FALSE;
                Style=Attention;
                StyleExpr=TRUE }

    { 1000000052;2;Field  ;
                Name=Data1;
                CaptionML=[ENU=Decimal 1;
                           ENG=Decimal 1];
                DecimalPlaces=0:5;
                BlankZero=Yes;
                SourceExpr=mData[1];
                CaptionClass='3,' + mCaption[1];
                MinValue=0;
                Visible=mData1Enabled;
                Enabled=mData1Enabled;
                OnValidate=BEGIN
                             mStoreAllocationMatrixMgt.SetData(Rec, 1, mData);
                           END;
                            }

    { 1000000061;2;Field  ;
                Name=Data2;
                CaptionML=[ENU=Decimal 2;
                           ENG=Decimal 2];
                DecimalPlaces=0:5;
                BlankZero=Yes;
                SourceExpr=mData[2];
                CaptionClass='3,' + mCaption[2];
                MinValue=0;
                Visible=mData2Enabled;
                Enabled=mData2Enabled;
                OnValidate=BEGIN
                             mStoreAllocationMatrixMgt.SetData(Rec, 2, mData);
                           END;
                            }

    { 1000000060;2;Field  ;
                Name=Data3;
                CaptionML=[ENU=Decimal 1;
                           ENG=Decimal 1];
                DecimalPlaces=0:5;
                BlankZero=Yes;
                SourceExpr=mData[3];
                CaptionClass='3,' + mCaption[3];
                MinValue=0;
                Visible=mData3Enabled;
                Enabled=mData3Enabled;
                OnValidate=BEGIN
                             mStoreAllocationMatrixMgt.SetData(Rec, 3, mData);
                           END;
                            }

    { 1000000059;2;Field  ;
                Name=Data4;
                CaptionML=[ENU=Decimal 1;
                           ENG=Decimal 1];
                DecimalPlaces=0:5;
                BlankZero=Yes;
                SourceExpr=mData[4];
                CaptionClass='3,' + mCaption[4];
                MinValue=0;
                Visible=mData4Enabled;
                Enabled=mData4Enabled;
                OnValidate=BEGIN
                             mStoreAllocationMatrixMgt.SetData(Rec, 4, mData);
                           END;
                            }

    { 1000000058;2;Field  ;
                Name=Data5;
                CaptionML=[ENU=Decimal 1;
                           ENG=Decimal 1];
                DecimalPlaces=0:5;
                BlankZero=Yes;
                SourceExpr=mData[5];
                CaptionClass='3,' + mCaption[5];
                MinValue=0;
                Visible=mData5Enabled;
                Enabled=mData5Enabled;
                OnValidate=BEGIN
                             mStoreAllocationMatrixMgt.SetData(Rec, 5, mData);
                           END;
                            }

    { 1000000057;2;Field  ;
                Name=Data6;
                CaptionML=[ENU=Decimal 1;
                           ENG=Decimal 1];
                DecimalPlaces=0:5;
                BlankZero=Yes;
                SourceExpr=mData[6];
                CaptionClass='3,' + mCaption[6];
                MinValue=0;
                Visible=mData6Enabled;
                Enabled=mData6Enabled;
                OnValidate=BEGIN
                             mStoreAllocationMatrixMgt.SetData(Rec, 6, mData);
                           END;
                            }

    { 1000000056;2;Field  ;
                Name=Data7;
                CaptionML=[ENU=Decimal 1;
                           ENG=Decimal 1];
                DecimalPlaces=0:5;
                BlankZero=Yes;
                SourceExpr=mData[7];
                CaptionClass='3,' + mCaption[7];
                MinValue=0;
                Visible=mData7Enabled;
                Enabled=mData7Enabled;
                OnValidate=BEGIN
                             mStoreAllocationMatrixMgt.SetData(Rec, 7, mData);
                           END;
                            }

    { 1000000055;2;Field  ;
                Name=Data8;
                CaptionML=[ENU=Decimal 1;
                           ENG=Decimal 1];
                DecimalPlaces=0:5;
                BlankZero=Yes;
                SourceExpr=mData[8];
                CaptionClass='3,' + mCaption[8];
                MinValue=0;
                Visible=mData8Enabled;
                Enabled=mData8Enabled;
                OnValidate=BEGIN
                             mStoreAllocationMatrixMgt.SetData(Rec, 8, mData);
                           END;
                            }

    { 1000000054;2;Field  ;
                Name=Data9;
                CaptionML=[ENU=Decimal 1;
                           ENG=Decimal 1];
                DecimalPlaces=0:5;
                BlankZero=Yes;
                SourceExpr=mData[9];
                CaptionClass='3,' + mCaption[9];
                MinValue=0;
                Visible=mData9Enabled;
                Enabled=mData9Enabled;
                OnValidate=BEGIN
                             mStoreAllocationMatrixMgt.SetData(Rec, 9, mData);
                           END;
                            }

    { 1000000053;2;Field  ;
                Name=Data10;
                CaptionML=[ENU=Decimal 1;
                           ENG=Decimal 1];
                DecimalPlaces=0:5;
                BlankZero=Yes;
                SourceExpr=mData[10];
                CaptionClass='3,' + mCaption[10];
                MinValue=0;
                Visible=mData10Enabled;
                Enabled=mData10Enabled;
                OnValidate=BEGIN
                             mStoreAllocationMatrixMgt.SetData(Rec, 10, mData);
                           END;
                            }

  }
  CODE
  {
    VAR
      mStoreAllocationMatrixMgt@1000000015 : Codeunit 9087017;
      mStoreAllocationManagement@1000000006 : Codeunit 9087015;
      mStoreAllocationCode@1000000002 : Code[20];
      mReadOnly@1000000000 : Boolean;
      mUpdateMode@1000000027 : ' ,Init,Update,Back,Forward';
      mCaption@1000000004 : ARRAY [10] OF Text[100];
      mData@1000000047 : ARRAY [10] OF Decimal;
      mDataEnabled@1000000001 : ARRAY [10] OF Boolean;
      mData1Enabled@1000000025 : Boolean INDATASET;
      mData2Enabled@1000000026 : Boolean INDATASET;
      mData3Enabled@1000000038 : Boolean INDATASET;
      mData4Enabled@1000000039 : Boolean INDATASET;
      mData5Enabled@1000000040 : Boolean INDATASET;
      mData6Enabled@1000000041 : Boolean INDATASET;
      mData7Enabled@1000000042 : Boolean INDATASET;
      mData8Enabled@1000000043 : Boolean INDATASET;
      mData9Enabled@1000000044 : Boolean INDATASET;
      mData10Enabled@1000000045 : Boolean INDATASET;

    PROCEDURE Initialise@1000000000(pStoreAllocationCode@1000000000 : Code[20];pTableId@1000000003 : Integer;pTableView@1000000002 : Text[1024];pItemNoFieldId@1000000001 : Integer;pVariantCodeFieldId@1000000004 : Integer;pDescriptionFieldId@1000000005 : Integer;pQuantityFieldId@1000000006 : Integer;pQuantityAllocatedFieldId@1000000007 : Integer;pSequenceFieldId@1000000009 : Integer;pReadOnly@1000000008 : Boolean);
    BEGIN
      //DOC NS2015.1 - Initialising the page
      //  -> pStoreAllocationCode: Store allocation code
      //  -> pTableId: Table ID (source table for allocation)
      //  -> pTableView: Table view (source table for allocation)
      //  -> pItemNoFieldId: Item number field ID
      //  -> pVariantCodeFieldId: Variant code field ID
      //  -> pDescriptionFieldId: Description field ID
      //  -> pQuantityFieldId: Quantity field ID
      //  -> pQuantityAllocatedFieldId: Quantity allocated field ID
      //  -> pSequenceFieldId: Sequence field id
      //  -> pReadOnly: Read-only flag

      mStoreAllocationMatrixMgt.Initialise(pStoreAllocationCode, pTableId, pTableView, pItemNoFieldId, pVariantCodeFieldId, pDescriptionFieldId,
        pQuantityFieldId, pQuantityAllocatedFieldId, pSequenceFieldId);

      mStoreAllocationCode := pStoreAllocationCode;
      mReadOnly := pReadOnly;
    END;

    LOCAL PROCEDURE UpdateSets@1000000002(pUpdateMode@1000000000 : Integer);
    VAR
      lIndex@1000000001 : Integer;
      lIndexIncluded@1000000002 : Integer;
    BEGIN
      //DOC NS2015.1 - Updating matrix sets for given update mode
      //  -> pUpdateMode: The mode

      mStoreAllocationMatrixMgt.UpdateSets(pUpdateMode, mCaption, mDataEnabled);

      mData1Enabled := mDataEnabled[1];
      mData2Enabled := mDataEnabled[2];
      mData3Enabled := mDataEnabled[3];
      mData4Enabled := mDataEnabled[4];
      mData5Enabled := mDataEnabled[5];
      mData6Enabled := mDataEnabled[6];
      mData7Enabled := mDataEnabled[7];
      mData8Enabled := mDataEnabled[8];
      mData9Enabled := mDataEnabled[9];
      mData10Enabled := mDataEnabled[10];
    END;

    PROCEDURE ShowItem@1000000009();
    VAR
      lItem@1000000001 : Record 27;
    BEGIN
      //DOC NS2015.1 - Showing the current item

      lItem.GET(Rec."Item No.");
      PAGE.RUN(PAGE::"Item Card", lItem);
    END;

    BEGIN
    {
      //DOC NS2015.1  JH 04/11/2013 - Created
      //DOC NS2015.1  JH 20/02/2014 - Amendments
      //DOC NS2015.6  JH 09/04/2015 - Name changed to "*Store*" (clash with order stock allocation)
      //DOC NS2016.16 JH 07/09/2016 - nSemble 2016
    }
    END.
  }
}

