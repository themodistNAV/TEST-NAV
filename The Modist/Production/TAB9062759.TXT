OBJECT Table 9062759 Expenses Header
{
  OBJECT-PROPERTIES
  {
    Date=10/05/16;
    Time=12:00:00 PM;
    Version List=NA2016.15;
  }
  PROPERTIES
  {
    OnInsert=VAR
               NoSeriesMgt@1000000000 : Codeunit 396;
               SysBhv@1000000001 : Record 9062230;
             BEGIN
               IF ("User ID" = '') THEN
                 "User ID" := USERID;

               IF "No." = '' THEN BEGIN
                 NoSeriesToolkit.CreateNoSeriesAdv(tNoSeriesCode, tNoSeriesDescription, TRUE, FALSE, tNoSeriesStartingNo);
                 "No." := NoSeriesMgt.GetNextNo(tNoSeriesCode, TODAY, TRUE);
               END;

               IF UserSetup.GET("User ID") THEN BEGIN
                 UserSetup.TESTFIELD(UserSetup."Contact No.");
                 UserSetup.TESTFIELD(UserSetup."Vendor No.");
                 "Vendor No." := UserSetup."Vendor No.";
               END ELSE
                 ERROR(Text001, "User ID");

               IF ("Starting Date" = 0D) AND ("Ending date" = 0D) THEN
                 SetWeekRange(TODAY)
               ELSE IF ("Starting Date" = 0D) THEN
                 SetWeekRange("Ending date")
               ELSE IF ("Ending date" = 0D) THEN
                 SetWeekRange("Starting Date");
             END;

    OnDelete=VAR
               ExpenseLine@1000000000 : Record 9062760;
             BEGIN
               ExpenseLine.RESET();
               ExpenseLine.SETRANGE("Expense No.","No.");
               ExpenseLine.DELETEALL;
             END;

    CaptionML=[ENU=Expenses Header;
               ENG=Expenses Header];
    LookupPageID=Page9063121;
    DrillDownPageID=Page9063121;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;CaptionML=[ENU=No.;
                                                              ENG=No.] }
    { 2   ;   ;Starting Date       ;Date          ;OnValidate=BEGIN
                                                                SetWeekRange("Starting Date");
                                                              END;

                                                   CaptionML=[ENU=Starting Date;
                                                              ENG=Starting Date] }
    { 3   ;   ;Ending date         ;Date          ;OnValidate=BEGIN
                                                                SetWeekRange("Ending date");
                                                              END;

                                                   CaptionML=[ENU=Ending date;
                                                              ENG=Ending date] }
    { 4   ;   ;Vendor No.          ;Code20        ;TableRelation=Vendor.No.;
                                                   CaptionML=[ENU=Vendor No.;
                                                              ENG=Vendor No.] }
    { 5   ;   ;User ID             ;Code50        ;OnValidate=VAR
                                                                UserMgt@1000000000 : Codeunit 418;
                                                              BEGIN
                                                                UserMgt.ValidateUserID("User ID");
                                                              END;

                                                   OnLookup=VAR
                                                              UserMgt@1000000000 : Codeunit 418;
                                                            BEGIN
                                                              UserMgt.ValidateUserID("User ID");
                                                            END;

                                                   CaptionML=[ENU=User ID;
                                                              ENG=User ID] }
    { 6   ;   ;Total Amount        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Expenses Line".Amount WHERE (Expense No.=FIELD(No.)));
                                                   CaptionML=[ENU=Total Amount;
                                                              ENG=Total Amount] }
    { 7   ;   ;Total Amount LCY    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Expenses Line"."Amount LCY" WHERE (Expense No.=FIELD(No.)));
                                                   CaptionML=[ENU=Total Amount LCY;
                                                              ENG=Total Amount LCY] }
    { 8   ;   ;Approval Status     ;Option        ;CaptionML=[ENU=Approval Status;
                                                              ENG=Approval Status];
                                                   OptionCaptionML=[ENU=" ,Requested,Rejected,Approved";
                                                                    ENG=" ,Requested,Rejected,Approved"];
                                                   OptionString=[ ,Requested,Rejected,Approved] }
    { 9   ;   ;Processing Status   ;Option        ;CaptionML=[ENU=Processing Status;
                                                              ENG=Processing Status];
                                                   OptionCaptionML=[ENU=Unprocessed,Processed;
                                                                    ENG=Unprocessed,Processed];
                                                   OptionString=Unprocessed,Processed }
    { 10  ;   ;Invoice No.         ;Code20        ;CaptionML=[ENU=Invoice No.;
                                                              ENG=Invoice No.] }
    { 11  ;   ;Vendor Name         ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Vendor.Name WHERE (No.=FIELD(Vendor No.)));
                                                   CaptionML=[ENU=Vendor Name;
                                                              ENG=Vendor Name] }
    { 12  ;   ;No. of Lines        ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Expenses Line" WHERE (Expense No.=FIELD(No.)));
                                                   CaptionML=[ENU=No. of Lines;
                                                              ENG=No. of Lines];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Vendor No.,Processing Status             }
    {    ;User ID,Starting Date,Processing Status  }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ContactBusinessRelation@1000000000 : Record 5054;
      UserSetup@1000000001 : Record 9062729;
      Text001@1000000002 : TextConst 'ENU=User setup for 1% is missing.;ENG=User setup for 1% is missing.';
      errProcessed@1000000003 : TextConst 'ENU="Expenses for a week starting on %1 have been processed. ";ENG="Expenses for a week starting on %1 have been processed. "';
      errRequested@1000000004 : TextConst 'ENU="Expenses for a week starting on %1 have been sent for approval. ";ENG="Expenses for a week starting on %1 have been sent for approval. "';
      errApproved@1000000005 : TextConst 'ENU="Expenses for a week starting on %1 have been approved. ";ENG="Expenses for a week starting on %1 have been approved. "';
      tNoSeriesCode@1000000006 : TextConst 'ENU=EXPENSES;ENG=EXPENSES';
      tNoSeriesDescription@1000000007 : TextConst 'ENU=Expenses;ENG=Expenses';
      tNoSeriesStartingNo@1000000008 : TextConst 'ENU=EXP000001;ENG=EXP000001';
      NoSeriesToolkit@1000000009 : Codeunit 9062598;

    PROCEDURE SetWeekRange@1000000000(BaseDate@1000000002 : Date);
    VAR
      WeekDay@1000000000 : Integer;
      DateRec@1000000001 : Record 2000000007;
    BEGIN
      IF (BaseDate = 0D) THEN
        BaseDate := TODAY;
      "Starting Date" := CALCDATE('<CW-6D>', BaseDate);
      "Ending date" := CALCDATE('<CW>', BaseDate);
    END;

    LOCAL PROCEDURE FindVendor@1000000021(pLinkToTable@1000000000 : Integer;pNo@1000000001 : Code[20]) Value : Code[20];
    BEGIN
      ContactBusinessRelation.RESET();
      ContactBusinessRelation.SETRANGE(ContactBusinessRelation."Contact No.", pNo);
      ContactBusinessRelation.SETRANGE(ContactBusinessRelation."Link to Table", ContactBusinessRelation."Link to Table"::Vendor);
      ContactBusinessRelation.SETFILTER(ContactBusinessRelation."No.", '<>%1', '');
      IF (ContactBusinessRelation.FINDFIRST()) THEN
      BEGIN
        EXIT(ContactBusinessRelation."No.");
      END;
      EXIT('');
    END;

    LOCAL PROCEDURE CheckWeekRange@1000000001();
    BEGIN
    END;

    PROCEDURE CheckOpen@1000000002(ShowMessage@1000000000 : Boolean) : Boolean;
    BEGIN
      IF ("Processing Status" = "Processing Status"::Unprocessed) AND
        ("Approval Status" IN ["Approval Status"::" ", "Approval Status"::Rejected])
      THEN
        EXIT(TRUE);

      IF (ShowMessage) THEN BEGIN
        IF ("Processing Status" = "Processing Status"::Processed) THEN
          ERROR(errProcessed, "Starting Date");
        CASE ("Approval Status") OF
          "Approval Status"::Requested:
            ERROR(errRequested, "Starting Date");
          "Approval Status"::Approved:
            ERROR(errApproved, "Starting Date");
        END;
      END;

      EXIT(FALSE);
    END;

    BEGIN
    {
      //DOC NA2015.1  ?? 30/05/2014 - Created
      //DOC NA2016.14 ?? 02/03/2016 - Fixes
      //DOC NA2016.15 JH 15/04/2016 - CfMD amendments
    }
    END.
  }
}

