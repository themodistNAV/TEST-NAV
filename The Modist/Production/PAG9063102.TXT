OBJECT Page 9063102 nH Excel Web Services
{
  OBJECT-PROPERTIES
  {
    Date=10/05/16;
    Time=12:00:00 PM;
    Version List=NA2016.15;
  }
  PROPERTIES
  {
    CaptionML=[ENU=nH Excel Web Services;
               ENG=nH Excel Web Services];
    SourceTable=Table9062754;
    PageType=ListPlus;
    OnInit=BEGIN

             IF CURRENTCLIENTTYPE = CLIENTTYPE::OData THEN
               SETFILTER("User Name",'%1|%2',USERID,'');
           END;

    OnOpenPage=BEGIN

                 CheckSetupExists;
               END;

    OnAfterGetRecord=VAR
                       LocalStr@9062230 : Text;
                     BEGIN
                       IF CURRENTCLIENTTYPE = CLIENTTYPE::OData THEN BEGIN
                         "Run Time Filter":=  SmartFilterManagement.ApplySmartFilters("Run Time Filter");
                        END;
                     END;

    ActionList=ACTIONS
    {
      { 1000000007;  ;ActionContainer;
                      ActionContainerType=NewDocumentItems }
      { 9062230 ;1   ;Action    ;
                      Name=Add New Service;
                      CaptionML=[ENU=Add New Service;
                                 ENG=Add New Service];
                      ToolTipML=ENU=Add New Web Service;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Web;
                      PromotedCategory=New;
                      OnAction=VAR
                                 WsPage@9062229 : Page 9063136;
                                 WSrec@9062230 : Record 9062754;
                                 NPWS@9062231 : Record 9062754;
                                 TmpWSrec@9062232 : TEMPORARY Record 9062754;
                               BEGIN
                                 //This needs to get a new record that is already published from the Web service table

                                 //CurrPage.EDITABLE(TRUE);

                                 CLEAR(WsPage);
                                 //WsPage.LOOKUPMODE(FALSE);
                                 //WsPage.EDITABLE:=TRUE;
                                 //TmpWSrec.INIT;
                                 //TmpWSrec.INSERT(TRUE);
                                 //WsPage.SETRECORD(TmpWSrec);


                                 IF WsPage.RUNMODAL = ACTION::LookupOK THEN BEGIN

                                 {
                                 WsPage.GETRECORD(WSrec);

                                 //Now we need to add a new record to that table.

                                 NPWS.INIT;
                                 NPWS.VALIDATE("Object Type",WSrec."Object Type");
                                 NPWS.VALIDATE("Object ID",WSrec."Object ID");
                                 NPWS.VALIDATE("Service Name",WSrec."Service Name");

                                 IF NOT NPWS.INSERT(TRUE) THEN NPWS.MODIFY(TRUE);
                                 NPWS.VALIDATE("Friendly Name",'Enter Friendly Name');
                                 NPWS.MODIFY;
                                 NPWS.VALIDATE("Friendly Name",'Enter Friendly Name !');
                                 Rec:=NPWS;
                                 }

                                 END;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1000000000;0;Container;
                ContainerType=ContentArea }

    { 1000000001;1;Group  ;
                Name=Group;
                CaptionML=[ENU=Group;
                           ENG=Group];
                GroupType=Repeater }

    { 1000000003;2;Field  ;
                SourceExpr="Object Type";
                Editable=FALSE;
                OnValidate=BEGIN
                             CheckIsSystem();
                           END;
                            }

    { 1000000004;2;Field  ;
                SourceExpr="Object ID";
                Editable=FALSE;
                OnValidate=BEGIN
                             CheckIsSystem();
                           END;
                            }

    { 1000000006;2;Field  ;
                SourceExpr="Service Name";
                Editable=FALSE;
                OnValidate=BEGIN
                             CheckIsSystem();
                           END;
                            }

    { 1000000018;2;Field  ;
                SourceExpr="Display Group" }

    { 1000000009;2;Field  ;
                SourceExpr="Friendly Name" }

    { 1000000010;2;Field  ;
                SourceExpr="User Name" }

    { 1000000011;2;Field  ;
                SourceExpr="Access Type" }

    { 1000000012;2;Field  ;
                SourceExpr="Run Time Filter" }

    { 1000000013;2;Field  ;
                SourceExpr="Slicer Fields" }

    { 1000000014;2;Field  ;
                SourceExpr="Pivot Columns" }

    { 1000000015;2;Field  ;
                SourceExpr="Pivot Rows" }

    { 1000000016;2;Field  ;
                SourceExpr="Pivot Data" }

    { 1000000002;2;Field  ;
                SourceExpr=Id;
                Visible=FALSE }

    { 1000000019;2;Field  ;
                SourceExpr="System Record";
                Visible=FALSE }

    { 1000000017;1;Part   ;
                SubPageView=SORTING(Parent Entry No,Child Entry No)
                            ORDER(Ascending);
                SubPageLink=Parent Entry No=FIELD(Id);
                PagePartID=Page9063134;
                PartType=Page }

  }
  CODE
  {
    VAR
      TNPUtils@9062230 : Codeunit 9062229;
      TmpStr@9062231 : Text INDATASET;
      SmartFilterManagement@1000000000 : Codeunit 9062231;

    LOCAL PROCEDURE CheckSetupExists@9062230();
    VAR
      Ws@9062229 : Record 2000000076;
      NpWs@9062230 : Record 9062754;
    BEGIN
      //This runs when the page is opened and checks if the inital setup exists.If not then it creates the basic data.

        PopulateCustomWebServices
      {
      NpWs.SETFILTER("Service Name",'%1','NP_*');
      IF NOT NpWs.FINDSET THEN BEGIN
        PopulateCustomWebServices
        END;
        }
    END;

    LOCAL PROCEDURE PopulateCustomWebServices@1000000005();
    VAR
      webservices@1000000000 : Record 2000000076;
      NewWs@1000000001 : Record 9062754;
    BEGIN
      //Customer Area

      //Create base system services
      CreateCustomWebService(webservices."Object Type"::Page,9063102,'NP_ExcelServices','Excel Services','','','','','','',TRUE);
      CreateCustomWebService(webservices."Object Type"::Page,9063134,'NP_ExcelServicesChildren','Excel Services Children','','','','','','',TRUE);
      CreateCustomWebService(webservices."Object Type"::Page,9063133,'NP_Logout','Excel Logout','','','','','','',TRUE);
      CreateCustomWebService(webservices."Object Type"::Query,9062238,'NP_QuickReportDefinitions','Quick Report Definitions','','','','','','',TRUE);
      CreateCustomWebService(webservices."Object Type"::Page,9063135,'NP_QuickReportFields','Quick Report Fields','','','','','','',TRUE);



      //Now add the std web services
      CreateCustomWebService(webservices."Object Type"::Page,9063142,'NP_QuickReport','Quick Reports','','','','','','',FALSE);

      CreateCustomWebService(webservices."Object Type"::Page,9063107,'NP_Customer','Customers','No,Name,Country Region Code,Salesperson Code,Customer Posting Group,Customer Disc Group'
      ,'No','Country Region Code','Sales To Date','','',FALSE);

      CreateCustomWebService(webservices."Object Type"::Page,9063115,'NP_CustLedgEntries','Customer Ledger Entries',
      'Document Type,Customer No,Global Dimension 1 Code,Salesperson Code,Currency Code,Source Code,Week Of Year,Day Of Month,Day Of Week,Month Of Year'
      ,'','','','','',FALSE);

      CreateCustomWebService(webservices."Object Type"::Page,9063113,'NP_SalesInvoice','Sales Invoices','Source No,Item No,Location Code,Document Type,Week Of Year,Day Of Month,Day Of Week,Month Of Year'
      ,'','','','','',FALSE);

      CreateCustomWebService(webservices."Object Type"::Page,9063112,'NP_SalesOrder','Sales Orders',
      'Document Type,Sell to Customer No,Location Code,Posting Group,Gen Prod Posting Group,Gen Bus Posting Group,Week Of Year,Day Of Month,Day Of Week,Month Of Year'
      ,'Document Type','Posting Group','Item Sales Qty','','',FALSE);

      //Items
      CreateCustomWebService(webservices."Object Type"::Page,9063108,'NP_Items','Items','No,Inventory Posting Group,Vendor Name,Gen Prod Posting Group,Item Category Code,Product Group Code'
      ,'','','','','',FALSE);

      CreateCustomWebService(webservices."Object Type"::Page,9063116,'NP_ItemLedgerEntry','Item Ledger',
      'Item No,Variant Code,Entry Type,Company Name,Document No,Location Code,Week Of Year,Day Of Month,Day Of Week,Month Of Year'
      ,'','','','','',FALSE);

      CreateCustomWebService(webservices."Object Type"::Page,9063109,'NP_LocationList','Locations',
      'Location Code,Item No,Variant Code,Zone Code,Bin Code,Source Code,Source Document,Week Of Year,Day Of Month,Day Of Week,Month Of Year'
      ,'','','','','',FALSE);

      //Vendor
      CreateCustomWebService(webservices."Object Type"::Page,9063114,'NP_Vendor','Vendors','No,Country Region Code,Purchaser Code,Vendor Posting Group,Currency Code,Gen Bus Posting Group'
      ,'','','','','',FALSE);

      CreateCustomWebService(webservices."Object Type"::Page,9063117,'NP_VendorLedgerEntry','Vendor Ledger','Document Type,Document No,Vendor No,Source Code,Vend Name,Vend Vendor Posting Group,Week Of Year,Day Of Month,Day Of Week,Month Of Year'
      ,'Document Type,Source Code','Vendor Posting Group','','','',FALSE);

      CreateCustomWebService(webservices."Object Type"::Page,9063110,'NP_PurchaseOrder','Purchase Orders',
      'Document Type,Document No,Buy From Vendor No,No,Location Code,Posting Group,Gen Bus Posting Group,Gen Prod Posting Group,Item Invntory Posting Group,Week Of Year,Day Of Month,Day Of Week,Month Of Year'
      ,'','','','','',FALSE);

      CreateCustomWebService(webservices."Object Type"::Page,9063111,'NP_PurchaseInvoice','Purchase Invoices','Entry Type,Source No,Document No,Location Code,Source Type,Document Type,Week Of Year,Day Of Month,Day Of Week,Month Of Year'
      ,'','','','','',FALSE);

      //GL
      CreateCustomWebService(webservices."Object Type"::Page,9063105,'NP_GLAccounts','GL Accounts',
      'No,Name,Income/Balance,Account Type,Gen. Posting Type,Gen Bus Posting Group,Gen Prod Posting Group'
      ,'','','','','',FALSE);

      CreateCustomWebService(webservices."Object Type"::Page,9063106,'NP_GLEntries','GL Entries',
      'G L Account No,G L Account Name,GL Code,Document Type,Document No,User Id,Source Code,Journal Batch Name,Gen Posting Type,Gen Bus Posting Group,Bal Account Type,Source Type,Week Of Year,Day Of Month,Day Of Week,Month Of Year'
      ,'','','','','',FALSE);
      //'G L Account No,Document Type,Document No,User Id,Source Code,Journal Batch Name,Gen Posting Type,Gen Bus Posting Group,Bal Account Type,Source Type,G L Account Name,Week Of Year,Day Of Month,Day Of Week,Month Of Year');

      //CreateCustomWebService(ObjectType : Option;OptionId : Integer;ServiceName : Text;FriendlyName : Text;SlicerStr : Text[250];PivotColStr : Text[250];PivotRowStr : Text[250];PivotDataStr : Text[250];DisplayGroup : Text[30])

      //My Stuff
      CreateCustomWebService(webservices."Object Type"::Page,9062282,'NP_MyWorkflows','My Workflows','','','','','','',FALSE);
      CreateCustomWebService(webservices."Object Type"::Page,9062518,'NP_MyTasks','My Tasks','','','','','','',FALSE);
      CreateCustomWebService(webservices."Object Type"::Page,9063127,'NP_MyExpenses','My Expenses','','','','','','',FALSE);
      CreateCustomWebService(webservices."Object Type"::Page,9063119,'NP_MyContacts','My Contacts','','','','','','$filter=Salesperson_Code eq ''MYCONTACTNO''',FALSE);
      CreateCustomWebService(webservices."Object Type"::Page,5132,'NP_MyOpportunities','My Opportunities','','','','','','$filter=Salesperson_Code eq ''MYCONTACTNO''',FALSE);
      CreateCustomWebService(webservices."Object Type"::Page,9062571,'NP_MyChecklists','My Checklists','','','','','','$filter=Assigned_to_Contact_No eq ''MYCONTACTNO''',FALSE);
    END;

    LOCAL PROCEDURE CreateCustomWebService@1000000001(ObjectType@1000000002 : Option;OptionId@1000000003 : Integer;ServiceName@1000000004 : Text;FriendlyName@1000000005 : Text;SlicerStr@9062229 : Text[250];PivotColStr@1000000006 : Text[250];PivotRowStr@1000000007 : Text[250];PivotDataStr@1000000008 : Text[250];DisplayGroup@1000000009 : Text[30];FilterStr@9062230 : Text[250];IsSystem@9062232 : Boolean);
    VAR
      webservices@1000000001 : Record 2000000076;
      NewWs@1000000000 : Record 9062754;
      Obj@9062231 : Record 2000000001;
    BEGIN

      //Does the object exist

      Obj.SETRANGE(Obj.ID,OptionId);
      Obj.SETRANGE(Obj.Type,ObjectType);
      Obj.SETRANGE(Obj.Compiled,TRUE);

      IF NOT Obj.FINDFIRST THEN EXIT;


      //First create the standard web service so that it exists and can be called
      webservices.VALIDATE("Object Type",ObjectType);
      webservices.VALIDATE("Object ID",OptionId);
      webservices.VALIDATE("Service Name",ServiceName);
      webservices.VALIDATE(Published,TRUE);
      IF NOT webservices.INSERT(TRUE) THEN webservices.MODIFY(TRUE);


      //This creates a new Enhanced Web Service entry which we use to populate the custom list in the ribbon
      IF IsSystem=FALSE THEN
             //Dont Add our Base Service into the ones we can call.
             BEGIN
               NewWs.SETRANGE("Object ID",OptionId);
               NewWs.SETRANGE("Object Type",ObjectType);
               NewWs.SETFILTER("Service Name",ServiceName);
               IF NOT NewWs.FINDFIRST THEN
                 BEGIN
                       NewWs.INIT;
                       NewWs."Object Type":=webservices."Object Type";
                       NewWs."Object ID":=webservices."Object ID";
                       NewWs."Service Name":=webservices."Service Name";
                       NewWs."Friendly Name":=FriendlyName;
                       NewWs."Slicer Fields":=SlicerStr;
                       NewWs."System Record":= TRUE;
                       NewWs."Pivot Columns":=PivotColStr;
                       NewWs."Pivot Data":=PivotDataStr;
                       NewWs."Pivot Rows":=PivotRowStr;
                       NewWs."Run Time Filter":=FilterStr;
               IF NOT NewWs.INSERT THEN NewWs.MODIFY;
            END;
         END;
    END;

    LOCAL PROCEDURE CheckIsSystem@1000000012();
    BEGIN
      IF "System Record" THEN ERROR('Cannot edit System Records');
    END;

    BEGIN
    {
      //This is a list of Sweb services that can be read by the Excel client
      //Need to add functions here to get / copy an exisitng web service into this table so that we can use this page as the base URL list for the client
      //DOC NA2016.10 BM 29/10/2015 - Created
      //DOC NA2016.12 JH 28/01/2016 - Smart filters
      //DOC NA2016.15 JH 10/05/2016 - CfMD amendments
    }
    END.
  }
}

