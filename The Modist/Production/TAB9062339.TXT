OBJECT Table 9062339 Planning Board Table Link
{
  OBJECT-PROPERTIES
  {
    Date=10/05/16;
    Time=12:00:00 PM;
    Version List=NA2016.15;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               Rec.TESTFIELD("Planning Board Code");
               CheckModifyPermission();
               IF (Rec.ID = 0) THEN
                 Rec.VALIDATE(ID, FindNewId());
               IF (Rec.Sequence = 0) THEN
                 Rec.VALIDATE(Sequence, FindNewSequence());
               UpdateFromPlanningBoardTables();
               TnpToolkit.UpdateCreatedBy(Rec."Created By", Rec."Created Date Time");
             END;

    OnModify=BEGIN
               CheckModifyPermission();
               TnpToolkit.UpdateModifiedBy(Rec."Modified By", Rec."Modified Date Time");
             END;

    OnDelete=BEGIN
               CheckModifyPermission();
             END;

    OnRename=BEGIN
               CheckModifyPermission();
             END;

    CaptionML=[ENU=Planning Board Table Link;
               ENG=Planning Board Table Link];
  }
  FIELDS
  {
    { 1   ;   ;Planning Board Code ;Code20        ;TableRelation="Planning Board Header";
                                                   CaptionML=[ENU=Planning Board Code;
                                                              ENG=Planning Board Code] }
    { 2   ;   ;ID                  ;Integer       ;CaptionML=[ENU=ID;
                                                              ENG=ID] }
    { 10  ;   ;Resource Table ID   ;Integer       ;TableRelation=AllObj."Object ID" WHERE (Object Type=CONST(Table));
                                                   OnValidate=BEGIN
                                                                IF (Rec."Resource Table ID" <> xRec."Resource Table ID") THEN
                                                                  Rec.VALIDATE("Resource Table Field ID", 0);
                                                                Rec.CALCFIELDS("Resource Table Caption");
                                                              END;

                                                   CaptionML=[ENU=Resource Table ID;
                                                              ENG=Resource Table ID] }
    { 11  ;   ;Resource Table Caption;Text50      ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObjWithCaption."Object Caption" WHERE (Object Type=CONST(Table),
                                                                                                                Object ID=FIELD(Resource Table ID)));
                                                   CaptionML=[ENU=Resource Table Caption;
                                                              ENG=Resource Table Caption];
                                                   Editable=No }
    { 12  ;   ;Resource Table Field ID;Integer    ;TableRelation=Field.No. WHERE (TableNo=FIELD(Resource Table ID));
                                                   OnValidate=BEGIN
                                                                Rec.CALCFIELDS("Resource Table Field Caption");
                                                              END;

                                                   CaptionML=[ENU=Resource Table Field ID;
                                                              ENG=Resource Table Field ID] }
    { 13  ;   ;Resource Table Field Caption;Text50;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Field."Field Caption" WHERE (TableNo=FIELD(Resource Table ID),
                                                                                                   No.=FIELD(Resource Table Field ID)));
                                                   CaptionML=[ENU=Resource Table Field Caption;
                                                              ENG=Resource Table Field Caption];
                                                   Editable=No }
    { 14  ;   ;Entry Table ID      ;Integer       ;TableRelation=AllObj."Object ID" WHERE (Object Type=CONST(Table));
                                                   OnValidate=BEGIN
                                                                IF (Rec."Entry Table ID" <> xRec."Entry Table ID") THEN
                                                                  Rec.VALIDATE("Entry Table Field ID", 0);
                                                                Rec.CALCFIELDS("Entry Table Caption");
                                                              END;

                                                   CaptionML=[ENU=Entry Table ID;
                                                              ENG=Entry Table ID] }
    { 15  ;   ;Entry Table Caption ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObjWithCaption."Object Caption" WHERE (Object Type=CONST(Table),
                                                                                                                Object ID=FIELD(Entry Table ID)));
                                                   CaptionML=[ENU=Entry Table Caption;
                                                              ENG=Entry Table Caption];
                                                   Editable=No }
    { 16  ;   ;Entry Table Field ID;Integer       ;TableRelation=Field.No. WHERE (TableNo=FIELD(Entry Table ID));
                                                   OnValidate=BEGIN
                                                                Rec.CALCFIELDS("Entry Table Field Caption");
                                                              END;

                                                   CaptionML=[ENU=Entry Table Field ID;
                                                              ENG=Entry Table Field ID] }
    { 17  ;   ;Entry Table Field Caption;Text50   ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Field."Field Caption" WHERE (TableNo=FIELD(Entry Table ID),
                                                                                                   No.=FIELD(Entry Table Field ID)));
                                                   CaptionML=[ENU=Entry Table Field Caption;
                                                              ENG=Entry Table Field Caption];
                                                   Editable=No }
    { 18  ;   ;Sequence            ;Integer       ;CaptionML=[ENU=Sequence;
                                                              ENG=Sequence];
                                                   MinValue=0 }
    { 1000;   ;Created By          ;Code50        ;OnLookup=BEGIN
                                                              TnpToolkit.UserLookup(Rec."Created By", FALSE);
                                                            END;

                                                   CaptionML=[ENU=Created By;
                                                              ENG=Created By] }
    { 1001;   ;Created Date Time   ;DateTime      ;CaptionML=[ENU=Created Date Time;
                                                              ENG=Created Date Time] }
    { 1002;   ;Modified By         ;Code50        ;OnLookup=BEGIN
                                                              TnpToolkit.UserLookup(Rec."Modified By", FALSE);
                                                            END;

                                                   CaptionML=[ENU=Modified By;
                                                              ENG=Modified By] }
    { 1003;   ;Modified Date Time  ;DateTime      ;CaptionML=[ENU=Modified Date Time;
                                                              ENG=Modified Date Time] }
  }
  KEYS
  {
    {    ;Planning Board Code,ID                  ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      PlanningBoardHeader@1000000001 : Record 9062337;
      PlanningBoardTable@9062230 : Record 9062338;
      ObjectFieldToolkit@1000000000 : Codeunit 9062343;
      TnpToolkit@9062229 : Codeunit 9062230;

    PROCEDURE FindNewId@9062234() : Integer;
    VAR
      lPlanningBoardTableLink@9062229 : Record 9062339;
    BEGIN
      //DOC NA2016.12 - Returning new ID
      //  <- The ID

      lPlanningBoardTableLink.RESET();
      lPlanningBoardTableLink.SETRANGE("Planning Board Code", Rec."Planning Board Code");
      IF (lPlanningBoardTableLink.FINDLAST()) THEN
        EXIT(lPlanningBoardTableLink.ID + 1)
      ELSE
        EXIT(1);
    END;

    PROCEDURE FindNewSequence@9062233() : Integer;
    VAR
      lPlanningBoardTableLink@1000000000 : Record 9062339;
    BEGIN
      //DOC NA2016.12 - Returning new index
      //  <- The index

      lPlanningBoardTableLink.RESET();
      lPlanningBoardTableLink.SETCURRENTKEY("Planning Board Code", Sequence);
      IF (lPlanningBoardTableLink.FINDLAST()) THEN
        EXIT(lPlanningBoardTableLink.Sequence + 10)
      ELSE
        EXIT(10);
    END;

    PROCEDURE InitialiseNewRecord@9062229();
    BEGIN
      //DOC NA2016.12 - Initialising new record

      UpdateFromPlanningBoardTables();
    END;

    PROCEDURE UpdateFromPlanningBoardTables@9062230();
    BEGIN
      //DOC NA2016.12 - Update record from planning board tables

      IF ( NOT (PlanningBoardTable.GET(Rec."Planning Board Code", PlanningBoardTable."Table Type"::Resource))) THEN
        CLEAR(PlanningBoardTable);
      Rec.VALIDATE("Resource Table ID", PlanningBoardTable."Table ID");

      IF ( NOT (PlanningBoardTable.GET(Rec."Planning Board Code", PlanningBoardTable."Table Type"::Entry))) THEN
        CLEAR(PlanningBoardTable);
      Rec.VALIDATE("Entry Table ID", PlanningBoardTable."Table ID");
    END;

    PROCEDURE ValidateResourceTableFieldText@1000000000(VAR pResourceTableFieldText@1000000000 : Text) : Boolean;
    VAR
      lResult@1000000001 : Boolean;
    BEGIN
      //DOC NA2016.12 - Validating resource table field text
      //  <> pResourceTableFieldText: The text
      //  <- TRUE = Field changed, update whatever you have to, FALSE = You may go to a pub

      lResult := FALSE;

      xRec."Resource Table Field ID" := Rec."Resource Table Field ID";
      ObjectFieldToolkit.ValidateFieldName(Rec."Resource Table ID", Rec."Resource Table Field ID", pResourceTableFieldText, FALSE);
      IF (Rec."Resource Table Field ID" <> xRec."Resource Table Field ID") THEN
      BEGIN
        Rec.VALIDATE("Resource Table Field ID");
        lResult := TRUE;
      END;

      EXIT(lResult);
    END;

    PROCEDURE ResourceTableFieldLookup@1000000001() : Boolean;
    VAR
      lResult@1000000000 : Boolean;
    BEGIN
      //DOC NA2016.12 - Performing resource table field lookup
      //  <- TRUE = Field changed, update whatever you have to, FALSE = You may go to a pub

      lResult := FALSE;
      xRec."Resource Table Field ID" := Rec."Resource Table Field ID";
      IF (ObjectFieldToolkit.FieldLookup(Rec."Resource Table ID", Rec."Resource Table Field ID")) THEN
        IF (Rec."Resource Table Field ID" <> xRec."Resource Table Field ID") THEN
        BEGIN
          Rec.VALIDATE("Resource Table Field ID");
          lResult := TRUE;
        END;

      EXIT(lResult);
    END;

    PROCEDURE ValidateEntryTableFieldText@1000000010(VAR pEntryTableFieldText@1000000000 : Text) : Boolean;
    VAR
      lResult@1000000001 : Boolean;
    BEGIN
      //DOC NA2016.12 - Validating entry table field text
      //  <> pEntryTableFieldText: The text
      //  <- TRUE = Field changed, update whatever you have to, FALSE = You may go to a pub

      lResult := FALSE;

      xRec."Entry Table Field ID" := Rec."Entry Table Field ID";
      ObjectFieldToolkit.ValidateFieldName(Rec."Entry Table ID", Rec."Entry Table Field ID", pEntryTableFieldText, FALSE);
      IF (Rec."Entry Table Field ID" <> xRec."Entry Table Field ID") THEN
      BEGIN
        Rec.VALIDATE("Entry Table Field ID");
        lResult := TRUE;
      END;

      EXIT(lResult);
    END;

    PROCEDURE EntryTableFieldLookup@1000000009() : Boolean;
    VAR
      lResult@1000000000 : Boolean;
    BEGIN
      //DOC NA2016.12 - Performing entry table field lookup
      //  <- TRUE = Field changed, update whatever you have to, FALSE = You may go to a pub

      lResult := FALSE;
      xRec."Entry Table Field ID" := Rec."Entry Table Field ID";
      IF (ObjectFieldToolkit.FieldLookup(Rec."Entry Table ID", Rec."Entry Table Field ID")) THEN
        IF (Rec."Entry Table Field ID" <> xRec."Entry Table Field ID") THEN
        BEGIN
          Rec.VALIDATE("Entry Table Field ID");
          lResult := TRUE;
        END;

      EXIT(lResult);
    END;

    LOCAL PROCEDURE CheckModifyPermission@1000000039();
    VAR
      lEnhancedPermissionsMgt@1000000000 : Codeunit 9062277;
    BEGIN
      //DOC NA2016.15 - Checking modify permission for the planning board

      IF ( NOT (PlanningBoardHeader.GET(Rec."Planning Board Code"))) THEN
        EXIT;
      lEnhancedPermissionsMgt.CheckPlanningBoardModifyPermission(PlanningBoardHeader, USERID());
    END;

    BEGIN
    {
      //DOC NA2016.12 JH 23/09/2015 - Created
      //DOC NA2016.15 JH 05/05/2016 - Enhanced permissions
    }
    END.
  }
}

