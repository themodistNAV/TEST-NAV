OBJECT Table 11102084 OM - Check Transferfields Fld.
{
  OBJECT-PROPERTIES
  {
    Date=19/11/15;
    Time=12:00:00 PM;
    Version List=OMA10.00;
  }
  PROPERTIES
  {
    DataPerCompany=No;
    CaptionML=[DEU=Check Transferfields Field;
               ENU=Check Transferfields Field;
               ESP=Check Transferfields Field;
               FRA=Check Transferfields Field;
               NLD=Controleer transferfields veld;
               DEA=Check Transferfields Field];
    LookupPageID=Page11102120;
    DrillDownPageID=Page11102120;
  }
  FIELDS
  {
    { 1   ;   ;From Table No.      ;Integer       ;CaptionML=[DEU=From Table No.;
                                                              ENU=From Table No.;
                                                              ESP=From Table No.;
                                                              FRA=From Table No.;
                                                              NLD=Van tabelnr.;
                                                              DEA=From Table No.] }
    { 2   ;   ;To Table No.        ;Integer       ;CaptionML=[DEU=To Table No.;
                                                              ENU=To Table No.;
                                                              ESP=To Table No.;
                                                              FRA=To Table No.;
                                                              NLD=Naar tabelnr.;
                                                              DEA=To Table No.] }
    { 3   ;   ;Field No.           ;Integer       ;CaptionML=[DEU=Field No.;
                                                              ENU=Field No.;
                                                              ESP=Field No.;
                                                              FRA=Field No.;
                                                              NLD=Veldnr.;
                                                              DEA=Field No.] }
    { 4   ;   ;From Field Name     ;Text30        ;CaptionML=[DEU=From Field Name;
                                                              ENU=From Field Name;
                                                              ESP=From Field Name;
                                                              FRA=From Field Name;
                                                              NLD=Van veldnaam;
                                                              DEA=From Field Name] }
    { 5   ;   ;From Field Type     ;Text30        ;CaptionML=[DEU=From Field Type;
                                                              ENU=From Field Type;
                                                              ESP=From Field Type;
                                                              FRA=From Field Type;
                                                              NLD=Van veldsoort;
                                                              DEA=From Field Type] }
    { 6   ;   ;To Field Name       ;Text30        ;CaptionML=[DEU=To Field Name;
                                                              ENU=To Field Name;
                                                              ESP=To Field Name;
                                                              FRA=To Field Name;
                                                              NLD=Naar veldnaam;
                                                              DEA=To Field Name] }
    { 7   ;   ;To Field Type       ;Text30        ;CaptionML=[DEU=To Field Type;
                                                              ENU=To Field Type;
                                                              ESP=To Field Type;
                                                              FRA=To Field Type;
                                                              NLD=Naar veldsoort;
                                                              DEA=To Field Type] }
    { 8   ;   ;Warning             ;Boolean       ;CaptionML=[DEU=Warning;
                                                              ENU=Warning;
                                                              ESP=Warning;
                                                              FRA=Warning;
                                                              NLD=Waarschuwing;
                                                              DEA=Warning] }
    { 9   ;   ;Is Error            ;Boolean       ;CaptionML=[DEU=Error;
                                                              ENU=Error;
                                                              ESP=Error;
                                                              FRA=Error;
                                                              NLD=Error;
                                                              DEA=Error] }
    { 10  ;   ;From Table Name     ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Object.Name WHERE (Type=CONST(Table),
                                                                                         Company Name=FILTER(''),
                                                                                         ID=FIELD(From Table No.)));
                                                   CaptionML=[DEU=From Table Name;
                                                              ENU=From Table Name;
                                                              ESP=From Table Name;
                                                              FRA=From Table Name;
                                                              NLD=Van tabelnaam;
                                                              DEA=From Table Name];
                                                   Editable=No }
    { 11  ;   ;To Table Name       ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Object.Name WHERE (Type=CONST(Table),
                                                                                         Company Name=FILTER(''),
                                                                                         ID=FIELD(To Table No.)));
                                                   CaptionML=[DEU=To Table Name;
                                                              ENU=To Table Name;
                                                              ESP=To Table Name;
                                                              FRA=To Table Name;
                                                              NLD=Naar tabelnaam;
                                                              DEA=To Table Name];
                                                   Editable=No }
    { 12  ;   ;From Field Class    ;Option        ;CaptionML=[DEU=From Field Class;
                                                              ENU=From Field Class;
                                                              ESP=From Field Class;
                                                              FRA=From Field Class;
                                                              NLD=Van field class;
                                                              DEA=From Field Class];
                                                   OptionCaptionML=[DEU=" ,Normal,FlowField,FlowFilter";
                                                                    ENU=" ,Normal,FlowField,FlowFilter";
                                                                    ESP=" ,Normal,FlowField,FlowFilter";
                                                                    FRA=" ,Normal,FlowField,FlowFilter";
                                                                    NLD=" ,Normal,FlowField,FlowFilter";
                                                                    DEA=" ,Normal,FlowField,FlowFilter"];
                                                   OptionString=[ ,Normal,FlowField,FlowFilter] }
    { 13  ;   ;To Field Class      ;Option        ;CaptionML=[DEU=To Field Class;
                                                              ENU=To Field Class;
                                                              ESP=To Field Class;
                                                              FRA=To Field Class;
                                                              NLD=Naar field class;
                                                              DEA=To Field Class];
                                                   OptionCaptionML=[DEU=" ,Normal,FlowField,FlowFilter";
                                                                    ENU=" ,Normal,FlowField,FlowFilter";
                                                                    ESP=" ,Normal,FlowField,FlowFilter";
                                                                    FRA=" ,Normal,FlowField,FlowFilter";
                                                                    NLD=" ,Normal,FlowField,FlowFilter";
                                                                    DEA=" ,Normal,FlowField,FlowFilter"];
                                                   OptionString=[ ,Normal,FlowField,FlowFilter] }
    { 14  ;   ;Known               ;Boolean       ;CaptionML=[DEU=Known;
                                                              ENU=Known;
                                                              ESP=Known;
                                                              FRA=Known;
                                                              NLD=Bekend;
                                                              DEA=Known] }
  }
  KEYS
  {
    {    ;From Table No.,To Table No.,Field No.   ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE CreateSelectedFields@1(VAR CheckTransferfieldsFld@1000 : Record 11102084;WithCALCode@1001 : Boolean);
    VAR
      FromCALHistoryObject@1002 : Record 11102052;
      ToCALHistoryObject@1003 : Record 11102052;
      FromCALHistoryLine@1004 : Record 11102053;
      ToCALHistoryLine@1005 : Record 11102053;
      Object@1006 : Record 2000000001;
      TmpCheckObject@1007 : TEMPORARY Record 2000000001;
      TmpToObject@1008 : TEMPORARY Record 2000000001;
      ObjectMgt@1009 : Codeunit 11102046;
      CheckCALHistory@1010 : Codeunit 11102063;
      FileHandler@1011 : Codeunit 11102097;
      oFile@1012 : File;
      StartDate@1013 : Date;
      StartTime@1014 : Time;
      Directory@1015 : Text;
      FileName@1016 : Text;
      CodeSectionStartPos@1017 : Integer;
      CurrFieldNo@1018 : Integer;
      FromPrevLineNo@1019 : Integer;
      ToPrevLineNo@1020 : Integer;
      CopyingStarted@1021 : Boolean;
      FirstFieldExpected@1022 : Boolean;
      FromFieldsSectionOpen@1023 : Boolean;
      SkipThisField@1024 : Boolean;
      ToFieldsSectionOpen@1025 : Boolean;
      ctUpdateFileName@1026 : TextConst 'DEU=AddFields.txt;ENU=AddFields.txt;ESP=AddFields.txt;FRA=AddFields.txt;NLD=AddFields.txt;DEA=AddFields.txt';
    BEGIN
      StartDate := TODAY;
      StartTime := TIME;

      IF CheckTransferfieldsFld.FINDSET THEN
        REPEAT
          AddToTempTable(CheckTransferfieldsFld."From Table No.", TmpCheckObject);
          AddToTempTable(CheckTransferfieldsFld."To Table No.", TmpCheckObject);
          AddToTempTable(CheckTransferfieldsFld."To Table No.", TmpToObject);
        UNTIL CheckTransferfieldsFld.NEXT = 0;

      CheckCALHistory.RunWithObjectRange(TmpCheckObject);

      IF TmpToObject.FINDSET THEN
        REPEAT

          Directory := FileHandler.TempDirectory;
          FileName := Directory + ctUpdateFileName;

          IF EXISTS(FileName) THEN
            ERASE(FileName);
          oFile.TEXTMODE(TRUE);
          oFile.CREATE(FileName);

          ToCALHistoryObject.GoToLastRecord(TmpToObject.Type, TmpToObject.ID);
          ToCALHistoryLine.SETRANGE("Entry No.", ToCALHistoryObject."Entry No.");

          ToPrevLineNo := 0;
          FirstFieldExpected := FALSE;
          SkipThisField := FALSE;

          IF ToCALHistoryLine.FINDSET THEN
            REPEAT

              IF ToCALHistoryLine."Sub Line No." = 1 THEN BEGIN

                IF ToCALHistoryLine.Code = '  FIELDS' THEN BEGIN
                  FirstFieldExpected := TRUE;
                  ToFieldsSectionOpen := TRUE;
                END;

                IF ToCALHistoryLine.Code = '  }' THEN BEGIN
                  ToFieldsSectionOpen := FALSE;
                  SkipThisField := FALSE;
                END;

                IF FirstFieldExpected AND (COPYSTR(ToCALHistoryLine.Code, 1, 5) = '    {') THEN BEGIN
                  FirstFieldExpected := FALSE;

                  CheckTransferfieldsFld.SETRANGE("To Table No.", TmpToObject.ID);
                  IF CheckTransferfieldsFld.FINDSET THEN
                    REPEAT

                      FromCALHistoryObject.GoToLastRecord(
                        FromCALHistoryObject."Object Type"::Table, CheckTransferfieldsFld."From Table No.");

                      FromCALHistoryLine.SETRANGE("Entry No.", FromCALHistoryObject."Entry No.");

                      FromPrevLineNo := 0;
                      CopyingStarted := FALSE;

                      IF FromCALHistoryLine.FINDSET THEN
                        REPEAT

                          IF FromCALHistoryLine."Sub Line No." = 1 THEN BEGIN

                            IF FromCALHistoryLine.Code = '  FIELDS' THEN
                              FromFieldsSectionOpen := TRUE;
                            IF FromCALHistoryLine.Code = '  }' THEN
                              FromFieldsSectionOpen := FALSE;

                            IF FromFieldsSectionOpen THEN
                              IF FromCALHistoryLine.Code[5] = '{' THEN BEGIN
                                EVALUATE(CurrFieldNo, COPYSTR(FromCALHistoryLine.Code, 7, STRPOS(FromCALHistoryLine.Code, ';') - 7));
                                CopyingStarted := CurrFieldNo = CheckTransferfieldsFld."Field No.";
                              END;

                            IF CopyingStarted AND (CodeSectionStartPos = 0) THEN
                              IF NOT WithCALCode THEN
                                IF STRLEN(FromCALHistoryLine.Code) > 5 THEN
                                  IF COPYSTR(FromCALHistoryLine.Code, STRLEN(FromCALHistoryLine.Code) - 3) = '=VAR' THEN BEGIN
                                    CodeSectionStartPos := STRLEN(FromCALHistoryLine.Code) - 3;
                                    FromCALHistoryLine.Code := COPYSTR(FromCALHistoryLine.Code, 1, CodeSectionStartPos) + 'BEGIN';
                                    oFile.WRITE(FromCALHistoryLine.Code);
                                  END ELSE
                                    IF COPYSTR(FromCALHistoryLine.Code, STRLEN(FromCALHistoryLine.Code) - 5) = '=BEGIN' THEN BEGIN
                                      CodeSectionStartPos := STRLEN(FromCALHistoryLine.Code) - 5;
                                      oFile.WRITE(FromCALHistoryLine.Code);
                                    END;

                            IF CodeSectionStartPos <> 0 THEN
                              IF COPYSTR(FromCALHistoryLine.Code, CodeSectionStartPos + 1) = 'END;' THEN
                                CodeSectionStartPos := 0;

                            IF FromCALHistoryLine.Code = '  }' THEN
                              CopyingStarted := FALSE;

                          END;
                          IF CopyingStarted AND (CodeSectionStartPos = 0) THEN BEGIN
                            IF FromCALHistoryLine."Line No." = FromPrevLineNo THEN
                              oFile.SEEK(oFile.POS - 2);
                            oFile.WRITE(FromCALHistoryLine.Code);
                            FromPrevLineNo := FromCALHistoryLine."Line No.";
                          END;

                        UNTIL FromCALHistoryLine.NEXT = 0;

                    UNTIL CheckTransferfieldsFld.NEXT = 0;
                END;
              END;

              IF ToFieldsSectionOpen THEN
                IF (ToCALHistoryLine.Code[5] = '{') AND (ToCALHistoryLine."Sub Line No." = 1) THEN BEGIN
                  EVALUATE(CurrFieldNo, COPYSTR(ToCALHistoryLine.Code, 7, STRPOS(ToCALHistoryLine.Code, ';') - 7));

                  CheckTransferfieldsFld.SETRANGE("To Table No.", TmpToObject.ID);
                  CheckTransferfieldsFld.SETRANGE("Field No.", CurrFieldNo);
                  CheckTransferfieldsFld.SETFILTER("To Field Name", '<>%1', '');

                  SkipThisField := CheckTransferfieldsFld.FINDFIRST;
                  SkipThisField := CheckTransferfieldsFld.FINDFIRST;
                  SkipThisField := CheckTransferfieldsFld.FINDFIRST;

                  CheckTransferfieldsFld.SETRANGE("Field No.");
                  CheckTransferfieldsFld.SETRANGE("To Field Name");
                END;

              IF NOT SkipThisField THEN BEGIN
                IF ToCALHistoryLine."Line No." = ToPrevLineNo THEN
                  oFile.SEEK(oFile.POS - 2);
                oFile.WRITE(ToCALHistoryLine.Code);
                ToPrevLineNo := ToCALHistoryLine."Line No.";
              END;

              IF (COPYSTR(ToCALHistoryLine.Code, 5) = '    {') AND (ToCALHistoryLine."Sub Line No." = 1) THEN
                SkipThisField := FALSE;

            UNTIL ToCALHistoryLine.NEXT = 0;

          oFile.CLOSE;

          ObjectMgt.ImportObject(FileName);
          ObjectMgt.CompileObject(TmpToObject);

          Object.GET(TmpToObject.Type, '', TmpToObject.ID);
          Object.Date := StartDate;
          Object.Time := StartTime;
          Object.Modified := TRUE;

          ObjectMgt.UpdateObject(Object, FALSE);

          Recalculate(TmpToObject.ID);

        UNTIL TmpToObject.NEXT = 0;
    END;

    LOCAL PROCEDURE AddToTempTable@2(TableNo@1000 : Integer;VAR TmpObject@1001 : TEMPORARY Record 2000000001);
    VAR
      Object@1002 : Record 2000000001;
    BEGIN
      IF Object.GET(Object.Type::Table, '', TableNo) THEN
        IF NOT TmpObject.GET(TmpObject.Type::Table, '', TableNo) THEN BEGIN
          TmpObject := Object;
          TmpObject.INSERT;
        END;
    END;

    PROCEDURE ShowCode@3(LeftTable@1000 : Boolean);
    VAR
      Setup@1001 : Record 11102035;
      CALHistoryObject@1002 : Record 11102052;
      CALHistoryLine@1003 : Record 11102053;
      CALHistoryLine2@1004 : Record 11102053;
      CALHistoryLines@1005 : Page 11102073;
      NavgateEditor@1006 : Page 11175819;
      CurrFieldNo@1007 : Integer;
      TableNumber@1008 : Integer;
      FieldSectionOpen@1009 : Boolean;
    BEGIN
      IF LeftTable THEN
        TableNumber := "From Table No."
      ELSE
        TableNumber := "To Table No.";

      CALHistoryObject.GoToLastRecord(CALHistoryObject."Object Type"::Table, TableNumber);
      CALHistoryLine.SETRANGE("Entry No.", CALHistoryObject."Entry No.");
      CALHistoryLine.SETRANGE("Sub Line No.", 1);

      IF CALHistoryLine.FINDSET THEN
        REPEAT

          IF CALHistoryLine.Code = '  FIELDS' THEN
            FieldSectionOpen := TRUE;

          IF CALHistoryLine.Code = '  }' THEN
            FieldSectionOpen := FALSE;

          IF FieldSectionOpen THEN
            IF CALHistoryLine.Code[5] = '{' THEN BEGIN
              EVALUATE(CurrFieldNo, COPYSTR(CALHistoryLine.Code, 7, STRPOS(CALHistoryLine.Code, ';') - 7));
              IF CurrFieldNo = "Field No." THEN BEGIN
                CALHistoryLine2 := CALHistoryLine;
                CALHistoryLine2.SETRECFILTER;
              END;
            END;

        UNTIL CALHistoryLine.NEXT = 0;

      Setup.CustomGet;
      CASE Setup.Editor OF
        Setup.Editor::"Object Manager" :
          BEGIN
            CALHistoryLines.SetCALHistoryEntryNo(CALHistoryObject."Entry No.");
            CALHistoryLines.SetHighLightedLines(CALHistoryLine2);
            CALHistoryLines.RUN;
          END;

        Setup.Editor::Navgate :
          BEGIN
            NavgateEditor.SetCALHistoryEntryNo(CALHistoryObject."Entry No.");
            NavgateEditor.GotoPosition(CALHistoryLine2."Line No.", 0);
            NavgateEditor.RUN;
          END;
      END;
    END;

    LOCAL PROCEDURE Recalculate@4(TableNo@1000 : Integer);
    VAR
      CheckTransferfieldsObj@1001 : Record 11102083;
    BEGIN
      CheckTransferfieldsObj.SETRANGE("To Table No.", TableNo);
      IF CheckTransferfieldsObj.FINDSET THEN
        REPEAT
          CheckTransferfieldsObj.Recalculate;
        UNTIL CheckTransferfieldsObj.NEXT = 0;

      CheckTransferfieldsObj.RESET;
      CheckTransferfieldsObj.SETRANGE("From Table No.", TableNo);
      IF CheckTransferfieldsObj.FINDSET THEN
        REPEAT
          CheckTransferfieldsObj.Recalculate;
        UNTIL CheckTransferfieldsObj.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

