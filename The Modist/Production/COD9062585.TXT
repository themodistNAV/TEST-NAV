OBJECT Codeunit 9062585 Table Management
{
  OBJECT-PROPERTIES
  {
    Date=21/07/16;
    Time=12:00:00 PM;
    Version List=NA2016.16.1;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Table@1000000000 : Record 9062728;
      CriteriaManagement@1000000001 : Codeunit 9062462;

    PROCEDURE "--- General ---"@1000000001();
    BEGIN
    END;

    PROCEDURE GetListPageId@1000000003(pTableId@1000000000 : Integer;pPosition@1000000001 : Text) : Integer;
    BEGIN
      //DOC NA2016.10 - Returning list page ID for given table ID and position
      //  -> pTableId: The table ID
      //  -> pPosition: The position
      //  <- The ID if it could be found, 0 otherwise

      EXIT(FindId(pTableId, pPosition, Table.FIELDNO("List Page ID")));
    END;

    PROCEDURE GetCardPageId@1000000006(pTableId@1000000001 : Integer;pPosition@1000000000 : Text) : Integer;
    BEGIN
      //DOC NA2016.10 - Returning card page ID for given table ID and position
      //  -> pTableId: The table ID
      //  -> pPosition: The position
      //  <- The ID if it could be found, 0 otherwise

      EXIT(FindId(pTableId, pPosition, Table.FIELDNO("Card Page ID")));
    END;

    PROCEDURE GetReportId@1000000007(pTableId@1000000001 : Integer;pPosition@1000000000 : Text) : Integer;
    BEGIN
      //DOC NA2016.10 - Returning report ID for given table ID and position
      //  -> pTableId: The table ID
      //  -> pPosition: The position
      //  <- The ID if it could be found, 0 otherwise

      EXIT(FindId(pTableId, pPosition, Table.FIELDNO("Report ID")));
    END;

    PROCEDURE FindTableForPage@1000000021(pPageId@1000000000 : Integer) : Integer;
    VAR
      lTable@1000000001 : Record 9062728;
      lTableMetadata@1000000003 : Record 2000000136;
      lTableId@1000000002 : Integer;
    BEGIN
      //DOC NA2016.14 - Trying to find a table for given page
      //  -> pPageId: Page ID
      //  <- Table ID (or zero if not found)

      CLEAR(lTableId);

      IF (lTableId = 0) THEN
      BEGIN
        lTable.RESET();
        lTable.SETCURRENTKEY("List Page ID");
        lTable.SETRANGE("List Page ID", pPageId);
        IF (lTable.FINDFIRST()) THEN
          lTableId := lTable."Table ID";
      END;

      IF (lTableId = 0) THEN
      BEGIN
        lTable.RESET();
        lTable.SETCURRENTKEY("Card Page ID");
        lTable.SETRANGE("Card Page ID", pPageId);
        IF (lTable.FINDFIRST()) THEN
          lTableId := lTable."Table ID";
      END;

      IF (lTableId = 0) THEN
      BEGIN
        lTableMetadata.RESET();
        lTableMetadata.SETCURRENTKEY(LookupPageID);
        lTableMetadata.SETRANGE(LookupPageID, pPageId);
        IF (lTableMetadata.FINDFIRST()) THEN
          lTableId := lTableMetadata.ID;
      END;

      IF (lTableId = 0) THEN
      BEGIN
        lTableMetadata.RESET();
        lTableMetadata.SETCURRENTKEY(DrillDownPageId);
        lTableMetadata.SETRANGE(DrillDownPageId, pPageId);
        IF (lTableMetadata.FINDFIRST()) THEN
          lTableId := lTableMetadata.ID;
      END;

      EXIT(lTableId);
    END;

    PROCEDURE FindTableForReport@1000000000(pReportId@1000000000 : Integer) : Integer;
    VAR
      lTable@1000000001 : Record 9062728;
      lTableId@1000000002 : Integer;
    BEGIN
      //DOC NA2016.16.1 - Trying to find a table for given report
      //  -> pReportId: Report ID
      //  <- Table ID (or zero if not found)

      CLEAR(lTableId);

      lTable.RESET();
      lTable.SETCURRENTKEY("Report ID");
      lTable.SETRANGE("Report ID", pReportId);
      IF (lTable.FINDFIRST()) THEN
        lTableId := lTable."Table ID";

      EXIT(lTableId);
    END;

    LOCAL PROCEDURE "--- Internal ---"@1000000002();
    BEGIN
    END;

    LOCAL PROCEDURE FindId@1000000008(pTableId@1000000001 : Integer;pPosition@1000000000 : Text;pFieldId@1000000002 : Integer) : Integer;
    VAR
      lCriteria@1000000007 : Record 9062626;
      lTable@1000000004 : Record 9062728;
      lTableFound@1000000003 : Boolean;
      lId@1000000005 : Integer;
      lRecordRef@1000000006 : RecordRef;
    BEGIN
      //DOC NA2016.10 - Trying to find ID for given table ID, position and field ID
      //  -> pTableId: The table ID
      //  -> pPosition: The position
      //  -> pFieldId: The field ID
      //  <- The ID if it could be found, 0 otherwise

      lId := 0;
      lTableFound := FALSE;

      Table.RESET();
      Table.SETCURRENTKEY("Table ID", "Criteria ID");
      Table.SETRANGE("Table ID", pTableId);
      Table.SETRANGE("Criteria ID", 0);
      lTableFound := Table.FINDFIRST();

      IF (( NOT (lTableFound)) AND (pPosition <> '')) THEN
      BEGIN
        Table.SETFILTER("Criteria ID", '<>0');
        IF (Table.FINDSET()) THEN
        REPEAT
          IF (lCriteria.GET(Table."Criteria ID")) THEN
          BEGIN
            CLEAR(lRecordRef);
            lRecordRef.OPEN(pTableId);
            lRecordRef.FILTERGROUP(2);
            lRecordRef.SETPOSITION(pPosition);
            lRecordRef.SETRECFILTER();
            lRecordRef.FILTERGROUP(0);
            CriteriaManagement.ApplyCriteriaToRecRef(lCriteria.ID, lRecordRef);
            IF (lRecordRef.FINDFIRST()) THEN
            BEGIN
              lTable := Table;
              lTableFound := TRUE;
            END;
            lRecordRef.CLOSE();
          END;
        UNTIL ((Table.NEXT() = 0) OR (lTableFound));
        Table := lTable;
      END;

      IF (lTableFound) THEN
        CASE (pFieldId) OF
          Table.FIELDNO("List Page ID"):
            lId := Table."List Page ID";
          Table.FIELDNO("Card Page ID"):
            lId := Table."Card Page ID";
          Table.FIELDNO("Report ID"):
            lId := Table."Report ID";
        END;

      EXIT(lId);
    END;

    BEGIN
    {
      //DOC NA2016.10 JH 25/08/2015 - Created
      //DOC NA2016.12 JH 27/12/2015 - Criteria references changed
      //DOC NA2016.14 JH 11/03/2016 - Creation moved to codeunit 9062611 "Create Tables", "FindTableForPage" added
      //DOC NA2016.16.1 JH 15/07/2016 - Search for table using report added
    }
    END.
  }
}

