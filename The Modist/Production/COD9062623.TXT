OBJECT Codeunit 9062623 Enhanced Field Toolkit
{
  OBJECT-PROPERTIES
  {
    Date=06/10/15;
    Time=[ 5:49:45 PM];
    Version List=NA2016.10;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      EnhancedFieldValue@9062229 : Record 9062328;
      TableNo@9062230 : Integer;
      EnhancedFieldNo@9062231 : Integer;
      Position@9062232 : Text;
      Found@9062233 : Boolean;

    PROCEDURE "--- General ----"@9062238();
    BEGIN
    END;

    PROCEDURE FindEnhancedFieldNo@9062239();
    BEGIN
    END;

    PROCEDURE "--- Getting Value ---"@9062236();
    BEGIN
    END;

    PROCEDURE GetValue@9062231(pTableNo@9062229 : Integer;pEnhancedFieldNo@9062230 : Integer;pPosition@9062231 : Text) : Text;
    BEGIN
      //DOC NA2016.10 - Returning enhanced field value
      //  -> pTableNo: Table no.
      //  -> pEnhancedFieldNo: Enhanced field no.
      //  -> pPosition: Position
      //  <- The value

      IF (FindEnhancedFieldValue(pTableNo, pEnhancedFieldNo, pPosition)) THEN
        EXIT(EnhancedFieldValue.Value)
      ELSE
        EXIT('');
    END;

    PROCEDURE GetIntegerValue@9062242(pTableNo@9062233 : Integer;pEnhancedFieldNo@9062232 : Integer;pPosition@9062231 : Text) : Integer;
    BEGIN
      //DOC NA2016.10 - Returning enhanced field integer value
      //  -> pTableNo: Table no.
      //  -> pEnhancedFieldNo: Enhanced field no.
      //  -> pPosition: Position
      //  <- The value

      IF (FindEnhancedFieldValue(pTableNo, pEnhancedFieldNo, pPosition)) THEN
        EXIT(EnhancedFieldValue."Value as Integer")
      ELSE
        EXIT(0);
    END;

    PROCEDURE GetDecimalValue@9062244(pTableNo@9062233 : Integer;pEnhancedFieldNo@9062232 : Integer;pPosition@9062231 : Text) : Decimal;
    BEGIN
      //DOC NA2016.10 - Returning enhanced field decimal value
      //  -> pTableNo: Table no.
      //  -> pEnhancedFieldNo: Enhanced field no.
      //  -> pPosition: Position
      //  <- The value

      IF (FindEnhancedFieldValue(pTableNo, pEnhancedFieldNo, pPosition)) THEN
        EXIT(EnhancedFieldValue."Value as Decimal")
      ELSE
        EXIT(0);
    END;

    PROCEDURE GetCodeValue@9062232(pTableNo@9062233 : Integer;pEnhancedFieldNo@9062232 : Integer;pPosition@9062231 : Text) : Code[1024];
    BEGIN
      //DOC NA2016.10 - Returning enhanced field code value
      //  -> pTableNo: Table no.
      //  -> pEnhancedFieldNo: Enhanced field no.
      //  -> pPosition: Position
      //  <- The value

      IF (FindEnhancedFieldValue(pTableNo, pEnhancedFieldNo, pPosition)) THEN
        EXIT(EnhancedFieldValue."Value as Code")
      ELSE
        EXIT('');
    END;

    PROCEDURE GetTextValue@9062246(pTableNo@9062233 : Integer;pEnhancedFieldNo@9062232 : Integer;pPosition@9062231 : Text) : Text;
    BEGIN
      //DOC NA2016.10 - Returning enhanced field text value
      //  -> pTableNo: Table no.
      //  -> pEnhancedFieldNo: Enhanced field no.
      //  -> pPosition: Position
      //  <- The value

      IF (FindEnhancedFieldValue(pTableNo, pEnhancedFieldNo, pPosition)) THEN
        EXIT(EnhancedFieldValue."Value as Text")
      ELSE
        EXIT('');
    END;

    PROCEDURE GetDateValue@9062234(pTableNo@9062233 : Integer;pEnhancedFieldNo@9062232 : Integer;pPosition@9062231 : Text) : Date;
    BEGIN
      //DOC NA2016.10 - Returning enhanced field date value
      //  -> pTableNo: Table no.
      //  -> pEnhancedFieldNo: Enhanced field no.
      //  -> pPosition: Position
      //  <- The value

      IF (FindEnhancedFieldValue(pTableNo, pEnhancedFieldNo, pPosition)) THEN
        EXIT(EnhancedFieldValue."Value as Date")
      ELSE
        EXIT(0D);
    END;

    PROCEDURE GetTimeValue@9062248(pTableNo@9062233 : Integer;pEnhancedFieldNo@9062232 : Integer;pPosition@9062231 : Text) : Time;
    BEGIN
      //DOC NA2016.10 - Returning enhanced field time value
      //  -> pTableNo: Table no.
      //  -> pEnhancedFieldNo: Enhanced field no.
      //  -> pPosition: Position
      //  <- The value

      IF (FindEnhancedFieldValue(pTableNo, pEnhancedFieldNo, pPosition)) THEN
        EXIT(EnhancedFieldValue."Value as Time")
      ELSE
        EXIT(0T);
    END;

    PROCEDURE "--- Setting Value ---"@9062250();
    BEGIN
    END;

    PROCEDURE SetValue@9062251(pTableNo@9062231 : Integer;pEnhancedFieldNo@9062230 : Integer;pPosition@9062229 : Text;pValue@9062232 : Text) : Boolean;
    VAR
      lIntegerValue@9062234 : Integer;
      lDecimalValue@9062235 : Decimal;
      lDateValue@9062236 : Date;
      lTimeValue@9062237 : Time;
      lResult@9062233 : Boolean;
    BEGIN
      //DOC NA2016.10 - Setting enhanced field value
      //  -> pTableNo: Table no.
      //  -> pEnhancedFieldNo: Enhanced field no.
      //  -> pPosition: Position
      //  -> pValue: The value
      //  <- TRUE = Value set, FALSE = Enhanced field not found

      lResult := FALSE;
      IF (FindEnhancedFieldValue(pTableNo, pEnhancedFieldNo, pPosition)) THEN
      BEGIN
        CASE (EnhancedFieldValue."Field Type") OF
          EnhancedFieldValue."Field Type"::Integer:
            IF (EVALUATE(lIntegerValue, pValue)) THEN
              lResult := SetIntegerValue(pTableNo, pEnhancedFieldNo, pPosition, lIntegerValue);
          EnhancedFieldValue."Field Type"::Decimal:
            IF (EVALUATE(lDecimalValue, pValue)) THEN
              lResult := SetDecimalValue(pTableNo, pEnhancedFieldNo, pPosition, lDecimalValue);
          EnhancedFieldValue."Field Type"::Code:
            lResult := SetCodeValue(pTableNo, pEnhancedFieldNo, pPosition, pValue);
          EnhancedFieldValue."Field Type"::Text:
            lResult := SetTextValue(pTableNo, pEnhancedFieldNo, pPosition, pValue);
          EnhancedFieldValue."Field Type"::Date:
            IF (EVALUATE(lDateValue, pValue)) THEN
              lResult := SetDateValue(pTableNo, pEnhancedFieldNo, pPosition, lDateValue);
          EnhancedFieldValue."Field Type"::Time:
            IF (EVALUATE(lTimeValue, pValue)) THEN
              lResult := SetTimeValue(pTableNo, pEnhancedFieldNo, pPosition, lTimeValue);
        END;
      END;
      EXIT(lResult);
    END;

    PROCEDURE SetIntegerValue@9062258(pTableNo@9062231 : Integer;pEnhancedFieldNo@9062230 : Integer;pPosition@9062229 : Text;pValue@9062232 : Integer) : Boolean;
    VAR
      lResult@9062233 : Boolean;
    BEGIN
      //DOC NA2016.10 - Setting enhanced field integer value
      //  -> pTableNo: Table no.
      //  -> pEnhancedFieldNo: Enhanced field no.
      //  -> pPosition: Position
      //  -> pValue: The value
      //  <- TRUE = Value set, FALSE = Enhanced field not found

      lResult := FALSE;
      IF (FindEnhancedFieldValue(pTableNo, pEnhancedFieldNo, pPosition)) THEN
      BEGIN
        EnhancedFieldValue.VALIDATE("Value as Integer", pValue);
        EnhancedFieldValue.MODIFY(TRUE);
        lResult := TRUE;
      END;
      EXIT(lResult);
    END;

    PROCEDURE SetDecimalValue@9062257(pTableNo@9062231 : Integer;pEnhancedFieldNo@9062230 : Integer;pPosition@9062229 : Text;pValue@9062232 : Decimal) : Boolean;
    VAR
      lResult@9062233 : Boolean;
    BEGIN
      //DOC NA2016.10 - Setting enhanced field decimal value
      //  -> pTableNo: Table no.
      //  -> pEnhancedFieldNo: Enhanced field no.
      //  -> pPosition: Position
      //  -> pValue: The value
      //  <- TRUE = Value set, FALSE = Enhanced field not found

      lResult := FALSE;
      IF (FindEnhancedFieldValue(pTableNo, pEnhancedFieldNo, pPosition)) THEN
      BEGIN
        EnhancedFieldValue.VALIDATE("Value as Decimal", pValue);
        EnhancedFieldValue.MODIFY(TRUE);
        lResult := TRUE;
      END;
      EXIT(lResult);
    END;

    PROCEDURE SetCodeValue@9062256(pTableNo@9062231 : Integer;pEnhancedFieldNo@9062230 : Integer;pPosition@9062229 : Text;pValue@9062232 : Code[1024]) : Boolean;
    VAR
      lResult@9062233 : Boolean;
    BEGIN
      //DOC NA2016.10 - Setting enhanced field code value
      //  -> pTableNo: Table no.
      //  -> pEnhancedFieldNo: Enhanced field no.
      //  -> pPosition: Position
      //  -> pValue: The value
      //  <- TRUE = Value set, FALSE = Enhanced field not found

      lResult := FALSE;
      IF (FindEnhancedFieldValue(pTableNo, pEnhancedFieldNo, pPosition)) THEN
      BEGIN
        EnhancedFieldValue.VALIDATE("Value as Code", pValue);
        EnhancedFieldValue.MODIFY(TRUE);
        lResult := TRUE;
      END;
      EXIT(lResult);
    END;

    PROCEDURE SetTextValue@9062255(pTableNo@9062231 : Integer;pEnhancedFieldNo@9062230 : Integer;pPosition@9062229 : Text;pValue@9062232 : Text) : Boolean;
    VAR
      lResult@9062233 : Boolean;
    BEGIN
      //DOC NA2016.10 - Setting enhanced field text value
      //  -> pTableNo: Table no.
      //  -> pEnhancedFieldNo: Enhanced field no.
      //  -> pPosition: Position
      //  -> pValue: The value
      //  <- TRUE = Value set, FALSE = Enhanced field not found

      lResult := FALSE;
      IF (FindEnhancedFieldValue(pTableNo, pEnhancedFieldNo, pPosition)) THEN
      BEGIN
        EnhancedFieldValue.VALIDATE("Value as Text", pValue);
        EnhancedFieldValue.MODIFY(TRUE);
        lResult := TRUE;
      END;
      EXIT(lResult);
    END;

    PROCEDURE SetDateValue@9062254(pTableNo@9062231 : Integer;pEnhancedFieldNo@9062230 : Integer;pPosition@9062229 : Text;pValue@9062232 : Date) : Boolean;
    VAR
      lResult@9062233 : Boolean;
    BEGIN
      //DOC NA2016.10 - Setting enhanced field date value
      //  -> pTableNo: Table no.
      //  -> pEnhancedFieldNo: Enhanced field no.
      //  -> pPosition: Position
      //  -> pValue: The value
      //  <- TRUE = Value set, FALSE = Enhanced field not found

      lResult := FALSE;
      IF (FindEnhancedFieldValue(pTableNo, pEnhancedFieldNo, pPosition)) THEN
      BEGIN
        EnhancedFieldValue.VALIDATE("Value as Date", pValue);
        EnhancedFieldValue.MODIFY(TRUE);
        lResult := TRUE;
      END;
      EXIT(lResult);
    END;

    PROCEDURE SetTimeValue@9062253(pTableNo@9062231 : Integer;pEnhancedFieldNo@9062230 : Integer;pPosition@9062229 : Text;pValue@9062232 : Time) : Boolean;
    VAR
      lResult@9062233 : Boolean;
    BEGIN
      //DOC NA2016.10 - Setting enhanced field time value
      //  -> pTableNo: Table no.
      //  -> pEnhancedFieldNo: Enhanced field no.
      //  -> pPosition: Position
      //  -> pValue: The value
      //  <- TRUE = Value set, FALSE = Enhanced field not found

      lResult := FALSE;
      IF (FindEnhancedFieldValue(pTableNo, pEnhancedFieldNo, pPosition)) THEN
      BEGIN
        EnhancedFieldValue.VALIDATE("Value as Time", pValue);
        EnhancedFieldValue.MODIFY(TRUE);
        lResult := TRUE;
      END;
      EXIT(lResult);
    END;

    LOCAL PROCEDURE "--- Tools ---"@9062269();
    BEGIN
    END;

    LOCAL PROCEDURE FindEnhancedFieldValue@9062272(pTableNo@9062231 : Integer;pEnhancedFieldNo@9062230 : Integer;pPosition@9062229 : Text) : Boolean;
    BEGIN
      //DOC NA2016.10 - Trying to find enhanced field
      //  -> pTableNo: Table no.
      //  -> pEnhancedFieldNo: Enhanced field no.
      //  -> pPosition: Position
      //  <- Result

      IF ((pTableNo <> TableNo) OR (pEnhancedFieldNo <> EnhancedFieldNo) OR (pPosition <> Position)) THEN
      BEGIN
        Found := EnhancedFieldValue.GET(pTableNo, pEnhancedFieldNo, pPosition);
        TableNo := pTableNo;
        EnhancedFieldNo := pEnhancedFieldNo;
        Position := pPosition;
      END;

      EXIT(Found);
    END;

    BEGIN
    {
      //DOC NA2016.10 JH 06/10/2015 - Created
    }
    END.
  }
}

