OBJECT Report 751 Save as Standard Item Journal
{
  OBJECT-PROPERTIES
  {
    Date=09/09/14;
    Time=12:00:00 PM;
    Version List=NAVW18.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Save as Standard Item Journal;
               ENG=Save as Standard Item Journal];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  IF Code = '' THEN
                    ERROR(Text000);

                  StdJournalCreated := FALSE;
                  SaveItemJnlAsStandardJnl;
                END;

  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ENG=Options] }

      { 2   ;2   ;Field     ;
                  Name=Code;
                  CaptionML=[ENU=Code;
                             ENG=Code];
                  NotBlank=Yes;
                  SourceExpr=Code;
                  OnLookup=VAR
                             StdItemJnl@1000 : Record 752;
                             StdItemJnls@1001 : Page 753;
                           BEGIN
                             StdItemJnl.SETRANGE("Journal Template Name",ItemJnlBatch."Journal Template Name");
                             StdItemJnls.SETTABLEVIEW(StdItemJnl);

                             StdItemJnls.LOOKUPMODE := TRUE;
                             StdItemJnls.EDITABLE := FALSE;
                             IF StdItemJnls.RUNMODAL = ACTION::LookupOK THEN BEGIN
                               StdItemJnls.GETRECORD(StdItemJnl);
                               Code := StdItemJnl.Code;
                               Description := StdItemJnl.Description;
                             END;
                           END;
                            }

      { 8   ;2   ;Field     ;
                  CaptionML=[ENU=Description;
                             ENG=Description];
                  SourceExpr=Description }

      { 5   ;2   ;Field     ;
                  CaptionML=[ENU=Save Unit Amount;
                             ENG=Save Unit Amount];
                  SourceExpr=SaveUnitAmount }

      { 7   ;2   ;Field     ;
                  CaptionML=[ENU=Save Quantity;
                             ENG=Save Quantity];
                  SourceExpr=SaveQuantity }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1001 : TextConst 'ENU=Enter a code for Standard Item Journal.;ENG=Enter a code for Standard Item Journal.';
      Text001@1000 : TextConst 'ENU=Standard Item Journal %1 already exists. Do you want to overwrite?;ENG=Standard Item Journal %1 already exists. Do you want to overwrite?';
      ItemJnlLine@1007 : Record 83;
      ItemJnlBatch@1006 : Record 233;
      StdItemJnl@1010 : Record 752;
      Code@1005 : Code[10];
      Description@1004 : Text[50];
      SaveUnitAmount@1003 : Boolean;
      SaveQuantity@1008 : Boolean;
      StdJournalCreated@1002 : Boolean;

    PROCEDURE Initialise@2(VAR SelectedItemJnlLines@1000 : Record 83;SelectedItemJnlBatch@1001 : Record 233);
    BEGIN
      ItemJnlLine.COPY(SelectedItemJnlLines);
      ItemJnlBatch := SelectedItemJnlBatch;
    END;

    PROCEDURE InitializeRequest@3(NewCode@1003 : Code[10];NewDescription@1002 : Text[50];NewSaveUnitAmount@1001 : Boolean;NewSaveQuantity@1000 : Boolean);
    BEGIN
      Code := NewCode;
      Description := NewDescription;
      SaveUnitAmount := NewSaveUnitAmount;
      SaveQuantity := NewSaveQuantity;
    END;

    LOCAL PROCEDURE SaveItemJnlAsStandardJnl@6();
    VAR
      StdItemJnlLine@1000 : Record 753;
      NextLineNo@1001 : Integer;
    BEGIN
      StdItemJnl.INIT;
      StdItemJnl."Journal Template Name" := ItemJnlBatch."Journal Template Name";
      StdItemJnl.Code := Code;
      StdItemJnl.Description := Description;

      IF StdItemJnlExists THEN
        IF NOT CONFIRM(Text001,FALSE,StdItemJnl.Code) THEN
          EXIT;

      StdItemJnlLine.LOCKTABLE;
      StdItemJnl.LOCKTABLE;

      IF StdItemJnlExists THEN BEGIN
        StdItemJnl.MODIFY(TRUE);
        StdItemJnlLine.SETRANGE("Journal Template Name",StdItemJnl."Journal Template Name");
        StdItemJnlLine.SETRANGE("Standard Journal Code",StdItemJnl.Code);
        StdItemJnlLine.DELETEALL(TRUE);
      END ELSE
        StdItemJnl.INSERT(TRUE);

      NextLineNo := 10000;
      IF ItemJnlLine.FIND('-') THEN
        REPEAT
          StdItemJnlLine."Line No." := NextLineNo;
          NextLineNo := NextLineNo + 10000;
          StdItemJnlLine.INIT;
          StdItemJnlLine."Journal Template Name" := StdItemJnl."Journal Template Name";
          StdItemJnlLine."Standard Journal Code" := StdItemJnl.Code;
          StdItemJnlLine.TRANSFERFIELDS(ItemJnlLine,FALSE);
          IF NOT SaveUnitAmount THEN BEGIN
            StdItemJnlLine."Unit Amount" := 0;
            StdItemJnlLine.Amount := 0;
            StdItemJnlLine."Unit Cost" := 0;
            StdItemJnlLine."Indirect Cost %" := 0;
          END;
          IF NOT SaveQuantity THEN BEGIN
            StdItemJnlLine.Quantity := 0;
            StdItemJnlLine.Amount := 0;
          END;
          StdItemJnlLine.INSERT(TRUE);
        UNTIL ItemJnlLine.NEXT = 0;

      StdJournalCreated := TRUE;
    END;

    LOCAL PROCEDURE StdItemJnlExists@10() : Boolean;
    VAR
      StdItemJnl@1000 : Record 752;
    BEGIN
      StdItemJnl.SETRANGE("Journal Template Name",ItemJnlBatch."Journal Template Name");
      StdItemJnl.SETRANGE(Code,Code);

      EXIT(StdItemJnl.FINDFIRST);
    END;

    PROCEDURE GetStdItemJournal@1(VAR StdItemJnl1@1000 : Record 752) : Boolean;
    BEGIN
      IF StdJournalCreated THEN
        StdItemJnl1.COPY(StdItemJnl);

      EXIT(StdJournalCreated);
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

