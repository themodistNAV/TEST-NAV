OBJECT Page 1300 Mini Customer Card
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00,NAVGB9.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Customer Card;
               ENG=Customer Card];
    SourceTable=Table18;
    PageType=Card;
    RefreshOnActivate=Yes;
    PromotedActionCategoriesML=[ENU=New,Process,Report,New Document,Customer,History,Prices and Discounts,View,Help;
                                ENG=New,Process,Report,New Document,Customer,History,Prices and Discounts,View,Help];
    OnOpenPage=VAR
                 CRMIntegrationManagement@1000 : Codeunit 5330;
               BEGIN
                 CurrPage.PriceAndLineDisc.PAGE.InitPage(FALSE);
                 ShowCharts := "No." <> '';
                 IF ShowCharts THEN BEGIN
                   CurrPage.AgedAccReceivableChart.PAGE.SetPerCustomer;
                   CurrPage.AgedAccReceivableChart2.PAGE.SetPerCustomer;
                 END;

                 SETFILTER("Date Filter",MiniCustomerMgt.GetCurrentYearFilter);

                 CRMIntegrationEnabled := CRMIntegrationManagement.IsCRMIntegrationEnabled;
               END;

    OnAfterGetRecord=VAR
                       AgedAccReceivable@1000 : Codeunit 763;
                     BEGIN
                       BlockedCustomer := (Blocked = Blocked::All);
                       BalanceExhausted := 10000 <= CalcCreditLimitLCYExpendedPct;

                       DaysPastDueDate := AgedAccReceivable.InvoicePaymentDaysAverage("No.");
                       AttentionToPaidDay := DaysPastDueDate > 0;

                       SetSocialListeningFactboxVisibility;
                     END;

    OnNewRecord=VAR
                  MiniCustomerTemplate@1001 : Record 1300;
                  Customer@1002 : Record 18;
                  NewCustomerCode@1003 : Code[20];
                BEGIN
                  IF "No." = '' THEN
                    NewCustomerCode := MiniCustomerTemplate.NewCustomerFromTemplate;
                  IF NewCustomerCode = '' THEN BEGIN
                    CurrPage.CLOSE;
                    EXIT;
                  END;
                  GET(NewCustomerCode);
                  IF Customer.GET("No.") THEN
                    Customer.DELETE(TRUE);
                END;

    OnAfterGetCurrRecord=VAR
                           CRMCouplingManagement@1001 : Codeunit 5331;
                         BEGIN
                           GetSalesPricesAndSalesLineDisc;

                           DynamicEditable := CurrPage.EDITABLE;

                           CRMIsCoupledToRecord :=
                             CRMCouplingManagement.IsRecordCoupledToCRM(RECORDID) AND CRMIntegrationEnabled;
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 3       ;1   ;ActionGroup;
                      Name=NewDocument;
                      CaptionML=[ENU=New Document;
                                 ENG=New Document] }
      { 1906384905;2 ;Action    ;
                      Name=NewSalesInvoice;
                      CaptionML=[ENU=Sales Invoice;
                                 ENG=Sales Invoice];
                      ToolTipML=[ENU=Create an invoice for the customer.;
                                 ENG=Create an invoice for the customer.];
                      Promoted=Yes;
                      Image=Invoice;
                      PromotedCategory=Category4;
                      RunPageMode=Create;
                      OnAction=BEGIN
                                 CreateAndShowNewInvoice;
                               END;
                                }
      { 88      ;2   ;Action    ;
                      Name=NewSalesQuote;
                      CaptionML=[ENU=Sales Quote;
                                 ENG=Sales Quote];
                      ToolTipML=[ENU=Create a quote for the customer.;
                                 ENG=Create a quote for the customer.];
                      Promoted=Yes;
                      Image=Quote;
                      PromotedCategory=Category4;
                      RunPageMode=Create;
                      OnAction=BEGIN
                                 CreateAndShowNewQuote;
                               END;
                                }
      { 1902583505;2 ;Action    ;
                      Name=NewSalesCreditMemo;
                      CaptionML=[ENU=Sales Credit Memo;
                                 ENG=Sales Credit Memo];
                      ToolTipML=[ENU=Create a credit memo for the customer.;
                                 ENG=Create a credit memo for the customer.];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=CreditMemo;
                      PromotedCategory=Category4;
                      RunPageMode=Create;
                      OnAction=BEGIN
                                 CreateAndShowNewCreditMemo;
                               END;
                                }
      { 99      ;1   ;ActionGroup;
                      Name=ActionGroupCRM;
                      CaptionML=[ENU=Dynamics CRM;
                                 ENG=Dynamics CRM];
                      Visible=CRMIntegrationEnabled }
      { 98      ;2   ;Action    ;
                      Name=CRMGotoAccount;
                      CaptionML=[ENU=Account;
                                 ENG=Account];
                      ToolTipML=[ENU=Open the coupled Microsoft Dynamics CRM account.;
                                 ENG=Open the coupled Microsoft Dynamics CRM account.];
                      Image=CoupledCustomer;
                      OnAction=VAR
                                 CRMIntegrationManagement@1000 : Codeunit 5330;
                               BEGIN
                                 CRMIntegrationManagement.ShowCRMEntityFromRecordID(RECORDID);
                               END;
                                }
      { 96      ;2   ;Action    ;
                      Name=CRMSynchronizeNow;
                      CaptionML=[ENU=Synchronize Now;
                                 ENG=Synchronise Now];
                      ToolTipML=[ENU=Send or get updated data to or from Microsoft Dynamics CRM.;
                                 ENG=Send or get updated data to or from Microsoft Dynamics CRM.];
                      Image=Refresh;
                      OnAction=VAR
                                 CRMIntegrationManagement@1001 : Codeunit 5330;
                               BEGIN
                                 CRMIntegrationManagement.UpdateOneNow(RECORDID);
                               END;
                                }
      { 25      ;2   ;Action    ;
                      Name=UpdateStatisticsInCRM;
                      CaptionML=[ENU=Update Account Statistics;
                                 ENG=Update Account Statistics];
                      ToolTipML=[ENU=Send Customer Statistics data to Microsoft Dynamics CRM to update the Account Statistics factbox;
                                 ENG=Send Customer Statistics data to Microsoft Dynamics CRM to update the Account Statistics factbox];
                      Enabled=CRMIsCoupledToRecord;
                      Image=UpdateXML;
                      OnAction=VAR
                                 CRMIntegrationManagement@1000 : Codeunit 5330;
                               BEGIN
                                 CRMIntegrationManagement.CreateOrUpdateCRMAccountStatistics(Rec);
                               END;
                                }
      { 94      ;2   ;ActionGroup;
                      Name=Coupling;
                      CaptionML=[@@@=Coupling is a noun;
                                 ENU=Coupling;
                                 ENG=Coupling];
                      ToolTipML=[ENU=Create, change, or delete a coupling between the Microsoft Dynamics NAV record and a Microsoft Dynamics CRM record.;
                                 ENG=Create, change, or delete a coupling between the Microsoft Dynamics NAV record and a Microsoft Dynamics CRM record.];
                      Image=LinkAccount }
      { 93      ;3   ;Action    ;
                      Name=ManageCRMCoupling;
                      CaptionML=[ENU=Set Up Coupling;
                                 ENG=Set Up Coupling];
                      ToolTipML=[ENU=Create or modify the coupling to a Microsoft Dynamics CRM account.;
                                 ENG=Create or modify the coupling to a Microsoft Dynamics CRM account.];
                      Image=LinkAccount;
                      OnAction=VAR
                                 CRMIntegrationManagement@1000 : Codeunit 5330;
                               BEGIN
                                 CRMIntegrationManagement.CreateOrUpdateCoupling(RECORDID);
                               END;
                                }
      { 92      ;3   ;Action    ;
                      Name=DeleteCRMCoupling;
                      CaptionML=[ENU=Delete Coupling;
                                 ENG=Delete Coupling];
                      ToolTipML=[ENU=Delete the coupling to a Microsoft Dynamics CRM account.;
                                 ENG=Delete the coupling to a Microsoft Dynamics CRM account.];
                      Enabled=CRMIsCoupledToRecord;
                      Image=UnLinkAccount;
                      OnAction=VAR
                                 CRMCouplingManagement@1000 : Codeunit 5331;
                               BEGIN
                                 CRMCouplingManagement.RemoveCoupling(RECORDID);
                               END;
                                }
      { 32      ;1   ;ActionGroup;
                      Name=Customer;
                      CaptionML=[ENU=Customer;
                                 ENG=Customer];
                      Image=Customer }
      { 20      ;2   ;Action    ;
                      Name=<Recurrent Sales Lines>;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Recurring Sales Lines;
                                 ENG=Recurring Sales Lines];
                      ToolTipML=[ENU=Set up recurring sales lines for the customer, such as a monthly replenishment order, that can quickly be inserted on a sales document for the customer.;
                                 ENG=Set up recurring sales lines for the customer, such as a monthly replenishment order, that can quickly be inserted on a sales document for the customer.];
                      RunObject=Page 1314;
                      RunPageLink=Customer No.=FIELD(No.);
                      PromotedIsBig=Yes;
                      Image=CustomerCode;
                      PromotedCategory=Category5 }
      { 29      ;2   ;Action    ;
                      CaptionML=[ENU=Bank Accounts;
                                 ENG=Bank Accounts];
                      ToolTipML=[ENU=Set up information about the customer's bank account.;
                                 ENG=Set up information about the customer's bank account.];
                      RunObject=Page 424;
                      RunPageLink=Customer No.=FIELD(No.);
                      PromotedIsBig=Yes;
                      Image=BankAccount;
                      PromotedCategory=Category5 }
      { 30      ;2   ;Action    ;
                      CaptionML=[ENU=Ship-&to Addresses;
                                 ENG=Ship-&to Addresses];
                      ToolTipML=[ENU=Set up the alternate address where the customer wants the item delivered if different from its regular address.;
                                 ENG=Set up the alternate address where the customer wants the item delivered if different from its regular address.];
                      RunObject=Page 301;
                      RunPageLink=Customer No.=FIELD(No.);
                      PromotedIsBig=Yes;
                      Image=ShipAddress;
                      PromotedCategory=Category5 }
      { 22      ;2   ;Action    ;
                      CaptionML=[ENU=Cross Re&ferences;
                                 ENG=Cross Re&ferences];
                      ToolTipML=[ENU=Set up the customer's own identification of items that you sell to the customer. Cross-references to the customer's item number means that that item number is automatically shown on sales documents instead of the number that you use.;
                                 ENG=Set up the customer's own identification of items that you sell to the customer. Cross-references to the customer's item number means that that item number is automatically shown on sales documents instead of the number that you use.];
                      RunObject=Page 5723;
                      RunPageView=SORTING(Cross-Reference Type,Cross-Reference Type No.);
                      RunPageLink=Cross-Reference Type=CONST(Customer),
                                  Cross-Reference Type No.=FIELD(No.);
                      PromotedIsBig=Yes;
                      Image=Change;
                      PromotedCategory=Category5 }
      { 18      ;2   ;Action    ;
                      CaptionML=[ENU=Online Map;
                                 ENG=Online Map];
                      ToolTipML=[ENU=View the customer's address on your preferred map website.;
                                 ENG=View the customer's address on your preferred map website.];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Map;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 DisplayMap;
                               END;
                                }
      { 31      ;2   ;Action    ;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 ENG=Dimensions];
                      ToolTipML=[ENU=Set up default dimensions for the customer, such as an area or customer group code. You can assign dimension codes to transactions to distribute costs and analyze historical information.;
                                 ENG=Set up default dimensions for the customer, such as an area or customer group code. You can assign dimension codes to transactions to distribute costs and analyse historical information.];
                      RunObject=Page 540;
                      RunPageLink=Table ID=CONST(18),
                                  No.=FIELD(No.);
                      PromotedIsBig=Yes;
                      Image=Dimensions;
                      PromotedCategory=Category5 }
      { 26      ;2   ;Action    ;
                      Name=CustomerReportSelections;
                      CaptionML=[ENU=Document Layouts;
                                 ENG=Document Layouts];
                      Image=Quote;
                      OnAction=VAR
                                 CustomReportSelection@1000 : Record 9657;
                               BEGIN
                                 CustomReportSelection.SETRANGE("Source Type",DATABASE::Customer);
                                 CustomReportSelection.SETRANGE("Source No.","No.");
                                 PAGE.RUNMODAL(PAGE::"Customer Report Selections",CustomReportSelection);
                               END;
                                }
      { 5       ;1   ;ActionGroup;
                      Name=History;
                      CaptionML=[ENU=History;
                                 ENG=History];
                      Image=History }
      { 80      ;2   ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=[ENU=Ledger E&ntries;
                                 ENG=Ledger E&ntries];
                      ToolTipML=[ENU=View the history of transactions for the customer.;
                                 ENG=View the history of transactions for the customer.];
                      RunObject=Page 25;
                      RunPageView=SORTING(Customer No.);
                      RunPageLink=Customer No.=FIELD(No.);
                      PromotedIsBig=Yes;
                      Image=CustomerLedger;
                      PromotedCategory=Category6 }
      { 82      ;1   ;ActionGroup;
                      Name=PricesandDiscounts;
                      CaptionML=[ENU=Prices and Discounts;
                                 ENG=Prices and Discounts];
                      Image=Sales }
      { 83      ;2   ;Action    ;
                      CaptionML=[ENU=Invoice &Discounts;
                                 ENG=Invoice &Discounts];
                      ToolTipML=[ENU=Set up different discounts that are applied to invoices for the customer. An invoice discount is automatically granted to the customer when the total on a sales invoice exceeds a certain amount.;
                                 ENG=Set up different discounts that are applied to invoices for the customer. An invoice discount is automatically granted to the customer when the total on a sales invoice exceeds a certain amount.];
                      RunObject=Page 23;
                      RunPageLink=Code=FIELD(Invoice Disc. Code);
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=CalculateInvoiceDiscount;
                      PromotedCategory=Category7 }
      { 113     ;2   ;Action    ;
                      CaptionML=[ENU=Prices;
                                 ENG=Prices];
                      ToolTipML=[ENU=Set up different prices for items that you sell to the customer. An item price is automatically granted on invoice lines when the specified criteria are met, such as customer, quantity, or ending date.;
                                 ENG=Set up different prices for items that you sell to the customer. An item price is automatically granted on invoice lines when the specified criteria are met, such as customer, quantity, or ending date.];
                      RunObject=Page 7002;
                      RunPageView=SORTING(Sales Type,Sales Code);
                      RunPageLink=Sales Type=CONST(Customer),
                                  Sales Code=FIELD(No.);
                      Image=Price }
      { 136     ;2   ;Action    ;
                      CaptionML=[ENU=Line Discounts;
                                 ENG=Line Discounts];
                      ToolTipML=[ENU=Set up different discounts for items that you sell to the customer. An item discount is automatically granted on invoice lines when the specified criteria are met, such as customer, quantity, or ending date.;
                                 ENG=Set up different discounts for items that you sell to the customer. An item discount is automatically granted on invoice lines when the specified criteria are met, such as customer, quantity, or ending date.];
                      RunObject=Page 7004;
                      RunPageView=SORTING(Sales Type,Sales Code);
                      RunPageLink=Sales Type=CONST(Customer),
                                  Sales Code=FIELD(No.);
                      Image=LineDiscount }
      { 28      ;1   ;ActionGroup;
                      Name=DataTemplate;
                      CaptionML=[ENU=Data Template;
                                 ENG=Data Template] }
      { 167     ;2   ;Action    ;
                      Name=SaveAsTemplate;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Save as Template;
                                 ENG=Save as Template];
                      ToolTipML=[ENU=Save the customer card as a template that can be reused to create new customer cards. Customer templates contain preset information to help you fill fields on customer cards.;
                                 ENG=Save the customer card as a template that can be reused to create new customer cards. Customer templates contain preset information to help you fill fields on customer cards.];
                      PromotedIsBig=Yes;
                      Image=Save;
                      PromotedCategory=New;
                      OnAction=VAR
                                 TempMiniCustomerTemplate@1000 : TEMPORARY Record 1300;
                               BEGIN
                                 TempMiniCustomerTemplate.SaveAsTemplate(Rec);
                               END;
                                }
      { 81      ;2   ;Action    ;
                      Name=Templates;
                      CaptionML=[ENU=Templates;
                                 ENG=Templates];
                      ToolTipML=[ENU=View or edit customer templates.;
                                 ENG=View or edit customer templates.];
                      RunObject=Page 1340;
                      RunPageView=WHERE(Table ID=CONST(18));
                      PromotedIsBig=Yes;
                      Image=Template }
      { 84      ;1   ;ActionGroup;
                      Name=Reports;
                      CaptionML=[ENU=Reports;
                                 ENG=Reports];
                      Image=Reports }
      { 85      ;2   ;ActionGroup;
                      Name=FinanceReports;
                      CaptionML=[ENU=Finance Reports;
                                 ENG=Finance Reports];
                      Image=Report }
      { 1906813206;3 ;Action    ;
                      Name=Report Customer Detailed Aging;
                      CaptionML=[ENU=Customer - Detailed Aging;
                                 ENG=Customer - Detailed Aging];
                      ToolTipML=[ENU=View, print, or save a detailed list of each customer's total payments due, divided into three time periods. The report can be used to decide when to issue reminders, to evaluate a customer's creditworthiness, or to prepare liquidity analyses.;
                                 ENG=View, print, or save a detailed list of each customer's total payments due, divided into three time periods. The report can be used to decide when to issue reminders, to evaluate a customer's creditworthiness, or to prepare liquidity analyses.];
                      Image=Report;
                      OnAction=VAR
                                 Customer@1001 : Record 18;
                               BEGIN
                                 Customer.SETRANGE("No.","No.");
                                 REPORT.RUNMODAL(REPORT::"Customer Detailed Aging",TRUE,TRUE,Customer);
                               END;
                                }
      { 1902299006;3 ;Action    ;
                      Name=Report Customer - Balance to Date;
                      CaptionML=[ENU=Customer - Balance to Date;
                                 ENG=Customer - Balance to Date];
                      ToolTipML=[ENU=View, print, or save a list with customers' payment history up until a certain date. You can use the report to extract your total sales income at the close of an accounting period or fiscal year.;
                                 ENG=View, print, or save a list with customers' payment history up until a certain date. You can use the report to extract your total sales income at the close of an accounting period or fiscal year.];
                      Image=Report;
                      OnAction=VAR
                                 Customer@1001 : Record 18;
                               BEGIN
                                 Customer.SETRANGE("No.","No.");
                                 REPORT.RUNMODAL(REPORT::"Customer - Balance to Date",TRUE,TRUE,Customer);
                               END;
                                }
      { 9       ;3   ;Action    ;
                      Name=Report Statement;
                      CaptionML=[ENU=Statement;
                                 ENG=Statement];
                      ToolTipML=[ENU=View, print, or save a list of a customer's transactions for a selected period, for example, to send to the customer at the close of an accounting period. You can choose to have all overdue balances displayed regardless of the period specified, or you can choose to include an aging band.;
                                 ENG=View, print, or save a list of a customer's transactions for a selected period, for example, to send to the customer at the close of an accounting period. You can choose to have all overdue balances displayed regardless of the period specified, or you can choose to include an aging band.];
                      Image=Report;
                      OnAction=VAR
                                 Customer@1000 : Record 18;
                               BEGIN
                                 Customer.SETRANGE("No.","No.");
                                 REPORT.RUNMODAL(REPORT::Statement,TRUE,TRUE,Customer);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=[ENU=Customer;
                           ENG=Customer];
                GroupType=Group }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the customer. The field is either filled automatically from a defined number series, or you enter the number manually because you have enabled manual number entry in the number-series setup.;
                           ENG=Specifies the number of the customer. The field is either filled automatically from a defined number series, or you enter the number manually because you have enabled manual number entry in the number-series setup.];
                SourceExpr="No.";
                Importance=Additional;
                OnAssistEdit=BEGIN
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;
                              }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the customer's name. This name will appear on all sales documents for the customer. You can enter a maximum of 50 characters, both numbers and letters.;
                           ENG=Specifies the customer's name. This name will appear on all sales documents for the customer. You can enter a maximum of 50 characters, both numbers and letters.];
                SourceExpr=Name;
                Importance=Promoted;
                ShowMandatory=TRUE }

    { 23  ;2   ;Field     ;
                Name=<Blocked>;
                CaptionML=[ENU=Blocked;
                           ENG=Blocked];
                ToolTipML=[ENU=Specifies if transactions with the customer should be blocked, for example, because the customer is declared insolvent.;
                           ENG=Specifies if transactions with the customer should be blocked, for example, because the customer is declared insolvent.];
                OptionCaptionML=[ENU=" ,,,All";
                                 ENG=" ,,,All"];
                SourceExpr=BlockedCustomer;
                Enabled=DynamicEditable;
                OnValidate=BEGIN
                             IF BlockedCustomer THEN
                               Blocked := Blocked::All
                             ELSE
                               Blocked := Blocked::" ";
                           END;
                            }

    { 17  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies when the customer card was last modified.;
                           ENG=Specifies when the customer card was last modified.];
                SourceExpr="Last Date Modified";
                Importance=Additional }

    { 62  ;2   ;Field     ;
                Name=TotalSales2;
                CaptionML=[ENU=Total Sales;
                           ENG=Total Sales];
                ToolTipML=[ENU=Specifies your total sales turnover with the customer in the current fiscal year. It is calculated from amounts excluding VAT on all completed and open sales invoices and credit memos.;
                           ENG=Specifies your total sales turnover with the customer in the current fiscal year. It is calculated from amounts excluding VAT on all completed and open sales invoices and credit memos.];
                SourceExpr=GetTotalSales;
                Style=Strong;
                StyleExpr=TRUE }

    { 57  ;2   ;Field     ;
                CaptionML=[ENU=Costs (LCY);
                           ENG=Costs (LCY)];
                ToolTipML=[ENU=Specifies how much cost you have incurred from the customer in the current fiscal year. It is calculated as the sum of unit costs of all the goods you have sold to the customer. This includes any changes that occurred in your purchase prices of the goods.;
                           ENG=Specifies how much cost you have incurred from the customer in the current fiscal year. It is calculated as the sum of unit costs of all the goods you have sold to the customer. This includes any changes that occurred in your purchase prices of the goods.];
                SourceExpr=CustSalesLCY - CustProfit - AdjmtCostLCY;
                AutoFormatType=1 }

    { 45  ;2   ;Field     ;
                CaptionML=[ENU=Profit (LCY);
                           ENG=Profit (LCY)];
                ToolTipML=[ENU=Specifies how much profit you have made from the customer in the current fiscal year. The calculation takes into account any changes that occurred in purchase prices of the sold goods.;
                           ENG=Specifies how much profit you have made from the customer in the current fiscal year. The calculation takes into account any changes that occurred in purchase prices of the sold goods.];
                SourceExpr=AdjCustProfit;
                AutoFormatType=1;
                Importance=Additional;
                Editable=False }

    { 51  ;2   ;Field     ;
                CaptionML=[ENU=Profit %;
                           ENG=Profit %];
                ToolTipML=[ENU=Specifies how much profit you have made from the customer in the current fiscal year, expressed as a percentage of the customer's total sales. The calculation takes into account any changes that occurred in purchase prices of the sold goods.;
                           ENG=Specifies how much profit you have made from the customer in the current fiscal year, expressed as a percentage of the customer's total sales. The calculation takes into account any changes that occurred in purchase prices of the sold goods.];
                DecimalPlaces=1:1;
                SourceExpr=AdjProfitPct;
                Importance=Additional;
                Editable=False }

    { 65  ;1   ;Group     ;
                CaptionML=[ENU=Address & Contact;
                           ENG=Address & Contact];
                GroupType=Group }

    { 19  ;2   ;Group     ;
                Name=AddressDetails;
                CaptionML=[ENU=Address;
                           ENG=Address];
                GroupType=Group }

    { 6   ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the customer's address. This address will appear on all sales documents for the customer. You can enter a maximum of 50 characters, both numbers and letters.;
                           ENG=Specifies the customer's address. This address will appear on all sales documents for the customer. You can enter a maximum of 50 characters, both numbers and letters.];
                SourceExpr=Address }

    { 8   ;3   ;Field     ;
                ToolTipML=[ENU=Specifies a second line in the customer's address. This address will appear on all sales documents for the customer. You can enter a maximum of 30 characters, both numbers and letters.;
                           ENG=Specifies a second line in the customer's address. This address will appear on all sales documents for the customer. You can enter a maximum of 30 characters, both numbers and letters.];
                SourceExpr="Address 2" }

    { 90  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the customer's post code.;
                           ENG=Specifies the customer's post code.];
                SourceExpr="Post Code";
                Importance=Promoted }

    { 10  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the customer's city.;
                           ENG=Specifies the customer's city.];
                SourceExpr=City }

    { 1040000;3;Field     ;
                ToolTipML=[ENU=Specifies the county of the customer. You can enter a maximum of 30 characters, both numbers and letters.;
                           ENG=Specifies the county of the customer. You can enter a maximum of 30 characters, both numbers and letters.];
                SourceExpr=County }

    { 91  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies a country/region code for the customer. To see the country/region codes and address formats in the Countries/Regions window, click the field.;
                           ENG=Specifies a country/region code for the customer. To see the country/region codes and address formats in the Countries/Regions window, click the field.];
                SourceExpr="Country/Region Code" }

    { 21  ;2   ;Group     ;
                Name=ContactDetails;
                CaptionML=[ENU=Contact;
                           ENG=Contact];
                GroupType=Group }

    { 12  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the customer's telephone number. You can enter a maximum of 30 characters, both numbers and letters.;
                           ENG=Specifies the customer's telephone number. You can enter a maximum of 30 characters, both numbers and letters.];
                SourceExpr="Phone No." }

    { 107 ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the customer's e-mail address. You can enter a maximum of 80 characters, both numbers and letters.;
                           ENG=Specifies the customer's e-mail address. You can enter a maximum of 80 characters, both numbers and letters.];
                SourceExpr="E-Mail";
                Importance=Promoted }

    { 109 ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the customer's home page address. You can enter a maximum of 80 characters, both numbers and letters.;
                           ENG=Specifies the customer's home page address. You can enter a maximum of 80 characters, both numbers and letters.];
                SourceExpr="Home Page" }

    { 16  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the person you regularly contact when you do business with this customer. You can enter a maximum of 30 characters, both numbers and letters.;
                           ENG=Specifies the name of the person you regularly contact when you do business with this customer. You can enter a maximum of 30 characters, both numbers and letters.];
                SourceExpr=Contact;
                Importance=Promoted }

    { 14  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the preferred method of sending documents to this customer, so that you do not have to select a sending option every time that you post and send a document to the customer. Sales documents to this customer will be sent using the specified sending profile and will override the default document sending profile.;
                           ENG=Specifies the preferred method of sending documents to this customer, so that you do not have to select a sending option every time that you post and send a document to the customer. Sales documents to this customer will be sent using the specified sending profile and will override the default document sending profile.];
                SourceExpr="Document Sending Profile" }

    { 1905885101;1;Group  ;
                Name=Invoicing;
                CaptionML=[ENU=Invoicing;
                           ENG=Invoicing];
                GroupType=Group }

    { 64  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the maximum amount by which you allow the customer to exceed the payment balance before warnings are issued.;
                           ENG=Specifies the maximum amount by which you allow the customer to exceed the payment balance before warnings are issued.];
                SourceExpr="Credit Limit (LCY)" }

    { 69  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the customer's VAT registration number for customers in EU countries/regions. Choose the DrillDown button to use a web service that verifies if the number exists in the country's company register.;
                           ENG=Specifies the customer's VAT registration number for customers in EU countries/regions. Choose the DrillDown button to use a web service that verifies if the number exists in the country's company register.];
                SourceExpr="VAT Registration No.";
                Importance=Additional;
                OnDrillDown=VAR
                              VATRegistrationLogMgt@1000 : Codeunit 249;
                            BEGIN
                              VATRegistrationLogMgt.AssistEditCustomerVATReg(Rec);
                            END;
                             }

    { 78  ;2   ;Field     ;
                ToolTipML=[ENU=Identifies the customer in connection with electronic document sending. For the PEPPOL format, the field is used as follows: If the EndPointID element in the Customer group has the SchemeID attribute set to GLN, then the element is mapped to GLN field on the customer card. If the field is blank, then the value in the VAT Registration No. field is used.;
                           ENG=Identifies the customer in connection with electronic document sending. For the PEPPOL format, the field is used as follows: If the EndPointID element in the Customer group has the SchemeID attribute set to GLN, then the element is mapped to GLN field on the customer card. If the field is blank, then the value in the VAT Registration No. field is used.];
                SourceExpr=GLN;
                Importance=Additional }

    { 34  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a different customer who will be invoiced for products that you sell to the customer in the Name field on the customer card.;
                           ENG=Specifies a different customer who will be invoiced for products that you sell to the customer in the Name field on the customer card.];
                SourceExpr="Bill-to Customer No.";
                Importance=Additional;
                LookupPageID=Mini Customer List;
                DrillDownPageID=Mini Customer List }

    { 70  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the customer's trade type to link transactions made for this customer with the appropriate general ledger account according to the general posting setup.;
                           ENG=Specifies the customer's trade type to link transactions made for this customer with the appropriate general ledger account according to the general posting setup.];
                SourceExpr="Gen. Bus. Posting Group";
                Importance=Additional;
                ShowMandatory=TRUE }

    { 58  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the customer's VAT specification to link transactions made for this customer with the appropriate general ledger account according to the VAT posting setup.;
                           ENG=Specifies the customer's VAT specification to link transactions made for this customer with the appropriate general ledger account according to the VAT posting setup.];
                SourceExpr="VAT Bus. Posting Group";
                Importance=Additional;
                ShowMandatory=TRUE }

    { 38  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the customer's market type to link business transactions made for the customer with the appropriate account in the general ledger.;
                           ENG=Specifies the customer's market type to link business transactions made for the customer with the appropriate account in the general ledger.];
                SourceExpr="Customer Posting Group";
                Importance=Additional;
                ShowMandatory=TRUE }

    { 36  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how many copies of a sales invoice for the customer will be printed at a time. For example, enter 2 if you always keep a copy in your files in addition to the one that you send to the customer.;
                           ENG=Specifies how many copies of a sales invoice for the customer will be printed at a time. For example, enter 2 if you always keep a copy in your files in addition to the one that you send to the customer.];
                SourceExpr="Invoice Copies";
                Importance=Additional }

    { 1040001;2;Field     ;
                ToolTipML=[ENU=Here you can select a type of supply code. To see the type of supply codes in the Type of Supply table, click the field.;
                           ENG=Here you can select a type of supply code. To see the type of supply codes in the Type of Supply table, click the field.];
                SourceExpr="Type of Supply Code" }

    { 27  ;2   ;Group     ;
                Name=PricesandDiscounts;
                CaptionML=[ENU=Prices and Discounts;
                           ENG=Prices and Discounts];
                GroupType=Group }

    { 40  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the customer price group code, which you can use as a criterion to set up special sales prices in the Sales Prices window.;
                           ENG=Specifies the customer price group code, which you can use as a criterion to set up special sales prices in the Sales Prices window.];
                SourceExpr="Customer Price Group";
                Importance=Promoted }

    { 44  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the customer discount group code, which you can use as a criterion to set up special discounts in the Sales Line Discounts window.;
                           ENG=Specifies the customer discount group code, which you can use as a criterion to set up special discounts in the Sales Line Discounts window.];
                SourceExpr="Customer Disc. Group";
                Importance=Promoted }

    { 46  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies if a sales line discount is calculated when a special sales price is offered according to setup in the Sales Prices window.;
                           ENG=Specifies if a sales line discount is calculated when a special sales price is offered according to setup in the Sales Prices window.];
                SourceExpr="Allow Line Disc.";
                Importance=Additional }

    { 129 ;3   ;Field     ;
                ToolTipML=[ENU=Specifies if the Unit Price and Line Amount fields on sales lines for this customer should be shown with or without VAT.;
                           ENG=Specifies if the Unit Price and Line Amount fields on sales lines for this customer should be shown with or without VAT.];
                SourceExpr="Prices Including VAT";
                Importance=Additional }

    { 1907468901;2;Group  ;
                Name=ForeignTrade;
                CaptionML=[ENU=Foreign Trade;
                           ENG=Foreign Trade];
                GroupType=Group }

    { 67  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the default currency for the customer. The code will be inserted on sales documents for the customer by default, but you can change it.;
                           ENG=Specifies the default currency for the customer. The code will be inserted on sales documents for the customer by default, but you can change it.];
                SourceExpr="Currency Code";
                Importance=Additional }

    { 66  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the language to be used on printouts for this customer. In the Item Translations window, you can set up foreign language descriptions of items. If you have set these up, then the language code is used to insert the appropriate foreign text on printouts for the customer.;
                           ENG=Specifies the language to be used on printouts for this customer. In the Item Translations window, you can set up foreign language descriptions of items. If you have set these up, then the language code is used to insert the appropriate foreign text on printouts for the customer.];
                SourceExpr="Language Code";
                Importance=Additional }

    { 1901677601;1;Group  ;
                Name=Payments;
                CaptionML=[ENU=Payments;
                           ENG=Payments];
                GroupType=Group }

    { 48  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how to apply payments to entries for this customer. Select Manual to manually specify the document that a payment applies to. This is the default method. Select Apply to Oldest to automatically apply payments to the oldest open customer ledger entry.;
                           ENG=Specifies how to apply payments to entries for this customer. Select Manual to manually specify the document that a payment applies to. This is the default method. Select Apply to Oldest to automatically apply payments to the oldest open customer ledger entry.];
                SourceExpr="Application Method";
                Importance=Additional }

    { 50  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a code that indicates the payment terms that you require of the customer. The payment terms code you define in this field is inserted on sales invoices for the customer.;
                           ENG=Specifies a code that indicates the payment terms that you require of the customer. The payment terms code you define in this field is inserted on sales invoices for the customer.];
                SourceExpr="Payment Terms Code";
                Importance=Promoted;
                ShowMandatory=TRUE }

    { 11  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how the customer usually submits payment, such as bank transfer or check. The payment method code that you select in this field is inserted on sales invoices for the customer.;
                           ENG=Specifies how the customer usually submits payment, such as bank transfer or cheque. The payment method code that you select in this field is inserted on sales invoices for the customer.];
                SourceExpr="Payment Method Code";
                Importance=Additional }

    { 15  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how reminders about late payments are handled for this customer.;
                           ENG=Specifies how reminders about late payments are handled for this customer.];
                SourceExpr="Reminder Terms Code";
                Importance=Additional }

    { 52  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies finance charges are calculated for the customer. A finance charge terms code contains information about the interest calculation method, interest rate, and so on.;
                           ENG=Specifies finance charges are calculated for the customer. A finance charge terms code contains information about the interest calculation method, interest rate, and so on.];
                SourceExpr="Fin. Charge Terms Code";
                Importance=Additional }

    { 54  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies whether to include this customer when you print the Statement report.;
                           ENG=Specifies whether to include this customer when you print the Statement report.];
                SourceExpr="Print Statements";
                Importance=Additional }

    { 60  ;2   ;Field     ;
                ToolTipML=[ENU=Shows the number of the last statement that was printed for this customer.;
                           ENG=Shows the number of the last statement that was printed for this customer.];
                SourceExpr="Last Statement No.";
                Importance=Additional }

    { 143 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies that the customer is not allowed a payment tolerance, for example, to exceed the maximum allowed amount by which the payment or refund can differ from the amount on the invoice or credit memo.;
                           ENG=Specifies that the customer is not allowed a payment tolerance, for example, to exceed the maximum allowed amount by which the payment or refund can differ from the amount on the invoice or credit memo.];
                SourceExpr="Block Payment Tolerance";
                Importance=Additional }

    { 7   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the customer's bank account that will be used by default when you process refunds to the customer and direct debit collections.;
                           ENG=Specifies the customer's bank account that will be used by default when you process refunds to the customer and direct debit collections.];
                SourceExpr="Preferred Bank Account";
                Importance=Additional }

    { 56  ;1   ;Group     ;
                Name=Statistics;
                CaptionML=[ENU=Statistics;
                           ENG=Statistics];
                Editable=false;
                GroupType=Group }

    { 55  ;2   ;Group     ;
                Name=Balance;
                CaptionML=[ENU=Balance;
                           ENG=Balance];
                GroupType=Group }

    { 53  ;3   ;Field     ;
                CaptionML=[ENU=Money Owed - Current;
                           ENG=Money Owed - Current];
                ToolTipML=[ENU=Specifies the payment amount that the customer owes for completed sales. This value is also known as the customer's balance.;
                           ENG=Specifies the payment amount that the customer owes for completed sales. This value is also known as the customer's balance.];
                SourceExpr="Balance (LCY)";
                Importance=Additional }

    { 68  ;3   ;Field     ;
                CaptionML=[ENU=Money Owed - Expected;
                           ENG=Money Owed - Expected];
                ToolTipML=[ENU=Specifies the payment amount that the customer will owe when ongoing sales invoices and credit memos are completed.;
                           ENG=Specifies the payment amount that the customer will owe when ongoing sales invoices and credit memos are completed.];
                SourceExpr=GetMoneyOwedExpected;
                Importance=Additional;
                OnDrillDown=BEGIN
                              MiniCustomerMgt.DrillDownMoneyOwedExpected("No.");
                            END;
                             }

    { 43  ;3   ;Field     ;
                CaptionML=[ENU=Money Owed - Total;
                           ENG=Money Owed - Total];
                ToolTipML=[ENU=Specifies the payment amount that the customer owes for completed sales plus sales that are still ongoing. The value is the sum of the values in the Money Owed - Current and Money Owed - Expected fields.;
                           ENG=Specifies the payment amount that the customer owes for completed sales plus sales that are still ongoing. The value is the sum of the values in the Money Owed - Current and Money Owed - Expected fields.];
                SourceExpr="Balance (LCY)" + GetMoneyOwedExpected;
                Style=Strong;
                StyleExpr=TRUE }

    { 42  ;3   ;Field     ;
                Name=CreditLimit;
                CaptionML=[ENU=Credit Limit;
                           ENG=Credit Limit];
                ToolTipML=[ENU=Specifies the maximum amount by which you allow the customer to exceed the payment balance before warnings are issued.;
                           ENG=Specifies the maximum amount by which you allow the customer to exceed the payment balance before warnings are issued.];
                SourceExpr="Credit Limit (LCY)" }

    { 41  ;3   ;Field     ;
                ExtendedDatatype=Ratio;
                CaptionML=[ENU=Usage Of Credit Limit;
                           ENG=Usage Of Credit Limit];
                ToolTipML=[ENU=Specifies how much of the customer's payment balance consists of credit. The gauge shows the value in the Money Owed - Total field as a percentage of the value in the Credit Limit field.;
                           ENG=Specifies how much of the customer's payment balance consists of credit. The gauge shows the value in the Money Owed - Total field as a percentage of the value in the Credit Limit field.];
                SourceExpr=CalcCreditLimitLCYExpendedPct;
                Style=Attention;
                StyleExpr=BalanceExhausted }

    { 39  ;2   ;Group     ;
                CaptionML=[ENU=Payments;
                           ENG=Payments];
                GroupType=Group }

    { 37  ;3   ;Field     ;
                Name=Balance Due;
                ToolTipML=[ENU=Specifies payments from the customer that are overdue per today's date.;
                           ENG=Specifies payments from the customer that are overdue per today's date.];
                SourceExpr=CalcOverdueBalance;
                CaptionClass=FORMAT(STRSUBSTNO(OverduePaymentsCap,FORMAT(WORKDATE)));
                OnDrillDown=VAR
                              DtldCustLedgEntry@1000 : Record 379;
                              CustLedgEntry@1001 : Record 21;
                            BEGIN
                              DtldCustLedgEntry.SETFILTER("Customer No.","No.");
                              COPYFILTER("Global Dimension 1 Filter",DtldCustLedgEntry."Initial Entry Global Dim. 1");
                              COPYFILTER("Global Dimension 2 Filter",DtldCustLedgEntry."Initial Entry Global Dim. 2");
                              COPYFILTER("Currency Filter",DtldCustLedgEntry."Currency Code");
                              CustLedgEntry.DrillDownOnOverdueEntries(DtldCustLedgEntry);
                            END;
                             }

    { 35  ;3   ;Field     ;
                CaptionML=[ENU=Payments This Year;
                           ENG=Payments This Year];
                ToolTipML=[ENU=Specifies the sum of payments received from the customer in the current fiscal year.;
                           ENG=Specifies the sum of payments received from the customer in the current fiscal year.];
                SourceExpr="Payments (LCY)" }

    { 33  ;3   ;Field     ;
                CaptionML=[ENU=Average Collection Period (Days);
                           ENG=Average Collection Period (Days)];
                ToolTipML=[ENU=Specifies how long the customer typically takes to pay invoices in the current fiscal year. This is the average number of days from which invoices are issued until the customer pays the invoice.;
                           ENG=Specifies how long the customer typically takes to pay invoices in the current fiscal year. This is the average number of days from which invoices are issued until the customer pays the invoice.];
                DecimalPlaces=0:1;
                SourceExpr=MiniCustomerMgt.AvgDaysToPay("No.");
                Importance=Additional }

    { 79  ;3   ;Field     ;
                Name=DaysPaidPastDueDate;
                CaptionML=[ENU=Average Late Payments (Days);
                           ENG=Average Late Payments (Days)];
                ToolTipML=[ENU=Specifies the average number of days the customer is late with payments.;
                           ENG=Specifies the average number of days the customer is late with payments.];
                DecimalPlaces=0:1;
                SourceExpr=DaysPastDueDate;
                Importance=Additional;
                Style=Attention;
                StyleExpr=AttentionToPaidDay }

    { 59  ;2   ;Group     ;
                CaptionML=[ENU=Sales This Year;
                           ENG=Sales This Year];
                GroupType=Group }

    { 61  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies your sales to the customer in the current fiscal year based on completed sales invoices. The figure in parenthesis shows the number of invoices.;
                           ENG=Specifies your sales to the customer in the current fiscal year based on completed sales invoices. The figure in parenthesis shows the number of invoices.];
                SourceExpr=GetAmountOnPostedInvoices;
                CaptionClass=STRSUBSTNO(PostedInvoicesCap,FORMAT(NoPostedInvoices));
                OnDrillDown=BEGIN
                              MiniCustomerMgt.DrillDownOnPostedInvoices("No.")
                            END;
                             }

    { 71  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies your refunds to the customer in the current fiscal year based on completed sales credit memos. The figure in parenthesis shows the number of credit memos.;
                           ENG=Specifies your refunds to the customer in the current fiscal year based on completed sales credit memos. The figure in parenthesis shows the number of credit memos.];
                SourceExpr=GetAmountOnCrMemo;
                CaptionClass=STRSUBSTNO(CreditMemosCap,FORMAT(NoPostedCrMemos));
                OnDrillDown=BEGIN
                              MiniCustomerMgt.DrillDownOnPostedCrMemo("No.")
                            END;
                             }

    { 72  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies your expected sales to the customer in the current fiscal year based on open sales invoices. The figure in parenthesis shows the number of open invoices.;
                           ENG=Specifies your expected sales to the customer in the current fiscal year based on open sales invoices. The figure in parenthesis shows the number of open invoices.];
                SourceExpr=GetAmountOnOutstandingInvoices;
                CaptionClass=STRSUBSTNO(OutstandingInvoicesCap,FORMAT(NoOutstandingInvoices));
                OnDrillDown=BEGIN
                              MiniCustomerMgt.DrillDownOnUnpostedInvoices("No.")
                            END;
                             }

    { 73  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies your expected refunds to the customer in the current fiscal year based on open sales credit memos. The figure in parenthesis shows the number of open credit memos.;
                           ENG=Specifies your expected refunds to the customer in the current fiscal year based on open sales credit memos. The figure in parenthesis shows the number of open credit memos.];
                SourceExpr=GetAmountOnOutstandingCrMemos;
                CaptionClass=STRSUBSTNO(OutstandingCrMemosCap,FORMAT(NoOutstandingCrMemos));
                OnDrillDown=BEGIN
                              MiniCustomerMgt.DrillDownOnUnpostedCrMemos("No.")
                            END;
                             }

    { 75  ;3   ;Field     ;
                CaptionML=[ENU=Total Sales;
                           ENG=Total Sales];
                ToolTipML=[ENU=Specifies your total sales turnover with the customer in the current fiscal year. It is calculated from amounts excluding VAT on all completed and open sales invoices and credit memos.;
                           ENG=Specifies your total sales turnover with the customer in the current fiscal year. It is calculated from amounts excluding VAT on all completed and open sales invoices and credit memos.];
                SourceExpr=Totals;
                Style=Strong;
                StyleExpr=TRUE }

    { 74  ;3   ;Field     ;
                CaptionML=[ENU=Invoice Discounts;
                           ENG=Invoice Discounts];
                ToolTipML=[ENU=Specifies the total of all invoice discounts that you have granted to the customer in the current fiscal year.;
                           ENG=Specifies the total of all invoice discounts that you have granted to the customer in the current fiscal year.];
                SourceExpr=CustInvDiscAmountLCY }

    { 24  ;2   ;Part      ;
                Name=AgedAccReceivableChart;
                SubPageLink=No.=FIELD(No.);
                PagePartID=Page768;
                Visible=ShowCharts;
                PartType=Page }

    { 86  ;1   ;Part      ;
                Name=PriceAndLineDisc;
                PagePartID=Page1345;
                PartType=Page }

    { 13  ;    ;Container ;
                ContainerType=FactBoxArea }

    { 159 ;1   ;Part      ;
                CaptionML=[ENU=Details;
                           ENG=Details];
                SubPageLink=No.=FIELD(No.);
                PagePartID=Page1611;
                Visible=FALSE;
                PartType=Page }

    { 49  ;1   ;Part      ;
                Name=AgedAccReceivableChart2;
                SubPageLink=No.=FIELD(No.);
                PagePartID=Page768;
                Visible=FALSE;
                PartType=Page }

    { 89  ;1   ;Part      ;
                SubPageLink=No.=FIELD(No.);
                PagePartID=Page5360;
                Visible=CRMIsCoupledToRecord;
                PartType=Page }

    { 87  ;1   ;Part      ;
                SubPageLink=Source Type=CONST(Customer),
                            Source No.=FIELD(No.);
                PagePartID=Page875;
                Visible=SocialListeningVisible;
                PartType=Page }

    { 95  ;1   ;Part      ;
                SubPageLink=Source Type=CONST(Customer),
                            Source No.=FIELD(No.);
                PagePartID=Page876;
                Visible=SocialListeningSetupVisible;
                PartType=Page;
                UpdatePropagation=Both }

    { 77  ;1   ;Part      ;
                CaptionML=[ENU=Sales History;
                           ENG=Sales History];
                SubPageLink=No.=FIELD(No.),
                            Currency Filter=FIELD(Currency Filter),
                            Date Filter=FIELD(Date Filter),
                            Global Dimension 1 Filter=FIELD(Global Dimension 1 Filter),
                            Global Dimension 2 Filter=FIELD(Global Dimension 2 Filter);
                PagePartID=Page1318;
                PartType=Page }

  }
  CODE
  {
    VAR
      MiniCustomerMgt@1000 : Codeunit 1302;
      BlockedCustomer@1007 : Boolean;
      DynamicEditable@1029 : Boolean;
      OverduePaymentsCap@1005 : TextConst '@@@=Overdue Payments as of 27-02-2012;ENU=Overdue Payments as of %1;ENG=Overdue Payments as of %1';
      ShowCharts@1028 : Boolean INDATASET;
      CustSalesLCY@1010 : Decimal;
      AdjmtCostLCY@1024 : Decimal;
      AdjCustProfit@1009 : Decimal;
      CustProfit@1011 : Decimal;
      AdjProfitPct@1008 : Decimal;
      CustInvDiscAmountLCY@1006 : Decimal;
      CustPaymentsLCY@1004 : Decimal;
      BalanceExhausted@1012 : Boolean;
      PostedInvoicesCap@1014 : TextConst '@@@=Invoices (5);ENU=Posted Invoices (%1);ENG=Posted Invoices (%1)';
      CreditMemosCap@1015 : TextConst '@@@=Credit Memos (3);ENU=Posted Credit Memos (%1);ENG=Posted Credit Memos (%1)';
      OutstandingInvoicesCap@1016 : TextConst '@@@=Ongoing Invoices (4);ENU=Ongoing Invoices (%1);ENG=Ongoing Invoices (%1)';
      NoPostedInvoices@1018 : Integer;
      NoPostedCrMemos@1017 : Integer;
      NoOutstandingInvoices@1020 : Integer;
      NoOutstandingCrMemos@1019 : Integer;
      AmountOnPostedInvoices@1021 : Decimal;
      AmountOnPostedCrMemos@1013 : Decimal;
      OutstandingCrMemosCap@1022 : TextConst '@@@=Ongoing Credit Memos (4);ENU=Ongoing Credit Memos (%1);ENG=Ongoing Credit Memos (%1)';
      AmountOnOutstandingInvoices@1023 : Decimal;
      AmountOnOutstandingCrMemos@1001 : Decimal;
      Totals@1025 : Decimal;
      DaysPastDueDate@1026 : Decimal;
      AttentionToPaidDay@1027 : Boolean;
      SocialListeningSetupVisible@1031 : Boolean INDATASET;
      SocialListeningVisible@1030 : Boolean INDATASET;
      CRMIntegrationEnabled@1033 : Boolean;
      CRMIsCoupledToRecord@1032 : Boolean;

    LOCAL PROCEDURE GetTotalSales@6() : Decimal;
    BEGIN
      NoPostedInvoices := 0;
      NoPostedCrMemos := 0;
      NoOutstandingInvoices := 0;
      NoOutstandingCrMemos := 0;
      Totals := 0;

      AmountOnPostedInvoices := MiniCustomerMgt.CalcAmountsOnPostedInvoices("No.",NoPostedInvoices);
      AmountOnPostedCrMemos := MiniCustomerMgt.CalcAmountsOnPostedCrMemos("No.",NoPostedCrMemos);

      AmountOnOutstandingInvoices := MiniCustomerMgt.CalculateAmountsOnUnpostedInvoices("No.",NoOutstandingInvoices);
      AmountOnOutstandingCrMemos := MiniCustomerMgt.CalculateAmountsOnUnpostedCrMemos("No.",NoOutstandingCrMemos);

      Totals := AmountOnPostedInvoices + AmountOnPostedCrMemos + AmountOnOutstandingInvoices + AmountOnOutstandingCrMemos;

      MiniCustomerMgt.CalculateStatistic(
        Rec,
        AdjmtCostLCY,AdjCustProfit,AdjProfitPct,
        CustInvDiscAmountLCY,CustPaymentsLCY,CustSalesLCY,
        CustProfit);
      EXIT(Totals)
    END;

    LOCAL PROCEDURE GetAmountOnPostedInvoices@5() : Decimal;
    BEGIN
      EXIT(AmountOnPostedInvoices)
    END;

    LOCAL PROCEDURE GetAmountOnCrMemo@8() : Decimal;
    BEGIN
      EXIT(AmountOnPostedCrMemos)
    END;

    LOCAL PROCEDURE GetAmountOnOutstandingInvoices@9() : Decimal;
    BEGIN
      EXIT(AmountOnOutstandingInvoices)
    END;

    LOCAL PROCEDURE GetAmountOnOutstandingCrMemos@10() : Decimal;
    BEGIN
      EXIT(AmountOnOutstandingCrMemos)
    END;

    LOCAL PROCEDURE GetMoneyOwedExpected@11() : Decimal;
    BEGIN
      EXIT(MiniCustomerMgt.CalculateAmountsWithVATOnUnpostedDocuments("No."))
    END;

    LOCAL PROCEDURE GetSalesPricesAndSalesLineDisc@4();
    BEGIN
      IF "No." <> CurrPage.PriceAndLineDisc.PAGE.GetLoadedCustNo THEN BEGIN
        CurrPage.PriceAndLineDisc.PAGE.LoadCustomer(Rec);
        CurrPage.PriceAndLineDisc.PAGE.UPDATE(FALSE);
      END;
    END;

    LOCAL PROCEDURE SetSocialListeningFactboxVisibility@1();
    VAR
      SocialListeningMgt@1000 : Codeunit 871;
    BEGIN
      SocialListeningMgt.GetCustFactboxVisibility(Rec,SocialListeningSetupVisible,SocialListeningVisible);
    END;

    BEGIN
    END.
  }
}

