OBJECT Codeunit 11102100 OM - TableFilter Management
{
  OBJECT-PROPERTIES
  {
    Date=19/11/15;
    Time=12:00:00 PM;
    Version List=OMA10.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    PROCEDURE AssistEditFilter@1(TableNo@1000 : Integer;VAR TableFilter@1001 : Text);
    VAR
      ApplicationSettings@1002 : Codeunit 11102101;
      AssistEditTableFilter@1003 : Page 11175793;
      RecRef@1004 : RecordRef;
    BEGIN
      IF ApplicationSettings.ApplicationVersion IN ['7.0', '7.1', '8.0'] THEN
        IF HasInsertPermission THEN BEGIN
          UpdatePage(TableNo);

          RecRef.OPEN(TableNo);
          FilterRecRef(RecRef, TableFilter, 0);

          AssistEditTableFilter.SetRecRef(RecRef);
          AssistEditTableFilter.RUNMODAL;
          AssistEditTableFilter.GetRecRef(RecRef);

          TableFilter := CreateTableFilter(RecRef);
        END ELSE
          OpenNavFilterPage(TableNo, TableFilter)
      ELSE
        UseFilterPageBuilder(TableNo, TableFilter);
    END;

    LOCAL PROCEDURE OpenNavFilterPage@2(TableNo@1000 : Integer;VAR TableFilter@1001 : Text);
    VAR
      TableFilterTable@1002 : Record 9805;
      Object@1003 : Record 2000000001;
      TableFilterPage@1004 : Page 9805;
    BEGIN
      TableFilterTable.FILTERGROUP(2);
      TableFilterTable.SETRANGE("Table Number", TableNo);
      TableFilterTable.FILTERGROUP(0);
      TableFilterPage.SETTABLEVIEW(TableFilterTable);
      TableFilterPage.SetSourceTable(TableFilter, TableNo, Object.TABLECAPTION);
      IF TableFilterPage.RUNMODAL = ACTION::OK THEN
        TableFilter := TableFilterPage.CreateTextTableFilter(FALSE);
    END;

    LOCAL PROCEDURE UpdatePage@3(TableNo@1000 : Integer);
    VAR
      Object@1001 : Record 2000000001;
      Fld@1002 : Record 2000000041;
      AllObjWithCaption@1003 : Record 2000000058;
      ObjectMgt@1004 : Codeunit 11102046;
      FileHandler@1005 : Codeunit 11102097;
      oFile@1006 : File;
      FileName@1007 : Text;
      ControlId@1008 : Integer;
      ctPageTxt@1009 : TextConst 'DEU=page.txt;ENU=page.txt;ESP=page.txt;FRA=page.txt;NLD=page.txt;DEA=page.txt';
    BEGIN
      FileName := FileHandler.TempDirectory + ctPageTxt;

      IF EXISTS(FileName) THEN
        ERASE(FileName);

      AllObjWithCaption.GET(AllObjWithCaption."Object Type"::Table, TableNo);

      Object.Type := Object.Type::Page;
      Object.ID := PAGE::"OM - Assist Edit TableFilter";

      IF EXISTS(FileName) THEN
        ERASE(FileName);

      oFile.TEXTMODE(TRUE);
      oFile.CREATE(FileName);

      oFile.WRITE('OBJECT Page ' + FORMAT(Object.ID) + ' OM - Assist Edit TableFilter');
      oFile.WRITE('{');
      oFile.WRITE('  OBJECT-PROPERTIES');
      oFile.WRITE('  {');
      oFile.WRITE('    Date=' + FORMAT(011012D) + ';');
      oFile.WRITE('    Time=' + FormatTime(120000T) + ';');
      oFile.WRITE('    Version List=OMA9.00;');
      oFile.WRITE('  }');
      oFile.WRITE('  PROPERTIES');
      oFile.WRITE('  {');
      oFile.WRITE('    Editable=No;');
      oFile.WRITE('    CaptionML=[ENU=' + DoubleChar(AllObjWithCaption."Object Caption", ']') + ';');
      oFile.WRITE('               NLD=' + DoubleChar(AllObjWithCaption."Object Caption", ']') + '];');
      oFile.WRITE('    LinksAllowed=No;');
      oFile.WRITE('    SourceTable=Table' + FORMAT(TableNo) + ';');
      oFile.WRITE('    PageType=List;');
      oFile.WRITE('    SourceTableTemporary=Yes;');
      oFile.WRITE('    OnOpenPage=BEGIN');
      oFile.WRITE('                 IF ViewString <> '''' THEN');
      oFile.WRITE('                   SETVIEW(ViewString);');
      oFile.WRITE('               END;');
      oFile.WRITE('');
      oFile.WRITE('  }');
      oFile.WRITE('  CONTROLS');
      oFile.WRITE('  {');
      oFile.WRITE('    { 1   ;    ;Container ;');
      oFile.WRITE('                ContainerType=ContentArea }');
      oFile.WRITE('');
      oFile.WRITE('    { 2   ;1   ;Group     ;');
      oFile.WRITE('                GroupType=Repeater }');

      ControlId := 2;

      Fld.SETRANGE(TableNo, TableNo);
      Fld.SETRANGE(Class, Fld.Class::Normal);
      Fld.SETRANGE(Enabled, TRUE);
      IF Fld.FINDSET THEN
        REPEAT
          ControlId += 1;
          oFile.WRITE('    { ' + PADSTR(FORMAT(ControlId), 4) + ';2   ;Field     ;');
          oFile.WRITE('                SourceExpr=Field' + FORMAT(Fld."No.") + ';');
          oFile.WRITE('                Visible=ColumnsVisible }');

        UNTIL Fld.NEXT = 0;

      oFile.WRITE('');
      oFile.WRITE('  }');
      oFile.WRITE('  CODE');
      oFile.WRITE('  {');
      oFile.WRITE('    VAR');
      oFile.WRITE('      ViewString@1000 : Text;');
      oFile.WRITE('      ColumnsVisible@1001 : Boolean;');
      oFile.WRITE('');
      oFile.WRITE('    PROCEDURE SetRecRef@1(VAR RecRef@1000 : RecordRef);');
      oFile.WRITE('    BEGIN');
      oFile.WRITE('      ViewString := RecRef.GETVIEW;');
      oFile.WRITE('    END;');
      oFile.WRITE('');
      oFile.WRITE('    PROCEDURE GetRecRef@2(VAR RecRef@1000 : RecordRef);');
      oFile.WRITE('    BEGIN');
      oFile.WRITE('      RecRef.SETVIEW := GETVIEW;');
      oFile.WRITE('    END;');
      oFile.WRITE('');
      oFile.WRITE('    BEGIN');
      oFile.WRITE('    END.');
      oFile.WRITE('  }');
      oFile.WRITE('}');

      oFile.CLOSE;

      ObjectMgt.SetErrorHandling(FALSE);
      ObjectMgt.ImportObject(FileName);
      ObjectMgt.CompileObject(Object);
    END;

    LOCAL PROCEDURE DoubleChar@4(Value@1000 : Text;Chars@1001 : Text) ExitValue : Text;
    VAR
      i@1002 : Integer;
      j@1003 : Integer;
    BEGIN
      FOR i := 1 TO STRLEN(Value) DO BEGIN
        FOR j := 1 TO STRLEN(Chars) DO
          IF Value[i] = Chars[j] THEN
            ExitValue += FORMAT(Chars[j]);
        ExitValue += COPYSTR(Value, i, 1);
      END;
    END;

    LOCAL PROCEDURE FormatTime@5(TimeToPrint@1000 : Time) : Text;
    BEGIN
      EXIT(FORMAT(TimeToPrint, 0, '<Hours24>:<Minutes,2>:<Seconds,2>'));
    END;

    LOCAL PROCEDURE CreateTableFilter@6(VAR RecRef@1000 : RecordRef) ExitValue : Text;
    VAR
      Fld@1001 : Record 2000000041;
      FldRef@1002 : FieldRef;
      Filter2@1003 : Text;
      i@1004 : Integer;
    BEGIN
      FOR i := 1 TO RecRef.FIELDCOUNT DO BEGIN
        FldRef := RecRef.FIELDINDEX(i);

        IF FldRef.GETFILTER <> '' THEN BEGIN
          Filter2 := FldRef.GETFILTER;
          IF NOT (FORMAT(FldRef.TYPE) IN [FORMAT(Fld.Type::Decimal)]) THEN
            AddQuotes(Filter2, ',');

          IF ExitValue <> '' THEN
            ExitValue += ',';
          ExitValue += 'Field' + FORMAT(FldRef.NUMBER) + '=' + Filter2;
        END;

      END;

      IF ExitValue <> '' THEN
        ExitValue := EmptyTableFilter(RecRef.NUMBER) + ExitValue;
    END;

    LOCAL PROCEDURE AddQuotes@7(VAR Value@1000 : Text;EscapeChar@1001 : Text);
    VAR
      Value2@1002 : Text;
      i@1003 : Integer;
    BEGIN
      IF (Value[1] <> '"') AND (STRPOS(Value, EscapeChar) = 0) THEN
        EXIT;

      FOR i := 1 TO STRLEN(Value) DO
        IF Value[i] = '"' THEN
          Value2 += '""'
        ELSE
          Value2 += FORMAT(Value[i]);

      Value2 += '"';

      Value := '"' + Value2 + '"';
    END;

    PROCEDURE EmptyTableFilter@8(TableNo@1000 : Integer) : Text;
    VAR
      AllObj@1001 : Record 2000000038;
    BEGIN
      IF AllObj.GET(AllObj."Object Type"::Table, TableNo) THEN
        EXIT(DoubleChar(AllObj."Object Name", ':') + ': ');
    END;

    PROCEDURE FormatTableFilter@9(Text@1000 : Text;TableNo@1001 : Integer) : Text;
    VAR
      EmptyTableFilter2@1002 : Text;
    BEGIN
      EmptyTableFilter2 := EmptyTableFilter(TableNo);
      IF DELSTR(Text, STRLEN(EmptyTableFilter2) + 1) = EmptyTableFilter2 THEN
        EXIT(COPYSTR(Text, STRLEN(EmptyTableFilter2) + 1))
      ELSE
        EXIT(Text);
    END;

    PROCEDURE FilterRecRef@10(VAR RecRef@1000 : RecordRef;TableFilter@1001 : Text;KeyIndex@1002 : Integer);
    VAR
      Fld@1003 : Record 2000000041;
      Mgt@1004 : Codeunit 11102035;
      FldRef@1005 : FieldRef;
      FieldCaption2@1006 : Text;
      FieldFilter@1007 : Text;
      TableName2@1008 : Text;
      Pos@1009 : Integer;
    BEGIN
      Pos := 1;

      IF Mgt.GetValue(TableFilter, Pos, ':', TableName2) THEN BEGIN
        Pos += 1;
        WHILE Mgt.GetValue(TableFilter, Pos, '=', FieldCaption2) AND
              Mgt.GetValue(TableFilter, Pos, ',', FieldFilter)
        DO BEGIN
          Fld.SETRANGE(TableNo, RecRef.NUMBER);
          Fld.SETRANGE("Field Caption", FieldCaption2);
          Fld.SETRANGE(Enabled, TRUE);
          IF Fld.FINDFIRST THEN BEGIN
            FldRef := RecRef.FIELD(Fld."No.");
            FldRef.SETFILTER(FieldFilter);
          END;
        END;
      END;

      IF KeyIndex <> 0 THEN
        RecRef.CURRENTKEYINDEX := KeyIndex;
    END;

    LOCAL PROCEDURE HasInsertPermission@11() : Boolean;
    VAR
      LicensePermission@1000 : Record 2000000043;
      ImportTextFiles@1001 : Boolean;
      ModifyObjects@1002 : Boolean;
    BEGIN
      IF LicensePermission.GET(LicensePermission."Object Type"::System, 1320) THEN
        ImportTextFiles := LicensePermission."Execute Permission" = LicensePermission."Execute Permission"::Yes;

      IF LicensePermission.GET(LicensePermission."Object Type"::Page, PAGE::"OM - Assist Edit TableFilter") THEN
        ModifyObjects := LicensePermission."Modify Permission" = LicensePermission."Modify Permission"::Yes;

      EXIT(ImportTextFiles AND ModifyObjects);
    END;

    LOCAL PROCEDURE UseFilterPageBuilder@13(TableNo@1000 : Integer;VAR TableFilter@1001 : Text);
    VAR
      Object@1002 : Record 2000000001;
      AllObj@1003 : Record 2000000038;
      RecRef@1004 : RecordRef;
      ObjectName@1005 : Text;
      FilterPageBuilder@1006 : FilterPageBuilder;
    BEGIN
      AllObj.GET(AllObj."Object Type", TableNo);
      ObjectName := AllObj."Object Name";
      IF Object.GET(Object.Type, '', Object.ID) THEN BEGIN
        Object.CALCFIELDS(Caption);
        ObjectName := Object.Caption;
      END;

      FilterPageBuilder.ADDTABLE(ObjectName, TableNo);

      RecRef.OPEN(TableNo);

      IF TableFilter <> '' THEN BEGIN
        FilterRecRef(RecRef, TableFilter, 0);
        FilterPageBuilder.SETVIEW(ObjectName, RecRef.GETVIEW);
      END;

      IF FilterPageBuilder.RUNMODAL THEN
        RecRef.SETVIEW(FilterPageBuilder.GETVIEW(ObjectName));
    END;

    BEGIN
    END.
  }
}

