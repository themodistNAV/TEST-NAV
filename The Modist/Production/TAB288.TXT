OBJECT Table 288 Vendor Bank Account
{
  OBJECT-PROPERTIES
  {
    Date=23/03/16;
    Time=12:00:00 PM;
    Version List=NAVW19.00.00.45480,NAVGB9.00.00.45480;
  }
  PROPERTIES
  {
    DataCaptionFields=Vendor No.,Code,Name;
    OnInsert=BEGIN
               IF (GETFILTER("Vendor No.") <> '') AND ("Vendor No." = '') THEN
                 "Vendor No." := GETFILTER("Vendor No.");
             END;

    OnDelete=VAR
               VendorLedgerEntry@1000 : Record 25;
               Vendor@1001 : Record 23;
             BEGIN
               VendorLedgerEntry.SETRANGE("Vendor No.","Vendor No.");
               VendorLedgerEntry.SETRANGE("Recipient Bank Account",Code);
               VendorLedgerEntry.SETRANGE(Open,TRUE);
               IF NOT VendorLedgerEntry.ISEMPTY THEN
                 ERROR(BankAccDeleteErr);
               IF Vendor.GET("Vendor No.") AND (Vendor."Preferred Bank Account" = Code) THEN BEGIN
                 Vendor."Preferred Bank Account" := '';
                 Vendor.MODIFY;
               END;
             END;

    CaptionML=[ENU=Vendor Bank Account;
               ENG=Vendor Bank Account];
    LookupPageID=Page426;
    DrillDownPageID=Page426;
  }
  FIELDS
  {
    { 1   ;   ;Vendor No.          ;Code20        ;TableRelation=Vendor;
                                                   CaptionML=[ENU=Vendor No.;
                                                              ENG=Vendor No.];
                                                   NotBlank=Yes }
    { 2   ;   ;Code                ;Code10        ;CaptionML=[ENU=Code;
                                                              ENG=Code];
                                                   NotBlank=Yes }
    { 3   ;   ;Name                ;Text50        ;CaptionML=[ENU=Name;
                                                              ENG=Name] }
    { 5   ;   ;Name 2              ;Text50        ;CaptionML=[ENU=Name 2;
                                                              ENG=Name 2] }
    { 6   ;   ;Address             ;Text50        ;CaptionML=[ENU=Address;
                                                              ENG=Address] }
    { 7   ;   ;Address 2           ;Text50        ;CaptionML=[ENU=Address 2;
                                                              ENG=Address 2] }
    { 8   ;   ;City                ;Text30        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code".City
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code".City WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidateCity(City,"Post Code",County,"Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=City;
                                                              ENG=City] }
    { 9   ;   ;Post Code           ;Code20        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code"
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code" WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidatePostCode(City,"Post Code",County,"Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Post Code;
                                                              ENG=Post Code] }
    { 10  ;   ;Contact             ;Text50        ;CaptionML=[ENU=Contact;
                                                              ENG=Contact] }
    { 11  ;   ;Phone No.           ;Text30        ;ExtendedDatatype=Phone No.;
                                                   CaptionML=[ENU=Phone No.;
                                                              ENG=Phone No.] }
    { 12  ;   ;Telex No.           ;Text20        ;CaptionML=[ENU=Telex No.;
                                                              ENG=Telex No.] }
    { 13  ;   ;Bank Branch No.     ;Text20        ;CaptionML=[ENU=Bank Branch No.;
                                                              ENG=Bank Sort Code] }
    { 14  ;   ;Bank Account No.    ;Text30        ;CaptionML=[ENU=Bank Account No.;
                                                              ENG=Bank Account No.] }
    { 15  ;   ;Transit No.         ;Text20        ;CaptionML=[ENU=Transit No.;
                                                              ENG=Transit No.] }
    { 16  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=[ENU=Currency Code;
                                                              ENG=Currency Code] }
    { 17  ;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   CaptionML=[ENU=Country/Region Code;
                                                              ENG=Country/Region Code] }
    { 18  ;   ;County              ;Text30        ;CaptionML=[ENU=County;
                                                              ENG=County] }
    { 19  ;   ;Fax No.             ;Text30        ;CaptionML=[ENU=Fax No.;
                                                              ENG=Fax No.] }
    { 20  ;   ;Telex Answer Back   ;Text20        ;CaptionML=[ENU=Telex Answer Back;
                                                              ENG=Telex Answer Back] }
    { 21  ;   ;Language Code       ;Code10        ;TableRelation=Language;
                                                   CaptionML=[ENU=Language Code;
                                                              ENG=Language Code] }
    { 22  ;   ;E-Mail              ;Text80        ;ExtendedDatatype=E-Mail;
                                                   CaptionML=[ENU=E-Mail;
                                                              ENG=E-Mail] }
    { 23  ;   ;Home Page           ;Text80        ;ExtendedDatatype=URL;
                                                   CaptionML=[ENU=Home Page;
                                                              ENG=Home Page] }
    { 24  ;   ;IBAN                ;Code50        ;OnValidate=VAR
                                                                CompanyInfo@1000 : Record 79;
                                                              BEGIN
                                                                CompanyInfo.CheckIBAN(IBAN);
                                                              END;

                                                   CaptionML=[ENU=IBAN;
                                                              ENG=IBAN] }
    { 25  ;   ;SWIFT Code          ;Code20        ;CaptionML=[ENU=SWIFT Code;
                                                              ENG=SWIFT Code] }
    { 1211;   ;Bank Clearing Code  ;Text50        ;CaptionML=[ENU=Bank Clearing Code;
                                                              ENG=Bank Clearing Code] }
    { 1212;   ;Bank Clearing Standard;Text50      ;TableRelation="Bank Clearing Standard";
                                                   CaptionML=[ENU=Bank Clearing Standard;
                                                              ENG=Bank Clearing Standard] }
    { 10550;  ;Reference No.       ;Text30        ;CaptionML=[ENU=Reference No.;
                                                              ENG=Reference No.] }
  }
  KEYS
  {
    {    ;Vendor No.,Code                         ;Clustered=Yes }
  }
  FIELDGROUPS
  {
    { 1   ;Brick               ;Code,Name,Phone No.,Contact              }
  }
  CODE
  {
    VAR
      PostCode@1000 : Record 225;
      BankAccIdentifierIsEmptyErr@1001 : TextConst 'ENU=You must specify either a Bank Account No. or an IBAN.;ENG=You must specify either a Bank Account No. or an IBAN.';
      BankAccDeleteErr@1002 : TextConst 'ENU=You cannot delete this bank account because there are one or more open ledger entries associated with the bank account.;ENG=You cannot delete this bank account because there are one or more open ledger entries associated with the bank account.';

    PROCEDURE GetBankAccountNoWithCheck@14() AccountNo : Text;
    BEGIN
      AccountNo := GetBankAccountNo;
      IF AccountNo = '' THEN
        ERROR(BankAccIdentifierIsEmptyErr);
    END;

    PROCEDURE GetBankAccountNo@1() : Text;
    BEGIN
      IF IBAN <> '' THEN
        EXIT(DELCHR(IBAN,'=<>'));

      IF "Bank Account No." <> '' THEN
        EXIT("Bank Account No.");
    END;

    BEGIN
    END.
  }
}

