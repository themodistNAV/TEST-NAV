OBJECT Page 9063183 POS Mobile Transaction Card
{
  OBJECT-PROPERTIES
  {
    Date=10/05/16;
    Time=12:00:00 PM;
    Version List=NH2016.15;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[ENU=POS Mobile Transaction Card;
               ENG=POS Mobile Transaction Card];
    SourceTable=Table9062778;
    PageType=Card;
    OnOpenPage=BEGIN
                 FindActiveTransaction();

                 LinesText := txtLinesText;
                 ScanText := txtScanText;
                 ScanBarcode := txtScanBarcode;
               END;

    OnAfterGetRecord=BEGIN
                       IF (NOT(SalesHeader.GET(Rec."Sales Document Type", Rec."Sales Document No."))) THEN
                         SalesHeader.INIT();

                       RecRef.OPEN(36);
                       RecRef.GETTABLE(SalesHeader);
                       //These should perhaps be passed via a setup table.
                       MyUrl:=PosJsonFuncs.CreateScannerUrl(RecRef,'ADDLINES',0);
                       RecRef.CLOSE();
                     END;

  }
  CONTROLS
  {
    { 1000000000;0;Container;
                ContainerType=ContentArea }

    { 1000000001;1;Group  ;
                Name=General;
                CaptionML=[ENU=General;
                           ENG=General];
                GroupType=Group }

    { 1000000002;2;Field  ;
                SourceExpr="Entry No" }

    { 1000000003;2;Field  ;
                SourceExpr=Status }

    { 1000000004;2;Field  ;
                SourceExpr="Document Date" }

    { 1000000009;2;Field  ;
                SourceExpr="Order Total" }

    { 1000000005;2;Field  ;
                CaptionML=[ENU=Customer Name;
                           ENG=Customer Name];
                SourceExpr=SalesHeader."Sell-to Customer No." }

    { 1000000006;2;Field  ;
                CaptionML=[ENU=Address;
                           ENG=Address];
                SourceExpr=SalesHeader."Sell-to Address" }

    { 1000000007;2;Field  ;
                CaptionML=[ENU=Post Code;
                           ENG=Post Code];
                SourceExpr=SalesHeader."Sell-to Post Code" }

    { 1000000008;2;Field  ;
                CaptionML=[ENU=City;
                           ENG=City];
                SourceExpr=SalesHeader."Sell-to City" }

    { 1000000010;2;Field  ;
                CaptionML=[ENU=Lines;
                           ENG=Lines];
                SourceExpr=LinesText;
                OnDrillDown=BEGIN
                              ShowLines();
                            END;

                ShowCaption=No }

    { 1000000014;2;Field  ;
                Name=ScanBarcode;
                CaptionML=[ENU=ScanBarcode;
                           ENG=ScanBarcode];
                SourceExpr=ScanBarcode;
                OnDrillDown=BEGIN
                              RecRef.CLOSE;
                              RecRef.OPEN(36);
                              RecRef.GETTABLE(SalesHeader);

                              //MESSAGE(PosJsonFuncs.CreateScannerUrl(RecRef));
                              HYPERLINK(PosJsonFuncs.CreateScannerUrl(RecRef,'ADDITEMS',0));
                              RecRef.CLOSE();
                            END;

                ShowCaption=No }

  }
  CODE
  {
    VAR
      SalesHeader@1000000000 : Record 36;
      LinesText@1000000001 : Text;
      txtLinesText@1000000002 : TextConst 'ENU=Show Lines;ENG=Show Lines';
      ScanText@1000000006 : Text;
      txtScanText@1000000007 : TextConst 'ENU=Scan Item;ENG=Scan Item';
      ScanBarcode@1000000008 : Text;
      txtScanBarcode@1000000009 : TextConst 'ENU=Scan Barcode;ENG=Scan Barcode';
      PosJsonFuncs@1000000010 : Codeunit 9062671;
      MyUrl@1000000011 : Text;
      RecRef@1000000012 : RecordRef;

    LOCAL PROCEDURE ShowLines@1000000000();
    VAR
      SalesLine@1000000000 : Record 37;
      TransactionLines@1000000001 : Page 9063184;
    BEGIN
      IF (SalesHeader.GET(Rec."Sales Document Type", Rec."Sales Document No.")) THEN BEGIN
        SalesLine.RESET();
        SalesLine.FILTERGROUP(4);
        SalesLine.SETRANGE("Document Type", SalesHeader."Document Type");
        SalesLine.SETRANGE("Document No.", SalesHeader."No.");
        SalesLine.FILTERGROUP(0);
        TransactionLines.SETTABLEVIEW(SalesLine);
        TransactionLines.SetTransactionNo(Rec."Entry No");
        TransactionLines.RUNMODAL();
        CurrPage.UPDATE(FALSE);
      END;
    END;

    LOCAL PROCEDURE FindActiveTransaction@1000000001() : Boolean;
    VAR
      POSGlobals@1000000001 : Codeunit 9062662;
      POSHeader@1000000002 : Record 9062778;
      POSDATAFunctions@1000000003 : Codeunit 9062643;
      MyVar@1000000004 : Variant;
    BEGIN

      POSDATAFunctions.StartTransaction(MyVar);

      SETRANGE("User ID", USERID);
      SETRANGE(Status, Status::Active);

      IF POSGlobals.GetPOSUser<> '' THEN
        SETRANGE("POS User",POSGlobals.GetPOSUser);

      IF FINDFIRST() THEN;
    END;

    BEGIN
    {
      //DOC NH2016.12 BM 11/02/2016 - Created
      //DOC NH2016.15 JH 10/05/2016 - CfMD amendments
    }
    END.
  }
}

