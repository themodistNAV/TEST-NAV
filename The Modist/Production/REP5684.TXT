OBJECT Report 5684 Copy FA Entries to G/L Budget
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Copy FA Entries to G/L Budget;
               ENG=Copy FA Entries to G/L Budget];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  IF (EndingDate > 0D) AND (StartingDate > EndingDate) THEN
                    ERROR(Text000);
                  IF EndingDate = 0D THEN
                    EndingDate2 := 31129999D
                  ELSE
                    EndingDate2 := EndingDate;
                  DeprBook.GET(DeprBookCode);

                  IF "Fixed Asset".GETFILTER("FA Posting Group") <> '' THEN
                    ERROR(Text002,"Fixed Asset".FIELDCAPTION("FA Posting Group"));

                  Window.OPEN(Text001);
                END;

  }
  DATASET
  {
    { 3794;    ;DataItem;                    ;
               DataItemTable=Table5600;
               DataItemTableView=SORTING(No.);
               OnPreDataItem=BEGIN
                               WITH FALedgEntry DO BEGIN
                                 SETCURRENTKEY(
                                   "FA No.","Depreciation Book Code",
                                   "FA Posting Category","FA Posting Type","Posting Date");
                                 SETRANGE("Depreciation Book Code",DeprBookCode);
                                 SETRANGE("FA Posting Category","FA Posting Category"::" ");
                                 SETRANGE(
                                   "FA Posting Type",
                                   "FA Posting Type"::"Acquisition Cost","FA Posting Type"::"Custom 2");
                                 SETRANGE("Posting Date",StartingDate,EndingDate2);
                               END;
                             END;

               OnAfterGetRecord=BEGIN
                                  Window.UPDATE(1,"No.");
                                  IF NOT FADeprBook.GET("No.",DeprBookCode) THEN
                                    CurrReport.SKIP;
                                  IF Inactive OR (FADeprBook."Disposal Date" > 0D) THEN
                                    CurrReport.SKIP;

                                  FALedgEntry.SETRANGE("FA No.","No.");
                                  IF FALedgEntry.FIND('-') THEN
                                    REPEAT
                                      IF GetTransferType(FALedgEntry) THEN BEGIN
                                        FADeprBook.TESTFIELD("FA Posting Group");
                                        FALedgEntry."FA Posting Group" := FADeprBook."FA Posting Group";
                                        FALedgEntry.Description := PostingDescription;
                                        BudgetDepreciation.CopyFAToBudget(FALedgEntry,BudgetNameCode,BalAccount,'');
                                      END;
                                    UNTIL FALedgEntry.NEXT = 0;
                                END;

               ReqFilterFields=No.,FA Class Code,FA Subclass Code,Budgeted Asset }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   IF DeprBookCode = '' THEN BEGIN
                     FASetup.GET;
                     DeprBookCode := FASetup."Default Depr. Book";
                   END;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ENG=Options] }

      { 1   ;2   ;Field     ;
                  Name=CopyDeprBook;
                  CaptionML=[ENU=Copy Depr. Book;
                             ENG=Copy Depr. Book];
                  SourceExpr=DeprBookCode;
                  TableRelation="Depreciation Book" }

      { 15  ;2   ;Field     ;
                  Name=CopyToGLBudgetName;
                  CaptionML=[ENU=Copy to G/L Budget Name;
                             ENG=Copy to G/L Budget Name];
                  SourceExpr=BudgetNameCode;
                  TableRelation="G/L Budget Name" }

      { 20  ;2   ;Field     ;
                  CaptionML=[ENU=Starting Date;
                             ENG=Starting Date];
                  SourceExpr=StartingDate }

      { 6   ;2   ;Field     ;
                  CaptionML=[ENU=Ending Date;
                             ENG=Ending Date];
                  SourceExpr=EndingDate }

      { 13  ;2   ;Field     ;
                  CaptionML=[ENU=Posting Description;
                             ENG=Posting Description];
                  SourceExpr=PostingDescription }

      { 3   ;2   ;Field     ;
                  CaptionML=[ENU=Insert Bal. Account;
                             ENG=Insert Bal. Account];
                  SourceExpr=BalAccount }

      { 7   ;2   ;Group     ;
                  CaptionML=[ENU=Copy;
                             ENG=Copy] }

      { 8   ;3   ;Field     ;
                  CaptionML=[ENU=Acquisition Cost;
                             ENG=Acquisition Cost];
                  SourceExpr=TransferType[1] }

      { 9   ;3   ;Field     ;
                  CaptionML=[ENU=Depreciation;
                             ENG=Depreciation];
                  SourceExpr=TransferType[2] }

      { 10  ;3   ;Field     ;
                  CaptionML=[ENU=Write-Down;
                             ENG=Write-Down];
                  SourceExpr=TransferType[3] }

      { 11  ;3   ;Field     ;
                  CaptionML=[ENU=Appreciation;
                             ENG=Appreciation];
                  SourceExpr=TransferType[4] }

      { 12  ;3   ;Field     ;
                  CaptionML=[ENU=Custom 1;
                             ENG=Custom 1];
                  SourceExpr=TransferType[5] }

      { 17  ;3   ;Field     ;
                  CaptionML=[ENU=Custom 2;
                             ENG=Custom 2];
                  SourceExpr=TransferType[6] }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=You must specify an Ending Date that is later than the Starting Date.;ENG=You must specify an Ending Date that is later than the Starting Date.';
      Text001@1001 : TextConst 'ENU=Copying fixed asset    #1##########;ENG=Copying fixed asset    #1##########';
      FASetup@1002 : Record 5603;
      DeprBook@1007 : Record 5611;
      FADeprBook@1003 : Record 5612;
      FALedgEntry@1009 : Record 5601;
      BudgetDepreciation@1006 : Codeunit 5615;
      Window@1013 : Dialog;
      TransferType@1015 : ARRAY [6] OF Boolean;
      BalAccount@1005 : Boolean;
      PostingDescription@1004 : Text[50];
      DeprBookCode@1024 : Code[10];
      BudgetNameCode@1025 : Code[10];
      StartingDate@1027 : Date;
      EndingDate@1028 : Date;
      EndingDate2@1029 : Date;
      Text002@1008 : TextConst 'ENU=You should not set a filter on %1.;ENG=You should not set a filter on %1.';

    LOCAL PROCEDURE GetTransferType@1(VAR FALedgEntry@1000 : Record 5601) : Boolean;
    BEGIN
      WITH FALedgEntry DO
        CASE "FA Posting Type" OF
          "FA Posting Type"::"Acquisition Cost":
            EXIT(TransferType[1]);
          "FA Posting Type"::Depreciation:
            EXIT(TransferType[2]);
          "FA Posting Type"::"Write-Down":
            EXIT(TransferType[3]);
          "FA Posting Type"::Appreciation:
            EXIT(TransferType[4]);
          "FA Posting Type"::"Custom 1":
            EXIT(TransferType[5]);
          "FA Posting Type"::"Custom 2":
            EXIT(TransferType[6]);
        END;
      EXIT(FALSE);
    END;

    PROCEDURE SetTransferType@2(NewAcquisitionCost@1000 : Boolean;NewDepreciation@1001 : Boolean;NewWriteDown@1002 : Boolean;NewAppreciation@1003 : Boolean;NewCustom1@1004 : Boolean;NewCustom2@1005 : Boolean);
    BEGIN
      TransferType[1] := NewAcquisitionCost;
      TransferType[2] := NewDepreciation;
      TransferType[3] := NewWriteDown;
      TransferType[4] := NewAppreciation;
      TransferType[5] := NewCustom1;
      TransferType[6] := NewCustom2;
    END;

    PROCEDURE InitializeRequest@3(NewDeprBookCode@1000 : Code[10];NewBudgetNameCode@1001 : Code[10];NewStartingDate@1002 : Date;NewEndingDate@1003 : Date;NewPostingDescription@1004 : Text[50];NewBalAccount@1005 : Boolean);
    BEGIN
      DeprBookCode := NewDeprBookCode;
      BudgetNameCode := NewBudgetNameCode;
      StartingDate := NewStartingDate;
      EndingDate := NewEndingDate;
      PostingDescription := NewPostingDescription;
      BalAccount := NewBalAccount;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

