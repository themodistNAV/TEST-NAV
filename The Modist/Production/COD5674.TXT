OBJECT Codeunit 5674 FADimensionManagement
{
  OBJECT-PROPERTIES
  {
    Date=09/09/14;
    Time=12:00:00 PM;
    Version List=NAVW18.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=The combination of dimensions used in %1 %2, %3, %4 is blocked. %5;ENG=The combination of dimensions used in %1 %2, %3, %4 is blocked. %5';
      Text001@1001 : TextConst 'ENU=A dimension used in %1 %2, %3, %4 has caused an error. %5;ENG=A dimension used in %1 %2, %3, %4 has caused an error. %5';
      TempSelectedDim@1003 : TEMPORARY Record 369;
      TempSelectedDim2@1004 : TEMPORARY Record 369;
      TempSelectedDim3@1005 : TEMPORARY Record 369;

    PROCEDURE GetSelectedDim@2(VAR SelectedDim@1000 : Record 369);
    BEGIN
      CLEAR(TempSelectedDim);
      TempSelectedDim.RESET;
      TempSelectedDim.DELETEALL;
      IF SelectedDim.FIND('-') THEN
        REPEAT
          TempSelectedDim."Dimension Code" := SelectedDim."Dimension Code";
          TempSelectedDim.INSERT;
        UNTIL SelectedDim.NEXT = 0;
    END;

    PROCEDURE GetDimensions@4(VAR DimBuf@1000 : Record 360);
    BEGIN
      IF TempSelectedDim2.FIND('-') THEN
        REPEAT
          DimBuf."Dimension Code" := TempSelectedDim2."Dimension Code";
          DimBuf."Dimension Value Code" := TempSelectedDim2."New Dimension Value Code";
          DimBuf.INSERT;
        UNTIL TempSelectedDim2.NEXT = 0;
    END;

    PROCEDURE CheckFAAllocDim@5(VAR FAAlloc@1000 : Record 5615;DimSetID@1002 : Integer);
    VAR
      DimMgt@1001 : Codeunit 408;
      TableID@1003 : ARRAY [10] OF Integer;
      No@1004 : ARRAY [10] OF Code[20];
    BEGIN
      IF NOT DimMgt.CheckDimIDComb(DimSetID) THEN
        ERROR(
          Text000,
          FAAlloc.TABLECAPTION,FAAlloc.Code,FAAlloc."Allocation Type",FAAlloc."Line No.",
          DimMgt.GetDimCombErr);

      TableID[1] := DimMgt.TypeToTableID1(0);
      No[1] := FAAlloc."Account No.";

      IF NOT DimMgt.CheckDimValuePosting(TableID,No,DimSetID) THEN
        ERROR(
          Text001,
          FAAlloc.TABLECAPTION,FAAlloc.Code,FAAlloc."Allocation Type",FAAlloc."Line No.",
          DimMgt.GetDimValuePostingErr);
    END;

    PROCEDURE GetFALedgEntryDimID@1(Type@1000 : Integer;DimSetID@1001 : Integer);
    VAR
      DimSetEntry@1002 : Record 480;
    BEGIN
      IF Type = 0 THEN BEGIN
        CLEAR(TempSelectedDim2);
        TempSelectedDim2.RESET;
        TempSelectedDim2.DELETEALL;
      END;
      IF Type = 1 THEN BEGIN
        CLEAR(TempSelectedDim3);
        TempSelectedDim3.RESET;
        TempSelectedDim3.DELETEALL;
      END;
      WITH DimSetEntry DO BEGIN
        SETRANGE("Dimension Set ID",DimSetID);
        IF FIND('-') THEN
          REPEAT
            TempSelectedDim.SETRANGE("Dimension Code","Dimension Code");
            IF TempSelectedDim.FINDFIRST THEN BEGIN
              IF Type = 0 THEN BEGIN
                TempSelectedDim2."Dimension Code" := "Dimension Code";
                TempSelectedDim2."New Dimension Value Code" := "Dimension Value Code";
                TempSelectedDim2.INSERT;
              END;
              IF Type = 1 THEN BEGIN
                TempSelectedDim3."Dimension Code" := "Dimension Code";
                TempSelectedDim3."New Dimension Value Code" := "Dimension Value Code";
                TempSelectedDim3.INSERT;
              END;
            END;
          UNTIL NEXT = 0;
      END;
    END;

    PROCEDURE TestEqualFALedgEntryDimID@3(DimSetID@1000 : Integer) : Boolean;
    BEGIN
      GetFALedgEntryDimID(1,DimSetID);
      IF TempSelectedDim2.COUNT <> TempSelectedDim3.COUNT THEN
        EXIT(FALSE);
      IF TempSelectedDim2.FIND('-') THEN
        REPEAT
          TempSelectedDim3.SETRANGE("Dimension Code",TempSelectedDim2."Dimension Code");
          IF NOT TempSelectedDim3.FINDFIRST THEN
            EXIT(FALSE);
          IF TempSelectedDim2."New Dimension Value Code" <> TempSelectedDim3."New Dimension Value Code" THEN
            EXIT(FALSE);
        UNTIL TempSelectedDim2.NEXT = 0;
      EXIT(TRUE);
    END;

    BEGIN
    END.
  }
}

