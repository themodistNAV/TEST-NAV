OBJECT Table 9087037 Unavailable Stock
{
  OBJECT-PROPERTIES
  {
    Date=05/10/16;
    Time=12:28:47 PM;
    Version List=NS2016.16;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               Rec.TESTFIELD("Item No.");
               UnavailableStockManagement.UnavailableStockToReservationEntry(Rec, nSembleSetup.Activity::Insert, SystemActivity);
               TnpToolkit.UpdateCreatedBy(Rec."Created By", Rec."Created Date Time");
             END;

    OnModify=BEGIN
               UnavailableStockManagement.UnavailableStockToReservationEntry(Rec, nSembleSetup.Activity::Modify, SystemActivity);
               TnpToolkit.UpdateModifiedBy(Rec."Modified By", Rec."Modified Date Time");
             END;

    OnDelete=BEGIN
               UnavailableStockManagement.UnavailableStockToReservationEntry(Rec, nSembleSetup.Activity::Delete, SystemActivity);
             END;

    CaptionML=[ENU=Unavailable Stock;
               ENG=Unavailable Stock];
    LookupPageID=Page9087081;
    DrillDownPageID=Page9087081;
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;AutoIncrement=Yes;
                                                   CaptionML=[ENU=Entry No.;
                                                              ENG=Entry No.] }
    { 10  ;   ;Reservation Entry No.;Integer      ;CaptionML=[ENU=Reservation Entry No.;
                                                              ENG=Reservation Entry No.] }
    { 20  ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   OnValidate=BEGIN
                                                                IF (Rec."Item No." <> xRec."Item No.") THEN
                                                                  Rec.VALIDATE("Variant Code", '');
                                                              END;

                                                   CaptionML=[ENU=Item No.;
                                                              ENG=Item No.] }
    { 21  ;   ;Variant Code        ;Code10        ;TableRelation="Item Variant".Code WHERE (Item No.=FIELD(Item No.));
                                                   CaptionML=[ENU=Variant Code;
                                                              ENG=Variant Code] }
    { 25  ;   ;Item Description    ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Item.Description WHERE (No.=FIELD(Item No.)));
                                                   CaptionML=[ENU=Item Description;
                                                              ENG=Item Description];
                                                   Editable=No }
    { 26  ;   ;Item Variant Description;Text50    ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Item Variant".Description WHERE (Item No.=FIELD(Item No.),
                                                                                                        Code=FIELD(Variant Code)));
                                                   CaptionML=[ENU=Item Variant Description;
                                                              ENG=Item Variant Description];
                                                   Editable=No }
    { 30  ;   ;Location Code       ;Code10        ;TableRelation=Location;
                                                   CaptionML=[ENU=Location Code;
                                                              ENG=Location Code] }
    { 40  ;   ;Quantity            ;Decimal       ;CaptionML=[ENU=Quantity;
                                                              ENG=Quantity];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   BlankZero=Yes }
    { 50  ;   ;Reason Code         ;Code10        ;TableRelation="Reason Code";
                                                   CaptionML=[ENU=Reason Code;
                                                              ENG=Reason Code] }
    { 60  ;   ;Document Type       ;Option        ;OnValidate=BEGIN
                                                                IF (Rec."Document Type" <> xRec."Document Type") THEN
                                                                  Rec.VALIDATE("Document No.", '');
                                                              END;

                                                   CaptionML=[ENU=Document Type;
                                                              ENG=Document Type];
                                                   OptionCaptionML=[ENU=" ,Sales Order,,,,,,,,,,Purchase Order,,,,,,,,,,Transfer Order";
                                                                    ENG=" ,Sales Order,,,,,,,,,,Purchase Order,,,,,,,,,,Transfer Order"];
                                                   OptionString=[ ,Sales Order,,,,,,,,,,Purchase Order,,,,,,,,,,Transfer Order] }
    { 61  ;   ;Document No.        ;Code20        ;OnValidate=BEGIN
                                                                IF (Rec."Document No." <> xRec."Document No.") THEN
                                                                  Rec.VALIDATE("Document Line No.", 0);
                                                              END;

                                                   CaptionML=[ENU=Document No.;
                                                              ENG=Document No.] }
    { 62  ;   ;Document Line No.   ;Integer       ;CaptionML=[ENU=Document Line No.;
                                                              ENG=Document Line No.] }
    { 70  ;   ;Remarks             ;Text50        ;CaptionML=[ENU=Remarks;
                                                              ENG=Remarks] }
    { 1000;   ;Created By          ;Code50        ;OnLookup=BEGIN
                                                              TnpToolkit.UserLookup(Rec."Created By", FALSE);
                                                            END;

                                                   CaptionML=[ENU=Created By;
                                                              ENG=Created By] }
    { 1001;   ;Created Date Time   ;DateTime      ;CaptionML=[ENU=Created Date Time;
                                                              ENG=Created Date Time] }
    { 1002;   ;Modified By         ;Code50        ;OnLookup=BEGIN
                                                              TnpToolkit.UserLookup(Rec."Modified By", FALSE);
                                                            END;

                                                   CaptionML=[ENU=Modified By;
                                                              ENG=Modified By] }
    { 1003;   ;Modified Date Time  ;DateTime      ;CaptionML=[ENU=Modified Date Time;
                                                              ENG=Modified Date Time] }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
    {    ;Item No.,Variant Code,Location Code     ;SumIndexFields=Quantity }
    {    ;Reservation Entry No.                    }
    {    ;Document Type,Document No.,Document Line No. }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      nSembleSetup@1000000003 : Record 9087000;
      TnpToolkit@1000000000 : Codeunit 9062230;
      UnavailableStockManagement@1000000002 : Codeunit 9087020;
      SystemActivity@1000000001 : Boolean;

    PROCEDURE GetItemDescription@1000000007() : Text[50];
    BEGIN
      //DOC NS2015.1 - Returning item description
      //  <- The description

      IF ((Rec."Item No." <> '') AND (Rec."Variant Code" <> '')) THEN
      BEGIN
        Rec.CALCFIELDS("Item Variant Description");
        EXIT(Rec."Item Variant Description");
      END
      ELSE IF (Rec."Item No." <> '') THEN
      BEGIN
        Rec.CALCFIELDS("Item Description");
        EXIT(Rec."Item Description");
      END
      ELSE
        EXIT('');
    END;

    PROCEDURE SetSystemActivity@1000000000(pSystemActivity@1000000000 : Boolean);
    BEGIN
      //DOC NS2015.1 - Setting system activity flag
      //  -> pSystemActivity: The flag

      SystemActivity := pSystemActivity;
    END;

    PROCEDURE ShowItem@1000000004();
    VAR
      lItem@1000000000 : Record 27;
    BEGIN
      //DOC NS2015.1 - Showing item

      Rec.TESTFIELD("Item No.");
      lItem.GET(Rec."Item No.");
      PAGE.RUN(PAGE::"Item Card", lItem);
    END;

    PROCEDURE ShowItemVariant@1000000005();
    VAR
      lItemVariant@1000000000 : Record 5401;
    BEGIN
      //DOC NS2015.1 - Showing item variant

      Rec.TESTFIELD("Item No.");
      Rec.TESTFIELD("Variant Code");
      lItemVariant.RESET();
      lItemVariant.FILTERGROUP(2);
      lItemVariant.SETRANGE("Item No.", Rec."Item No.");
      lItemVariant.FILTERGROUP(0);
      IF (lItemVariant.GET(Rec."Item No.", Rec."Variant Code")) THEN;
      PAGE.RUN(PAGE::"Item Variants", lItemVariant);
    END;

    PROCEDURE ShowDocument@1000000006();
    VAR
      lPurchaseHeader@1000000002 : Record 38;
      lSalesHeader@1000000000 : Record 36;
      lTransferHeader@1000000001 : Record 5740;
    BEGIN
      //DOC NS2015.1 - Showing document

      Rec.TESTFIELD("Document Type");
      Rec.TESTFIELD("Document No.");

      CASE (Rec."Document Type") OF
        Rec."Document Type"::"Sales Order":
          BEGIN
            lSalesHeader.GET(lSalesHeader."Document Type"::Order, Rec."Document No.");
            PAGE.RUN(PAGE::"Sales Order", lSalesHeader);
          END;
        Rec."Document Type"::"Purchase Order":
          BEGIN
            lPurchaseHeader.GET(Rec."Document No.");
            PAGE.RUN(PAGE::"Purchase Order", lPurchaseHeader);
          END;
        Rec."Document Type"::"Transfer Order":
          BEGIN
            lTransferHeader.GET(Rec."Document No.");
            PAGE.RUN(PAGE::"Transfer Order", lTransferHeader);
          END;
      END;
    END;

    PROCEDURE ShowReservationEntry@1000000001();
    VAR
      lReservationEntry@1000000000 : Record 337;
    BEGIN
      //DOC NS2015.1 - Showing reservation entry

      Rec.TESTFIELD("Reservation Entry No.");
      lReservationEntry.GET(Rec."Reservation Entry No.");
      lReservationEntry.SETRECFILTER();
      PAGE.RUN(PAGE::"Reservation Entries");
    END;

    BEGIN
    {
      //DOC NS2015.1  JH 06/02/2014 - Created
      //DOC NS2016.16 JH 07/09/2016 - nSemble 2016
    }
    END.
  }
}

