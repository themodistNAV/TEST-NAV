OBJECT Codeunit 11102056 OM - Debug
{
  OBJECT-PROPERTIES
  {
    Date=19/11/15;
    Time=12:00:00 PM;
    Version List=OMA10.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      StartTime@1000 : Time;
      gFileName@1001 : Text;
      Disabled@1002 : Boolean;

    PROCEDURE DeleteFile@1();
    BEGIN
      IF GetDisabled THEN
        EXIT;

      IF EXISTS(FileName) THEN
        ERASE(FileName);

      StartTime := TIME;
    END;

    PROCEDURE DumpRecRef@2(VAR RecRef@1000 : RecordRef);
    VAR
      oFile@1001 : File;
      FldRef@1002 : FieldRef;
      Tab@1003 : Char;
      i@1004 : Integer;
    BEGIN
      IF GetDisabled THEN
        EXIT;

      oFile.TEXTMODE(TRUE);
      oFile.WRITEMODE(TRUE);

      IF EXISTS(FileName) THEN
        oFile.OPEN(FileName)
      ELSE
        oFile.CREATE(FileName);

      IF oFile.LEN > 0 THEN
        oFile.SEEK(oFile.LEN);

      oFile.WRITE(RecRef.NAME);

      Tab := 9;

      FOR i := 1 TO RecRef.FIELDCOUNT DO BEGIN
        FldRef := RecRef.FIELDINDEX(i);

        IF i > 1 THEN BEGIN
          oFile.SEEK(oFile.POS - 2);
          oFile.WRITE(Tab);
          oFile.SEEK(oFile.POS - 2);
        END;

        oFile.WRITE(FldRef.NAME);

      END;

      IF RecRef.FINDSET THEN
        REPEAT
          FOR i := 1 TO RecRef.FIELDCOUNT DO BEGIN
            FldRef := RecRef.FIELDINDEX(i);

            IF i > 1 THEN BEGIN
              oFile.SEEK(oFile.POS - 2);
              oFile.WRITE(Tab);
              oFile.SEEK(oFile.POS - 2);
            END;

            oFile.WRITE(FORMAT(FldRef));

          END;

        UNTIL RecRef.NEXT = 0;

      oFile.CLOSE;
    END;

    PROCEDURE DumpRecord@3(VAR RecRef@1000 : RecordRef);
    VAR
      oFile@1001 : File;
      FldRef@1002 : FieldRef;
      Tab@1003 : Char;
      i@1004 : Integer;
    BEGIN
      IF GetDisabled THEN
        EXIT;

      oFile.TEXTMODE(TRUE);
      oFile.WRITEMODE(TRUE);

      IF EXISTS(FileName) THEN
        oFile.OPEN(FileName)
      ELSE
        oFile.CREATE(FileName);

      IF oFile.LEN > 0 THEN
        oFile.SEEK(oFile.LEN);

      oFile.WRITE(RecRef.NAME);

      Tab := 9;

      FOR i := 1 TO RecRef.FIELDCOUNT DO BEGIN
        FldRef := RecRef.FIELDINDEX(i);

        oFile.WRITE(FldRef.NAME);
        oFile.SEEK(oFile.POS - 2);
        oFile.WRITE(Tab);
        oFile.SEEK(oFile.POS - 2);
        oFile.WRITE(FORMAT(FldRef));
      END;

      oFile.CLOSE;
    END;

    PROCEDURE DumpFilters@4(VAR RecRef@1000 : RecordRef);
    VAR
      oFile@1001 : File;
      Tab@1002 : Char;
      ActiveFilterGroup@1003 : Integer;
      i@1004 : Integer;
    BEGIN
      IF GetDisabled THEN
        EXIT;

      oFile.TEXTMODE(TRUE);
      oFile.WRITEMODE(TRUE);

      IF EXISTS(FileName) THEN
        oFile.OPEN(FileName)
      ELSE
        oFile.CREATE(FileName);

      IF oFile.LEN > 0 THEN
        oFile.SEEK(oFile.LEN);

      oFile.WRITE(RecRef.NAME);

      Tab := 9;

      ActiveFilterGroup := RecRef.FILTERGROUP;

      oFile.WRITE('Active filtergroup');
      oFile.SEEK(oFile.POS - 2);
      oFile.WRITE(Tab);
      oFile.SEEK(oFile.POS - 2);
      oFile.WRITE(FORMAT(ActiveFilterGroup));

      FOR i := 1 TO 20 DO BEGIN
        RecRef.FILTERGROUP := i;
        IF RecRef.GETFILTERS <> '' THEN BEGIN
          oFile.WRITE('Filtergroup ' + FORMAT(i));
          oFile.SEEK(oFile.POS - 2);
          oFile.WRITE(Tab);
          oFile.SEEK(oFile.POS - 2);
          oFile.WRITE(RecRef.GETFILTERS);
        END;
      END;

      RecRef.FILTERGROUP := ActiveFilterGroup;

      oFile.CLOSE;
    END;

    LOCAL PROCEDURE Write@5(Line@1000 : Variant);
    VAR
      oFile@1001 : File;
    BEGIN
      IF GetDisabled THEN
        EXIT;

      oFile.TEXTMODE(TRUE);
      oFile.WRITEMODE(TRUE);

      IF EXISTS(FileName) THEN
        oFile.OPEN(FileName)
      ELSE
        oFile.CREATE(FileName);

      IF oFile.LEN > 0 THEN
        oFile.SEEK(oFile.LEN);

      oFile.WRITE(FORMAT(Line));
    END;

    PROCEDURE WriteTimeStamp@6();
    VAR
      oFile@1000 : File;
    BEGIN
      IF GetDisabled THEN
        EXIT;

      oFile.TEXTMODE(TRUE);
      oFile.WRITEMODE(TRUE);

      IF EXISTS(FileName) THEN
        oFile.OPEN(FileName)
      ELSE
        oFile.CREATE(FileName);

      IF oFile.LEN > 0 THEN
        oFile.SEEK(oFile.LEN);

      oFile.WRITE(FORMAT(StartTime - TIME));
    END;

    PROCEDURE WriteHeader@7(Header@1000 : Text[1024]);
    VAR
      oFile@1001 : File;
      Left@1002 : Integer;
      Right@1003 : Integer;
    BEGIN
      IF GetDisabled THEN
        EXIT;

      oFile.TEXTMODE(TRUE);
      oFile.WRITEMODE(TRUE);

      IF EXISTS(FileName) THEN
        oFile.OPEN(FileName)
      ELSE
        oFile.CREATE(FileName);

      IF oFile.LEN > 0 THEN
        oFile.SEEK(oFile.LEN);

      oFile.WRITE('');
      oFile.WRITE(PADSTR('', 100, '*'));
      oFile.WRITE(PADSTR('', 100, '*'));

      Left := ROUND((100 - STRLEN(Header) + 2) / 2, 1);
      Right := 100 - Left - STRLEN(Header) - 2;

      oFile.WRITE(PADSTR('', Left, '*') + ' ' + Header + ' ' + PADSTR('', Right, '*'));

      oFile.WRITE(PADSTR('', 100, '*'));
      oFile.WRITE(PADSTR('', 100, '*'));
      oFile.WRITE('');
    END;

    PROCEDURE WriteAsterix@8();
    VAR
      oFile@1000 : File;
    BEGIN
      IF GetDisabled THEN
        EXIT;

      oFile.TEXTMODE(TRUE);
      oFile.WRITEMODE(TRUE);

      IF EXISTS(FileName) THEN
        oFile.OPEN(FileName)
      ELSE
        oFile.CREATE(FileName);

      IF oFile.LEN > 0 THEN
        oFile.SEEK(oFile.LEN);

      oFile.WRITE(PADSTR('', 100, '*'));
    END;

    PROCEDURE SetDisabled@9(NewValue@1000 : Boolean);
    BEGIN
      Disabled := NewValue;
    END;

    LOCAL PROCEDURE GetDisabled@10() : Boolean;
    BEGIN
      EXIT(Disabled);
    END;

    PROCEDURE SetFileName@11(NewValue@1000 : Text);
    BEGIN
      gFileName := NewValue;
    END;

    LOCAL PROCEDURE FileName@12() : Text;
    VAR
      FileHandler@1000 : Codeunit 11102097;
      ctFileName@1001 : TextConst 'DEU=debug.txt;ENU=debug.txt;ESP=debug.txt;FRA=debug.txt;NLD=debug.txt;DEA=debug.txt';
    BEGIN
      IF gFileName = '' THEN
        EXIT(FileHandler.TempDirectory + ctFileName)
      ELSE
        EXIT(FileHandler.TempDirectory + gFileName);
    END;

    PROCEDURE WriteCodeToFile@13(VAR Object@1000 : Record 2000000001);
    VAR
      CALHistoryObject@1001 : Record 11102052;
      CALHistoryLine@1002 : Record 11102053;
      FirstCharacter@1003 : Integer;
      FunctionStartAt@1004 : Integer;
      FunctionType@1005 : ' ,Function,Trigger';
      StopLoop@1006 : Boolean;
    BEGIN
      IF CALHistoryObject.TryGoToLastRecord(Object.Type, Object.ID) THEN BEGIN

        CALHistoryLine.SETRANGE("Entry No.", CALHistoryObject."Entry No.");
        CALHistoryLine.SETRANGE("Sub Line No.", 1);
        IF CALHistoryLine.FINDSET THEN
          REPEAT

            FunctionType := FunctionType::" ";

            IF DELSTR(CALHistoryLine.Code, 15) = '    PROCEDURE ' THEN
              FunctionType := FunctionType::"Function";

            IF DELSTR(CALHistoryLine.Code, 21) = '    LOCAL PROCEDURE ' THEN
              FunctionType := FunctionType::"Function";

            IF DELSTR(CALHistoryLine.Code, 11) = '    EVENT ' THEN
              FunctionType := FunctionType::"Function";

            IF STRLEN(CALHistoryLine.Code) > 5 THEN BEGIN
              IF COPYSTR(CALHistoryLine.Code, STRLEN(CALHistoryLine.Code) - 5) = '=BEGIN' THEN
                FunctionType := FunctionType::Trigger;

              IF COPYSTR(CALHistoryLine.Code, STRLEN(CALHistoryLine.Code) - 3) = '=VAR' THEN
                FunctionType := FunctionType::Trigger;
            END;

            IF FunctionType <> FunctionType::" " THEN BEGIN

              Write('');
              Write('**********************************************************');
              Write(DELCHR(CALHistoryLine.Code, '<'));
              Write('**********************************************************');

              FunctionStartAt := CALHistoryLine."Line No.";

              CASE FunctionType OF
                FunctionType::"Function" :
                  BEGIN
                    FirstCharacter := 5;
                    CALHistoryLine.NEXT;
                  END;

                FunctionType::Trigger :
                  IF COPYSTR(CALHistoryLine.Code, STRLEN(CALHistoryLine.Code) - 2) = 'VAR' THEN
                    FirstCharacter := STRLEN(CALHistoryLine.Code) - 2
                  ELSE
                    FirstCharacter := STRLEN(CALHistoryLine.Code) - 4;
              END;

              IF COPYSTR(CALHistoryLine.Code, STRLEN(CALHistoryLine.Code) - 2) = 'VAR' THEN BEGIN

                CALHistoryLine.SETFILTER("Line No.", '>%1', CALHistoryLine."Line No.");
                IF CALHistoryLine.FINDSET THEN
                  REPEAT
                    IF STRLEN(CALHistoryLine.Code) > 4 THEN
                      StopLoop := COPYSTR(CALHistoryLine.Code, STRLEN(CALHistoryLine.Code) - 4) = 'BEGIN';
                    IF NOT StopLoop THEN
                      StopLoop := CALHistoryLine.NEXT = 0;
                  UNTIL StopLoop;
              END;

              REPEAT
                StopLoop := CALHistoryLine.NEXT = 0;
                IF NOT StopLoop THEN BEGIN
                  StopLoop := COPYSTR(CALHistoryLine.Code, FirstCharacter, 3) = 'END';
                  IF NOT StopLoop THEN
                    Write(COPYSTR(CALHistoryLine.Code, FirstCharacter + 2));

                END;
              UNTIL StopLoop;

              FunctionType := FunctionType::" ";

              CALHistoryLine.SETFILTER("Line No.", '>%1', FunctionStartAt);
            END;

          UNTIL CALHistoryLine.NEXT = 0;

      END;
    END;

    BEGIN
    END.
  }
}

