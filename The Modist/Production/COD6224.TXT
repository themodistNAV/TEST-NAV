OBJECT Codeunit 6224 XML DOM Management
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      EmptyPrefixErr@1000 : TextConst 'ENU=Retrieval of an XML element cannot be done with an empty prefix.;ENG=Retrieval of an XML element cannot be done with an empty prefix.';

    PROCEDURE AddElement@1(VAR XMLNode@1001 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";NodeName@1002 : Text;NodeText@1003 : Text;NameSpace@1004 : Text;VAR CreatedXMLNode@1005 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode") : Integer;
    VAR
      NewChildNode@1006 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      NewChildNode := XMLNode.OwnerDocument.CreateNode('element',NodeName,NameSpace);
      EXIT(AddElementToNode(XMLNode,NewChildNode,NodeText,CreatedXMLNode));
    END;

    PROCEDURE AddRootElement@21(VAR XMLDoc@1000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";NodeName@1002 : Text;VAR CreatedXMLNode@1005 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode");
    BEGIN
      CreatedXMLNode := XMLDoc.CreateElement(NodeName);
      XMLDoc.AppendChild(CreatedXMLNode);
    END;

    PROCEDURE AddRootElementWithPrefix@18(VAR XMLDoc@1000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";NodeName@1002 : Text;Prefix@1007 : Text;NameSpace@1004 : Text;VAR CreatedXMLNode@1005 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode");
    BEGIN
      CreatedXMLNode := XMLDoc.CreateElement(Prefix,NodeName,NameSpace);
      XMLDoc.AppendChild(CreatedXMLNode);
    END;

    PROCEDURE AddElementWithPrefix@9(VAR XMLNode@1001 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";NodeName@1002 : Text;NodeText@1003 : Text;Prefix@1007 : Text;NameSpace@1004 : Text;VAR CreatedXMLNode@1005 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode") : Integer;
    VAR
      NewChildNode@1006 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      NewChildNode := XMLNode.OwnerDocument.CreateElement(Prefix,NodeName,NameSpace);
      EXIT(AddElementToNode(XMLNode,NewChildNode,NodeText,CreatedXMLNode));
    END;

    LOCAL PROCEDURE AddElementToNode@10(VAR XMLNode@1002 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";VAR NewChildNode@1000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";NodeText@1001 : Text;VAR CreatedXMLNode@1003 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode") ExitStatus : Integer;
    BEGIN
      IF ISNULL(NewChildNode) THEN BEGIN
        ExitStatus := 50;
        EXIT;
      END;

      IF NodeText <> '' THEN
        NewChildNode.InnerText := NodeText;

      XMLNode.AppendChild(NewChildNode);
      CreatedXMLNode := NewChildNode;

      ExitStatus := 0;
    END;

    PROCEDURE AddAttribute@2(VAR XMLNode@1001 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";Name@1002 : Text;NodeValue@1003 : Text) : Integer;
    VAR
      XMLNewAttributeNode@1004 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      XMLNewAttributeNode := XMLNode.OwnerDocument.CreateAttribute(Name);
      EXIT(AddAttributeToNode(XMLNode,XMLNewAttributeNode,NodeValue));
    END;

    PROCEDURE AddAttributeWithPrefix@12(VAR XMLNode@1001 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";Name@1002 : Text;Prefix@1005 : Text;NameSpace@1006 : Text;NodeValue@1003 : Text) : Integer;
    VAR
      XMLNewAttributeNode@1004 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      XMLNewAttributeNode := XMLNode.OwnerDocument.CreateAttribute(Prefix,Name,NameSpace);
      EXIT(AddAttributeToNode(XMLNode,XMLNewAttributeNode,NodeValue));
    END;

    LOCAL PROCEDURE AddAttributeToNode@14(VAR XMLNode@1002 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";VAR XMLNewAttributeNode@1000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";NodeValue@1001 : Text) ExitStatus : Integer;
    BEGIN
      IF ISNULL(XMLNewAttributeNode) THEN BEGIN
        ExitStatus := 60;
        EXIT(ExitStatus)
      END;

      IF NodeValue <> '' THEN
        XMLNewAttributeNode.Value := NodeValue;

      XMLNode.Attributes.SetNamedItem(XMLNewAttributeNode);
    END;

    PROCEDURE FindNode@3(XMLRootNode@1000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";NodePath@1001 : Text;VAR FoundXMLNode@1002 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode") : Boolean;
    BEGIN
      IF ISNULL(XMLRootNode) THEN
        EXIT(FALSE);

      FoundXMLNode := XMLRootNode.SelectSingleNode(NodePath);

      IF ISNULL(FoundXMLNode) THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE FindNodeWithNamespace@13(XMLRootNode@1000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";NodePath@1001 : Text;Prefix@1004 : Text;NameSpace@1005 : Text;VAR FoundXMLNode@1002 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode") : Boolean;
    VAR
      XMLNamespaceMgr@1003 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNamespaceManager";
    BEGIN
      IF ISNULL(XMLRootNode) THEN
        EXIT(FALSE);

      XMLNamespaceMgr := XMLNamespaceMgr.XmlNamespaceManager(XMLRootNode.OwnerDocument.NameTable);
      XMLNamespaceMgr.AddNamespace(Prefix,NameSpace);
      FoundXMLNode := XMLRootNode.SelectSingleNode(NodePath,XMLNamespaceMgr);

      IF ISNULL(FoundXMLNode) THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE FindNodesWithNamespace@17(XMLRootNode@1000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";XPath@1001 : Text;Prefix@1004 : Text;NameSpace@1005 : Text;VAR FoundXMLNodeList@1002 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeList") : Boolean;
    VAR
      XMLNamespaceMgr@1003 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNamespaceManager";
    BEGIN
      XMLNamespaceMgr := XMLNamespaceMgr.XmlNamespaceManager(XMLRootNode.OwnerDocument.NameTable);
      XMLNamespaceMgr.AddNamespace(Prefix,NameSpace);
      EXIT(FindNodesWithNamespaceManager(XMLRootNode,XPath,XMLNamespaceMgr,FoundXMLNodeList));
    END;

    PROCEDURE FindNodesWithNamespaceManager@20(XMLRootNode@1000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";XPath@1001 : Text;XMLNamespaceMgr@1003 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNamespaceManager";VAR FoundXMLNodeList@1002 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeList") : Boolean;
    BEGIN
      IF ISNULL(XMLRootNode) THEN
        EXIT(FALSE);

      FoundXMLNodeList := XMLRootNode.SelectNodes(XPath,XMLNamespaceMgr);

      IF ISNULL(FoundXMLNodeList) THEN
        EXIT(FALSE);

      IF FoundXMLNodeList.Count = 0 THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE FindNodeText@5(XMLRootNode@1000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";NodePath@1001 : Text) : Text;
    VAR
      FoundXMLNode@1002 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      IF ISNULL(XMLRootNode) THEN
        EXIT('');

      FoundXMLNode := XMLRootNode.SelectSingleNode(NodePath);

      IF ISNULL(FoundXMLNode) THEN
        EXIT('');

      EXIT(FoundXMLNode.InnerText);
    END;

    PROCEDURE FindNodeTextWithNamespace@16(XMLRootNode@1000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";NodePath@1001 : Text;Prefix@1005 : Text;NameSpace@1004 : Text) : Text;
    VAR
      XMLNamespaceMgr@1003 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNamespaceManager";
    BEGIN
      IF Prefix = '' THEN
        ERROR(EmptyPrefixErr);

      IF ISNULL(XMLRootNode) THEN
        EXIT('');

      XMLNamespaceMgr := XMLNamespaceMgr.XmlNamespaceManager(XMLRootNode.OwnerDocument.NameTable);
      XMLNamespaceMgr.AddNamespace(Prefix,NameSpace);

      EXIT(FindNodeTextNs(XMLRootNode,NodePath,XMLNamespaceMgr));
    END;

    PROCEDURE FindNodeTextNs@15(XMLRootNode@1000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";NodePath@1001 : Text;XmlNsMgr@1002 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNamespaceManager") : Text;
    VAR
      FoundXMLNode@1003 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      FoundXMLNode := XMLRootNode.SelectSingleNode(NodePath,XmlNsMgr);

      IF ISNULL(FoundXMLNode) THEN
        EXIT('');

      EXIT(FoundXMLNode.InnerText);
    END;

    PROCEDURE FindNodes@4(XMLRootNode@1000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";NodePath@1001 : Text;VAR ReturnedXMLNodeList@1002 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeList") : Boolean;
    BEGIN
      ReturnedXMLNodeList := XMLRootNode.SelectNodes(NodePath);

      IF ISNULL(ReturnedXMLNodeList) THEN
        EXIT(FALSE);

      IF ReturnedXMLNodeList.Count = 0 THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE FindAttribute@22(VAR XmlNode@1000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";VAR XmlAttribute@1003 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlAttribute";AttributeName@1002 : Text) : Boolean;
    BEGIN
      XmlAttribute := XmlNode.Attributes.GetNamedItem(AttributeName);
      EXIT(NOT ISNULL(XmlAttribute));
    END;

    PROCEDURE GetAttributeValue@23(xmlNode@1001 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";attributeName@1002 : Text) : Text;
    VAR
      xmlAttribute@1000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlAttribute";
    BEGIN
      xmlAttribute := xmlNode.Attributes.GetNamedItem(attributeName);
      IF ISNULL(xmlAttribute) THEN
        EXIT('');

      EXIT(xmlAttribute.Value)
    END;

    PROCEDURE AddDeclaration@11(VAR XMLDoc@1001 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";Version@1002 : Text;Encoding@1003 : Text;Standalone@1004 : Text);
    VAR
      XMLDeclaration@1000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDeclaration";
    BEGIN
      XMLDeclaration := XMLDoc.CreateXmlDeclaration(Version,Encoding,Standalone);
      XMLDoc.InsertBefore(XMLDeclaration,XMLDoc.DocumentElement);
    END;

    PROCEDURE AddGroupNode@6(VAR XMLNode@1001 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";NodeName@1002 : Text);
    VAR
      XMLNewChild@1003 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
    BEGIN
      AddElement(XMLNode,NodeName,'','',XMLNewChild);
      XMLNode := XMLNewChild;
    END;

    PROCEDURE AddNode@7(VAR XMLNode@1001 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";NodeName@1002 : Text;NodeText@1003 : Text);
    VAR
      XMLNewChild@1004 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      AddElement(XMLNode,NodeName,NodeText,'',XMLNewChild);
    END;

    PROCEDURE AddLastNode@8(VAR XMLNode@1001 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";NodeName@1002 : Text;NodeText@1003 : Text);
    VAR
      XMLNewChild@1004 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      AddElement(XMLNode,NodeName,NodeText,'',XMLNewChild);
      XMLNode := XMLNode.ParentNode;
    END;

    PROCEDURE AddNamespaces@19(VAR XmlNamespaceManager@1000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNamespaceManager";XmlDocument@1005 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument");
    VAR
      XmlAttributeCollection@1003 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlAttributeCollection";
      XmlAttribute@1004 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlAttribute";
    BEGIN
      XmlNamespaceManager := XmlNamespaceManager.XmlNamespaceManager(XmlDocument.NameTable);
      XmlAttributeCollection := XmlDocument.DocumentElement.Attributes;

      IF XmlDocument.DocumentElement.NamespaceURI <> '' THEN
        XmlNamespaceManager.AddNamespace('',XmlDocument.DocumentElement.NamespaceURI);

      FOREACH XmlAttribute IN XmlAttributeCollection DO
        IF STRPOS(XmlAttribute.Name,'xmlns:') = 1 THEN
          XmlNamespaceManager.AddNamespace(DELSTR(XmlAttribute.Name,1,6),XmlAttribute.Value);
    END;

    PROCEDURE XMLEscape@93(Text@1001 : Text) : Text;
    VAR
      XMLDocument@1002 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
      XMLNode@1004 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      XMLDocument := XMLDocument.XmlDocument;
      XMLNode := XMLDocument.CreateElement('XMLEscape');

      XMLNode.InnerText(Text);
      EXIT(XMLNode.InnerXml);
    END;

    [TryFunction]
    PROCEDURE LoadXMLDocumentFromText@24(XmlText@1000 : Text;VAR XMLRootNode@1002 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode");
    VAR
      XMLDocument@1003 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
    BEGIN
      XMLDocument := XMLDocument.XmlDocument;
      XMLDocument.LoadXml(XmlText);
      XMLRootNode := XMLDocument.DocumentElement;
    END;

    [TryFunction]
    PROCEDURE LoadXMLDocumentFromInStream@25(InStream@1001 : InStream;VAR XMLRootNode@1000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode");
    VAR
      XMLDocument@1002 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
    BEGIN
      XMLDocument := XMLDocument.XmlDocument;
      XMLDocument.Load(InStream);
      XMLRootNode := XMLDocument.DocumentElement;
    END;

    BEGIN
    END.
  }
}

