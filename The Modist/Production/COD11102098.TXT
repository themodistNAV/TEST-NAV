OBJECT Codeunit 11102098 OM - Push Objects
{
  OBJECT-PROPERTIES
  {
    Date=19/11/15;
    Time=12:00:00 PM;
    Version List=OMA10.00;
  }
  PROPERTIES
  {
    TableNo=2000000001;
    OnRun=VAR
            Progressbar@1000 : Codeunit 11102044;
            FileHandler@1001 : Codeunit 11102097;
            FileNameMgt@1002 : Codeunit 11102107;
            FileName@1003 : Text;
            ctPushingObjects@1004 : TextConst 'DEU=Transferring objects...;ENU=Transferring objects...;ESP=Transferring objects...;FRA=Transferring objects...;NLD=Objecten overzetten...;DEA=Transferring objects...';
          BEGIN
            CheckDatabase;

            Progressbar.Open(ctPushingObjects, 1);
            Progressbar.BarSize(COUNT * 2);

            IF FINDSET THEN
              REPEAT

                Progressbar.Text1Object(Rec);
                Progressbar.AddToBar(1);

                FileName := FileHandler.TempDirectory + FileNameMgt.ObjectFileName(Rec, 'fob');

                ObjectMgtFrom.ExportObject(Rec, FileName);

                ObjectMgtTo.ImportObject(FileName);

              UNTIL NEXT = 0;

            IF FINDSET THEN
              REPEAT

                Progressbar.Text1Object(Rec);
                Progressbar.AddToBar(1);

                ObjectMgtTo.CompileObject(Rec);

              UNTIL NEXT = 0;

            Progressbar.Close;
          END;

  }
  CODE
  {
    VAR
      ObjectMgtFrom@1000 : Codeunit 11102046;
      ObjectMgtTo@1001 : Codeunit 11102046;
      FromDatabaseCode@1002 : Code[20];
      ToDatabaseCode@1003 : Code[20];

    PROCEDURE SetFromDatabaseCode@1(NewValue@1000 : Text);
    VAR
      NAVDatabase@1001 : Record 11102099;
    BEGIN
      FromDatabaseCode := NewValue;

      IF FromDatabaseCode <> '' THEN
        NAVDatabase.GET(FromDatabaseCode);

      ObjectMgtFrom.SetDatabaseCode(FromDatabaseCode);
    END;

    PROCEDURE SetToDatabaseCode@2(NewValue@1000 : Text);
    VAR
      NAVDatabase@1001 : Record 11102099;
    BEGIN
      ToDatabaseCode := NewValue;

      IF ToDatabaseCode <> '' THEN
        NAVDatabase.GET(ToDatabaseCode);

      ObjectMgtTo.SetDatabaseCode(ToDatabaseCode);
    END;

    LOCAL PROCEDURE CheckDatabase@4();
    VAR
      ctDatabasesAreEqual@1000 : TextConst 'DEU=From and to database must be different.;ENU=From and to database must be different.;ESP=From and to database must be different.;FRA=From and to database must be different.;NLD=De van en naar database mogen niet gelijk zijn.;DEA=From and to database must be different.';
    BEGIN
      IF FromDatabaseCode = ToDatabaseCode THEN
        ERROR(ctDatabasesAreEqual);
    END;

    PROCEDURE MergeInto@5(VAR Object@1000 : Record 2000000001;IntoRight@1001 : Boolean);
    VAR
      SourceControl@1002 : Codeunit 11102050;
      FileHandler@1003 : Codeunit 11102097;
      FileNameMgt@1004 : Codeunit 11102107;
      ClientLeftFileName@1005 : Text;
      ClientRightFileName@1006 : Text;
      Directory@1007 : Text;
      ServerLeftFileName@1008 : Text;
      ServerRightFileName@1009 : Text;
      ctEditObjects@1010 : TextConst 'DEU=Merge Objects;ENU=Merge Objects;ESP=Merge Objects;FRA=Merge Objects;NLD=Objecten mergen;DEA=Merge Objects';
      ctQuestion@1011 : TextConst 'DEU=Merge the objects in the external editor and press OK.;ENU=Merge the objects in the external editor and press OK.;ESP=Merge the objects in the external editor and press OK.;FRA=Merge the objects in the external editor and press OK.;NLD=Merge de objecten in de externe tekst-editor en kies OK.;DEA=Merge the objects in the external editor and press OK.';
    BEGIN
      FileHandler.ErrorIfWebClient;
      CheckDatabase;

      Directory := FileHandler.TempDirectory;

      ServerLeftFileName := Directory + 'left.' + FileNameMgt.GetEditorExtension;
      ObjectMgtFrom.ExportRangeTxt(Object, ServerLeftFileName);
      ClientLeftFileName := FileHandler.DownloadToClient(ServerLeftFileName, '', '');

      ServerRightFileName := Directory + 'right.' + FileNameMgt.GetEditorExtension;
      ObjectMgtTo.ExportRangeTxt(Object, ServerRightFileName);
      ClientRightFileName := FileHandler.DownloadToClient(ServerRightFileName, '', '');

      SourceControl.StartCompareToolFile(ClientLeftFileName, ClientRightFileName);

      IF IntoRight THEN
        SourceControl.OpenEditFileDialog(ctEditObjects, ctQuestion, ClientRightFileName, Object, ToDatabaseCode)
      ELSE
        SourceControl.OpenEditFileDialog(ctEditObjects, ctQuestion, ClientLeftFileName, Object, FromDatabaseCode);
    END;

    BEGIN
    END.
  }
}

