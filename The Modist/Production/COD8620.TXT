OBJECT Codeunit 8620 Config. Package - Import
{
  OBJECT-PROPERTIES
  {
    Date=09/09/14;
    Time=12:00:00 PM;
    Version List=NAVW18.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      PathIsEmptyErr@1001 : TextConst 'ENU=You must enter a file path.;ENG=You must enter a file path.';
      ErrorsImportingPackageErr@1000 : TextConst 'ENU=%1 errors occurred when importing %2 package.;ENG=%1 errors occurred when importing %2 package.';
      PathIsTooLongErr@1002 : TextConst 'ENU=The path cannot be longer than %1 characters.;ENG=The path cannot be longer than %1 characters.';

    PROCEDURE ImportAndApplyRapidStartPackage@1(PackageFileLocation@1000 : Text);
    VAR
      TempConfigSetup@1001 : TEMPORARY Record 8627;
      ErrorCount@1003 : Integer;
      DecompressedFileName@1002 : Text;
      FileLocation@1004 : Text[250];
    BEGIN
      IF PackageFileLocation = '' THEN
        ERROR(PathIsEmptyErr);

      IF STRLEN(PackageFileLocation) > MAXSTRLEN(TempConfigSetup."Package File Name") THEN
        ERROR(PathIsTooLongErr,MAXSTRLEN(TempConfigSetup."Package File Name"));

      FileLocation :=
        COPYSTR(PackageFileLocation,1,MAXSTRLEN(TempConfigSetup."Package File Name"));

      TempConfigSetup.INIT;
      TempConfigSetup.INSERT;
      TempConfigSetup."Package File Name" := FileLocation;
      DecompressedFileName := TempConfigSetup.DecompressPackage(FALSE);

      TempConfigSetup.SetHideDialog(TRUE);
      TempConfigSetup.ReadPackageHeader(DecompressedFileName);
      TempConfigSetup.ImportPackage(DecompressedFileName);
      ErrorCount := TempConfigSetup.ApplyPackages;
      IF ErrorCount > 0 THEN
        ERROR(ErrorsImportingPackageErr,ErrorCount,TempConfigSetup."Package Code");
      TempConfigSetup.ApplyAnswers;
    END;

    BEGIN
    END.
  }
}

