OBJECT Codeunit 9062247 Text Pattern Mgmt
{
  OBJECT-PROPERTIES
  {
    Date=26/08/15;
    Time=12:02:00 PM;
    Version List=NA2016.1;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      CurrPos@1000000000 : Integer;
      TheString@1000000001 : Text[1024];
      inBrackets@1000000002 : Boolean;
      SpaceChars@1000000003 : Text[102];
      SpaceCharDelimiter@1000000004 : Text[1];

    PROCEDURE GetWord@1000000002(StartPos@1000000001 : Integer;VAR theWord@1000000002 : Text[1024]) WordEndPos : Integer;
    VAR
      currChar@1000000003 : Text[1];
      i@1000000004 : Integer;
    BEGIN
      IF StartPos > STRLEN(TheString) THEN EXIT(0);
      i := StartPos;
      REPEAT
        IF inBrackets THEN BEGIN
          IF isCloseBracket(TheString[i]) THEN BEGIN
            inBrackets := FALSE;
            EXIT(i);
          END ELSE BEGIN
            IF NOT IgnoreCharacter(TheString[i]) THEN
              theWord := theWord + FORMAT(TheString[i]);
          END;
        END ELSE BEGIN
          IF isOpenBracket(TheString[i]) THEN BEGIN
            inBrackets := TRUE;
          END ELSE BEGIN
            IF IsSpaceCharacter(TheString[i]) THEN BEGIN
              IF STRLEN(theWord) > 0 THEN EXIT(i);
            END ELSE BEGIN
              IF NOT IgnoreCharacter(TheString[i]) THEN
                theWord := theWord + FORMAT(TheString[i]);
            END;
          END;
        END;
        i += 1;
      UNTIL i > STRLEN(TheString);
      EXIT(i);
    END;

    PROCEDURE GetNextWord@1000000000() theWord : Text[1024];
    BEGIN
      CurrPos += 1;
      CurrPos := GetWord(CurrPos,theWord);
      EXIT(theWord);
    END;

    PROCEDURE GetWordWithBrackets@1000000010(StartPos@1000000001 : Integer;VAR theWord@1000000002 : Text[1024]) WordEndPos : Integer;
    VAR
      currChar@1000000003 : Text[1];
      i@1000000004 : Integer;
    BEGIN
      IF StartPos > STRLEN(TheString) THEN EXIT(0);
      i := StartPos;
      REPEAT
        IF inBrackets THEN BEGIN
          IF NOT IgnoreCharacter(TheString[i]) THEN
            theWord := theWord + FORMAT(TheString[i]);

          IF isCloseBracket(TheString[i]) THEN BEGIN
            inBrackets := FALSE;
            EXIT(i);
          END;
        END ELSE BEGIN
          IF isOpenBracket(TheString[i]) THEN inBrackets := TRUE;
          //IF TheString[i] = ' ' THEN BEGIN
          IF IsSpaceCharacter(TheString[i]) THEN BEGIN
            IF STRLEN(theWord) > 0 THEN EXIT(i);
          END ELSE BEGIN
            IF NOT IgnoreCharacter(TheString[i]) THEN
              theWord := theWord + FORMAT(TheString[i]);
          END;
        END;
        i += 1;
      UNTIL i > STRLEN(TheString);
      EXIT(i);
    END;

    PROCEDURE GetWordIgnoreBrackets@1000000014(StartPos@1000000001 : Integer;VAR theWord@1000000002 : Text[1024]) WordEndPos : Integer;
    VAR
      currChar@1000000003 : Text[1];
      i@1000000004 : Integer;
    BEGIN
      IF StartPos >= STRLEN(TheString) THEN EXIT(0);
      i := StartPos;
      REPEAT
        IF IsSpaceCharacter(TheString[i]) THEN BEGIN
          IF STRLEN(theWord) > 0 THEN EXIT(i);
        END ELSE BEGIN
          IF NOT IgnoreCharacter(TheString[i]) THEN
            theWord := theWord + FORMAT(TheString[i]);
        END;
        i += 1;
      UNTIL i > STRLEN(TheString);
      EXIT(i);
    END;

    PROCEDURE GetNextWordWithBrackets@1000000009() theWord : Text[1024];
    BEGIN
      CurrPos += 1;
      CurrPos := GetWordWithBrackets(CurrPos,theWord);
      EXIT(theWord);
    END;

    PROCEDURE GetNextWordIgnoreBrackets@1000000013(VAR theWord@1000000000 : Text[1024]) Pos : Integer;
    BEGIN
      CurrPos += 1;
      CurrPos := GetWordIgnoreBrackets(CurrPos,theWord);
      EXIT(CurrPos);
    END;

    PROCEDURE SetString@1000000003(Str@1000000000 : Text[1024]);
    BEGIN
      TheString := Str;
    END;

    PROCEDURE SetPos@1000000004(NewPos@1000000000 : Integer);
    BEGIN
      CurrPos := NewPos;
    END;

    PROCEDURE isOpenBracket@1000000001(theChar@1000000000 : Char) : Boolean;
    VAR
      OpenBracket@1000000001 : Text[1];
      OpenSqBracket@1000000004 : Text[1];
      OpenQuote@1000000002 : Text[1];
      OpenQuote2@1000000005 : Text[1];
      OpenoutlookText@1000000003 : Text[1];
    BEGIN
      OpenBracket := '(';
      OpenSqBracket := '[';
      OpenQuote := '"';
      OpenQuote2 := 'Ê';
      OpenoutlookText := '“';

      IF FORMAT(theChar) = OpenBracket THEN EXIT(TRUE);
      IF FORMAT(theChar) = OpenSqBracket THEN EXIT(TRUE);
      IF FORMAT(theChar) = OpenQuote THEN EXIT(TRUE);
      IF FORMAT(theChar) = OpenQuote2 THEN EXIT(TRUE);
      IF FORMAT(theChar) = OpenoutlookText THEN EXIT(TRUE);
      EXIT(FALSE);
    END;

    PROCEDURE isCloseBracket@1000000006(theChar@1000000000 : Char) : Boolean;
    VAR
      CloseBracket@1000000001 : Text[1];
      CloseSqBracket@1000000004 : Text[1];
      CloseQuote@1000000002 : Text[1];
      CloseQuote2@1000000005 : Text[1];
      CloseOutlookText@1000000003 : Text[1];
    BEGIN
      CloseBracket := ')';
      CloseBracket := ']';
      CloseQuote := '"';
      CloseQuote2 := 'Ë';
      CloseOutlookText := '”';
      IF FORMAT(theChar) = CloseBracket THEN EXIT(TRUE);
      IF FORMAT(theChar) = CloseSqBracket THEN EXIT(TRUE);
      IF FORMAT(theChar) = CloseQuote THEN EXIT(TRUE);
      IF FORMAT(theChar) = CloseQuote2 THEN EXIT(TRUE);
      IF FORMAT(theChar) = CloseOutlookText THEN EXIT(TRUE);
      EXIT(FALSE);
    END;

    PROCEDURE SetInBrackets@1000000007(IsInBrackets@1000000000 : Boolean);
    BEGIN
      inBrackets := IsInBrackets;
    END;

    PROCEDURE GetInBrackets@1000000008() : Boolean;
    BEGIN
      EXIT(inBrackets);
    END;

    PROCEDURE IgnoreCharacter@1000000005(theChar@1000000000 : Char) : Boolean;
    BEGIN
      IF FORMAT(theChar) = '?' THEN EXIT(TRUE);

      EXIT(FALSE);
    END;

    PROCEDURE SetSpaceCharacters@1000000011(DelimitedListOfChars@1000000000 : Text[100];Delimiter@1000000001 : Text[1]);
    BEGIN
      SpaceChars := DelimitedListOfChars;
      SpaceCharDelimiter := Delimiter;

      IF SpaceChars[1] <> Delimiter[1] THEN SpaceChars := Delimiter + SpaceChars;
      IF SpaceChars[STRLEN(SpaceChars)] <> Delimiter[1] THEN SpaceChars := SpaceChars + Delimiter;
    END;

    PROCEDURE IsSpaceCharacter@1000000012(theChar@1000000000 : Char) : Boolean;
    BEGIN
      IF SpaceChars = '' THEN EXIT(theChar = ' ');

      EXIT(STRPOS(SpaceChars,SpaceCharDelimiter + FORMAT(theChar) + SpaceCharDelimiter) <> 0);
    END;

    BEGIN
    {
      //DOC NA2015.1 JH 10/08/2012 - Migrated to 2013
      //DOC NA2016.1 JH 26/08/2015 - Upgraded to 2016
    }
    END.
  }
}

