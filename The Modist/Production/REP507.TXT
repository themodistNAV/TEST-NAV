OBJECT Report 507 XBRL Copy Setup
{
  OBJECT-PROPERTIES
  {
    Date=07/09/12;
    Time=12:00:00 PM;
    Version List=NAVW17.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=XBRL Copy Setup;
               ENG=XBRL Copy Setup];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  IF FromTaxonomyName = '' THEN
                    ERROR(Text002);
                  IF ToTaxonomyName = '' THEN
                    ERROR(Text003);
                  IF FromTaxonomyName = ToTaxonomyName THEN
                    ERROR(Text004);
                END;

  }
  DATASET
  {
    { 6023;    ;DataItem;FromXBRLLine        ;
               DataItemTable=Table395;
               DataItemTableView=SORTING(XBRL Taxonomy Name,Line No.);
               OnPreDataItem=BEGIN
                               SETRANGE("XBRL Taxonomy Name",FromTaxonomyName);
                               ToXBRLLine.SETCURRENTKEY(Name);
                               ToXBRLLine.SETRANGE("XBRL Taxonomy Name",ToTaxonomyName);
                               NoOfRecords := COUNT;
                               Window.OPEN(Text001);
                               T0 := TIME;
                               T1 := T0;
                             END;

               OnAfterGetRecord=BEGIN
                                  Progress := Progress + 1;
                                  T1 := TIME;
                                  IF T1 > T0 + 250 THEN BEGIN
                                    Window.UPDATE(1,ROUND(Progress * 10000 / NoOfRecords,1));
                                    T0 := TIME;
                                    T1 := T0;
                                  END;

                                  ToXBRLLine.SETRANGE(Name,Name);
                                  IF ToXBRLLine.FINDFIRST THEN BEGIN
                                    ToXBRLLine.Description := Description;
                                    ToXBRLLine."Constant Amount" := "Constant Amount";
                                    ToXBRLLine."Source Type" := "Source Type";
                                    ToXBRLLine.MODIFY;

                                    FromXBRLCommentLine.SETRANGE("XBRL Taxonomy Name","XBRL Taxonomy Name");
                                    FromXBRLCommentLine.SETRANGE("XBRL Taxonomy Line No.","Line No.");
                                    FromXBRLCommentLine.SETRANGE("Comment Type",FromXBRLCommentLine."Comment Type"::Notes);
                                    IF FromXBRLCommentLine.FIND('-') THEN
                                      REPEAT
                                        ToXBRLCommentLine := FromXBRLCommentLine;
                                        ToXBRLCommentLine."XBRL Taxonomy Name" := ToXBRLLine."XBRL Taxonomy Name";
                                        ToXBRLCommentLine."XBRL Taxonomy Line No." := ToXBRLLine."Line No.";
                                        IF ToXBRLCommentLine.INSERT THEN;
                                      UNTIL FromXBRLCommentLine.NEXT = 0;

                                    FromXBRLGLMapLine.SETRANGE("XBRL Taxonomy Name","XBRL Taxonomy Name");
                                    FromXBRLGLMapLine.SETRANGE("XBRL Taxonomy Line No.","Line No.");
                                    IF FromXBRLGLMapLine.FIND('-') THEN
                                      REPEAT
                                        ToXBRLGLMapLine := FromXBRLGLMapLine;
                                        ToXBRLGLMapLine."XBRL Taxonomy Name" := ToXBRLLine."XBRL Taxonomy Name";
                                        ToXBRLGLMapLine."XBRL Taxonomy Line No." := ToXBRLLine."Line No.";
                                        IF ToXBRLGLMapLine.INSERT THEN;
                                      UNTIL FromXBRLGLMapLine.NEXT = 0;
                                  END ELSE
                                    CurrReport.SKIP;
                                END;

               OnPostDataItem=BEGIN
                                Window.CLOSE;
                              END;
                               }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ENG=Options] }

      { 1   ;2   ;Field     ;
                  CaptionML=[ENU=From Taxonomy Name;
                             ENG=From Taxonomy Name];
                  SourceExpr=FromTaxonomyName;
                  OnValidate=BEGIN
                               ValidateTaxonomy(FromTaxonomyName);
                             END;

                  OnLookup=BEGIN
                             EXIT(LookupTaxonomy(Text));
                           END;
                            }

      { 3   ;2   ;Field     ;
                  CaptionML=[ENU=To Taxonomy Name;
                             ENG=To Taxonomy Name];
                  SourceExpr=ToTaxonomyName;
                  OnValidate=BEGIN
                               ValidateTaxonomy(ToTaxonomyName);
                             END;

                  OnLookup=BEGIN
                             EXIT(LookupTaxonomy(Text));
                           END;
                            }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      ToXBRLLine@1000 : Record 395;
      FromXBRLCommentLine@1001 : Record 396;
      ToXBRLCommentLine@1002 : Record 396;
      FromXBRLGLMapLine@1003 : Record 397;
      ToXBRLGLMapLine@1004 : Record 397;
      FromTaxonomyName@1005 : Code[20];
      ToTaxonomyName@1006 : Code[20];
      NoOfRecords@1007 : Integer;
      Progress@1008 : Integer;
      Window@1009 : Dialog;
      Text001@1010 : TextConst 'ENU=Copying Setup @1@@@@@@@@;ENG=Copying Setup @1@@@@@@@@';
      T0@1011 : Time;
      T1@1012 : Time;
      Text002@1013 : TextConst 'ENU=You must enter a From Taxonomy Name.;ENG=You must enter a From Taxonomy Name.';
      Text003@1014 : TextConst 'ENU=You must enter a To Taxonomy Name.;ENG=You must enter a To Taxonomy Name.';
      Text004@1015 : TextConst 'ENU=To and From Taxonomy Names must be different.;ENG=To and From Taxonomy Names must be different.';

    LOCAL PROCEDURE LookupTaxonomy@5(VAR Text@1000 : Text[1024]) : Boolean;
    VAR
      XBRLTaxonomy@1001 : Record 394;
      XBRLTaxonomies@1002 : Page 582;
    BEGIN
      XBRLTaxonomy.Name := COPYSTR(Text,1,MAXSTRLEN(XBRLTaxonomy.Name));
      IF XBRLTaxonomy.FIND('=<>') THEN;
      XBRLTaxonomies.SETRECORD(XBRLTaxonomy);
      XBRLTaxonomies.LOOKUPMODE := TRUE;
      IF XBRLTaxonomies.RUNMODAL = ACTION::LookupOK THEN BEGIN
        XBRLTaxonomies.GETRECORD(XBRLTaxonomy);
        Text := XBRLTaxonomy.Name;
        EXIT(TRUE);
      END;
      EXIT(FALSE);
    END;

    LOCAL PROCEDURE ValidateTaxonomy@6(TaxonomyName@1000 : Code[20]);
    VAR
      XBRLTaxonomy@1001 : Record 394;
    BEGIN
      XBRLTaxonomy.GET(TaxonomyName);
    END;

    PROCEDURE SetCopyTo@1(NewToTaxonomyName@1000 : Code[20]);
    BEGIN
      ToTaxonomyName := NewToTaxonomyName;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

