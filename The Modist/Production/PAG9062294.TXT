OBJECT Page 9062294 Enhanced Workflow Confirmation
{
  OBJECT-PROPERTIES
  {
    Date=10/05/16;
    Time=12:00:00 PM;
    Version List=NA2016.15;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Enhanced Workflow Confirmation;
               ENG=Enhanced Workflow Confirmation];
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    SourceTable=Table9062258;
    PageType=StandardDialog;
    OnOpenPage=VAR
                 i@1000000000 : Integer;
               BEGIN
                 IF (Rec.GETFILTER("Activity to Pass") <> '') THEN
                   Activity := Rec.GETRANGEMIN("Activity to Pass")
                 ELSE
                   Activity := Rec."Activity to Pass"::Create;

                 CreateEnabled := (Activity = Rec."Activity to Pass"::Create);
                 CancelEnabled := (Activity = Rec."Activity to Pass"::Cancel);

                 IF WFlowNo = '' THEN BEGIN
                   i := 0;


                   REPEAT
                     FILTERGROUP(i);
                     WFlowNo := GETFILTER("No.");
                     i += 1;
                   UNTIL (i >= 10) OR (WFlowNo <> '');

                   IF WFlowNo = '' THEN
                     ERROR(tWorkflowNoNotSet)
                   ELSE BEGIN

                     IF NOT WFlowIn.WorkflowIsEnabled(WFlowNo) THEN ERROR(tWorkflowDisabled,WFlowNo);

                     FINDFIRST;
                     WFlow.GET(WFlowNo);

                     PK1 := GETFILTER("Primary Key 1 To Pass");
                     PK2 := GETFILTER("Primary Key 2 To Pass");
                     PK3 := GETFILTER("Primary Key 3 To Pass");
                     PK4 := GETFILTER("Primary Key 4 To Pass");

                     InfoText := GETFILTER("Information Text To Pass");
                     Routing := GETFILTER("Routing Parameter To Pass");
                     AmountFilter := GETFILTER("Amount To Pass");
                     IF AmountFilter <> '' THEN
                       EVALUATE(Amount,AmountFilter);

                     PosText := TNPUtils.GetPositionTextUsingPrimaryKeyValues(WFlow."Table ID",PK1,PK2,PK3,PK4,'');
                     IF PosText = '' THEN MESSAGE(tCouldntFindRecord,WFlow."Table ID");

                     IF ( NOT (AllObj.GET(AllObj."Object Type"::Table, WFlow."Table ID"))) THEN
                       CLEAR(AllObj);

                   END;

                 END;
               END;

    OnAfterGetRecord=VAR
                       i@1000000000 : Integer;
                     BEGIN
                     END;

    OnQueryClosePage=VAR
                       Result@1000000001 : Text;
                       GroupWorkflow@9062230 : Record 9062265;
                     BEGIN
                       CASE FORMAT(CloseAction) OF
                         'Cancel' :
                           CASE (Activity) OF
                             Rec."Activity to Pass"::Create:
                               MESSAGE(tWorkflowNotCreated);
                             Rec."Activity to Pass"::Cancel:
                               MESSAGE(tWorkflowNotCancelled);
                           END;
                         'OK':
                           CASE (Activity) OF
                             Rec."Activity to Pass"::Create:
                               BEGIN
                                 Result := WFlowIn.New(WFlow."No.",InfoText,'',Amount,Routing,PosText);
                                 //DOC NA2016.10 PC >>>
                                 IF NOT GroupWorkflow.GET(Result) THEN
                                   MESSAGE(tWorkflowNotCreated);
                                 //DOC NA2016.10 PC <<<
                               END;
                             Rec."Activity to Pass"::Cancel:
                               WFlowIn.CancelWorkflowsAndSetStatus(WFlow."Table ID",PosText, WFlow."No.");
                           END;
                       END;
                     END;

  }
  CONTROLS
  {
    { 1000000008;0;Container;
                ContainerType=ContentArea }

    { 1000000007;1;Group  ;
                Name=Create;
                CaptionML=[ENU=Create;
                           ENG=Create];
                Visible=CreateEnabled;
                Enabled=CreateEnabled;
                GroupType=Group }

    { 1000000009;2;Group  ;
                GroupType=GridLayout }

    { 1000000005;3;Group  ;
                GroupType=Group }

    { 1000000006;4;Field  ;
                CaptionML=[ENU=Create Workflow of Type;
                           ENG=Create Workflow of Type];
                SourceExpr=Description;
                Visible=CreateEnabled;
                Enabled=CreateEnabled }

    { 1000000002;1;Group  ;
                Name=Cancel;
                CaptionML=[ENU=Cancel;
                           ENG=Cancel];
                Visible=CancelEnabled;
                Enabled=CancelEnabled;
                GroupType=Group }

    { 1000000003;2;Group  ;
                GroupType=GridLayout }

    { 1000000004;3;Group  ;
                GroupType=Group }

    { 1000000000;4;Field  ;
                Name=CancelDesc;
                CaptionML=[ENU=Cancel Workflow of Type;
                           ENG=Cancel Workflow of Type];
                SourceExpr=Description;
                Visible=CancelEnabled;
                Enabled=CancelEnabled }

    { 1000000001;4;Field  ;
                Name=PosText;
                CaptionML=[ENU=For All Records Where;
                           ENG=For All Records Where];
                SourceExpr=PosText;
                Visible=CancelEnabled;
                Enabled=CancelEnabled;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      WFlowIn@1000000000 : Codeunit 9062262;
      TNPUtils@1000000001 : Codeunit 9062229;
      WFlowNo@1000000002 : Code[20];
      PK1@1000000003 : Text;
      PK2@1000000004 : Text;
      PK3@1000000005 : Text;
      PK4@1000000006 : Text;
      AmountFilter@1000000009 : Text;
      Amount@1000000012 : Decimal;
      Routing@1000000010 : Code[10];
      InfoText@1000000011 : Text[250];
      WFlow@1000000007 : Record 9062258;
      PosText@1000000008 : Text;
      tWorkflowNoNotSet@1000000013 : TextConst 'ENU=Sorry, workflow number has not been set for this button;ENG=Sorry, workflow number has not been set for this button';
      tCouldntFindRecord@1000000014 : TextConst 'ENU=Sorry, couldn''t find the related record in table %1;ENG=Sorry, couldn''t find the related record in table %1';
      tWorkflowNotCreated@1000000015 : TextConst 'ENU=Workflow not created;ENG=Workflow not created';
      Activity@1000000016 : Integer;
      tWorkflowNotCancelled@1000000017 : TextConst 'ENU=Workflow(s) not cancelled;ENG=Workflow(s) not cancelled';
      CreateEnabled@1000000020 : Boolean INDATASET;
      CancelEnabled@1000000019 : Boolean INDATASET;
      AllObj@1000000018 : Record 2000000038;
      tWorkflowDisabled@1000000021 : TextConst 'ENU=The Workflow %1 is currently disabled;ENG=The Workflow %1 is currently disabled';

    BEGIN
    {
      //DOC NA2015.1  JH 10/07/2013 - Text constants, dynamic information text
      //DOC NA2016.1  JH 28/08/2015 - Upgraded to 2016
      //DOC NA2016.10 PC 25/09/2015 - Added code to tell user if Workflow not created succesfully
      //DOC NA2016.15 JH 10/05/2016 - CfMD amendments
    }
    END.
  }
}

