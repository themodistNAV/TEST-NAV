OBJECT Report 83 Change Global Dimensions
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00,NAVGB9.00;
  }
  PROPERTIES
  {
    Permissions=TableData 17=imd,
                TableData 21=imd,
                TableData 25=imd,
                TableData 32=imd,
                TableData 110=imd,
                TableData 111=imd,
                TableData 112=imd,
                TableData 113=imd,
                TableData 114=imd,
                TableData 115=imd,
                TableData 120=imd,
                TableData 121=imd,
                TableData 122=imd,
                TableData 123=imd,
                TableData 124=imd,
                TableData 125=imd,
                TableData 169=imd,
                TableData 171=imd,
                TableData 174=imd,
                TableData 203=imd,
                TableData 271=imd,
                TableData 281=imd,
                TableData 297=imd,
                TableData 304=imd,
                TableData 379=imd,
                TableData 380=imd,
                TableData 1001=imd,
                TableData 1004=imd,
                TableData 1005=imd,
                TableData 5107=imd,
                TableData 5108=imd,
                TableData 5109=imd,
                TableData 5110=imd,
                TableData 5601=imd,
                TableData 5625=imd,
                TableData 5629=imd,
                TableData 5802=imd,
                TableData 5832=imd,
                TableData 5907=imd,
                TableData 5908=imd,
                TableData 5965=imd,
                TableData 5970=imd,
                TableData 5971=imd,
                TableData 6650=imd,
                TableData 6651=imd,
                TableData 6660=imd,
                TableData 6661=imd,
                TableData 8383=imd;
    CaptionML=[ENU=Change Global Dimensions;
               ENG=Change Global Dimensions];
    ProcessingOnly=Yes;
    OnPreReport=VAR
                  Dim@1000 : Record 348;
                BEGIN
                  IF NewGlobalDim1Code <> GLSetup."Global Dimension 1 Code" THEN BEGIN
                    ConfirmationMessage :=
                      GLSetup.FIELDCAPTION("Global Dimension 1 Code") + ' (' +
                      GLSetup.FIELDCAPTION("Shortcut Dimension 1 Code") + ')';
                    IF NewGlobalDim2Code <> GLSetup."Global Dimension 2 Code" THEN
                      ConfirmationMessage := ConfirmationMessage + Text000 +
                        GLSetup.FIELDCAPTION("Global Dimension 2 Code") + ' (' +
                        GLSetup.FIELDCAPTION("Shortcut Dimension 2 Code") + ')';
                  END ELSE
                    IF NewGlobalDim2Code <> GLSetup."Global Dimension 2 Code" THEN
                      ConfirmationMessage :=
                        GLSetup.FIELDCAPTION("Global Dimension 2 Code") + ' (' +
                        GLSetup.FIELDCAPTION("Shortcut Dimension 2 Code") + ')';

                  IF ConfirmationMessage <> '' THEN BEGIN
                    IF (NewGlobalDim1Code = GLSetup."Global Dimension 2 Code") AND
                       (NewGlobalDim2Code = GLSetup."Global Dimension 1 Code")
                    THEN BEGIN
                      MESSAGE(Text001);
                      CurrReport.QUIT;
                    END;
                    IF Dim.CheckIfDimUsed(NewGlobalDim1Code,1,'','',0) THEN
                      ERROR(
                        Text002,
                        Dim.GetCheckDimErr,GLSetup.FIELDCAPTION("Global Dimension 1 Code"));
                    IF Dim.CheckIfDimUsed(NewGlobalDim2Code,2,'','',0) THEN
                      ERROR(
                        Text002,
                        Dim.GetCheckDimErr,GLSetup.FIELDCAPTION("Global Dimension 2 Code"));
                    IF NOT CONFIRM(Text003,FALSE,ConfirmationMessage) THEN
                      CurrReport.QUIT;
                  END ELSE
                    CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   IF ChangeGlobalDim THEN BEGIN
                     GLSetup.VALIDATE("Global Dimension 1 Code",NewGlobalDim1Code);
                     GLSetup.VALIDATE("Global Dimension 2 Code",NewGlobalDim2Code);
                     GLSetup.MODIFY(TRUE);
                     MESSAGE(
                       Text004,
                       ConfirmationMessage);
                   END;
                 END;

  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnOpenPage=BEGIN
                   GLSetup.GET;
                   NewGlobalDim1Code := GLSetup."Global Dimension 1 Code";
                   NewGlobalDim2Code := GLSetup."Global Dimension 2 Code";
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ENG=Options] }

      { 1   ;2   ;Field     ;
                  CaptionML=[ENU=Global Dimension 1 Code;
                             ENG=Global Dimension 1 Code];
                  SourceExpr=NewGlobalDim1Code;
                  TableRelation=Dimension;
                  OnValidate=BEGIN
                               IF NewGlobalDim1Code = NewGlobalDim2Code THEN
                                 NewGlobalDim2Code := '';
                             END;
                              }

      { 3   ;2   ;Field     ;
                  CaptionML=[ENU=Global Dimension 2 Code;
                             ENG=Global Dimension 2 Code];
                  SourceExpr=NewGlobalDim2Code;
                  TableRelation=Dimension;
                  OnValidate=BEGIN
                               IF NewGlobalDim1Code = NewGlobalDim2Code THEN
                                 NewGlobalDim1Code := '';
                             END;
                              }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=" and ";ENG=" and "';
      Text001@1001 : TextConst 'ENU=You must run this batch job twice to reverse the global dimensions.;ENG=You must run this batch job twice to reverse the global dimensions.';
      Text002@1002 : TextConst 'ENU=%1\You cannot use it as %2.;ENG=%1\You cannot use it as %2.';
      Text003@1003 : TextConst 'ENU=Are you sure that you want to change:\%1?;ENG=Are you sure that you want to change:\%1?';
      Text004@1004 : TextConst 'ENU=The following dimensions have been successfully changed:\%1.;ENG=The following dimensions have been successfully changed:\%1.';
      Text005@1005 : TextConst 'ENU=Database information\;ENG=Database information\';
      Text006@1006 : TextConst 'ENU=" No. of Records        #1######\";ENG=" No. of Records        #1######\"';
      Text007@1007 : TextConst 'ENU=" Progress              @2@@@@@@@@@@@@@\";ENG=" Progress              @2@@@@@@@@@@@@@\"';
      Text008@1008 : TextConst 'ENU=" Estimated Ending Time #3#######################\";ENG=" Estimated Ending Time #3#######################\"';
      Text009@1009 : TextConst 'ENU=Table information\;ENG=Table information\';
      Text010@1010 : TextConst 'ENU=" Company               #4#######################\";ENG=" Company               #4#######################\"';
      Text011@1011 : TextConst 'ENU=" Table                 #5#######################\";ENG=" Table                 #5#######################\"';
      Text012@1012 : TextConst 'ENU=" No. of Records        #6######\";ENG=" No. of Records        #6######\"';
      Text013@1013 : TextConst 'ENU=" Progress              @7@@@@@@@@@@@@@";ENG=" Progress              @7@@@@@@@@@@@@@"';
      Text014@1014 : TextConst 'ENU=Please wait while the operation is being completed.;ENG=Please wait while the operation is being completed.';
      Text015@1015 : TextConst 'ENU=<Hours24>:<Minutes,2>;ENG=<Hours24>:<Minutes,2>';
      DimVal@1105 : Record 349;
      ItemBudgetEntry@1141 : Record 7134;
      GLSetup@1016 : Record 98;
      GLAcc@1017 : Record 15;
      GLEntry@1018 : Record 17;
      Cust@1019 : Record 18;
      CustLedgEntry@1020 : Record 21;
      DtldCustLedgEntry@1021 : Record 379;
      Vend@1022 : Record 23;
      VendorLedgEntry@1023 : Record 25;
      DtldVendLedgEntry@1024 : Record 380;
      Item@1113 : Record 27;
      ItemLedgEntry@1025 : Record 32;
      SalesHeader@1026 : Record 36;
      SalesLine@1027 : Record 37;
      PurchHeader@1028 : Record 38;
      PurchLine@1029 : Record 39;
      GenJnlLine@1030 : Record 81;
      ItemJnlLine@1031 : Record 83;
      GLBudgetEntry@1033 : Record 96;
      SalesShptHeader@1034 : Record 110;
      SaleShptLine@1035 : Record 111;
      SalesInvHeader@1036 : Record 112;
      SalesInvLine@1037 : Record 113;
      ReturnRcptHeader@1038 : Record 6660;
      ReturnRcptLine@1039 : Record 6661;
      SalesCrMemoHeader@1040 : Record 114;
      SalesCrMemoLine@1041 : Record 115;
      PurchRcptHeader@1042 : Record 120;
      PurchRcptLine@1043 : Record 121;
      PurchInvHeader@1044 : Record 122;
      PurchInvLine@1045 : Record 123;
      PurchCrMemoHeader@1046 : Record 124;
      PurchCrMemoLine@1047 : Record 125;
      ServHeader@1048 : Record 5900;
      ServLine@1049 : Record 5902;
      ServShptHeader@1129 : Record 5990;
      ServShptLine@1128 : Record 5991;
      ServInvHeader@1127 : Record 5992;
      ServInvLine@1124 : Record 5993;
      ServCrMemoHeader@1131 : Record 5994;
      ServCrMemoLine@1130 : Record 5995;
      ReturnShptHeader@1053 : Record 6650;
      ReturnShptLine@1054 : Record 6651;
      ResGr@1055 : Record 152;
      Res@1056 : Record 156;
      Job@1057 : Record 167;
      JobLedgEntry@1058 : Record 169;
      ResLedgEntry@1059 : Record 203;
      StdSalesLine@1114 : Record 171;
      StdPurchLine@1115 : Record 174;
      ValueEntry@1060 : Record 5802;
      CapLedgEntry@1106 : Record 5832;
      ResJnlLine@1061 : Record 207;
      JobJnlLine@1062 : Record 210;
      GenJnlAlloc@1063 : Record 221;
      ReqLine@1064 : Record 246;
      BankAcc@1065 : Record 270;
      BankAccLedgEntry@1066 : Record 271;
      PhysInvtLedgEntry@1067 : Record 281;
      ReminderHeader@1068 : Record 295;
      IssuedReminderHeader@1069 : Record 297;
      FinChrgMemoHeader@1070 : Record 302;
      IssuedFinChrgMemoHeader@1071 : Record 304;
      Employee@1072 : Record 5200;
      ProdOrder@1107 : Record 5405;
      ProdOrderLine@1073 : Record 5406;
      ProdOrderComp@1074 : Record 5407;
      FA@1075 : Record 5600;
      FALedgEntry@1076 : Record 5601;
      FAAlloc@1077 : Record 5615;
      FAJnlLine@1078 : Record 5621;
      MaintenanceLedgEntry@1079 : Record 5625;
      Insurance@1080 : Record 5628;
      InsCovLedgEntry@1081 : Record 5629;
      InsuranceJnlLine@1082 : Record 5635;
      RespCenter@1083 : Record 5714;
      SalespersonPurchaser@1084 : Record 13;
      Campaign@1085 : Record 5071;
      CustomerTemplate@1108 : Record 5105;
      SalesHeaderArchive@1109 : Record 5107;
      SalesLineArchive@1110 : Record 5108;
      PurchHeaderArchive@1111 : Record 5109;
      PurchLineArchive@1112 : Record 5110;
      DimSetEntry@1050 : Record 480;
      DefaultDim@1086 : Record 352;
      DimBuf@1092 : Record 360;
      WarrantyLedgerEntry@1134 : Record 5908;
      ServiceLedgerEntry@1118 : Record 5907;
      ItemCharge@1117 : Record 5800;
      TransferHeader@1116 : Record 5740;
      TransferLine@1119 : Record 5741;
      TransferShipmentHeader@1120 : Record 5744;
      TransferShipmentLine@1121 : Record 5745;
      TransferReceiptHeader@1122 : Record 5746;
      TransferReceiptLine@1123 : Record 5747;
      WorkCenter@1125 : Record 99000754;
      PlanningComponent@1126 : Record 99000829;
      ServItemLine@1156 : Record 5901;
      JobTask@1155 : Record 1001;
      JobTaskDim@1154 : Record 1002;
      JobWIPEntry@1153 : Record 1004;
      JobWIPGLEntry@1152 : Record 1005;
      StdGenJnlLine@1151 : Record 751;
      StdItemJnlLine@1150 : Record 753;
      ServCtrHeader@1149 : Record 5965;
      FiledServCtrHeader@1148 : Record 5970;
      StdServLine@1147 : Record 5997;
      TempDefaultDimDimensionsFieldMap@1146 : TEMPORARY Record 8383;
      TempDimSetDimensionsFieldMap@1145 : TEMPORARY Record 8383;
      IndicatorWindow@1051 : Dialog;
      NewGlobalDim1Code@1095 : Code[20];
      NewGlobalDim2Code@1096 : Code[20];
      DatabaseRecords@1097 : Integer;
      CheckedDatabaseRecords@1098 : Integer;
      TableRecords@1099 : Integer;
      CheckedTableRecords@1100 : Integer;
      StartTime@1102 : Time;
      StartDate@1103 : Date;
      ConfirmationMessage@1104 : Text[250];

    LOCAL PROCEDURE ChangeGlobalDim@1() : Boolean;
    VAR
      DimFilter@1000 : Text[250];
      TempTableOption@1005 : 'DefaultDimTables,DimSetTables';
    BEGIN
      InitializeTablesForModification;
      OpenIndicator;
      CountRowsAndLockTable(TempDefaultDimDimensionsFieldMap);
      CountRowsAndLockTable(TempDimSetDimensionsFieldMap);
      CountRowsAndLockExceptionalCases;

      DimVal.SETCURRENTKEY(Code,"Global Dimension No.");
      DimVal.SETRANGE("Global Dimension No.",1,2);
      DimVal.MODIFYALL("Global Dimension No.",0);
      DimVal.RESET;
      IF NewGlobalDim1Code <> '' THEN BEGIN
        DimVal.SETRANGE("Dimension Code",NewGlobalDim1Code);
        DimVal.MODIFYALL("Global Dimension No.",1);
      END;
      IF NewGlobalDim2Code <> '' THEN BEGIN
        DimVal.SETRANGE("Dimension Code",NewGlobalDim2Code);
        DimVal.MODIFYALL("Global Dimension No.",2);
      END;

      IF NewGlobalDim1Code <> '' THEN
        IF NewGlobalDim2Code <> '' THEN
          DimFilter := NewGlobalDim1Code + '|' + NewGlobalDim2Code
        ELSE
          DimFilter := NewGlobalDim1Code
      ELSE
        IF NewGlobalDim2Code <> '' THEN
          DimFilter := NewGlobalDim2Code
        ELSE
          DimFilter := '';
      DefaultDim.SETFILTER("Dimension Code",DimFilter);
      DimBuf.SETFILTER("Dimension Code",DimFilter);
      JobTaskDim.SETFILTER("Dimension Code",DimFilter);  // PS55126

      StartTime := TIME;
      StartDate := TODAY;

      ChangeGlobalsInTables(TempTableOption::DefaultDimTables);
      ChangeGlobalsInTables(TempTableOption::DimSetTables);
      UpdateExceptionalCases;

      IndicatorWindow.CLOSE;
      EXIT(TRUE);
    END;

    LOCAL PROCEDURE GetDefaultJobTaskDim@11(JobNo@1000 : Code[20];JobTaskNo@1001 : Code[20];VAR GlobalDim1Value@1002 : Code[20];VAR GlobalDim2Value@1003 : Code[20]);
    BEGIN
      GlobalDim1Value := '';
      GlobalDim2Value := '';

      JobTaskDim.SETRANGE("Job No.",JobNo);
      JobTaskDim.SETRANGE("Job Task No.",JobTaskNo);
      IF JobTaskDim.FINDSET THEN
        REPEAT
          IF JobTaskDim."Dimension Code" = NewGlobalDim1Code THEN
            GlobalDim1Value := JobTaskDim."Dimension Value Code";
          IF JobTaskDim."Dimension Code" = NewGlobalDim2Code THEN
            GlobalDim2Value := JobTaskDim."Dimension Value Code";
        UNTIL JobTaskDim.NEXT = 0;
    END;

    LOCAL PROCEDURE OpenIndicator@9();
    BEGIN
      IndicatorWindow.OPEN(
        Text005 +
        Text006 +
        Text007 +
        Text008 +
        Text009 +
        Text010 +
        Text011 +
        Text012 +
        Text013);
    END;

    LOCAL PROCEDURE UpdateGeneralInfo@6(CompanyName@1000 : Text[100];TableName@1001 : Text[50];CurrentTableRecords@1002 : Integer);
    BEGIN
      TableRecords := CurrentTableRecords;
      CheckedTableRecords := 0;
      IndicatorWindow.UPDATE(1,DatabaseRecords);
      IF DatabaseRecords <> 0 THEN
        IndicatorWindow.UPDATE(2,ROUND(CheckedDatabaseRecords / DatabaseRecords * 10000,1))
      ELSE
        IndicatorWindow.UPDATE(2,0);
      IF CheckedDatabaseRecords <> 0 THEN
        IndicatorWindow.UPDATE(3,CalcEndingTime(TODAY,TIME))
      ELSE
        IndicatorWindow.UPDATE(3,Text014);
      IndicatorWindow.UPDATE(4,CompanyName);
      IndicatorWindow.UPDATE(5,TableName);
      IndicatorWindow.UPDATE(6,CurrentTableRecords);
      CheckedDatabaseRecords := CheckedDatabaseRecords + CurrentTableRecords;
    END;

    LOCAL PROCEDURE UpdateProgressInfo@7();
    BEGIN
      IF TableRecords <> 0 THEN
        IndicatorWindow.UPDATE(7,ROUND(CheckedTableRecords / TableRecords * 10000,1))
      ELSE
        IndicatorWindow.UPDATE(7,0);
    END;

    LOCAL PROCEDURE CalcEndingTime@2(PresentDate@1000 : Date;PresentTime@1001 : Time) : Text[250];
    VAR
      RemainingTime@1002 : Integer;
      EndingDate@1003 : Date;
      EndingTime@1004 : Time;
    BEGIN
      IF PresentDate > StartDate THEN
        RemainingTime := ((PresentDate - StartDate) * 8640000) + (235959T - StartTime) + (PresentTime - 000000T)
      ELSE
        RemainingTime := (PresentTime - StartTime);
      RemainingTime := ROUND((RemainingTime / CheckedDatabaseRecords) * (DatabaseRecords - CheckedDatabaseRecords),1);
      EndingDate := StartDate + ABS(ROUND(RemainingTime / 360000,1));
      EndingTime := StartTime + ABS(ROUND(RemainingTime MOD 360000,1));
      IF EndingTime < StartTime THEN
        EndingDate := EndingDate + 1;
      EXIT(FORMAT(EndingDate) + ' ' + FORMAT(EndingTime,0,Text015));
    END;

    PROCEDURE InitializeRequest@3(NewGlobalDim1CodeFrom@1000 : Code[20];NewGlobalDim2CodeFrom@1001 : Code[20]);
    BEGIN
      NewGlobalDim1Code := NewGlobalDim1CodeFrom;
      NewGlobalDim2Code := NewGlobalDim2CodeFrom;
    END;

    LOCAL PROCEDURE GetDefaultDim@16(No@1000 : Code[20];Global1FieldRef@1001 : FieldRef;Global2FieldRef@1002 : FieldRef);
    BEGIN
      Global1FieldRef.VALUE := '';
      Global2FieldRef.VALUE := '';

      DefaultDim.SETRANGE("Table ID",Global1FieldRef.RECORD.NUMBER);
      DefaultDim.SETRANGE("No.",No);
      IF DefaultDim.FINDSET THEN
        REPEAT
          IF DefaultDim."Dimension Code" = NewGlobalDim1Code THEN
            Global1FieldRef.VALUE := DefaultDim."Dimension Value Code";
          IF DefaultDim."Dimension Code" = NewGlobalDim2Code THEN
            Global2FieldRef.VALUE := DefaultDim."Dimension Value Code";
        UNTIL DefaultDim.NEXT = 0;
    END;

    LOCAL PROCEDURE AddToDefaultDimTempTable@148(TableNo@1003 : Integer;Global1FieldNo@1002 : Integer;Global2FieldNo@1001 : Integer;IDFieldNo@1000 : Integer);
    BEGIN
      AddToTempTable(TempDefaultDimDimensionsFieldMap,TableNo,Global1FieldNo,Global2FieldNo,IDFieldNo);
    END;

    LOCAL PROCEDURE AddToDimSetTempTable@151(TableNo@1003 : Integer;Global1FieldNo@1002 : Integer;Global2FieldNo@1001 : Integer;IDFieldNo@1000 : Integer);
    BEGIN
      AddToTempTable(TempDimSetDimensionsFieldMap,TableNo,Global1FieldNo,Global2FieldNo,IDFieldNo);
    END;

    LOCAL PROCEDURE ChangeGlobalsInTables@42(TempTableOption@1003 : 'DefaultDimTables,DimSetTables');
    VAR
      FieldRecordRef@1004 : RecordRef;
      TempRecRef@1000 : RecordRef;
      TableNoFieldRef@1005 : FieldRef;
      TableNumber@1002 : Integer;
      TableNoFieldNumber@1006 : Integer;
    BEGIN
      CASE TempTableOption OF
        TempTableOption::DefaultDimTables:
          FieldRecordRef.GETTABLE(TempDefaultDimDimensionsFieldMap);
        TempTableOption::DimSetTables:
          FieldRecordRef.GETTABLE(TempDimSetDimensionsFieldMap);
      END;

      // Get the field no when the "Table No." is stored.
      TableNoFieldNumber := TempDimSetDimensionsFieldMap.FIELDNO("Table No.");
      WITH FieldRecordRef DO BEGIN
        TableNoFieldRef := FIELD(TableNoFieldNumber);
        IF FINDSET THEN BEGIN
          REPEAT
            TableNumber := TableNoFieldRef.VALUE;
            TempRecRef.OPEN(TableNumber);
            CASE TempTableOption OF
              TempTableOption::DefaultDimTables:
                ChangeGlobalsWithDefaultDim(TempRecRef);
              TempTableOption::DimSetTables:
                ChangeGlobalsWithDimensionSet(TempRecRef);
            END;
            TempRecRef.CLOSE;
          UNTIL NEXT = 0;
        END
      END;
    END;

    LOCAL PROCEDURE ChangeGlobalsWithDefaultDim@194(RecordRefForProcessing@1000 : RecordRef);
    VAR
      Global1FieldNo@1001 : Integer;
      Global2FieldNo@1002 : Integer;
      NoFieldNo@1003 : Integer;
      No@1004 : Code[20];
    BEGIN
      GetFieldNumbersFromTempTable(
        TempDefaultDimDimensionsFieldMap,RecordRefForProcessing.NUMBER,Global1FieldNo,Global2FieldNo,NoFieldNo);
      UpdateGeneralInfo(COMPANYNAME,RecordRefForProcessing.CAPTION,RecordRefForProcessing.COUNT);
      WITH RecordRefForProcessing DO
        IF FINDFIRST THEN BEGIN
          REPEAT
            No := FIELD(NoFieldNo).VALUE;
            GetDefaultDim(No,FIELD(Global1FieldNo),FIELD(Global2FieldNo));
            MODIFY;
            CheckedTableRecords := CheckedTableRecords + 1;
            UpdateProgressInfo;
          UNTIL NEXT = 0;
        END;
    END;

    LOCAL PROCEDURE ChangeGlobalsWithDimensionSet@109(RecordRefForProcessing@1000 : RecordRef);
    VAR
      Global1FieldNo@1001 : Integer;
      Global2FieldNo@1002 : Integer;
      DimSetIDFieldNo@1003 : Integer;
      DimSetID@1004 : Integer;
    BEGIN
      GetFieldNumbersFromTempTable(
        TempDimSetDimensionsFieldMap,RecordRefForProcessing.NUMBER,Global1FieldNo,Global2FieldNo,DimSetIDFieldNo);
      UpdateGeneralInfo(COMPANYNAME,RecordRefForProcessing.CAPTION,RecordRefForProcessing.COUNT);
      WITH RecordRefForProcessing DO
        IF FIND('-') THEN BEGIN
          REPEAT
            DimSetID := FIELD(DimSetIDFieldNo).VALUE;
            GetDimSetEntry(DimSetID,FIELD(Global1FieldNo),FIELD(Global2FieldNo));
            MODIFY;
            CheckedTableRecords := CheckedTableRecords + 1;
            UpdateProgressInfo;
          UNTIL NEXT = 0;
        END;
    END;

    LOCAL PROCEDURE GetDimSetEntry@94(DimSetID@1000 : Integer;Global1FieldRef@1001 : FieldRef;Global2FieldRef@1002 : FieldRef);
    BEGIN
      Global1FieldRef.VALUE := '';
      Global2FieldRef.VALUE := '';

      DimSetEntry.SETRANGE("Dimension Set ID",DimSetID);
      IF DimSetEntry.FINDSET THEN
        REPEAT
          IF DimSetEntry."Dimension Code" = NewGlobalDim1Code THEN
            Global1FieldRef.VALUE := DimSetEntry."Dimension Value Code";
          IF DimSetEntry."Dimension Code" = NewGlobalDim2Code THEN
            Global2FieldRef.VALUE := DimSetEntry."Dimension Value Code";
        UNTIL DimSetEntry.NEXT = 0;
    END;

    LOCAL PROCEDURE CountRowsAndLockExceptionalCases@12();
    VAR
      TempRecRef@1000 : RecordRef;
    BEGIN
      TempRecRef.GETTABLE(SalesLineArchive);
      CountRowsAndLock(TempRecRef,DatabaseRecords);
      TempRecRef.GETTABLE(PurchLineArchive);
      CountRowsAndLock(TempRecRef,DatabaseRecords);
      TempRecRef.GETTABLE(CustLedgEntry);
      CountRowsAndLock(TempRecRef,DatabaseRecords);
      TempRecRef.GETTABLE(VendorLedgEntry);
      CountRowsAndLock(TempRecRef,DatabaseRecords);
      TempRecRef.GETTABLE(JobTask);
      CountRowsAndLock(TempRecRef,DatabaseRecords);
    END;

    LOCAL PROCEDURE UpdateExceptionalCases@231();
    VAR
      TempRecRef@1000 : RecordRef;
    BEGIN
      UpdateGeneralInfo(COMPANYNAME,SalesLineArchive.TABLECAPTION,SalesLineArchive.COUNT);
      WITH SalesLineArchive DO BEGIN
        SETCURRENTKEY("Document Type","Document No.","Line No.","Doc. No. Occurrence","Version No.");
        IF FIND('-') THEN BEGIN
          REPEAT
            TempRecRef.GETTABLE(SalesLineArchive);
            GetDimSetEntry(
              "Dimension Set ID",
              TempRecRef.FIELD(FIELDNO("Shortcut Dimension 1 Code")),TempRecRef.FIELD(FIELDNO("Shortcut Dimension 2 Code")));
            MODIFY;
            CheckedTableRecords := CheckedTableRecords + 1;
            UpdateProgressInfo;
          UNTIL NEXT = 0;
        END;
      END;

      UpdateGeneralInfo(COMPANYNAME,PurchLineArchive.TABLECAPTION,PurchLineArchive.COUNT);
      WITH PurchLineArchive DO BEGIN
        SETCURRENTKEY("Document Type","Document No.","Line No.","Doc. No. Occurrence","Version No.");
        IF FIND('-') THEN BEGIN
          REPEAT
            TempRecRef.GETTABLE(PurchLineArchive);
            GetDimSetEntry(
              "Dimension Set ID",
              TempRecRef.FIELD(FIELDNO("Shortcut Dimension 1 Code")),TempRecRef.FIELD(FIELDNO("Shortcut Dimension 2 Code")));
            MODIFY;
            CheckedTableRecords := CheckedTableRecords + 1;
            UpdateProgressInfo;
          UNTIL NEXT = 0;
        END;
      END;

      UpdateGeneralInfo(COMPANYNAME,CustLedgEntry.TABLECAPTION,CustLedgEntry.COUNT);
      DtldCustLedgEntry.SETCURRENTKEY("Cust. Ledger Entry No.");
      WITH CustLedgEntry DO
        IF FIND('-') THEN BEGIN
          REPEAT
            TempRecRef.GETTABLE(CustLedgEntry);
            GetDimSetEntry(
              "Dimension Set ID",
              TempRecRef.FIELD(FIELDNO("Global Dimension 1 Code")),TempRecRef.FIELD(FIELDNO("Global Dimension 2 Code")));
            MODIFY;
            DtldCustLedgEntry.SETRANGE("Cust. Ledger Entry No.","Entry No.");
            IF DtldCustLedgEntry.FIND('-') THEN
              REPEAT
                DtldCustLedgEntry."Initial Entry Global Dim. 1" := "Global Dimension 1 Code";
                DtldCustLedgEntry."Initial Entry Global Dim. 2" := "Global Dimension 2 Code";
                DtldCustLedgEntry.MODIFY;
              UNTIL DtldCustLedgEntry.NEXT = 0;
            CheckedTableRecords := CheckedTableRecords + 1;
            UpdateProgressInfo;
          UNTIL NEXT = 0;
        END;

      UpdateGeneralInfo(COMPANYNAME,VendorLedgEntry.TABLECAPTION,VendorLedgEntry.COUNT);
      DtldVendLedgEntry.SETCURRENTKEY("Vendor Ledger Entry No.");
      WITH VendorLedgEntry DO
        IF FIND('-') THEN BEGIN
          REPEAT
            TempRecRef.GETTABLE(VendorLedgEntry);
            GetDimSetEntry(
              "Dimension Set ID",
              TempRecRef.FIELD(FIELDNO("Global Dimension 1 Code")),TempRecRef.FIELD(FIELDNO("Global Dimension 2 Code")));
            MODIFY;
            DtldVendLedgEntry.SETRANGE("Vendor Ledger Entry No.","Entry No.");
            IF DtldVendLedgEntry.FIND('-') THEN
              REPEAT
                DtldVendLedgEntry."Initial Entry Global Dim. 1" := "Global Dimension 1 Code";
                DtldVendLedgEntry."Initial Entry Global Dim. 2" := "Global Dimension 2 Code";
                DtldVendLedgEntry.MODIFY;
              UNTIL DtldVendLedgEntry.NEXT = 0;
            CheckedTableRecords := CheckedTableRecords + 1;
            UpdateProgressInfo;
          UNTIL NEXT = 0;
        END;

      UpdateGeneralInfo(COMPANYNAME,JobTask.TABLECAPTION,JobTask.COUNT);
      WITH JobTask DO
        IF FINDSET THEN BEGIN
          REPEAT
            GetDefaultJobTaskDim(
              "Job No.",
              "Job Task No.",
              "Global Dimension 1 Code",
              "Global Dimension 2 Code");
            MODIFY;
            CheckedTableRecords := CheckedTableRecords + 1;
            UpdateProgressInfo;
          UNTIL NEXT = 0;
        END;
    END;

    LOCAL PROCEDURE CountRowsAndLock@164(RecRef@1000 : RecordRef;VAR NumberOfRecords@1001 : Integer);
    BEGIN
      WITH RecRef DO BEGIN
        LOCKTABLE;
        IF FINDLAST THEN;
      END;
      NumberOfRecords := NumberOfRecords + RecRef.COUNT;
    END;

    LOCAL PROCEDURE CountRowsAndLockTable@34(VAR TempDimensionsFieldMap@1000 : TEMPORARY Record 8383);
    VAR
      TempRecRef@1006 : RecordRef;
    BEGIN
      WITH TempDimensionsFieldMap DO BEGIN
        FINDSET;
        REPEAT
          TempRecRef.OPEN("Table No.");
          CountRowsAndLock(TempRecRef,DatabaseRecords);
          TempRecRef.CLOSE;
        UNTIL NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE AddToTempTable@26(VAR TempDimensionsFieldMap@1000 : TEMPORARY Record 8383;TableNo@1001 : Integer;Global1FieldNo@1002 : Integer;Global2FieldNo@1003 : Integer;IDFieldNo@1004 : Integer);
    BEGIN
      // populate the table with rows of the field numbers that we will use.
      TempDimensionsFieldMap."Table No." := TableNo;
      TempDimensionsFieldMap."Global Dim.1 Field No." := Global1FieldNo;
      TempDimensionsFieldMap."Global Dim.2 Field No." := Global2FieldNo;
      TempDimensionsFieldMap."ID Field No." := IDFieldNo;
      TempDimensionsFieldMap.INSERT;
    END;

    LOCAL PROCEDURE GetFieldNumbersFromTempTable@28(VAR TempDimensionsFieldMap@1003 : TEMPORARY Record 8383;TableNo@1004 : Integer;VAR Global1FieldNo@1000 : Integer;VAR Global2FieldNo@1001 : Integer;VAR IDFieldNo@1002 : Integer);
    BEGIN
      TempDimensionsFieldMap.GET(TableNo);
      Global1FieldNo := TempDimensionsFieldMap."Global Dim.1 Field No.";
      Global2FieldNo := TempDimensionsFieldMap."Global Dim.2 Field No.";
      IDFieldNo := TempDimensionsFieldMap."ID Field No.";
    END;

    PROCEDURE InitializeTablesForModification@199();
    BEGIN
      TempDefaultDimDimensionsFieldMap.DELETEALL;
      TempDimSetDimensionsFieldMap.DELETEALL;

      AddingDefaultValueDim;

      // Initialize the tables using the Dimension Set
      AddToDimSetTempTable(
        DATABASE::"G/L Entry",GLEntry.FIELDNO("Global Dimension 1 Code"),GLEntry.FIELDNO("Global Dimension 2 Code"),
        GLEntry.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Cust. Ledger Entry",CustLedgEntry.FIELDNO("Global Dimension 1 Code"),
        CustLedgEntry.FIELDNO("Global Dimension 2 Code"),CustLedgEntry.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Vendor Ledger Entry",VendorLedgEntry.FIELDNO("Global Dimension 1 Code"),
        VendorLedgEntry.FIELDNO("Global Dimension 2 Code"),VendorLedgEntry.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Item Ledger Entry",ItemLedgEntry.FIELDNO("Global Dimension 1 Code"),
        ItemLedgEntry.FIELDNO("Global Dimension 2 Code"),ItemLedgEntry.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Job Ledger Entry",JobLedgEntry.FIELDNO("Global Dimension 1 Code"),JobLedgEntry.FIELDNO("Global Dimension 2 Code"),
        JobLedgEntry.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Res. Ledger Entry",ResLedgEntry.FIELDNO("Global Dimension 1 Code"),
        ResLedgEntry.FIELDNO("Global Dimension 2 Code"),ResLedgEntry.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Value Entry",ValueEntry.FIELDNO("Global Dimension 1 Code"),ValueEntry.FIELDNO("Global Dimension 2 Code"),
        ValueEntry.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Capacity Ledger Entry",CapLedgEntry.FIELDNO("Global Dimension 1 Code"),
        CapLedgEntry.FIELDNO("Global Dimension 2 Code"),CapLedgEntry.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Bank Account Ledger Entry",BankAccLedgEntry.FIELDNO("Global Dimension 1 Code"),
        BankAccLedgEntry.FIELDNO("Global Dimension 2 Code"),BankAccLedgEntry.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Phys. Inventory Ledger Entry",PhysInvtLedgEntry.FIELDNO("Global Dimension 1 Code"),
        PhysInvtLedgEntry.FIELDNO("Global Dimension 2 Code"),PhysInvtLedgEntry.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"FA Ledger Entry",FALedgEntry.FIELDNO("Global Dimension 1 Code"),FALedgEntry.FIELDNO("Global Dimension 2 Code"),
        FALedgEntry.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Maintenance Ledger Entry",MaintenanceLedgEntry.FIELDNO("Global Dimension 1 Code"),
        MaintenanceLedgEntry.FIELDNO("Global Dimension 2 Code"),MaintenanceLedgEntry.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Ins. Coverage Ledger Entry",InsCovLedgEntry.FIELDNO("Global Dimension 1 Code"),
        InsCovLedgEntry.FIELDNO("Global Dimension 2 Code"),InsCovLedgEntry.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Service Ledger Entry",ServiceLedgerEntry.FIELDNO("Global Dimension 1 Code"),
        ServiceLedgerEntry.FIELDNO("Global Dimension 2 Code"),ServiceLedgerEntry.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Warranty Ledger Entry",WarrantyLedgerEntry.FIELDNO("Global Dimension 1 Code"),
        WarrantyLedgerEntry.FIELDNO("Global Dimension 2 Code"),WarrantyLedgerEntry.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Gen. Journal Line",GenJnlLine.FIELDNO("Shortcut Dimension 1 Code"),
        GenJnlLine.FIELDNO("Shortcut Dimension 2 Code"),GenJnlLine.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Item Journal Line",ItemJnlLine.FIELDNO("Shortcut Dimension 1 Code"),
        ItemJnlLine.FIELDNO("Shortcut Dimension 2 Code"),ItemJnlLine.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Res. Journal Line",ResJnlLine.FIELDNO("Shortcut Dimension 1 Code"),
        ResJnlLine.FIELDNO("Shortcut Dimension 2 Code"),ResJnlLine.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Job Journal Line",JobJnlLine.FIELDNO("Shortcut Dimension 1 Code"),JobJnlLine.FIELDNO("Shortcut Dimension 2 Code"),
        JobJnlLine.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Gen. Jnl. Allocation",GenJnlAlloc.FIELDNO("Shortcut Dimension 1 Code"),
        GenJnlAlloc.FIELDNO("Shortcut Dimension 2 Code"),GenJnlAlloc.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Requisition Line",ReqLine.FIELDNO("Shortcut Dimension 1 Code"),ReqLine.FIELDNO("Shortcut Dimension 2 Code"),
        ReqLine.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"FA Journal Line",FAJnlLine.FIELDNO("Shortcut Dimension 1 Code"),FAJnlLine.FIELDNO("Shortcut Dimension 2 Code"),
        FAJnlLine.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Insurance Journal Line",InsuranceJnlLine.FIELDNO("Shortcut Dimension 1 Code"),
        InsuranceJnlLine.FIELDNO("Shortcut Dimension 2 Code"),InsuranceJnlLine.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Planning Component",PlanningComponent.FIELDNO("Shortcut Dimension 1 Code"),
        PlanningComponent.FIELDNO("Shortcut Dimension 2 Code"),PlanningComponent.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Standard General Journal Line",StdGenJnlLine.FIELDNO("Shortcut Dimension 1 Code"),
        StdGenJnlLine.FIELDNO("Shortcut Dimension 2 Code"),StdGenJnlLine.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Standard Item Journal Line",StdItemJnlLine.FIELDNO("Shortcut Dimension 1 Code"),
        StdItemJnlLine.FIELDNO("Shortcut Dimension 2 Code"),StdItemJnlLine.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Sales Header",SalesHeader.FIELDNO("Shortcut Dimension 1 Code"),SalesHeader.FIELDNO("Shortcut Dimension 2 Code"),
        SalesHeader.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Sales Line",SalesLine.FIELDNO("Shortcut Dimension 1 Code"),SalesLine.FIELDNO("Shortcut Dimension 2 Code"),
        SalesLine.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Purchase Header",PurchHeader.FIELDNO("Shortcut Dimension 1 Code"),
        PurchHeader.FIELDNO("Shortcut Dimension 2 Code"),PurchHeader.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Purchase Line",PurchLine.FIELDNO("Shortcut Dimension 1 Code"),PurchLine.FIELDNO("Shortcut Dimension 2 Code"),
        PurchLine.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Standard Sales Line",StdSalesLine.FIELDNO("Shortcut Dimension 1 Code"),
        StdSalesLine.FIELDNO("Shortcut Dimension 2 Code"),StdSalesLine.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Standard Purchase Line",StdPurchLine.FIELDNO("Shortcut Dimension 1 Code"),
        StdPurchLine.FIELDNO("Shortcut Dimension 2 Code"),StdPurchLine.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Reminder Header",ReminderHeader.FIELDNO("Shortcut Dimension 1 Code"),
        ReminderHeader.FIELDNO("Shortcut Dimension 2 Code"),ReminderHeader.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Finance Charge Memo Header",FinChrgMemoHeader.FIELDNO("Shortcut Dimension 1 Code"),
        FinChrgMemoHeader.FIELDNO("Shortcut Dimension 2 Code"),FinChrgMemoHeader.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Service Header",ServHeader.FIELDNO("Shortcut Dimension 1 Code"),ServHeader.FIELDNO("Shortcut Dimension 2 Code"),
        ServHeader.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Service Item Line",ServItemLine.FIELDNO("Shortcut Dimension 1 Code"),
        ServItemLine.FIELDNO("Shortcut Dimension 2 Code"),ServItemLine.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Service Line",ServLine.FIELDNO("Shortcut Dimension 1 Code"),ServLine.FIELDNO("Shortcut Dimension 2 Code"),
        ServLine.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Sales Header Archive",SalesHeaderArchive.FIELDNO("Shortcut Dimension 1 Code"),
        SalesHeaderArchive.FIELDNO("Shortcut Dimension 2 Code"),SalesHeaderArchive.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Purchase Header Archive",PurchHeaderArchive.FIELDNO("Shortcut Dimension 1 Code"),
        PurchHeaderArchive.FIELDNO("Shortcut Dimension 2 Code"),PurchHeaderArchive.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Transfer Header",TransferHeader.FIELDNO("Shortcut Dimension 1 Code"),
        TransferHeader.FIELDNO("Shortcut Dimension 2 Code"),TransferHeader.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Transfer Line",TransferLine.FIELDNO("Shortcut Dimension 1 Code"),
        TransferLine.FIELDNO("Shortcut Dimension 2 Code"),TransferLine.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Standard Service Line",StdServLine.FIELDNO("Shortcut Dimension 1 Code"),
        StdServLine.FIELDNO("Shortcut Dimension 2 Code"),StdServLine.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Production Order",ProdOrder.FIELDNO("Shortcut Dimension 1 Code"),ProdOrder.FIELDNO("Shortcut Dimension 2 Code"),
        ProdOrder.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Prod. Order Line",ProdOrderLine.FIELDNO("Shortcut Dimension 1 Code"),
        ProdOrderLine.FIELDNO("Shortcut Dimension 2 Code"),ProdOrderLine.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Prod. Order Component",ProdOrderComp.FIELDNO("Shortcut Dimension 1 Code"),
        ProdOrderComp.FIELDNO("Shortcut Dimension 2 Code"),ProdOrderComp.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Sales Shipment Header",SalesShptHeader.FIELDNO("Shortcut Dimension 1 Code"),
        SalesShptHeader.FIELDNO("Shortcut Dimension 2 Code"),SalesShptHeader.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Sales Shipment Line",SaleShptLine.FIELDNO("Shortcut Dimension 1 Code"),
        SaleShptLine.FIELDNO("Shortcut Dimension 2 Code"),SaleShptLine.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Service Invoice Header",SalesInvHeader.FIELDNO("Shortcut Dimension 1 Code"),
        SalesInvHeader.FIELDNO("Shortcut Dimension 2 Code"),SalesInvHeader.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Service Invoice Line",SalesInvLine.FIELDNO("Shortcut Dimension 1 Code"),
        SalesInvLine.FIELDNO("Shortcut Dimension 2 Code"),SalesInvLine.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Return Receipt Header",ReturnRcptHeader.FIELDNO("Shortcut Dimension 1 Code"),
        ReturnRcptHeader.FIELDNO("Shortcut Dimension 2 Code"),ReturnRcptHeader.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Return Receipt Line",ReturnRcptLine.FIELDNO("Shortcut Dimension 1 Code"),
        ReturnRcptLine.FIELDNO("Shortcut Dimension 2 Code"),ReturnRcptLine.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Service Cr.Memo Header",SalesCrMemoHeader.FIELDNO("Shortcut Dimension 1 Code"),
        SalesCrMemoHeader.FIELDNO("Shortcut Dimension 2 Code"),SalesCrMemoHeader.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Service Cr.Memo Line",SalesCrMemoLine.FIELDNO("Shortcut Dimension 1 Code"),
        SalesCrMemoLine.FIELDNO("Shortcut Dimension 2 Code"),SalesCrMemoLine.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Service Shipment Header",ServShptHeader.FIELDNO("Shortcut Dimension 1 Code"),
        ServShptHeader.FIELDNO("Shortcut Dimension 2 Code"),ServShptHeader.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Service Shipment Line",ServShptLine.FIELDNO("Shortcut Dimension 1 Code"),
        ServShptLine.FIELDNO("Shortcut Dimension 2 Code"),ServShptLine.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Sales Invoice Header",ServInvHeader.FIELDNO("Shortcut Dimension 1 Code"),
        ServInvHeader.FIELDNO("Shortcut Dimension 2 Code"),ServInvHeader.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Sales Invoice Line",ServInvLine.FIELDNO("Shortcut Dimension 1 Code"),
        ServInvLine.FIELDNO("Shortcut Dimension 2 Code"),ServInvLine.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Sales Cr.Memo Header",ServCrMemoHeader.FIELDNO("Shortcut Dimension 1 Code"),
        ServCrMemoHeader.FIELDNO("Shortcut Dimension 2 Code"),ServCrMemoHeader.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Sales Cr.Memo Line",ServCrMemoLine.FIELDNO("Shortcut Dimension 1 Code"),
        ServCrMemoLine.FIELDNO("Shortcut Dimension 2 Code"),ServCrMemoLine.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Purch. Rcpt. Header",PurchRcptHeader.FIELDNO("Shortcut Dimension 1 Code"),
        PurchRcptHeader.FIELDNO("Shortcut Dimension 2 Code"),PurchRcptHeader.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Purch. Rcpt. Line",PurchRcptLine.FIELDNO("Shortcut Dimension 1 Code"),
        PurchRcptLine.FIELDNO("Shortcut Dimension 2 Code"),PurchRcptLine.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Purch. Inv. Header",PurchInvHeader.FIELDNO("Shortcut Dimension 1 Code"),
        PurchInvHeader.FIELDNO("Shortcut Dimension 2 Code"),PurchInvHeader.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Purch. Inv. Line",PurchInvLine.FIELDNO("Shortcut Dimension 1 Code"),
        PurchInvLine.FIELDNO("Shortcut Dimension 2 Code"),PurchInvLine.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Return Shipment Header",ReturnShptHeader.FIELDNO("Shortcut Dimension 1 Code"),
        ReturnShptHeader.FIELDNO("Shortcut Dimension 2 Code"),ReturnShptHeader.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Return Shipment Line",ReturnShptLine.FIELDNO("Shortcut Dimension 1 Code"),
        ReturnShptLine.FIELDNO("Shortcut Dimension 2 Code"),ReturnShptLine.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Purch. Cr. Memo Hdr.",PurchCrMemoHeader.FIELDNO("Shortcut Dimension 1 Code"),
        PurchCrMemoHeader.FIELDNO("Shortcut Dimension 2 Code"),PurchCrMemoHeader.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Purch. Cr. Memo Line",PurchCrMemoLine.FIELDNO("Shortcut Dimension 1 Code"),
        PurchCrMemoLine.FIELDNO("Shortcut Dimension 2 Code"),PurchCrMemoLine.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Issued Reminder Header",IssuedReminderHeader.FIELDNO("Shortcut Dimension 1 Code"),
        IssuedReminderHeader.FIELDNO("Shortcut Dimension 2 Code"),IssuedReminderHeader.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Issued Fin. Charge Memo Header",IssuedFinChrgMemoHeader.FIELDNO("Shortcut Dimension 1 Code"),
        IssuedFinChrgMemoHeader.FIELDNO("Shortcut Dimension 2 Code"),IssuedFinChrgMemoHeader.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Transfer Shipment Header",TransferShipmentHeader.FIELDNO("Shortcut Dimension 1 Code"),
        TransferShipmentHeader.FIELDNO("Shortcut Dimension 2 Code"),TransferShipmentHeader.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Transfer Shipment Line",TransferShipmentLine.FIELDNO("Shortcut Dimension 1 Code"),
        TransferShipmentLine.FIELDNO("Shortcut Dimension 2 Code"),TransferShipmentLine.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Transfer Receipt Header",TransferReceiptHeader.FIELDNO("Shortcut Dimension 1 Code"),
        TransferReceiptHeader.FIELDNO("Shortcut Dimension 2 Code"),TransferReceiptHeader.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Transfer Receipt Line",TransferReceiptLine.FIELDNO("Shortcut Dimension 1 Code"),
        TransferReceiptLine.FIELDNO("Shortcut Dimension 2 Code"),TransferReceiptLine.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"G/L Budget Entry",GLBudgetEntry.FIELDNO("Global Dimension 1 Code"),
        GLBudgetEntry.FIELDNO("Global Dimension 2 Code"),GLBudgetEntry.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"FA Allocation",FAAlloc.FIELDNO("Global Dimension 1 Code"),FAAlloc.FIELDNO("Global Dimension 2 Code"),
        FAAlloc.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Service Contract Header",ServCtrHeader.FIELDNO("Shortcut Dimension 1 Code"),
        ServCtrHeader.FIELDNO("Shortcut Dimension 2 Code"),ServCtrHeader.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Filed Service Contract Header",FiledServCtrHeader.FIELDNO("Shortcut Dimension 1 Code"),
        FiledServCtrHeader.FIELDNO("Shortcut Dimension 2 Code"),FiledServCtrHeader.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Job WIP Entry",JobWIPEntry.FIELDNO("Global Dimension 1 Code"),JobWIPEntry.FIELDNO("Global Dimension 2 Code"),
        JobWIPEntry.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Job WIP G/L Entry",JobWIPGLEntry.FIELDNO("Global Dimension 1 Code"),
        JobWIPGLEntry.FIELDNO("Global Dimension 2 Code"),JobWIPGLEntry.FIELDNO("Dimension Set ID"));
      AddToDimSetTempTable(
        DATABASE::"Item Budget Entry",ItemBudgetEntry.FIELDNO("Global Dimension 1 Code"),
        ItemBudgetEntry.FIELDNO("Global Dimension 2 Code"),ItemBudgetEntry.FIELDNO("Dimension Set ID"));
    END;

    LOCAL PROCEDURE AddingDefaultValueDim@4();
    BEGIN
      AddToDefaultDimTempTable(
        DATABASE::"G/L Account",GLAcc.FIELDNO("Global Dimension 1 Code"),GLAcc.FIELDNO("Global Dimension 2 Code"),
        GLAcc.FIELDNO("No."));
      AddToDefaultDimTempTable(
        DATABASE::Customer,Cust.FIELDNO("Global Dimension 1 Code"),Cust.FIELDNO("Global Dimension 2 Code"),Cust.FIELDNO("No."));
      AddToDefaultDimTempTable(
        DATABASE::Vendor,Vend.FIELDNO("Global Dimension 1 Code"),Vend.FIELDNO("Global Dimension 2 Code"),Vend.FIELDNO("No."));
      AddToDefaultDimTempTable(
        DATABASE::Item,Item.FIELDNO("Global Dimension 1 Code"),Item.FIELDNO("Global Dimension 2 Code"),Item.FIELDNO("No."));
      AddToDefaultDimTempTable(
        DATABASE::"Resource Group",ResGr.FIELDNO("Global Dimension 1 Code"),ResGr.FIELDNO("Global Dimension 2 Code"),
        ResGr.FIELDNO("No."));
      AddToDefaultDimTempTable(
        DATABASE::Resource,Res.FIELDNO("Global Dimension 1 Code"),Res.FIELDNO("Global Dimension 2 Code"),Res.FIELDNO("No."));
      AddToDefaultDimTempTable(
        DATABASE::Job,Job.FIELDNO("Global Dimension 1 Code"),Job.FIELDNO("Global Dimension 2 Code"),Job.FIELDNO("No."));
      AddToDefaultDimTempTable(
        DATABASE::"Bank Account",BankAcc.FIELDNO("Global Dimension 1 Code"),BankAcc.FIELDNO("Global Dimension 2 Code"),
        BankAcc.FIELDNO("No."));
      AddToDefaultDimTempTable(
        DATABASE::Employee,Employee.FIELDNO("Global Dimension 1 Code"),Employee.FIELDNO("Global Dimension 2 Code"),
        Employee.FIELDNO("No."));
      AddToDefaultDimTempTable(
        DATABASE::"Fixed Asset",FA.FIELDNO("Global Dimension 1 Code"),FA.FIELDNO("Global Dimension 2 Code"),FA.FIELDNO("No."));
      AddToDefaultDimTempTable(
        DATABASE::Insurance,Insurance.FIELDNO("Global Dimension 1 Code"),Insurance.FIELDNO("Global Dimension 2 Code"),
        Insurance.FIELDNO("No."));
      AddToDefaultDimTempTable(
        DATABASE::"Responsibility Center",RespCenter.FIELDNO("Global Dimension 1 Code"),
        RespCenter.FIELDNO("Global Dimension 2 Code"),RespCenter.FIELDNO(Code));
      AddToDefaultDimTempTable(
        DATABASE::"Salesperson/Purchaser",SalespersonPurchaser.FIELDNO("Global Dimension 1 Code"),
        SalespersonPurchaser.FIELDNO("Global Dimension 2 Code"),SalespersonPurchaser.FIELDNO(Code));
      AddToDefaultDimTempTable(
        DATABASE::Campaign,Campaign.FIELDNO("Global Dimension 1 Code"),Campaign.FIELDNO("Global Dimension 2 Code"),
        Campaign.FIELDNO("No."));
      AddToDefaultDimTempTable(
        DATABASE::"Customer Template",CustomerTemplate.FIELDNO("Global Dimension 1 Code"),
        CustomerTemplate.FIELDNO("Global Dimension 2 Code"),CustomerTemplate.FIELDNO(Code));
      AddToDefaultDimTempTable(
        DATABASE::"Item Charge",ItemCharge.FIELDNO("Global Dimension 1 Code"),ItemCharge.FIELDNO("Global Dimension 2 Code"),
        ItemCharge.FIELDNO("No."));
      AddToDefaultDimTempTable(
        DATABASE::"Work Center",WorkCenter.FIELDNO("Global Dimension 1 Code"),WorkCenter.FIELDNO("Global Dimension 2 Code"),
        WorkCenter.FIELDNO("No."));
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

