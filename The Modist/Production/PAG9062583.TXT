OBJECT Page 9062583 Panel Property Card
{
  OBJECT-PROPERTIES
  {
    Date=10/05/16;
    Time=12:00:00 PM;
    Version List=NA2016.15;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Panel Property Card;
               ENG=Panel Property Card];
    SourceTable=Table9062433;
    DataCaptionExpr=PageCaption();
    PageType=Card;
    OnOpenPage=BEGIN
                 UpdateGlobals();
               END;

    OnClosePage=BEGIN
                  UpdateDescriptionOnClose();
                END;

    OnAfterGetRecord=BEGIN
                       UpdateGlobals();
                     END;

    OnNewRecord=BEGIN
                  InitRecord();
                END;

    OnAfterGetCurrRecord=BEGIN
                           UpdateGlobals();
                         END;

    ActionList=ACTIONS
    {
      { 1000000030;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1000000031;1 ;Action    ;
                      Name=LoadImageFromLibrary;
                      CaptionML=[ENU=Load Image From Library;
                                 ENG=Load Image From Library];
                      Promoted=Yes;
                      Image=Picture;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 LoadImageFromLibrary();
                               END;
                                }
      { 1000000012;1 ;Action    ;
                      Name=CopyValues;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Copy Values;
                                 ENG=Copy Values];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Copy;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 lPanelPropertyManagement@1000000000 : Codeunit 9062355;
                               BEGIN
                                 IF (lPanelPropertyManagement.CopyPropertyValues(Rec, TRUE)) THEN
                                   CurrPage.UPDATE(FALSE);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1000000000;;Container;
                Name=Container;
                CaptionML=[ENU=Container;
                           ENG=Container];
                ContainerType=ContentArea }

    { 1000000039;1;Group  ;
                Name=General;
                CaptionML=[ENU=General;
                           ENG=General];
                GroupType=Group }

    { 1000000035;2;Field  ;
                SourceExpr="Parent Table ID";
                Importance=Additional;
                Visible=FALSE;
                Editable=FALSE }

    { 1000000034;2;Field  ;
                SourceExpr="Parent Table Name";
                Importance=Additional;
                Visible=FALSE;
                Editable=FALSE }

    { 1000000033;2;Field  ;
                SourceExpr="Parent Code";
                Importance=Additional;
                Visible=FALSE;
                Editable=FALSE }

    { 1000000032;2;Field  ;
                SourceExpr="Parent ID";
                Importance=Additional;
                Visible=FALSE;
                Editable=FALSE }

    { 1000000009;2;Field  ;
                SourceExpr="Parent ID 2";
                Importance=Additional;
                Visible=FALSE;
                Editable=FALSE }

    { 1000000006;2;Field  ;
                SourceExpr=ID;
                Importance=Additional;
                Visible=FALSE;
                Editable=FALSE }

    { 1000000007;2;Field  ;
                SourceExpr="Property Table ID";
                Importance=Additional;
                Visible=FALSE;
                Editable=FALSE }

    { 1000000005;2;Field  ;
                SourceExpr="Property Table Name";
                Importance=Additional;
                Visible=FALSE;
                Editable=FALSE }

    { 1000000004;2;Field  ;
                SourceExpr="Property ID";
                Visible=FALSE;
                Editable=FALSE }

    { 1000000003;2;Field  ;
                Name=Property;
                CaptionML=[ENU=Property;
                           ENG=Property];
                SourceExpr=mPropertyName;
                Editable=FALSE;
                OnValidate=BEGIN
                             ValidatePropertyName(mPropertyName);
                             UpdateGlobals();
                             CurrPage.UPDATE(TRUE);
                           END;

                OnLookup=BEGIN
                           IF (PropertyLookup()) THEN
                           BEGIN
                             UpdateGlobals();
                             CurrPage.UPDATE(TRUE);
                           END;
                         END;
                          }

    { 1000000002;2;Field  ;
                SourceExpr=Type;
                OnValidate=BEGIN
                             UpdateGlobals();
                             CurrPage.UPDATE(TRUE);
                           END;
                            }

    { 1000000044;2;Group  ;
                Name=TableGroup;
                CaptionML=[ENU=Table;
                           ENG=Table];
                Visible=mTableEn;
                Enabled=mTableEn;
                GroupType=Group }

    { 1000000045;3;Field  ;
                SourceExpr=Calculation;
                OnValidate=BEGIN
                             UpdateGlobals();
                           END;
                            }

    { 1000000011;3;Field  ;
                SourceExpr="Table ID";
                Visible=FALSE;
                Editable=FALSE }

    { 1000000010;3;Field  ;
                Name=Table;
                CaptionML=[ENU=Table;
                           ENG=Table];
                SourceExpr=mTableName;
                OnValidate=BEGIN
                             ValidateTableName(mTableName);
                             CurrPage.UPDATE(TRUE);
                           END;

                OnLookup=BEGIN
                           IF (TableLookup()) THEN
                             CurrPage.UPDATE(TRUE);
                         END;
                          }

    { 1000000041;3;Field  ;
                SourceExpr="Table Filter";
                Editable=FALSE;
                OnDrillDown=BEGIN
                              TableFilterLookup();
                            END;
                             }

    { 1000000036;3;Field  ;
                SourceExpr="Page ID";
                Visible=FALSE }

    { 1000000037;3;Field  ;
                Name=Page;
                CaptionML=[ENU=Page;
                           ENG=Page];
                SourceExpr=mPageName;
                OnValidate=BEGIN
                             ValidatePageName(mPageName);
                             CurrPage.UPDATE(TRUE);
                           END;

                OnLookup=BEGIN
                           PageLookup();
                           CurrPage.UPDATE(TRUE);
                         END;
                          }

    { 1000000038;3;Field  ;
                SourceExpr="Run Page Modally";
                Importance=Additional }

    { 1000000008;2;Group  ;
                Name=SourcePropertyGroup;
                CaptionML=[ENU=Source Property;
                           ENG=Source Property];
                Visible=mSourcePropertyEn;
                GroupType=Group }

    { 1000000013;3;Field  ;
                SourceExpr="Source Property ID";
                Visible=FALSE }

    { 1000000014;3;Field  ;
                Name=SourceProperty;
                CaptionML=[ENU=Source Property;
                           ENG=Source Property];
                SourceExpr=mSourcePropertyName;
                OnValidate=BEGIN
                             ValidateSourcePropertyName(mSourcePropertyName);
                             CurrPage.UPDATE(TRUE);
                           END;

                OnLookup=BEGIN
                           IF (SourcePropertyLookup()) THEN
                             CurrPage.UPDATE(TRUE);
                         END;
                          }

    { 1000000015;1;Group  ;
                Name=nFields;
                CaptionML=[ENU=Fields;
                           ENG=Fields];
                Visible=mFieldEn;
                Enabled=mFieldEn;
                GroupType=Group }

    { 1000000024;2;Part   ;
                Name=nListOfFields;
                CaptionML=[ENU=List of Fields;
                           ENG=List of Fields];
                SubPageLink=Parent Table ID=FIELD(Parent Table ID),
                            Parent Code=FIELD(Parent Code),
                            Parent ID=FIELD(Parent ID),
                            Parent ID 2=FIELD(Parent ID 2),
                            Panel Property ID=FIELD(ID);
                PagePartID=Page9062581;
                PartType=Page }

    { 1000000028;2;Field  ;
                SourceExpr=Formula }

    { 1000000043;2;Field  ;
                SourceExpr=Multiplier }

    { 1000000001;2;Field  ;
                SourceExpr=Rounding }

    { 1000000029;2;Field  ;
                SourceExpr=Prefix }

    { 1000000040;2;Field  ;
                SourceExpr=Suffix }

    { 1000000042;2;Field  ;
                SourceExpr="Record by Record" }

    { 1000000023;1;Group  ;
                Name=StaticValueGroup;
                CaptionML=[ENU=Static Value;
                           ENG=Static Value];
                Visible=FALSE;
                GroupType=Group }

    { 1000000018;2;Field  ;
                SourceExpr="Static Value" }

    { 1000000017;2;Field  ;
                SourceExpr="Static Image" }

    { 1000000026;1;Part   ;
                Name=DynamicValues;
                CaptionML=[ENU=Dynamic Values;
                           ENG=Dynamic Values];
                SubPageLink=Parent Table ID=FIELD(Parent Table ID),
                            Parent Code=FIELD(Parent Code),
                            Parent ID=FIELD(Parent ID),
                            Parent ID 2=FIELD(Parent ID 2),
                            Panel Property ID=FIELD(ID);
                PagePartID=Page9062584;
                PartType=Page }

    { 1000000016;1;Group  ;
                Name=Miscellaneous;
                CaptionML=[ENU=Miscellaneous;
                           ENG=Miscellaneous];
                GroupType=Group }

    { 1000000019;2;Field  ;
                SourceExpr="Created By";
                Importance=Promoted;
                Editable=FALSE }

    { 1000000020;2;Field  ;
                SourceExpr="Created Date Time";
                Importance=Promoted;
                Editable=FALSE }

    { 1000000021;2;Field  ;
                SourceExpr="Modified By";
                Importance=Promoted;
                Editable=FALSE }

    { 1000000022;2;Field  ;
                SourceExpr="Modified Date Time";
                Importance=Promoted;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      mPropertyName@1000000000 : Text;
      mCalculationEn@1000000004 : Boolean INDATASET;
      mTableName@1000000009 : Text;
      mTableEn@1000000010 : Boolean INDATASET;
      mTableNameEn@1000000005 : Boolean INDATASET;
      mFieldName@1000000003 : Text;
      mFieldEn@1000000001 : Boolean INDATASET;
      mPageName@1000000006 : Text;
      mPageEn@1000000011 : Boolean INDATASET;
      mSourcePropertyName@1000000002 : Text;
      mSourcePropertyEn@1000000007 : Boolean INDATASET;
      mValuesImageEn@1000000008 : Boolean INDATASET;

    LOCAL PROCEDURE UpdateGlobals@1000000004();
    VAR
      lDataProperty@1000000000 : Boolean;
      lPropertyIsBlob@1000000001 : Boolean;
    BEGIN
      //DOC NA2015.1 - Updating globals of the page

      lDataProperty := DataProperty();

      Rec.CALCFIELDS("Property Name", "Table Name", "Page Name", "Source Property Name");
      mPropertyName := Rec."Property Name";
      mCalculationEn := ((Rec.Type = Rec.Type::Table) AND ( NOT (lDataProperty)));
      mTableName := Rec."Table Name";
      mTableEn := ((Rec.Type = Rec.Type::Table) AND ( NOT (lDataProperty)));
      mTableNameEn := ((Rec.Type = Rec.Type::Table) AND (lDataProperty));
      mFieldName := FieldsInformation();
      mFieldEn := ((Rec.Type IN [Rec.Type::Table, Rec.Type::Property]) AND ((Rec.Calculation IN [Rec.Calculation::First, Rec.Calculation::Last, Rec.Calculation::Sum]) OR
        (lDataProperty)));
      mPageName := Rec."Page Name";
      mPageEn := (Rec.Type = Rec.Type::Table);
      mSourcePropertyName := Rec."Source Property Name";
      mSourcePropertyEn := (Rec.Type = Rec.Type::Property);

      lPropertyIsBlob := Rec.IsBlob();
      mValuesImageEn := lPropertyIsBlob;
      CurrPage.DynamicValues.PAGE.SetPropertyIsBlob(lPropertyIsBlob);
    END;

    LOCAL PROCEDURE UpdateDescriptionOnClose@1000000000();
    BEGIN
      //DOC NA2015.2 - Updating description if any fields have been changed

      IF ( NOT (CurrPage.nListOfFields.PAGE.FieldsChanged())) THEN
        EXIT;

      Rec.UpdateDescription();
      CurrPage.SAVERECORD();
    END;

    BEGIN
    {
      //DOC NA2015.1  JH 28/10/2013 - Created
      //DOC NA2015.1  JH 26/04/2014 - Tile panels 3
      //DOC NA2015.3  JH 15/08/2014 - User interface amendments
      //DOC NA2015.8  JH 13/07/2015 - Fixes
      //DOC NA2016.8  JH 28/08/2015 - Upgraded to 2016
      //DOC NA2016.15 JH 10/05/2016 - CfMD amendments
    }
    END.
  }
}

