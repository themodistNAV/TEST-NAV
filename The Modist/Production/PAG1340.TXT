OBJECT Page 1340 Mini Config Templates
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Templates;
               ENG=Templates];
    InsertAllowed=No;
    ModifyAllowed=No;
    SourceTable=Table8618;
    PageType=List;
    OnOpenPage=VAR
                 FilterValue@1000 : Text;
               BEGIN
                 FilterValue := GETFILTER("Table ID");

                 IF NOT EVALUATE(FilteredTableId,FilterValue) THEN
                   FilteredTableId := 0;

                 UpdateActionsVisibility;
                 UpdatePageCaption;
               END;

    OnDeleteRecord=BEGIN
                     CASE "Table ID" OF
                       DATABASE::Customer,
                       DATABASE::Item:
                         ConfigTemplateManagement.DeleteRelatedTemplates(Code,DATABASE::"Default Dimension");
                     END;
                   END;

    ActionList=ACTIONS
    {
      { 5       ;    ;ActionContainer;
                      Name=NewDocumentItems;
                      ActionContainerType=NewDocumentItems }
      { 6       ;1   ;Action    ;
                      Name=NewCustomerTemplate;
                      CaptionML=[ENU=New;
                                 ENG=New];
                      ToolTipML=[ENU=Create a new template for a customer card.;
                                 ENG=Create a new template for a customer card.];
                      RunObject=Page 1341;
                      Promoted=Yes;
                      Visible=CreateCustomerActionVisible;
                      PromotedIsBig=Yes;
                      Image=NewDocument;
                      RunPageMode=Create }
      { 3       ;1   ;Action    ;
                      Name=NewVendorTemplate;
                      CaptionML=[ENU=New;
                                 ENG=New];
                      ToolTipML=[ENU=Create a new template for a vendor card.;
                                 ENG=Create a new template for a vendor card.];
                      RunObject=Page 1344;
                      Promoted=Yes;
                      Visible=CreateVendorActionVisible;
                      PromotedIsBig=Yes;
                      Image=NewDocument;
                      RunPageMode=Create }
      { 8       ;1   ;Action    ;
                      Name=NewItemTemplate;
                      CaptionML=[ENU=New;
                                 ENG=New];
                      ToolTipML=[ENU=Create a new template for an item card.;
                                 ENG=Create a new template for an item card.];
                      RunObject=Page 1342;
                      Promoted=Yes;
                      Visible=CreateItemActionVisible;
                      PromotedIsBig=Yes;
                      Image=NewDocument;
                      RunPageMode=Create }
      { 9       ;1   ;Action    ;
                      Name=NewConfigTemplate;
                      CaptionML=[ENU=New;
                                 ENG=New];
                      RunObject=Page 8618;
                      Promoted=Yes;
                      Visible=CreateConfigurationTemplateActionVisible;
                      PromotedIsBig=Yes;
                      Image=NewDocument;
                      RunPageMode=Create }
      { 10      ;1   ;Action    ;
                      Name=Edit Template;
                      CaptionML=[ENU=Edit;
                                 ENG=Edit];
                      ToolTipML=[ENU=Edit the selected template.;
                                 ENG=Edit the selected template.];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Edit;
                      Scope=Repeater;
                      OnAction=VAR
                                 TempMiniCustomerTemplate@1000 : TEMPORARY Record 1300;
                                 TempMiniItemTemplate@1001 : TEMPORARY Record 1301;
                                 TempMiniVendorTemplate@1002 : TEMPORARY Record 1303;
                               BEGIN
                                 CASE "Table ID" OF
                                   DATABASE::Customer:
                                     BEGIN
                                       TempMiniCustomerTemplate.InitializeTempRecordFromConfigTemplate(TempMiniCustomerTemplate,Rec);
                                       PAGE.RUN(PAGE::"Mini Customer Template Card",TempMiniCustomerTemplate);
                                     END;
                                   DATABASE::Item:
                                     BEGIN
                                       TempMiniItemTemplate.InitializeTempRecordFromConfigTemplate(TempMiniItemTemplate,Rec);
                                       PAGE.RUN(PAGE::"Mini Item Template Card",TempMiniItemTemplate);
                                     END;
                                   DATABASE::Vendor:
                                     BEGIN
                                       TempMiniVendorTemplate.InitializeTempRecordFromConfigTemplate(TempMiniVendorTemplate,Rec);
                                       PAGE.RUN(PAGE::"Mini Vendor Template Card",TempMiniVendorTemplate);
                                     END;
                                   ELSE
                                     PAGE.RUN(PAGE::"Config. Template Header",Rec);
                                 END;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;    ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=Repeater;
                GroupType=Repeater }

    { 4   ;2   ;Field     ;
                Name=Template Name;
                SourceExpr=Description }

  }
  CODE
  {
    VAR
      ConfigTemplateManagement@1007 : Codeunit 8612;
      CreateCustomerActionVisible@1000 : Boolean;
      CreateVendorActionVisible@1011 : Boolean;
      CreateItemActionVisible@1001 : Boolean;
      CreateConfigurationTemplateActionVisible@1002 : Boolean;
      FilteredTableId@1003 : Integer;
      ConfigurationTemplatesCap@1006 : TextConst 'ENU=Configuration Templates;ENG=Configuration Templates';
      CustomerTemplatesCap@1005 : TextConst 'ENU=Customer Templates;ENG=Customer Templates';
      VendorTemplatesCap@1013 : TextConst 'ENU=Vendor Templates;ENG=Vendor Templates';
      ItemTemplatesCap@1004 : TextConst 'ENU=Item Templates;ENG=Item Templates';
      SelectConfigurationTemplatesCap@1010 : TextConst 'ENU=Select a template;ENG=Select a template';
      SelectCustomerTemplatesCap@1009 : TextConst 'ENU=Select a template for a new customer;ENG=Select a template for a new customer';
      SelectVendorTemplatesCap@1012 : TextConst 'ENU=Select a template for a new vendor;ENG=Select a template for a new vendor';
      SelectItemTemplatesCap@1008 : TextConst 'ENU=Select a template for a new item;ENG=Select a template for a new item';

    LOCAL PROCEDURE UpdateActionsVisibility@3();
    BEGIN
      CreateCustomerActionVisible := FALSE;
      CreateItemActionVisible := FALSE;
      CreateConfigurationTemplateActionVisible := FALSE;
      CreateVendorActionVisible := FALSE;

      CASE FilteredTableId OF
        DATABASE::Customer:
          CreateCustomerActionVisible := TRUE;
        DATABASE::Item:
          CreateItemActionVisible := TRUE;
        DATABASE::Vendor:
          CreateVendorActionVisible := TRUE;
        ELSE
          CreateConfigurationTemplateActionVisible := TRUE;
      END;
    END;

    LOCAL PROCEDURE UpdatePageCaption@1();
    VAR
      PageCaption@1000 : Text;
    BEGIN
      IF NOT CurrPage.LOOKUPMODE THEN
        CASE FilteredTableId OF
          DATABASE::Customer:
            PageCaption := CustomerTemplatesCap;
          DATABASE::Vendor:
            PageCaption := VendorTemplatesCap;
          DATABASE::Item:
            PageCaption := ItemTemplatesCap;
          ELSE
            PageCaption := ConfigurationTemplatesCap;
        END
      ELSE
        CASE FilteredTableId OF
          DATABASE::Customer:
            PageCaption := SelectCustomerTemplatesCap;
          DATABASE::Vendor:
            PageCaption := SelectVendorTemplatesCap;
          DATABASE::Item:
            PageCaption := SelectItemTemplatesCap;
          ELSE
            PageCaption := SelectConfigurationTemplatesCap;
        END;

      CurrPage.CAPTION(PageCaption);
    END;

    BEGIN
    END.
  }
}

