OBJECT Page 11102112 OM - Backup and Restore
{
  OBJECT-PROPERTIES
  {
    Date=01/10/12;
    Time=12:00:00 PM;
    Version List=OMA9.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Backup and Restore;
               ENU=Backup and Restore;
               ESP=Backup and Restore;
               FRA=Backup and Restore;
               NLD=Backup en restore;
               DEA=Backup and Restore];
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table2000000028;
    DataCaptionExpr='';
    PageType=Worksheet;
    OnOpenPage=VAR
                 Object@1000 : Record 2000000001;
                 TableInformation@1001 : Record 2000000028;
                 BackupAndRestore@1002 : Codeunit 11102055;
                 TableGroup2@1003 : Integer;
               BEGIN
                 CLEAR(GroupSize);

                 Object.SETRANGE(Type, Object.Type::Table);
                 Object.SETFILTER(Name, 'OM - *');
                 IF Object.FINDSET THEN
                   REPEAT
                     NoOfTables += 1;
                     TableNo[NoOfTables] := Object.ID;

                     TableInformation.SETRANGE("Table No.", Object.ID);
                     IF TableInformation.FINDSET THEN
                       REPEAT
                         TmpTableInformation := TableInformation;
                         TmpTableInformation.INSERT;

                         TableGroup2 := BackupAndRestore.TableBelongTo(TableInformation."Table No.");
                         GroupSize[TableGroup2] += TableInformation."Size (KB)";
                         IF GroupSize[TableGroup2] > BiggestGroupSize THEN
                           BiggestGroupSize := GroupSize[TableGroup2];

                       UNTIL TableInformation.NEXT = 0;

                   UNTIL Object.NEXT = 0;

                 SetEnabled;

                 IF NOT Initialized THEN BEGIN
                   Initialized := TRUE;
                   TableGroupSelected[1] := TRUE;
                   TableGroupSelected[2] := TRUE;
                   TableGroupSelected[3] := TRUE;
                   TableGroupSelected[6] := TRUE;
                   TableGroupSelected[7] := TRUE;
                 END;

                 SelectBackupType;

                 IF BiggestGroupSize = 0 THEN
                   BiggestGroupSize := 1;

                 SetExpression;
               END;

    OnFindRecord=BEGIN
                   TmpTableInformation.COPYFILTERS(Rec);
                   TmpTableInformation := Rec;

                   IF TmpTableInformation.FIND(Which) THEN BEGIN
                     Rec := TmpTableInformation;
                     EXIT(TRUE);
                   END;
                 END;

    OnNextRecord=VAR
                   CurrentSteps@1000 : Integer;
                 BEGIN
                   TmpTableInformation.COPYFILTERS(Rec);
                   TmpTableInformation := Rec;

                   CurrentSteps := TmpTableInformation.NEXT(Steps);
                   IF CurrentSteps <> 0 THEN BEGIN
                     Rec := TmpTableInformation;
                     EXIT(CurrentSteps);
                   END;
                 END;

    OnAfterGetRecord=BEGIN
                       TableSelected := TmpSelectedTable.GET(0, '', "Table No.");
                     END;

    ActionList=ACTIONS
    {
      { 1       ;0   ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 2       ;1   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[DEU=E&xport;
                                 ENU=E&xport;
                                 ESP=E&xport;
                                 FRA=E&xport;
                                 NLD=&Exporteren;
                                 DEA=E&xport];
                      Promoted=Yes;
                      Image=Export;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 BackupAndRestore@1000 : Codeunit 11102055;
                                 CommonDialog@1001 : Codeunit 11102059;
                                 FileHandler@1002 : Codeunit 11102097;
                                 ServerFileName@1003 : Text;
                                 ctBackupCreated@1004 : TextConst 'DEU=Backup created.;ENU=Backup created.;ESP=Backup created.;FRA=Backup created.;NLD=Backup aangemaakt.;DEA=Backup created.';
                                 ctDefaultFileName@1005 : TextConst 'DEU=backup.dbk;ENU=backup.dbk;ESP=backup.dbk;FRA=backup.dbk;NLD=backup.dbk;DEA=backup.dbk';
                               BEGIN
                                 CommonDialog.AddKnownExtension('dbk');
                                 IF NOT CommonDialog.SaveFile(ExportFileName, ServerFileName, ctDefaultFileName) THEN
                                   EXIT;

                                 BackupAndRestore.CreateBackupFile(ServerFileName, TmpSelectedTable);

                                 FileHandler.DownloadToClient(ServerFileName, ExportFileName, ctDefaultFileName);

                                 MESSAGE(ctBackupCreated);
                               END;
                                }
      { 3       ;1   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[DEU=&Import;
                                 ENU=&Import;
                                 ESP=&Import;
                                 FRA=&Import;
                                 NLD=&Importeren;
                                 DEA=&Import];
                      Promoted=Yes;
                      Image=Import;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 BackupAndRestore@1000 : Codeunit 11102055;
                                 CommonDialog@1001 : Codeunit 11102059;
                                 ServerFileName@1002 : Text;
                                 ctBackupRead@1003 : TextConst 'DEU=Backup restored.;ENU=Backup restored.;ESP=Backup restored.;FRA=Backup restored.;NLD=Backup ingelezen.;DEA=Backup restored.';
                               BEGIN
                                 CommonDialog.AddKnownExtension('dbk');
                                 IF NOT CommonDialog.OpenFile(ImportFileName, ServerFileName) THEN
                                   EXIT;

                                 BackupAndRestore.ImportBackupFile(ServerFileName);
                                 MESSAGE(ctBackupRead);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 4   ;0   ;Container ;
                ContainerType=ContentArea }

    { 5   ;1   ;Group      }

    { 6   ;2   ;Field     ;
                CaptionML=[DEU=Table Filter;
                           ENU=Table Filter;
                           ESP=Table Filter;
                           FRA=Table Filter;
                           NLD=Tabellenfilter;
                           DEA=Table Filter];
                OptionCaptionML=[DEU=Custom,All Tables;
                                 ENU=Custom,All Tables;
                                 ESP=Custom,All Tables;
                                 FRA=Custom,All Tables;
                                 NLD=Aangepast,Alle tabellen;
                                 DEA=Custom,All Tables];
                SourceExpr=BackupType;
                OnValidate=BEGIN
                             SetEnabled;
                             SelectBackupType;

                             CurrPage.UPDATE(FALSE);
                           END;
                            }

    { 7   ;2   ;Group     ;
                GroupType=Group }

    { 8   ;3   ;Field     ;
                Name=SelectGroup1;
                CaptionML=[DEU=Setup;
                           ENU=Setup;
                           ESP=Setup;
                           FRA=Setup;
                           NLD=Instellingen;
                           DEA=Setup];
                SourceExpr=TableGroupSelected[1];
                Enabled=SelectGroupEnabled;
                OnValidate=BEGIN
                             SelectTableGroup(1);
                           END;
                            }

    { 9   ;3   ;Field     ;
                Name=SelectGroup2;
                CaptionML=[DEU=Modifications;
                           ENU=Modifications;
                           ESP=Modifications;
                           FRA=Modifications;
                           NLD=Wijzigingen;
                           DEA=Modifications];
                SourceExpr=TableGroupSelected[2];
                Enabled=SelectGroupEnabled;
                OnValidate=BEGIN
                             SelectTableGroup(2);
                           END;
                            }

    { 10  ;3   ;Field     ;
                Name=SelectGroup3;
                CaptionML=[DEU=Projects and Transports;
                           ENU=Projects and Transports;
                           ESP=Projects and Transports;
                           FRA=Projects and Transports;
                           NLD=Projecten en transporten;
                           DEA=Projects and Transports];
                SourceExpr=TableGroupSelected[3];
                Enabled=SelectGroupEnabled;
                OnValidate=BEGIN
                             SelectTableGroup(3);
                           END;
                            }

    { 11  ;3   ;Field     ;
                Name=SelectGroup4;
                CaptionML=[DEU=Source Control;
                           ENU=Source Control;
                           ESP=Source Control;
                           FRA=Source Control;
                           NLD=Source Control;
                           DEA=Source Control];
                SourceExpr=TableGroupSelected[4];
                Enabled=SelectGroupEnabled;
                OnValidate=BEGIN
                             SelectTableGroup(4);
                           END;
                            }

    { 12  ;3   ;Field     ;
                Name=SelectGroup5;
                CaptionML=[DEU=Where-Used Tables;
                           ENU=Where-Used Tables;
                           ESP=Where-Used Tables;
                           FRA=Where-Used Tables;
                           NLD=Waar-gebruikt tabellen;
                           DEA=Where-Used Tables];
                SourceExpr=TableGroupSelected[5];
                Enabled=SelectGroupEnabled;
                OnValidate=BEGIN
                             SelectTableGroup(5);
                           END;
                            }

    { 13  ;3   ;Field     ;
                Name=SelectGroup6;
                CaptionML=[DEU=Check Guidelines Tool;
                           ENU=Check Guidelines Tool;
                           ESP=Check Guidelines Tool;
                           FRA=Check Guidelines Tool;
                           NLD=Richtlijnen controleren;
                           DEA=Check Guidelines Tool];
                SourceExpr=TableGroupSelected[6];
                Enabled=SelectGroupEnabled;
                OnValidate=BEGIN
                             SelectTableGroup(6);
                           END;
                            }

    { 14  ;3   ;Field     ;
                Name=SelectGroup7;
                CaptionML=[DEU=Object Update Tools;
                           ENU=Object Update Tools;
                           ESP=Object Update Tools;
                           FRA=Object Update Tools;
                           NLD=Objecten-wijzigtools;
                           DEA=Object Update Tools];
                SourceExpr=TableGroupSelected[7];
                Enabled=SelectGroupEnabled;
                OnValidate=BEGIN
                             SelectTableGroup(7);
                           END;
                            }

    { 15  ;3   ;Field     ;
                Name=SelectGroup8;
                CaptionML=[DEU=Buffer Tables;
                           ENU=Buffer Tables;
                           ESP=Buffer Tables;
                           FRA=Buffer Tables;
                           NLD=Buffertabellen;
                           DEA=Buffer Tables];
                SourceExpr=TableGroupSelected[8];
                Enabled=SelectGroupEnabled;
                OnValidate=BEGIN
                             SelectTableGroup(8);
                           END;
                            }

    { 16  ;2   ;Group     ;
                GroupType=Group }

    { 17  ;3   ;Field     ;
                ExtendedDatatype=Ratio;
                SourceExpr=GroupSize[1] / BiggestGroupSize * 10000;
                CaptionClass=GroupSizeCaption(1);
                StyleExpr=GroupSizeExpr1 }

    { 18  ;3   ;Field     ;
                ExtendedDatatype=Ratio;
                SourceExpr=GroupSize[2] / BiggestGroupSize * 10000;
                CaptionClass=GroupSizeCaption(2);
                StyleExpr=GroupSizeExpr2 }

    { 19  ;3   ;Field     ;
                ExtendedDatatype=Ratio;
                SourceExpr=GroupSize[3] / BiggestGroupSize * 10000;
                CaptionClass=GroupSizeCaption(3);
                StyleExpr=GroupSizeExpr3 }

    { 20  ;3   ;Field     ;
                ExtendedDatatype=Ratio;
                SourceExpr=GroupSize[4] / BiggestGroupSize * 10000;
                CaptionClass=GroupSizeCaption(4);
                StyleExpr=GroupSizeExpr4 }

    { 21  ;3   ;Field     ;
                ExtendedDatatype=Ratio;
                SourceExpr=GroupSize[5] / BiggestGroupSize * 10000;
                CaptionClass=GroupSizeCaption(5);
                StyleExpr=GroupSizeExpr5 }

    { 22  ;3   ;Field     ;
                ExtendedDatatype=Ratio;
                SourceExpr=GroupSize[6] / BiggestGroupSize * 10000;
                CaptionClass=GroupSizeCaption(6);
                StyleExpr=GroupSizeExpr6 }

    { 23  ;3   ;Field     ;
                ExtendedDatatype=Ratio;
                SourceExpr=GroupSize[7] / BiggestGroupSize * 10000;
                CaptionClass=GroupSizeCaption(7);
                StyleExpr=GroupSizeExpr7 }

    { 24  ;3   ;Field     ;
                ExtendedDatatype=Ratio;
                SourceExpr=GroupSize[8] / BiggestGroupSize * 10000;
                CaptionClass=GroupSizeCaption(8);
                StyleExpr=GroupSizeExpr8 }

    { 25  ;1   ;Group     ;
                GroupType=Repeater }

    { 26  ;2   ;Field     ;
                CaptionML=[DEU=Selected;
                           ENU=Selected;
                           ESP=Selected;
                           FRA=Selected;
                           NLD=Geselecteerd;
                           DEA=Selected];
                SourceExpr=TableSelected;
                OnValidate=BEGIN
                             SelectTable("Table No.", TableSelected);
                           END;
                            }

    { 27  ;2   ;Field     ;
                SourceExpr="Table No.";
                Editable=FALSE }

    { 28  ;2   ;Field     ;
                SourceExpr="Table Name";
                Editable=FALSE }

    { 29  ;2   ;Field     ;
                SourceExpr="No. of Records";
                Editable=FALSE }

    { 30  ;2   ;Field     ;
                DecimalPlaces=0:0;
                SourceExpr="Record Size";
                Editable=FALSE }

    { 31  ;2   ;Field     ;
                SourceExpr="Size (KB)";
                Editable=FALSE }

    { 32  ;1   ;Field     ;
                SourceExpr=ImportFileName;
                Visible=FALSE }

    { 33  ;1   ;Field     ;
                SourceExpr=ExportFileName;
                Visible=FALSE }

    { 34  ;1   ;Field     ;
                SourceExpr=Initialized;
                Visible=FALSE }

  }
  CODE
  {
    VAR
      TmpSelectedTable@1000 : TEMPORARY Record 2000000001;
      TmpTableInformation@1001 : TEMPORARY Record 2000000028;
      ExportFileName@1002 : Text;
      GroupSizeExpr1@1003 : Text INDATASET;
      GroupSizeExpr2@1004 : Text INDATASET;
      GroupSizeExpr3@1005 : Text INDATASET;
      GroupSizeExpr4@1006 : Text INDATASET;
      GroupSizeExpr5@1007 : Text INDATASET;
      GroupSizeExpr6@1008 : Text INDATASET;
      GroupSizeExpr7@1009 : Text INDATASET;
      GroupSizeExpr8@1010 : Text INDATASET;
      ImportFileName@1011 : Text;
      GroupSize@1012 : ARRAY [10] OF Decimal;
      BiggestGroupSize@1013 : Integer;
      NoOfTables@1014 : Integer;
      TableNo@1015 : ARRAY [500] OF Integer;
      BackupType@1016 : 'Custom,All';
      Initialized@1017 : Boolean;
      SelectGroupEnabled@1018 : Boolean INDATASET;
      TableGroupSelected@1019 : ARRAY [10] OF Boolean;
      TableSelected@1020 : Boolean;

    LOCAL PROCEDURE SelectTableGroup@1(TableGroupNo@1000 : Integer);
    VAR
      BackupAndRestore@1001 : Codeunit 11102055;
      i@1002 : Integer;
    BEGIN
      FOR i := 1 TO NoOfTables DO
        IF TableGroupNo = BackupAndRestore.TableBelongTo(TableNo[i]) THEN
          SelectTable(TableNo[i], TableGroupSelected[TableGroupNo]);

      SetExpression;

      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE SelectBackupType@2();
    VAR
      BackupAndRestore@1000 : Codeunit 11102055;
      i@1001 : Integer;
    BEGIN
      FOR i := 1 TO NoOfTables DO
        SelectTable(TableNo[i], TableGroupSelected[BackupAndRestore.TableBelongTo(TableNo[i])] OR (BackupType = BackupType::All));
    END;

    LOCAL PROCEDURE SetEnabled@3();
    BEGIN
      SelectGroupEnabled := BackupType = BackupType::Custom;
    END;

    LOCAL PROCEDURE SelectTable@4(TableNo@1000 : Integer;Select@1001 : Boolean);
    BEGIN
      IF Select THEN BEGIN
        TmpSelectedTable.ID := TableNo;
        IF TmpSelectedTable.INSERT THEN
          ;
      END ELSE BEGIN
        TmpSelectedTable.ID := TableNo;
        IF TmpSelectedTable.DELETE THEN
          ;
      END;
    END;

    LOCAL PROCEDURE GroupSizeCaption@5(GroupNo@1000 : Integer) : Text;
    BEGIN
      EXIT(FORMAT(GroupSize[GroupNo]) + ' KB');
    END;

    LOCAL PROCEDURE SetExpression@6();
    BEGIN
      GroupSizeExpr1 := GetExpr(TableGroupSelected[1]);
      GroupSizeExpr2 := GetExpr(TableGroupSelected[2]);
      GroupSizeExpr3 := GetExpr(TableGroupSelected[3]);
      GroupSizeExpr4 := GetExpr(TableGroupSelected[4]);
      GroupSizeExpr5 := GetExpr(TableGroupSelected[5]);
      GroupSizeExpr6 := GetExpr(TableGroupSelected[6]);
      GroupSizeExpr7 := GetExpr(TableGroupSelected[7]);
      GroupSizeExpr8 := GetExpr(TableGroupSelected[8]);
    END;

    LOCAL PROCEDURE GetExpr@7(Enabled@1000 : Boolean) : Text;
    BEGIN
      IF Enabled THEN
        EXIT('Unfavorable')
      ELSE
        EXIT('Subordinate');
    END;

    BEGIN
    END.
  }
}

