OBJECT Table 9087030 Purchase Summary Line
{
  OBJECT-PROPERTIES
  {
    Date=05/01/17;
    Time=[ 2:29:57 PM];
    Modified=Yes;
    Version List=NS2016.16;
  }
  PROPERTIES
  {
    OnDelete=BEGIN
               PurchaseLine.RESET();
               PurchaseLine.SETRANGE("Document Type", Rec."Document Type");
               PurchaseLine.SETRANGE("Document No.", Rec."Document No.");
               PurchaseLine.SETRANGE(Type, Rec.Type);
               PurchaseLine.SETRANGE("No.", Rec."No.");
               PurchaseLine.DELETEALL(TRUE);
             END;

    CaptionML=[ENU=Purchase Summary Line;
               ENG=Purchase Summary Line];
    LookupPageID=Page9087057;
    DrillDownPageID=Page9087057;
  }
  FIELDS
  {
    { 1   ;   ;Document Type       ;Option        ;CaptionML=[ENU=Document Type;
                                                              ENG=Document Type];
                                                   OptionCaptionML=[ENU=Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order;
                                                                    ENG=Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order];
                                                   OptionString=Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order }
    { 2   ;   ;Document No.        ;Code20        ;TableRelation="Purchase Header".No. WHERE (Document Type=FIELD(Document Type));
                                                   CaptionML=[ENU=Document No.;
                                                              ENG=Document No.] }
    { 3   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              ENG=Line No.] }
    { 10  ;   ;Type                ;Option        ;InitValue=Item;
                                                   OnValidate=BEGIN
                                                                IF (Rec.Type <> xRec.Type) THEN
                                                                  Rec.VALIDATE("No.", '');
                                                              END;

                                                   CaptionML=[ENU=Type;
                                                              ENG=Type];
                                                   OptionCaptionML=[ENU=" ,,Item";
                                                                    ENG=" ,,Item"];
                                                   OptionString=[ ,,Item] }
    { 11  ;   ;No.                 ;Code20        ;TableRelation=IF (Type=CONST(" ")) "Standard Text"
                                                                 ELSE IF (Type=CONST(Item),
                                                                          Style No.=FILTER('')) Item
                                                                          ELSE IF (Type=CONST(Item),
                                                                                   Style No.=FILTER(<>'')) Item WHERE (Style No.=FIELD(Style No.));
                                                   OnValidate=VAR
                                                                ICPartner@1000 : Record 413;
                                                                ItemCrossReference@1001 : Record 5717;
                                                                PrepmtMgt@1002 : Codeunit 441;
                                                              BEGIN
                                                                IF (Rec."No." <> xRec."No.") THEN
                                                                BEGIN
                                                                  NsembleSetup.VerifyAndGet();
                                                                  DeletePurchaseLines();
                                                                  IF (NsembleSetup."Pre-Create Purchase Sizes") THEN
                                                                    CreatePurchaseLines();
                                                                END;

                                                                Rec.VALIDATE(Description, '');
                                                                Rec.VALIDATE("Description 2", '');
                                                                IF (Rec."No." <> '') THEN
                                                                  CASE Rec.Type OF
                                                                    Rec.Type::" ":
                                                                      BEGIN
                                                                        StandardText.GET("No.");
                                                                        Rec.VALIDATE(Description, StandardText.Description);
                                                                      END;
                                                                    Rec.Type::Item:
                                                                      BEGIN
                                                                        Item.GET("No.");
                                                                        Rec.VALIDATE(Description, Item.Description);
                                                                        Rec.VALIDATE("Description 2", Item."Description 2");
                                                                        Rec.VALIDATE("Style No.", Item."Style No.");
                                                                      END;
                                                                  END;
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              ENG=No.] }
    { 20  ;   ;Style No.           ;Code20        ;TableRelation=Style;
                                                   CaptionML=[ENU=Style No.;
                                                              ENG=Style No.] }
    { 25  ;   ;Vendor Item No.     ;Text20        ;CaptionML=[ENU=Vendor Item No.;
                                                              ENG=Vendor Item No.];
                                                   Description=NS2016.16 }
    { 30  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              ENG=Description] }
    { 31  ;   ;Description 2       ;Text50        ;CaptionML=[ENU=Description 2;
                                                              ENG=Description 2] }
    { 40  ;   ;No. of Lines        ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Purchase Line" WHERE (Document Type=FIELD(Document Type),
                                                                                            Document No.=FIELD(Document No.),
                                                                                            Type=FIELD(Type),
                                                                                            No.=FIELD(No.)));
                                                   CaptionML=[ENU=No. of Lines;
                                                              ENG=No. of Lines];
                                                   Editable=No }
    { 50  ;   ;Total Quantity      ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Purchase Line".Quantity WHERE (Document Type=FIELD(Document Type),
                                                                                                   Document No.=FIELD(Document No.),
                                                                                                   Type=FIELD(Type),
                                                                                                   No.=FIELD(No.)));
                                                   CaptionML=[ENU=Total Quantity;
                                                              ENG=Total Quantity];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 51  ;   ;Total Amount        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Purchase Line"."Line Amount" WHERE (Document Type=FIELD(Document Type),
                                                                                                        Document No.=FIELD(Document No.),
                                                                                                        Type=FIELD(Type),
                                                                                                        No.=FIELD(No.)));
                                                   CaptionML=[ENU=Total Amount;
                                                              ENG=Total Amount];
                                                   Editable=No }
    { 60  ;   ;Store Allocation Code;Code20       ;OnValidate=BEGIN
                                                                IF (Rec."Store Allocation Code" <> xRec."Store Allocation Code") THEN
                                                                  UpdateStoreAllocationCode();
                                                              END;

                                                   OnLookup=BEGIN
                                                              ShowStoreAllocations();
                                                            END;

                                                   CaptionML=[ENU=Store Allocation Code;
                                                              ENG=Store Allocation Code] }
    { 61  ;   ;Quantity Allocated  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Store Allocation Line".Quantity WHERE (Store Allocation Code=FIELD(Store Allocation Code),
                                                                                                           Item No.=FIELD(No.),
                                                                                                           Variant Code=FIELD(Variant Filter)));
                                                   OnLookup=BEGIN
                                                              ShowStoreAllocations();
                                                            END;

                                                   CaptionML=[ENU=Quantity Allocated;
                                                              ENG=Quantity Allocated];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 70  ;   ;Variant Filter      ;Code10        ;FieldClass=FlowFilter;
                                                   TableRelation="Item Variant".Code WHERE (Item No.=FIELD(No.));
                                                   CaptionML=[ENU=Variant Filter;
                                                              ENG=Variant Filter] }
    { 80  ;   ;Purchase Line Quantity;Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Purchase Line".Quantity WHERE (Document Type=FIELD(Document Type),
                                                                                                   Document No.=FIELD(Document No.),
                                                                                                   Type=FIELD(Type),
                                                                                                   No.=FIELD(No.),
                                                                                                   Variant Code=FIELD(Variant Filter)));
                                                   CaptionML=[ENU=Purchase Line Quantity;
                                                              ENG=Purchase Line Quantity];
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 50650;  ;Buying Sheet Shipment Date;Date    ;Description=M0032 }
    { 50660;  ;Buying Sheet Cancellation Date;Date;Description=M0032 }
  }
  KEYS
  {
    {    ;Document Type,Document No.,Line No.      }
    {    ;Document Type,Document No.,Type,No.     ;Clustered=Yes }
    {    ;Store Allocation Code,Type,No.           }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      NsembleSetup@1000000007 : Record 9087000;
      Item@1000000002 : Record 27;
      ItemVariant@1000000001 : Record 5401;
      errCannotRename@1000000003 : TextConst 'ENU=errCannotRename;ENG=errCannotRename';
      PurchaseHeader@1000000005 : Record 38;
      PurchaseLine@1000000000 : Record 39;
      StandardText@1000000004 : Record 7;
      StoreAllocationSender@1000000008 : Integer;
      SkipLineUpdate@1000000006 : Boolean;

    PROCEDURE SetSkipLineUpdate@1000000006(pSkipLineUpdate@1000000000 : Boolean);
    BEGIN
      //DOC NS2015.3 - Setting "Skip Line Update" flag
      //  -> pSkipLineUpdate: The flag

      SkipLineUpdate := pSkipLineUpdate;
    END;

    PROCEDURE CreatePurchaseLines@1000000000();
    VAR
      lLineNo@1000000000 : Integer;
      lUseVariants@1000000001 : Boolean;
    BEGIN
      IF ((Rec."Document No." <> '') AND (Rec."No." <> '')) THEN
      BEGIN
        lUseVariants := FALSE;
        IF (Rec.Type = Rec.Type::Item) THEN
        BEGIN
          ItemVariant.RESET();
          ItemVariant.SETRANGE("Item No.", Rec."No.");
          lUseVariants := ItemVariant.FINDSET();
          IF (lUseVariants) THEN
          REPEAT
            CreatePurchaseLine(lLineNo, '', ItemVariant.Code);
          UNTIL (ItemVariant.NEXT() = 0);
        END;

        IF ( NOT (lUseVariants)) THEN
          CreatePurchaseLine(lLineNo, '', '');
      END;
    END;

    PROCEDURE CreatePurchaseLine@1000000002(VAR pLineNo@1000000000 : Integer;pItemNo@1000000003 : Code[20];pVariantCode@1000000001 : Code[20]);
    VAR
      lItemVendor@1000000002 : Record 99;
    BEGIN
      //DOC NS2015.3 - Creating purchase lines
      //  <> pLineNo: Source / target line number
      //  -> pItemNo: Item no.
      //  -> pVariantCode: Variant code

      IF (SkipLineUpdate) THEN
        EXIT;

      IF (pLineNo = 0) THEN
      BEGIN
        PurchaseLine.RESET();
        PurchaseLine.SETRANGE("Document Type", "Document Type");
        PurchaseLine.SETRANGE("Document No.", "Document No.");
        IF (PurchaseLine.FINDLAST()) THEN
          pLineNo := PurchaseLine."Line No.";
      END;
      pLineNo += 10000;

      IF (pItemNo = '') THEN
        pItemNo := Rec."No.";

      PurchaseLine.INIT();
      PurchaseLine."Document Type" := Rec."Document Type";
      PurchaseLine.VALIDATE("Document No.", Rec."Document No.");
      PurchaseLine."Line No." := pLineNo;
      PurchaseLine.INSERT(TRUE);
      PurchaseLine.VALIDATE(Type, Rec.Type);
      PurchaseLine.VALIDATE("No.", pItemNo);
      IF (pVariantCode <> '') THEN
        PurchaseLine.VALIDATE("Variant Code", pVariantCode);
      PurchaseLine.MODIFY(TRUE);

      //DOC NS2016.16 PCM 27/09/2016 -
      IF NOT lItemVendor.GET(PurchaseLine."Buy-from Vendor No.",Rec."No.",pVariantCode) THEN BEGIN
        lItemVendor.VALIDATE("Vendor No.",PurchaseLine."Buy-from Vendor No.");
        lItemVendor.VALIDATE("Item No.",Rec."No.");
        IF (pVariantCode <> '') THEN
          lItemVendor.VALIDATE("Variant Code",pVariantCode);
          lItemVendor."Vendor Item No." := Rec."Vendor Item No.";
        lItemVendor.INSERT(TRUE);
      END;
      //DOC NS2016.16 PCM 27/09/2016 +
    END;

    PROCEDURE CreatePurchaseLineAdv@1000000003(VAR pLineNo@1000000001 : Integer;pItemNo@1000000003 : Code[20];pVariantCode@1000000000 : Code[10];VAR pPurchaseLine@1000000002 : Record 39);
    BEGIN
      //DOC NA2016.16.3 - Creating purchase line (advanced version)
      //  <> pLineNo: Source / target line number
      //  -> pItemNo: Item no.
      //  -> pVariantCode: Variant code
      //  <> pPurchaseLine: Target purchase line

      CreatePurchaseLine(pLineNo, pItemNo, pVariantCode);
      pPurchaseLine := PurchaseLine;
    END;

    PROCEDURE DeletePurchaseLines@1000000001();
    BEGIN
      //DOC NS2015.3 - Deleting existing purchase lines

      IF (SkipLineUpdate) THEN
        EXIT;

      IF (xRec."No." <> '') THEN
      BEGIN
        PurchaseLine.RESET();
        PurchaseLine.SETRANGE("Document Type", Rec."Document Type");
        PurchaseLine.SETRANGE("Document No.", Rec."Document No.");
        PurchaseLine.SETRANGE(Type, xRec.Type);
        PurchaseLine.SETRANGE("No.", xRec."No.");
        PurchaseLine.DELETEALL(TRUE);
      END;
    END;

    PROCEDURE SetStoreAllocationSender@1000000008(pStoreAllocationSender@1000000000 : Integer);
    BEGIN
      //DOC NS2015.1 - Setting store allocation sender (table ID)
      //  -> pStoreAllocationSender: The sender

      StoreAllocationSender := pStoreAllocationSender;
    END;

    PROCEDURE UpdateStoreAllocationCode@1000000007();
    VAR
      lBuyingSheetSummaryLine@1000000000 : Record 9087021;
      lPurchaseLine@1000000002 : Record 39;
      lConsignmentLine@1000000001 : Record 9062448;
    BEGIN
      //DOC NS2015.1 - Updating store allocation code

      IF ((Rec."Document Type" <> Rec."Document Type"::Order) OR (Rec.Type <> Rec.Type::Item) OR (Rec."No." = '')) THEN
        EXIT;

      lPurchaseLine.RESET();
      lPurchaseLine.SETRANGE("Document Type", Rec."Document Type");
      lPurchaseLine.SETRANGE("Document No.", Rec."Document No.");
      lPurchaseLine.SETRANGE(Type, lPurchaseLine.Type::Item);
      lPurchaseLine.SETRANGE("No.", Rec."No.");
      lPurchaseLine.MODIFYALL("Store Allocation Code", Rec."Store Allocation Code");

      IF (StoreAllocationSender <> DATABASE::"Buying Sheet Summary Line") THEN
      BEGIN
        lBuyingSheetSummaryLine.RESET();
        lBuyingSheetSummaryLine.SETCURRENTKEY("Purchase Order No.", "Item No.");
        lBuyingSheetSummaryLine.SETRANGE("Purchase Order No.", Rec."Document No.");
        lBuyingSheetSummaryLine.SETRANGE("Item No.", Rec."No.");
        IF (lBuyingSheetSummaryLine.FINDSET(TRUE)) THEN
        REPEAT
          lBuyingSheetSummaryLine.SetSystemActivity(TRUE);
          lBuyingSheetSummaryLine.SetStoreAllocationSender(DATABASE::"Purchase Summary Line");
          lBuyingSheetSummaryLine.VALIDATE("Store Allocation Code", Rec."Store Allocation Code");
          lBuyingSheetSummaryLine.SetStoreAllocationSender(0);
          lBuyingSheetSummaryLine.MODIFY(TRUE);
          lBuyingSheetSummaryLine.SetSystemActivity(FALSE);
        UNTIL (lBuyingSheetSummaryLine.NEXT() = 0);
      END;

      IF (StoreAllocationSender <> DATABASE::"Consignment Line") THEN
      BEGIN
        lPurchaseLine.RESET();
        lPurchaseLine.SETRANGE("Document Type", Rec."Document Type");
        lPurchaseLine.SETRANGE("Document No.", Rec."Document No.");
        lPurchaseLine.SETRANGE(Type, lPurchaseLine.Type::Item);
        lPurchaseLine.SETRANGE("No.", Rec."No.");
        IF (lPurchaseLine.FINDSET()) THEN
        REPEAT
          lConsignmentLine.RESET();
          lConsignmentLine.SETCURRENTKEY("Purchase Order No.", "Purchase Order Line No.");
          lConsignmentLine.SETRANGE("Purchase Order No.", lPurchaseLine."Document No.");
          lConsignmentLine.SETRANGE("Purchase Order Line No.", lPurchaseLine."Line No.");
          IF (lConsignmentLine.FINDSET(TRUE)) THEN
          REPEAT
            lConsignmentLine.SetStoreAllocationSender(DATABASE::"Purchase Summary Line");
            lConsignmentLine.VALIDATE("Store Allocation Code", Rec."Store Allocation Code");
            lConsignmentLine.SetStoreAllocationSender(0);
            lConsignmentLine.MODIFY(TRUE);
          UNTIL (lConsignmentLine.NEXT() = 0);
        UNTIL (lPurchaseLine.NEXT() = 0);
      END;
    END;

    PROCEDURE ShowStoreAllocations@1000000004() : Boolean;
    VAR
      lPurchaseLine@1000000001 : Record 39;
      lStoreAllocationManagement@1000000000 : Codeunit 9087015;
      lResult@1000000002 : Boolean;
    BEGIN
      //DOC NS2015.1 - Showing store allocations
      //  <- TRUE = Store allocation code has been changed, FALSE = Not

      lResult := FALSE;

      Rec.TESTFIELD(Type, Rec.Type::Item);
      Rec.TESTFIELD("No.");

      IF (lStoreAllocationManagement.VerifyStoreAllocationCode(Rec."Store Allocation Code")) THEN
      BEGIN
        Rec.VALIDATE("Store Allocation Code");
        COMMIT;
        lResult := TRUE;
      END;

      Rec.TESTFIELD("Store Allocation Code");

      lPurchaseLine.RESET();
      lPurchaseLine.SETRANGE("Document Type", Rec."Document Type");
      lPurchaseLine.SETRANGE("Document No.", Rec."Document No.");
      lPurchaseLine.SETRANGE(Type, lPurchaseLine.Type::Item);
      lPurchaseLine.SETRANGE("No.", Rec."No.");

      lStoreAllocationManagement.ShowStoreAllocationMatrix(Rec."Store Allocation Code", DATABASE::"Purchase Line", lPurchaseLine.GETVIEW(FALSE),
        lPurchaseLine.FIELDNO("No."), lPurchaseLine.FIELDNO("Variant Code"), lPurchaseLine.FIELDNO(Description),
        lPurchaseLine.FIELDNO(Quantity), lPurchaseLine.FIELDNO("Quantity Allocated"), 0, FALSE);

      EXIT(lResult);
    END;

    PROCEDURE ShowMatrix@1000000005();
    VAR
      lPurchaseMatrix@1000000000 : Page 9087071;
    BEGIN
      //DOC NS2015.1 - Showing matrix

      PurchaseHeader.GET(Rec."Document Type", Rec."Document No.");

      CLEAR(lPurchaseMatrix);
      lPurchaseMatrix.Initialise(Rec, PurchaseHeader.Status <> PurchaseHeader.Status::Open);
      lPurchaseMatrix.RUNMODAL();
    END;

    BEGIN
    {
      //DOC NS2015.1  JH 21/03/2014 - Created
      //DOC NS2015.3  JH 30/07/2014 - Bugfixing
      //DOC NS2015.4  PC 12/02/2014 - Changed No. relation to filter Items based on Style No.
      //DOC NS2015.6  JH 09/04/2015 - "Stock Allocation Code" renamed to "Store Allocation Code"
      //DOC NS2016.16 JH 07/09/2016 - nSemble 2016
      //DOC NS2016.16 PCM 27/09/2016 - "Vendor Item No." added. Insert "Vendor Item" records.
    }
    END.
  }
}

