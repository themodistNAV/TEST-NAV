OBJECT Table 9657 Custom Report Selection
{
  OBJECT-PROPERTIES
  {
    Date=23/03/16;
    Time=12:00:00 PM;
    Version List=NAVW19.00.00.45480;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Custom Report Selection;
               ENG=Custom Report Selection];
  }
  FIELDS
  {
    { 1   ;   ;Source Type         ;Integer       ;CaptionML=[ENU=Source Type;
                                                              ENG=Source Type] }
    { 2   ;   ;Source No.          ;Code20        ;TableRelation=IF (Source Type=CONST(18)) Customer.No.
                                                                 ELSE IF (Source Type=CONST(23)) Vendor.No.;
                                                   CaptionML=[ENU=Source No.;
                                                              ENG=Source No.] }
    { 3   ;   ;Usage               ;Option        ;CaptionML=[ENU=Usage;
                                                              ENG=Usage];
                                                   OptionCaptionML=[ENU=S.Quote,S.Order,S.Invoice,S.Cr.Memo,S.Test,P.Quote,P.Order,P.Invoice,P.Cr.Memo,P.Receipt,P.Ret.Shpt.,P.Test,B.Stmt,B.Recon.Test,B.Check,Reminder,Fin.Charge,Rem.Test,F.C.Test,Prod. Order,S.Blanket,P.Blanket,M1,M2,M3,M4,Inv1,Inv2,Inv3,SM.Quote,SM.Order,SM.Invoice,SM.Credit Memo,SM.Contract Quote,SM.Contract,SM.Test,S.Return,P.Return,S.Shipment,S.Ret.Rcpt.,S.Work Order,Invt. Period Test,SM.Shipment,S.Test Prepmt.,P.Test Prepmt.,S.Arch. Quote,S.Arch. Order,P.Arch. Quote,P.Arch. Order,S. Arch. Return Order,P. Arch. Return Order,Asm. Order,P.Assembly Order,S.Order Pick Instruction,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,C.Statement,V.Remittance;
                                                                    ENG=S.Quote,S.Order,S.Invoice,S.Cr.Memo,S.Test,P.Quote,P.Order,P.Invoice,P.Cr.Memo,P.Receipt,P.Ret.Shpt.,P.Test,B.Stmt,B.Recon.Test,B.Check,Reminder,Fin.Charge,Rem.Test,F.C.Test,Prod. Order,S.Blanket,P.Blanket,M1,M2,M3,M4,Inv1,Inv2,Inv3,SM.Quote,SM.Order,SM.Invoice,SM.Credit Memo,SM.Contract Quote,SM.Contract,SM.Test,S.Return,P.Return,S.Shipment,S.Ret.Rcpt.,S.Work Order,Invt. Period Test,SM.Shipment,S.Test Prepmt.,P.Test Prepmt.,S.Arch. Quote,S.Arch. Order,P.Arch. Quote,P.Arch. Order,S. Arch. Return Order,P. Arch. Return Order,Asm. Order,P.Assembly Order,S.Order Pick Instruction,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,C.Statement,V.Remittance];
                                                   OptionString=S.Quote,S.Order,S.Invoice,S.Cr.Memo,S.Test,P.Quote,P.Order,P.Invoice,P.Cr.Memo,P.Receipt,P.Ret.Shpt.,P.Test,B.Stmt,B.Recon.Test,B.Check,Reminder,Fin.Charge,Rem.Test,F.C.Test,Prod. Order,S.Blanket,P.Blanket,M1,M2,M3,M4,Inv1,Inv2,Inv3,SM.Quote,SM.Order,SM.Invoice,SM.Credit Memo,SM.Contract Quote,SM.Contract,SM.Test,S.Return,P.Return,S.Shipment,S.Ret.Rcpt.,S.Work Order,Invt. Period Test,SM.Shipment,S.Test Prepmt.,P.Test Prepmt.,S.Arch. Quote,S.Arch. Order,P.Arch. Quote,P.Arch. Order,S. Arch. Return Order,P. Arch. Return Order,Asm. Order,P.Assembly Order,S.Order Pick Instruction,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,C.Statement,V.Remittance }
    { 4   ;   ;Sequence            ;Integer       ;AutoIncrement=Yes;
                                                   CaptionML=[ENU=Sequence;
                                                              ENG=Sequence] }
    { 5   ;   ;Report ID           ;Integer       ;TableRelation=AllObjWithCaption."Object ID" WHERE (Object Type=CONST(Report));
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Report Caption");
                                                              END;

                                                   CaptionML=[ENU=Report ID;
                                                              ENG=Report ID] }
    { 6   ;   ;Report Caption      ;Text250       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObjWithCaption."Object Caption" WHERE (Object Type=CONST(Report),
                                                                                                                Object ID=FIELD(Report ID)));
                                                   CaptionML=[ENU=Report Caption;
                                                              ENG=Report Caption];
                                                   Editable=No }
    { 7   ;   ;Custom Report Layout ID;Integer    ;TableRelation="Custom Report Layout".ID WHERE (ID=FIELD(Custom Report Layout ID));
                                                   CaptionML=[ENU=Custom Report Layout ID;
                                                              ENG=Custom Report Layout ID] }
    { 8   ;   ;Custom Report Description;Text250  ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Custom Report Layout".Description WHERE (ID=FIELD(Custom Report Layout ID)));
                                                   OnLookup=VAR
                                                              CustomReportLayout@1001 : Record 9650;
                                                              CustomReportLayouts@1000 : Page 9650;
                                                            BEGIN
                                                              CustomReportLayout.SETCURRENTKEY("Report ID","Company Name",Type);
                                                              CustomReportLayout.SETRANGE("Report ID","Report ID");
                                                              CustomReportLayout.SETFILTER("Company Name",'%1|%2','',COMPANYNAME);
                                                              CustomReportLayouts.SETTABLEVIEW(CustomReportLayout);
                                                              IF CustomReportLayouts.RUNMODAL = ACTION::OK THEN BEGIN
                                                                CustomReportLayouts.GETRECORD(CustomReportLayout);
                                                                "Custom Report Layout ID" := CustomReportLayout.ID;
                                                                MODIFY;
                                                                CALCFIELDS("Custom Report Description");
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Custom Layout Description;
                                                              ENG=Custom Layout Description];
                                                   Editable=No }
    { 9   ;   ;Send To Email       ;Text200       ;CaptionML=[ENU=Send To Email;
                                                              ENG=Send To Email] }
  }
  KEYS
  {
    {    ;Source Type,Source No.,Usage,Sequence   ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      CustomReportSelection2@1000 : Record 9657;
      UnsupportedReportErr@1002 : TextConst 'ENU=Unsupported Custom Report.;ENG=Unsupported Custom Report.';

    PROCEDURE PrintCustomReports@2(HeaderDoc@1000 : Variant;SendAsEmail@1001 : Boolean;ShowRequestPage@1013 : Boolean) : Integer;
    VAR
      SalesHeader@1003 : Record 36;
      SalesInvoiceHeader@1004 : Record 112;
      SalesCrMemoHeader@1005 : Record 114;
      CustomReportLayout@1008 : Record 9650;
      ReportLayoutSelection@1011 : Record 9651;
      FileManagement@1010 : Codeunit 419;
      DocumentRecordRef@1002 : RecordRef;
      AttachmentFilePath@1009 : Text;
      CustomLayoutPresent@1014 : Boolean;
    BEGIN
      DocumentRecordRef.GETTABLE(HeaderDoc);
      CASE DocumentRecordRef.NUMBER OF
        DATABASE::"Sales Invoice Header":
          BEGIN
            SalesInvoiceHeader := HeaderDoc;
            SalesInvoiceHeader.SETRANGE("No.",SalesInvoiceHeader."No.");
            SalesInvoiceHeader.GET(SalesInvoiceHeader."No.");
            SetCustomReportSelectionRange(
              CustomReportSelection2,DATABASE::Customer,SalesInvoiceHeader."Bill-to Customer No.",
              CustomReportSelection2.Usage::"S.Invoice");
            SalesHeader."Document Type" := SalesHeader."Document Type"::Invoice;
          END;
        DATABASE::"Sales Cr.Memo Header":
          BEGIN
            SalesCrMemoHeader := HeaderDoc;
            SalesCrMemoHeader.SETRANGE("No.",SalesCrMemoHeader."No.");
            SalesCrMemoHeader.GET(SalesCrMemoHeader."No.");
            SetCustomReportSelectionRange(
              CustomReportSelection2,DATABASE::Customer,SalesCrMemoHeader."Bill-to Customer No.",
              CustomReportSelection2.Usage::"S.Cr.Memo");
            SalesHeader."Document Type" := SalesHeader."Document Type"::"Credit Memo";
          END;
        DATABASE::"Sales Header":
          BEGIN
            SalesHeader := HeaderDoc;
            SalesHeader.SETRANGE("No.",SalesHeader."No.");
            CASE SalesHeader."Document Type" OF
              SalesHeader."Document Type"::Quote:
                SetCustomReportSelectionRange(
                  CustomReportSelection2,DATABASE::Customer,SalesHeader."Bill-to Customer No.",
                  CustomReportSelection2.Usage::"S.Quote");
              SalesHeader."Document Type"::Order:
                SetCustomReportSelectionRange(
                  CustomReportSelection2,DATABASE::Customer,SalesHeader."Bill-to Customer No.",
                  CustomReportSelection2.Usage::"S.Order");
              SalesHeader."Document Type"::Invoice:
                BEGIN
                  IF SalesHeader."Last Posting No." = '' THEN
                    SalesInvoiceHeader."No." := SalesHeader."No."
                  ELSE
                    SalesInvoiceHeader."No." := SalesHeader."Last Posting No.";
                  SalesInvoiceHeader.SETRECFILTER;
                  SetCustomReportSelectionRange(
                    CustomReportSelection2,DATABASE::Customer,SalesHeader."Bill-to Customer No.",
                    CustomReportSelection2.Usage::"S.Invoice");
                END;
              SalesHeader."Document Type"::"Credit Memo":
                BEGIN
                  IF SalesHeader."Last Posting No." = '' THEN
                    SalesCrMemoHeader."No." := SalesHeader."No."
                  ELSE
                    SalesCrMemoHeader."No." := SalesHeader."Last Posting No.";
                  SalesCrMemoHeader.SETRECFILTER;
                  SetCustomReportSelectionRange(
                    CustomReportSelection2,DATABASE::Customer,SalesHeader."Bill-to Customer No.",
                    CustomReportSelection2.Usage::"S.Cr.Memo");
                END;
            END
          END;
        DATABASE::"Service Invoice Header":
          EXIT(0);
        DATABASE::"Service Cr.Memo Header":
          EXIT(0);
        DATABASE::"Service Header":
          EXIT(0);
        ELSE
          ERROR(UnsupportedReportErr);
      END;

      IF CustomReportSelection2.FIND('-') THEN BEGIN
        REPEAT
          CustomLayoutPresent := CustomReportLayout.GET(CustomReportSelection2."Custom Report Layout ID");
          IF CustomLayoutPresent THEN
            ReportLayoutSelection.SetTempLayoutSelected(CustomReportLayout.ID);

          IF SendAsEmail THEN BEGIN
            AttachmentFilePath := COPYSTR(FileManagement.ServerTempFileName('pdf'),1,250);

            GeneratePDF(SalesHeader,SalesInvoiceHeader,SalesCrMemoHeader,COPYSTR(AttachmentFilePath,1,250));

            IF CustomLayoutPresent THEN
              ReportLayoutSelection.SetTempLayoutSelected(0);

            IF NOT EXISTS(AttachmentFilePath) THEN
              ERROR(AttachmentFilePath);

            EmailPDF(SalesHeader,SalesInvoiceHeader,SalesCrMemoHeader,CustomReportSelection2,COPYSTR(AttachmentFilePath,1,250));
          END ELSE BEGIN
            CASE SalesHeader."Document Type" OF
              SalesHeader."Document Type"::Invoice:
                REPORT.RUN(CustomReportSelection2."Report ID",ShowRequestPage,FALSE,SalesInvoiceHeader);
              SalesHeader."Document Type"::"Credit Memo":
                REPORT.RUN(CustomReportSelection2."Report ID",ShowRequestPage,FALSE,SalesCrMemoHeader);
              ELSE
                REPORT.RUNMODAL(CustomReportSelection2."Report ID",TRUE,FALSE,SalesHeader);
            END;

            IF CustomLayoutPresent THEN
              ReportLayoutSelection.SetTempLayoutSelected(0);
          END;
        UNTIL CustomReportSelection2.NEXT = 0;

        EXIT(CustomReportSelection2."Report ID");
      END;
    END;

    LOCAL PROCEDURE SetCustomReportSelectionRange@12(VAR CustomReportSelection@1000 : Record 9657;SourceType@1003 : Integer;BillToCustomer@1001 : Code[20];NewUsage@1002 : 'S.Quote,S.Order,S.Invoice,S.Cr.Memo,S.Test,P.Quote,P.Order,P.Invoice,P.Cr.Memo,P.Receipt,P.Ret.Shpt.,P.Test,B.Stmt,B.Recon.Test,B.Check,Reminder,Fin.Charge,Rem.Test,F.C.Test,Prod. Order,S.Blanket,P.Blanket,M1,M2,M3,M4,Inv1,Inv2,Inv3,SM.Quote,SM.Order,SM.Invoice,SM.Credit Memo,SM.Contract Quote,SM.Contract,SM.Test,S.Return,P.Return,S.Shipment,S.Ret.Rcpt.,S.Work Order,Invt. Period Test,SM.Shipment,S.Test Prepmt.,P.Test Prepmt.,S.Arch. Quote,S.Arch. Order,P.Arch. Quote,P.Arch. Order,S. Arch. Return Order,P. Arch. Return Order,Asm. Order,P.Assembly Order,S.Order Pick Instruction,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,C.Statement,V.Remittance');
    BEGIN
      CustomReportSelection.SETRANGE("Source Type",SourceType);
      CustomReportSelection.SETRANGE("Source No.",BillToCustomer);
      CustomReportSelection.SETRANGE(Usage,NewUsage);
    END;

    LOCAL PROCEDURE GeneratePDF@1(VAR SalesHeader@1000 : Record 36;VAR SalesInvoiceHeader@1001 : Record 112;VAR SalesCrMemoHeader@1002 : Record 114;AttachmentFilePath@1003 : Text[250]);
    BEGIN
      CASE SalesHeader."Document Type" OF
        SalesHeader."Document Type"::Invoice:
          REPORT.SAVEASPDF(CustomReportSelection2."Report ID",AttachmentFilePath,SalesInvoiceHeader);
        SalesHeader."Document Type"::"Credit Memo":
          REPORT.SAVEASPDF(CustomReportSelection2."Report ID",AttachmentFilePath,SalesCrMemoHeader);
        ELSE
          REPORT.SAVEASPDF(CustomReportSelection2."Report ID",AttachmentFilePath,SalesHeader);
      END;
    END;

    LOCAL PROCEDURE EmailPDF@5(VAR SalesHeader@1000 : Record 36;VAR SalesInvoiceHeader@1001 : Record 112;VAR SalesCrMemoHeader@1002 : Record 114;VAR CustomReportSelection@1003 : Record 9657;AttachmentFilePath@1005 : Text[250]);
    VAR
      DocumentMailing@1004 : Codeunit 260;
    BEGIN
      CASE SalesHeader."Document Type" OF
        SalesHeader."Document Type"::Invoice:
          DocumentMailing.EmailFileFromSalesInvoiceHeader(SalesInvoiceHeader,AttachmentFilePath,CustomReportSelection);
        SalesHeader."Document Type"::"Credit Memo":
          DocumentMailing.EmailFileFromSalesCrMemoHeader(SalesCrMemoHeader,AttachmentFilePath,CustomReportSelection);
        ELSE
          DocumentMailing.EmailFileFromSalesHeader(SalesHeader,AttachmentFilePath,CustomReportSelection);
      END;
    END;

    PROCEDURE InitUsage@3();
    BEGIN
      Usage := xRec.Usage;
    END;

    BEGIN
    END.
  }
}

