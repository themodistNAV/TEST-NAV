OBJECT Table 9087031 Sales Summary Line
{
  OBJECT-PROPERTIES
  {
    Date=05/10/16;
    Time=12:28:46 PM;
    Version List=NS2016.16;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               Rec.TESTFIELD("Document No.");
             END;

    OnDelete=VAR
               PurchLine@1000000000 : Record 39;
             BEGIN
               SalesLine.RESET();
               SalesLine.SETRANGE("Document Type", "Document Type");
               SalesLine.SETRANGE("Document No.", "Document No.");
               SalesLine.SETRANGE(Type, Type);
               SalesLine.SETRANGE("No.", "No.");
               SalesLine.DELETEALL(TRUE);
             END;

    CaptionML=[ENU=Sales Summary Line;
               ENG=Sales Summary Line];
    LookupPageID=Page9087057;
    DrillDownPageID=Page9087057;
  }
  FIELDS
  {
    { 1   ;   ;Document Type       ;Option        ;CaptionML=[ENU=Document Type;
                                                              ENG=Document Type];
                                                   OptionCaptionML=[ENU=Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order;
                                                                    ENG=Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order];
                                                   OptionString=Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order }
    { 2   ;   ;Document No.        ;Code20        ;TableRelation="Sales Header".No. WHERE (Document Type=FIELD(Document Type));
                                                   CaptionML=[ENU=Document No.;
                                                              ENG=Document No.] }
    { 3   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              ENG=Line No.] }
    { 10  ;   ;Type                ;Option        ;InitValue=Item;
                                                   OnValidate=BEGIN
                                                                IF (Rec.Type <> xRec.Type) THEN
                                                                BEGIN
                                                                  Rec.VALIDATE("No.", '');
                                                                  Rec.VALIDATE("Style No.", '');
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Type;
                                                              ENG=Type];
                                                   OptionCaptionML=[ENU=" ,,Item";
                                                                    ENG=" ,,Item"];
                                                   OptionString=[ ,,Item] }
    { 11  ;   ;No.                 ;Code20        ;TableRelation=IF (Type=CONST(" ")) "Standard Text"
                                                                 ELSE IF (Type=CONST(Item),
                                                                          Style No.=FILTER('')) Item
                                                                          ELSE IF (Type=CONST(Item),
                                                                                   Style No.=FILTER(<>'')) Item WHERE (Style No.=FIELD(Style No.));
                                                   OnValidate=VAR
                                                                ICPartner@1000 : Record 413;
                                                                ItemCrossReference@1001 : Record 5717;
                                                                PrepmtMgt@1002 : Codeunit 441;
                                                              BEGIN
                                                                IF (Rec."No." <> xRec."No.") THEN
                                                                BEGIN
                                                                  NsembleSetup.VerifyAndGet();
                                                                  DeleteSalesLines();
                                                                  IF (NsembleSetup."Pre-Create Sales Sizes") THEN
                                                                    CreateSalesLines();
                                                                END;

                                                                Rec.VALIDATE(Description, '');
                                                                Rec.VALIDATE("Description 2", '');
                                                                IF (Rec."No." <> '') THEN
                                                                  CASE Rec.Type OF
                                                                    Rec.Type::" ":
                                                                      BEGIN
                                                                        StandardText.GET(Rec."No.");
                                                                        Rec.VALIDATE(Description, StandardText.Description);
                                                                      END;
                                                                    Rec.Type::Item:
                                                                      BEGIN
                                                                        Item.GET(Rec."No.");
                                                                        Rec.VALIDATE(Description, Item.Description);
                                                                        Rec.VALIDATE("Description 2", Item."Description 2");
                                                                        Rec.VALIDATE("Style No.", Item."Style No.");
                                                                      END;
                                                                  END;
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              ENG=No.] }
    { 20  ;   ;Style No.           ;Code20        ;TableRelation=Style;
                                                   CaptionML=[ENU=Style No.;
                                                              ENG=Style No.] }
    { 30  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              ENG=Description] }
    { 31  ;   ;Description 2       ;Text50        ;CaptionML=[ENU=Description 2;
                                                              ENG=Description 2] }
    { 40  ;   ;No. of Lines        ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Sales Line" WHERE (Document Type=FIELD(Document Type),
                                                                                         Document No.=FIELD(Document No.),
                                                                                         Type=FIELD(Type),
                                                                                         No.=FIELD(No.)));
                                                   CaptionML=[ENU=No. of Lines;
                                                              ENG=No. of Lines];
                                                   Editable=No }
    { 50  ;   ;Total Quantity      ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Sales Line".Quantity WHERE (Document Type=FIELD(Document Type),
                                                                                                Document No.=FIELD(Document No.),
                                                                                                Type=FIELD(Type),
                                                                                                No.=FIELD(No.)));
                                                   CaptionML=[ENU=Total Quantity;
                                                              ENG=Total Quantity];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 51  ;   ;Total Amount        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Sales Line"."Line Amount" WHERE (Document Type=FIELD(Document Type),
                                                                                                     Document No.=FIELD(Document No.),
                                                                                                     Type=FIELD(Type),
                                                                                                     No.=FIELD(No.)));
                                                   CaptionML=[ENU=Total Amount;
                                                              ENG=Total Amount];
                                                   Editable=No }
    { 60  ;   ;Store Allocation Code;Code20       ;OnValidate=BEGIN
                                                                IF (Rec."Store Allocation Code" <> xRec."Store Allocation Code") THEN
                                                                  UpdateSalesLines(Rec.FIELDNO("Store Allocation Code"));
                                                              END;

                                                   OnLookup=BEGIN
                                                              ShowStoreAllocations();
                                                            END;

                                                   CaptionML=[ENU=Store Allocation Code;
                                                              ENG=Store Allocation Code] }
    { 61  ;   ;Quantity Allocated  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Store Allocation Line".Quantity WHERE (Store Allocation Code=FIELD(Store Allocation Code),
                                                                                                           Item No.=FIELD(No.),
                                                                                                           Variant Code=FIELD(Variant Filter)));
                                                   OnLookup=BEGIN
                                                              ShowStoreAllocations();
                                                            END;

                                                   CaptionML=[ENU=Quantity Allocated;
                                                              ENG=Quantity Allocated];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 70  ;   ;Variant Filter      ;Code10        ;FieldClass=FlowFilter;
                                                   TableRelation="Item Variant".Code WHERE (Item No.=FIELD(No.));
                                                   CaptionML=[ENU=Variant Filter;
                                                              ENG=Variant Filter] }
    { 80  ;   ;Sales Line Quantity ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Sales Line".Quantity WHERE (Document Type=FIELD(Document Type),
                                                                                                Document No.=FIELD(Document No.),
                                                                                                Type=FIELD(Type),
                                                                                                No.=FIELD(No.),
                                                                                                Variant Code=FIELD(Variant Filter)));
                                                   CaptionML=[ENU=Sales Line Quantity;
                                                              ENG=Sales Line Quantity];
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Document Type,Document No.,Line No.      }
    {    ;Document Type,Document No.,Type,No.     ;Clustered=Yes }
    {    ;Store Allocation Code,Type,No.           }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      NsembleSetup@1000000007 : Record 9087000;
      SalesHeader@1000000006 : Record 36;
      SalesLine@1000000000 : Record 37;
      Item@1000000002 : Record 27;
      ItemVariant@1000000001 : Record 5401;
      errCannotRename@1000000003 : TextConst 'ENU=errCannotRename;ENG=errCannotRename';
      StandardText@1000000004 : Record 7;
      StoreAllocationSender@1000000005 : Integer;

    PROCEDURE CreateSalesLines@1000000000();
    VAR
      lLineNo@1000000000 : Integer;
      lUseVariants@1000000001 : Boolean;
    BEGIN
      //DOC NS2015.1 - Creating sales lines

      IF ((Rec."Document No." <> '') AND (Rec."No." <> '')) THEN
      BEGIN
        lUseVariants := FALSE;
        IF (Rec.Type = Rec.Type::Item) THEN
        BEGIN
          ItemVariant.RESET();
          ItemVariant.SETRANGE("Item No.", Rec."No.");
          lUseVariants := ItemVariant.FINDSET();
          IF (lUseVariants) THEN
          REPEAT
            CreateSalesLine(lLineNo, '', ItemVariant.Code);
          UNTIL (ItemVariant.NEXT() = 0);
        END;

        IF ( NOT (lUseVariants)) THEN
          CreateSalesLine(lLineNo, '', '');
      END;
    END;

    PROCEDURE CreateSalesLine@1000000002(VAR pLineNo@1000000000 : Integer;pItemNo@1000000002 : Code[20];pVariantCode@1000000001 : Code[10]);
    BEGIN
      //DOC NS2015.1 - Creating one sales line
      //  <> pLineNo: Source / destination line number
      //  -> pItemNo: Item no.
      //  -> pVariantCode: Variant code

      IF (pLineNo = 0) THEN
      BEGIN
        SalesLine.RESET();
        SalesLine.SETRANGE("Document Type", "Document Type");
        SalesLine.SETRANGE("Document No.", "Document No.");
        IF (SalesLine.FINDLAST()) THEN
          pLineNo := SalesLine."Line No."
        ELSE
          pLineNo := 0;
      END;
      pLineNo += 10000;

      IF (pItemNo = '') THEN
        pItemNo := Rec."No.";

      SalesLine.INIT();
      SalesLine."Document Type" := "Document Type";
      SalesLine.VALIDATE("Document No.", "Document No.");
      SalesLine."Line No." := pLineNo;
      SalesLine.INSERT(TRUE);
      SalesLine.VALIDATE(Type, SalesLine.Type::Item);
      SalesLine.VALIDATE("No.", pItemNo);
      IF (pVariantCode <> '') THEN
        SalesLine.VALIDATE("Variant Code", pVariantCode);
      SalesLine.MODIFY(TRUE);
    END;

    PROCEDURE CreateSalesLineAdv@1000000006(VAR pLineNo@1000000002 : Integer;pItemNo@1000000001 : Code[20];pVariantCode@1000000000 : Code[10];VAR pSalesLine@1000000003 : Record 37);
    BEGIN
      //DOC NS2015.1 - Creating one sales line (advanced version)
      //  <> pLineNo: Source / destination line number
      //  -> pItemNo: Item no.
      //  -> pVariantCode: Variant code
      //  <> pSalesLine: Sales line created

      CreateSalesLine(pLineNo, pItemNo, pVariantCode);
      pSalesLine := SalesLine;
    END;

    PROCEDURE DeleteSalesLines@1000000001();
    BEGIN
      //DOC NS2015.1 - Deleting sales lines

      IF (xRec."No." <> '') THEN
      BEGIN
        SalesLine.RESET();
        SalesLine.SETRANGE("Document Type", Rec."Document Type");
        SalesLine.SETRANGE("Document No.", Rec."Document No.");
        SalesLine.SETRANGE(Type, xRec.Type);
        SalesLine.SETRANGE("No.", xRec."No.");
        SalesLine.DELETEALL(TRUE);
      END;
    END;

    PROCEDURE SetStoreAllocationSender@1000000008(pStoreAllocationSender@1000000000 : Integer);
    BEGIN
      //DOC NS2015.1 - Setting store allocation sender (table ID)
      //  -> pStoreAllocationSender: The sender

      StoreAllocationSender := pStoreAllocationSender;
    END;

    PROCEDURE ShowStoreAllocations@1000000004() : Boolean;
    VAR
      lSalesLine@1000000001 : Record 37;
      lStoreAllocationManagement@1000000000 : Codeunit 9087015;
      lResult@1000000002 : Boolean;
    BEGIN
      //DOC NS2015.1 - Showing store allocations
      //  <- TRUE = Store allocation updated, FALSE = Not

      lResult := FALSE;

      Rec.TESTFIELD(Type, Rec.Type::Item);
      Rec.TESTFIELD("No.");

      IF (lStoreAllocationManagement.VerifyStoreAllocationCode(Rec."Store Allocation Code")) THEN
      BEGIN
        Rec.VALIDATE("Store Allocation Code");
        COMMIT;
        lResult := TRUE;
      END;

      Rec.TESTFIELD("Store Allocation Code");

      lSalesLine.RESET();
      lSalesLine.SETRANGE("Document Type", Rec."Document Type");
      lSalesLine.SETRANGE("Document No.", Rec."Document No.");
      lSalesLine.SETRANGE(Type, lSalesLine.Type::Item);
      lSalesLine.SETRANGE("No.", Rec."No.");

      lStoreAllocationManagement.ShowStoreAllocationMatrix(Rec."Store Allocation Code", DATABASE::"Sales Line", lSalesLine.GETVIEW(FALSE),
        lSalesLine.FIELDNO("No."), lSalesLine.FIELDNO("Variant Code"), lSalesLine.FIELDNO(Description), lSalesLine.FIELDNO(Quantity),
        lSalesLine.FIELDNO("Quantity Allocated"), 0, FALSE);

      EXIT(lResult);
    END;

    PROCEDURE UpdateSalesLines@1000000007(pFieldId@1000000003 : Integer);
    VAR
      lReqSummaryLine@1000000000 : Record 9087021;
      lPurchaseLine@1000000002 : Record 39;
      lConsignmentLine@1000000001 : Record 9062448;
    BEGIN
      //DOC NS2015.1 - Updating sales lines for specified field ID
      //  -> pFieldId: The field ID

      SalesLine.RESET();
      SalesLine.SETRANGE("Document Type", Rec."Document Type");
      SalesLine.SETRANGE("Document No.", Rec."Document No.");
      SalesLine.SETRANGE(Type, SalesLine.Type::Item);
      SalesLine.SETRANGE("No.", Rec."No.");
      IF (SalesLine.FINDSET(TRUE)) THEN
      REPEAT
        CASE (pFieldId) OF
          Rec.FIELDNO("Store Allocation Code"):
            SalesLine.VALIDATE("Store Allocation Code", Rec."Store Allocation Code");
        END;
        SalesLine.MODIFY(TRUE);
      UNTIL (SalesLine.NEXT() = 0);
    END;

    PROCEDURE ShowMatrix@1000000003();
    VAR
      lSalesMatrix@1000000000 : Page 9087069;
    BEGIN
      //DOC NS2015.1 - Showing matrix

      SalesHeader.GET(Rec."Document Type", Rec."Document No.");

      CLEAR(lSalesMatrix);
      lSalesMatrix.Initialise(Rec, SalesHeader.Status <> SalesHeader.Status::Open);
      lSalesMatrix.RUNMODAL();
    END;

    BEGIN
    {
      //DOC NS2015.1  JH 19/03/2014 - Created
      //DOC NS2015.4  PC 12/02/2014 - Changed No. relation to filter Items based on Style No.
      //DOC NS2015.6  JH 09/04/2015 - "Stock Allocations" rename to "Store Allocations"
      //DOC NS2016.16 JH 07/09/2016 - nSemble 2016
    }
    END.
  }
}

