OBJECT Report 10551 Delete BACS Ledger Entries
{
  OBJECT-PROPERTIES
  {
    Date=09/09/14;
    Time=12:00:00 PM;
    Version List=NAVGB8.00;
  }
  PROPERTIES
  {
    Permissions=TableData 45=rimd,
                TableData 87=rimd,
                TableData 272=rimd,
                TableData 10550=rimd;
    CaptionML=[ENU=Delete BACS Ledger Entries;
               ENG=Delete BACS Ledger Entries];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  BACSLedgEntryFilter := COPYSTR("BACS Ledger Entry".GETFILTERS,1,MAXSTRLEN(DateComprReg.Filter));
                END;

  }
  DATASET
  {
    { 2738;    ;DataItem;BACS Ledger Entry   ;
               DataItemTable=Table10550;
               DataItemTableView=SORTING(Bank Account No.,BACS Date)
                                 WHERE(Entry Status=FILTER(<>Exported));
               OnPreDataItem=BEGIN
                               IF NOT
                                  CONFIRM(Text1040010,FALSE)
                               THEN
                                 CurrReport.BREAK;

                               IF EntrdDateComprJnl."Ending Date" = 0D THEN
                                 ERROR(STRSUBSTNO(Text1040011,EntrdDateComprJnl.FIELDCAPTION("Ending Date")));

                               Window.OPEN(
                                 Text1040012 +
                                 Text1040013 +
                                 Text1040014);

                               SourceCodeSetup.GET;
                               SourceCodeSetup.TESTFIELD("Compress BACS Ledger");

                               BACSLedgEntry2.LOCKTABLE;
                               IF BACSLedgEntry3.FINDLAST THEN;
                               DateComprReg.LOCKTABLE;

                               SETRANGE("BACS Date",EntrdDateComprJnl."Starting Date",EntrdDateComprJnl."Ending Date");
                               DateComprMgt.GetDateFilter(EntrdDateComprJnl."Ending Date",EntrdDateComprJnl,TRUE);

                               InitRegister;
                             END;

               OnAfterGetRecord=BEGIN
                                  BACSLedgEntry2 := "BACS Ledger Entry";
                                  WITH BACSLedgEntry2 DO BEGIN
                                    SETCURRENTKEY("Bank Account No.","BACS Date");
                                    COPYFILTERS("BACS Ledger Entry");

                                    Window.UPDATE(1,"Bank Account No.");

                                    REPEAT
                                      DELETE;
                                      DateComprReg."No. Records Deleted" := DateComprReg."No. Records Deleted" + 1;
                                      Window.UPDATE(4,DateComprReg."No. Records Deleted");
                                    UNTIL NEXT = 0;
                                  END;

                                  IF DateComprReg."No. Records Deleted" >= NoOfDeleted + 10 THEN BEGIN
                                    NoOfDeleted := DateComprReg."No. Records Deleted";
                                    InsertRegisters(DateComprReg);
                                  END;
                                END;

               OnPostDataItem=BEGIN
                                IF DateComprReg."No. Records Deleted" > NoOfDeleted THEN
                                  InsertRegisters(DateComprReg);
                                Window.CLOSE;
                              END;

               ReqFilterFields=Bank Account No. }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   IF EntrdDateComprJnl."Ending Date" = 0D THEN
                     EntrdDateComprJnl."Ending Date" := TODAY;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ENG=Options] }

      { 1   ;2   ;Field     ;
                  CaptionML=[ENU=Starting Date;
                             ENG=Starting Date];
                  SourceExpr=EntrdDateComprJnl."Starting Date" }

      { 2   ;2   ;Field     ;
                  CaptionML=[ENU=Ending Date;
                             ENG=Ending Date];
                  SourceExpr=EntrdDateComprJnl."Ending Date" }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      SourceCodeSetup@1040000 : Record 242;
      EntrdDateComprJnl@1040001 : Record 87;
      DateComprReg@1040002 : Record 87;
      BACSLedgEntry2@1040003 : Record 10550;
      BACSLedgEntry3@1040004 : Record 10550;
      DateComprMgt@1040005 : Codeunit 356;
      Window@1040006 : Dialog;
      BACSLedgEntryFilter@1040007 : Text[250];
      NoOfDeleted@1040008 : Integer;
      RegExists@1040009 : Boolean;
      Text1040010@1040010 : TextConst 'ENU=This batch job deletes entries. Therefore, it is important that you make a backup of the database before you run the batch job.\\Do you want to date compress the entries?;ENG=This batch job deletes entries. Therefore, it is important that you make a backup of the database before you run the batch job.\\Do you want to date compress the entries?';
      Text1040011@1040011 : TextConst 'ENU=%1 must be specified.;ENG=%1 must be specified.';
      Text1040012@1040012 : TextConst 'ENU=Date compressing BACS ledger entries...\\;ENG=Date compressing BACS ledger entries...\\';
      Text1040013@1040013 : TextConst 'ENU=Bank Account No.       #1##########\;ENG=Bank Account No.       #1##########\';
      Text1040014@1040014 : TextConst 'ENU=No. of entries deleted #4######;ENG=No. of entries deleted #4######';

    LOCAL PROCEDURE InitRegister@4();
    BEGIN
      IF DateComprReg.FINDLAST THEN;
      DateComprReg.INIT;
      DateComprReg."No." := DateComprReg."No." + 1;
      DateComprReg."Table ID" := DATABASE::"BACS Ledger Entry";
      DateComprReg."Creation Date" := TODAY;
      DateComprReg."Starting Date" := EntrdDateComprJnl."Starting Date";
      DateComprReg."Ending Date" := EntrdDateComprJnl."Ending Date";
      DateComprReg."Period Length" := DateComprReg."Period Length"::Day;
      DateComprReg."Retain Field Contents" := 'All records deleted';
      DateComprReg.Filter := BACSLedgEntryFilter;
      DateComprReg."Register No." := 0;
      DateComprReg."Source Code" := SourceCodeSetup."Compress BACS Ledger";
      DateComprReg."User ID" := USERID;

      RegExists := FALSE;
      NoOfDeleted := 0;
    END;

    LOCAL PROCEDURE InsertRegisters@1(DateComprReg@1040000 : Record 87);
    BEGIN
      IF RegExists THEN
        DateComprReg.MODIFY
      ELSE BEGIN
        DateComprReg.INSERT;
        RegExists := TRUE;
      END;
      COMMIT;

      BACSLedgEntry2.LOCKTABLE;
      IF BACSLedgEntry3.FINDLAST THEN;
      DateComprReg.LOCKTABLE;

      InitRegister;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

