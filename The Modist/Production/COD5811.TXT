OBJECT Codeunit 5811 Change Exp. Cost Post. to G/L
{
  OBJECT-PROPERTIES
  {
    Date=07/09/12;
    Time=12:00:00 PM;
    Version List=NAVW17.00;
  }
  PROPERTIES
  {
    TableNo=313;
    Permissions=TableData 5802=rm,
                TableData 5804=id,
                TableData 5811=id;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=If you change the %1, the program must update table %2.;ENG=If you change the %1, the program must update table %2.';
      Text001@1001 : TextConst 'ENU=This can take several hours.\;ENG=This can take several hours.\';
      Text002@1002 : TextConst 'ENU=Do you really want to change the %1?;ENG=Do you really want to change the %1?';
      Text003@1003 : TextConst 'ENU=The change has been cancelled.;ENG=The change has been cancelled.';
      Text004@1004 : TextConst 'ENU=Processing entries...\\;ENG=Processing entries...\\';
      Text005@1005 : TextConst 'ENU=Item No. #1########## @2@@@@@@@@@@@@@;ENG=Item No. #1########## @2@@@@@@@@@@@@@';
      Text007@1007 : TextConst 'ENU=%1 has been changed to %2. You should now run %3.;ENG=%1 has been changed to %2. You should now run %3.';
      Text008@1008 : TextConst 'ENU=Deleting %1 entries...;ENG=Deleting %1 entries...';
      Window@1012 : Dialog;
      EntriesModified@1006 : Boolean;

    PROCEDURE ChangeExpCostPostingToGL@6(VAR InvtSetup@1001 : Record 313;ExpCostPostingToGL@1002 : Boolean);
    VAR
      PostValueEntryToGL@1000 : Record 5811;
    BEGIN
      IF NOT
         CONFIRM(
           STRSUBSTNO(
             Text000 + Text001 + Text002,
             InvtSetup.FIELDCAPTION("Expected Cost Posting to G/L"),
             PostValueEntryToGL.TABLECAPTION),FALSE)
      THEN
        ERROR(Text003);

      IF ExpCostPostingToGL THEN
        EnableExpCostPostingToGL
      ELSE
        DisableExpCostPostingToGL;

      UpdateInvtSetup(InvtSetup,ExpCostPostingToGL)
    END;

    LOCAL PROCEDURE EnableExpCostPostingToGL@3();
    VAR
      ItemLedgEntry@1000 : Record 32;
      ValueEntry@1001 : Record 5802;
      PostValueEntryToGL@1006 : Record 5811;
      OldItemNo@1004 : Code[20];
      LastUpdateTime@1005 : Time;
      RecordNo@1002 : Integer;
      NoOfRecords@1003 : Integer;
    BEGIN
      Window.OPEN(
        Text004 +
        Text005);

      ValueEntry.LOCKTABLE;
      LastUpdateTime := TIME;

      IF PostValueEntryToGL.FINDSET THEN
        REPEAT
          ValueEntry.GET(PostValueEntryToGL."Value Entry No.");
          UpdatePostValueEntryToGL(ValueEntry."Item Ledger Entry No.");
        UNTIL PostValueEntryToGL.NEXT = 0;

      WITH ItemLedgEntry DO BEGIN
        SETCURRENTKEY("Item No.","Entry Type");
        SETFILTER("Entry Type",'%1|%2|%3',"Entry Type"::Sale,"Entry Type"::Purchase,"Entry Type"::Output);
        NoOfRecords := COUNT;
        IF FIND('-') THEN
          REPEAT
            RecordNo := RecordNo + 1;

            IF "Item No." <> OldItemNo THEN BEGIN
              Window.UPDATE(1,"Item No.");
              OldItemNo := "Item No.";
            END;

            IF TIME - LastUpdateTime >= 1000 THEN BEGIN
              Window.UPDATE(2,ROUND(RecordNo / NoOfRecords * 10000,1));
              LastUpdateTime := TIME;
            END;

            IF (Quantity <> "Invoiced Quantity") AND (Quantity <> 0) THEN
              UpdatePostValueEntryToGL("Entry No.");

          UNTIL NEXT = 0;
      END;

      Window.CLOSE;
    END;

    LOCAL PROCEDURE UpdatePostValueEntryToGL@1(ItemLedgEntryNo@1000 : Integer);
    VAR
      PostValueEntryToGL@1001 : Record 5811;
      ValueEntry@1002 : Record 5802;
    BEGIN
      WITH ValueEntry DO BEGIN
        SETCURRENTKEY("Item Ledger Entry No.");
        SETRANGE("Item Ledger Entry No.",ItemLedgEntryNo);
        IF FIND('-') THEN
          REPEAT
            IF NOT EntriesModified THEN
              EntriesModified := TRUE;
            IF NOT PostValueEntryToGL.GET("Entry No.") AND
               (("Cost Amount (Expected)" <> "Expected Cost Posted to G/L") OR
                ("Cost Amount (Expected) (ACY)" <> "Exp. Cost Posted to G/L (ACY)"))
            THEN BEGIN
              PostValueEntryToGL."Value Entry No." := "Entry No.";
              PostValueEntryToGL."Item No." := "Item No.";
              PostValueEntryToGL."Posting Date" := "Posting Date";
              PostValueEntryToGL.INSERT;
            END;
          UNTIL NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE DisableExpCostPostingToGL@4();
    VAR
      PostValueEntryToGL@1001 : Record 5811;
      ValueEntry@1000 : Record 5802;
    BEGIN
      WITH PostValueEntryToGL DO BEGIN
        Window.OPEN(STRSUBSTNO(Text008,TABLECAPTION));
        IF FINDSET(TRUE,TRUE) THEN
          REPEAT
            ValueEntry.GET("Value Entry No.");
            IF ValueEntry."Expected Cost" THEN
              DELETE;

          UNTIL NEXT = 0;
      END;
      Window.CLOSE;
    END;

    LOCAL PROCEDURE UpdateInvtSetup@2(VAR InvtSetup@1001 : Record 313;ExpCostPostingToGL@1002 : Boolean);
    VAR
      ObjTransl@1000 : Record 377;
    BEGIN
      WITH InvtSetup DO BEGIN
        "Expected Cost Posting to G/L" := ExpCostPostingToGL;
        MODIFY;
        IF EntriesModified THEN
          MESSAGE(
            Text007,FIELDCAPTION("Expected Cost Posting to G/L"),"Expected Cost Posting to G/L",
            ObjTransl.TranslateObject(ObjTransl."Object Type"::Report,REPORT::"Post Inventory Cost to G/L"));
      END;
    END;

    BEGIN
    END.
  }
}

