OBJECT Page 50030 Gate Pass
{
  OBJECT-PROPERTIES
  {
    Date=08/07/18;
    Time=[ 9:36:03 PM];
    Modified=Yes;
    Version List=TM0001,TM3007;
  }
  PROPERTIES
  {
    SourceTable=Table50033;
    DataCaptionFields=No.,Description;
    PageType=Document;
    RefreshOnActivate=Yes;
    PromotedActionCategoriesML=ENU=New,Process,Report,Send;
    ActionList=ACTIONS
    {
      { 1000000014;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1000000015;1 ;ActionGroup;
                      Name=Functions;
                      ActionContainerType=NewDocumentItems }
      { 1000000021;2 ;Action    ;
                      Name=Release;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ReleaseDoc;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 GatePassMgmt.ReleaseReopenGatePass(Rec);
                               END;
                                }
      { 1000000022;2 ;Action    ;
                      Name=Reopen;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ReOpen;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 GatePassMgmt.ReleaseReopenGatePass(Rec);
                               END;
                                }
      { 1000000016;2 ;Action    ;
                      Name=CopyDocument;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Copy Document;
                                 ENG=Copy Document];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=CopyDocument;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CLEAR(CopytoGatePassDoc);
                                 CopytoGatePassDoc.SetGatePassHeader(Rec);
                                 CopytoGatePassDoc.RUNMODAL;
                               END;
                                }
      { 1000000017;2 ;Action    ;
                      Name=DashBoard;
                      Ellipsis=Yes;
                      CaptionML=ENU=Dashboard;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Suggest;
                      PromotedCategory=Process }
      { 1000000020;1 ;ActionGroup;
                      CaptionML=ENU=Send }
      { 1000000018;2 ;Action    ;
                      Name=SendEmail;
                      CaptionML=ENU=Send Email;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Email;
                      PromotedCategory=Report;
                      OnAction=BEGIN
                                 GatePassMgmt.SendToGAC(Rec);
                               END;
                                }
      { 1000000019;2 ;Action    ;
                      Name=PtintCI;
                      CaptionML=ENU=Print Comm. Inv.;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PrintDocument;
                      PromotedCategory=Report;
                      OnAction=BEGIN
                                 CLEAR(GatePassCommercialInvoice);
                                 GatePassHeader := Rec;
                                 GatePassHeader.SETRECFILTER;
                                 GatePassCommercialInvoice.SETTABLEVIEW(GatePassHeader);
                                 GatePassCommercialInvoice.RUN;
                               END;
                                }
      { 1000000023;2 ;Action    ;
                      Name=PrintHSCODE;
                      CaptionML=ENU=Print HSCODE;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ExportToExcel;
                      PromotedCategory=Report;
                      OnAction=BEGIN
                                 CLEAR(GatePassHSCODESummary);
                                 GatePassHeader := Rec;
                                 GatePassHeader.SETRECFILTER;
                                 GatePassHSCODESummary.SETTABLEVIEW(GatePassHeader);
                                 GatePassHSCODESummary.RUN;
                               END;
                                }
      { 1000000007;2 ;Action    ;
                      Name=Import Order;
                      CaptionML=ENU=Import Order;
                      Description=TM3007;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Import;
                      PromotedCategory=Report;
                      OnAction=BEGIN
                                 //Doc TM3007 ST 05/07/2018 -
                                 FileNameG := FileMgtG.UploadFile(C_SelectFile, '*.xls');
                                 IF FileNameG = '' THEN
                                   ERROR('');
                                 SheetNameG := ExcelBufG.SelectSheetsName(FileNameG);

                                 ExcelBufG.LOCKTABLE;
                                 ExcelBufG.OpenBook(FileNameG, SheetNameG);
                                 ExcelBufG.ReadSheet;
                                 GetLastRowandColumn;

                                 FOR CountG := 2 TO TotalRowsG DO
                                   CopyOrder(CountG);
                                 //Doc TM3007 ST 05/07/2018 +
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1000000000;0;Container;
                ContainerType=ContentArea }

    { 1000000001;1;Group  ;
                Name=General;
                GroupType=Group }

    { 1000000002;2;Field  ;
                SourceExpr="No." }

    { 1000000003;2;Field  ;
                SourceExpr=Description }

    { 1000000004;2;Field  ;
                SourceExpr="Document Date" }

    { 1000000005;2;Field  ;
                SourceExpr=Status }

    { 1000000013;1;Part   ;
                Name=Lines;
                SubPageLink=Document No.=FIELD(No.);
                PagePartID=Page50031;
                PartType=Page;
                UpdatePropagation=Both }

    { 1000000006;1;Group  ;
                Name=Control;
                GroupType=Group }

    { 1000000008;2;Field  ;
                SourceExpr="No. of Sent to GAC" }

    { 1000000009;2;Field  ;
                SourceExpr="Created By" }

    { 1000000010;2;Field  ;
                SourceExpr="Created Date" }

    { 1000000024;2;Field  ;
                SourceExpr="Last Modify By" }

    { 1000000025;2;Field  ;
                SourceExpr="Last Modify Date" }

    { 1000000026;2;Field  ;
                SourceExpr="Last Sent By" }

    { 1000000027;2;Field  ;
                SourceExpr="Last Sent Date" }

    { 1000000011;0;Container;
                ContainerType=FactBoxArea }

    { 1000000012;1;Part   ;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      GatePassHeader@1000000003 : Record 50033;
      GatePassMgmt@1000000001 : Codeunit 50024;
      CopytoGatePassDoc@1000000000 : Report 50004;
      GatePassCommercialInvoice@1000000002 : Report 50036;
      GatePassHSCODESummary@1000000004 : Report 50023;
      ExcelBufG@1000000012 : TEMPORARY Record 370;
      FileMgtG@1000000011 : Codeunit 419;
      FileNameG@1000000010 : Text;
      SheetNameG@1000000009 : Text;
      TotalRowsG@1000000008 : Integer;
      TotalColumnsG@1000000007 : Integer;
      CountG@1000000006 : Integer;
      WindowG@1000000005 : Dialog;
      C_SelectFile@1000000013 : TextConst 'ENU=Selection Window';
      CheckBlankG@1000000014 : Text[20];
      C_OrderNo@1000000015 : TextConst 'ENU=Order No. is not found.';
      RRefG@1000000016 : RecordRef;
      C_NoLines@1000000018 : TextConst 'ENU=No Lines found';
      NextLineNoG@1000000017 : Integer;

    PROCEDURE GetLastRowandColumn@1000000000();
    BEGIN
      //Doc TM3007 ST 05/07/2018 -
      ExcelBufG.SETRANGE("Row No.", 1);
      TotalColumnsG := ExcelBufG.COUNT;

      ExcelBufG.RESET;
      IF ExcelBufG.FINDLAST THEN
        TotalRowsG := ExcelBufG."Row No.";
      //Doc TM3007 ST 05/07/2018 +
    END;

    PROCEDURE GetValueAtCell@1000000003(RowNo@1000000000 : Integer;ColNo@1000000001 : Integer) : Text;
    BEGIN
      //Doc TM3007 ST 05/07/2018 -
      IF ExcelBufG.GET(RowNo, ColNo) THEN
        EXIT(ExcelBufG."Cell Value as Text");
      //Doc TM3007 ST 05/07/2018 +
    END;

    LOCAL PROCEDURE CopyOrder@1000000005(RowNoP@1000000000 : Integer);
    VAR
      SalesHdrL@1000000001 : Record 36;
      SalesLineL@1000000002 : Record 37;
      SalesInvHdrL@1000000004 : Record 112;
      SalesInvLineL@1000000003 : Record 113;
      GatePassHdrL@1000000005 : Record 50033;
      GatePassLineL@1000000008 : Record 50031;
      ItemNoFRefL@1000000007 : FieldRef;
      QtyFRefL@1000000006 : FieldRef;
    BEGIN
      //Doc TM3007 ST 05/07/2018 -
      EVALUATE(CheckBlankG, GetValueAtCell(RowNoP, 1));
      IF CheckBlankG = '' THEN
        ERROR(C_OrderNo);
      IF SalesHdrL.GET(SalesHdrL."Document Type"::Order, CheckBlankG) THEN BEGIN
        SalesLineL.SETRANGE("Document Type", SalesHdrL."Document Type");
        SalesLineL.SETRANGE("Document No.", SalesHdrL."No.");
        SalesLineL.SETRANGE(Type, SalesLineL.Type::Item);
        RRefG.GETTABLE(SalesLineL);
      END ELSE BEGIN
        SalesInvHdrL.SETCURRENTKEY("Order No.");
        SalesInvHdrL.SETRANGE("Order No.", CheckBlankG);
        SalesInvHdrL.FINDFIRST;
        SalesInvLineL.SETRANGE("Document No.", SalesInvHdrL."No.");
        SalesInvLineL.SETRANGE(Type, SalesInvLineL.Type::Item);
        RRefG.GETTABLE(SalesInvLineL);
      END;

      WITH RRefG DO BEGIN
        IF FINDSET THEN BEGIN
          REPEAT
            ItemNoFRefL := FIELD(6);
            QtyFRefL := FIELD(15);
            //DOC TM3007.01 AW 08/07/2018 -
            GatePassLineL.RESET;
            GatePassLineL.SETRANGE("Document No.","No.");
            //DOC TM3007.01 AW 08/07/2018 +
            GatePassLineL.SETRANGE("Item No.", FORMAT(ItemNoFRefL.VALUE));
            IF GatePassLineL.ISEMPTY THEN BEGIN
              GatePassLineL.INIT;
              GatePassLineL."Document No." := "No.";
              GatePassLineL.VALIDATE("Line No.", NextLineNoG + 10000);
              GatePassLineL.VALIDATE("Item No.",FORMAT(ItemNoFRefL.VALUE));
              EVALUATE(GatePassLineL.Quantity,FORMAT(QtyFRefL.VALUE));
              GatePassLineL.VALIDATE(Quantity);
              GatePassLineL.INSERT(TRUE);
              NextLineNoG += 10000;
            END;
          UNTIL NEXT=0;
        END ELSE
          ERROR(C_NoLines);
      END;
      //Doc TM3007 ST 05/07/2018 +
    END;

    BEGIN
    {
      //Doc TM3007 ST 08/07/2018 - Code added to import order.
      //DOC TM3007.01 AW 08/07/2018 - Bug Fix
    }
    END.
  }
}

