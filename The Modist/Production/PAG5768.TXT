OBJECT Page 5768 Warehouse Receipt
{
  OBJECT-PROPERTIES
  {
    Date=07/08/18;
    Time=[ 5:25:12 PM];
    Modified=Yes;
    Version List=NAVW19.00,NS2016.16,OP9031,TM3000;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Warehouse Receipt;
               ENG=Warehouse Receipt];
    SourceTable=Table7316;
    PopulateAllFields=Yes;
    PageType=Document;
    RefreshOnActivate=Yes;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Navigate;
                                ENG=New,Process,Report,Navigate];
    OnOpenPage=BEGIN
                 ErrorIfUserIsNotWhseEmployee;

                 //DOC OP9031 LF 15/12/2016 -
                 CALCFIELDS("Source Document");
                 IF "Source Document" IN ["Source Document"::"Purchase Order","Source Document"::"Sales Return Order"] THEN
                   ShowSendToWMS := TRUE
                 ELSE
                   ShowSendToWMS := FALSE;
                 //DOC OP9031 LF 15/12/2016 +
               END;

    OnFindRecord=BEGIN
                   EXIT(FindFirstAllowedRec(Which));
                 END;

    OnNextRecord=BEGIN
                   EXIT(FindNextAllowedRec(Steps));
                 END;

    OnAfterGetRecord=BEGIN
                       //DOC OP9031 LF 15/12/2016 -
                       CALCFIELDS("Source Document");
                       IF "Source Document" IN ["Source Document"::"Purchase Order","Source Document"::"Sales Return Order"] THEN
                         ShowSendToWMS := TRUE
                       ELSE
                         ShowSendToWMS := FALSE;
                       //DOC OP9031 LF 15/12/2016 +
                     END;

    OnDeleteRecord=BEGIN
                     //TESTFIELD("Sent to WMS",FALSE);
                   END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 100     ;1   ;ActionGroup;
                      CaptionML=[ENU=&Receipt;
                                 ENG=&Receipt];
                      Image=Receipt }
      { 101     ;2   ;Action    ;
                      ShortCutKey=Shift+Ctrl+L;
                      CaptionML=[ENU=List;
                                 ENG=List];
                      Image=OpportunitiesList;
                      OnAction=BEGIN
                                 LookupWhseRcptHeader(Rec);
                               END;
                                }
      { 31      ;2   ;Action    ;
                      CaptionML=[ENU=Co&mments;
                                 ENG=Co&mments];
                      RunObject=Page 5776;
                      RunPageLink=Table Name=CONST(Whse. Receipt),
                                  Type=CONST(" "),
                                  No.=FIELD(No.);
                      Image=ViewComments }
      { 6       ;2   ;Action    ;
                      CaptionML=[ENU=Posted &Whse. Receipts;
                                 ENG=Posted &Whse. Receipts];
                      RunObject=Page 7333;
                      RunPageView=SORTING(Whse. Receipt No.);
                      RunPageLink=Whse. Receipt No.=FIELD(No.);
                      Promoted=Yes;
                      Image=PostedReceipts;
                      PromotedCategory=Process }
      { 1000000013;2 ;Separator  }
      { 1000000019;2 ;Action    ;
                      Name=Vendor;
                      CaptionML=[ENU=Vendor;
                                 ENG=Vendor];
                      Description=NS2015.1;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Vendor;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 ShowVendor();
                               END;
                                }
      { 1000000018;2 ;Action    ;
                      Name=Consignment;
                      CaptionML=[ENU=Consignment;
                                 ENG=Consignment];
                      Description=NS2015.1;
                      Promoted=Yes;
                      Visible=FALSE;
                      PromotedIsBig=Yes;
                      Image=Delivery;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 ShowConsignment();
                               END;
                                }
      { 1000000020;2 ;Action    ;
                      Name=StoreAllocTransferOrders;
                      CaptionML=[ENU=Store Allocation Transfer Orders;
                                 ENG=Store Allocation Transfer Orders];
                      Description=NS2015.1;
                      Promoted=Yes;
                      Visible=FALSE;
                      PromotedIsBig=Yes;
                      Image=TransferOrder;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 lWarehouseReceiptAllocation@1000000000 : Codeunit 9087019;
                               BEGIN
                                 lWarehouseReceiptAllocation.ShowTransferOrders(Rec);
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 9       ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 ENG=F&unctions];
                      Image=Action }
      { 34      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Use Filters to Get Src. Docs.;
                                 ENG=Use Filters to Get Src. Docs.];
                      Promoted=Yes;
                      Image=UseFilters;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 GetSourceDocInbound@1001 : Codeunit 5751;
                               BEGIN
                                 GetSourceDocInbound.GetInboundDocs(Rec);
                                 "Document Status" := GetHeaderStatus(0);
                                 MODIFY;
                               END;
                                }
      { 23      ;2   ;Action    ;
                      ShortCutKey=Shift+F11;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Get Source Documents;
                                 ENG=Get Source Documents];
                      Promoted=Yes;
                      Image=GetSourceDoc;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 GetSourceDocInbound@1001 : Codeunit 5751;
                               BEGIN
                                 GetSourceDocInbound.GetSingleInboundDoc(Rec);
                                 "Document Status" := GetHeaderStatus(0);
                                 MODIFY;
                               END;
                                }
      { 24      ;2   ;Separator ;
                      CaptionML=[ENU=24;
                                 ENG=24] }
      { 35      ;2   ;Action    ;
                      CaptionML=[ENU=Autofill Qty. to Receive;
                                 ENG=Autofill Qty. to Receive];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=AutofillQtyToHandle;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 AutofillQtyToReceive;
                               END;
                                }
      { 17      ;2   ;Action    ;
                      CaptionML=[ENU=Delete Qty. to Receive;
                                 ENG=Delete Qty. to Receive];
                      Image=DeleteQtyToHandle;
                      OnAction=BEGIN
                                 DeleteQtyToReceive;
                               END;
                                }
      { 40      ;2   ;Separator  }
      { 46      ;2   ;Action    ;
                      Name=CalculateCrossDock;
                      CaptionML=[ENU=Calculate Cross-Dock;
                                 ENG=Calculate Cross-Dock];
                      Promoted=Yes;
                      Image=CalculateCrossDock;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 CrossDockOpp@1001 : Record 5768;
                                 CrossDockMgt@1000 : Codeunit 5780;
                               BEGIN
                                 CrossDockMgt.CalculateCrossDockLines(CrossDockOpp,'',"No.","Location Code");
                               END;
                                }
      { 1000000012;2 ;Separator  }
      { 1000000011;2 ;Action    ;
                      Name=CreateStoreAllocTransferOrders;
                      CaptionML=[ENU=Create Store Allocation Transfer Orders;
                                 ENG=Create Store Allocation Transfer Orders];
                      Description=NS2015.1;
                      RunObject=Codeunit 9087019;
                      Promoted=Yes;
                      Visible=FALSE;
                      PromotedIsBig=Yes;
                      Image=NewTransferOrder;
                      PromotedCategory=Process }
      { 1000000015;2 ;Action    ;
                      Name=QualityInspection;
                      CaptionML=[ENU=Quality Inspection;
                                 ENG=Quality Inspection];
                      Description=NS2015.1;
                      Promoted=Yes;
                      Visible=FALSE;
                      Image=TaskQualityMeasure;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 lItemQualityInspectionMgt@1000000000 : Codeunit 9087014;
                               BEGIN
                                 //DOC NS2015.1 >>
                                 lItemQualityInspectionMgt.ShowForWarehouseReceipt(Rec);
                                 //DOC NS2015.1 <<
                               END;
                                }
      { 1000000008;2 ;Action    ;
                      Name=PrintBarcodes;
                      CaptionML=[ENU=Print Barcodes;
                                 ENG=Print Barcodes];
                      Description=NS2015.1;
                      Promoted=Yes;
                      Visible=FALSE;
                      PromotedIsBig=Yes;
                      Image=BarCode;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 WarehouseReceiptLine@1000000000 : Record 7317;
                                 PrintBarcode@1000000001 : Report 9062229;
                               BEGIN
                                 WarehouseReceiptLine.SETRANGE("No.", "No.");
                                 IF WarehouseReceiptLine.FINDFIRST THEN REPEAT
                                   PrintBarcode.CreateLabelPrintBuffer(WarehouseReceiptLine."Item No.", WarehouseReceiptLine."Variant Code", WarehouseReceiptLine."Qty. to Receive (Base)");
                                 UNTIL WarehouseReceiptLine.NEXT = 0;

                                 PrintBarcode.RUNMODAL;
                               END;
                                }
      { 1000000014;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Send to WMS?;
                                 ENG=Send to WMS?];
                      Promoted=Yes;
                      Visible=ShowSendToWMS;
                      Image=TransferReceipt;
                      OnAction=VAR
                                 IntegrationProcessProcessor@1000000000 : Codeunit 50005;
                               BEGIN
                                 //DOC OP9031 LF 12/12/2016 -
                                 IF NOT ("Sent to WMS") THEN BEGIN
                                   CALCFIELDS("Source Document");
                                   IF ("Source Document" = "Source Document"::"Purchase Order") THEN
                                     IntegrationProcessProcessor.AddPurchRecieptASN(Rec);
                                   IF ("Source Document" = "Source Document"::"Sales Return Order") THEN
                                     IntegrationProcessProcessor.AddReturnOrderASN(Rec);

                                   "Sent to WMS" := TRUE;
                                   MESSAGE('Document %1 Sent to WMS',"No.");
                                 END ELSE
                                   IF CONFIRM(STRSUBSTNO('Document %1 has already been transfered to WMS/Do you wish to resend?',"No.")) THEN BEGIN
                                     IntegrationProcessProcessor.ResendPurchRecieptASN(Rec);
                                     "Sent to WMS" := TRUE;
                                   END;
                                 //DOC OP9031 LF 12/12/2016 +
                               END;
                                }
      { 1000000023;2 ;Action    ;
                      CaptionML=ENU=Integration Status;
                      RunObject=Page 50004;
                      RunPageView=SORTING(Document No.);
                      RunPageLink=Document No.=FIELD(No.);
                      Promoted=Yes;
                      Image=Warehouse }
      { 8       ;1   ;ActionGroup;
                      CaptionML=[ENU=P&osting;
                                 ENG=P&osting];
                      Image=Post }
      { 25      ;2   ;Action    ;
                      Name=Post Receipt;
                      ShortCutKey=F9;
                      CaptionML=[ENU=P&ost Receipt;
                                 ENG=P&ost Receipt];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostOrder;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 WhsePostRcptYesNo;
                               END;
                                }
      { 47      ;2   ;Action    ;
                      ShortCutKey=Shift+F9;
                      CaptionML=[ENU=Post and &Print;
                                 ENG=Post and &Print];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostPrint;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 WhsePostRcptPrintPostedRcpt;
                               END;
                                }
      { 26      ;2   ;Action    ;
                      ShortCutKey=Shift+Ctrl+F9;
                      CaptionML=[ENU=Post and Print P&ut-away;
                                 ENG=Post and Print P&ut-away];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostPrint;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 WhsePostRcptPrint;
                               END;
                                }
      { 21      ;1   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=&Print;
                                 ENG=&Print];
                      Promoted=Yes;
                      Image=Print;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 WhseDocPrint.PrintRcptHeader(Rec);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=[ENU=General;
                           ENG=General] }

    { 2   ;2   ;Field     ;
                SourceExpr="No.";
                OnAssistEdit=BEGIN
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;
                              }

    { 36  ;2   ;Field     ;
                SourceExpr="Location Code";
                OnLookup=BEGIN
                           CurrPage.SAVERECORD;
                           LookupLocation(Rec);
                           CurrPage.UPDATE(TRUE);
                         END;
                          }

    { 16  ;2   ;Field     ;
                SourceExpr="Zone Code" }

    { 22  ;2   ;Field     ;
                SourceExpr="Bin Code" }

    { 38  ;2   ;Field     ;
                SourceExpr="Document Status" }

    { 42  ;2   ;Field     ;
                SourceExpr="Posting Date" }

    { 1000000007;2;Field  ;
                Description=NS2015.1;
                SourceExpr="Vendor No.";
                Visible=FALSE }

    { 1000000006;2;Field  ;
                Description=NS2015.1;
                SourceExpr="Vendor Name";
                Visible=FALSE }

    { 44  ;2   ;Field     ;
                SourceExpr="Vendor Shipment No." }

    { 1000000009;2;Field  ;
                Description=NS2015.1;
                SourceExpr="Consignment No.";
                Visible=FALSE;
                Editable=FALSE }

    { 5   ;2   ;Field     ;
                SourceExpr="Assigned User ID" }

    { 1000000021;2;Field  ;
                SourceExpr="Due Date" }

    { 15  ;2   ;Field     ;
                SourceExpr="Assignment Date";
                Editable=FALSE }

    { 29  ;2   ;Field     ;
                SourceExpr="Assignment Time";
                Editable=FALSE }

    { 13  ;2   ;Field     ;
                OptionCaptionML=[ENU=" ,Item,Document,Shelf or Bin,Due Date ";
                                 ENG=" ,Item,Document,Shelf or Bin,Due Date "];
                SourceExpr="Sorting Method";
                OnValidate=BEGIN
                             SortingMethodOnAfterValidate;
                           END;
                            }

    { 1000000000;2;Field  ;
                Description=NS2015.1;
                SourceExpr="Expected Date";
                Visible=FALSE }

    { 1000000001;2;Field  ;
                Description=NS2015.1;
                SourceExpr="Expected Time";
                Visible=FALSE }

    { 1000000002;2;Field  ;
                Description=NS2015.1;
                SourceExpr="Actual Date";
                Visible=FALSE }

    { 1000000003;2;Field  ;
                Description=NS2015.1;
                SourceExpr="Actual Time";
                Visible=FALSE }

    { 1000000004;2;Field  ;
                Description=NS2015.1;
                SourceExpr=Status;
                Visible=FALSE }

    { 1000000016;2;Field  ;
                Description=NS2015.1;
                SourceExpr="Quality Inspection Finished";
                Visible=FALSE }

    { 1000000017;2;Field  ;
                Description=NS2015.1;
                SourceExpr="Quality Inspection Failed";
                Visible=FALSE }

    { 1000000005;2;Field  ;
                SourceExpr="Source Document No.";
                Editable=FALSE }

    { 1000000010;2;Field  ;
                SourceExpr="Source Document";
                Editable=FALSE }

    { 1000000022;2;Field  ;
                SourceExpr="Sent to WMS";
                Editable=FALSE }

    { 1000000026;2;Field  ;
                SourceExpr="Total Qty." }

    { 1000000024;2;Field  ;
                SourceExpr="Total Qty. to Receive" }

    { 1000000025;2;Field  ;
                SourceExpr="Total Qty. Received" }

    { 97  ;1   ;Part      ;
                Name=WhseReceiptLines;
                CaptionML=[ENU=WhseReceiptLines;
                           ENG=WhseReceiptLines];
                Description=TM3000;
                SubPageView=SORTING(No.,Sorting Sequence No.);
                SubPageLink=No.=FIELD(No.);
                PagePartID=Page5769;
                UpdatePropagation=Both }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1901796907;1;Part   ;
                SubPageLink=No.=FIELD(Item No.);
                PagePartID=Page9109;
                ProviderID=97;
                Visible=TRUE;
                PartType=Page }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=TRUE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      WhseDocPrint@1000 : Codeunit 5776;
      ShowSendToWMS@1000000000 : Boolean INDATASET;

    LOCAL PROCEDURE AutofillQtyToReceive@1();
    BEGIN
      CurrPage.WhseReceiptLines.PAGE.AutofillQtyToReceive;
    END;

    LOCAL PROCEDURE DeleteQtyToReceive@3();
    BEGIN
      CurrPage.WhseReceiptLines.PAGE.DeleteQtyToReceive;
    END;

    LOCAL PROCEDURE WhsePostRcptYesNo@4();
    BEGIN
      CurrPage.WhseReceiptLines.PAGE.WhsePostRcptYesNo;
    END;

    LOCAL PROCEDURE WhsePostRcptPrint@5();
    BEGIN
      CurrPage.WhseReceiptLines.PAGE.WhsePostRcptPrint;
    END;

    LOCAL PROCEDURE WhsePostRcptPrintPostedRcpt@2();
    BEGIN
      CurrPage.WhseReceiptLines.PAGE.WhsePostRcptPrintPostedRcpt;
    END;

    LOCAL PROCEDURE SortingMethodOnAfterValidate@19063061();
    BEGIN
      CurrPage.UPDATE;
    END;

    BEGIN
    {
      //DOC NS2015.1  SD 22/01/2014 - nSemble fields added
      //DOC NS2015.1  SD 22/01/2014 - New function added Print BarCodes
      //DOC NS2015.1  AZ 30/01/2014 - Quality inspection
      //DOC NS2015.1  JH 21/02/2014 - nSemble amendments
      //DOC NS2015.6  JH 09/04/2015 - "Stock Alloctions" renamed to "Store Allocations"
      //DOC NS2016.16 JH 04/10/2016 - nSemble 2016
      //DOC OP9031 LF 15/12/2016 - Added field "Due Date", Added action "Send to WMS", added functionality to show or hide the action
      //DOC OP9031 LF 11/01/2017 - Added Field "Sent to WMS"
      //Doc TM3000 ST 02/07/2018 - Added new controls "Total Qty. to Receive" & "Total Qty Received" & changed property.
      //DOC TM3000.01 AW 07/08/2018 - Added new control "Total Qty."
    }
    END.
  }
}

