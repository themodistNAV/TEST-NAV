OBJECT Page 766 Acc. Sched. Chart SubPage
{
  OBJECT-PROPERTIES
  {
    Date=09/09/14;
    Time=12:00:00 PM;
    Version List=NAVW18.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Acc. Sched. Chart SubPage;
               ENG=Acc. Sched. Chart SubPage];
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table763;
    PageType=ListPart;
    OnFindRecord=BEGIN
                   SetFilters(Rec);
                   EXIT(FINDSET);
                 END;

    ActionList=ACTIONS
    {
      { 8       ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 9       ;1   ;Action    ;
                      Name=Edit;
                      CaptionML=[ENU=Edit;
                                 ENG=Edit];
                      Image=EditLines;
                      OnAction=VAR
                                 AccSchedChartSetupLine@1001 : Record 763;
                                 AccSchedChartLine@1002 : Page 765;
                                 AccSchedChartMatrix@1003 : Page 764;
                               BEGIN
                                 SetFilters(AccSchedChartSetupLine);
                                 AccSchedChartSetupLine.SETRANGE("Chart Type");
                                 CASE AccountSchedulesChartSetup."Base X-Axis on" OF
                                   AccountSchedulesChartSetup."Base X-Axis on"::Period:
                                     IF IsMeasure THEN BEGIN
                                       AccSchedChartMatrix.SetFilters(AccountSchedulesChartSetup);
                                       AccSchedChartMatrix.RUNMODAL;
                                     END;
                                   AccountSchedulesChartSetup."Base X-Axis on"::"Acc. Sched. Line",
                                   AccountSchedulesChartSetup."Base X-Axis on"::"Acc. Sched. Column":
                                     BEGIN
                                       IF IsMeasure THEN
                                         AccSchedChartLine.SetViewAsMeasure(TRUE)
                                       ELSE
                                         AccSchedChartLine.SetViewAsMeasure(FALSE);
                                       AccSchedChartLine.SETTABLEVIEW(AccSchedChartSetupLine);
                                       AccSchedChartLine.RUNMODAL;
                                     END;
                                 END;

                                 CurrPage.UPDATE;
                               END;
                                }
      { 10      ;1   ;Action    ;
                      Name=Delete;
                      CaptionML=[ENU=Delete;
                                 ENG=Delete];
                      Image=Delete;
                      OnAction=VAR
                                 AccSchedChartSetupLine@1001 : Record 763;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(AccSchedChartSetupLine);
                                 AccSchedChartSetupLine.MODIFYALL("Chart Type","Chart Type"::" ");
                                 CurrPage.UPDATE;
                               END;
                                }
      { 11      ;1   ;Action    ;
                      Name=Reset to default Setup;
                      CaptionML=[ENU=Reset to Default Setup;
                                 ENG=Reset to Default Setup];
                      Image=Refresh;
                      OnAction=BEGIN
                                 AccountSchedulesChartSetup.RefreshLines(FALSE);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 7   ;0   ;Container ;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                SourceExpr="Account Schedule Line No.";
                Visible=FALSE }

    { 3   ;2   ;Field     ;
                SourceExpr="Column Layout Line No.";
                Visible=FALSE }

    { 4   ;2   ;Field     ;
                SourceExpr="Original Measure Name";
                Visible=FALSE }

    { 5   ;2   ;Field     ;
                SourceExpr="Measure Name" }

    { 6   ;2   ;Field     ;
                SourceExpr="Chart Type";
                Visible=IsMeasure;
                OnValidate=BEGIN
                             IF "Chart Type" = "Chart Type"::" " THEN
                               CurrPage.UPDATE;
                           END;
                            }

  }
  CODE
  {
    VAR
      AccountSchedulesChartSetup@1001 : Record 762;
      IsMeasure@1000 : Boolean;

    PROCEDURE SetViewAsMeasure@1(Value@1000 : Boolean);
    BEGIN
      IsMeasure := Value;
    END;

    LOCAL PROCEDURE SetFilters@2(VAR AccSchedChartSetupLine@1001 : Record 763);
    BEGIN
      WITH AccSchedChartSetupLine DO BEGIN
        RESET;
        IF IsMeasure THEN
          AccountSchedulesChartSetup.SetLinkToMeasureLines(AccSchedChartSetupLine)
        ELSE
          AccountSchedulesChartSetup.SetLinkToDimensionLines(AccSchedChartSetupLine);
        SETFILTER("Chart Type",'<>%1',"Chart Type"::" ");
      END;
    END;

    PROCEDURE SetSetupRec@3(VAR NewAccountSchedulesChartSetup@1000 : Record 762);
    BEGIN
      AccountSchedulesChartSetup := NewAccountSchedulesChartSetup;
    END;

    BEGIN
    END.
  }
}

