OBJECT Page 5871 Item Availability by BOM Level
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Item Availability by BOM Level;
               ENG=Item Availability by BOM Level];
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table5870;
    PageType=Worksheet;
    SourceTableTemporary=Yes;
    OnOpenPage=BEGIN
                 ShowTotalAvailability := TRUE;
                 IF DemandDate = 0D THEN
                   DemandDate := WORKDATE;
                 RefreshPage;
               END;

    OnAfterGetRecord=VAR
                       DummyBOMWarningLog@1000 : Record 5874;
                     BEGIN
                       IsParentExpr := NOT "Is Leaf";

                       HasWarning := NOT IsLineOk(FALSE,DummyBOMWarningLog);
                     END;

    ActionList=ACTIONS
    {
      { 35      ;    ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 33      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Item Availability by;
                                 ENG=&Item Availability by];
                      Image=ItemAvailability }
      { 32      ;2   ;Action    ;
                      CaptionML=[ENU=Event;
                                 ENG=Event];
                      Image=Event;
                      OnAction=BEGIN
                                 ItemAvail(ItemAvailFormsMgt.ByEvent);
                               END;
                                }
      { 31      ;2   ;Action    ;
                      CaptionML=[ENU=Period;
                                 ENG=Period];
                      Image=Period;
                      OnAction=BEGIN
                                 ItemAvail(ItemAvailFormsMgt.ByPeriod);
                               END;
                                }
      { 30      ;2   ;Action    ;
                      CaptionML=[ENU=Variant;
                                 ENG=Variant];
                      Image=ItemVariant;
                      OnAction=BEGIN
                                 ItemAvail(ItemAvailFormsMgt.ByVariant);
                               END;
                                }
      { 29      ;2   ;Action    ;
                      AccessByPermission=TableData 14=R;
                      CaptionML=[ENU=Location;
                                 ENG=Location];
                      Image=Warehouse;
                      OnAction=BEGIN
                                 ItemAvail(ItemAvailFormsMgt.ByLocation);
                               END;
                                }
      { 28      ;2   ;Action    ;
                      CaptionML=[ENU=BOM Level;
                                 ENG=BOM Level];
                      Image=BOMLevel;
                      OnAction=BEGIN
                                 ItemAvail(ItemAvailFormsMgt.ByBOM);
                               END;
                                }
      { 37      ;0   ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 36      ;1   ;Action    ;
                      CaptionML=[ENU=Previous Period;
                                 ENG=Previous Period];
                      ToolTipML=[ENU=Previous Period;
                                 ENG=Previous Period];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 DemandDate := CALCDATE('<-1D>',DemandDate);
                                 RefreshPage;
                               END;
                                }
      { 34      ;1   ;Action    ;
                      CaptionML=[ENU=Next Period;
                                 ENG=Next Period];
                      ToolTipML=[ENU=Next Period;
                                 ENG=Next Period];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 DemandDate := CALCDATE('<+1D>',DemandDate);
                                 RefreshPage;
                               END;
                                }
      { 40      ;1   ;Action    ;
                      CaptionML=[ENU=Show Warnings;
                                 ENG=Show Warnings];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ErrorLog;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowWarningsForAllLines;
                               END;
                                }
      { 38      ;0   ;ActionContainer;
                      ActionContainerType=Reports }
      { 39      ;1   ;Action    ;
                      CaptionML=[ENU=Item - Able to Make (Timeline);
                                 ENG=Item - Able to Make (Timeline)];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Trendscape;
                      PromotedCategory=Report;
                      OnAction=BEGIN
                                 ShowAbleToMakeTimeline;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 20  ;1   ;Group     ;
                CaptionML=[ENU=Option;
                           ENG=Option];
                GroupType=Group }

    { 19  ;2   ;Field     ;
                CaptionML=[ENU=Item Filter;
                           ENG=Item Filter];
                SourceExpr=ItemFilter;
                OnValidate=BEGIN
                             IsCalculated := FALSE;
                             RefreshPage;
                           END;

                OnLookup=VAR
                           Item@1001 : Record 27;
                           ItemList@1000 : Page 31;
                         BEGIN
                           ItemList.SETTABLEVIEW(Item);
                           ItemList.LOOKUPMODE := TRUE;
                           IF ItemList.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             ItemList.GETRECORD(Item);
                             Text := Item."No.";
                             EXIT(TRUE);
                           END;
                           EXIT(FALSE);
                         END;
                          }

    { 17  ;2   ;Field     ;
                CaptionML=[ENU=Location Filter;
                           ENG=Location Filter];
                SourceExpr=LocationFilter;
                OnValidate=BEGIN
                             IsCalculated := FALSE;
                             RefreshPage;
                           END;

                OnLookup=VAR
                           Location@1001 : Record 14;
                           LocationList@1000 : Page 15;
                         BEGIN
                           LocationList.SETTABLEVIEW(Location);
                           LocationList.LOOKUPMODE := TRUE;
                           IF LocationList.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             LocationList.GETRECORD(Location);
                             Text := Location.Code;
                             EXIT(TRUE);
                           END;
                           EXIT(FALSE);
                         END;
                          }

    { 16  ;2   ;Field     ;
                CaptionML=[ENU=Variant Filter;
                           ENG=Variant Filter];
                SourceExpr=VariantFilter;
                OnValidate=BEGIN
                             IsCalculated := FALSE;
                             RefreshPage;
                           END;

                OnLookup=VAR
                           ItemVariant@1001 : Record 5401;
                           ItemVariants@1000 : Page 5401;
                         BEGIN
                           ItemVariant.SETFILTER("Item No.",ItemFilter);
                           ItemVariants.SETTABLEVIEW(ItemVariant);
                           ItemVariants.LOOKUPMODE := TRUE;
                           IF ItemVariants.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             ItemVariants.GETRECORD(ItemVariant);
                             Text := ItemVariant.Code;
                             EXIT(TRUE);
                           END;
                           EXIT(FALSE);
                         END;
                          }

    { 18  ;2   ;Field     ;
                CaptionML=[ENU=Demand Date;
                           ENG=Demand Date];
                SourceExpr=DemandDate;
                OnValidate=BEGIN
                             IsCalculated := FALSE;
                             RefreshPage;
                           END;
                            }

    { 10  ;2   ;Field     ;
                CaptionML=[ENU=Calculated;
                           ENG=Calculated];
                SourceExpr=IsCalculated;
                Editable=FALSE }

    { 26  ;2   ;Field     ;
                CaptionML=[ENU=Show Total Availability;
                           ENG=Show Total Availability];
                SourceExpr=ShowTotalAvailability;
                OnValidate=BEGIN
                             IsCalculated := FALSE;
                             RefreshPage;
                           END;
                            }

    { 2   ;1   ;Group     ;
                Name=Group;
                CaptionML=[ENU=Lines;
                           ENG=Lines];
                IndentationColumnName=Indentation;
                ShowAsTree=Yes;
                GroupType=Repeater }

    { 4   ;2   ;Field     ;
                SourceExpr="No.";
                Editable=FALSE;
                Style=Strong;
                StyleExpr=IsParentExpr }

    { 14  ;2   ;Field     ;
                SourceExpr=Description;
                Editable=FALSE }

    { 41  ;2   ;Field     ;
                CaptionML=[ENU=Warning;
                           ENG=Warning];
                BlankZero=Yes;
                SourceExpr=HasWarning;
                Editable=FALSE;
                Style=Attention;
                StyleExpr=HasWarning;
                OnDrillDown=BEGIN
                              IF HasWarning THEN
                                ShowWarnings;
                            END;
                             }

    { 27  ;2   ;Field     ;
                SourceExpr=Bottleneck;
                Editable=FALSE;
                Style=Strong;
                StyleExpr=TRUE }

    { 6   ;2   ;Field     ;
                SourceExpr="Variant Code";
                Visible=FALSE }

    { 21  ;2   ;Field     ;
                DecimalPlaces=0:5;
                SourceExpr="Qty. per Parent";
                Editable=FALSE }

    { 22  ;2   ;Field     ;
                DecimalPlaces=0:5;
                SourceExpr="Qty. per Top Item";
                Visible=FALSE;
                Editable=FALSE }

    { 23  ;2   ;Field     ;
                SourceExpr="Unit of Measure Code";
                Editable=FALSE }

    { 24  ;2   ;Field     ;
                SourceExpr="Replenishment System";
                Editable=FALSE }

    { 13  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Available Quantity";
                Editable=FALSE }

    { 3   ;2   ;Field     ;
                SourceExpr="Unused Quantity";
                Visible=FALSE }

    { 15  ;2   ;Field     ;
                SourceExpr="Needed by Date";
                Editable=FALSE }

    { 11  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Able to Make Parent";
                Editable=FALSE }

    { 12  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Able to Make Top Item";
                Editable=FALSE }

    { 8   ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Gross Requirement";
                Visible=FALSE;
                Editable=FALSE }

    { 7   ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Scheduled Receipts";
                Visible=FALSE;
                Editable=FALSE }

    { 5   ;2   ;Field     ;
                SourceExpr="Safety Lead Time";
                Visible=FALSE;
                Editable=FALSE }

    { 25  ;2   ;Field     ;
                SourceExpr="Rolled-up Lead-Time Offset";
                Visible=FALSE }

  }
  CODE
  {
    VAR
      Item@1004 : Record 27;
      AsmHeader@1009 : Record 900;
      ProdOrderLine@1002 : Record 5406;
      ItemAvailFormsMgt@1011 : Codeunit 353;
      IsParentExpr@1010 : Boolean INDATASET;
      ItemFilter@1008 : Code[250];
      LocationFilter@1007 : Code[250];
      VariantFilter@1006 : Code[250];
      DemandDate@1003 : Date;
      IsCalculated@1000 : Boolean;
      ShowTotalAvailability@1001 : Boolean;
      ShowBy@1005 : 'Item,Assembly,Production';
      Text000@1012 : TextConst 'ENU=Could not find items with BOM levels.;ENG=Could not find items with BOM levels.';
      Text001@1013 : TextConst 'ENU=There are no warnings.;ENG=There are no warnings.';
      HasWarning@1014 : Boolean INDATASET;

    PROCEDURE InitItem@1(VAR NewItem@1000 : Record 27);
    BEGIN
      Item.COPY(NewItem);
      ItemFilter := Item."No.";
      VariantFilter := Item.GETFILTER("Variant Filter");
      LocationFilter := Item.GETFILTER("Location Filter");
      ShowBy := ShowBy::Item;
    END;

    PROCEDURE InitAsmOrder@5(NewAsmHeader@1000 : Record 900);
    BEGIN
      AsmHeader := NewAsmHeader;
      ShowBy := ShowBy::Assembly;
    END;

    PROCEDURE InitProdOrder@6(NewProdOrderLine@1000 : Record 5406);
    BEGIN
      ProdOrderLine := NewProdOrderLine;
      ShowBy := ShowBy::Production;
    END;

    PROCEDURE InitDate@4(NewDemandDate@1000 : Date);
    BEGIN
      DemandDate := NewDemandDate;
    END;

    LOCAL PROCEDURE RefreshPage@2();
    VAR
      CalcBOMTree@1000 : Codeunit 5870;
    BEGIN
      Item.SETRANGE("Date Filter",0D,DemandDate);
      Item.SETFILTER("Location Filter",LocationFilter);
      Item.SETFILTER("Variant Filter",VariantFilter);
      Item.SETFILTER("No.",ItemFilter);
      CalcBOMTree.SetItemFilter(Item);

      CalcBOMTree.SetShowTotalAvailability(ShowTotalAvailability);
      CASE ShowBy OF
        ShowBy::Item:
          BEGIN
            Item.FINDFIRST;
            IF NOT Item.HasBOM THEN
              ERROR(Text000);
            CalcBOMTree.GenerateTreeForItems(Item,Rec,1);
          END;
        ShowBy::Production:
          BEGIN
            ProdOrderLine."Due Date" := DemandDate;
            CalcBOMTree.GenerateTreeForProdLine(ProdOrderLine,Rec,1);
          END;
        ShowBy::Assembly:
          BEGIN
            AsmHeader."Due Date" := DemandDate;
            CalcBOMTree.GenerateTreeForAsm(AsmHeader,Rec,1);
          END;
      END;

      CurrPage.UPDATE(FALSE);
      IsCalculated := TRUE;
    END;

    PROCEDURE GetSelectedDate@3() : Date;
    BEGIN
      EXIT(DemandDate);
    END;

    LOCAL PROCEDURE ItemAvail@7(AvailType@1000 : Option);
    VAR
      Item@1001 : Record 27;
    BEGIN
      TESTFIELD(Type,Type::Item);

      Item.GET("No.");
      Item.SETFILTER("No.","No.");
      Item.SETRANGE("Date Filter",0D,"Needed by Date");
      Item.SETFILTER("Location Filter",LocationFilter);
      Item.SETFILTER("Variant Filter","Variant Code");
      IF ShowBy <> ShowBy::Item THEN
        Item.SETFILTER("Location Filter","Location Code");
      IF Indentation = 0 THEN
        Item.SETFILTER("Variant Filter",VariantFilter);

      ItemAvailFormsMgt.ShowItemAvailFromItem(Item,AvailType);
    END;

    LOCAL PROCEDURE ShowAbleToMakeTimeline@8();
    VAR
      Item@1001 : Record 27;
      ItemAbleToMakeTimeline@1002 : Report 5871;
    BEGIN
      TESTFIELD(Type,Type::Item);

      Item.GET("No.");
      Item.SETFILTER("No.","No.");

      WITH ItemAbleToMakeTimeline DO BEGIN
        IF Indentation = 0 THEN BEGIN
          CASE ShowBy OF
            ShowBy::Item:
              BEGIN
                Item.SETFILTER("Location Filter",LocationFilter);
                Item.SETFILTER("Variant Filter",VariantFilter);
              END;
            ShowBy::Assembly:
              InitAsmOrder(AsmHeader);
            ShowBy::Production:
              InitProdOrder(ProdOrderLine);
          END;
        END ELSE BEGIN
          Item.SETFILTER("Location Filter",LocationFilter);
          Item.SETFILTER("Variant Filter",VariantFilter);
        END;

        SETTABLEVIEW(Item);
        Initialize("Needed by Date",0,7,TRUE);
        RUN;
      END;
    END;

    LOCAL PROCEDURE ShowWarnings@10();
    VAR
      TempBOMWarningLog@1001 : TEMPORARY Record 5874;
    BEGIN
      IF IsLineOk(TRUE,TempBOMWarningLog) THEN
        MESSAGE(Text001)
      ELSE
        PAGE.RUNMODAL(PAGE::"BOM Warning Log",TempBOMWarningLog);
    END;

    LOCAL PROCEDURE ShowWarningsForAllLines@27();
    VAR
      TempBOMWarningLog@1001 : TEMPORARY Record 5874;
    BEGIN
      IF AreAllLinesOk(TempBOMWarningLog) THEN
        MESSAGE(Text001)
      ELSE
        PAGE.RUNMODAL(PAGE::"BOM Warning Log",TempBOMWarningLog);
    END;

    BEGIN
    END.
  }
}

