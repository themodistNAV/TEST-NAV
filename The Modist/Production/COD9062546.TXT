OBJECT Codeunit 9062546 Quick Report Filtering
{
  OBJECT-PROPERTIES
  {
    Date=10/05/16;
    Time=12:00:00 PM;
    Version List=NA2016.15;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      TnpToolkit@1000000014 : Codeunit 9062230;
      MyReportsVisible@1000000000 : Boolean;
      PublicReportsVisible@1000000001 : Boolean;
      PrivateReportsVisible@1000000002 : Boolean;
      BlockedReportsVisible@1000000005 : Boolean;
      TemporaryReportsVisible@1000000003 : Boolean;
      UserIdFilter@1000000004 : Code[1024];
      tVisible@1000000011 : TextConst 'ENU=Visible;ENG=Visible';
      tHidden@1000000012 : TextConst 'ENU=Hidden;ENG=Hidden';

    PROCEDURE "--- General ---"@1000000012();
    BEGIN
    END;

    PROCEDURE InitialiseFilters@1000000003(VAR pQuickReportHeader@1000000000 : Record 9062697);
    BEGIN
      //DOC NA2015.7 - Initialising (quick report) filters
      //  <> pQuickReportHeader: Recordset to initialise

      MyReportsVisible := TRUE;
      PublicReportsVisible := TRUE;
      PrivateReportsVisible := FALSE;
      TemporaryReportsVisible := FALSE;

      UpdateFilters(pQuickReportHeader);
    END;

    PROCEDURE UpdateFilters@1000000002(VAR pQuickReportHeader@1000000000 : Record 9062697);
    VAR
      lUserIdFilter@1000000001 : Code[250];
    BEGIN
      //DOC NA2015.7 - Updating (quick report) filters
      //  <> pQuickReportHeader: Recordset to update

      pQuickReportHeader.FILTERGROUP(2);

      IF ((MyReportsVisible) AND (PublicReportsVisible) AND (PrivateReportsVisible)) THEN
        pQuickReportHeader.SETRANGE("User ID")
      ELSE
      BEGIN
        ClearUserIdFilter();
        IF (MyReportsVisible) THEN
          AddToUserIdFilter(USERID);
        IF (PublicReportsVisible) THEN
          AddToUserIdFilter('''''');
        IF (PrivateReportsVisible) THEN
          AddToUserIdFilter(STRSUBSTNO('<>%1', USERID));
        IF (UserIdFilter <> '') THEN
          pQuickReportHeader.SETFILTER("User ID", UserIdFilter)
        ELSE
          pQuickReportHeader.SETFILTER("User ID", '0&1');
      END;

      IF (BlockedReportsVisible) THEN
        pQuickReportHeader.SETRANGE(Blocked)
      ELSE
        pQuickReportHeader.SETRANGE(Blocked, FALSE);

      IF (TemporaryReportsVisible) THEN
        pQuickReportHeader.SETRANGE("Temporary")
      ELSE
        pQuickReportHeader.SETRANGE("Temporary", FALSE);

      pQuickReportHeader.FILTERGROUP(0);
    END;

    PROCEDURE "--- My / Public ---"@1000000021();
    BEGIN
    END;

    PROCEDURE MakeMy@1000000025(VAR pQuickReportHeader@1000000000 : Record 9062697) : Boolean;
    VAR
      eConfirmation@1000000001 : TextConst 'ENU=Do you want to mark the "%1" report as yours?;ENG=Do you want to mark the "%1" report as yours?';
      lText@1000000002 : Text;
    BEGIN
      //DOC NA2015.7 - Make the report "my"
      //  <> pQuickReportHeader: The quick report header
      //  <- TRUE = Changed, FALSE = Not

      IF ( NOT (MakeMyEnabled(pQuickReportHeader))) THEN
        EXIT(FALSE);

      lText := TnpToolkit.IIFText(pQuickReportHeader.Name <> '', pQuickReportHeader.Name, pQuickReportHeader.Code);
      IF ( NOT (CONFIRM(eConfirmation, TRUE, lText))) THEN
        EXIT(FALSE);

      pQuickReportHeader.VALIDATE("User ID", USERID);
      pQuickReportHeader.MODIFY(TRUE);

      EXIT(TRUE);
    END;

    PROCEDURE MakeMyEnabled@1000000027(pQuickReportHeader@1000000000 : Record 9062697) : Boolean;
    BEGIN
      //DOC NA2015.7 - Returning if "my" is enabled
      //  -> pQuickReportHeader: The current quick report header
      //  <- Answer

      EXIT(( NOT (pQuickReportHeader."Temporary")) AND ( NOT (pQuickReportHeader.Blocked)) AND (pQuickReportHeader."User ID" = ''));
    END;

    PROCEDURE MakePublic@1000000016(VAR pQuickReportHeader@1000000000 : Record 9062697) : Boolean;
    VAR
      lText@1000000001 : Text;
      eConfirmation@1000000002 : TextConst 'ENU=Do you want to make the "%1" report public?;ENG=Do you want to make the "%1" report public?';
    BEGIN
      //DOC NA2015.7 - Make the report public
      //  <> pQuickReportHeader: The quick report header
      //  <- TRUE = Changed, FALSE = Not

      IF ( NOT (MakePublicEnabled(pQuickReportHeader))) THEN
        EXIT(FALSE);

      lText := TnpToolkit.IIFText(pQuickReportHeader.Name <> '', pQuickReportHeader.Name, pQuickReportHeader.Code);
      IF ( NOT (CONFIRM(eConfirmation, TRUE, lText))) THEN
        EXIT(FALSE);

      pQuickReportHeader.VALIDATE("User ID", '');
      pQuickReportHeader.MODIFY(TRUE);

      EXIT(TRUE);
    END;

    PROCEDURE MakePublicEnabled@1000000028(pQuickReportHeader@1000000000 : Record 9062697) : Boolean;
    BEGIN
      //DOC NA2015.7 - Returning if "public" is enabled
      //  -> pQuickReportHeader: The current quick report header
      //  <- Answer

      EXIT(( NOT (pQuickReportHeader."Temporary")) AND ( NOT (pQuickReportHeader.Blocked)) AND (pQuickReportHeader."User ID" <> ''));
    END;

    PROCEDURE "--- Showing / Hiding ---"@1000000013();
    BEGIN
    END;

    PROCEDURE ShowHideMyReports@1000000005(VAR pQuickReportHeader@1000000000 : Record 9062697);
    BEGIN
      //DOC NA2015.7 - Showing / hiding my reports
      //  <> pQuickReportHeader: Recordset to update

      MyReportsVisible := ( NOT (MyReportsVisible));

      UpdateFilters(pQuickReportHeader);
    END;

    PROCEDURE ShowHidePublicReports@1000000007(VAR pQuickReportHeader@1000000000 : Record 9062697);
    BEGIN
      //DOC NA2015.7 - Showing / hiding public reports
      //  <> pQuickReportHeader: Recordset to update

      PublicReportsVisible := ( NOT (PublicReportsVisible));

      UpdateFilters(pQuickReportHeader);
    END;

    PROCEDURE ShowHidePrivateReports@1000000006(VAR pQuickReportHeader@1000000000 : Record 9062697);
    BEGIN
      //DOC NA2015.7 - Showing / hiding private reports
      //  <> pQuickReportHeader: Recordset to update

      PrivateReportsVisible := ( NOT (PrivateReportsVisible));

      UpdateFilters(pQuickReportHeader);
    END;

    PROCEDURE ShowHideBlockedReports@1000000000(VAR pQuickReportHeader@1000000000 : Record 9062697);
    BEGIN
      //DOC NA2015.7 - Showing / hiding private reports
      //  <> pQuickReportHeader: Recordset to update

      BlockedReportsVisible := ( NOT (BlockedReportsVisible));

      UpdateFilters(pQuickReportHeader);
    END;

    PROCEDURE ShowHideTemporaryReports@1000000017(VAR pQuickReportHeader@1000000000 : Record 9062697);
    BEGIN
      //DOC NA2015.7 - Showing / hiding tempoarary reports
      //  <> pQuickReportHeader: Recordset to update

      TemporaryReportsVisible := ( NOT (TemporaryReportsVisible));

      UpdateFilters(pQuickReportHeader);
    END;

    PROCEDURE "--- Texts ---"@1000000014();
    BEGIN
    END;

    PROCEDURE MyReportsText@1000000008() : Text;
    BEGIN
      //DOC NA2015.7 - Returning if my reports are visible
      //  <- The answer

      EXIT(ReportsText(MyReportsVisible));
    END;

    PROCEDURE PublicReportsText@1000000009() : Text;
    BEGIN
      //DOC NA2015.7 - Returning if public reports are visible
      //  <- The answer

      EXIT(ReportsText(PublicReportsVisible));
    END;

    PROCEDURE PrivateReportsText@1000000010() : Text;
    BEGIN
      //DOC NA2015.7 - Returning if private reports are visible
      //  <- The answer

      EXIT(ReportsText(PrivateReportsVisible));
    END;

    PROCEDURE BlockedReportsText@1000000015() : Text;
    BEGIN
      //DOC NA2015.7 - Returning if temporary reports are visible
      //  <- The answer

      EXIT(ReportsText(BlockedReportsVisible));
    END;

    PROCEDURE TemporaryReportsText@1000000019() : Text;
    BEGIN
      //DOC NA2015.7 - Returning if temporary reports are visible
      //  <- The answer

      EXIT(ReportsText(TemporaryReportsVisible));
    END;

    PROCEDURE "--- Styles ---"@1000000001();
    BEGIN
    END;

    PROCEDURE GetStyles@1000000011(VAR pMyReportsStyle@1000000000 : Text;VAR pPublicReportsStyle@1000000004 : Text;VAR pPrivateReportsStyle@1000000003 : Text;VAR pBlockedReportsStyle@1000000002 : Text;VAR pTemporaryReportsStyle@1000000001 : Text);
    BEGIN
      //DOC NA2015.7 - Returning styles
      //  <> pMyReportsStyle: Target my reports style
      //  <> pPublicReportsStyle: Target public reports style
      //  <> pPrivateReportsStyle: Target private reports style
      //  <> pBlockedReportsStyle: Target blocked reports style
      //  <> pTemporaryReportsStyle: Target temporary reports style

      pMyReportsStyle := Style(MyReportsVisible);
      pPublicReportsStyle := Style(PublicReportsVisible);
      pPrivateReportsStyle := Style(PrivateReportsVisible);
      pBlockedReportsStyle := Style(BlockedReportsVisible);
      pTemporaryReportsStyle := Style(TemporaryReportsVisible);
    END;

    LOCAL PROCEDURE "--- Internal ---"@1000000022();
    BEGIN
    END;

    LOCAL PROCEDURE ClearUserIdFilter@1000000023();
    BEGIN
      //DOC NA2015.7 - Clearing user ID global filter

      UserIdFilter := '';
    END;

    LOCAL PROCEDURE AddToUserIdFilter@1000000024(pFilter@1000000000 : Code[1024]);
    BEGIN
      //DOC NA2015.7 - Adding to user ID global filter
      //  -> pFilter: Filter to add

      IF (UserIdFilter <> '') THEN
        UserIdFilter := UserIdFilter + '|';
      UserIdFilter := UserIdFilter + pFilter;
    END;

    LOCAL PROCEDURE ReportsText@1000000004(pVisible@1000000001 : Boolean) : Text;
    BEGIN
      //DOC NA2015.7 - Returning reports text
      //  -> pVisible: Visibiliy flag
      //  <- The text

      EXIT(TnpToolkit.IIFText(pVisible, tVisible, tHidden));
    END;

    LOCAL PROCEDURE Style@1000000020(pVisible@1000000000 : Boolean) : Text;
    BEGIN
      //DOC NA2015.7 - Returning style
      //  -> pVisible: Visibiliy flag
      //  <- The style

      EXIT(TnpToolkit.IIFText(pVisible, 'StandardAccent', 'Subordinate'));
    END;

    BEGIN
    {
      //DOC NA2015.7  JH 28/05/2015 - Created
      //DOC NA2016.7  JH 28/08/2015 - Upgraded to 2016
      //DOC NA2016.15 JH 09/05/2016 - CfMD modifications
    }
    END.
  }
}

