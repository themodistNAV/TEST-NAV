OBJECT Table 9062704 Questionnaire
{
  OBJECT-PROPERTIES
  {
    Date=10/05/16;
    Time=12:00:00 PM;
    Version List=NA2016.15;
  }
  PROPERTIES
  {
    DataCaptionFields=Questionnaire Template Code,Description;
    OnInsert=BEGIN
               IF (ISNULLGUID("Questionnaire GUID")) THEN
                 "Questionnaire GUID" := CREATEGUID();

               IF ("Created by User ID" = '') THEN BEGIN
                 IF ("Created by Contact No." = '') THEN
                   VALIDATE("Created by User ID", USERID)
                 ELSE
                   "Created by User ID" := USERID;
               END;
               IF ("Created Date Time" = 0DT) THEN
                 "Created Date Time" := CURRENTDATETIME;
             END;

    OnDelete=VAR
               QuestionnaireLine@1000000000 : Record 9062705;
             BEGIN
               QuestionnaireLine.SETRANGE("Questionnaire No.","Questionnaire No.");
               QuestionnaireLine.DELETEALL(TRUE);
             END;

    CaptionML=[ENU=Questionnaire;
               ENG=Questionnaire];
    LookupPageID=Page9063012;
    DrillDownPageID=Page9063012;
  }
  FIELDS
  {
    { 1   ;   ;Questionnaire Template Code;Code20 ;TableRelation="Questionnaire Template";
                                                   CaptionML=[ENU=Questionnaire Template Code;
                                                              ENG=Questionnaire Template Code] }
    { 2   ;   ;Questionnaire No.   ;Integer       ;AutoIncrement=Yes;
                                                   CaptionML=[ENU=Questionnaire No.;
                                                              ENG=Questionnaire No.] }
    { 5   ;   ;Name                ;Text100       ;CaptionML=[ENU=Name;
                                                              ENG=Name] }
    { 9   ;   ;Questionnaire GUID  ;GUID          ;CaptionML=[ENU=Questionnaire GUID;
                                                              ENG=Questionnaire GUID] }
    { 10  ;   ;Description         ;Text250       ;CaptionML=[ENU=Description;
                                                              ENG=Description] }
    { 11  ;   ;Related Table No.   ;Integer       ;TableRelation=AllObjWithCaption."Object ID" WHERE (Object Type=CONST(Table));
                                                   OnValidate=BEGIN
                                                                IF ("Related Table No." <> xRec."Related Table No.") THEN BEGIN
                                                                  VALIDATE("Related Record Position", '');
                                                                  "Related Record PK Value 1" := '';
                                                                  "Related Record PK Value 2" := '';
                                                                  "Related Record PK Value 3" := '';
                                                                  CALCFIELDS("Related Table Name");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Related Table No.;
                                                              ENG=Related Table No.] }
    { 12  ;   ;Related Table Name  ;Text80        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObj."Object Name" WHERE (Object Type=CONST(Table),
                                                                                                  Object ID=FIELD(Related Table No.)));
                                                   CaptionML=[ENU=Related Table Name;
                                                              ENG=Related Table Name];
                                                   Editable=No }
    { 21  ;   ;Related Record Position;Text250    ;OnValidate=BEGIN
                                                                IF ("Related Record Position" <> '') THEN BEGIN
                                                                  TESTFIELD("Related Table No.");
                                                                  "Related Record Description" := TNPToolkit.PositionToDescription("Related Table No.", "Related Record Position");
                                                                  "Related Record PK Value 1" := TNPUtils.GetPrimaryKey("Related Table No.", "Related Record Position", 1);
                                                                  "Related Record PK Value 2" := TNPUtils.GetPrimaryKey("Related Table No.", "Related Record Position", 2);
                                                                  "Related Record PK Value 3" := TNPUtils.GetPrimaryKey("Related Table No.", "Related Record Position", 3);
                                                                  "Related Record PK Value 4" := TNPUtils.GetPrimaryKey("Related Table No.", "Related Record Position", 4);
                                                                  "Related Record PK Value 5" := TNPUtils.GetPrimaryKey("Related Table No.", "Related Record Position", 5);
                                                                END ELSE
                                                                  "Related Record Description" := '';
                                                              END;

                                                   CaptionML=[ENU=Related Record Position;
                                                              ENG=Related Record Position] }
    { 22  ;   ;Related Record Description;Text250 ;OnLookup=BEGIN
                                                              ShowRelatedRecord();
                                                            END;

                                                   CaptionML=[ENU=Related Record Description;
                                                              ENG=Related Record Description] }
    { 23  ;   ;Related Record PK Value 1;Code50   ;TableRelation=IF (Related Table No.=CONST(18)) Customer
                                                                 ELSE IF (Related Table No.=CONST(23)) Vendor
                                                                 ELSE IF (Related Table No.=CONST(81)) "Gen. Journal Line"
                                                                 ELSE IF (Related Table No.=CONST(270)) "Bank Account"
                                                                 ELSE IF (Related Table No.=CONST(5200)) Employee
                                                                 ELSE IF (Related Table No.=CONST(5600)) "Fixed Asset";
                                                   CaptionML=[ENU=Primary Key Value 1;
                                                              ENG=Primary Key Value 1;
                                                              ENC=Primary Key Value 1] }
    { 24  ;   ;Related Record PK Value 2;Code50   ;CaptionML=[ENU=Primary Key Value 2;
                                                              ENG=Primary Key Value 2;
                                                              ENC=Primary Key Value 2] }
    { 25  ;   ;Related Record PK Value 3;Code50   ;CaptionML=[ENU=Primary Key Value 3;
                                                              ENG=Primary Key Value 3;
                                                              ENC=Primary Key Value 3] }
    { 26  ;   ;Related Record PK Value 4;Code50   ;CaptionML=[ENU=Primary Key Value 2;
                                                              ENG=Primary Key Value 2;
                                                              ENC=Primary Key Value 2] }
    { 27  ;   ;Related Record PK Value 5;Code50   ;CaptionML=[ENU=Primary Key Value 3;
                                                              ENG=Primary Key Value 3;
                                                              ENC=Primary Key Value 3] }
    { 30  ;   ;Assigned to Contact No.;Code20     ;TableRelation=Contact;
                                                   CaptionML=[ENU=Assigned to Contact No.;
                                                              ENG=Assigned to Contact No.] }
    { 31  ;   ;Created by Contact No.;Code20      ;OnValidate=BEGIN
                                                                //DOC NA2015.10 >>
                                                                IF ("Created by Contact No." <> '') THEN BEGIN
                                                                  nAblementUser.RESET();
                                                                  nAblementUser.SETCURRENTKEY("Contact No.");
                                                                  nAblementUser.SETRANGE("Contact No.", "Created by Contact No.");
                                                                  IF (nAblementUser.FINDFIRST()) THEN
                                                                    "Created by User ID" := nAblementUser."User ID";
                                                                END;
                                                                //DOC NA2015.10 <<
                                                              END;

                                                   CaptionML=[ENU=Created by Contact No.;
                                                              ENG=Created by Contact No.];
                                                   Description=NA2015.8 }
    { 32  ;   ;Created by User ID  ;Code50        ;OnValidate=BEGIN
                                                                "Created by Contact No." := '';
                                                                IF ("Created by User ID" <> '') THEN BEGIN
                                                                  IF (nAblementUser.GET("Created by User ID")) THEN
                                                                    "Created by Contact No." := nAblementUser."Contact No.";
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Created by User ID;
                                                              ENG=Created by User ID];
                                                   Description=NA2015.8 }
    { 33  ;   ;Created Date Time   ;DateTime      ;CaptionML=[ENU=Created Date Time;
                                                              ENG=Created Date Time];
                                                   Description=NA2015.8 }
    { 40  ;   ;On Finish - Status  ;Option        ;CaptionML=[ENU=On Finish - Status;
                                                              ENG=On Finish - Status];
                                                   OptionCaptionML=[ENU=" ,Success,Failure,Ready to Run";
                                                                    ENG=" ,Success,Failure,Ready to Run"];
                                                   OptionString=[ ,Success,Failure,Ready to Run] }
    { 41  ;   ;On Finish - Status Text;Text250    ;CaptionML=[ENU=On Finish - Status Text;
                                                              ENG=On Finish - Status Text];
                                                   Editable=No }
    { 42  ;   ;On Finish - Table No.;Integer      ;OnLookup=BEGIN
                                                              "On Finish - Run CU Name" := ObjectFieldToolkit.GetTableName("On Finish - Table No.");
                                                            END;

                                                   CaptionML=[ENU=On Finish - Table No.;
                                                              ENG=On Finish - Table No.];
                                                   Editable=No }
    { 43  ;   ;On Finish - Table Name;Text30      ;CaptionML=[ENU=On Finish - Table Name;
                                                              ENG=On Finish - Table Name];
                                                   Editable=No }
    { 44  ;   ;On Finish - Record Position;Text250;OnValidate=BEGIN
                                                                "On Finish - Record Description" := TNPToolkit.PositionToDescription("On Finish - Table No.", "On Finish - Record Position");
                                                              END;

                                                   CaptionML=[ENU=On Finish - Record Position;
                                                              ENG=On Finish - Record Position];
                                                   Editable=No }
    { 45  ;   ;On Finish - Record Description;Text250;
                                                   CaptionML=[ENU=On Finish - Record Description;
                                                              ENG=On Finish - Record Description];
                                                   Editable=No }
    { 50  ;   ;On Finish - Run CU ID;Integer      ;CaptionML=[ENU=On Finish - Run Codeunit ID;
                                                              ENG=On Finish - Run Codeunit ID] }
    { 51  ;   ;On Finish - Run CU Name;Text30     ;OnLookup=VAR
                                                              CodeunitID@1000000000 : Integer;
                                                            BEGIN
                                                            END;

                                                   CaptionML=[ENU=On Finish - Run Codeunit Name;
                                                              ENG=On Finish - Run Codeunit Name] }
    { 52  ;   ;On Finish - Run CU Auto.;Boolean   ;InitValue=Yes;
                                                   CaptionML=[ENU=On Finish - Run CU Automatically;
                                                              ENG=On Finish - Run CU Automatically] }
    { 53  ;   ;On Finish - Run Actions Auto.;Boolean;
                                                   CaptionML=[ENU=On Finish - Run Actions Automatically;
                                                              ENG=On Finish - Run Actions Automatically];
                                                   Description=NA2015.9 }
    { 54  ;   ;On Finish - Run CU Status;Option   ;CaptionML=[ENU=On Finish - Run CU Status;
                                                              ENG=On Finish - Run CU Status];
                                                   OptionCaptionML=[ENU=Ready,Finished;
                                                                    ENG=Ready,Finished];
                                                   OptionString=Ready,Finished;
                                                   Description=NA2015.9 }
    { 55  ;   ;On Finish - Run Actions Status;Option;
                                                   CaptionML=[ENU=On Finish - Run Actions Status;
                                                              ENG=On Finish - Run Actions Status];
                                                   OptionCaptionML=[ENU=Ready,Finished;
                                                                    ENG=Ready,Finished];
                                                   OptionString=Ready,Finished;
                                                   Description=NA2015.9 }
    { 100 ;   ;Current Line No.    ;Integer       ;CaptionML=[ENU=Current Line No.;
                                                              ENG=Current Line No.] }
    { 101 ;   ;Current Page No.    ;Integer       ;CaptionML=[ENU=Current Page No.;
                                                              ENG=Current Page No.] }
    { 102 ;   ;Current Group No.   ;Integer       ;CaptionML=[ENU=Current Group No.;
                                                              ENG=Current Group No.] }
    { 103 ;   ;Finished            ;Boolean       ;OnValidate=BEGIN
                                                                IF (Finished <> xRec.Finished) THEN BEGIN
                                                                  IF (Finished) THEN BEGIN
                                                                    //Check Allowed to be Finished
                                                                    CALCFIELDS("No. UnAnswered Reqd. Questions");
                                                                    IF "No. UnAnswered Reqd. Questions" <> 0 THEN ERROR(STRSUBSTNO(eUnansweredReqdQuest,"No. UnAnswered Reqd. Questions"));

                                                                    "Closed by User ID" := USERID;
                                                                    "Closing Date" := TODAY;
                                                                    "Closing Time" := TIME;
                                                                    IF (nAblementUser.GET("Closed by User ID")) THEN
                                                                      "Closed by Contact No." := nAblementUser."Contact No."
                                                                    ELSE
                                                                      "Closed by Contact No." := '';

                                                                    QuestManagement.FinishInstance(Rec,"On Finish - Run CU Auto.", "On Finish - Run Actions Auto.");
                                                                    IF "On Finish - Status" <> "On Finish - Status"::" " THEN MESSAGE(tFinished,"On Finish - Status","On Finish - Status Text");
                                                                  END ELSE BEGIN
                                                                    "Closed by User ID" := '';
                                                                    "Closed by Contact No." := '';
                                                                    "Closing Date" := 0D;
                                                                    "Closing Time" := 0T;
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Finished;
                                                              ENG=Finished] }
    { 104 ;   ;Current Line Sequence;Integer      ;CaptionML=[ENU=Current Line Sequence;
                                                              ENG=Current Line Sequence] }
    { 105 ;   ;Closed by User ID   ;Code50        ;CaptionML=[ENU=Closed by User ID;
                                                              ENG=Closed by User ID] }
    { 106 ;   ;Closed by Contact No.;Code20       ;CaptionML=[ENU=Closed by Contact No.;
                                                              ENG=Closed by Contact No.] }
    { 107 ;   ;Closing Date        ;Date          ;CaptionML=[ENU=Closing Date;
                                                              ENG=Closing Date] }
    { 108 ;   ;Closing Time        ;Time          ;CaptionML=[ENU=Closing Time;
                                                              ENG=Closing Time] }
    { 109 ;   ;Status              ;Option        ;CaptionML=[ENU=Status;
                                                              ENG=Status];
                                                   OptionCaptionML=[ENU=Not Started,Started,Finished;
                                                                    ENG=Not Started,Started,Finished];
                                                   OptionString=Not Started,Started,Finished }
    { 201 ;   ;First Active Page No.;Integer      ;FieldClass=FlowField;
                                                   CalcFormula=Min("Questionnaire Line"."Page No." WHERE (Questionnaire No.=FIELD(Questionnaire No.),
                                                                                                          Line Type=CONST(Question),
                                                                                                          Skip=CONST(No)));
                                                   CaptionML=[ENU=First Active Page No.;
                                                              ENG=First Active Page No.];
                                                   Editable=No }
    { 202 ;   ;Last Active Page No.;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Max("Questionnaire Line"."Page No." WHERE (Questionnaire No.=FIELD(Questionnaire No.),
                                                                                                          Line Type=CONST(Question),
                                                                                                          Skip=CONST(No)));
                                                   CaptionML=[ENU=Last Active Page No.;
                                                              ENG=Last Active Page No.];
                                                   Editable=No }
    { 203 ;   ;First Active Line Sequence;Integer ;FieldClass=FlowField;
                                                   CalcFormula=Min("Questionnaire Line".Sequence WHERE (Questionnaire No.=FIELD(Questionnaire No.),
                                                                                                        Line Type=CONST(Question),
                                                                                                        Skip=CONST(No)));
                                                   CaptionML=[ENU=First Active Line Sequence;
                                                              ENG=First Active Line Sequence];
                                                   Editable=No }
    { 204 ;   ;Last Active Line Sequence;Integer  ;FieldClass=FlowField;
                                                   CalcFormula=Max("Questionnaire Line".Sequence WHERE (Questionnaire No.=FIELD(Questionnaire No.),
                                                                                                        Line Type=CONST(Question),
                                                                                                        Skip=CONST(No)));
                                                   CaptionML=[ENU=Last Active Line Sequence;
                                                              ENG=Last Active Line Sequence];
                                                   Editable=No }
    { 205 ;   ;First Empty Page No.;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Min("Questionnaire Line"."Page No." WHERE (Questionnaire No.=FIELD(Questionnaire No.),
                                                                                                          Line Type=CONST(Question),
                                                                                                          Skip=CONST(No),
                                                                                                          Answered=CONST(No)));
                                                   CaptionML=[ENU=First Empty Page No.;
                                                              ENG=First Empty Page No.];
                                                   Editable=No }
    { 206 ;   ;No. UnAnswered Questions;Integer   ;FieldClass=FlowField;
                                                   CalcFormula=Count("Questionnaire Line" WHERE (Questionnaire Template Code=FIELD(Questionnaire Template Code),
                                                                                                 Questionnaire No.=FIELD(Questionnaire No.),
                                                                                                 Line Type=CONST(Question),
                                                                                                 Answered=CONST(No),
                                                                                                 Skip=CONST(No),
                                                                                                 Hidden=CONST(No)));
                                                   CaptionML=[ENU=No. UnAnswered Questions;
                                                              ENG=No. UnAnswered Questions];
                                                   Editable=No }
    { 207 ;   ;No. UnAnswered Reqd. Questions;Integer;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Count("Questionnaire Line" WHERE (Questionnaire Template Code=FIELD(Questionnaire Template Code),
                                                                                                 Questionnaire No.=FIELD(Questionnaire No.),
                                                                                                 Line Type=CONST(Question),
                                                                                                 Answered=CONST(No),
                                                                                                 Required=CONST(Yes),
                                                                                                 Hidden=CONST(No),
                                                                                                 Skip=CONST(No)));
                                                   CaptionML=[ENU=No. UnAnswered Reqd. Questions;
                                                              ENG=No. UnAnswered Reqd. Questions];
                                                   Editable=No }
    { 208 ;   ;No. Answered Questions;Integer     ;FieldClass=FlowField;
                                                   CalcFormula=Count("Questionnaire Line" WHERE (Questionnaire Template Code=FIELD(Questionnaire Template Code),
                                                                                                 Questionnaire No.=FIELD(Questionnaire No.),
                                                                                                 Line Type=CONST(Question),
                                                                                                 Answered=CONST(Yes),
                                                                                                 Skip=CONST(No),
                                                                                                 Hidden=CONST(No)));
                                                   CaptionML=[ENU=No. Answered Questions;
                                                              ENG=No. Answered Questions];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Questionnaire No.                       ;Clustered=Yes }
    {    ;Questionnaire Template Code              }
    {    ;Questionnaire GUID                       }
    {    ;Related Table No.,Related Record Position }
    {    ;Related Table No.,Related Record PK Value 1,Related Record PK Value 2,Related Record PK Value 3,Created Date Time }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      QuestLine@1000000001 : Record 9062705;
      nAblementUser@1000000009 : Record 9062729;
      TNPToolkit@1000000000 : Codeunit 9062230;
      eUnansweredReqdQuest@1000000002 : TextConst 'ENU=You cannot finish this Questionnaire as %1 required question(s) are unanswered;ENG=You cannot finish this Questionnaire as %1 required question(s) are unanswered';
      QuestManagement@1000000003 : Codeunit 9062540;
      ObjectFieldToolkit@1000000004 : Codeunit 9062343;
      TNPUtils@1000000005 : Codeunit 9062229;
      tFinished@1000000006 : TextConst 'ENU=Status: %1\%2;ENG=Status: %1\%2';
      SysB@1000000007 : Record 9062230;
      TxtExtMgt@1000000008 : Codeunit 9062250;

    LOCAL PROCEDURE "--- Question Processing ---"@1000000006();
    BEGIN
    END;

    LOCAL PROCEDURE GetQuestionText@1000000001(StarForRequired@1000000000 : Boolean) : Text;
    BEGIN
      GetCurrLine();
      EXIT(QuestLine.GetQuestionText(StarForRequired));
    END;

    LOCAL PROCEDURE SetAnswerText@1000000002(AnswerText@1000000000 : Text) : Text;
    BEGIN
      GetCurrLine();
      QuestLine.VALIDATE("Text Input", AnswerText);
      QuestLine.MODIFY();
      EXIT(QuestLine."Text Input");
    END;

    LOCAL PROCEDURE SelectNextLine@1000000003() : Boolean;
    BEGIN
      FilterActiveQuestions();
      QuestLine.SETFILTER(Sequence, '>%1', "Current Line Sequence");
      IF (QuestLine.FINDFIRST()) THEN BEGIN
        "Current Line No." := QuestLine."Line No.";
        "Current Line Sequence" := QuestLine.Sequence;
        MODIFY();
        EXIT(TRUE);
      END;
      EXIT(FALSE);
    END;

    LOCAL PROCEDURE SelectPrevLine@1000000004() : Boolean;
    BEGIN
      FilterActiveQuestions();
      QuestLine.SETFILTER(Sequence, '<%1', "Current Line Sequence");
      IF (QuestLine.FINDLAST()) THEN BEGIN
        "Current Line No." := QuestLine."Line No.";
        "Current Line Sequence" := QuestLine.Sequence;
        MODIFY();
        EXIT(TRUE);
      END;
      EXIT(FALSE);
    END;

    LOCAL PROCEDURE SelectFirstLine@1000000005() : Boolean;
    BEGIN
      FilterActiveQuestions();
      IF (QuestLine.FINDFIRST()) THEN BEGIN
        "Current Line No." := QuestLine."Line No.";
        "Current Line Sequence" := QuestLine.Sequence;
        MODIFY();
        EXIT(TRUE);
      END;
      EXIT(FALSE);
    END;

    LOCAL PROCEDURE IsLastLine@1000000009() : Boolean;
    BEGIN
      FilterActiveQuestions();
      QuestLine.SETFILTER(Sequence, '>%1', "Current Line Sequence");
      EXIT(QuestLine.ISEMPTY);
    END;

    LOCAL PROCEDURE GetCurrLine@1000000008();
    BEGIN
      QuestLine.GET("Questionnaire No.", "Current Line No.");
    END;

    LOCAL PROCEDURE FilterActiveQuestions@1000000007();
    BEGIN
      QuestLine.RESET();
      QuestLine.SETCURRENTKEY("Questionnaire No.", Sequence);
      QuestLine.SETRANGE("Questionnaire No.", "Questionnaire No.");
      QuestLine.SETRANGE(Skip, FALSE);
      QuestLine.SETRANGE("Line Type", QuestLine."Line Type"::Question);
    END;

    PROCEDURE GetNextActivePageNo@1000000000(CurrPageNo@1000000000 : Integer) : Integer;
    BEGIN
      FilterActiveQuestions();
      QuestLine.SETCURRENTKEY("Questionnaire No.", "Page No.");
      QuestLine.SETFILTER("Page No.", '>%1', CurrPageNo);
      IF (QuestLine.FINDFIRST()) THEN
        EXIT(QuestLine."Page No.");

      QuestLine.SETFILTER("Page No.", '<=%1', CurrPageNo);
      IF (QuestLine.FINDLAST()) THEN
        EXIT(QuestLine."Page No.");

      EXIT(-1);
    END;

    PROCEDURE GetPrevActivePageNo@1000000010(CurrPageNo@1000000000 : Integer) : Integer;
    BEGIN
      FilterActiveQuestions();
      QuestLine.SETCURRENTKEY("Questionnaire No.", "Page No.");
      QuestLine.SETFILTER("Page No.", '<%1', CurrPageNo);
      IF (QuestLine.FINDLAST()) THEN
        EXIT(QuestLine."Page No.");

      EXIT(-1);
    END;

    PROCEDURE GetCurrentQuestionText@1000000011(StarForRequired@1000000000 : Boolean) : Text;
    BEGIN
      IF "Current Line No." = 0 THEN SelectNextLine;

      EXIT(GetQuestionText(StarForRequired));
    END;

    PROCEDURE SetCurrentAnswerText@1000000013(AnswerText@1000000000 : Text;SuppressErrors@1000000001 : Boolean) MoreQuestions : Boolean;
    BEGIN
      GetCurrLine();
      QuestLine.VALIDATE("Text Input", AnswerText);
      QuestLine.MODIFY();

      IF QuestLine."Input Errored" AND (NOT SuppressErrors) THEN
        ERROR(QuestLine."Input Error Text");

      EXIT(SelectNextLine);
    END;

    LOCAL PROCEDURE "--- Retreiving Answers ---"@1000000012();
    BEGIN
    END;

    PROCEDURE GetAnswer@1000000014(VAR QuestionnaireLine@1000000000 : Record 9062705;QuestionName@1000000002 : Text[50]) AnswerFound : Boolean;
    VAR
      lQuestionnaireLine@1000000001 : Record 9062705;
    BEGIN
      QuestLine.SETCURRENTKEY("Questionnaire No.","Question Name");
      lQuestionnaireLine.SETRANGE("Questionnaire No.","Questionnaire No.");
      lQuestionnaireLine.SETRANGE("Question Name",QuestionName);
      lQuestionnaireLine.SETRANGE(Answered,TRUE);

      IF NOT lQuestionnaireLine.FINDFIRST THEN
        EXIT(FALSE)
      ELSE BEGIN
        QuestionnaireLine.GET(lQuestionnaireLine."Questionnaire No.",lQuestionnaireLine."Line No.");
        EXIT(TRUE);
      END;
    END;

    LOCAL PROCEDURE "--- Misc ---"@1000000015();
    BEGIN
    END;

    PROCEDURE GetWebPageURL@1000000016() URL : Text;
    BEGIN
      EXIT(STRSUBSTNO(SysB.GetText('QUESTWEBSITE'), FORMAT("Questionnaire GUID")));
    END;

    PROCEDURE GetDescription@1000000017() Desc : Text;
    BEGIN
      Desc := TxtExtMgt.GetFullText(DATABASE::Questionnaire,FIELDNO(Description),GETPOSITION);
      IF Desc = '' THEN Desc := Description;
    END;

    LOCAL PROCEDURE "--- Related Record ---"@1000000018();
    BEGIN
    END;

    PROCEDURE ShowRelatedRecord@1000000019();
    VAR
      TNPUtils@1000000000 : Codeunit 9062229;
    BEGIN
      IF ("Related Table No." <> 0) AND ("Related Record Position" <> '') THEN BEGIN
        TNPUtils.RunCardPage("Related Table No.", "Related Record Position", FALSE);
      END;
    END;

    BEGIN
    {
      //DOC NA2015.7  AZ 05/06/2015 - Created
      //DOC NA2015.8  AZ 14/07/2015 - "Created by..." fields added
      //DOC NA2015.9  AZ 05/08/2015 - Questionnaire actions, criteria changes and bugfixes
      //DOC NA2016.15 JH 06/05/2016 - CfMD amendments
    }
    END.
  }
}

