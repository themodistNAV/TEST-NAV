OBJECT Codeunit 9062568 Prep. Inv. Match. Documents
{
  OBJECT-PROPERTIES
  {
    Date=10/05/16;
    Time=12:00:00 PM;
    Version List=NH2016.15;
  }
  PROPERTIES
  {
    OnRun=VAR
            eFinalMessage@1000000000 : TextConst 'ENU=Finished Creating Invoice Matching Documents.;ENG=Finished Creating Invoice Matching Documents.';
          BEGIN
            CreateInvoiceMatchingDemoDocuments();
            MESSAGE(eFinalMessage);
          END;

  }
  CODE
  {
    VAR
      tVendorGenBusPostingGroup@1000000002 : TextConst 'ENU=NATIONAL;ENG=NATIONAL';
      tVendorVatBusPostingGroup@1000000001 : TextConst 'ENU=NATIONAL;ENG=NATIONAL';
      tVendorPostingGroup@1000000000 : TextConst 'ENU=FOREIGN;ENG=FOREIGN';
      tDraycirVendorNo@1000000007 : TextConst 'ENU=INVM0001;ENG=INVM0001';
      tDraycirVendorName@1000000006 : TextConst 'ENU=Draycir Limited;ENG=Draycir Limited';
      tDraycirVendorAddress@1000000005 : TextConst 'ENU=1-3 De Montfort Mews;ENG=1-3 De Montfort Mews';
      tDraycirVendorCity@1000000004 : TextConst 'ENU=Leicester;ENG=Leicester';
      tDraycirVendorEMail@1000000003 : TextConst 'ENU=accounts@draycir.com;ENG=accounts@draycir.com';
      tJetVendorNo@1000000008 : TextConst 'ENU=INVM0002;ENG=INVM0002';
      tJetVendorName@1000000012 : TextConst 'ENU=Jet Reports International;ENG=Jet Reports International';
      tJetVendorAddress@1000000011 : TextConst 'ENU=5a Frascati Way;ENG=5a Frascati Way';
      tJetVendorCity@1000000010 : TextConst 'ENU=Maidenhead;ENG=Maidenhead';
      tJetVendorEMail@1000000009 : TextConst 'ENU=accounts@jetreports.com;ENG=accounts@jetreports.com';
      tQlikViewVendorNo@1000000017 : TextConst 'ENU=INVM0002;ENG=INVM0002';
      tQlikViewVendorName@1000000016 : TextConst 'ENU=Jet Reports International;ENG=Jet Reports International';
      tQlikViewVendorAddress@1000000015 : TextConst 'ENU=1020 Eskdale Road;ENG=1020 Eskdale Road';
      tQlikViewVendorCity@1000000014 : TextConst 'ENU=Wokingham;ENG=Wokingham';
      tQlikViewVendorEMail@1000000013 : TextConst 'ENU=accounts@qlikview.com;ENG=accounts@qlikview.com';

    PROCEDURE CreateInvoiceMatchingDemoDocuments@1000000009();
    BEGIN
      CreateInvoiceMatchingVendors();
      CreateInvoiceMatchingVendorTemplates();
      CreateDemonstrationDocuments();
      ClearVendorLedgerEntries();
      SetupExampleDocuments();
    END;

    PROCEDURE CreateInvoiceMatchingVendors@1000000011();
    VAR
      Vendor@1000000000 : Record 23;
    BEGIN
      CreateInvoiceMatchingVendor(tDraycirVendorNo, tDraycirVendorName, tDraycirVendorAddress, tDraycirVendorCity, tDraycirVendorEMail);
      CreateInvoiceMatchingVendor(tJetVendorNo, tJetVendorName, tJetVendorAddress, tJetVendorCity, tJetVendorEMail);
      CreateInvoiceMatchingVendor(tQlikViewVendorNo, tQlikViewVendorName, tQlikViewVendorAddress, tQlikViewVendorCity, tQlikViewVendorEMail);
    END;

    LOCAL PROCEDURE CreateInvoiceMatchingVendor@1000000006(pNo@1000000000 : Code[20];pName@1000000001 : Text;pAddress@1000000002 : Text;pCity@1000000003 : Text;pEMail@1000000004 : Text);
    VAR
      Vendor@1000000005 : Record 23;
    BEGIN
      Vendor.RESET();
      IF NOT Vendor.GET(pNo) THEN BEGIN
        Vendor.INIT;
        Vendor.VALIDATE("No.",pNo);
        Vendor.INSERT(TRUE);
      END;
      Vendor.VALIDATE(Name, pName);
      Vendor.VALIDATE(Address, pAddress);
      Vendor.VALIDATE(City, pCity);
      Vendor.VALIDATE("E-Mail", pEMail);
      Vendor.VALIDATE("Gen. Bus. Posting Group", tVendorGenBusPostingGroup);
      Vendor.VALIDATE("VAT Bus. Posting Group", tVendorVatBusPostingGroup);
      Vendor.VALIDATE("Vendor Posting Group", tVendorPostingGroup);
      Vendor.MODIFY(TRUE);
    END;

    PROCEDURE CreateInvoiceMatchingVendorTemplates@1000000015();
    VAR
      VendorInvTemplate@1000000001 : Record 9062578;
      eDraycirInvoiceText@1000000000 : TextConst 'ENU=Invoice No;ENG=Invoice No';
      eDraycirDocumentDateText@1000000002 : TextConst 'ENU=Document Date Text;ENG=Document Date Text';
      eDraycirPurchaseOrderText@1000000003 : TextConst 'ENU=Customer Order Number;ENG=Customer Order Number';
      eDraycirDueDateText@1000000004 : TextConst 'ENU=Due Date;ENG=Due Date';
      eDraycirTotalAmountText@1000000005 : TextConst 'ENU=Total GBP Ind. VAT;ENG=Total GBP Ind. VAT';
      eJetInvoiceText@1000000010 : TextConst 'ENU=Invoice Number;ENG=Invoice Number';
      eJetDocumentDateText@1000000009 : TextConst 'ENU=Invoice Date;ENG=Invoice Date';
      eJetPurchaseOrderText@1000000008 : TextConst 'ENU=Number;ENG=Number';
      eJetDueDateText@1000000007 : TextConst 'ENU=Due Date:;ENG=Due Date:';
      eJetTotalAmountText@1000000006 : TextConst 'ENU=Total Price;ENG=Total Price';
      eJetDateFormat@1000000011 : TextConst 'ENU=dd/mm/yy;ENG=dd/mm/yy';
      eQlikViewInvoiceText@1000000017 : TextConst 'ENU=Invoice;ENG=Invoice';
      eQlikViewDocumentDateText@1000000016 : TextConst 'ENU=Invoice Date;ENG=Invoice Date';
      eQlikViewPurchaseOrderText@1000000015 : TextConst 'ENU=Purchase Order No;ENG=Purchase Order No';
      eQlikViewDueDateText@1000000014 : TextConst 'ENU=Due Date;ENG=Due Date';
      eQlikViewTotalAmountText@1000000013 : TextConst 'ENU=VAT to be|to be;ENG=VAT to be|to be';
      eQlikViewDateFormat@1000000012 : TextConst 'ENU=dd/mm/yy;ENG=dd/mm/yy';
    BEGIN
      CreateInvoiceMatchingVendorTemplate(tDraycirVendorNo, tDraycirVendorName, eDraycirInvoiceText, eDraycirDocumentDateText, eDraycirPurchaseOrderText,
        eDraycirDueDateText, eDraycirTotalAmountText, '');
      CreateInvoiceMatchingVendorTemplate(tJetVendorNo, tJetVendorName, eJetInvoiceText, eJetDocumentDateText, eJetPurchaseOrderText,
        eJetDueDateText, eJetTotalAmountText, eJetDateFormat);
      CreateInvoiceMatchingVendorTemplate(tQlikViewVendorNo, tQlikViewVendorName, eQlikViewInvoiceText, eQlikViewDocumentDateText, eQlikViewPurchaseOrderText,
        eQlikViewDueDateText, eQlikViewTotalAmountText, eQlikViewDateFormat);
    END;

    PROCEDURE CreateInvoiceMatchingVendorTemplate@1000000003(pNo@1000000000 : Code[20];pTextToIdentifyInvoice@1000000002 : Text;pInvoiceText@1000000003 : Text;pDocumentDateText@1000000004 : Text;pPurchaseOrderText@1000000005 : Text;pDueDateText@1000000006 : Text;pTotalAmountText@1000000007 : Text;pVendorDateFormat@1000000008 : Text);
    VAR
      VendorInvTemplate@1000000001 : Record 9062578;
    BEGIN
      VendorInvTemplate.SETRANGE("Vendor No.", pNo);
      IF NOT VendorInvTemplate.FINDSET THEN BEGIN
        VendorInvTemplate.INIT;
        VendorInvTemplate.VALIDATE(Code,'');
        VendorInvTemplate.VALIDATE("Vendor No.", pNo);
        VendorInvTemplate.VALIDATE("Text To Identify Invoice", pTextToIdentifyInvoice);
        VendorInvTemplate.VALIDATE("Invoice Text", pInvoiceText);
        VendorInvTemplate.VALIDATE("Document Date Text", pDocumentDateText);
        VendorInvTemplate.VALIDATE("Purchase Order Text", pPurchaseOrderText);
        VendorInvTemplate.VALIDATE("Due Date Text", pDueDateText);
        VendorInvTemplate.VALIDATE("Total Amount Text", pTotalAmountText);
        VendorInvTemplate.VALIDATE("Vendor Date Format", pVendorDateFormat);
        VendorInvTemplate.INSERT(FALSE);
      END ELSE BEGIN
        VendorInvTemplate.VALIDATE("Vendor Date Format", pVendorDateFormat);
        VendorInvTemplate.MODIFY;
      END;
    END;

    PROCEDURE CreateDemonstrationDocuments@1000000005();
    VAR
      PurchaseHeader@1000000000 : Record 38;
      PurchaseLine@1000000001 : Record 39;
      ReleasePurchDoc@1000000002 : Codeunit 415;
      WorkflowInterface@1000000003 : Codeunit 9062262;
      LineNo@1000000004 : Integer;
      eReceivingNoSeries@1000000005 : TextConst 'ENU=P-RCPT;ENG=P-RCPT';
      eGLAccountNo@1000000014 : TextConst 'ENU=8430;ENG=8430';
      eDoc1No@1000000006 : TextConst 'ENU=P000553;ENG=P000553';
      eDoc1VendorNo@1000000007 : TextConst 'ENU=INVM0003;ENG=INVM0003';
      eDoc1Line1Description@1000000009 : TextConst 'ENU=Spindle Pro - 5 additional licences - Annual Gold;ENG=Spindle Pro - 5 additional licences - Annual Gold';
      eDoc1Line2Description@1000000010 : TextConst 'ENU=QlikView Server Small Business Edition;ENG=QlikView Server Small Business Edition';
      eDoc2No@1000000012 : TextConst 'ENU=PQ00571;ENG=PQ00571';
      eDoc2VendorNo@1000000013 : TextConst 'ENU=INVM0003;ENG=INVM0003';
      eDoc2Line1Description@1000000008 : TextConst 'ENU=QlikView Server Small Business Edition;ENG=QlikView Server Small Business Edition';
      eDoc2Line2Description@1000000011 : TextConst 'ENU=QlikView Server Small Business Edition;ENG=QlikView Server Small Business Edition';
      eDoc3No@1000000015 : TextConst 'ENU=5186687;ENG=5186687';
      eDoc3VendorNo@1000000016 : TextConst 'ENU=INVM0002;ENG=INVM0002';
      eDoc3Line1Description@1000000017 : TextConst 'ENU=Jet Essentials Small Business Package;ENG=Jet Essentials Small Business Package';
      eDoc3Line2Description@1000000018 : TextConst 'ENU=Jet Essentials Small Business Package;ENG=Jet Essentials Small Business Package';
      eDoc4No@1000000019 : TextConst 'ENU=P000500;ENG=P000500';
      eDoc4VendorNo@1000000020 : TextConst 'ENU=INVM0002;ENG=INVM0002';
      eDoc4Line1Description@1000000021 : TextConst 'ENU=QlikView Named Document CAL;ENG=QlikView Named Document CAL';
      eDoc4Line2Description@1000000022 : TextConst 'ENU=QlikView Named Document CAL;ENG=QlikView Named Document CAL';
    BEGIN
      EnableDisablePOApprovalWorkflow(FALSE);

      CreatePurchaseHeader(eDoc1No, eDoc1VendorNo, eReceivingNoSeries, PurchaseHeader);
      CreatePurchaseLine(PurchaseHeader."No.", eGLAccountNo, eDoc1Line1Description, 931.2);
      CreatePurchaseLine(PurchaseHeader."No.", eGLAccountNo, eDoc1Line2Description, 9408.0);
      PurchaseHeader.SendToPosting(CODEUNIT::"Purch.-Post");

      CreatePurchaseHeader(eDoc2No, eDoc2VendorNo, eReceivingNoSeries, PurchaseHeader);
      CreatePurchaseLine(PurchaseHeader."No.", eGLAccountNo, eDoc2Line1Description, 11289.6);
      CreatePurchaseLine(PurchaseHeader."No.", eGLAccountNo, eDoc2Line2Description, 9408.0);
      PurchaseHeader.SendToPosting(CODEUNIT::"Purch.-Post");

      CreatePurchaseHeader(eDoc3No, eDoc3VendorNo, eReceivingNoSeries, PurchaseHeader);
      CreatePurchaseLine(PurchaseHeader."No.", eGLAccountNo, eDoc3Line1Description, 2993.0);
      CreatePurchaseLine(PurchaseHeader."No.", eGLAccountNo, eDoc3Line2Description, 9408.0);
      PurchaseHeader.SendToPosting(CODEUNIT::"Purch.-Post");

      CreatePurchaseHeader(eDoc4No, eDoc4VendorNo, eReceivingNoSeries, PurchaseHeader);
      CreatePurchaseLine(PurchaseHeader."No.", eGLAccountNo, eDoc4Line1Description, 2116.8);
      CreatePurchaseLine(PurchaseHeader."No.", eGLAccountNo, eDoc4Line2Description, 1764.0);
      PurchaseHeader.SendToPosting(CODEUNIT::"Purch.-Post");

      EnableDisablePOApprovalWorkflow(TRUE);
    END;

    LOCAL PROCEDURE CreatePurchaseHeader@1000000014(pNo@1000000000 : Code[20];pVendorNo@1000000001 : Code[20];pReceivingNoSeries@1000000002 : Code[10];VAR pPurchaseHeader@1000000005 : Record 38);
    VAR
      ReleasePurchDoc@1000000004 : Codeunit 415;
    BEGIN
      IF NOT pPurchaseHeader.GET(pPurchaseHeader."Document Type"::Order, pNo) THEN BEGIN
        pPurchaseHeader.INIT();
        pPurchaseHeader.VALIDATE("Document Type", pPurchaseHeader."Document Type"::Order);
        pPurchaseHeader.VALIDATE("No.", pNo);
        pPurchaseHeader.VALIDATE("Buy-from Vendor No.", pVendorNo);
        pPurchaseHeader.VALIDATE("Posting Date", WORKDATE);
        pPurchaseHeader.VALIDATE("Document Date", WORKDATE);
        pPurchaseHeader.VALIDATE("Receiving No. Series", pReceivingNoSeries);
        pPurchaseHeader.VALIDATE(Receive, TRUE);
        pPurchaseHeader.INSERT(TRUE);
      END ELSE BEGIN
        IF pPurchaseHeader.Status = pPurchaseHeader.Status::Released THEN
          ReleasePurchDoc.Reopen(pPurchaseHeader);
      END;
    END;

    LOCAL PROCEDURE CreatePurchaseLine@1000000018(pDocumentNo@1000000001 : Code[20];pGLAccountNo@1000000003 : Code[20];pDescription@1000000004 : Text;pDirectUnitCost@1000000005 : Decimal);
    VAR
      PurchaseLine@1000000000 : Record 39;
      LineNo@1000000002 : Integer;
    BEGIN
      PurchaseLine.SETRANGE("Document Type", PurchaseLine."Document Type"::Order);
      PurchaseLine.SETRANGE("Document No.", pDocumentNo);
      PurchaseLine.SETFILTER("Quantity Received", '<>0');
      PurchaseLine.SETFILTER("Quantity Invoiced", '<>0');
      IF NOT PurchaseLine.ISEMPTY THEN
        EXIT;

      PurchaseLine.SETRANGE("Document Type", PurchaseLine."Document Type"::Order);
      PurchaseLine.SETRANGE("Document No.", pDocumentNo);
      IF PurchaseLine.FINDLAST THEN
        LineNo := PurchaseLine."Line No." + 10000
      ELSE
        LineNo := 10000;

      PurchaseLine.INIT();
      PurchaseLine.VALIDATE("Document Type", PurchaseLine."Document Type"::Order);
      PurchaseLine.VALIDATE("Document No.", pDocumentNo);
      PurchaseLine.VALIDATE("Line No.", LineNo);
      PurchaseLine.VALIDATE(Type, PurchaseLine.Type::"G/L Account");
      PurchaseLine.VALIDATE("No.", pGLAccountNo);
      PurchaseLine.VALIDATE(Description, pDescription);
      PurchaseLine.VALIDATE(Quantity, 1);
      PurchaseLine.VALIDATE("Direct Unit Cost", pDirectUnitCost);
      PurchaseLine.INSERT();
    END;

    PROCEDURE EnableDisablePOApprovalWorkflow@1000000017(pEnable@1000000001 : Boolean);
    VAR
      Workflow@1000000000 : Record 9062258;
      eApprovedResponse@1000000002 : TextConst 'ENU=APPROVED;ENG=APPROVED';
    BEGIN
      IF Workflow.GET('P-ORD-APPR') THEN BEGIN
        Workflow.VALIDATE("OnErr: WFlow Disabled Resp.",eApprovedResponse);
        Workflow.VALIDATE(Enabled, pEnable);
        Workflow.MODIFY(TRUE);
      END;
    END;

    PROCEDURE ClearVendorLedgerEntries@1000000000();
    VAR
      VendorLedgerEntry@1000000000 : Record 25;
      eFilter@1000000001 : TextConst 'ENU=SI35365|SI36348|000500|216869|SI006258|216494;ENG=SI35365|SI36348|000500|216869|SI006258|216494';
    BEGIN
      VendorLedgerEntry.SETFILTER("External Document No.",eFilter);
      IF VendorLedgerEntry.FINDSET THEN
      REPEAT
        VendorLedgerEntry."External Document No." := '';
        VendorLedgerEntry.MODIFY;
      UNTIL VendorLedgerEntry.NEXT = 0;
    END;

    PROCEDURE SetupExampleDocuments@1000000001();
    VAR
      SystemBehaviour@1000000000 : Record 9062230;
      FileSystem@1000000001 : Codeunit 9062264;
      ScanningFolder@1000000002 : Text[200];
      ScannedExamplesFolder@1000000003 : Text[220];
      TempFile@1000000004 : TEMPORARY Record 2000000022;
      Folder@1000000005 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Directory";
      Lst@1000000006 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Collections.Generic.List`1";
      Obj@1000000007 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Object";
      i@1000000008 : Integer;
      File@1000000009 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.File";
      FileName@1000000010 : Text[100];
      eFolder@1000000011 : TextConst 'ENU=Document Example;ENG=Document Example';
    BEGIN
      ScanningFolder := SystemBehaviour.GetText('INV_M_SCAN_FOLDER');
      IF (ScanningFolder = '') THEN EXIT;
      ScannedExamplesFolder := STRSUBSTNO('%1\%2',ScanningFolder,eFolder);

      Obj := Folder.GetFiles(ScannedExamplesFolder,'*');
      Lst := Lst.List;
      Lst.AddRange(Obj);
      IF Lst.Count >0 THEN BEGIN
        FOR i := 0 TO Lst.Count - 1 DO BEGIN
        FileName := FileSystem.GetFileName(FALSE,Lst.Item(i));
        IF File.Exists(STRSUBSTNO('%1\%2',ScannedExamplesFolder,FileName)) THEN BEGIN
          File.Delete(STRSUBSTNO('%1\%2',ScanningFolder,FileName));
        END;
        File.Copy(STRSUBSTNO('%1\%2',ScannedExamplesFolder,FileName),STRSUBSTNO('%1\%2',ScanningFolder,FileName));
        END;
      END;
    END;

    LOCAL PROCEDURE DataFix@1000000050(PONumber@1000000002 : Code[10]);
    VAR
      PurchaseHeader@1000000000 : Record 38;
      PurchaseLine@1000000001 : Record 39;
      PurchRcptHeader@1000000003 : Record 120;
      PurchRcptLine@1000000004 : Record 121;
    BEGIN
      PurchaseHeader.SETRANGE(PurchaseHeader."Document Type",PurchaseHeader."Document Type"::Order);
      PurchaseHeader.SETRANGE("No.",PONumber);
      IF PurchaseHeader.FINDSET THEN
        PurchaseHeader.DELETE(FALSE);


      PurchaseLine.SETRANGE("Document Type",PurchaseHeader."Document Type"::Order);
      PurchaseLine.SETRANGE("Document No.",PONumber);
      IF PurchaseLine.FINDSET THEN
        PurchaseLine.DELETEALL(FALSE);


      PurchRcptHeader.SETRANGE("Order No.",PONumber);
      IF PurchRcptHeader.FINDSET THEN BEGIN
        PurchRcptLine.SETRANGE("Document No.", PurchRcptHeader."No.");
        IF PurchRcptLine.FINDSET THEN
          PurchRcptLine.DELETEALL(FALSE);
         PurchRcptHeader.DELETEALL(FALSE);
      END;
    END;

    BEGIN
    {
      //DOC NH2016.10 JH 01/10/2015 - Upgraded to 2016
      //DOC NH2016.10 JH 17/11/2015 - New version
      //DOC NH2016.15 JH 25/04/2016 - CfMD amendments
    }
    END.
  }
}

