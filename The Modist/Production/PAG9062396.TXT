OBJECT Page 9062396 Enhanced Field Value Card
{
  OBJECT-PROPERTIES
  {
    Date=02/10/15;
    Time=[ 9:36:05 AM];
    Version List=NA2016.10;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Enhanced Fields;
               ENG=Enhanced Fields];
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    SourceTable=Table9062327;
    DataCaptionExpr='';
    RefreshOnActivate=Yes;
    ShowFilter=No;
    OnOpenPage=VAR
                 i@1000000000 : Integer;
               BEGIN
                 UpdateDisplay;
               END;

    OnAfterGetRecord=BEGIN
                       UpdateDisplay;
                       GroupVisible := TRUE;
                     END;

  }
  CONTROLS
  {
    { 1000000000;;Container;
                ContainerType=ContentArea }

    { 1000000011;1;Group  ;
                CaptionML=[ENU=Fields;
                           ENG=Fields];
                Visible=GroupVisible;
                GroupType=Group }

    { 1000000001;2;Field  ;
                SourceExpr=Value_Field[1];
                CaptionClass=Caption_Field[1];
                Visible=Visible_Field1;
                Editable=editable_field1;
                OnValidate=BEGIN
                             SetFieldValue(EnhFieldDef."Table No.",FieldNo_Field[1],Value_Field[1]);
                           END;
                            }

    { 1000000012;2;Field  ;
                SourceExpr=Value_Decimal_Field[1];
                CaptionClass=Caption_Field[1];
                Visible=Visible_Decimal_Field1;
                Editable=editable_field1;
                OnValidate=BEGIN
                             SetFieldValue(EnhFieldDef."Table No.",FieldNo_Field[1],FORMAT(Value_Decimal_Field[1]));
                           END;

                OnDrillDown=BEGIN
                              GetDrillDown(EnhFieldDef."Table No.",FieldNo_Field[1],1);
                            END;
                             }

    { 1000000002;2;Field  ;
                SourceExpr=Value_Field[2];
                CaptionClass=Caption_Field[2];
                Visible=Visible_Field2;
                Editable=editable_field2;
                OnValidate=BEGIN
                             SetFieldValue(EnhFieldDef."Table No.",FieldNo_Field[2],Value_Field[2]);
                           END;

                OnDrillDown=BEGIN
                              GetDrillDown(EnhFieldDef."Table No.",FieldNo_Field[2],2);
                            END;
                             }

    { 1000000013;2;Field  ;
                SourceExpr=Value_Decimal_Field[2];
                CaptionClass=Caption_Field[2];
                Visible=Visible_Decimal_Field2;
                Editable=editable_field2;
                OnValidate=BEGIN
                             SetFieldValue(EnhFieldDef."Table No.",FieldNo_Field[2],FORMAT(Value_Decimal_Field[2]));
                           END;
                            }

    { 1000000010;2;Field  ;
                SourceExpr=Value_Field[3];
                CaptionClass=Caption_Field[3];
                Visible=Visible_Field3;
                Editable=editable_field3;
                OnValidate=BEGIN
                             SetFieldValue(EnhFieldDef."Table No.",FieldNo_Field[3],Value_Field[3]);
                           END;

                OnDrillDown=BEGIN
                              GetDrillDown(EnhFieldDef."Table No.",FieldNo_Field[3],3);
                            END;
                             }

    { 1000000014;2;Field  ;
                SourceExpr=Value_Decimal_Field[3];
                CaptionClass=Caption_Field[3];
                Visible=Visible_Decimal_Field3;
                Editable=editable_field3;
                OnValidate=BEGIN
                             SetFieldValue(EnhFieldDef."Table No.",FieldNo_Field[3],FORMAT(Value_Decimal_Field[3]));
                           END;
                            }

    { 1000000009;2;Field  ;
                SourceExpr=Value_Field[4];
                CaptionClass=Caption_Field[4];
                Visible=Visible_Field4;
                Editable=editable_field4;
                OnValidate=BEGIN
                             SetFieldValue(EnhFieldDef."Table No.",FieldNo_Field[4],Value_Field[4]);
                           END;

                OnDrillDown=BEGIN
                              GetDrillDown(EnhFieldDef."Table No.",FieldNo_Field[4],4);
                            END;
                             }

    { 1000000015;2;Field  ;
                SourceExpr=Value_Decimal_Field[4];
                CaptionClass=Caption_Field[4];
                Visible=Visible_Decimal_Field4;
                Editable=editable_field4;
                OnValidate=BEGIN
                             SetFieldValue(EnhFieldDef."Table No.",FieldNo_Field[4],FORMAT(Value_Decimal_Field[4]));
                           END;
                            }

    { 1000000008;2;Field  ;
                SourceExpr=Value_Field[5];
                CaptionClass=Caption_Field[5];
                Visible=Visible_Field5;
                Editable=editable_field5;
                OnValidate=BEGIN
                             SetFieldValue(EnhFieldDef."Table No.",FieldNo_Field[5],Value_Field[5]);
                           END;

                OnDrillDown=BEGIN
                              GetDrillDown(EnhFieldDef."Table No.",FieldNo_Field[5],5);
                            END;
                             }

    { 1000000016;2;Field  ;
                SourceExpr=Value_Decimal_Field[5];
                CaptionClass=Caption_Field[5];
                Visible=Visible_Decimal_Field5;
                Editable=editable_field5;
                OnValidate=BEGIN
                             SetFieldValue(EnhFieldDef."Table No.",FieldNo_Field[5],FORMAT(Value_Decimal_Field[5]));
                           END;
                            }

    { 1000000007;2;Field  ;
                SourceExpr=Value_Field[6];
                CaptionClass=Caption_Field[6];
                Visible=Visible_Field6;
                Editable=editable_field6;
                OnValidate=BEGIN
                             SetFieldValue(EnhFieldDef."Table No.",FieldNo_Field[6],Value_Field[6]);
                           END;

                OnDrillDown=BEGIN
                              GetDrillDown(EnhFieldDef."Table No.",FieldNo_Field[6],6);
                            END;
                             }

    { 1000000017;2;Field  ;
                SourceExpr=Value_Decimal_Field[6];
                CaptionClass=Caption_Field[6];
                Visible=Visible_Decimal_Field6;
                Editable=editable_field6;
                OnValidate=BEGIN
                             SetFieldValue(EnhFieldDef."Table No.",FieldNo_Field[6],FORMAT(Value_Decimal_Field[6]));
                           END;
                            }

    { 1000000006;2;Field  ;
                SourceExpr=Value_Field[7];
                CaptionClass=Caption_Field[7];
                Visible=Visible_Field7;
                Editable=editable_field7;
                OnValidate=BEGIN
                             SetFieldValue(EnhFieldDef."Table No.",FieldNo_Field[7],Value_Field[7]);
                           END;

                OnDrillDown=BEGIN
                              GetDrillDown(EnhFieldDef."Table No.",FieldNo_Field[7],7);
                            END;
                             }

    { 1000000018;2;Field  ;
                SourceExpr=Value_Decimal_Field[7];
                CaptionClass=Caption_Field[7];
                Visible=Visible_Decimal_Field7;
                Editable=editable_field7;
                OnValidate=BEGIN
                             SetFieldValue(EnhFieldDef."Table No.",FieldNo_Field[7],FORMAT(Value_Decimal_Field[7]));
                           END;
                            }

    { 1000000019;2;Field  ;
                SourceExpr=Value_Field[8];
                CaptionClass=Caption_Field[8];
                Visible=Visible_Field8;
                Editable=editable_field8;
                OnValidate=BEGIN
                             SetFieldValue(EnhFieldDef."Table No.",FieldNo_Field[8],Value_Field[8]);
                           END;

                OnDrillDown=BEGIN
                              GetDrillDown(EnhFieldDef."Table No.",FieldNo_Field[8],8);
                            END;
                             }

    { 1000000005;2;Field  ;
                SourceExpr=Value_Decimal_Field[8];
                CaptionClass=Caption_Field[8];
                Visible=Visible_Decimal_Field8;
                Editable=editable_field8;
                OnValidate=BEGIN
                             SetFieldValue(EnhFieldDef."Table No.",FieldNo_Field[8],FORMAT(Value_Decimal_Field[8]));
                           END;
                            }

    { 1000000020;2;Field  ;
                SourceExpr=Value_Field[9];
                CaptionClass=Caption_Field[9];
                Visible=Visible_Field9;
                Editable=editable_field9;
                OnValidate=BEGIN
                             SetFieldValue(EnhFieldDef."Table No.",FieldNo_Field[9],Value_Field[9]);
                           END;

                OnDrillDown=BEGIN
                              GetDrillDown(EnhFieldDef."Table No.",FieldNo_Field[9],9);
                            END;
                             }

    { 1000000004;2;Field  ;
                SourceExpr=Value_Decimal_Field[9];
                CaptionClass=Caption_Field[9];
                Visible=Visible_Decimal_Field9;
                Editable=editable_field9;
                OnValidate=BEGIN
                             SetFieldValue(EnhFieldDef."Table No.",FieldNo_Field[9],FORMAT(Value_Decimal_Field[9]));
                           END;
                            }

    { 1000000021;2;Field  ;
                SourceExpr=Value_Field[10];
                CaptionClass=Caption_Field[10];
                Visible=Visible_Field10;
                Editable=editable_field10;
                OnValidate=BEGIN
                             SetFieldValue(EnhFieldDef."Table No.",FieldNo_Field[10],Value_Field[10]);
                           END;

                OnDrillDown=BEGIN
                              GetDrillDown(EnhFieldDef."Table No.",FieldNo_Field[10],10);
                            END;
                             }

    { 1000000003;2;Field  ;
                SourceExpr=Value_Decimal_Field[10];
                CaptionClass=Caption_Field[10];
                Visible=Visible_Decimal_Field10;
                Editable=editable_field10;
                OnValidate=BEGIN
                             SetFieldValue(EnhFieldDef."Table No.",FieldNo_Field[10],FORMAT(Value_Decimal_Field[10]));
                           END;
                            }

  }
  CODE
  {
    VAR
      EnhFieldDef@1000000001 : Record 9062327;
      EnhFieldMgt@1000000005 : Codeunit 9062298;
      TableNoFilter@1000000011 : Text[250];
      PrimaryKeyValue1@1000000010 : Text[250];
      PrimaryKeyValue2@1000000009 : Text[250];
      PrimaryKeyValue3@1000000008 : Text[250];
      PrimaryKeyValue4@1000000007 : Text[250];
      PrimaryKeyValue5@1000000006 : Text[250];
      Caption_Field@1000000016 : ARRAY [10] OF Text[80];
      Value_Field@1000000017 : ARRAY [10] OF Text[250];
      Value_Decimal_Field@1000000032 : ARRAY [10] OF Decimal;
      FieldNo_Field@1000000020 : ARRAY [10] OF Integer;
      IsCalc_Field@1000000031 : ARRAY [10] OF Boolean;
      Type_Field@1000000033 : ARRAY [10] OF 'Text,Code,Integer,Decimal,Date,Time';
      Visible_Field1@1000000000 : Boolean INDATASET;
      Visible_Field2@1000000002 : Boolean INDATASET;
      Visible_Field3@1000000003 : Boolean INDATASET;
      Visible_Field4@1000000004 : Boolean INDATASET;
      Visible_Field5@1000000012 : Boolean INDATASET;
      Visible_Field6@1000000013 : Boolean INDATASET;
      Visible_Field7@1000000014 : Boolean INDATASET;
      Visible_Field8@1000000015 : Boolean INDATASET;
      Visible_Field9@1000000018 : Boolean INDATASET;
      Visible_Field10@1000000019 : Boolean INDATASET;
      Visible_Decimal_Field1@1000000043 : Boolean INDATASET;
      Visible_Decimal_Field2@1000000042 : Boolean INDATASET;
      Visible_Decimal_Field3@1000000041 : Boolean INDATASET;
      Visible_Decimal_Field4@1000000040 : Boolean INDATASET;
      Visible_Decimal_Field5@1000000039 : Boolean INDATASET;
      Visible_Decimal_Field6@1000000038 : Boolean INDATASET;
      Visible_Decimal_Field7@1000000037 : Boolean INDATASET;
      Visible_Decimal_Field8@1000000036 : Boolean INDATASET;
      Visible_Decimal_Field9@1000000035 : Boolean INDATASET;
      Visible_Decimal_Field10@1000000034 : Boolean INDATASET;
      Editable_Field1@1000000021 : Boolean INDATASET;
      Editable_Field2@1000000022 : Boolean INDATASET;
      Editable_Field3@1000000023 : Boolean INDATASET;
      Editable_Field4@1000000024 : Boolean INDATASET;
      Editable_Field5@1000000025 : Boolean INDATASET;
      Editable_Field6@1000000026 : Boolean INDATASET;
      Editable_Field7@1000000027 : Boolean INDATASET;
      Editable_Field8@1000000028 : Boolean INDATASET;
      Editable_Field9@1000000029 : Boolean INDATASET;
      Editable_Field10@1000000030 : Boolean INDATASET;
      GroupVisible@1000000045 : Boolean INDATASET;
      Field_Type@1000000044 : ARRAY [10] OF Text[250];
      Field_DisplayText@1000000046 : ARRAY [10] OF Text[250];
      Show_DrillDown@1000000047 : ARRAY [10] OF Text[250];

    PROCEDURE UpdateDisplay@1000000002();
    VAR
      i@1000000000 : Integer;
      UseFilters@1000000001 : Boolean;
      FieldValue@1000000002 : Text[250];
    BEGIN
      IF TableNoFilter = '' THEN BEGIN
        i := 1;
        REPEAT
          FILTERGROUP(i);
          TableNoFilter := GETFILTER("Table No.");
          i += 1;
        UNTIL (i >= 10) OR (TableNoFilter <> '');
      END;

      IF PrimaryKeyValue1 = '' THEN BEGIN
        i := 1;
        REPEAT
          FILTERGROUP(i);
          PrimaryKeyValue1 := GETFILTER("Primary Key Value 1 Filter");
          IF PrimaryKeyValue1 <> '' THEN BEGIN
            UseFilters := TRUE;
          END ELSE BEGIN
            PrimaryKeyValue1 := "Primary Key Value 1 Filter";
            IF PrimaryKeyValue1 <> '' THEN UseFilters := FALSE;
          END;
          i += 1;
        UNTIL (i >= 10) OR (PrimaryKeyValue1 <> '');

        IF UseFilters THEN BEGIN
          PrimaryKeyValue1 := GETFILTER("Primary Key Value 1 Filter");
          PrimaryKeyValue2 := GETFILTER("Primary Key Value 2 Filter");
          PrimaryKeyValue3 := GETFILTER("Primary Key Value 3 Filter");
          PrimaryKeyValue4 := GETFILTER("Primary Key Value 4 Filter");
          PrimaryKeyValue5 := GETFILTER("Primary Key Value 5 Filter");
        END ELSE BEGIN
          PrimaryKeyValue1 := "Primary Key Value 1 Filter";
          PrimaryKeyValue2 := "Primary Key Value 2 Filter";
          PrimaryKeyValue3 := "Primary Key Value 3 Filter";
          PrimaryKeyValue4 := "Primary Key Value 4 Filter";
          PrimaryKeyValue5 := "Primary Key Value 5 Filter";
        END;

      END;

      IF TableNoFilter <> '' THEN BEGIN
        EnhFieldDef.SETFILTER("Table No.",TableNoFilter);
        EnhFieldDef.SETFILTER("Show On Card",'%1',TRUE);
        IF EnhFieldDef.FINDSET THEN BEGIN
          i := 1;
          REPEAT
            Caption_Field[i] := EnhFieldDef.Name;
            FieldNo_Field[i] := EnhFieldDef."Enhanced Field No.";
            IsCalc_Field[i] := EnhFieldDef."Source Type" <> EnhFieldDef."Source Type":: " ";
            Type_Field[i] := EnhFieldDef.Type;
            FieldValue := GetFieldValue(EnhFieldDef."Table No.",EnhFieldDef."Enhanced Field No.");
            Field_Type[i] := FORMAT(EnhFieldDef.Type); //DOC NA2015.7
            Field_DisplayText[i] := EnhFieldDef."Display Text";
            Show_DrillDown[i] := FORMAT(ShowDrillDown(EnhFieldDef.Type));
            CASE EnhFieldDef.Type OF
              EnhFieldDef.Type::Decimal, EnhFieldDef.Type::Integer :
                BEGIN
                  IF FieldValue = '' THEN
                    Value_Decimal_Field[i] := 0
                  ELSE
                    EVALUATE(Value_Decimal_Field[i],FieldValue);
                END;
            ELSE
              Value_Field[i] := FieldValue;
            END;
            i += 1;
          UNTIL (i >= 10) OR (EnhFieldDef.NEXT = 0);
        END;
      END;

      SetFields_Visible;
      SetFields_Editable;
    END;

    PROCEDURE ShowField@1000000006(FieldNo@1000000000 : Integer;FieldType@1000000001 : 'Text,Code,Integer,Decimal,Date,Time') : Boolean;
    BEGIN
      //EXIT( (Caption_Field[FieldNo] <> '') AND (FieldType = Type_Field[FieldNo]));

      IF Caption_Field[FieldNo] = '' THEN EXIT(FALSE);

      CASE FieldType OF
        FieldType::Decimal, FieldType::Integer :
          BEGIN
            IF (Type_Field[FieldNo] = Type_Field::Decimal ) OR (Type_Field[FieldNo] = Type_Field::Integer ) THEN
              EXIT(TRUE)
            ELSE
              EXIT(FALSE);
          END;
        ELSE BEGIN
            IF (Type_Field[FieldNo] <> Type_Field::Decimal ) AND (Type_Field[FieldNo] <> Type_Field::Integer ) THEN
              EXIT(TRUE)
            ELSE
              EXIT(FALSE);
        END;
      END;
    END;

    PROCEDURE GetFieldValue@1000000000(TableNo@1000000001 : Integer;FieldNo@1000000000 : Integer) Value : Text[250];
    VAR
      EnhFieldValue@1000000002 : Record 9062328;
      PositionText@1000000003 : Text[250];
      EnhancedFieldDefinition@1000000004 : Record 9062327;
    BEGIN
      PositionText := EnhFieldMgt.GetFieldForRecord_FromPrimKeys(TableNo,FieldNo,
                                                      PrimaryKeyValue1,
                                                      PrimaryKeyValue2,
                                                      PrimaryKeyValue3,
                                                      PrimaryKeyValue4,
                                                      PrimaryKeyValue5,
                                                      EnhFieldValue,FALSE);

      IF PositionText <> '' THEN BEGIN
        //Value := EnhFieldMgt.CalculateFieldValue(TableNo,FieldNo,PositionText); //DOC NA2015.7
        IF EnhancedFieldDefinition.GET(TableNo,FieldNo) THEN BEGIN
           IF EnhancedFieldDefinition.Type IN [EnhancedFieldDefinition.Type::Image,EnhancedFieldDefinition.Type::Document,EnhancedFieldDefinition.Type::Link,EnhancedFieldDefinition.Type::"Extended Text"] THEN
            Value := EnhancedFieldDefinition."Display Text"
           ELSE
            Value := EnhFieldMgt.CalculateFieldValue(TableNo,FieldNo,PositionText);
        END;

      END;
    END;

    PROCEDURE SetFieldValue@1000000001(TableNo@1000000001 : Integer;FieldNo@1000000000 : Integer;NewValue@1000000004 : Text[250]) Value : Text[250];
    VAR
      EnhFieldValue@1000000002 : Record 9062328;
      PositionText@1000000003 : Text[250];
    BEGIN
      PositionText := EnhFieldMgt.GetFieldForRecord_FromPrimKeys(TableNo,FieldNo,
                                                      PrimaryKeyValue1,
                                                      PrimaryKeyValue2,
                                                      PrimaryKeyValue3,
                                                      PrimaryKeyValue4,
                                                      PrimaryKeyValue5,
                                                      EnhFieldValue,TRUE);

      IF PositionText <> '' THEN BEGIN
        EnhFieldValue.VALIDATE(Value,NewValue);
        EnhFieldValue.MODIFY(TRUE);
        Value := EnhFieldMgt.CalculateFieldValue(TableNo,FieldNo,PositionText);
        CurrPage.UPDATE(FALSE);
      END;
    END;

    PROCEDURE SetFields_Visible@1000000007();
    BEGIN
      Visible_Field1 := ShowField(1,Type_Field::Text);
      Visible_Field2 := ShowField(2,Type_Field::Text);
      Visible_Field3 := ShowField(3,Type_Field::Text);
      Visible_Field4 := ShowField(4,Type_Field::Text);
      Visible_Field5 := ShowField(5,Type_Field::Text);
      Visible_Field6 := ShowField(6,Type_Field::Text);
      Visible_Field7 := ShowField(7,Type_Field::Text);
      Visible_Field8 := ShowField(8,Type_Field::Text);
      Visible_Field9 := ShowField(9,Type_Field::Text);
      Visible_Field10 := ShowField(10,Type_Field::Text);

      Visible_Decimal_Field1 := ShowField(1,Type_Field::Decimal);
      Visible_Decimal_Field2 := ShowField(2,Type_Field::Decimal);
      Visible_Decimal_Field3 := ShowField(3,Type_Field::Decimal);
      Visible_Decimal_Field4 := ShowField(4,Type_Field::Decimal);
      Visible_Decimal_Field5 := ShowField(5,Type_Field::Decimal);
      Visible_Decimal_Field6 := ShowField(6,Type_Field::Decimal);
      Visible_Decimal_Field7 := ShowField(7,Type_Field::Decimal);
      Visible_Decimal_Field8 := ShowField(8,Type_Field::Decimal);
      Visible_Decimal_Field9 := ShowField(9,Type_Field::Decimal);
      Visible_Decimal_Field10 := ShowField(10,Type_Field::Decimal);
    END;

    PROCEDURE SetFields_Editable@1000000008();
    BEGIN
      Editable_Field1 := NOT IsCalc_Field[1];
      Editable_Field2 := NOT IsCalc_Field[2];
      Editable_Field3 := NOT IsCalc_Field[3];
      Editable_Field4 := NOT IsCalc_Field[4];
      Editable_Field5 := NOT IsCalc_Field[5];
      Editable_Field6 := NOT IsCalc_Field[6];
      Editable_Field7 := NOT IsCalc_Field[7];
      Editable_Field8 := NOT IsCalc_Field[8];
      Editable_Field9 := NOT IsCalc_Field[9];
      Editable_Field10 := NOT IsCalc_Field[10];
    END;

    LOCAL PROCEDURE GetDrillDown@1000000009(TableNo@1000000000 : Integer;FieldNo@1000000001 : Integer;DisplayFieldNo@1000000002 : Integer);
    VAR
      i@1000000003 : Integer;
      UseFilters@1000000004 : Boolean;
      PositionText@1000000005 : Text[250];
      EnhFieldValue@1000000006 : Record 9062328;
    BEGIN
      IF TableNoFilter = '' THEN BEGIN
        i := 1;
        REPEAT
          FILTERGROUP(i);
          TableNoFilter := GETFILTER("Table No.");
          i += 1;
        UNTIL (i >= 10) OR (TableNoFilter <> '');
      END;

      IF PrimaryKeyValue1 = '' THEN BEGIN
        i := 1;
        REPEAT
          FILTERGROUP(i);
          PrimaryKeyValue1 := GETFILTER("Primary Key Value 1 Filter");
          IF PrimaryKeyValue1 <> '' THEN BEGIN
            UseFilters := TRUE;
          END ELSE BEGIN
            PrimaryKeyValue1 := "Primary Key Value 1 Filter";
            IF PrimaryKeyValue1 <> '' THEN UseFilters := FALSE;
          END;
          i += 1;
        UNTIL (i >= 10) OR (PrimaryKeyValue1 <> '');

        IF UseFilters THEN BEGIN
          PrimaryKeyValue1 := GETFILTER("Primary Key Value 1 Filter");
          PrimaryKeyValue2 := GETFILTER("Primary Key Value 2 Filter");
          PrimaryKeyValue3 := GETFILTER("Primary Key Value 3 Filter");
          PrimaryKeyValue4 := GETFILTER("Primary Key Value 4 Filter");
          PrimaryKeyValue5 := GETFILTER("Primary Key Value 5 Filter");
        END ELSE BEGIN
          PrimaryKeyValue1 := "Primary Key Value 1 Filter";
          PrimaryKeyValue2 := "Primary Key Value 2 Filter";
          PrimaryKeyValue3 := "Primary Key Value 3 Filter";
          PrimaryKeyValue4 := "Primary Key Value 4 Filter";
          PrimaryKeyValue5 := "Primary Key Value 5 Filter";
        END;

      END;

      PositionText := EnhFieldMgt.GetFieldForRecord_FromPrimKeys(TableNo,FieldNo,
                                                      PrimaryKeyValue1,
                                                      PrimaryKeyValue2,
                                                      PrimaryKeyValue3,
                                                      PrimaryKeyValue4,
                                                      PrimaryKeyValue5,
                                                      EnhFieldValue,TRUE);

      IF PositionText <> '' THEN BEGIN
        IF Field_Type[DisplayFieldNo] = 'Link' THEN
          HYPERLINK(EnhFieldMgt.CalculateFieldValue(TableNo,FieldNo,PositionText))
      END;
    END;

    LOCAL PROCEDURE ShowDrillDown@1000000010(Type@1000000000 : 'Text,Code,Integer,Decimal,Date,Time,Boolean,Extended Text,Document,Image,Link') Show : Boolean;
    BEGIN
      IF Type IN [Type::"Extended Text",Type::Image,Type::Document,Type::Link] THEN EXIT(TRUE);
    END;

    BEGIN
    {
      //DOC NA2016.10 JH 02/10/2015 - Upgraded to 2016
    }
    END.
  }
}

