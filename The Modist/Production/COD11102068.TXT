OBJECT Codeunit 11102068 OM - Repository Tracer
{
  OBJECT-PROPERTIES
  {
    Date=01/10/13;
    Time=12:00:00 PM;
    Version List=OMA9.01;
  }
  PROPERTIES
  {
    SingleInstance=Yes;
    OnRun=BEGIN
            IF TestDllInstalled THEN
              NavisionTimer := NavisionTimer.Timer;
          END;

  }
  CODE
  {
    VAR
      ErrorOccured2@1000 : Boolean;
      gStarted@1001 : Boolean;
      SetInterval@1002 : Boolean;
      SettingsSet@1003 : Boolean;
      TestDllInstalled@1004 : Boolean;
      NavisionTimer@1005 : DotNet "'Microsoft.Dynamics.Nav.Timer, Version=9.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Timer" WITHEVENTS;

    PROCEDURE SetTestDllInstalled@1(NewValue@1000 : Boolean);
    BEGIN
      TestDllInstalled := NewValue;
    END;

    PROCEDURE GetStatus@2(VAR Started@1000 : Boolean);
    BEGIN
      IF SettingsSet THEN
        Started := gStarted;
    END;

    PROCEDURE StartTracing@3();
    VAR
      RepositorySetup@1000 : Record 11102085;
      RepositoryTracer@1001 : Codeunit 11102068;
      ctNoTimerDll@1002 : TextConst 'DEU=The ''Navision Timer'' dll is not registered.\Please register NTimer.dll with e.g. regsvr32.exe.;ENU=The ''Navision Timer'' dll is not registered.\Please register NTimer.dll with e.g. regsvr32.exe.;ESP=The ''Navision Timer'' dll is not registered.\Please register NTimer.dll with e.g. regsvr32.exe.;FRA=The ''Navision Timer'' dll is not registered.\Please register NTimer.dll with e.g. regsvr32.exe.;NLD=De ''Navision Timer'' dll is niet geregistreerd.\Registreer NTimer.dll met bijvoorbeeld regsvr32.exe.;DEA=The ''Navision Timer'' dll is not registered.\Please register NTimer.dll with e.g. regsvr32.exe.';
    BEGIN
      SettingsSet := TRUE;
      ErrorOccured2 := FALSE;

      RepositoryTracer.SetTestDllInstalled(TRUE);
      IF NOT RepositoryTracer.RUN THEN
        ERROR(ctNoTimerDll);
      RepositoryTracer.SetTestDllInstalled(FALSE);

      RepositorySetup.GET;
      RepositorySetup.TESTFIELD("Seconds Between Auto Sync.");
      NavisionTimer.Interval := 100;

      SetInterval := TRUE;
      gStarted := TRUE;

      NavisionTimer.Start;
    END;

    PROCEDURE StopTracing@4();
    BEGIN
      SettingsSet := TRUE;

      IF gStarted THEN BEGIN
        gStarted := FALSE;
        NavisionTimer.Stop;
      END;
    END;

    PROCEDURE SetErrorOccured@5(NewValue@1000 : Boolean);
    BEGIN
      ErrorOccured2 := NewValue;
    END;

    PROCEDURE ErrorOccured@6() : Boolean;
    BEGIN
      EXIT(ErrorOccured2);
    END;

    LOCAL PROCEDURE Synchronize@7();
    VAR
      RepositoryMgt@1000 : Codeunit 11102067;
    BEGIN
      IF NOT ErrorOccured2 THEN
        RepositoryMgt.Synchronize(TRUE, TRUE);
    END;

    EVENT NavisionTimer@1005::Elapsed@12(sender@1000 : Variant;e@1001 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.EventArgs");
    VAR
      RepositorySetup@1002 : Record 11102085;
    BEGIN
      IF SetInterval THEN BEGIN
        RepositorySetup.GET;
        RepositorySetup.TESTFIELD("Seconds Between Auto Sync.");
        NavisionTimer.Interval := ROUND(RepositorySetup."Seconds Between Auto Sync." * 1000, 1);
        NavisionTimer.Start;
      END;

      Synchronize;
    END;

    EVENT NavisionTimer@1005::ExceptionOccurred@13(sender@1000 : Variant;e@1001 : DotNet "'Microsoft.Dynamics.Nav.Timer, Version=9.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.ExceptionOccurredEventArgs");
    BEGIN
    END;

    BEGIN
    {
      This is a SingleInstance codeunit
    }
    END.
  }
}

