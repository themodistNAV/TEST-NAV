OBJECT Page 9062895 Excel Import
{
  OBJECT-PROPERTIES
  {
    Date=10/05/16;
    Time=12:00:00 PM;
    Version List=NA2016.15;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Excel Import;
               ENG=Excel Import];
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    SourceTable=Table9062287;
    PageType=StandardDialog;
    SourceTableTemporary=Yes;
    OnInit=BEGIN
             ValidateData := TRUE;
           END;

  }
  CONTROLS
  {
    { 1000000000;;Container;
                ContainerType=ContentArea }

    { 1000000002;1;Field  ;
                CaptionML=[ENU=Validate Data;
                           ENG=Validate Data];
                SourceExpr=ValidateData;
                Visible=FALSE }

    { 1000000001;1;Field  ;
                CaptionML=[ENU=Stop on Error;
                           ENG=Stop on Error];
                SourceExpr=StopOnError }

    { 1000000005;1;Field  ;
                CaptionML=[ENU=Test Import Only;
                           ENG=Test Import Only];
                ToolTipML=ENG=If ticked the data will not be imported. The process will be run to check for any potential errors.;
                SourceExpr=TestOnly;
                Visible=FALSE }

    { 1000000003;1;Group  ;
                CaptionML=[ENU=Select Worksheet;
                           ENG=Select Worksheet];
                GroupType=Repeater;
                InstructionalTextML=[ENU=Select Worksheet;
                                     ENG=Select Worksheet] }

    { 1000000004;2;Field  ;
                SourceExpr=Name;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      ExcelBuffer@1000000002 : TEMPORARY Record 9062715;
      FileName@1000000003 : Text;
      ValidateData@1000000000 : Boolean;
      StopOnError@1000000001 : Boolean;
      txtValidateDataNote@1000000004 : TextConst 'ENU=IMPORTANT: Importing data without Validation can cause serious problems. Only choose this option if you know what you are doing;ENG=IMPORTANT: Importing data without Validation can cause serious problems. Only choose this option if you know what you are doing';
      TestOnly@1000000005 : Boolean;

    PROCEDURE SetFileName@1000000002(newFileName@1000000000 : Text);
    BEGIN
      FileName := newFileName;
      Rec.RESET();
      Rec.DELETEALL();
      ExcelBuffer.GetSheetNames(FileName, Rec);
      IF (Rec.FINDFIRST()) THEN ;
    END;

    PROCEDURE GetProperties@1000000003(VAR newSheetName@1000000000 : Text;VAR newValidateData@1000000001 : Boolean;VAR newStopOnError@1000000002 : Boolean;VAR newTestOnly@1000000003 : Boolean);
    BEGIN
      newSheetName := Name;
      newValidateData := ValidateData;
      newStopOnError := StopOnError;
      newTestOnly := TestOnly;
    END;

    BEGIN
    {
      //DOC NA2016.10 JH 25/09/2015 - Upgraded to 2016
      //DOC NA2016.15 JH 10/05/2016 - CfMD amendments
    }
    END.
  }
}

