OBJECT Codeunit 9062444 Client Server Toolkit
{
  OBJECT-PROPERTIES
  {
    Date=14/10/15;
    Time=[ 3:04:19 PM];
    Version List=NA2016.10;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    PROCEDURE ServerName@1000000001() : Text;
    VAR
      lServerName@1000000000 : Text;
    BEGIN
      lServerName := GetWindowsUrl();
      FindAndRemoveSuffix(lServerName, ':');
      EXIT(lServerName);
    END;

    PROCEDURE ServerPort@1000000002() : Integer;
    VAR
      lServerPort@1000000001 : Integer;
      lServerPortText@1000000000 : Text;
      eCantRetrieve@1000000004 : TextConst 'ENU=The system can''t retrieve server port number.;ENG=The system can''t retrieve server port number.';
    BEGIN
      lServerPortText := GetWindowsUrl();
      FindAndRemovePrefix(lServerPortText, ':');
      FindAndRemoveSuffix(lServerPortText, '/');
      IF (EVALUATE(lServerPort, lServerPortText)) THEN;
      EXIT(lServerPort);
    END;

    PROCEDURE ServerInstance@1000000003() : Text;
    VAR
      lServerInstance@1000000000 : Text;
    BEGIN
      lServerInstance := GetWindowsUrl();
      FindAndRemovePrefix(lServerInstance, '/');
      FindAndRemoveSuffix(lServerInstance, '/');
      EXIT(lServerInstance);
    END;

    PROCEDURE ClientPath@1000000008() : Text;
    VAR
      lAssembly@1000000000 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Reflection.Assembly" RUNONCLIENT;
    BEGIN
      EXIT(lAssembly.GetEntryAssembly().Location);
    END;

    PROCEDURE RunClient@1000000009(pServerName@1000000000 : Text;pServerPort@1000000001 : Integer;pServerInstance@1000000002 : Text;pProfileName@1000000003 : Text;pConfigurationMode@1000000004 : Boolean);
    VAR
      lProcess@1000000007 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.Process" RUNONCLIENT;
      lArguments@1000000006 : Text;
      lUrl@1000000005 : Text;
    BEGIN
      IF ((pServerName <> '') AND (pServerPort <> 0) AND (pServerInstance <> '')) THEN
        lUrl := STRSUBSTNO('dynamicsnav://%1:%2/%3', pServerName, pServerPort, pServerInstance)
      ELSE
        lUrl := GETURL(CLIENTTYPE::Windows);
      lArguments := STRSUBSTNO('"%1"', lUrl);
      IF (pProfileName <> '') THEN
        lArguments := lArguments + ' ' + STRSUBSTNO('-profile:"%1"', pProfileName);
      IF (pConfigurationMode) THEN
        lArguments := lArguments + ' -configure';
      lProcess.Start(ClientPath(), lArguments);
    END;

    PROCEDURE RunClientForProfile@1000000000(pProfile@1000000001 : Record 2000000072);
    BEGIN
      RunClient('', 0, '', pProfile."Profile ID", FALSE);
    END;

    PROCEDURE RunClientForProfileConfig@1000000010(pProfile@1000000000 : Record 2000000072);
    BEGIN
      RunClient('', 0, '', pProfile."Profile ID", TRUE);
    END;

    PROCEDURE "--- Tools ---"@1000000004();
    BEGIN
    END;

    LOCAL PROCEDURE GetWindowsUrl@1000000005() : Text;
    VAR
      lUrl@1000000000 : Text;
      lPrefix@1000000001 : Text;
    BEGIN
      lUrl := GETURL(CLIENTTYPE::Windows);
      FindAndRemovePrefix(lUrl, 'dynamicsnav://');
      EXIT(lUrl);
    END;

    LOCAL PROCEDURE FindAndRemovePrefix@1000000006(VAR pText@1000000000 : Text;pPrefix@1000000001 : Text) : Boolean;
    VAR
      lPrefixIndex@1000000002 : Integer;
      lResult@1000000003 : Boolean;
    BEGIN
      lPrefixIndex := STRPOS(LOWERCASE(pText), LOWERCASE(pPrefix));
      IF (lPrefixIndex > 0) THEN
      BEGIN
        IF (lPrefixIndex < STRLEN(pText)) THEN
          pText := COPYSTR(pText, lPrefixIndex + STRLEN(pPrefix), STRLEN(pText) - lPrefixIndex - STRLEN(pPrefix))
        ELSE
          pText := '';
        lResult := TRUE;
      END;
      EXIT(lResult);
    END;

    LOCAL PROCEDURE FindAndRemoveSuffix@1000000007(VAR pText@1000000001 : Text;pSuffix@1000000000 : Text) : Boolean;
    VAR
      lSuffixIndex@1000000002 : Integer;
      lResult@1000000003 : Boolean;
    BEGIN
      lSuffixIndex := STRPOS(LOWERCASE(pText), LOWERCASE(pSuffix));
      IF (lSuffixIndex > 0) THEN
      BEGIN
        IF (lSuffixIndex > 1) THEN
          pText := COPYSTR(pText, 1, lSuffixIndex - 1)
        ELSE
          pText := '';
        lResult := TRUE;
      END;
      EXIT(lResult);
    END;

    BEGIN
    {
      //DOC NA2015.2  JH 07/05/2014 - Created
      //DOC NA2016.10 JH 14/10/2015 - Upgraded to 2016
    }
    END.
  }
}

