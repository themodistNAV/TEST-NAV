OBJECT Page 9062470 Migration Card Lines
{
  OBJECT-PROPERTIES
  {
    Date=10/05/16;
    Time=12:00:00 PM;
    Version List=NA2016.15;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Migration Card Lines;
               ENG=Migration Card Lines];
    SourceTable=Table9062374;
    SourceTableView=SORTING(Migration Code,Full Hash);
    PageType=ListPart;
    OnAfterGetRecord=BEGIN
                       UpdateGlobals();
                     END;

    OnNewRecord=BEGIN
                  Rec.InitRecord();
                  CLEAR(DescriptionText);
                END;

    OnAfterGetCurrRecord=BEGIN
                           CurrentRecord := Rec;
                           UpdateGlobals();
                         END;

    ActionList=ACTIONS
    {
      { 1000000015;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1000000016;1 ;Action    ;
                      Name=UpAction;
                      CaptionML=[ENU=Up;
                                 ENG=Up];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=MoveUp;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MigrationManagement.MoveLineUp(Rec);
                                 CurrPage.UPDATE(TRUE);
                               END;
                                }
      { 1000000017;1 ;Action    ;
                      Name=DownAction;
                      CaptionML=[ENU=Down;
                                 ENG=Down];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=MoveDown;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MigrationManagement.MoveLineDown(Rec);
                                 CurrPage.UPDATE(TRUE);
                               END;
                                }
      { 1000000018;1 ;Separator  }
      { 1000000019;1 ;Action    ;
                      Name=UnindentAction;
                      CaptionML=[ENU=Unindent;
                                 ENG=Unindent];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousSet;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MigrationManagement.UnindentLine(Rec);
                                 CurrPage.UPDATE(TRUE);
                               END;
                                }
      { 1000000020;1 ;Action    ;
                      Name=IndentAction;
                      CaptionML=[ENU=Indent;
                                 ENG=Indent];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextSet;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MigrationManagement.IndentLine(Rec);
                                 CurrPage.UPDATE(TRUE);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1000000000;0;Container;
                ContainerType=ContentArea }

    { 1000000001;1;Group  ;
                Name=Group;
                CaptionML=[ENU=Group;
                           ENG=Group];
                IndentationColumnName=Indentation;
                IndentationControls=DescriptionField;
                GroupType=Repeater }

    { 1000000004;2;Field  ;
                SourceExpr=Type;
                StyleExpr=Style;
                OnValidate=BEGIN
                             UpdateGlobals();
                           END;
                            }

    { 1000000002;2;Field  ;
                Name=DescriptionField;
                CaptionML=[ENU=Description;
                           ENG=Description];
                SourceExpr=DescriptionText;
                StyleExpr=Style;
                OnValidate=BEGIN
                             Rec.ValidateDescriptionText(DescriptionText);
                           END;

                OnLookup=BEGIN
                           Rec.DescriptionLookup();
                         END;
                          }

    { 1000000014;2;Field  ;
                SourceExpr="XMLport ID";
                Editable=XmlPortEditable;
                StyleExpr=Style }

    { 1000000021;2;Field  ;
                Name=TableField;
                CaptionML=[ENU=Table;
                           ENG=Table];
                SourceExpr=TableText;
                Editable=TableEditable;
                StyleExpr=Style;
                OnValidate=BEGIN
                             ObjectFieldToolkit.ValidateTableName(Rec."Table ID", TableText, FALSE);
                             Rec.VALIDATE("Table ID");
                             UpdateGlobals();
                           END;

                OnLookup=BEGIN
                           IF (ObjectFieldToolkit.TableLookup(Rec."Table ID")) THEN
                           BEGIN
                             Rec.VALIDATE("Table ID");
                             UpdateGlobals();
                           END;
                         END;
                          }

    { 1000000022;2;Field  ;
                SourceExpr="Table Filter";
                StyleExpr=Style;
                OnDrillDown=BEGIN
                              IF (TableEditable) THEN
                              BEGIN
                                EditTableFilter();
                                UpdateGlobals();
                              END;
                            END;
                             }

    { 1000000023;2;Field  ;
                SourceExpr=Enabled;
                OnValidate=BEGIN
                             UpdateGlobals();
                             CurrPage.UPDATE(TRUE);
                           END;
                            }

    { 1000000005;2;Field  ;
                SourceExpr=Sequence;
                Visible=FALSE;
                StyleExpr=Style }

    { 1000000006;2;Field  ;
                SourceExpr=Hash;
                Visible=FALSE;
                Editable=FALSE;
                StyleExpr=Style }

    { 1000000007;2;Field  ;
                SourceExpr="Full Hash";
                Visible=FALSE;
                Editable=FALSE;
                StyleExpr=Style }

    { 1000000008;2;Field  ;
                SourceExpr="Parent ID";
                Visible=FALSE;
                Editable=FALSE;
                StyleExpr=Style }

    { 1000000009;2;Field  ;
                SourceExpr="Parent Full Hash";
                Visible=FALSE;
                Editable=FALSE;
                StyleExpr=Style }

    { 1000000003;2;Field  ;
                SourceExpr=ID;
                Visible=FALSE;
                Editable=FALSE;
                StyleExpr=Style }

    { 1000000010;2;Field  ;
                SourceExpr="Created By";
                Visible=FALSE;
                Editable=FALSE;
                StyleExpr=Style }

    { 1000000011;2;Field  ;
                SourceExpr="Created Date Time";
                Visible=FALSE;
                Editable=FALSE;
                StyleExpr=Style }

    { 1000000012;2;Field  ;
                SourceExpr="Modified By";
                Visible=FALSE;
                Editable=FALSE;
                StyleExpr=Style }

    { 1000000013;2;Field  ;
                SourceExpr="Modified Date Time";
                Visible=FALSE;
                Editable=FALSE;
                StyleExpr=Style }

  }
  CODE
  {
    VAR
      CurrentRecord@1000000003 : Record 9062374;
      MigrationManagement@1000000001 : Codeunit 9062328;
      ObjectFieldToolkit@1000000005 : Codeunit 9062343;
      DescriptionText@1000000000 : Text;
      Style@1000000002 : Text;
      XmlPortEditable@1000000007 : Boolean INDATASET;
      TableText@1000000004 : Text;
      TableEditable@1000000006 : Boolean INDATASET;

    PROCEDURE GetCurrentRecord@1000000001(VAR pCurrentRecord@1000000000 : Record 9062374);
    BEGIN
      pCurrentRecord := CurrentRecord;
    END;

    LOCAL PROCEDURE UpdateGlobals@1000000000();
    BEGIN
      DescriptionText := Rec.Description;
      XmlPortEditable := (Rec.Type = Rec.Type::XMLport);
      Rec.CALCFIELDS("Table Caption");
      TableText := Rec."Table Caption";
      TableEditable := (Rec.Type = Rec.Type::XMLport);
      Style := Rec.GetStyle();
    END;

    PROCEDURE RunCurrentXmlPort@1000000002();
    BEGIN
      Rec.TESTFIELD(Type, Rec.Type::XMLport);
      Rec.TESTFIELD("XMLport ID");
      XMLPORT.RUN(Rec."XMLport ID");
    END;

    BEGIN
    {
      //DOC NA2016.11 JH 24/11/2015 - Created
      //DOC NA2016.14 JH 04/03/2016 - "RunCurrentXmlPort" added
      //DOC NA2016.15 JH 10/05/2016 - CfMD amendments
    }
    END.
  }
}

