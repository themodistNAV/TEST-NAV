OBJECT Codeunit 9062272 Auto Message Actions
{
  OBJECT-PROPERTIES
  {
    Date=10/05/16;
    Time=12:00:00 PM;
    Version List=NA2016.15;
  }
  PROPERTIES
  {
    TableNo=9062278;
    OnRun=VAR
            MessageType@1000000000 : Record 9062274;
            eMessageTypeNotFound@1000000001 : TextConst 'ENU=Message type "%1" not found;ENG=Message type "%1" not found';
          BEGIN
            nAblementSetup.GET();
            IF MessageType.GET("Message Type Code") THEN BEGIN
              CASE MessageType."Action Function No." OF
                '005' : Action_5(Rec);  //Workflow response
              END;
            END ELSE
              MESSAGE(eMessageTypeNotFound, "Message Type Code");
          END;

  }
  CODE
  {
    VAR
      smtpmail@1000000000 : Codeunit 400;
      nAblementSetup@1000000001 : Record 9062229;
      Logger@1000000002 : Record 9062280;
      EMailTmp@1000000006 : TEMPORARY Record 9062281;
      EMailLineTmp@1000000005 : TEMPORARY Record 9062282;
      EMailAttachmentTmp@1000000004 : TEMPORARY Record 9062283;

    PROCEDURE Action_5@1000000006(Entry@1000000000 : Record 9062278);
    VAR
      WFlowLine@1000000001 : Record 9062266;
      WFlowResp@1000000002 : Record 9062259;
      Resp@1000000003 : Code[10];
      RespVal@1000000004 : Text[1024];
      Keyword@1000000005 : Record 9062279;
      WFlowMgt@1000000006 : Codeunit 9062258;
      OrigResp@1000000007 : Code[20];
      WFGuid@1000000008 : GUID;
      TheCompanyName@1000000009 : Text[50];
      WFlowWS@1000000010 : Codeunit 9062263;
      eProcessingEntry@1000000011 : TextConst 'ENU=Processing entry %1 with Action_5;ENG=Processing entry %1 with Action_5';
      eWorkflowGuid@1000000012 : TextConst 'ENU=WFLOWGUID;ENG=WFLOWGUID';
      eCompany@1000000013 : TextConst 'ENU=COMPANY;ENG=COMPANY';
      eResponse@1000000014 : TextConst 'ENU=RESPONSE;ENG=RESPONSE';
      eResponseValue@1000000015 : TextConst 'ENU=RESPONSEVALUE;ENG=RESPONSEVALUE';
      eErrorProcessingResponse@1000000016 : TextConst 'ENU=Error processing response;ENG=Error processing response';
      eDidntFindKeyword@1000000017 : TextConst 'ENU=Didn''t find keyword "%1";ENG=Didn''t find keyword "%1"';
    BEGIN
      Logger.Log('AUTOMSG', Logger.Type::Debug, STRSUBSTNO(eProcessingEntry, Entry."GUID No."), USERID);
      IF Keyword.GET(Entry."GUID No.",eWorkflowGuid) THEN BEGIN
        EVALUATE(WFGuid,Keyword.Value);

        IF Keyword.GET(Entry."GUID No.",eCompany) THEN BEGIN
          TheCompanyName := Keyword.Value;

          IF Keyword.GET(Entry."GUID No.",eResponse) THEN BEGIN
            Resp := Keyword.Value;
            IF Keyword.GET(Entry."GUID No.",eResponseValue) THEN RespVal := Keyword.Value;
            IF TheCompanyName <> COMPANYNAME THEN BEGIN
              IF NOT WFlowMgt.ProcessResponseViaWS(TheCompanyName,WFGuid,Resp,RespVal) THEN BEGIN
                Entry.Errored := TRUE;
                Entry."Error Reason" := eErrorProcessingResponse;
              END;
            END ELSE BEGIN
              WFlowWS.RespondToWorkflowWithAutoMsg(WFGuid,Resp,RespVal,Entry);
            END;
            Entry.Completed := TRUE;
            Entry.MODIFY;
          END;

        END ELSE BEGIN
          Entry.Errored := TRUE;
          Entry."Error Reason" := STRSUBSTNO(eDidntFindKeyword, eCompany);
          Entry.MODIFY;
        END;
      END ELSE BEGIN
        Entry.Errored := TRUE;
        Entry."Error Reason" := STRSUBSTNO(eDidntFindKeyword, eWorkflowGuid);
        Entry.MODIFY;
      END;
    END;

    PROCEDURE SetMailItem@9062230(pEMail@9062229 : Record 9062281;VAR pEMailLine@9062230 : Record 9062282;VAR pEMailAttachment@9062231 : Record 9062283);
    BEGIN
      EMailTmp := pEMail;

      EMailLineTmp.RESET();
      EMailLineTmp.DELETEALL();
      IF (pEMailLine.FINDSET()) THEN
      REPEAT
        EMailLineTmp := pEMailLine;
        EMailLineTmp.INSERT();
      UNTIL (pEMailLine.NEXT() = 0);

      EMailAttachmentTmp.RESET();
      EMailAttachmentTmp.DELETEALL();
      IF (pEMailAttachment.FINDSET()) THEN
      REPEAT
        EMailAttachmentTmp := pEMailAttachment;
        EMailAttachmentTmp.INSERT();
      UNTIL (pEMailAttachment.NEXT() = 0);
    END;

    BEGIN
    {
      //DOC NA2015.1  JH 10/08/2012 - Migrated to 2013
      //DOC NA2016.10 JH 26/08/2015 - Upgraded to 2016
      //DOC NA2016.15 JH 18/04/2016 - CfMD amendments
    }
    END.
  }
}

