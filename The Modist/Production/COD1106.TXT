OBJECT Codeunit 1106 CostJnlManagement
{
  OBJECT-PROPERTIES
  {
    Date=09/09/14;
    Time=12:00:00 PM;
    Version List=NAVW18.00;
  }
  PROPERTIES
  {
    Permissions=TableData 1100=imd,
                TableData 1102=imd;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      OpenFromBatch@1000 : Boolean;
      Text001@1001 : TextConst 'ENU=STANDARD;ENG=STANDARD';
      Text002@1002 : TextConst 'ENU=Standard Template;ENG=Standard Template';
      Text003@1003 : TextConst 'ENU=DEFAULT;ENG=DEFAULT';
      Text004@1004 : TextConst 'ENU=Default Batch;ENG=Default Batch';

    PROCEDURE TemplateSelection@1(VAR CostJnlLine@1000 : Record 1101;VAR JnlSelected@1001 : Boolean);
    VAR
      CostJnlTemplate@1002 : Record 1100;
    BEGIN
      JnlSelected := TRUE;
      CostJnlTemplate.RESET;

      CASE CostJnlTemplate.COUNT OF
        0:
          BEGIN
            CostJnlTemplate.INIT;
            CostJnlTemplate.Name := Text001;
            CostJnlTemplate.Description := Text002;
            CostJnlTemplate.INSERT(TRUE);
          END;
        1:
          CostJnlTemplate.FINDFIRST;
        ELSE
          JnlSelected := PAGE.RUNMODAL(0,CostJnlTemplate) = ACTION::LookupOK;
      END;

      IF JnlSelected THEN BEGIN
        CostJnlLine.FILTERGROUP := 2;
        CostJnlLine.SETRANGE("Journal Template Name",CostJnlTemplate.Name);
        CostJnlLine.FILTERGROUP := 0;
        IF OpenFromBatch THEN BEGIN
          CostJnlLine."Journal Template Name" := '';
          PAGE.RUN(PAGE::"Cost Journal",CostJnlLine);
        END;
      END;
    END;

    PROCEDURE TemplateSelectionFromBatch@15(VAR CostJnlBatch@1000 : Record 1102);
    VAR
      CostJnlLine@1002 : Record 1101;
      CostJnlTemplate@1003 : Record 1100;
    BEGIN
      OpenFromBatch := TRUE;
      CostJnlTemplate.GET(CostJnlBatch."Journal Template Name");
      CostJnlBatch.TESTFIELD(Name);

      CostJnlLine.FILTERGROUP := 2;
      CostJnlLine.SETRANGE("Journal Template Name",CostJnlTemplate.Name);
      CostJnlLine.FILTERGROUP := 0;

      CostJnlLine."Journal Template Name" := '';
      CostJnlLine."Journal Batch Name" := CostJnlBatch.Name;
      PAGE.RUN(PAGE::"Cost Journal",CostJnlLine);
    END;

    PROCEDURE OpenJnl@2(VAR CostJnlBatchName@1000 : Code[10];VAR CostJnlLine@1001 : Record 1101);
    BEGIN
      CheckTemplateName(CostJnlLine.GETRANGEMAX("Journal Template Name"),CostJnlBatchName);
      CostJnlLine.FILTERGROUP := 2;
      CostJnlLine.SETRANGE("Journal Batch Name",CostJnlBatchName);
      CostJnlLine.FILTERGROUP := 0;
    END;

    PROCEDURE OpenJnlBatch@6(VAR CostJnlBatch@1000 : Record 1102);
    VAR
      CostJnlTemplate@1004 : Record 1100;
      CostJnlLine@1003 : Record 1101;
      JnlSelected@1001 : Boolean;
    BEGIN
      IF CostJnlBatch.GETFILTER("Journal Template Name") <> '' THEN
        EXIT;
      CostJnlBatch.FILTERGROUP(2);
      IF CostJnlBatch.GETFILTER("Journal Template Name") <> '' THEN BEGIN
        CostJnlBatch.FILTERGROUP(0);
        EXIT;
      END;
      CostJnlBatch.FILTERGROUP(0);

      IF NOT CostJnlBatch.FINDFIRST THEN BEGIN
        IF NOT CostJnlTemplate.FINDFIRST THEN
          TemplateSelection(CostJnlLine,JnlSelected);
        IF CostJnlTemplate.FINDFIRST THEN
          CheckTemplateName(CostJnlTemplate.Name,CostJnlBatch.Name);
        IF NOT CostJnlTemplate.FINDFIRST THEN
          TemplateSelection(CostJnlLine,JnlSelected);
        IF CostJnlTemplate.FINDFIRST THEN
          CheckTemplateName(CostJnlTemplate.Name,CostJnlBatch.Name);
      END;
      CostJnlBatch.FINDFIRST;
      JnlSelected := TRUE;
      IF CostJnlBatch.GETFILTER("Journal Template Name") <> '' THEN
        CostJnlTemplate.SETRANGE(Name,CostJnlBatch.GETFILTER("Journal Template Name"));
      CASE CostJnlTemplate.COUNT OF
        1:
          CostJnlTemplate.FINDFIRST;
        ELSE
          JnlSelected := PAGE.RUNMODAL(0,CostJnlTemplate) = ACTION::LookupOK;
      END;
      IF NOT JnlSelected THEN
        ERROR('');

      CostJnlBatch.FILTERGROUP(2);
      CostJnlBatch.SETRANGE("Journal Template Name",CostJnlTemplate.Name);
      CostJnlBatch.FILTERGROUP(0);
    END;

    PROCEDURE CheckTemplateName@7(CostJnlTemplateName@1001 : Code[10];VAR CostJnlBatchName@1002 : Code[10]);
    VAR
      CostJnlBatch@1000 : Record 1102;
    BEGIN
      CostJnlBatch.SETRANGE("Journal Template Name",CostJnlTemplateName);
      IF NOT CostJnlBatch.GET(CostJnlTemplateName,CostJnlBatchName) THEN BEGIN
        IF NOT CostJnlBatch.FINDFIRST THEN BEGIN
          CostJnlBatch.INIT;
          CostJnlBatch."Journal Template Name" := CostJnlTemplateName;
          CostJnlBatch.Name := Text003;
          CostJnlBatch.Description := Text004;
          CostJnlBatch.INSERT(TRUE);
          COMMIT;
        END;
        CostJnlBatchName := CostJnlBatch.Name;
      END;
    END;

    PROCEDURE CheckName@11(CostJnlBatchName@1000 : Code[10];VAR CostJnlLine@1001 : Record 1101);
    VAR
      CostJnlBatch@1002 : Record 1102;
    BEGIN
      CostJnlBatch.GET(CostJnlLine.GETRANGEMAX("Journal Template Name"),CostJnlBatchName);
    END;

    PROCEDURE SetName@5(CostJnlBatchName@1000 : Code[10];VAR CostJnlLine@1001 : Record 1101);
    BEGIN
      CostJnlLine.FILTERGROUP := 2;
      CostJnlLine.SETRANGE("Journal Batch Name",CostJnlBatchName);
      CostJnlLine.FILTERGROUP := 0;
      IF CostJnlLine.FINDFIRST THEN;
    END;

    PROCEDURE LookupName@4(VAR CostJnlBatchName@1000 : Code[10];VAR CostJnlLine@1001 : Record 1101);
    VAR
      CostJnlBatch@1002 : Record 1102;
    BEGIN
      COMMIT;
      CostJnlBatch."Journal Template Name" := CostJnlLine.GETRANGEMAX("Journal Template Name");
      CostJnlBatch.Name := CostJnlLine.GETRANGEMAX("Journal Batch Name");
      CostJnlBatch."Journal Template Name" := CostJnlLine."Journal Template Name";
      CostJnlBatch.Name := CostJnlLine."Journal Batch Name";
      CostJnlBatch.FILTERGROUP(2);
      CostJnlBatch.SETRANGE("Journal Template Name",CostJnlBatch."Journal Template Name");
      CostJnlBatch.FILTERGROUP(0);
      IF PAGE.RUNMODAL(PAGE::"Cost Journal Batches",CostJnlBatch) = ACTION::LookupOK THEN BEGIN
        CostJnlBatchName := CostJnlBatch.Name;
        SetName(CostJnlBatchName,CostJnlLine);
      END;
    END;

    PROCEDURE CalcBalance@8(VAR CostJnlLine@1000 : Record 1101;LastCostJnlLine@1001 : Record 1101;VAR Balance@1002 : Decimal;VAR TotalBalance@1003 : Decimal;VAR ShowBalance@1004 : Boolean;VAR ShowTotalBalance@1005 : Boolean);
    VAR
      CostJnlLine2@1006 : Record 1101;
    BEGIN
      CostJnlLine2.COPYFILTERS(CostJnlLine);
      ShowTotalBalance := CostJnlLine2.CALCSUMS(Balance);
      IF ShowTotalBalance THEN BEGIN
        TotalBalance := CostJnlLine2.Balance;
        IF CostJnlLine."Line No." = 0 THEN
          TotalBalance := TotalBalance + LastCostJnlLine.Balance;
      END;

      IF CostJnlLine."Line No." <> 0 THEN BEGIN
        CostJnlLine2.SETRANGE("Line No.",0,CostJnlLine."Line No.");
        ShowBalance := CostJnlLine2.CALCSUMS(Balance);
        IF ShowBalance THEN
          Balance := CostJnlLine2.Balance;
      END ELSE BEGIN
        CostJnlLine2.SETRANGE("Line No.",0,LastCostJnlLine."Line No.");
        ShowBalance := CostJnlLine2.CALCSUMS(Balance);
        IF ShowBalance THEN BEGIN
          Balance := CostJnlLine2.Balance;
          CostJnlLine2.COPYFILTERS(CostJnlLine);
          CostJnlLine2 := LastCostJnlLine;
          IF CostJnlLine2.NEXT = 0 THEN
            Balance := Balance + LastCostJnlLine.Balance;
        END;
      END;
    END;

    BEGIN
    END.
  }
}

