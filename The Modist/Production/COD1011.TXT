OBJECT Codeunit 1011 Job Jnl.-Check Line
{
  OBJECT-PROPERTIES
  {
    Date=15/09/15;
    Time=12:00:00 PM;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    TableNo=210;
    OnRun=BEGIN
            GLSetup.GET;
            RunCheck(Rec);
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=cannot be a closing date.;ENG=cannot be a closing date.';
      Text001@1001 : TextConst 'ENU=is not within your range of allowed posting dates.;ENG=is not within your range of allowed posting/tax point dates.';
      Text002@1002 : TextConst 'ENU=The combination of dimensions used in %1 %2, %3, %4 is blocked. %5;ENG=The combination of dimensions used in %1 %2, %3, %4 is blocked. %5';
      Text003@1003 : TextConst 'ENU=A dimension used in %1 %2, %3, %4 has caused an error. %5;ENG=A dimension used in %1 %2, %3, %4 has caused an error. %5';
      Location@1006 : Record 14;
      GLSetup@1004 : Record 98;
      UserSetup@1005 : Record 91;
      DimMgt@1007 : Codeunit 408;
      TimeSheetMgt@1011 : Codeunit 950;
      AllowPostingFrom@1008 : Date;
      AllowPostingTo@1009 : Date;
      Text004@1010 : TextConst '@@@="%1=Item;%2=JobJnlline.""No."";%3=Job;%4=JobJnlline.""Job No."";%5=JobJnlline.""Journal Batch Name"";%6=""Line No"";%7=JobJnlline.""Line No.""";ENU="You must post more usage of %1 %2 in %3 %4 before you can post job journal %5 %6 = %7.";ENG="You must post more usage of %1 %2 in %3 %4 before you can post job journal %5 %6 = %7."';

    PROCEDURE RunCheck@1(VAR JobJnlLine@1000 : Record 210);
    VAR
      Job@1004 : Record 167;
      TableID@1002 : ARRAY [10] OF Integer;
      No@1003 : ARRAY [10] OF Code[20];
    BEGIN
      WITH JobJnlLine DO BEGIN
        IF EmptyLine THEN
          EXIT;
        TESTFIELD("Job No.");
        TESTFIELD("Job Task No.");
        TESTFIELD("No.");
        TESTFIELD("Posting Date");
        TESTFIELD(Quantity);

        Job.GET("Job No.");
        Job.TESTFIELD(Status,Job.Status::Order);

        IF NORMALDATE("Posting Date") <> "Posting Date" THEN
          FIELDERROR("Posting Date",Text000);

        IF ("Document Date" <> 0D) AND ("Document Date" <> NORMALDATE("Document Date")) THEN
          FIELDERROR("Document Date",Text000);

        IF DateNotAllowed("Posting Date") THEN
          FIELDERROR("Posting Date",Text001);

        IF "Time Sheet No." <> '' THEN
          TimeSheetMgt.CheckJobJnlLine(JobJnlLine);

        IF NOT DimMgt.CheckDimIDComb("Dimension Set ID") THEN
          ERROR(
            Text002,
            TABLECAPTION,"Journal Template Name","Journal Batch Name","Line No.",
            DimMgt.GetDimCombErr);

        TableID[1] := DATABASE::Job;
        No[1] := "Job No.";
        TableID[2] := DimMgt.TypeToTableID2(Type);
        No[2] := "No.";
        TableID[3] := DATABASE::"Resource Group";
        No[3] := "Resource Group No.";
        IF NOT DimMgt.CheckDimValuePosting(TableID,No,"Dimension Set ID") THEN BEGIN
          IF "Line No." <> 0 THEN
            ERROR(
              Text003,
              TABLECAPTION,"Journal Template Name","Journal Batch Name","Line No.",
              DimMgt.GetDimValuePostingErr);
          ERROR(DimMgt.GetDimValuePostingErr);
        END;

        IF Type = Type::Item THEN BEGIN
          IF ("Quantity (Base)" < 0) AND ("Entry Type" = "Entry Type"::Usage) THEN
            CheckItemQuantityJobJnl(JobJnlLine);
          GetLocation("Location Code");
          IF Location."Directed Put-away and Pick" THEN
            TESTFIELD("Bin Code",'')
          ELSE
            IF Location."Bin Mandatory" THEN
              TESTFIELD("Bin Code");
        END;
        IF "Line Type" IN ["Line Type"::Contract,"Line Type"::"Both Schedule and Contract"] THEN
          TESTFIELD(Chargeable,TRUE);
      END;
    END;

    LOCAL PROCEDURE GetLocation@7300(LocationCode@1000 : Code[10]);
    BEGIN
      IF LocationCode = '' THEN
        CLEAR(Location)
      ELSE
        IF Location.Code <> LocationCode THEN
          Location.GET(LocationCode);
    END;

    LOCAL PROCEDURE DateNotAllowed@2(PostingDate@1000 : Date) : Boolean;
    BEGIN
      IF (AllowPostingFrom = 0D) AND (AllowPostingTo = 0D) THEN BEGIN
        IF USERID <> '' THEN
          IF UserSetup.GET(USERID) THEN BEGIN
            AllowPostingFrom := UserSetup."Allow Posting From";
            AllowPostingTo := UserSetup."Allow Posting To";
          END;
        IF (AllowPostingFrom = 0D) AND (AllowPostingTo = 0D) THEN BEGIN
          GLSetup.GET;
          AllowPostingFrom := GLSetup."Allow Posting From";
          AllowPostingTo := GLSetup."Allow Posting To";
        END;
        IF AllowPostingTo = 0D THEN
          AllowPostingTo := 31129999D;
      END;
      EXIT((PostingDate < AllowPostingFrom) OR (PostingDate > AllowPostingTo));
    END;

    LOCAL PROCEDURE CheckItemQuantityJobJnl@15(VAR JobJnlline@1001 : Record 210);
    VAR
      Item@1003 : Record 27;
      Job@1007 : Record 167;
    BEGIN
      Job.GET(JobJnlline."Job No.");
      IF (Job.GetQuantityAvailable(JobJnlline."No.",JobJnlline."Location Code",JobJnlline."Variant Code",0,2) +
          JobJnlline."Quantity (Base)") < 0
      THEN
        ERROR(
          Text004,Item.TABLECAPTION,JobJnlline."No.",Job.TABLECAPTION,
          JobJnlline."Job No.",JobJnlline."Journal Batch Name",
          JobJnlline.FIELDCAPTION("Line No."),JobJnlline."Line No.");
    END;

    BEGIN
    END.
  }
}

