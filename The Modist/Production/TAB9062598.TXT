OBJECT Table 9062598 Panel Value
{
  OBJECT-PROPERTIES
  {
    Date=10/05/16;
    Time=12:00:00 PM;
    Version List=NA2016.15;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Panel Value;
               ENG=Panel Value];
  }
  FIELDS
  {
    { 1   ;   ;ID                  ;Integer       ;AutoIncrement=Yes;
                                                   CaptionML=[ENU=ID;
                                                              ENG=ID] }
    { 2   ;   ;Value Type          ;Option        ;CaptionML=[ENU=Value Type;
                                                              ENG=Value Type];
                                                   OptionCaptionML=[ENU=" ,Text,Numeric,BLOB";
                                                                    ENG=" ,Text,Numeric,BLOB"];
                                                   OptionString=[ ,Text,Numeric,BLOB] }
    { 3   ;   ;Text Value          ;Text250       ;CaptionML=[ENU=Text Value;
                                                              ENG=Text Value] }
    { 4   ;   ;Numeric Value       ;Decimal       ;OnValidate=BEGIN
                                                                Rec.VALIDATE("Text Value", FORMAT(Rec."Numeric Value", 0, 1));
                                                              END;

                                                   CaptionML=[ENU=Numeric Value;
                                                              ENG=Numeric Value] }
    { 5   ;   ;BLOB Value          ;BLOB          ;CaptionML=[ENU=BLOB Value;
                                                              ENG=BLOB Value] }
  }
  KEYS
  {
    {    ;ID                                      ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      mFieldRefTools@1000000000 : Codeunit 9062241;

    PROCEDURE DetectFieldRefValueType@1000000001(pFieldRef@1000000000 : FieldRef);
    BEGIN
      IF (mFieldRefTools.FieldRefIsBlob(pFieldRef)) THEN
        Rec.VALIDATE("Value Type", Rec."Value Type"::BLOB)
      ELSE IF (mFieldRefTools.FieldRefIsNumeric(pFieldRef)) THEN
        Rec.VALIDATE("Value Type", Rec."Value Type"::Numeric)
      ELSE
        Rec.VALIDATE("Value Type", Rec."Value Type"::Text);
    END;

    PROCEDURE GetValueFromFieldRef@1000000000(pFieldRef@1000000000 : FieldRef);
    BEGIN
      IF (mFieldRefTools.FieldRefIsFlowField(pFieldRef)) THEN
        pFieldRef.CALCFIELD();
      DetectFieldRefValueType(pFieldRef);
      CASE (Rec."Value Type") OF
        Rec."Value Type"::BLOB:
          BEGIN
            pFieldRef.CALCFIELD();
            Rec."BLOB Value" := pFieldRef.VALUE;
          END;
        Rec."Value Type"::Numeric:
          BEGIN
            Rec."Numeric Value" := pFieldRef.VALUE;
            Rec.VALIDATE("Numeric Value");
          END
        ELSE
          Rec.VALIDATE("Text Value", FORMAT(pFieldRef.VALUE, 0, 1));
      END;
    END;

    PROCEDURE SetValueToFieldRef@1000000002(VAR pFieldRef@1000000000 : FieldRef;pValidate@1000000001 : Boolean);
    BEGIN
      DetectFieldRefValueType(pFieldRef);
      CASE (Rec."Value Type") OF
        Rec."Value Type"::BLOB:
          pFieldRef.VALUE := Rec."BLOB Value";
        Rec."Value Type"::Numeric:
          pFieldRef.VALUE := Rec."Numeric Value";
        ELSE
          mFieldRefTools.TextToFieldRef(Rec."Text Value", pFieldRef);
      END;
      IF (pValidate) THEN
        pFieldRef.VALIDATE();
    END;

    BEGIN
    {
      //DOC NA2015.2  JH 08/05/2014 - Created
      //DOC NA2015.8  JH 13/07/2015 - Fixes
      //DOC NA2016.8  JH 28/08/2015 - Upgraded to 2016
      //DOC NA2016.15 JH 06/05/2016 - CfMD amendments
    }
    END.
  }
}

